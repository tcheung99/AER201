

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 01 22:18:10 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4620 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	smallconst
    51  001000                     __psmallconst:
    52                           	opt callstack 0
    53  001000  00                 	db	0
    54  001001                     _LCD_LINE4_ADDR:
    55                           	opt callstack 0
    56  001001  50                 	db	80
    57  001002                     __end_of_LCD_LINE4_ADDR:
    58                           	opt callstack 0
    59  001002                     _LCD_LINE3_ADDR:
    60                           	opt callstack 0
    61  001002  10                 	db	16
    62  001003                     __end_of_LCD_LINE3_ADDR:
    63                           	opt callstack 0
    64  001003                     _LCD_LINE2_ADDR:
    65                           	opt callstack 0
    66  001003  40                 	db	64
    67  001004                     __end_of_LCD_LINE2_ADDR:
    68                           	opt callstack 0
    69  001004                     _LCD_LINE1_ADDR:
    70                           	opt callstack 0
    71  001004  00                 	db	0
    72  001005                     __end_of_LCD_LINE1_ADDR:
    73                           	opt callstack 0
    74  001005                     _LCD_SIZE_VERT:
    75                           	opt callstack 0
    76  001005  04                 	db	4
    77  001006                     __end_of_LCD_SIZE_VERT:
    78                           	opt callstack 0
    79  001006                     _LCD_SIZE_HORZ:
    80                           	opt callstack 0
    81  001006  10                 	db	16
    82  001007                     __end_of_LCD_SIZE_HORZ:
    83                           	opt callstack 0
    84  0000                     _CCPR2L	set	4027
    85  0000                     _T2CON	set	4042
    86  0000                     _PR2	set	4043
    87  0000                     _CCP2CON	set	4026
    88  0000                     _CCP1CON	set	4029
    89  0000                     _LATD	set	3980
    90  0000                     _LATDbits	set	3980
    91  0000                     _INTCONbits	set	4082
    92  0000                     _SSPBUF	set	4041
    93  0000                     _SSPCON2bits	set	4037
    94  0000                     _SSPCON1	set	4038
    95  0000                     _SSPADD	set	4040
    96  0000                     _TRISCbits	set	3988
    97  0000                     _SSPCON1bits	set	4038
    98  0000                     _SSPCON2	set	4037
    99  0000                     _SSPSTAT	set	4039
   100                           
   101                           ; #config settings
   102  001007  00                 	db	0	; dummy byte at the end
   103  0000                     
   104                           	psect	cinit
   105  001096                     __pcinit:
   106                           	opt callstack 0
   107  001096                     start_initialization:
   108                           	opt callstack 0
   109  001096                     __initialization:
   110                           	opt callstack 0
   111                           
   112                           ; Clear objects allocated to COMRAM (7 bytes)
   113  001096  EE00  F001         	lfsr	0,__pbssCOMRAM
   114  00109A  0E07               	movlw	7
   115  00109C                     clear_0:
   116  00109C  6AEE               	clrf	postinc0,c
   117  00109E  06E8               	decf	wreg,f,c
   118  0010A0  E1FD               	bnz	clear_0
   119  0010A2                     end_of_initialization:
   120                           	opt callstack 0
   121  0010A2                     __end_of__initialization:
   122                           	opt callstack 0
   123  0010A2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   124  0010A4  6EF8               	movwf	tblptru,c
   125  0010A6  0E10               	movlw	high __Lsmallconst
   126  0010A8  6EF7               	movwf	tblptrh,c
   127  0010AA  0100               	movlb	0
   128  0010AC  EF04  F008         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMRAM
   131  000001                     __pbssCOMRAM:
   132                           	opt callstack 0
   133  000001                     _time:
   134                           	opt callstack 0
   135  000001                     	ds	7
   136                           
   137                           	psect	cstackCOMRAM
   138  000008                     __pcstackCOMRAM:
   139                           	opt callstack 0
   140  000008                     ??_rotateneg:
   141  000008                     ??_rotatepos:
   142  000008                     
   143                           ; 1 bytes @ 0x0
   144  000008                     	ds	2
   145  00000A                     ??_main:
   146                           
   147                           ; 1 bytes @ 0x2
   148  00000A                     	ds	2
   149                           
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 132 in file "main.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;  count           2    0        int 
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, status,2, cstack
   164 ;; Tracked objects:
   165 ;;		On entry : 0/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   173 ;;Total ram usage:        4 bytes
   174 ;; Hardware stack levels required when called:    1
   175 ;; This function calls:
   176 ;;		_rotateneg
   177 ;;		_rotatepos
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text0
   184  001008                     __ptext0:
   185                           	opt callstack 0
   186  001008                     _main:
   187                           	opt callstack 30
   188                           
   189                           ;main.c: 157:             rotatepos();
   190                           
   191                           ;incstack = 0
   192  001008  EC21  F008         	call	_rotatepos	;wreg free
   193                           
   194                           ;main.c: 158:             _delay((unsigned long)((200)*(10000000/4000.0)));
   195  00100C  0E03               	movlw	3
   196  00100E  6E0B               	movwf	(??_main+1)& (0+255),c
   197  001010  0E8A               	movlw	138
   198  001012  6E0A               	movwf	??_main& (0+255),c
   199  001014  0E56               	movlw	86
   200  001016                     u87:
   201  001016  2EE8               	decfsz	wreg,f,c
   202  001018  D7FE               	bra	u87
   203  00101A  2E0A               	decfsz	??_main& (0+255),f,c
   204  00101C  D7FC               	bra	u87
   205  00101E  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   206  001020  D7FA               	bra	u87
   207                           
   208                           ;main.c: 159:             rotateneg();
   209  001022  EC36  F008         	call	_rotateneg	;wreg free
   210                           
   211                           ;main.c: 160:             _delay((unsigned long)((200)*(10000000/4000.0)));
   212  001026  0E03               	movlw	3
   213  001028  6E0B               	movwf	(??_main+1)& (0+255),c
   214  00102A  0E8A               	movlw	138
   215  00102C  6E0A               	movwf	??_main& (0+255),c
   216  00102E  0E56               	movlw	86
   217  001030                     u97:
   218  001030  2EE8               	decfsz	wreg,f,c
   219  001032  D7FE               	bra	u97
   220  001034  2E0A               	decfsz	??_main& (0+255),f,c
   221  001036  D7FC               	bra	u97
   222  001038  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   223  00103A  D7FA               	bra	u97
   224                           
   225                           ;main.c: 161:             rotatepos();
   226  00103C  EC21  F008         	call	_rotatepos	;wreg free
   227  001040  D7E3               	goto	_main
   228  001042                     __end_of_main:
   229                           	opt callstack 0
   230                           
   231 ;; *************** function _rotatepos *****************
   232 ;; Defined at:
   233 ;;		line 110 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;Total ram usage:        2 bytes
   252 ;; Hardware stack levels used:    1
   253 ;; This function calls:
   254 ;;		Nothing
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261  001042                     __ptext1:
   262                           	opt callstack 0
   263  001042                     _rotatepos:
   264                           	opt callstack 30
   265                           
   266                           ;main.c: 117:         CCP2CON = 0b00111100 ;
   267                           
   268                           ;incstack = 0
   269  001042  0E3C               	movlw	60
   270  001044  6EBA               	movwf	4026,c	;volatile
   271                           
   272                           ;main.c: 119:     PR2 = 0b10011011 ;
   273  001046  0E9B               	movlw	155
   274  001048  6ECB               	movwf	4043,c	;volatile
   275                           
   276                           ;main.c: 120:     T2CON = 0b00000111 ;
   277  00104A  0E07               	movlw	7
   278  00104C  6ECA               	movwf	4042,c	;volatile
   279                           
   280                           ;main.c: 127:     CCPR2L = 0b00001010 ;
   281  00104E  0E0A               	movlw	10
   282  001050  6EBB               	movwf	4027,c	;volatile
   283                           
   284                           ;main.c: 128:         _delay((unsigned long)((1000)*(10000000/4000.0)));
   285  001052  0E0D               	movlw	13
   286  001054  6E09               	movwf	(??_rotatepos+1)& (0+255),c
   287  001056  0EAF               	movlw	175
   288  001058  6E08               	movwf	??_rotatepos& (0+255),c
   289  00105A  0EB6               	movlw	182
   290  00105C                     u107:
   291  00105C  2EE8               	decfsz	wreg,f,c
   292  00105E  D7FE               	bra	u107
   293  001060  2E08               	decfsz	??_rotatepos& (0+255),f,c
   294  001062  D7FC               	bra	u107
   295  001064  2E09               	decfsz	(??_rotatepos+1)& (0+255),f,c
   296  001066  D7FA               	bra	u107
   297  001068  D000               	nop2	
   298  00106A  0012               	return		;funcret
   299  00106C                     __end_of_rotatepos:
   300                           	opt callstack 0
   301                           
   302 ;; *************** function _rotateneg *****************
   303 ;; Defined at:
   304 ;;		line 91 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, status,2
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;Total ram usage:        2 bytes
   323 ;; Hardware stack levels used:    1
   324 ;; This function calls:
   325 ;;		Nothing
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text2
   332  00106C                     __ptext2:
   333                           	opt callstack 0
   334  00106C                     _rotateneg:
   335                           	opt callstack 30
   336                           
   337                           ;main.c: 97:         CCP2CON = 0b00101100 ;
   338                           
   339                           ;incstack = 0
   340  00106C  0E2C               	movlw	44
   341  00106E  6EBA               	movwf	4026,c	;volatile
   342                           
   343                           ;main.c: 99:     PR2 = 0b10011011 ;
   344  001070  0E9B               	movlw	155
   345  001072  6ECB               	movwf	4043,c	;volatile
   346                           
   347                           ;main.c: 100:     T2CON = 0b00000111 ;
   348  001074  0E07               	movlw	7
   349  001076  6ECA               	movwf	4042,c	;volatile
   350                           
   351                           ;main.c: 102:     CCPR2L = 0b00000100 ;
   352  001078  0E04               	movlw	4
   353  00107A  6EBB               	movwf	4027,c	;volatile
   354                           
   355                           ;main.c: 103:     _delay((unsigned long)((1000)*(10000000/4000.0)));
   356  00107C  0E0D               	movlw	13
   357  00107E  6E09               	movwf	(??_rotateneg+1)& (0+255),c
   358  001080  0EAF               	movlw	175
   359  001082  6E08               	movwf	??_rotateneg& (0+255),c
   360  001084  0EB6               	movlw	182
   361  001086                     u117:
   362  001086  2EE8               	decfsz	wreg,f,c
   363  001088  D7FE               	bra	u117
   364  00108A  2E08               	decfsz	??_rotateneg& (0+255),f,c
   365  00108C  D7FC               	bra	u117
   366  00108E  2E09               	decfsz	(??_rotateneg+1)& (0+255),f,c
   367  001090  D7FA               	bra	u117
   368  001092  D000               	nop2	
   369  001094  0012               	return		;funcret
   370  001096                     __end_of_rotateneg:
   371                           	opt callstack 0
   372                           
   373                           	psect	rparam
   374  0000                     tosu	equ	0xFFF
   375                           tosh	equ	0xFFE
   376                           tosl	equ	0xFFD
   377                           stkptr	equ	0xFFC
   378                           pclatu	equ	0xFFB
   379                           pclath	equ	0xFFA
   380                           pcl	equ	0xFF9
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           prodh	equ	0xFF4
   386                           prodl	equ	0xFF3
   387                           indf0	equ	0xFEF
   388                           postinc0	equ	0xFEE
   389                           postdec0	equ	0xFED
   390                           preinc0	equ	0xFEC
   391                           plusw0	equ	0xFEB
   392                           fsr0h	equ	0xFEA
   393                           fsr0l	equ	0xFE9
   394                           wreg	equ	0xFE8
   395                           indf1	equ	0xFE7
   396                           postinc1	equ	0xFE6
   397                           postdec1	equ	0xFE5
   398                           preinc1	equ	0xFE4
   399                           plusw1	equ	0xFE3
   400                           fsr1h	equ	0xFE2
   401                           fsr1l	equ	0xFE1
   402                           bsr	equ	0xFE0
   403                           indf2	equ	0xFDF
   404                           postinc2	equ	0xFDE
   405                           postdec2	equ	0xFDD
   406                           preinc2	equ	0xFDC
   407                           plusw2	equ	0xFDB
   408                           fsr2h	equ	0xFDA
   409                           fsr2l	equ	0xFD9
   410                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    6
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      6      13
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_rotateneg
    _main->_rotatepos

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
                                              2 COMRAM     4     4      0
                          _rotateneg
                          _rotatepos
 ---------------------------------------------------------------------------------
 (1) _rotatepos                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _rotateneg                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _rotateneg
   _rotatepos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      6       D       1       10.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      34        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 01 22:18:10 2019

            __CFG_CPD$ON 000000                       u87 1016                       u97 1030  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
           __CFG_CPB$OFF 000000                      u107 105C                      u117 1086  
                    _PR2 000FCB                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATD 000F8C                     _main 1008  
                   _time 0001                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0008  
                  _T2CON 000FCA            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
         __CFG_PBADEN$ON 000000          __initialization 1096             __end_of_main 1042  
                 ??_main 000A            __activetblptr 000001                   _CCPR2L 000FBB  
                 _SSPADD 000FC8                   _SSPBUF 000FC9           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                   clear_0 109C             __mediumconst 0000  
                 tblptrh 000FF7                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 10A2            ___rparam_used 000001           __pcstackCOMRAM 0008  
                _CCP1CON 000FBD                  _CCP2CON 000FBA       __size_of_rotateneg 002A  
     __size_of_rotatepos 002A                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
                _SSPSTAT 000FC7                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 1000                  __pcinit 1096                  __ramtop 1000  
                __ptext0 1008                  __ptext1 1042                  __ptext2 106C  
   end_of_initialization 10A2    __end_of_LCD_SIZE_HORZ 1007    __end_of_LCD_SIZE_VERT 1006  
                postinc0 000FEE        __end_of_rotateneg 1096        __end_of_rotatepos 106C  
              _TRISCbits 000F94      start_initialization 1096         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0001        __CFG_CCP2MX$PORTC 000000              __smallconst 1000  
               _LATDbits 000F8C           _LCD_LINE1_ADDR 1004           _LCD_LINE2_ADDR 1003  
         _LCD_LINE3_ADDR 1002           _LCD_LINE4_ADDR 1001         __CFG_WDTPS$32768 000000  
              _rotateneg 106C                _rotatepos 1042   __end_of_LCD_LINE1_ADDR 1005  
 __end_of_LCD_LINE2_ADDR 1004   __end_of_LCD_LINE3_ADDR 1003   __end_of_LCD_LINE4_ADDR 1002  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 1000  
     __CFG_BOREN$SBORDIS 000000               ?_rotateneg 0008               ?_rotatepos 0008  
          __size_of_main 003A               _INTCONbits 000FF2            _LCD_SIZE_HORZ 1006  
          _LCD_SIZE_VERT 1005              ??_rotateneg 0008              ??_rotatepos 0008  
            _SSPCON1bits 000FC6              _SSPCON2bits 000FC5  
