

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 04 03:36:00 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,inline
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataCOMRAM
   119  0036D2                     __pidataCOMRAM:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for _dists
   123  0036D2  0000               	dw	0
   124  0036D4  FFFF               	dw	65535
   125                           
   126                           ;initializer for _send
   127  0036D6  01                 	db	1
   128                           
   129                           	psect	mediumconst
   130  00FE26                     __pmediumconst:
   131                           	opt callstack 0
   132  00FE26  00                 	db	0
   133  00FE27                     _keys:
   134                           	opt callstack 0
   135  00FE27  31                 	db	49
   136  00FE28  32                 	db	50
   137  00FE29  33                 	db	51
   138  00FE2A  41                 	db	65
   139  00FE2B  34                 	db	52
   140  00FE2C  35                 	db	53
   141  00FE2D  36                 	db	54
   142  00FE2E  42                 	db	66
   143  00FE2F  37                 	db	55
   144  00FE30  38                 	db	56
   145  00FE31  39                 	db	57
   146  00FE32  43                 	db	67
   147  00FE33  2A                 	db	42
   148  00FE34  30                 	db	48
   149  00FE35  23                 	db	35
   150  00FE36  44                 	db	68
   151  00FE37  00                 	db	0
   152  00FE38                     __end_of_keys:
   153                           	opt callstack 0
   154  00FE38                     _LCD_LINE1_ADDR:
   155                           	opt callstack 0
   156  00FE38  00                 	db	0
   157  00FE39                     __end_of_LCD_LINE1_ADDR:
   158                           	opt callstack 0
   159  00FE39                     _LCD_SIZE_VERT:
   160                           	opt callstack 0
   161  00FE39  04                 	db	4
   162  00FE3A                     __end_of_LCD_SIZE_VERT:
   163                           	opt callstack 0
   164  00FE3A                     _LCD_SIZE_HORZ:
   165                           	opt callstack 0
   166  00FE3A  10                 	db	16
   167  00FE3B                     __end_of_LCD_SIZE_HORZ:
   168                           	opt callstack 0
   169  00FE3B  50                 	db	80
   170  00FE3C                     __end_of_LCD_LINE4_ADDR:
   171                           	opt callstack 0
   172  00FE3C  10                 	db	16
   173  00FE3D                     __end_of_LCD_LINE3_ADDR:
   174                           	opt callstack 0
   175  00FE3D  40                 	db	64
   176  00FE3E                     __end_of_LCD_LINE2_ADDR:
   177                           	opt callstack 0
   178  0000                     _T0CONbits	set	4053
   179  0000                     _LATAbits	set	3977
   180  0000                     _LATEbits	set	3981
   181  0000                     _LATCbits	set	3979
   182  0000                     _LATE	set	3981
   183  0000                     _TRISE	set	3990
   184  0000                     _LATC	set	3979
   185  0000                     _TRISC	set	3988
   186  0000                     _LATA	set	3977
   187  0000                     _TRISA	set	3986
   188  0000                     _LATB	set	3978
   189  0000                     _SSPBUF	set	4041
   190  0000                     _SSPCON2bits	set	4037
   191  0000                     _SSPCON1	set	4038
   192  0000                     _SSPADD	set	4040
   193  0000                     _TRISCbits	set	3988
   194  0000                     _SSPCON1bits	set	4038
   195  0000                     _SSPCON2	set	4037
   196  0000                     _SSPSTAT	set	4039
   197  0000                     _TRISAbits	set	3986
   198  0000                     _T1CON	set	4045
   199  0000                     _ADCON1	set	4033
   200  0000                     _PORTB	set	3969
   201  0000                     _TRISD	set	3989
   202  0000                     _LATD	set	3980
   203  0000                     _TRISB	set	3987
   204  0000                     _LATBbits	set	3978
   205  0000                     _TRISBbits	set	3987
   206  0000                     _TMR1H	set	4047
   207  0000                     _TMR1L	set	4046
   208  0000                     _LATDbits	set	3980
   209  0000                     _TMR0L	set	4054
   210  0000                     _TMR0H	set	4055
   211  0000                     _INTCONbits	set	4082
   212  0000                     _RC2	set	31762
   213  0000                     _RC1	set	31761
   214  0000                     _GIE	set	32663
   215  0000                     _INT1IE	set	32643
   216  0000                     _RB2	set	31754
   217  0000                     _RB3	set	31755
   218  0000                     _RD0	set	31768
   219  0000                     _RD1	set	31769
   220  0000                     _RB4	set	31756
   221  0000                     _RB5	set	31757
   222  0000                     _RB6	set	31758
   223  0000                     _TMR1ON	set	32360
   224  0000                     _RB7	set	31759
   225  0000                     _TMR0IF	set	32658
   226  0000                     _INT1IF	set	32640
   227  0000                     _RBIE	set	32659
   228  0000                     _RBIF	set	32656
   229  00FE3E                     STR_28:
   230  00FE3E  50                 	db	80	;'P'
   231  00FE3F  25                 	db	37
   232  00FE40  64                 	db	100	;'d'
   233  00FE41  20                 	db	32
   234  00FE42  44                 	db	68	;'D'
   235  00FE43  65                 	db	101	;'e'
   236  00FE44  70                 	db	112	;'p'
   237  00FE45  3A                 	db	58	;':'
   238  00FE46  25                 	db	37
   239  00FE47  64                 	db	100	;'d'
   240  00FE48  2C                 	db	44
   241  00FE49  54                 	db	84	;'T'
   242  00FE4A  6F                 	db	111	;'o'
   243  00FE4B  74                 	db	116	;'t'
   244  00FE4C  3A                 	db	58	;':'
   245  00FE4D  25                 	db	37
   246  00FE4E  64                 	db	100	;'d'
   247  00FE4F  00                 	db	0
   248  00FE50                     STR_18:
   249  00FE50  20                 	db	32
   250  00FE51  20                 	db	32
   251  00FE52  20                 	db	32
   252  00FE53  20                 	db	32
   253  00FE54  20                 	db	32
   254  00FE55  30                 	db	48	;'0'
   255  00FE56  2D                 	db	45
   256  00FE57  4D                 	db	77	;'M'
   257  00FE58  65                 	db	101	;'e'
   258  00FE59  6E                 	db	110	;'n'
   259  00FE5A  75                 	db	117	;'u'
   260  00FE5B  20                 	db	32
   261  00FE5C  20                 	db	32
   262  00FE5D  20                 	db	32
   263  00FE5E  20                 	db	32
   264  00FE5F  20                 	db	32
   265  00FE60  00                 	db	0
   266  00FE61                     STR_35:
   267  00FE61  3C                 	db	60	;'<'
   268  00FE62  2A                 	db	42
   269  00FE63  20                 	db	32
   270  00FE64  20                 	db	32
   271  00FE65  20                 	db	32
   272  00FE66  30                 	db	48	;'0'
   273  00FE67  2D                 	db	45
   274  00FE68  4D                 	db	77	;'M'
   275  00FE69  65                 	db	101	;'e'
   276  00FE6A  6E                 	db	110	;'n'
   277  00FE6B  75                 	db	117	;'u'
   278  00FE6C  20                 	db	32
   279  00FE6D  20                 	db	32
   280  00FE6E  20                 	db	32
   281  00FE6F  20                 	db	32
   282  00FE70  20                 	db	32
   283  00FE71  00                 	db	0
   284  00FE72                     STR_1:
   285  00FE72  44                 	db	68	;'D'
   286  00FE73  69                 	db	105	;'i'
   287  00FE74  73                 	db	115	;'s'
   288  00FE75  74                 	db	116	;'t'
   289  00FE76  31                 	db	49	;'1'
   290  00FE77  3D                 	db	61	;'='
   291  00FE78  25                 	db	37
   292  00FE79  64                 	db	100	;'d'
   293  00FE7A  2C                 	db	44
   294  00FE7B  41                 	db	65	;'A'
   295  00FE7C  76                 	db	118	;'v'
   296  00FE7D  67                 	db	103	;'g'
   297  00FE7E  3D                 	db	61	;'='
   298  00FE7F  25                 	db	37
   299  00FE80  64                 	db	100	;'d'
   300  00FE81  20                 	db	32
   301  00FE82  00                 	db	0
   302  00FE83                     STR_7:
   303  00FE83  44                 	db	68	;'D'
   304  00FE84  69                 	db	105	;'i'
   305  00FE85  73                 	db	115	;'s'
   306  00FE86  74                 	db	116	;'t'
   307  00FE87  34                 	db	52	;'4'
   308  00FE88  3D                 	db	61	;'='
   309  00FE89  25                 	db	37
   310  00FE8A  64                 	db	100	;'d'
   311  00FE8B  2C                 	db	44
   312  00FE8C  41                 	db	65	;'A'
   313  00FE8D  76                 	db	118	;'v'
   314  00FE8E  67                 	db	103	;'g'
   315  00FE8F  3D                 	db	61	;'='
   316  00FE90  25                 	db	37
   317  00FE91  64                 	db	100	;'d'
   318  00FE92  20                 	db	32
   319  00FE93  00                 	db	0
   320  00FE94                     STR_24:
   321  00FE94  20                 	db	32
   322  00FE95  20                 	db	32
   323  00FE96  20                 	db	32
   324  00FE97  20                 	db	32
   325  00FE98  20                 	db	32
   326  00FE99  30                 	db	48	;'0'
   327  00FE9A  2D                 	db	45
   328  00FE9B  4D                 	db	77	;'M'
   329  00FE9C  65                 	db	101	;'e'
   330  00FE9D  6E                 	db	110	;'n'
   331  00FE9E  75                 	db	117	;'u'
   332  00FE9F  20                 	db	32
   333  00FEA0  20                 	db	32
   334  00FEA1  20                 	db	32
   335  00FEA2  23                 	db	35
   336  00FEA3  3E                 	db	62	;'>'
   337  00FEA4  00                 	db	0
   338  00FEA5                     STR_27:
   339  00FEA5  3C                 	db	60	;'<'
   340  00FEA6  2A                 	db	42
   341  00FEA7  20                 	db	32
   342  00FEA8  20                 	db	32
   343  00FEA9  20                 	db	32
   344  00FEAA  30                 	db	48	;'0'
   345  00FEAB  2D                 	db	45
   346  00FEAC  4D                 	db	77	;'M'
   347  00FEAD  65                 	db	101	;'e'
   348  00FEAE  6E                 	db	110	;'n'
   349  00FEAF  75                 	db	117	;'u'
   350  00FEB0  20                 	db	32
   351  00FEB1  20                 	db	32
   352  00FEB2  20                 	db	32
   353  00FEB3  23                 	db	35
   354  00FEB4  3E                 	db	62	;'>'
   355  00FEB5  00                 	db	0
   356  00FEB6                     STR_10:
   357  00FEB6  64                 	db	100	;'d'
   358  00FEB7  65                 	db	101	;'e'
   359  00FEB8  74                 	db	116	;'t'
   360  00FEB9  2C                 	db	44
   361  00FEBA  25                 	db	37
   362  00FEBB  64                 	db	100	;'d'
   363  00FEBC  2C                 	db	44
   364  00FEBD  20                 	db	32
   365  00FEBE  74                 	db	116	;'t'
   366  00FEBF  63                 	db	99	;'c'
   367  00FEC0  6E                 	db	110	;'n'
   368  00FEC1  74                 	db	116	;'t'
   369  00FEC2  20                 	db	32
   370  00FEC3  25                 	db	37
   371  00FEC4  64                 	db	100	;'d'
   372  00FEC5  00                 	db	0
   373  00FEC6                     STR_3:
   374  00FEC6  44                 	db	68	;'D'
   375  00FEC7  69                 	db	105	;'i'
   376  00FEC8  73                 	db	115	;'s'
   377  00FEC9  74                 	db	116	;'t'
   378  00FECA  32                 	db	50	;'2'
   379  00FECB  3D                 	db	61	;'='
   380  00FECC  25                 	db	37
   381  00FECD  64                 	db	100	;'d'
   382  00FECE  2C                 	db	44
   383  00FECF  41                 	db	65	;'A'
   384  00FED0  76                 	db	118	;'v'
   385  00FED1  67                 	db	103	;'g'
   386  00FED2  3D                 	db	61	;'='
   387  00FED3  25                 	db	37
   388  00FED4  64                 	db	100	;'d'
   389  00FED5  00                 	db	0
   390  00FED6                     STR_5:
   391  00FED6  44                 	db	68	;'D'
   392  00FED7  69                 	db	105	;'i'
   393  00FED8  73                 	db	115	;'s'
   394  00FED9  74                 	db	116	;'t'
   395  00FEDA  33                 	db	51	;'3'
   396  00FEDB  3D                 	db	61	;'='
   397  00FEDC  25                 	db	37
   398  00FEDD  64                 	db	100	;'d'
   399  00FEDE  2C                 	db	44
   400  00FEDF  41                 	db	65	;'A'
   401  00FEE0  76                 	db	118	;'v'
   402  00FEE1  67                 	db	103	;'g'
   403  00FEE2  3D                 	db	61	;'='
   404  00FEE3  25                 	db	37
   405  00FEE4  64                 	db	100	;'d'
   406  00FEE5  00                 	db	0
   407  00FEE6                     STR_13:
   408  00FEE6  33                 	db	51	;'3'
   409  00FEE7  20                 	db	32
   410  00FEE8  2D                 	db	45
   411  00FEE9  20                 	db	32
   412  00FEEA  44                 	db	68	;'D'
   413  00FEEB  61                 	db	97	;'a'
   414  00FEEC  74                 	db	116	;'t'
   415  00FEED  65                 	db	101	;'e'
   416  00FEEE  26                 	db	38
   417  00FEEF  54                 	db	84	;'T'
   418  00FEF0  69                 	db	105	;'i'
   419  00FEF1  6D                 	db	109	;'m'
   420  00FEF2  65                 	db	101	;'e'
   421  00FEF3  20                 	db	32
   422  00FEF4  00                 	db	0
   423  00FEF5                     STR_29:
   424  00FEF5  44                 	db	68	;'D'
   425  00FEF6  69                 	db	105	;'i'
   426  00FEF7  73                 	db	115	;'s'
   427  00FEF8  74                 	db	116	;'t'
   428  00FEF9  54                 	db	84	;'T'
   429  00FEFA  6F                 	db	111	;'o'
   430  00FEFB  53                 	db	83	;'S'
   431  00FEFC  74                 	db	116	;'t'
   432  00FEFD  61                 	db	97	;'a'
   433  00FEFE  72                 	db	114	;'r'
   434  00FEFF  74                 	db	116	;'t'
   435  00FF00  3A                 	db	58	;':'
   436  00FF01  25                 	db	37
   437  00FF02  64                 	db	100	;'d'
   438  00FF03  00                 	db	0
   439  00FF04                     STR_17:
   440  00FF04  4D                 	db	77	;'M'
   441  00FF05  61                 	db	97	;'a'
   442  00FF06  63                 	db	99	;'c'
   443  00FF07  68                 	db	104	;'h'
   444  00FF08  69                 	db	105	;'i'
   445  00FF09  6E                 	db	110	;'n'
   446  00FF0A  65                 	db	101	;'e'
   447  00FF0B  20                 	db	32
   448  00FF0C  49                 	db	73	;'I'
   449  00FF0D  6E                 	db	110	;'n'
   450  00FF0E  20                 	db	32
   451  00FF0F  55                 	db	85	;'U'
   452  00FF10  73                 	db	115	;'s'
   453  00FF11  65                 	db	101	;'e'
   454  00FF12  00                 	db	0
   455  00FF13                     STR_37:
   456  00FF13  25                 	db	37
   457  00FF14  30                 	db	48	;'0'
   458  00FF15  32                 	db	50	;'2'
   459  00FF16  78                 	db	120	;'x'
   460  00FF17  2F                 	db	47
   461  00FF18  25                 	db	37
   462  00FF19  30                 	db	48	;'0'
   463  00FF1A  32                 	db	50	;'2'
   464  00FF1B  78                 	db	120	;'x'
   465  00FF1C  2F                 	db	47
   466  00FF1D  25                 	db	37
   467  00FF1E  30                 	db	48	;'0'
   468  00FF1F  32                 	db	50	;'2'
   469  00FF20  78                 	db	120	;'x'
   470  00FF21  00                 	db	0
   471  00FF22                     STR_38:
   472  00FF22  25                 	db	37
   473  00FF23  30                 	db	48	;'0'
   474  00FF24  32                 	db	50	;'2'
   475  00FF25  78                 	db	120	;'x'
   476  00FF26  3A                 	db	58	;':'
   477  00FF27  25                 	db	37
   478  00FF28  30                 	db	48	;'0'
   479  00FF29  32                 	db	50	;'2'
   480  00FF2A  78                 	db	120	;'x'
   481  00FF2B  3A                 	db	58	;':'
   482  00FF2C  25                 	db	37
   483  00FF2D  30                 	db	48	;'0'
   484  00FF2E  32                 	db	50	;'2'
   485  00FF2F  78                 	db	120	;'x'
   486  00FF30  00                 	db	0
   487  00FF31                     STR_26:
   488  00FF31  4E                 	db	78	;'N'
   489  00FF32  6F                 	db	111	;'o'
   490  00FF33  2E                 	db	46
   491  00FF34  20                 	db	32
   492  00FF35  50                 	db	80	;'P'
   493  00FF36  6F                 	db	111	;'o'
   494  00FF37  6C                 	db	108	;'l'
   495  00FF38  65                 	db	101	;'e'
   496  00FF39  73                 	db	115	;'s'
   497  00FF3A  3A                 	db	58	;':'
   498  00FF3B  20                 	db	32
   499  00FF3C  25                 	db	37
   500  00FF3D  64                 	db	100	;'d'
   501  00FF3E  00                 	db	0
   502  00FF3F                     STR_25:
   503  00FF3F  4E                 	db	78	;'N'
   504  00FF40  6F                 	db	111	;'o'
   505  00FF41  2E                 	db	46
   506  00FF42  20                 	db	32
   507  00FF43  54                 	db	84	;'T'
   508  00FF44  69                 	db	105	;'i'
   509  00FF45  72                 	db	114	;'r'
   510  00FF46  65                 	db	101	;'e'
   511  00FF47  73                 	db	115	;'s'
   512  00FF48  3A                 	db	58	;':'
   513  00FF49  20                 	db	32
   514  00FF4A  25                 	db	37
   515  00FF4B  64                 	db	100	;'d'
   516  00FF4C  00                 	db	0
   517  00FF4D                     STR_45:
   518  00FF4D  53                 	db	83	;'S'
   519  00FF4E  74                 	db	116	;'t'
   520  00FF4F  65                 	db	101	;'e'
   521  00FF50  70                 	db	112	;'p'
   522  00FF51  70                 	db	112	;'p'
   523  00FF52  65                 	db	101	;'e'
   524  00FF53  72                 	db	114	;'r'
   525  00FF54  20                 	db	32
   526  00FF55  64                 	db	100	;'d'
   527  00FF56  6F                 	db	111	;'o'
   528  00FF57  6E                 	db	110	;'n'
   529  00FF58  65                 	db	101	;'e'
   530  00FF59  00                 	db	0
   531  00FF5A                     STR_36:
   532  00FF5A  44                 	db	68	;'D'
   533  00FF5B  41                 	db	65	;'A'
   534  00FF5C  54                 	db	84	;'T'
   535  00FF5D  45                 	db	69	;'E'
   536  00FF5E  20                 	db	32
   537  00FF5F  26                 	db	38
   538  00FF60  20                 	db	32
   539  00FF61  54                 	db	84	;'T'
   540  00FF62  49                 	db	73	;'I'
   541  00FF63  4D                 	db	77	;'M'
   542  00FF64  45                 	db	69	;'E'
   543  00FF65  00                 	db	0
   544  00FF66                     STR_40:
   545  00FF66  61                 	db	97	;'a'
   546  00FF67  76                 	db	118	;'v'
   547  00FF68  67                 	db	103	;'g'
   548  00FF69  20                 	db	32
   549  00FF6A  64                 	db	100	;'d'
   550  00FF6B  69                 	db	105	;'i'
   551  00FF6C  73                 	db	115	;'s'
   552  00FF6D  74                 	db	116	;'t'
   553  00FF6E  20                 	db	32
   554  00FF6F  25                 	db	37
   555  00FF70  64                 	db	100	;'d'
   556  00FF71  00                 	db	0
   557  00FF72                     STR_30:
   558  00FF72  44                 	db	68	;'D'
   559  00FF73  69                 	db	105	;'i'
   560  00FF74  73                 	db	115	;'s'
   561  00FF75  74                 	db	116	;'t'
   562  00FF76  54                 	db	84	;'T'
   563  00FF77  6F                 	db	111	;'o'
   564  00FF78  43                 	db	67	;'C'
   565  00FF79  4C                 	db	76	;'L'
   566  00FF7A  3A                 	db	58	;':'
   567  00FF7B  25                 	db	37
   568  00FF7C  64                 	db	100	;'d'
   569  00FF7D  00                 	db	0
   570  00FF7E                     STR_12:
   571  00FF7E  32                 	db	50	;'2'
   572  00FF7F  20                 	db	32
   573  00FF80  2D                 	db	45
   574  00FF81  20                 	db	32
   575  00FF82  53                 	db	83	;'S'
   576  00FF83  75                 	db	117	;'u'
   577  00FF84  6D                 	db	109	;'m'
   578  00FF85  6D                 	db	109	;'m'
   579  00FF86  61                 	db	97	;'a'
   580  00FF87  72                 	db	114	;'r'
   581  00FF88  79                 	db	121	;'y'
   582  00FF89  00                 	db	0
   583  00FF8A                     STR_46:
   584  00FF8A  53                 	db	83	;'S'
   585  00FF8B  65                 	db	101	;'e'
   586  00FF8C  72                 	db	114	;'r'
   587  00FF8D  76                 	db	118	;'v'
   588  00FF8E  6F                 	db	111	;'o'
   589  00FF8F  20                 	db	32
   590  00FF90  64                 	db	100	;'d'
   591  00FF91  6F                 	db	111	;'o'
   592  00FF92  6E                 	db	110	;'n'
   593  00FF93  65                 	db	101	;'e'
   594  00FF94  00                 	db	0
   595  00FF95                     STR_41:
   596  00FF95  70                 	db	112	;'p'
   597  00FF96  6F                 	db	111	;'o'
   598  00FF97  6C                 	db	108	;'l'
   599  00FF98  65                 	db	101	;'e'
   600  00FF99  73                 	db	115	;'s'
   601  00FF9A  20                 	db	32
   602  00FF9B  64                 	db	100	;'d'
   603  00FF9C  20                 	db	32
   604  00FF9D  25                 	db	37
   605  00FF9E  64                 	db	100	;'d'
   606  00FF9F  00                 	db	0
   607  00FFA0                     STR_42:
   608  00FFA0  70                 	db	112	;'p'
   609  00FFA1  6F                 	db	111	;'o'
   610  00FFA2  6C                 	db	108	;'l'
   611  00FFA3  65                 	db	101	;'e'
   612  00FFA4  73                 	db	115	;'s'
   613  00FFA5  20                 	db	32
   614  00FFA6  64                 	db	100	;'d'
   615  00FFA7  6F                 	db	111	;'o'
   616  00FFA8  6E                 	db	110	;'n'
   617  00FFA9  65                 	db	101	;'e'
   618  00FFAA  00                 	db	0
   619  00FFAB                     STR_44:
   620  00FFAB  63                 	db	99	;'c'
   621  00FFAC  6E                 	db	110	;'n'
   622  00FFAD  74                 	db	116	;'t'
   623  00FFAE  20                 	db	32
   624  00FFAF  69                 	db	105	;'i'
   625  00FFB0  73                 	db	115	;'s'
   626  00FFB1  20                 	db	32
   627  00FFB2  25                 	db	37
   628  00FFB3  64                 	db	100	;'d'
   629  00FFB4  00                 	db	0
   630  00FFB5                     STR_2:
   631  00FFB5  44                 	db	68	;'D'
   632  00FFB6  69                 	db	105	;'i'
   633  00FFB7  73                 	db	115	;'s'
   634  00FFB8  74                 	db	116	;'t'
   635  00FFB9  31                 	db	49	;'1'
   636  00FFBA  20                 	db	32
   637  00FFBB  3D                 	db	61	;'='
   638  00FFBC  20                 	db	32
   639  00FFBD  58                 	db	88	;'X'
   640  00FFBE  00                 	db	0
   641  00FFBF                     STR_4:
   642  00FFBF  44                 	db	68	;'D'
   643  00FFC0  69                 	db	105	;'i'
   644  00FFC1  73                 	db	115	;'s'
   645  00FFC2  74                 	db	116	;'t'
   646  00FFC3  32                 	db	50	;'2'
   647  00FFC4  20                 	db	32
   648  00FFC5  3D                 	db	61	;'='
   649  00FFC6  20                 	db	32
   650  00FFC7  58                 	db	88	;'X'
   651  00FFC8  00                 	db	0
   652  00FFC9                     STR_6:
   653  00FFC9  44                 	db	68	;'D'
   654  00FFCA  69                 	db	105	;'i'
   655  00FFCB  73                 	db	115	;'s'
   656  00FFCC  74                 	db	116	;'t'
   657  00FFCD  33                 	db	51	;'3'
   658  00FFCE  20                 	db	32
   659  00FFCF  3D                 	db	61	;'='
   660  00FFD0  20                 	db	32
   661  00FFD1  58                 	db	88	;'X'
   662  00FFD2  00                 	db	0
   663  00FFD3                     STR_8:
   664  00FFD3  44                 	db	68	;'D'
   665  00FFD4  69                 	db	105	;'i'
   666  00FFD5  73                 	db	115	;'s'
   667  00FFD6  74                 	db	116	;'t'
   668  00FFD7  34                 	db	52	;'4'
   669  00FFD8  20                 	db	32
   670  00FFD9  3D                 	db	61	;'='
   671  00FFDA  20                 	db	32
   672  00FFDB  58                 	db	88	;'X'
   673  00FFDC  00                 	db	0
   674  00FFDD                     STR_43:
   675  00FFDD  62                 	db	98	;'b'
   676  00FFDE  61                 	db	97	;'a'
   677  00FFDF  63                 	db	99	;'c'
   678  00FFE0  6B                 	db	107	;'k'
   679  00FFE1  77                 	db	119	;'w'
   680  00FFE2  61                 	db	97	;'a'
   681  00FFE3  72                 	db	114	;'r'
   682  00FFE4  64                 	db	100	;'d'
   683  00FFE5  73                 	db	115	;'s'
   684  00FFE6  00                 	db	0
   685  00FFE7                     STR_11:
   686  00FFE7  31                 	db	49	;'1'
   687  00FFE8  20                 	db	32
   688  00FFE9  2D                 	db	45
   689  00FFEA  20                 	db	32
   690  00FFEB  53                 	db	83	;'S'
   691  00FFEC  74                 	db	116	;'t'
   692  00FFED  61                 	db	97	;'a'
   693  00FFEE  72                 	db	114	;'r'
   694  00FFEF  74                 	db	116	;'t'
   695  00FFF0  00                 	db	0
   696  00FFF1                     STR_19:
   697  00FFF1  4F                 	db	79	;'O'
   698  00FFF2  70                 	db	112	;'p'
   699  00FFF3  20                 	db	32
   700  00FFF4  54                 	db	84	;'T'
   701  00FFF5  69                 	db	105	;'i'
   702  00FFF6  6D                 	db	109	;'m'
   703  00FFF7  65                 	db	101	;'e'
   704  00FFF8  3A                 	db	58	;':'
   705  00FFF9  00                 	db	0
   706  00FFFA                     STR_48:
   707  00FFFA  77                 	db	119	;'w'
   708  00FFFB  68                 	db	104	;'h'
   709  00FFFC  61                 	db	97	;'a'
   710  00FFFD  74                 	db	116	;'t'
   711  00FFFE  00                 	db	0
   712  0000                     
   713                           ; #config settings
   714  00FFFF  00                 	db	0	; dummy byte at the end
   715  0000                     
   716                           	psect	cinit
   717  0030D4                     __pcinit:
   718                           	opt callstack 0
   719  0030D4                     start_initialization:
   720                           	opt callstack 0
   721  0030D4                     __initialization:
   722                           	opt callstack 0
   723                           
   724                           ; Initialize objects allocated to COMRAM (5 bytes)
   725                           ; load TBLPTR registers with __pidataCOMRAM
   726  0030D4  0ED2               	movlw	low __pidataCOMRAM
   727  0030D6  6EF6               	movwf	tblptrl,c
   728  0030D8  0E36               	movlw	high __pidataCOMRAM
   729  0030DA  6EF7               	movwf	tblptrh,c
   730  0030DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   731  0030DE  6EF8               	movwf	tblptru,c
   732  0030E0  EE00  F069         	lfsr	0,__pdataCOMRAM
   733  0030E4  EE10 F005          	lfsr	1,5
   734  0030E8                     copy_data0:
   735  0030E8  0009               	tblrd		*+
   736  0030EA  CFF5 FFEE          	movff	tablat,postinc0
   737  0030EE  50E5               	movf	postdec1,w,c
   738  0030F0  50E1               	movf	fsr1l,w,c
   739  0030F2  E1FA               	bnz	copy_data0
   740                           
   741                           ; Clear objects allocated to BANK2 (120 bytes)
   742  0030F4  EE02  F000         	lfsr	0,__pbssBANK2
   743  0030F8  0E78               	movlw	120
   744  0030FA                     clear_0:
   745  0030FA  6AEE               	clrf	postinc0,c
   746  0030FC  06E8               	decf	wreg,f,c
   747  0030FE  E1FD               	bnz	clear_0
   748                           
   749                           ; Clear objects allocated to BANK1 (66 bytes)
   750  003100  EE01  F05C         	lfsr	0,__pbssBANK1
   751  003104  0E42               	movlw	66
   752  003106                     clear_1:
   753  003106  6AEE               	clrf	postinc0,c
   754  003108  06E8               	decf	wreg,f,c
   755  00310A  E1FD               	bnz	clear_1
   756                           
   757                           ; Clear objects allocated to BANK0 (3 bytes)
   758  00310C  0100               	movlb	0
   759  00310E  6BFF               	clrf	(__pbssBANK0+2)& (0+255),b
   760  003110  6BFE               	clrf	(__pbssBANK0+1)& (0+255),b
   761  003112  6BFD               	clrf	__pbssBANK0& (0+255),b
   762                           
   763                           ; Clear objects allocated to COMRAM (49 bytes)
   764  003114  EE00  F038         	lfsr	0,__pbssCOMRAM
   765  003118  0E31               	movlw	49
   766  00311A                     clear_2:
   767  00311A  6AEE               	clrf	postinc0,c
   768  00311C  06E8               	decf	wreg,f,c
   769  00311E  E1FD               	bnz	clear_2
   770  003120                     end_of_initialization:
   771                           	opt callstack 0
   772  003120                     __end_of__initialization:
   773                           	opt callstack 0
   774  003120  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   775  003122  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   776  003124  0E00               	movlw	low (__Lmediumconst shr (0+16))
   777  003126  6EF8               	movwf	tblptru,c
   778  003128  0100               	movlb	0
   779  00312A  EFA5  F006         	goto	_main	;jump to C main() function
   780                           
   781                           	psect	bssCOMRAM
   782  000038                     __pbssCOMRAM:
   783                           	opt callstack 0
   784  000038                     _sum:
   785                           	opt callstack 0
   786  000038                     	ds	8
   787  000040                     _a:
   788                           	opt callstack 0
   789  000040                     	ds	8
   790  000048                     _sumf:
   791                           	opt callstack 0
   792  000048                     	ds	4
   793  00004C                     _avg_dist:
   794                           	opt callstack 0
   795  00004C                     	ds	4
   796  000050                     _nout:
   797                           	opt callstack 0
   798  000050                     	ds	2
   799  000052                     _width:
   800                           	opt callstack 0
   801  000052                     	ds	2
   802  000054                     _prec:
   803                           	opt callstack 0
   804  000054                     	ds	2
   805  000056                     _flags:
   806                           	opt callstack 0
   807  000056                     	ds	2
   808  000058                     _meas:
   809                           	opt callstack 0
   810  000058                     	ds	2
   811  00005A                     _poles_detected:
   812                           	opt callstack 0
   813  00005A                     	ds	2
   814  00005C                     _tires_deployed:
   815                           	opt callstack 0
   816  00005C                     	ds	2
   817  00005E                     _tick:
   818                           	opt callstack 0
   819  00005E                     	ds	2
   820  000060                     _sens:
   821                           	opt callstack 0
   822  000060                     	ds	2
   823  000062                     _b:
   824                           	opt callstack 0
   825  000062                     	ds	2
   826  000064                     _timer_count:
   827                           	opt callstack 0
   828  000064                     	ds	2
   829  000066                     _data:
   830                           	opt callstack 0
   831  000066                     	ds	1
   832  000067                     _keypress:
   833                           	opt callstack 0
   834  000067                     	ds	1
   835  000068                     _counter:
   836                           	opt callstack 0
   837  000068                     	ds	1
   838                           
   839                           	psect	dataCOMRAM
   840  000069                     __pdataCOMRAM:
   841                           	opt callstack 0
   842  000069                     _dists:
   843                           	opt callstack 0
   844  000069                     	ds	4
   845  00006D                     _send:
   846                           	opt callstack 0
   847  00006D                     	ds	1
   848                           
   849                           	psect	bssBANK0
   850  0000FD                     __pbssBANK0:
   851                           	opt callstack 0
   852  0000FD                     _i:
   853                           	opt callstack 0
   854  0000FD                     	ds	2
   855  0000FF                     _temp:
   856                           	opt callstack 0
   857  0000FF                     	ds	1
   858                           
   859                           	psect	bssBANK1
   860  00015C                     __pbssBANK1:
   861                           	opt callstack 0
   862  00015C                     _time:
   863                           	opt callstack 0
   864  00015C                     	ds	7
   865  000163                     _pressed:
   866                           	opt callstack 0
   867  000163                     	ds	2
   868  000165                     _disp:
   869                           	opt callstack 0
   870  000165                     	ds	2
   871  000167                     _state:
   872                           	opt callstack 0
   873  000167                     	ds	2
   874  000169                     _temp_int:
   875                           	opt callstack 0
   876  000169                     	ds	2
   877  00016B                     _cnt:
   878                           	opt callstack 0
   879  00016B                     	ds	2
   880  00016D                     _key_was_pressed:
   881                           	opt callstack 0
   882  00016D                     	ds	1
   883  00016E                     _dist_final:
   884                           	opt callstack 0
   885  00016E                     	ds	48
   886                           
   887                           	psect	bssBANK2
   888  000200                     __pbssBANK2:
   889                           	opt callstack 0
   890  000200                     _Pole:
   891                           	opt callstack 0
   892  000200                     	ds	80
   893  000250                     _prev_dist_final:
   894                           	opt callstack 0
   895  000250                     	ds	8
   896  000258                     _dbuf:
   897                           	opt callstack 0
   898  000258                     	ds	32
   899                           
   900                           	psect	cstackBANK2
   901  000278                     __pcstackBANK2:
   902                           	opt callstack 0
   903  000278                     main@Pole:
   904                           	opt callstack 0
   905                           
   906                           ; 80 bytes @ 0x0
   907  000278                     	ds	82
   908  0002CA                     main@pole_cl_dist:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x52
   912  0002CA                     	ds	2
   913  0002CC                     main@i:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x54
   917  0002CC                     	ds	2
   918  0002CE                     main@i_503:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x56
   922  0002CE                     	ds	2
   923  0002D0                     main@stack:
   924                           	opt callstack 0
   925                           
   926                           ; 2 bytes @ 0x58
   927  0002D0                     	ds	2
   928  0002D2                     main@t_count:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x5A
   932  0002D2                     	ds	2
   933  0002D4                     main@k:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x5C
   937  0002D4                     	ds	2
   938  0002D6                     main@t_dep:
   939                           	opt callstack 0
   940                           
   941                           ; 2 bytes @ 0x5E
   942  0002D6                     	ds	2
   943  0002D8                     main@i_511:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0x60
   947  0002D8                     	ds	2
   948  0002DA                     main@poles_detected:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x62
   952  0002DA                     	ds	2
   953  0002DC                     main@prev_avg_dist:
   954                           	opt callstack 0
   955                           
   956                           ; 4 bytes @ 0x64
   957  0002DC                     	ds	4
   958                           
   959                           	psect	cstackBANK1
   960  000100                     __pcstackBANK1:
   961                           	opt callstack 0
   962  000100                     ??_number_deploy:
   963  000100                     ??_UI_main:
   964  000100                     stepper2@direction:
   965                           	opt callstack 0
   966  000100                     stepper@stack:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x0
   970  000100                     	ds	1
   971  000101                     stepper2@count_stepper:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x1
   975  000101                     	ds	1
   976  000102                     number_deploy@tires_t:
   977                           	opt callstack 0
   978  000102                     stepper@count_stepper:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x2
   982  000102                     	ds	1
   983  000103                     stepper2@i:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x3
   987  000103                     	ds	1
   988  000104                     number_deploy@tires_detected:
   989                           	opt callstack 0
   990  000104                     stepper@i:
   991                           	opt callstack 0
   992  000104                     UI_main@Pole:
   993                           	opt callstack 0
   994                           
   995                           ; 80 bytes @ 0x4
   996  000104                     	ds	2
   997  000106                     number_deploy@t_count:
   998                           	opt callstack 0
   999  000106                     stepper@i_909:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x6
  1003  000106                     	ds	2
  1004  000108                     actuators_main@stack:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x8
  1008  000108                     	ds	2
  1009  00010A                     ??_actuators_main:
  1010                           
  1011                           ; 1 bytes @ 0xA
  1012  00010A                     	ds	2
  1013  00010C                     actuators_main@act_cnt:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0xC
  1017  00010C                     	ds	72
  1018  000154                     UI_main@keypress:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x54
  1022  000154                     	ds	1
  1023  000155                     UI_main@tick:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x55
  1027  000155                     	ds	4
  1028  000159                     UI_main@i:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x59
  1032  000159                     	ds	1
  1033  00015A                     ??_main:
  1034                           
  1035                           ; 1 bytes @ 0x5A
  1036  00015A                     	ds	2
  1037                           
  1038                           	psect	cstackBANK0
  1039  000080                     __pcstackBANK0:
  1040                           	opt callstack 0
  1041  000080                     ??_trig:
  1042  000080                     ??_I2C_Master_Wait:
  1043  000080                     ??_servoRotate0:
  1044  000080                     ??_servoRotate180:
  1045  000080                     ?_strlen:
  1046                           	opt callstack 0
  1047  000080                     ?_isupper:
  1048                           	opt callstack 0
  1049  000080                     ?_isalpha:
  1050                           	opt callstack 0
  1051  000080                     ?_isdigit:
  1052                           	opt callstack 0
  1053  000080                     ?_isspace:
  1054                           	opt callstack 0
  1055  000080                     ?_islower:
  1056                           	opt callstack 0
  1057  000080                     ?___wmul:
  1058                           	opt callstack 0
  1059  000080                     ?___awdiv:
  1060                           	opt callstack 0
  1061  000080                     ?___lldiv:
  1062                           	opt callstack 0
  1063  000080                     ?___llmod:
  1064                           	opt callstack 0
  1065  000080                     ?___aodiv:
  1066                           	opt callstack 0
  1067  000080                     ?___aomod:
  1068                           	opt callstack 0
  1069  000080                     pulse_e@interruptState:
  1070                           	opt callstack 0
  1071  000080                     ___wmul@multiplier:
  1072                           	opt callstack 0
  1073  000080                     ___awdiv@dividend:
  1074                           	opt callstack 0
  1075  000080                     isalpha@c:
  1076                           	opt callstack 0
  1077  000080                     isdigit@c:
  1078                           	opt callstack 0
  1079  000080                     isspace@c:
  1080                           	opt callstack 0
  1081  000080                     isupper@c:
  1082                           	opt callstack 0
  1083  000080                     strlen@s:
  1084                           	opt callstack 0
  1085  000080                     islower@c:
  1086                           	opt callstack 0
  1087  000080                     ___lldiv@dividend:
  1088                           	opt callstack 0
  1089  000080                     ___llmod@dividend:
  1090                           	opt callstack 0
  1091  000080                     ___aodiv@dividend:
  1092                           	opt callstack 0
  1093  000080                     ___aomod@dividend:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 8 bytes @ 0x0
  1097  000080                     	ds	1
  1098  000081                     I2C_Master_Read@ackBit:
  1099                           	opt callstack 0
  1100  000081                     send_nibble@data:
  1101                           	opt callstack 0
  1102  000081                     I2C_Master_Write@byteToWrite:
  1103                           	opt callstack 0
  1104  000081                     servoRotate0@i:
  1105                           	opt callstack 0
  1106  000081                     servoRotate180@i:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x1
  1110  000081                     	ds	1
  1111  000082                     ??_isupper:
  1112  000082                     ??_isalpha:
  1113  000082                     ??_isdigit:
  1114  000082                     ??_isspace:
  1115  000082                     ??_islower:
  1116  000082                     I2C_Master_Read@receivedByte:
  1117                           	opt callstack 0
  1118  000082                     send_byte@data:
  1119                           	opt callstack 0
  1120  000082                     ___wmul@multiplicand:
  1121                           	opt callstack 0
  1122  000082                     ___awdiv@divisor:
  1123                           	opt callstack 0
  1124  000082                     strlen@a:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x2
  1128  000082                     	ds	1
  1129  000083                     ??_servo:
  1130  000083                     lcdInst@data:
  1131                           	opt callstack 0
  1132  000083                     putch@data:
  1133                           	opt callstack 0
  1134  000083                     sense_tires@sensed:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x3
  1138  000083                     	ds	1
  1139  000084                     ??_initLCD:
  1140  000084                     ___awdiv@counter:
  1141                           	opt callstack 0
  1142  000084                     ___wmul@product:
  1143                           	opt callstack 0
  1144  000084                     fputc@c:
  1145                           	opt callstack 0
  1146  000084                     ___lldiv@divisor:
  1147                           	opt callstack 0
  1148  000084                     ___llmod@divisor:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x4
  1152  000084                     	ds	1
  1153  000085                     ___awdiv@sign:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x5
  1157  000085                     	ds	1
  1158  000086                     ?_toupper:
  1159                           	opt callstack 0
  1160  000086                     _isspace$1594:
  1161                           	opt callstack 0
  1162  000086                     ___awdiv@quotient:
  1163                           	opt callstack 0
  1164  000086                     fputc@fp:
  1165                           	opt callstack 0
  1166  000086                     toupper@c:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x6
  1170  000086                     	ds	1
  1171  000087                     ?_atoi:
  1172                           	opt callstack 0
  1173  000087                     atoi@s:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x7
  1177  000087                     	ds	1
  1178  000088                     ??_fputc:
  1179  000088                     ??_toupper:
  1180  000088                     ___llmod@counter:
  1181                           	opt callstack 0
  1182  000088                     ___lldiv@quotient:
  1183                           	opt callstack 0
  1184  000088                     ___aodiv@divisor:
  1185                           	opt callstack 0
  1186  000088                     ___aomod@divisor:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 8 bytes @ 0x8
  1190  000088                     	ds	1
  1191  000089                     ??_atoi:
  1192                           
  1193                           ; 1 bytes @ 0x9
  1194  000089                     	ds	3
  1195  00008C                     ___lldiv@counter:
  1196                           	opt callstack 0
  1197  00008C                     _toupper$1659:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 2 bytes @ 0xC
  1201  00008C                     	ds	1
  1202  00008D                     atoi@neg:
  1203                           	opt callstack 0
  1204  00008D                     fputs@s:
  1205                           	opt callstack 0
  1206  00008D                     I2C_Master_Init@clockFreq:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 4 bytes @ 0xD
  1210  00008D                     	ds	2
  1211  00008F                     _atoi$1567:
  1212                           	opt callstack 0
  1213  00008F                     fputs@fp:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0xF
  1217  00008F                     	ds	1
  1218  000090                     ___aodiv@counter:
  1219                           	opt callstack 0
  1220  000090                     ___aomod@counter:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 1 bytes @ 0x10
  1224  000090                     	ds	1
  1225  000091                     ??_I2C_Master_Init:
  1226  000091                     ___aodiv@sign:
  1227                           	opt callstack 0
  1228  000091                     ___aomod@sign:
  1229                           	opt callstack 0
  1230  000091                     fputs@c:
  1231                           	opt callstack 0
  1232  000091                     _atoi$1569:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x11
  1236  000091                     	ds	1
  1237  000092                     ?_abs:
  1238                           	opt callstack 0
  1239  000092                     abs@a:
  1240                           	opt callstack 0
  1241  000092                     fputs@i:
  1242                           	opt callstack 0
  1243  000092                     ___aodiv@quotient:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 8 bytes @ 0x12
  1247  000092                     	ds	1
  1248  000093                     _atoi$1568:
  1249                           	opt callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x13
  1252  000093                     	ds	1
  1253  000094                     ??_abs:
  1254  000094                     ?_pad:
  1255                           	opt callstack 0
  1256  000094                     pad@fp:
  1257                           	opt callstack 0
  1258  000094                     atoi@n:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x14
  1262  000094                     	ds	1
  1263  000095                     
  1264                           ; 1 bytes @ 0x15
  1265  000095                     	ds	1
  1266  000096                     pad@buf:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x16
  1270  000096                     	ds	2
  1271  000098                     pad@p:
  1272                           	opt callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x18
  1275  000098                     	ds	2
  1276  00009A                     ??_pad:
  1277                           
  1278                           ; 1 bytes @ 0x1A
  1279  00009A                     	ds	1
  1280  00009B                     pad@i:
  1281                           	opt callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x1B
  1284  00009B                     	ds	2
  1285  00009D                     pad@w:
  1286                           	opt callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x1D
  1289  00009D                     	ds	2
  1290  00009F                     ?_dtoa:
  1291                           	opt callstack 0
  1292  00009F                     ?_xtoa:
  1293                           	opt callstack 0
  1294  00009F                     dtoa@fp:
  1295                           	opt callstack 0
  1296  00009F                     xtoa@fp:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x1F
  1300  00009F                     	ds	2
  1301  0000A1                     dtoa@d:
  1302                           	opt callstack 0
  1303  0000A1                     xtoa@d:
  1304                           	opt callstack 0
  1305                           
  1306                           ; 8 bytes @ 0x21
  1307  0000A1                     	ds	8
  1308  0000A9                     ??_dtoa:
  1309  0000A9                     xtoa@x:
  1310                           	opt callstack 0
  1311                           
  1312                           ; 1 bytes @ 0x29
  1313  0000A9                     	ds	1
  1314  0000AA                     ??_xtoa:
  1315                           
  1316                           ; 1 bytes @ 0x2A
  1317  0000AA                     	ds	7
  1318  0000B1                     _dtoa$1083:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x31
  1322  0000B1                     	ds	1
  1323  0000B2                     _xtoa$1094:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x32
  1327  0000B2                     	ds	1
  1328  0000B3                     dtoa@p:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x33
  1332  0000B3                     	ds	1
  1333  0000B4                     _xtoa$1095:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x34
  1337  0000B4                     	ds	1
  1338  0000B5                     dtoa@w:
  1339                           	opt callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x35
  1342  0000B5                     	ds	1
  1343  0000B6                     xtoa@p:
  1344                           	opt callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x36
  1347  0000B6                     	ds	1
  1348  0000B7                     dtoa@s:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x37
  1352  0000B7                     	ds	1
  1353  0000B8                     xtoa@w:
  1354                           	opt callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x38
  1357  0000B8                     	ds	1
  1358  0000B9                     dtoa@n:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 8 bytes @ 0x39
  1362  0000B9                     	ds	1
  1363  0000BA                     xtoa@n:
  1364                           	opt callstack 0
  1365                           
  1366                           ; 8 bytes @ 0x3A
  1367  0000BA                     	ds	7
  1368  0000C1                     dtoa@i:
  1369                           	opt callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x41
  1372  0000C1                     	ds	1
  1373  0000C2                     xtoa@i:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x42
  1377  0000C2                     	ds	2
  1378  0000C4                     xtoa@c:
  1379                           	opt callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x44
  1382  0000C4                     	ds	2
  1383  0000C6                     ?_vfpfcnvrt:
  1384                           	opt callstack 0
  1385  0000C6                     vfpfcnvrt@fp:
  1386                           	opt callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x46
  1389  0000C6                     	ds	2
  1390  0000C8                     vfpfcnvrt@fmt:
  1391                           	opt callstack 0
  1392                           
  1393                           ; 2 bytes @ 0x48
  1394  0000C8                     	ds	2
  1395  0000CA                     vfpfcnvrt@ap:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x4A
  1399  0000CA                     	ds	2
  1400  0000CC                     ??_vfpfcnvrt:
  1401                           
  1402                           ; 1 bytes @ 0x4C
  1403  0000CC                     	ds	4
  1404  0000D0                     vfpfcnvrt@ll:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 8 bytes @ 0x50
  1408  0000D0                     	ds	8
  1409  0000D8                     vfpfcnvrt@llu:
  1410                           	opt callstack 0
  1411                           
  1412                           ; 8 bytes @ 0x58
  1413  0000D8                     	ds	8
  1414  0000E0                     vfpfcnvrt@c:
  1415                           	opt callstack 0
  1416                           
  1417                           ; 1 bytes @ 0x60
  1418  0000E0                     	ds	1
  1419  0000E1                     vfpfcnvrt@done:
  1420                           	opt callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x61
  1423  0000E1                     	ds	2
  1424  0000E3                     _vfpfcnvrt$1109:
  1425                           	opt callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x63
  1428  0000E3                     	ds	2
  1429  0000E5                     ?_vfprintf:
  1430                           	opt callstack 0
  1431  0000E5                     vfprintf@fp:
  1432                           	opt callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x65
  1435  0000E5                     	ds	2
  1436  0000E7                     vfprintf@fmt:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x67
  1440  0000E7                     	ds	2
  1441  0000E9                     vfprintf@ap:
  1442                           	opt callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x69
  1445  0000E9                     	ds	2
  1446  0000EB                     vfprintf@cfmt:
  1447                           	opt callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x6B
  1450  0000EB                     	ds	2
  1451  0000ED                     ?_printf:
  1452                           	opt callstack 0
  1453  0000ED                     printf@fmt:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x6D
  1457  0000ED                     	ds	8
  1458  0000F5                     
  1459                           ; 1 bytes @ 0x75
  1460  0000F5                     	ds	2
  1461  0000F7                     printf@ap:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x77
  1465  0000F7                     	ds	2
  1466  0000F9                     ??_print_echo:
  1467  0000F9                     ?_number_deploy:
  1468                           	opt callstack 0
  1469  0000F9                     number_deploy@avg_dist:
  1470                           	opt callstack 0
  1471  0000F9                     UI_main@t_dep:
  1472                           	opt callstack 0
  1473  0000F9                     full_drive@stepper_no:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x79
  1477  0000F9                     	ds	1
  1478  0000FA                     ??_ultrasonic_main:
  1479                           
  1480                           ; 1 bytes @ 0x7A
  1481  0000FA                     	ds	1
  1482  0000FB                     ??_full_drive:
  1483  0000FB                     ultrasonic_main@sensed:
  1484                           	opt callstack 0
  1485  0000FB                     number_deploy@poles_detected:
  1486                           	opt callstack 0
  1487  0000FB                     UI_main@poles_detected:
  1488                           	opt callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x7B
  1491  0000FB                     	ds	1
  1492  0000FC                     full_drive@direction:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 1 bytes @ 0x7C
  1496  0000FC                     	ds	1
  1497  0000FD                     
  1498                           ; 1 bytes @ 0x7D
  1499                           
  1500                           	psect	cstackCOMRAM
  1501  000001                     __pcstackCOMRAM:
  1502                           	opt callstack 0
  1503  000001                     ?i2___awdiv:
  1504                           	opt callstack 0
  1505  000001                     ?___xxtofl:
  1506                           	opt callstack 0
  1507  000001                     i2___awdiv@dividend:
  1508                           	opt callstack 0
  1509  000001                     ___xxtofl@val:
  1510                           	opt callstack 0
  1511                           
  1512                           ; 4 bytes @ 0x0
  1513  000001                     	ds	2
  1514  000003                     i2___awdiv@divisor:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x2
  1518  000003                     	ds	2
  1519  000005                     ??___xxtofl:
  1520  000005                     i2___awdiv@counter:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 1 bytes @ 0x4
  1524  000005                     	ds	1
  1525  000006                     i2___awdiv@sign:
  1526                           	opt callstack 0
  1527                           
  1528                           ; 1 bytes @ 0x5
  1529  000006                     	ds	1
  1530  000007                     i2___awdiv@quotient:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 2 bytes @ 0x6
  1534  000007                     	ds	2
  1535  000009                     ___xxtofl@sign:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 1 bytes @ 0x8
  1539  000009                     	ds	1
  1540  00000A                     ___xxtofl@exp:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 1 bytes @ 0x9
  1544  00000A                     	ds	1
  1545  00000B                     ___xxtofl@arg:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 4 bytes @ 0xA
  1549  00000B                     	ds	4
  1550  00000F                     ?___fldiv:
  1551                           	opt callstack 0
  1552  00000F                     ___fldiv@b:
  1553                           	opt callstack 0
  1554                           
  1555                           ; 4 bytes @ 0xE
  1556  00000F                     	ds	4
  1557  000013                     ___fldiv@a:
  1558                           	opt callstack 0
  1559                           
  1560                           ; 4 bytes @ 0x12
  1561  000013                     	ds	4
  1562  000017                     ??___fldiv:
  1563                           
  1564                           ; 1 bytes @ 0x16
  1565  000017                     	ds	4
  1566  00001B                     ___fldiv@rem:
  1567                           	opt callstack 0
  1568                           
  1569                           ; 4 bytes @ 0x1A
  1570  00001B                     	ds	4
  1571  00001F                     ___fldiv@sign:
  1572                           	opt callstack 0
  1573                           
  1574                           ; 1 bytes @ 0x1E
  1575  00001F                     	ds	1
  1576  000020                     ___fldiv@new_exp:
  1577                           	opt callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x1F
  1580  000020                     	ds	2
  1581  000022                     ___fldiv@grs:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 4 bytes @ 0x21
  1585  000022                     	ds	4
  1586  000026                     ___fldiv@bexp:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 1 bytes @ 0x25
  1590  000026                     	ds	1
  1591  000027                     ___fldiv@aexp:
  1592                           	opt callstack 0
  1593                           
  1594                           ; 1 bytes @ 0x26
  1595  000027                     	ds	1
  1596  000028                     ?___fltol:
  1597                           	opt callstack 0
  1598  000028                     ___fltol@f1:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x27
  1602  000028                     	ds	4
  1603  00002C                     ??___fltol:
  1604                           
  1605                           ; 1 bytes @ 0x2B
  1606  00002C                     	ds	4
  1607  000030                     ___fltol@sign1:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 1 bytes @ 0x2F
  1611  000030                     	ds	1
  1612  000031                     ___fltol@exp1:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 1 bytes @ 0x30
  1616  000031                     	ds	1
  1617  000032                     ??_echo:
  1618                           
  1619                           ; 1 bytes @ 0x31
  1620  000032                     	ds	4
  1621  000036                     ??_ISR:
  1622                           
  1623                           ; 1 bytes @ 0x35
  1624  000036                     	ds	2
  1625                           
  1626 ;;
  1627 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1628 ;;
  1629 ;; *************** function _main *****************
  1630 ;; Defined at:
  1631 ;;		line 635 in file "main.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  k               2   92[BANK2 ] int 
  1636 ;;  i               2   86[BANK2 ] int 
  1637 ;;  i               2   84[BANK2 ] int 
  1638 ;;  i               2   96[BANK2 ] int 
  1639 ;;  pole_cl_dist    2   82[BANK2 ] int 
  1640 ;;  Pole           80    0[BANK2 ] struct Poles[10]
  1641 ;;  prev_avg_dis    4  100[BANK2 ] volatile long 
  1642 ;;  poles_detect    2   98[BANK2 ] int 
  1643 ;;  t_dep           2   94[BANK2 ] int 
  1644 ;;  t_count         2   90[BANK2 ] int 
  1645 ;;  stack           2   88[BANK2 ] int 
  1646 ;;  read            2    0        int 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:         0       0       0     104       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:         0       0       2     104       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:      106 bytes
  1661 ;; Hardware stack levels required when called:   17
  1662 ;; This function calls:
  1663 ;;		_UI_main
  1664 ;;		___wmul
  1665 ;;		_actuators_main
  1666 ;;		_backwards
  1667 ;;		_brake
  1668 ;;		_initLCD
  1669 ;;		_lcdInst
  1670 ;;		_number_deploy
  1671 ;;		_printf
  1672 ;;		_start
  1673 ;;		_ultrasonic_main
  1674 ;; This function is called by:
  1675 ;;		Startup code after reset
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text0
  1680  000D4A                     __ptext0:
  1681                           	opt callstack 0
  1682  000D4A                     _main:
  1683                           	opt callstack 14
  1684                           
  1685                           ;main.c: 637:     int t_dep=0;
  1686                           
  1687                           ;incstack = 0
  1688  000D4A  0E00               	movlw	0
  1689  000D4C  0102               	movlb	2	; () banked
  1690  000D4E  6FD7               	movwf	(main@t_dep+1)& (0+255),b
  1691  000D50  0E00               	movlw	0
  1692  000D52  6FD6               	movwf	main@t_dep& (0+255),b
  1693                           
  1694                           ;main.c: 638:     int t_count;;main.c: 639:  TRISD = 0x00;
  1695  000D54  0E00               	movlw	0
  1696  000D56  6E95               	movwf	3989,c	;volatile
  1697                           
  1698                           ; BSR set to: 2
  1699                           ;main.c: 640:  GIE = 1;
  1700  000D58  8EF2               	bsf	4082,7,c	;volatile
  1701                           
  1702                           ;main.c: 642:     ADCON1=0x0F;
  1703  000D5A  0E0F               	movlw	15
  1704  000D5C  6EC1               	movwf	4033,c	;volatile
  1705                           
  1706                           ; BSR set to: 2
  1707                           ;main.c: 644:  initLCD();
  1708  000D5E  EC69  F017         	call	_initLCD	;wreg free
  1709                           
  1710                           ;main.c: 646:  T1CON = 0x10;
  1711  000D62  0E10               	movlw	16
  1712  000D64  6ECD               	movwf	4045,c	;volatile
  1713                           
  1714                           ;main.c: 647:     int poles_detected=0;
  1715  000D66  0E00               	movlw	0
  1716  000D68  0102               	movlb	2	; () banked
  1717  000D6A  6FDB               	movwf	(main@poles_detected+1)& (0+255),b
  1718  000D6C  0E00               	movlw	0
  1719  000D6E  6FDA               	movwf	main@poles_detected& (0+255),b
  1720                           
  1721                           ; BSR set to: 2
  1722                           ;main.c: 649:     volatile long prev_avg_dist=0;
  1723                           
  1724                           ; BSR set to: 2
  1725  000D70  0E00               	movlw	0
  1726  000D72  6FDC               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1727  000D74  0E00               	movlw	0
  1728  000D76  6FDD               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1729  000D78  0E00               	movlw	0
  1730  000D7A  6FDE               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1731  000D7C  0E00               	movlw	0
  1732  000D7E  6FDF               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1733                           
  1734                           ; BSR set to: 2
  1735                           ;main.c: 651:     TRISAbits.RA4 = 0;
  1736  000D80  9892               	bcf	3986,4,c	;volatile
  1737                           
  1738                           ; BSR set to: 2
  1739                           ;main.c: 654:     Poles Pole[10];;main.c: 662:     if (~sens){
  1740  000D82  2860               	incf	_sens,w,c	;volatile
  1741  000D84  E103               	bnz	u8040
  1742  000D86  2861               	incf	_sens+1,w,c	;volatile
  1743  000D88  B4D8               	btfsc	status,2,c
  1744  000D8A  D00B               	goto	l7348
  1745  000D8C                     u8040:
  1746                           
  1747                           ; BSR set to: 2
  1748                           ;main.c: 663:         UI_main( t_dep, poles_detected);
  1749  000D8C  0E00               	movlw	0
  1750  000D8E  0100               	movlb	0	; () banked
  1751  000D90  6FFA               	movwf	(UI_main@t_dep+1)& (0+255),b
  1752  000D92  0E00               	movlw	0
  1753  000D94  6FF9               	movwf	UI_main@t_dep& (0+255),b
  1754  000D96  0E00               	movlw	0
  1755  000D98  6FFC               	movwf	(UI_main@poles_detected+1)& (0+255),b
  1756  000D9A  0E00               	movlw	0
  1757  000D9C  6FFB               	movwf	UI_main@poles_detected& (0+255),b
  1758  000D9E  EC09  F000         	call	_UI_main	;wreg free
  1759  000DA2                     l7348:
  1760                           
  1761                           ;main.c: 669:         if ((poles_detected <10)&&(avg_dist<4000)){
  1762  000DA2  0102               	movlb	2	; () banked
  1763  000DA4  BFDB               	btfsc	(main@poles_detected+1)& (0+255),7,b
  1764  000DA6  D006               	goto	u8050
  1765  000DA8  51DB               	movf	(main@poles_detected+1)& (0+255),w,b
  1766  000DAA  E103               	bnz	u8051
  1767  000DAC  0E0A               	movlw	10
  1768  000DAE  5DDA               	subwf	main@poles_detected& (0+255),w,b
  1769  000DB0  B0D8               	btfsc	status,0,c
  1770  000DB2                     u8051:
  1771  000DB2  D162               	goto	l7430
  1772  000DB4                     u8050:
  1773                           
  1774                           ; BSR set to: 2
  1775  000DB4  BE4F               	btfsc	_avg_dist+3,7,c	;volatile
  1776  000DB6  D009               	goto	u8060
  1777  000DB8  504F               	movf	_avg_dist+3,w,c	;volatile
  1778  000DBA  104E               	iorwf	_avg_dist+2,w,c	;volatile
  1779  000DBC  E105               	bnz	u8061
  1780  000DBE  0EA0               	movlw	160
  1781  000DC0  5C4C               	subwf	_avg_dist,w,c	;volatile
  1782  000DC2  0E0F               	movlw	15
  1783  000DC4  584D               	subwfb	_avg_dist+1,w,c	;volatile
  1784  000DC6  B0D8               	btfsc	status,0,c
  1785  000DC8                     u8061:
  1786  000DC8  D157               	goto	l7430
  1787  000DCA                     u8060:
  1788                           
  1789                           ; BSR set to: 2
  1790                           ;main.c: 678:             if (sens){
  1791  000DCA  5060               	movf	_sens,w,c	;volatile
  1792  000DCC  1061               	iorwf	_sens+1,w,c	;volatile
  1793  000DCE  A4D8               	btfss	status,2,c
  1794                           
  1795                           ; BSR set to: 2
  1796                           ;main.c: 695:                     ultrasonic_main();
  1797  000DD0  EC04  F015         	call	_ultrasonic_main	;wreg free
  1798                           
  1799                           ;main.c: 703:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  1800  000DD4  0102               	movlb	2	; () banked
  1801  000DD6  51DC               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  1802  000DD8  5C4C               	subwf	_avg_dist,w,c	;volatile
  1803  000DDA  6FCA               	movwf	main@pole_cl_dist& (0+255),b
  1804  000DDC  51DD               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  1805  000DDE  584D               	subwfb	_avg_dist+1,w,c	;volatile
  1806  000DE0  6FCB               	movwf	(main@pole_cl_dist+1)& (0+255),b
  1807                           
  1808                           ; BSR set to: 2
  1809                           ;main.c: 704:             t_count = number_deploy(avg_dist, poles_detected);
  1810  000DE2  C04C  F0F9         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  1811  000DE6  C04D  F0FA         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  1812  000DEA  C2DA  F0FB         	movff	main@poles_detected,number_deploy@poles_detected
  1813  000DEE  C2DB  F0FC         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  1814  000DF2  EC85  F00F         	call	_number_deploy	;wreg free
  1815  000DF6  C0F9  F2D2         	movff	?_number_deploy,main@t_count
  1816  000DFA  C0FA  F2D3         	movff	?_number_deploy+1,main@t_count+1
  1817                           
  1818                           ;main.c: 709:             if (t_count<=2){
  1819  000DFE  0102               	movlb	2	; () banked
  1820  000E00  BFD3               	btfsc	(main@t_count+1)& (0+255),7,b
  1821  000E02  D006               	goto	u8080
  1822  000E04  51D3               	movf	(main@t_count+1)& (0+255),w,b
  1823  000E06  E15A               	bnz	l7388
  1824  000E08  0E03               	movlw	3
  1825  000E0A  5DD2               	subwf	main@t_count& (0+255),w,b
  1826  000E0C  B0D8               	btfsc	status,0,c
  1827  000E0E  D056               	goto	u8120
  1828  000E10                     u8080:
  1829                           
  1830                           ; BSR set to: 2
  1831                           ;main.c: 710:                 if (t_dep <8){
  1832  000E10  BFD7               	btfsc	(main@t_dep+1)& (0+255),7,b
  1833  000E12  D006               	goto	u8090
  1834  000E14  51D7               	movf	(main@t_dep+1)& (0+255),w,b
  1835  000E16  E128               	bnz	l7376
  1836  000E18  0E08               	movlw	8
  1837  000E1A  5DD6               	subwf	main@t_dep& (0+255),w,b
  1838  000E1C  B0D8               	btfsc	status,0,c
  1839  000E1E  D024               	goto	u8100
  1840  000E20                     u8090:
  1841                           
  1842                           ; BSR set to: 2
  1843                           ;main.c: 713:                     stack = 1;
  1844  000E20  0E00               	movlw	0
  1845  000E22  6FD1               	movwf	(main@stack+1)& (0+255),b
  1846  000E24  0E01               	movlw	1
  1847  000E26  6FD0               	movwf	main@stack& (0+255),b
  1848                           
  1849                           ; BSR set to: 2
  1850                           ;main.c: 714:                                     brake();
  1851  000E28  ECE5  F01A         	call	_brake	;wreg free
  1852                           
  1853                           ;main.c: 716:                     for(int i=0; i<(t_count); i++){
  1854  000E2C  0E00               	movlw	0
  1855  000E2E  0102               	movlb	2	; () banked
  1856  000E30  6FCD               	movwf	(main@i+1)& (0+255),b
  1857  000E32  0E00               	movlw	0
  1858  000E34  6FCC               	movwf	main@i& (0+255),b
  1859  000E36  D00B               	goto	l7374
  1860  000E38                     l7368:
  1861                           
  1862                           ; BSR set to: 1
  1863                           ;main.c: 717:                         actuators_main(stack);
  1864  000E38  C2D0  F108         	movff	main@stack,actuators_main@stack
  1865  000E3C  C2D1  F109         	movff	main@stack+1,actuators_main@stack+1
  1866  000E40  EC89  F014         	call	_actuators_main	;wreg free
  1867                           
  1868                           ;main.c: 718:                         t_dep++;
  1869  000E44  0102               	movlb	2	; () banked
  1870  000E46  4BD6               	infsnz	main@t_dep& (0+255),f,b
  1871  000E48  2BD7               	incf	(main@t_dep+1)& (0+255),f,b
  1872                           
  1873                           ; BSR set to: 2
  1874                           ;main.c: 719:                     }
  1875  000E4A  4BCC               	infsnz	main@i& (0+255),f,b
  1876  000E4C  2BCD               	incf	(main@i+1)& (0+255),f,b
  1877  000E4E                     l7374:
  1878                           
  1879                           ; BSR set to: 2
  1880  000E4E  51D2               	movf	main@t_count& (0+255),w,b
  1881  000E50  5DCC               	subwf	main@i& (0+255),w,b
  1882  000E52  51CD               	movf	(main@i+1)& (0+255),w,b
  1883  000E54  0A80               	xorlw	128
  1884  000E56  0101               	movlb	1	; () banked
  1885  000E58  6F5A               	movwf	??_main& (0+255),b
  1886  000E5A  0102               	movlb	2	; () banked
  1887  000E5C  51D3               	movf	(main@t_count+1)& (0+255),w,b
  1888  000E5E  0A80               	xorlw	128
  1889  000E60  0101               	movlb	1	; () banked
  1890  000E62  595A               	subwfb	??_main& (0+255),w,b
  1891  000E64  A0D8               	btfss	status,0,c
  1892  000E66  D7E8               	goto	l7368
  1893  000E68                     u8100:
  1894  000E68                     l7376:
  1895                           
  1896                           ;main.c: 721:                 if (t_dep >= 8){
  1897  000E68  0102               	movlb	2	; () banked
  1898  000E6A  BFD7               	btfsc	(main@t_dep+1)& (0+255),7,b
  1899  000E6C  D027               	goto	u8120
  1900  000E6E  51D7               	movf	(main@t_dep+1)& (0+255),w,b
  1901  000E70  E104               	bnz	u8110
  1902  000E72  0E08               	movlw	8
  1903  000E74  5DD6               	subwf	main@t_dep& (0+255),w,b
  1904  000E76  A0D8               	btfss	status,0,c
  1905  000E78  D021               	goto	u8120
  1906  000E7A                     u8110:
  1907                           
  1908                           ; BSR set to: 2
  1909                           ;main.c: 722:                     stack = 2;
  1910  000E7A  0E00               	movlw	0
  1911  000E7C  6FD1               	movwf	(main@stack+1)& (0+255),b
  1912  000E7E  0E02               	movlw	2
  1913  000E80  6FD0               	movwf	main@stack& (0+255),b
  1914                           
  1915                           ;main.c: 723:                     for(int i=0; i<(t_count); i++){
  1916  000E82  0E00               	movlw	0
  1917  000E84  6FCF               	movwf	(main@i_503+1)& (0+255),b
  1918  000E86  0E00               	movlw	0
  1919  000E88  6FCE               	movwf	main@i_503& (0+255),b
  1920  000E8A  D00B               	goto	l7386
  1921  000E8C                     l7380:
  1922                           
  1923                           ; BSR set to: 1
  1924                           ;main.c: 724:                         actuators_main(stack);
  1925  000E8C  C2D0  F108         	movff	main@stack,actuators_main@stack
  1926  000E90  C2D1  F109         	movff	main@stack+1,actuators_main@stack+1
  1927  000E94  EC89  F014         	call	_actuators_main	;wreg free
  1928                           
  1929                           ;main.c: 725:                         t_dep++;
  1930  000E98  0102               	movlb	2	; () banked
  1931  000E9A  4BD6               	infsnz	main@t_dep& (0+255),f,b
  1932  000E9C  2BD7               	incf	(main@t_dep+1)& (0+255),f,b
  1933                           
  1934                           ; BSR set to: 2
  1935                           ;main.c: 726:                     }
  1936  000E9E  4BCE               	infsnz	main@i_503& (0+255),f,b
  1937  000EA0  2BCF               	incf	(main@i_503+1)& (0+255),f,b
  1938  000EA2                     l7386:
  1939                           
  1940                           ; BSR set to: 2
  1941  000EA2  51D2               	movf	main@t_count& (0+255),w,b
  1942  000EA4  5DCE               	subwf	main@i_503& (0+255),w,b
  1943  000EA6  51CF               	movf	(main@i_503+1)& (0+255),w,b
  1944  000EA8  0A80               	xorlw	128
  1945  000EAA  0101               	movlb	1	; () banked
  1946  000EAC  6F5A               	movwf	??_main& (0+255),b
  1947  000EAE  0102               	movlb	2	; () banked
  1948  000EB0  51D3               	movf	(main@t_count+1)& (0+255),w,b
  1949  000EB2  0A80               	xorlw	128
  1950  000EB4  0101               	movlb	1	; () banked
  1951  000EB6  595A               	subwfb	??_main& (0+255),w,b
  1952  000EB8  A0D8               	btfss	status,0,c
  1953  000EBA  D7E8               	goto	l7380
  1954  000EBC                     u8120:
  1955  000EBC                     l7388:
  1956                           
  1957                           ;main.c: 731:             Pole[poles_detected].dist_from_cl = pole_cl_dist;
  1958  000EBC  C2DA  F15A         	movff	main@poles_detected,??_main
  1959  000EC0  C2DB  F15B         	movff	main@poles_detected+1,??_main+1
  1960  000EC4  0101               	movlb	1	; () banked
  1961  000EC6  90D8               	bcf	status,0,c
  1962  000EC8  375A               	rlcf	??_main& (0+255),f,b
  1963  000ECA  375B               	rlcf	(??_main+1)& (0+255),f,b
  1964  000ECC  90D8               	bcf	status,0,c
  1965  000ECE  375A               	rlcf	??_main& (0+255),f,b
  1966  000ED0  375B               	rlcf	(??_main+1)& (0+255),f,b
  1967  000ED2  90D8               	bcf	status,0,c
  1968  000ED4  375A               	rlcf	??_main& (0+255),f,b
  1969  000ED6  375B               	rlcf	(??_main+1)& (0+255),f,b
  1970  000ED8  0E06               	movlw	6
  1971  000EDA  275A               	addwf	??_main& (0+255),f,b
  1972  000EDC  0E00               	movlw	0
  1973  000EDE  235B               	addwfc	(??_main+1)& (0+255),f,b
  1974  000EE0  0E78               	movlw	low main@Pole
  1975  000EE2  255A               	addwf	??_main& (0+255),w,b
  1976  000EE4  6ED9               	movwf	fsr2l,c
  1977  000EE6  0E02               	movlw	high main@Pole
  1978  000EE8  215B               	addwfc	(??_main+1)& (0+255),w,b
  1979  000EEA  6EDA               	movwf	fsr2h,c
  1980  000EEC  C2CA  FFDE         	movff	main@pole_cl_dist,postinc2
  1981  000EF0  C2CB  FFDD         	movff	main@pole_cl_dist+1,postdec2
  1982                           
  1983                           ;main.c: 732:             Pole[poles_detected].dist_from_start = avg_dist;
  1984  000EF4  C2DA  F15A         	movff	main@poles_detected,??_main
  1985  000EF8  C2DB  F15B         	movff	main@poles_detected+1,??_main+1
  1986  000EFC  90D8               	bcf	status,0,c
  1987  000EFE  375A               	rlcf	??_main& (0+255),f,b
  1988  000F00  375B               	rlcf	(??_main+1)& (0+255),f,b
  1989  000F02  90D8               	bcf	status,0,c
  1990  000F04  375A               	rlcf	??_main& (0+255),f,b
  1991  000F06  375B               	rlcf	(??_main+1)& (0+255),f,b
  1992  000F08  90D8               	bcf	status,0,c
  1993  000F0A  375A               	rlcf	??_main& (0+255),f,b
  1994  000F0C  375B               	rlcf	(??_main+1)& (0+255),f,b
  1995  000F0E  0E04               	movlw	4
  1996  000F10  275A               	addwf	??_main& (0+255),f,b
  1997  000F12  0E00               	movlw	0
  1998  000F14  235B               	addwfc	(??_main+1)& (0+255),f,b
  1999  000F16  0E78               	movlw	low main@Pole
  2000  000F18  255A               	addwf	??_main& (0+255),w,b
  2001  000F1A  6ED9               	movwf	fsr2l,c
  2002  000F1C  0E02               	movlw	high main@Pole
  2003  000F1E  215B               	addwfc	(??_main+1)& (0+255),w,b
  2004  000F20  6EDA               	movwf	fsr2h,c
  2005  000F22  C04C  FFDE         	movff	_avg_dist,postinc2	;volatile
  2006  000F26  C04D  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;main.c: 734:             prev_avg_dist = avg_dist ;
  2010  000F2A  C04C  F2DC         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2011  000F2E  C04D  F2DD         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2012  000F32  C04E  F2DE         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2013  000F36  C04F  F2DF         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2014                           
  2015                           ; BSR set to: 1
  2016                           ;main.c: 735:             poles_detected++;
  2017  000F3A  0102               	movlb	2	; () banked
  2018  000F3C  4BDA               	infsnz	main@poles_detected& (0+255),f,b
  2019  000F3E  2BDB               	incf	(main@poles_detected+1)& (0+255),f,b
  2020                           
  2021                           ; BSR set to: 2
  2022                           ;main.c: 737:             start();
  2023  000F40  EC16  F019         	call	_start	;wreg free
  2024                           
  2025                           ;main.c: 743:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2026  000F44  0E01               	movlw	1
  2027  000F46  EC4C  F01B         	call	_lcdInst
  2028  000F4A  0E11               	movlw	17
  2029  000F4C  0101               	movlb	1	; () banked
  2030  000F4E  6F5A               	movwf	??_main& (0+255),b
  2031  000F50  0E3A               	movlw	58
  2032  000F52                     u8177:
  2033  000F52  2EE8               	decfsz	wreg,f,c
  2034  000F54  D7FE               	bra	u8177
  2035  000F56  2F5A               	decfsz	??_main& (0+255),f,b
  2036  000F58  D7FC               	bra	u8177
  2037  000F5A  F000               	nop	
  2038                           
  2039                           ;main.c: 744:             printf("avg dist %d", avg_dist);
  2040  000F5C  0E66               	movlw	low STR_40
  2041  000F5E  0100               	movlb	0	; () banked
  2042  000F60  6FED               	movwf	printf@fmt& (0+255),b
  2043  000F62  0EFF               	movlw	high STR_40
  2044  000F64  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2045  000F66  C04C  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2046  000F6A  C04D  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2047  000F6E  C04E  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2048  000F72  C04F  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2049  000F76  ECBD  F01A         	call	_printf	;wreg free
  2050                           
  2051                           ;main.c: 745:             printf("poles d %d", poles_detected);
  2052  000F7A  0E95               	movlw	low STR_41
  2053  000F7C  0100               	movlb	0	; () banked
  2054  000F7E  6FED               	movwf	printf@fmt& (0+255),b
  2055  000F80  0EFF               	movlw	high STR_41
  2056  000F82  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2057  000F84  C2DA  F0EF         	movff	main@poles_detected,?_printf+2
  2058  000F88  C2DB  F0F0         	movff	main@poles_detected+1,?_printf+3
  2059  000F8C  ECBD  F01A         	call	_printf	;wreg free
  2060                           
  2061                           ;main.c: 746:                                 for (int i=0;i<4;i++){
  2062  000F90  0E00               	movlw	0
  2063  000F92  0102               	movlb	2	; () banked
  2064  000F94  6FD9               	movwf	(main@i_511+1)& (0+255),b
  2065  000F96  0E00               	movlw	0
  2066  000F98  6FD8               	movwf	main@i_511& (0+255),b
  2067  000F9A                     l7410:
  2068                           
  2069                           ; BSR set to: 2
  2070                           ;main.c: 747:                         sum[i] = 0 ;
  2071  000F9A  90D8               	bcf	status,0,c
  2072  000F9C  35D8               	rlcf	main@i_511& (0+255),w,b
  2073  000F9E  6ED9               	movwf	fsr2l,c
  2074  000FA0  35D9               	rlcf	(main@i_511+1)& (0+255),w,b
  2075  000FA2  6EDA               	movwf	fsr2h,c
  2076  000FA4  0E38               	movlw	low _sum
  2077  000FA6  26D9               	addwf	fsr2l,f,c
  2078  000FA8  0E00               	movlw	high _sum
  2079  000FAA  22DA               	addwfc	fsr2h,f,c
  2080  000FAC  0E00               	movlw	0
  2081  000FAE  6EDE               	movwf	postinc2,c
  2082  000FB0  0E00               	movlw	0
  2083  000FB2  6EDD               	movwf	postdec2,c
  2084                           
  2085                           ;main.c: 748:                         a[i] =0 ;
  2086  000FB4  90D8               	bcf	status,0,c
  2087  000FB6  35D8               	rlcf	main@i_511& (0+255),w,b
  2088  000FB8  6ED9               	movwf	fsr2l,c
  2089  000FBA  35D9               	rlcf	(main@i_511+1)& (0+255),w,b
  2090  000FBC  6EDA               	movwf	fsr2h,c
  2091  000FBE  0E40               	movlw	low _a
  2092  000FC0  26D9               	addwf	fsr2l,f,c
  2093  000FC2  0E00               	movlw	high _a
  2094  000FC4  22DA               	addwfc	fsr2h,f,c
  2095  000FC6  0E00               	movlw	0
  2096  000FC8  6EDE               	movwf	postinc2,c
  2097  000FCA  0E00               	movlw	0
  2098  000FCC  6EDD               	movwf	postdec2,c
  2099                           
  2100                           ;main.c: 749:                         sumf[i] = 0 ;
  2101  000FCE  0E48               	movlw	low _sumf
  2102  000FD0  25D8               	addwf	main@i_511& (0+255),w,b
  2103  000FD2  6ED9               	movwf	fsr2l,c
  2104  000FD4  0E00               	movlw	high _sumf
  2105  000FD6  21D9               	addwfc	(main@i_511+1)& (0+255),w,b
  2106  000FD8  6EDA               	movwf	fsr2h,c
  2107  000FDA  0E00               	movlw	0
  2108  000FDC  6EDF               	movwf	indf2,c
  2109                           
  2110                           ; BSR set to: 2
  2111                           ;main.c: 751:                         for (int k=0;k<6;k++){
  2112  000FDE  0E00               	movlw	0
  2113  000FE0  6FD5               	movwf	(main@k+1)& (0+255),b
  2114  000FE2  0E00               	movlw	0
  2115  000FE4  6FD4               	movwf	main@k& (0+255),b
  2116  000FE6                     l7418:
  2117                           
  2118                           ; BSR set to: 2
  2119                           ;main.c: 752:                             dist_final[i][k] = 0;
  2120  000FE6  C2D8  F080         	movff	main@i_511,___wmul@multiplier
  2121  000FEA  C2D9  F081         	movff	main@i_511+1,___wmul@multiplier+1
  2122  000FEE  0E00               	movlw	0
  2123  000FF0  0100               	movlb	0	; () banked
  2124  000FF2  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2125  000FF4  0E0C               	movlw	12
  2126  000FF6  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2127  000FF8  ECD1  F01A         	call	___wmul	;wreg free
  2128  000FFC  0E6E               	movlw	low _dist_final
  2129  000FFE  0101               	movlb	1	; () banked
  2130  001000  6F5A               	movwf	??_main& (0+255),b
  2131  001002  0E01               	movlw	high _dist_final
  2132  001004  6F5B               	movwf	(??_main+1)& (0+255),b
  2133  001006  0100               	movlb	0	; () banked
  2134  001008  5180               	movf	?___wmul& (0+255),w,b
  2135  00100A  0101               	movlb	1	; () banked
  2136  00100C  275A               	addwf	??_main& (0+255),f,b
  2137  00100E  0100               	movlb	0	; () banked
  2138  001010  5181               	movf	(?___wmul+1)& (0+255),w,b
  2139  001012  0101               	movlb	1	; () banked
  2140  001014  235B               	addwfc	(??_main+1)& (0+255),f,b
  2141  001016  90D8               	bcf	status,0,c
  2142  001018  0102               	movlb	2	; () banked
  2143  00101A  35D4               	rlcf	main@k& (0+255),w,b
  2144  00101C  6ED9               	movwf	fsr2l,c
  2145  00101E  35D5               	rlcf	(main@k+1)& (0+255),w,b
  2146  001020  6EDA               	movwf	fsr2h,c
  2147  001022  0101               	movlb	1	; () banked
  2148  001024  515A               	movf	??_main& (0+255),w,b
  2149  001026  26D9               	addwf	fsr2l,f,c
  2150  001028  515B               	movf	(??_main+1)& (0+255),w,b
  2151  00102A  22DA               	addwfc	fsr2h,f,c
  2152  00102C  0E00               	movlw	0
  2153  00102E  6EDE               	movwf	postinc2,c
  2154  001030  0E00               	movlw	0
  2155  001032  6EDD               	movwf	postdec2,c
  2156                           
  2157                           ; BSR set to: 1
  2158                           ;main.c: 753:                         }
  2159  001034  0102               	movlb	2	; () banked
  2160  001036  4BD4               	infsnz	main@k& (0+255),f,b
  2161  001038  2BD5               	incf	(main@k+1)& (0+255),f,b
  2162                           
  2163                           ; BSR set to: 2
  2164  00103A  BFD5               	btfsc	(main@k+1)& (0+255),7,b
  2165  00103C  D7D4               	goto	l7418
  2166  00103E  51D5               	movf	(main@k+1)& (0+255),w,b
  2167  001040  E104               	bnz	u8130
  2168  001042  0E06               	movlw	6
  2169  001044  5DD4               	subwf	main@k& (0+255),w,b
  2170  001046  A0D8               	btfss	status,0,c
  2171  001048  D7CE               	goto	l7418
  2172  00104A                     u8130:
  2173                           
  2174                           ; BSR set to: 2
  2175                           ;main.c: 754:                     }
  2176  00104A  4BD8               	infsnz	main@i_511& (0+255),f,b
  2177  00104C  2BD9               	incf	(main@i_511+1)& (0+255),f,b
  2178                           
  2179                           ; BSR set to: 2
  2180  00104E  BFD9               	btfsc	(main@i_511+1)& (0+255),7,b
  2181  001050  D7A4               	goto	l7410
  2182  001052  51D9               	movf	(main@i_511+1)& (0+255),w,b
  2183  001054  E104               	bnz	u8140
  2184  001056  0E04               	movlw	4
  2185  001058  5DD8               	subwf	main@i_511& (0+255),w,b
  2186  00105A  A0D8               	btfss	status,0,c
  2187  00105C  D79E               	goto	l7410
  2188  00105E                     u8140:
  2189                           
  2190                           ; BSR set to: 2
  2191                           ;main.c: 755:             _delay((unsigned long)((3000)*(10000000/4000.0)));
  2192  00105E  0E27               	movlw	39
  2193  001060  0101               	movlb	1	; () banked
  2194  001062  6F5B               	movwf	(??_main+1)& (0+255),b
  2195  001064  0E0D               	movlw	13
  2196  001066  6F5A               	movwf	??_main& (0+255),b
  2197  001068  0E26               	movlw	38
  2198  00106A                     u8187:
  2199  00106A  2EE8               	decfsz	wreg,f,c
  2200  00106C  D7FE               	bra	u8187
  2201  00106E  2F5A               	decfsz	??_main& (0+255),f,b
  2202  001070  D7FC               	bra	u8187
  2203  001072  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2204  001074  D7FA               	bra	u8187
  2205  001076  D04D               	goto	L1
  2206  001078                     l7430:
  2207                           
  2208                           ; BSR set to: 2
  2209                           ;main.c: 758:             brake();
  2210  001078  ECE5  F01A         	call	_brake	;wreg free
  2211                           
  2212                           ;main.c: 759:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2213  00107C  0E01               	movlw	1
  2214  00107E  EC4C  F01B         	call	_lcdInst
  2215  001082  0E11               	movlw	17
  2216  001084  0101               	movlb	1	; () banked
  2217  001086  6F5A               	movwf	??_main& (0+255),b
  2218  001088  0E3A               	movlw	58
  2219  00108A                     u8197:
  2220  00108A  2EE8               	decfsz	wreg,f,c
  2221  00108C  D7FE               	bra	u8197
  2222  00108E  2F5A               	decfsz	??_main& (0+255),f,b
  2223  001090  D7FC               	bra	u8197
  2224  001092  F000               	nop	
  2225                           
  2226                           ;main.c: 760:             printf("poles done");
  2227  001094  0EA0               	movlw	low STR_42
  2228  001096  0100               	movlb	0	; () banked
  2229  001098  6FED               	movwf	printf@fmt& (0+255),b
  2230  00109A  0EFF               	movlw	high STR_42
  2231  00109C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2232  00109E  ECBD  F01A         	call	_printf	;wreg free
  2233                           
  2234                           ;main.c: 761:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2235  0010A2  0E0D               	movlw	13
  2236  0010A4  0101               	movlb	1	; () banked
  2237  0010A6  6F5B               	movwf	(??_main+1)& (0+255),b
  2238  0010A8  0EAF               	movlw	175
  2239  0010AA  6F5A               	movwf	??_main& (0+255),b
  2240  0010AC  0EB6               	movlw	182
  2241  0010AE                     u8207:
  2242  0010AE  2EE8               	decfsz	wreg,f,c
  2243  0010B0  D7FE               	bra	u8207
  2244  0010B2  2F5A               	decfsz	??_main& (0+255),f,b
  2245  0010B4  D7FC               	bra	u8207
  2246  0010B6  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2247  0010B8  D7FA               	bra	u8207
  2248  0010BA  F000               	nop	
  2249                           
  2250                           ;main.c: 762:             UI_main(t_dep, poles_detected);
  2251  0010BC  C2D6  F0F9         	movff	main@t_dep,UI_main@t_dep
  2252  0010C0  C2D7  F0FA         	movff	main@t_dep+1,UI_main@t_dep+1
  2253  0010C4  C2DA  F0FB         	movff	main@poles_detected,UI_main@poles_detected
  2254  0010C8  C2DB  F0FC         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2255  0010CC  EC09  F000         	call	_UI_main	;wreg free
  2256                           
  2257                           ;main.c: 763:             backwards();
  2258  0010D0  ECF8  F01A         	call	_backwards	;wreg free
  2259                           
  2260                           ;main.c: 764:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2261  0010D4  0E01               	movlw	1
  2262  0010D6  EC4C  F01B         	call	_lcdInst
  2263  0010DA  0E11               	movlw	17
  2264  0010DC  0101               	movlb	1	; () banked
  2265  0010DE  6F5A               	movwf	??_main& (0+255),b
  2266  0010E0  0E3A               	movlw	58
  2267  0010E2                     u8217:
  2268  0010E2  2EE8               	decfsz	wreg,f,c
  2269  0010E4  D7FE               	bra	u8217
  2270  0010E6  2F5A               	decfsz	??_main& (0+255),f,b
  2271  0010E8  D7FC               	bra	u8217
  2272  0010EA  F000               	nop	
  2273                           
  2274                           ;main.c: 765:             printf("backwards");
  2275  0010EC  0EDD               	movlw	low STR_43
  2276  0010EE  0100               	movlb	0	; () banked
  2277  0010F0  6FED               	movwf	printf@fmt& (0+255),b
  2278  0010F2  0EFF               	movlw	high STR_43
  2279  0010F4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2280  0010F6  ECBD  F01A         	call	_printf	;wreg free
  2281                           
  2282                           ;main.c: 766:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2283  0010FA  0E0D               	movlw	13
  2284  0010FC  0101               	movlb	1	; () banked
  2285  0010FE  6F5B               	movwf	(??_main+1)& (0+255),b
  2286  001100  0EAF               	movlw	175
  2287  001102  6F5A               	movwf	??_main& (0+255),b
  2288  001104  0EB6               	movlw	182
  2289  001106                     u8227:
  2290  001106  2EE8               	decfsz	wreg,f,c
  2291  001108  D7FE               	bra	u8227
  2292  00110A  2F5A               	decfsz	??_main& (0+255),f,b
  2293  00110C  D7FC               	bra	u8227
  2294  00110E  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2295  001110  D7FA               	bra	u8227
  2296  001112                     L1:
  2297  001112  F000               	nop	
  2298  001114  D646               	goto	l7348
  2299  001116                     __end_of_main:
  2300                           	opt callstack 0
  2301                           
  2302 ;; *************** function _ultrasonic_main *****************
  2303 ;; Defined at:
  2304 ;;		line 269 in file "main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  sensed          2  123[BANK0 ] int 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;Total ram usage:        3 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:   15
  2325 ;; This function calls:
  2326 ;;		_I2C_Master_Read
  2327 ;;		_I2C_Master_Start
  2328 ;;		_I2C_Master_Stop
  2329 ;;		_I2C_Master_Write
  2330 ;;		_lcdInst
  2331 ;;		_print_echo
  2332 ;;		_printf
  2333 ;;		_sense_tires
  2334 ;;		_trig
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text1
  2341  002A08                     __ptext1:
  2342                           	opt callstack 0
  2343  002A08                     _ultrasonic_main:
  2344                           	opt callstack 15
  2345                           
  2346                           ;main.c: 270:     TRISBbits.RB0 = 0;
  2347                           
  2348                           ;incstack = 0
  2349  002A08  9093               	bcf	3987,0,c	;volatile
  2350                           
  2351                           ;main.c: 271:     LATBbits.LATB0 = 1;
  2352  002A0A  808A               	bsf	3978,0,c	;volatile
  2353                           
  2354                           ;main.c: 273:  TRISB = 0b11110000;
  2355  002A0C  0EF0               	movlw	240
  2356  002A0E  6E93               	movwf	3987,c	;volatile
  2357                           
  2358                           ;main.c: 275:     RBIF = 0;
  2359  002A10  90F2               	bcf	4082,0,c	;volatile
  2360                           
  2361                           ;main.c: 276:  RBIE = 1;
  2362  002A12  86F2               	bsf	4082,3,c	;volatile
  2363                           
  2364                           ;main.c: 278:     int sensed = 0;
  2365  002A14  0E00               	movlw	0
  2366  002A16  0100               	movlb	0	; () banked
  2367  002A18  6FFC               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2368  002A1A  0E00               	movlw	0
  2369  002A1C  6FFB               	movwf	ultrasonic_main@sensed& (0+255),b
  2370                           
  2371                           ;main.c: 279:     while(send){
  2372  002A1E  D01E               	goto	l6942
  2373  002A20                     l6920:
  2374                           
  2375                           ;main.c: 280:         for (meas=0; meas<3;meas++){
  2376  002A20  0E00               	movlw	0
  2377  002A22  6E59               	movwf	_meas+1,c	;volatile
  2378  002A24  0E00               	movlw	0
  2379  002A26  6E58               	movwf	_meas,c	;volatile
  2380  002A28                     l6922:
  2381  002A28  BE59               	btfsc	_meas+1,7,c	;volatile
  2382  002A2A  D006               	goto	l6926
  2383  002A2C  5059               	movf	_meas+1,w,c	;volatile
  2384  002A2E  E116               	bnz	l6942
  2385  002A30  0E03               	movlw	3
  2386  002A32  5C58               	subwf	_meas,w,c	;volatile
  2387  002A34  B0D8               	btfsc	status,0,c
  2388  002A36  D012               	goto	l6942
  2389  002A38                     l6926:
  2390                           
  2391                           ;main.c: 281:         trig();
  2392  002A38  EC08  F014         	call	_trig	;wreg free
  2393                           
  2394                           ;main.c: 282:         RBIE = 0;
  2395  002A3C  96F2               	bcf	4082,3,c	;volatile
  2396                           
  2397                           ;main.c: 283:         print_echo();
  2398  002A3E  EC97  F010         	call	_print_echo	;wreg free
  2399                           
  2400                           ;main.c: 284:         RBIE = 1;
  2401  002A42  86F2               	bsf	4082,3,c	;volatile
  2402                           
  2403                           ;main.c: 285:         sensed++;
  2404  002A44  0100               	movlb	0	; () banked
  2405  002A46  4BFB               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  2406  002A48  2BFC               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;main.c: 286:         sense_tires(sensed);
  2410  002A4A  C0FB  F083         	movff	ultrasonic_main@sensed,sense_tires@sensed
  2411  002A4E  C0FC  F084         	movff	ultrasonic_main@sensed+1,sense_tires@sensed+1
  2412  002A52  EC1D  F016         	call	_sense_tires	;wreg free
  2413                           
  2414                           ;main.c: 287:         }
  2415  002A56  4A58               	infsnz	_meas,f,c	;volatile
  2416  002A58  2A59               	incf	_meas+1,f,c	;volatile
  2417  002A5A  D7E6               	goto	l6922
  2418  002A5C                     l6942:
  2419                           
  2420                           ;main.c: 279:     while(send){
  2421  002A5C  506D               	movf	_send,w,c
  2422  002A5E  B4D8               	btfsc	status,2,c
  2423  002A60  D03D               	goto	l6958
  2424  002A62  D7DE               	goto	l6920
  2425  002A64                     l6944:
  2426                           
  2427                           ;main.c: 291:         I2C_Master_Start();
  2428  002A64  EC65  F01B         	call	_I2C_Master_Start	;wreg free
  2429                           
  2430                           ;main.c: 292:         I2C_Master_Write(0b00010001);
  2431  002A68  0E00               	movlw	0
  2432  002A6A  0100               	movlb	0	; () banked
  2433  002A6C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2434  002A6E  0E11               	movlw	17
  2435  002A70  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2436  002A72  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  2437                           
  2438                           ;main.c: 293:         avg_dist = I2C_Master_Read(1);
  2439  002A76  0E01               	movlw	1
  2440  002A78  ECA8  F01A         	call	_I2C_Master_Read
  2441  002A7C  0100               	movlb	0	; () banked
  2442  002A7E  6FFA               	movwf	??_ultrasonic_main& (0+255),b
  2443  002A80  51FA               	movf	??_ultrasonic_main& (0+255),w,b
  2444  002A82  6E4C               	movwf	_avg_dist,c	;volatile
  2445  002A84  6A4D               	clrf	_avg_dist+1,c	;volatile
  2446  002A86  6A4E               	clrf	_avg_dist+2,c	;volatile
  2447  002A88  6A4F               	clrf	_avg_dist+3,c	;volatile
  2448                           
  2449                           ;main.c: 294:         I2C_Master_Stop();
  2450  002A8A  EC61  F01B         	call	_I2C_Master_Stop	;wreg free
  2451                           
  2452                           ;main.c: 295:         if(avg_dist){
  2453  002A8E  504C               	movf	_avg_dist,w,c	;volatile
  2454  002A90  104D               	iorwf	_avg_dist+1,w,c	;volatile
  2455  002A92  104E               	iorwf	_avg_dist+2,w,c	;volatile
  2456  002A94  104F               	iorwf	_avg_dist+3,w,c	;volatile
  2457  002A96  B4D8               	btfsc	status,2,c
  2458  002A98  D01E               	goto	l6956
  2459                           
  2460                           ;main.c: 297:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2461  002A9A  0E01               	movlw	1
  2462  002A9C  EC4C  F01B         	call	_lcdInst
  2463  002AA0  0E11               	movlw	17
  2464  002AA2  0100               	movlb	0	; () banked
  2465  002AA4  6FFA               	movwf	??_ultrasonic_main& (0+255),b
  2466  002AA6  0E3A               	movlw	58
  2467  002AA8                     u8237:
  2468  002AA8  2EE8               	decfsz	wreg,f,c
  2469  002AAA  D7FE               	bra	u8237
  2470  002AAC  2FFA               	decfsz	??_ultrasonic_main& (0+255),f,b
  2471  002AAE  D7FC               	bra	u8237
  2472  002AB0  F000               	nop	
  2473                           
  2474                           ;main.c: 305:             printf("%d",avg_dist);
  2475  002AB2  0E3C               	movlw	low (STR_26+11)
  2476  002AB4  0100               	movlb	0	; () banked
  2477  002AB6  6FED               	movwf	printf@fmt& (0+255),b
  2478  002AB8  0EFF               	movlw	high (STR_26+11)
  2479  002ABA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2480  002ABC  C04C  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2481  002AC0  C04D  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2482  002AC4  C04E  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2483  002AC8  C04F  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2484  002ACC  ECBD  F01A         	call	_printf	;wreg free
  2485                           
  2486                           ;main.c: 312:         send = 1;
  2487  002AD0  0E01               	movlw	1
  2488  002AD2  6E6D               	movwf	_send,c
  2489                           
  2490                           ;main.c: 313:         }
  2491  002AD4  D003               	goto	l6958
  2492  002AD6                     l6956:
  2493                           
  2494                           ;main.c: 316:             send = 0;
  2495  002AD6  0E00               	movlw	0
  2496  002AD8  6E6D               	movwf	_send,c
  2497                           
  2498                           ;main.c: 317:             break;
  2499  002ADA  0012               	return	
  2500  002ADC                     l6958:
  2501                           
  2502                           ;main.c: 289:     while (~send){
  2503  002ADC  046D               	decf	_send,w,c
  2504  002ADE  B4D8               	btfsc	status,2,c
  2505  002AE0  0012               	return	
  2506  002AE2  D7C0               	goto	l6944
  2507  002AE4                     __end_of_ultrasonic_main:
  2508                           	opt callstack 0
  2509                           
  2510 ;; *************** function _trig *****************
  2511 ;; Defined at:
  2512 ;;		line 191 in file "main.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;Total ram usage:        2 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    3
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_ultrasonic_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text2
  2541  002810                     __ptext2:
  2542                           	opt callstack 0
  2543  002810                     _trig:
  2544                           	opt callstack 26
  2545                           
  2546                           ;main.c: 192:     for(b=1; b<5; b++){
  2547                           
  2548                           ;incstack = 0
  2549  002810  0E00               	movlw	0
  2550  002812  6E63               	movwf	_b+1,c
  2551  002814  0E01               	movlw	1
  2552  002816  6E62               	movwf	_b,c
  2553  002818  BE63               	btfsc	_b+1,7,c
  2554  00281A  D004               	goto	l6620
  2555  00281C  5063               	movf	_b+1,w,c
  2556  00281E  E101               	bnz	u7120
  2557  002820  D072               	goto	L2
  2558  002822                     u7120:
  2559  002822  0012               	return	
  2560  002824                     l6620:
  2561                           
  2562                           ;main.c: 193:         TMR1H = 0;
  2563  002824  0E00               	movlw	0
  2564  002826  6ECF               	movwf	4047,c	;volatile
  2565                           
  2566                           ;main.c: 194:         TMR1L = 0;
  2567  002828  0E00               	movlw	0
  2568  00282A  6ECE               	movwf	4046,c	;volatile
  2569                           
  2570                           ;main.c: 195:         if(b==1){
  2571  00282C  0462               	decf	_b,w,c
  2572  00282E  1063               	iorwf	_b+1,w,c
  2573  002830  A4D8               	btfss	status,2,c
  2574  002832  D015               	goto	l6632
  2575                           
  2576                           ;main.c: 196:             RBIE = 0;
  2577  002834  96F2               	bcf	4082,3,c	;volatile
  2578                           
  2579                           ;main.c: 197:             RD1 = 1;
  2580  002836  8283               	bsf	3971,1,c	;volatile
  2581                           
  2582                           ;main.c: 198:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  2583  002838  0E08               	movlw	8
  2584  00283A                     u8247:
  2585  00283A  2EE8               	decfsz	wreg,f,c
  2586  00283C  D7FE               	bra	u8247
  2587  00283E  F000               	nop	
  2588                           
  2589                           ;main.c: 199:             RD1 = 0;
  2590  002840  9283               	bcf	3971,1,c	;volatile
  2591                           
  2592                           ;main.c: 201:             RBIE = 1;
  2593  002842  86F2               	bsf	4082,3,c	;volatile
  2594                           
  2595                           ;main.c: 202:             _delay((unsigned long)((135)*(10000000/4000.0)));
  2596  002844  0E02               	movlw	2
  2597  002846  0100               	movlb	0	; () banked
  2598  002848  6F81               	movwf	(??_trig+1)& (0+255),b
  2599  00284A  0EB7               	movlw	183
  2600  00284C  6F80               	movwf	??_trig& (0+255),b
  2601  00284E  0E4C               	movlw	76
  2602  002850                     u8257:
  2603  002850  2EE8               	decfsz	wreg,f,c
  2604  002852  D7FE               	bra	u8257
  2605  002854  2F80               	decfsz	??_trig& (0+255),f,b
  2606  002856  D7FC               	bra	u8257
  2607  002858  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  2608  00285A  D7FA               	bra	u8257
  2609  00285C  F000               	nop	
  2610  00285E                     l6632:
  2611                           
  2612                           ;main.c: 204:         if(b==2){
  2613  00285E  0E02               	movlw	2
  2614  002860  1862               	xorwf	_b,w,c
  2615  002862  1063               	iorwf	_b+1,w,c
  2616  002864  A4D8               	btfss	status,2,c
  2617  002866  D015               	goto	l6642
  2618                           
  2619                           ;main.c: 205:             RBIE = 0;
  2620  002868  96F2               	bcf	4082,3,c	;volatile
  2621                           
  2622                           ;main.c: 206:             RD0 = 1;
  2623  00286A  8083               	bsf	3971,0,c	;volatile
  2624                           
  2625                           ;main.c: 207:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  2626  00286C  0E08               	movlw	8
  2627  00286E                     u8267:
  2628  00286E  2EE8               	decfsz	wreg,f,c
  2629  002870  D7FE               	bra	u8267
  2630  002872  F000               	nop	
  2631                           
  2632                           ;main.c: 208:             RD0 = 0;
  2633  002874  9083               	bcf	3971,0,c	;volatile
  2634                           
  2635                           ;main.c: 210:             RBIE = 1;
  2636  002876  86F2               	bsf	4082,3,c	;volatile
  2637                           
  2638                           ;main.c: 211:             _delay((unsigned long)((135)*(10000000/4000.0)));
  2639  002878  0E02               	movlw	2
  2640  00287A  0100               	movlb	0	; () banked
  2641  00287C  6F81               	movwf	(??_trig+1)& (0+255),b
  2642  00287E  0EB7               	movlw	183
  2643  002880  6F80               	movwf	??_trig& (0+255),b
  2644  002882  0E4C               	movlw	76
  2645  002884                     u8277:
  2646  002884  2EE8               	decfsz	wreg,f,c
  2647  002886  D7FE               	bra	u8277
  2648  002888  2F80               	decfsz	??_trig& (0+255),f,b
  2649  00288A  D7FC               	bra	u8277
  2650  00288C  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  2651  00288E  D7FA               	bra	u8277
  2652  002890  F000               	nop	
  2653  002892                     l6642:
  2654                           
  2655                           ;main.c: 213:         if(b==3){
  2656  002892  0E03               	movlw	3
  2657  002894  1862               	xorwf	_b,w,c
  2658  002896  1063               	iorwf	_b+1,w,c
  2659  002898  A4D8               	btfss	status,2,c
  2660  00289A  D015               	goto	l6652
  2661                           
  2662                           ;main.c: 214:             RBIE = 0;
  2663  00289C  96F2               	bcf	4082,3,c	;volatile
  2664                           
  2665                           ;main.c: 215:             RB3 = 1;
  2666  00289E  8681               	bsf	3969,3,c	;volatile
  2667                           
  2668                           ;main.c: 216:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  2669  0028A0  0E08               	movlw	8
  2670  0028A2                     u8287:
  2671  0028A2  2EE8               	decfsz	wreg,f,c
  2672  0028A4  D7FE               	bra	u8287
  2673  0028A6  F000               	nop	
  2674                           
  2675                           ;main.c: 217:             RB3 = 0;
  2676  0028A8  9681               	bcf	3969,3,c	;volatile
  2677                           
  2678                           ;main.c: 219:             RBIE = 1;
  2679  0028AA  86F2               	bsf	4082,3,c	;volatile
  2680                           
  2681                           ;main.c: 220:             _delay((unsigned long)((135)*(10000000/4000.0)));
  2682  0028AC  0E02               	movlw	2
  2683  0028AE  0100               	movlb	0	; () banked
  2684  0028B0  6F81               	movwf	(??_trig+1)& (0+255),b
  2685  0028B2  0EB7               	movlw	183
  2686  0028B4  6F80               	movwf	??_trig& (0+255),b
  2687  0028B6  0E4C               	movlw	76
  2688  0028B8                     u8297:
  2689  0028B8  2EE8               	decfsz	wreg,f,c
  2690  0028BA  D7FE               	bra	u8297
  2691  0028BC  2F80               	decfsz	??_trig& (0+255),f,b
  2692  0028BE  D7FC               	bra	u8297
  2693  0028C0  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  2694  0028C2  D7FA               	bra	u8297
  2695  0028C4  F000               	nop	
  2696  0028C6                     l6652:
  2697                           
  2698                           ;main.c: 222:         if(b==4){
  2699  0028C6  0E04               	movlw	4
  2700  0028C8  1862               	xorwf	_b,w,c
  2701  0028CA  1063               	iorwf	_b+1,w,c
  2702  0028CC  A4D8               	btfss	status,2,c
  2703  0028CE  D015               	goto	l6662
  2704                           
  2705                           ;main.c: 223:             RBIE = 0;
  2706  0028D0  96F2               	bcf	4082,3,c	;volatile
  2707                           
  2708                           ;main.c: 224:             RB2 = 1;
  2709  0028D2  8481               	bsf	3969,2,c	;volatile
  2710                           
  2711                           ;main.c: 225:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  2712  0028D4  0E08               	movlw	8
  2713  0028D6                     u8307:
  2714  0028D6  2EE8               	decfsz	wreg,f,c
  2715  0028D8  D7FE               	bra	u8307
  2716  0028DA  F000               	nop	
  2717                           
  2718                           ;main.c: 226:             RB2 = 0;
  2719  0028DC  9481               	bcf	3969,2,c	;volatile
  2720                           
  2721                           ;main.c: 228:             RBIE = 1;
  2722  0028DE  86F2               	bsf	4082,3,c	;volatile
  2723                           
  2724                           ;main.c: 229:             _delay((unsigned long)((135)*(10000000/4000.0)));
  2725  0028E0  0E02               	movlw	2
  2726  0028E2  0100               	movlb	0	; () banked
  2727  0028E4  6F81               	movwf	(??_trig+1)& (0+255),b
  2728  0028E6  0EB7               	movlw	183
  2729  0028E8  6F80               	movwf	??_trig& (0+255),b
  2730  0028EA  0E4C               	movlw	76
  2731  0028EC                     u8317:
  2732  0028EC  2EE8               	decfsz	wreg,f,c
  2733  0028EE  D7FE               	bra	u8317
  2734  0028F0  2F80               	decfsz	??_trig& (0+255),f,b
  2735  0028F2  D7FC               	bra	u8317
  2736  0028F4  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  2737  0028F6  D7FA               	bra	u8317
  2738  0028F8  F000               	nop	
  2739  0028FA                     l6662:
  2740                           
  2741                           ;main.c: 231:     }
  2742  0028FA  4A62               	infsnz	_b,f,c
  2743  0028FC  2A63               	incf	_b+1,f,c
  2744  0028FE  BE63               	btfsc	_b+1,7,c
  2745  002900  D791               	goto	l6620
  2746  002902  5063               	movf	_b+1,w,c
  2747  002904  E105               	bnz	u7170
  2748  002906                     L2:
  2749  002906  0E05               	movlw	5
  2750  002908  5C62               	subwf	_b,w,c
  2751  00290A  B0D8               	btfsc	status,0,c
  2752  00290C  0012               	return	
  2753  00290E  D78A               	goto	l6620
  2754  002910                     u7170:
  2755  002910  0012               	return		;funcret
  2756  002912                     __end_of_trig:
  2757                           	opt callstack 0
  2758                           
  2759 ;; *************** function _sense_tires *****************
  2760 ;; Defined at:
  2761 ;;		line 323 in file "main.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  sensed          2    3[BANK0 ] int 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;Total ram usage:        2 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    6
  2782 ;; This function calls:
  2783 ;;		_brake
  2784 ;; This function is called by:
  2785 ;;		_ultrasonic_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text3
  2790  002C3A                     __ptext3:
  2791                           	opt callstack 0
  2792  002C3A                     _sense_tires:
  2793                           	opt callstack 23
  2794                           
  2795                           ;main.c: 328:                 if ((dist_final[0][5]>=2 && dist_final[0][5] <= 30) ||(dis
      +                          t_final[1][5]>=2 && dist_final[1][5] <= 30)||(dist_final[2][5]>=2 && dist_final[2][5] <=
      +                           30)||(dist_final[3][5] >=2 && dist_final[3][5]<= 30)){
  2796                           
  2797                           ;incstack = 0
  2798  002C3A  0101               	movlb	1	; () banked
  2799  002C3C  BF79               	btfsc	(_dist_final+11)& (0+255),7,b
  2800  002C3E  D00E               	goto	u7350
  2801  002C40  5179               	movf	(_dist_final+11)& (0+255),w,b
  2802  002C42  E104               	bnz	u7340
  2803  002C44  0E02               	movlw	2
  2804  002C46  5D78               	subwf	(_dist_final+10)& (0+255),w,b
  2805  002C48  A0D8               	btfss	status,0,c
  2806  002C4A  D008               	goto	u7350
  2807  002C4C                     u7340:
  2808                           
  2809                           ; BSR set to: 1
  2810  002C4C  BF79               	btfsc	(_dist_final+11)& (0+255),7,b
  2811  002C4E  D036               	goto	u7410
  2812  002C50  5179               	movf	(_dist_final+11)& (0+255),w,b
  2813  002C52  E104               	bnz	u7350
  2814  002C54  0E1F               	movlw	31
  2815  002C56  5D78               	subwf	(_dist_final+10)& (0+255),w,b
  2816  002C58  A0D8               	btfss	status,0,c
  2817  002C5A  D030               	goto	u7410
  2818  002C5C                     u7350:
  2819                           
  2820                           ; BSR set to: 1
  2821  002C5C  BF85               	btfsc	(_dist_final+23)& (0+255),7,b
  2822  002C5E  D00E               	goto	u7370
  2823  002C60  5185               	movf	(_dist_final+23)& (0+255),w,b
  2824  002C62  E104               	bnz	u7360
  2825  002C64  0E02               	movlw	2
  2826  002C66  5D84               	subwf	(_dist_final+22)& (0+255),w,b
  2827  002C68  A0D8               	btfss	status,0,c
  2828  002C6A  D008               	goto	u7370
  2829  002C6C                     u7360:
  2830                           
  2831                           ; BSR set to: 1
  2832  002C6C  BF85               	btfsc	(_dist_final+23)& (0+255),7,b
  2833  002C6E  D026               	goto	u7410
  2834  002C70  5185               	movf	(_dist_final+23)& (0+255),w,b
  2835  002C72  E104               	bnz	u7370
  2836  002C74  0E1F               	movlw	31
  2837  002C76  5D84               	subwf	(_dist_final+22)& (0+255),w,b
  2838  002C78  A0D8               	btfss	status,0,c
  2839  002C7A  D020               	goto	u7410
  2840  002C7C                     u7370:
  2841                           
  2842                           ; BSR set to: 1
  2843  002C7C  BF91               	btfsc	(_dist_final+35)& (0+255),7,b
  2844  002C7E  D00E               	goto	u7390
  2845  002C80  5191               	movf	(_dist_final+35)& (0+255),w,b
  2846  002C82  E104               	bnz	u7380
  2847  002C84  0E02               	movlw	2
  2848  002C86  5D90               	subwf	(_dist_final+34)& (0+255),w,b
  2849  002C88  A0D8               	btfss	status,0,c
  2850  002C8A  D008               	goto	u7390
  2851  002C8C                     u7380:
  2852                           
  2853                           ; BSR set to: 1
  2854  002C8C  BF91               	btfsc	(_dist_final+35)& (0+255),7,b
  2855  002C8E  D016               	goto	u7410
  2856  002C90  5191               	movf	(_dist_final+35)& (0+255),w,b
  2857  002C92  E104               	bnz	u7390
  2858  002C94  0E1F               	movlw	31
  2859  002C96  5D90               	subwf	(_dist_final+34)& (0+255),w,b
  2860  002C98  A0D8               	btfss	status,0,c
  2861  002C9A  D010               	goto	u7410
  2862  002C9C                     u7390:
  2863                           
  2864                           ; BSR set to: 1
  2865  002C9C  BF9D               	btfsc	(_dist_final+47)& (0+255),7,b
  2866  002C9E  0012               	return	
  2867  002CA0  519D               	movf	(_dist_final+47)& (0+255),w,b
  2868  002CA2  E104               	bnz	u7400
  2869  002CA4  0E02               	movlw	2
  2870  002CA6  5D9C               	subwf	(_dist_final+46)& (0+255),w,b
  2871  002CA8  A0D8               	btfss	status,0,c
  2872  002CAA  0012               	return	
  2873  002CAC                     u7400:
  2874                           
  2875                           ; BSR set to: 1
  2876  002CAC  BF9D               	btfsc	(_dist_final+47)& (0+255),7,b
  2877  002CAE  D006               	goto	u7410
  2878  002CB0  519D               	movf	(_dist_final+47)& (0+255),w,b
  2879  002CB2  E108               	bnz	l246
  2880  002CB4  0E1F               	movlw	31
  2881  002CB6  5D9C               	subwf	(_dist_final+46)& (0+255),w,b
  2882  002CB8  B0D8               	btfsc	status,0,c
  2883  002CBA  0012               	return	
  2884  002CBC                     u7410:
  2885                           
  2886                           ; BSR set to: 1
  2887                           ;main.c: 330:                     brake();
  2888  002CBC  ECE5  F01A         	call	_brake	;wreg free
  2889                           
  2890                           ;main.c: 332:                     send = 0;
  2891  002CC0  0E00               	movlw	0
  2892  002CC2  6E6D               	movwf	_send,c
  2893  002CC4                     l246:
  2894  002CC4  0012               	return		;funcret
  2895  002CC6                     __end_of_sense_tires:
  2896                           	opt callstack 0
  2897                           
  2898 ;; *************** function _brake *****************
  2899 ;; Defined at:
  2900 ;;		line 608 in file "main.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    5
  2921 ;; This function calls:
  2922 ;;		_I2C_Master_Start
  2923 ;;		_I2C_Master_Stop
  2924 ;;		_I2C_Master_Write
  2925 ;; This function is called by:
  2926 ;;		_sense_tires
  2927 ;;		_main
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text4
  2932  0035CA                     __ptext4:
  2933                           	opt callstack 0
  2934  0035CA                     _brake:
  2935                           	opt callstack 23
  2936                           
  2937                           ;main.c: 609:     I2C_Master_Start();
  2938                           
  2939                           ;incstack = 0
  2940  0035CA  EC65  F01B         	call	_I2C_Master_Start	;wreg free
  2941                           
  2942                           ;main.c: 610:     I2C_Master_Write(0b00010000);
  2943  0035CE  0E00               	movlw	0
  2944  0035D0  0100               	movlb	0	; () banked
  2945  0035D2  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2946  0035D4  0E10               	movlw	16
  2947  0035D6  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2948  0035D8  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  2949                           
  2950                           ;main.c: 611:     I2C_Master_Write('9');
  2951  0035DC  0E00               	movlw	0
  2952  0035DE  0100               	movlb	0	; () banked
  2953  0035E0  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2954  0035E2  0E39               	movlw	57
  2955  0035E4  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2956  0035E6  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  2957                           
  2958                           ;main.c: 612:     I2C_Master_Stop();
  2959  0035EA  EC61  F01B         	call	_I2C_Master_Stop	;wreg free
  2960  0035EE  0012               	return		;funcret
  2961  0035F0                     __end_of_brake:
  2962                           	opt callstack 0
  2963                           
  2964 ;; *************** function _print_echo *****************
  2965 ;; Defined at:
  2966 ;;		line 234 in file "main.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;Total ram usage:        1 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:   14
  2987 ;; This function calls:
  2988 ;;		_lcdInst
  2989 ;;		_printf
  2990 ;; This function is called by:
  2991 ;;		_ultrasonic_main
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text5
  2996  00212E                     __ptext5:
  2997                           	opt callstack 0
  2998  00212E                     _print_echo:
  2999                           	opt callstack 15
  3000                           
  3001                           ;main.c: 235:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3002                           
  3003                           ;incstack = 0
  3004  00212E  0E01               	movlw	1
  3005  002130  EC4C  F01B         	call	_lcdInst
  3006  002134  0E11               	movlw	17
  3007  002136  0100               	movlb	0	; () banked
  3008  002138  6FF9               	movwf	??_print_echo& (0+255),b
  3009  00213A  0E3A               	movlw	58
  3010  00213C                     u8327:
  3011  00213C  2EE8               	decfsz	wreg,f,c
  3012  00213E  D7FE               	bra	u8327
  3013  002140  2FF9               	decfsz	??_print_echo& (0+255),f,b
  3014  002142  D7FC               	bra	u8327
  3015  002144  F000               	nop	
  3016                           
  3017                           ;main.c: 236:     if(a[0]>=2 && a[0]<=400){
  3018  002146  BE41               	btfsc	_a+1,7,c
  3019  002148  D01D               	goto	l6674
  3020  00214A  5041               	movf	_a+1,w,c
  3021  00214C  E104               	bnz	u7180
  3022  00214E  0E02               	movlw	2
  3023  002150  5C40               	subwf	_a,w,c
  3024  002152  A0D8               	btfss	status,0,c
  3025  002154  D017               	goto	l6674
  3026  002156                     u7180:
  3027  002156  BE41               	btfsc	_a+1,7,c
  3028  002158  D006               	goto	u7190
  3029  00215A  0E91               	movlw	145
  3030  00215C  5C40               	subwf	_a,w,c
  3031  00215E  0E01               	movlw	1
  3032  002160  5841               	subwfb	_a+1,w,c
  3033  002162  B0D8               	btfsc	status,0,c
  3034  002164  D00F               	goto	l6674
  3035  002166                     u7190:
  3036                           
  3037                           ;main.c: 237:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3038  002166  0E72               	movlw	low STR_1
  3039  002168  0100               	movlb	0	; () banked
  3040  00216A  6FED               	movwf	printf@fmt& (0+255),b
  3041  00216C  0EFE               	movlw	high STR_1
  3042  00216E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3043  002170  C040  F0EF         	movff	_a,?_printf+2
  3044  002174  C041  F0F0         	movff	_a+1,?_printf+3
  3045  002178  C178  F0F1         	movff	_dist_final+10,?_printf+4
  3046  00217C  C179  F0F2         	movff	_dist_final+11,?_printf+5
  3047  002180  ECBD  F01A         	call	_printf	;wreg free
  3048  002184                     l6674:
  3049                           
  3050                           ;main.c: 239:     if(!(a[0]>=2 && a[0]<=400)){
  3051  002184  BE41               	btfsc	_a+1,7,c
  3052  002186  D00E               	goto	u7210
  3053  002188  5041               	movf	_a+1,w,c
  3054  00218A  E104               	bnz	u7200
  3055  00218C  0E02               	movlw	2
  3056  00218E  5C40               	subwf	_a,w,c
  3057  002190  A0D8               	btfss	status,0,c
  3058  002192  D008               	goto	u7210
  3059  002194                     u7200:
  3060  002194  BE41               	btfsc	_a+1,7,c
  3061  002196  D00D               	goto	l6680
  3062  002198  0E91               	movlw	145
  3063  00219A  5C40               	subwf	_a,w,c
  3064  00219C  0E01               	movlw	1
  3065  00219E  5841               	subwfb	_a+1,w,c
  3066  0021A0  A0D8               	btfss	status,0,c
  3067  0021A2  D007               	goto	l6680
  3068  0021A4                     u7210:
  3069                           
  3070                           ;main.c: 240:         printf("Dist1 = X");
  3071  0021A4  0EB5               	movlw	low STR_2
  3072  0021A6  0100               	movlb	0	; () banked
  3073  0021A8  6FED               	movwf	printf@fmt& (0+255),b
  3074  0021AA  0EFF               	movlw	high STR_2
  3075  0021AC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3076  0021AE  ECBD  F01A         	call	_printf	;wreg free
  3077  0021B2                     l6680:
  3078                           
  3079                           ;main.c: 242:     if(a[1]>=2 && a[1]<=400){
  3080  0021B2  BE43               	btfsc	_a+3,7,c
  3081  0021B4  D020               	goto	l6688
  3082  0021B6  5043               	movf	_a+3,w,c
  3083  0021B8  E104               	bnz	u7220
  3084  0021BA  0E02               	movlw	2
  3085  0021BC  5C42               	subwf	_a+2,w,c
  3086  0021BE  A0D8               	btfss	status,0,c
  3087  0021C0  D01A               	goto	l6688
  3088  0021C2                     u7220:
  3089  0021C2  BE43               	btfsc	_a+3,7,c
  3090  0021C4  D006               	goto	u7230
  3091  0021C6  0E91               	movlw	145
  3092  0021C8  5C42               	subwf	_a+2,w,c
  3093  0021CA  0E01               	movlw	1
  3094  0021CC  5843               	subwfb	_a+3,w,c
  3095  0021CE  B0D8               	btfsc	status,0,c
  3096  0021D0  D012               	goto	l6688
  3097  0021D2                     u7230:
  3098  0021D2  0EC0               	movlw	192
  3099  0021D4  EC4C  F01B         	call	_lcdInst
  3100                           
  3101                           ;main.c: 244:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3102  0021D8  0EC6               	movlw	low STR_3
  3103  0021DA  0100               	movlb	0	; () banked
  3104  0021DC  6FED               	movwf	printf@fmt& (0+255),b
  3105  0021DE  0EFE               	movlw	high STR_3
  3106  0021E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3107  0021E2  C042  F0EF         	movff	_a+2,?_printf+2
  3108  0021E6  C043  F0F0         	movff	_a+3,?_printf+3
  3109  0021EA  C184  F0F1         	movff	_dist_final+22,?_printf+4
  3110  0021EE  C185  F0F2         	movff	_dist_final+23,?_printf+5
  3111  0021F2  ECBD  F01A         	call	_printf	;wreg free
  3112  0021F6                     l6688:
  3113                           
  3114                           ;main.c: 246:     if(!(a[1]>=2 && a[1]<=400)){
  3115  0021F6  BE43               	btfsc	_a+3,7,c
  3116  0021F8  D00E               	goto	u7250
  3117  0021FA  5043               	movf	_a+3,w,c
  3118  0021FC  E104               	bnz	u7240
  3119  0021FE  0E02               	movlw	2
  3120  002200  5C42               	subwf	_a+2,w,c
  3121  002202  A0D8               	btfss	status,0,c
  3122  002204  D008               	goto	u7250
  3123  002206                     u7240:
  3124  002206  BE43               	btfsc	_a+3,7,c
  3125  002208  D010               	goto	l6696
  3126  00220A  0E91               	movlw	145
  3127  00220C  5C42               	subwf	_a+2,w,c
  3128  00220E  0E01               	movlw	1
  3129  002210  5843               	subwfb	_a+3,w,c
  3130  002212  A0D8               	btfss	status,0,c
  3131  002214  D00A               	goto	l6696
  3132  002216                     u7250:
  3133  002216  0EC0               	movlw	192
  3134  002218  EC4C  F01B         	call	_lcdInst
  3135                           
  3136                           ;main.c: 248:         printf("Dist2 = X");
  3137  00221C  0EBF               	movlw	low STR_4
  3138  00221E  0100               	movlb	0	; () banked
  3139  002220  6FED               	movwf	printf@fmt& (0+255),b
  3140  002222  0EFF               	movlw	high STR_4
  3141  002224  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3142  002226  ECBD  F01A         	call	_printf	;wreg free
  3143  00222A                     l6696:
  3144                           
  3145                           ;main.c: 250:     if(a[2]>=2 && a[2]<=400){
  3146  00222A  BE45               	btfsc	_a+5,7,c
  3147  00222C  D020               	goto	l6704
  3148  00222E  5045               	movf	_a+5,w,c
  3149  002230  E104               	bnz	u7260
  3150  002232  0E02               	movlw	2
  3151  002234  5C44               	subwf	_a+4,w,c
  3152  002236  A0D8               	btfss	status,0,c
  3153  002238  D01A               	goto	l6704
  3154  00223A                     u7260:
  3155  00223A  BE45               	btfsc	_a+5,7,c
  3156  00223C  D006               	goto	u7270
  3157  00223E  0E91               	movlw	145
  3158  002240  5C44               	subwf	_a+4,w,c
  3159  002242  0E01               	movlw	1
  3160  002244  5845               	subwfb	_a+5,w,c
  3161  002246  B0D8               	btfsc	status,0,c
  3162  002248  D012               	goto	l6704
  3163  00224A                     u7270:
  3164  00224A  0E90               	movlw	144
  3165  00224C  EC4C  F01B         	call	_lcdInst
  3166                           
  3167                           ;main.c: 252:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3168  002250  0ED6               	movlw	low STR_5
  3169  002252  0100               	movlb	0	; () banked
  3170  002254  6FED               	movwf	printf@fmt& (0+255),b
  3171  002256  0EFE               	movlw	high STR_5
  3172  002258  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3173  00225A  C044  F0EF         	movff	_a+4,?_printf+2
  3174  00225E  C045  F0F0         	movff	_a+5,?_printf+3
  3175  002262  C190  F0F1         	movff	_dist_final+34,?_printf+4
  3176  002266  C191  F0F2         	movff	_dist_final+35,?_printf+5
  3177  00226A  ECBD  F01A         	call	_printf	;wreg free
  3178  00226E                     l6704:
  3179                           
  3180                           ;main.c: 254:     if(!(a[2]>=2 && a[2]<=400)){
  3181  00226E  BE45               	btfsc	_a+5,7,c
  3182  002270  D00E               	goto	u7290
  3183  002272  5045               	movf	_a+5,w,c
  3184  002274  E104               	bnz	u7280
  3185  002276  0E02               	movlw	2
  3186  002278  5C44               	subwf	_a+4,w,c
  3187  00227A  A0D8               	btfss	status,0,c
  3188  00227C  D008               	goto	u7290
  3189  00227E                     u7280:
  3190  00227E  BE45               	btfsc	_a+5,7,c
  3191  002280  D010               	goto	l6712
  3192  002282  0E91               	movlw	145
  3193  002284  5C44               	subwf	_a+4,w,c
  3194  002286  0E01               	movlw	1
  3195  002288  5845               	subwfb	_a+5,w,c
  3196  00228A  A0D8               	btfss	status,0,c
  3197  00228C  D00A               	goto	l6712
  3198  00228E                     u7290:
  3199  00228E  0E90               	movlw	144
  3200  002290  EC4C  F01B         	call	_lcdInst
  3201                           
  3202                           ;main.c: 256:         printf("Dist3 = X");
  3203  002294  0EC9               	movlw	low STR_6
  3204  002296  0100               	movlb	0	; () banked
  3205  002298  6FED               	movwf	printf@fmt& (0+255),b
  3206  00229A  0EFF               	movlw	high STR_6
  3207  00229C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3208  00229E  ECBD  F01A         	call	_printf	;wreg free
  3209  0022A2                     l6712:
  3210                           
  3211                           ;main.c: 258:     if(a[3]>=2 && a[3]<=400){
  3212  0022A2  BE47               	btfsc	_a+7,7,c
  3213  0022A4  D020               	goto	l6720
  3214  0022A6  5047               	movf	_a+7,w,c
  3215  0022A8  E104               	bnz	u7300
  3216  0022AA  0E02               	movlw	2
  3217  0022AC  5C46               	subwf	_a+6,w,c
  3218  0022AE  A0D8               	btfss	status,0,c
  3219  0022B0  D01A               	goto	l6720
  3220  0022B2                     u7300:
  3221  0022B2  BE47               	btfsc	_a+7,7,c
  3222  0022B4  D006               	goto	u7310
  3223  0022B6  0E91               	movlw	145
  3224  0022B8  5C46               	subwf	_a+6,w,c
  3225  0022BA  0E01               	movlw	1
  3226  0022BC  5847               	subwfb	_a+7,w,c
  3227  0022BE  B0D8               	btfsc	status,0,c
  3228  0022C0  D012               	goto	l6720
  3229  0022C2                     u7310:
  3230  0022C2  0ED0               	movlw	208
  3231  0022C4  EC4C  F01B         	call	_lcdInst
  3232                           
  3233                           ;main.c: 260:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3234  0022C8  0E83               	movlw	low STR_7
  3235  0022CA  0100               	movlb	0	; () banked
  3236  0022CC  6FED               	movwf	printf@fmt& (0+255),b
  3237  0022CE  0EFE               	movlw	high STR_7
  3238  0022D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3239  0022D2  C046  F0EF         	movff	_a+6,?_printf+2
  3240  0022D6  C047  F0F0         	movff	_a+7,?_printf+3
  3241  0022DA  C19C  F0F1         	movff	_dist_final+46,?_printf+4
  3242  0022DE  C19D  F0F2         	movff	_dist_final+47,?_printf+5
  3243  0022E2  ECBD  F01A         	call	_printf	;wreg free
  3244  0022E6                     l6720:
  3245                           
  3246                           ;main.c: 263:     if(!(a[3]>=2 && a[3]<=400)){
  3247  0022E6  BE47               	btfsc	_a+7,7,c
  3248  0022E8  D00E               	goto	u7330
  3249  0022EA  5047               	movf	_a+7,w,c
  3250  0022EC  E104               	bnz	u7320
  3251  0022EE  0E02               	movlw	2
  3252  0022F0  5C46               	subwf	_a+6,w,c
  3253  0022F2  A0D8               	btfss	status,0,c
  3254  0022F4  D008               	goto	u7330
  3255  0022F6                     u7320:
  3256  0022F6  BE47               	btfsc	_a+7,7,c
  3257  0022F8  0012               	return	
  3258  0022FA  0E91               	movlw	145
  3259  0022FC  5C46               	subwf	_a+6,w,c
  3260  0022FE  0E01               	movlw	1
  3261  002300  5847               	subwfb	_a+7,w,c
  3262  002302  A0D8               	btfss	status,0,c
  3263  002304  0012               	return	
  3264  002306                     u7330:
  3265  002306  0ED0               	movlw	208
  3266  002308  EC4C  F01B         	call	_lcdInst
  3267                           
  3268                           ;main.c: 265:         printf("Dist4 = X");
  3269  00230C  0ED3               	movlw	low STR_8
  3270  00230E  0100               	movlb	0	; () banked
  3271  002310  6FED               	movwf	printf@fmt& (0+255),b
  3272  002312  0EFF               	movlw	high STR_8
  3273  002314  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3274  002316  ECBD  F01A         	call	_printf	;wreg free
  3275  00231A  0012               	return		;funcret
  3276  00231C                     __end_of_print_echo:
  3277                           	opt callstack 0
  3278                           
  3279 ;; *************** function _start *****************
  3280 ;; Defined at:
  3281 ;;		line 615 in file "main.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    5
  3302 ;; This function calls:
  3303 ;;		_I2C_Master_Init
  3304 ;;		_I2C_Master_Start
  3305 ;;		_I2C_Master_Stop
  3306 ;;		_I2C_Master_Write
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text6
  3313  00322C                     __ptext6:
  3314                           	opt callstack 0
  3315  00322C                     _start:
  3316                           	opt callstack 25
  3317                           
  3318                           ;main.c: 616:     I2C_Master_Init(100000);
  3319                           
  3320                           ;incstack = 0
  3321  00322C  0EA0               	movlw	160
  3322  00322E  0100               	movlb	0	; () banked
  3323  003230  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  3324  003232  0E86               	movlw	134
  3325  003234  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  3326  003236  0E01               	movlw	1
  3327  003238  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  3328  00323A  0E00               	movlw	0
  3329  00323C  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  3330  00323E  EC0C  F018         	call	_I2C_Master_Init	;wreg free
  3331                           
  3332                           ;main.c: 617:     I2C_Master_Start();
  3333  003242  EC65  F01B         	call	_I2C_Master_Start	;wreg free
  3334                           
  3335                           ;main.c: 618:     I2C_Master_Write(0b00010000);
  3336  003246  0E00               	movlw	0
  3337  003248  0100               	movlb	0	; () banked
  3338  00324A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3339  00324C  0E10               	movlw	16
  3340  00324E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3341  003250  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  3342                           
  3343                           ;main.c: 619:     I2C_Master_Stop();
  3344  003254  EC61  F01B         	call	_I2C_Master_Stop	;wreg free
  3345                           
  3346                           ;main.c: 621:     I2C_Master_Start();
  3347  003258  EC65  F01B         	call	_I2C_Master_Start	;wreg free
  3348                           
  3349                           ;main.c: 622:     I2C_Master_Write(0b00010000);
  3350  00325C  0E00               	movlw	0
  3351  00325E  0100               	movlb	0	; () banked
  3352  003260  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3353  003262  0E10               	movlw	16
  3354  003264  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3355  003266  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  3356                           
  3357                           ;main.c: 623:     I2C_Master_Write('2');
  3358  00326A  0E00               	movlw	0
  3359  00326C  0100               	movlb	0	; () banked
  3360  00326E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3361  003270  0E32               	movlw	50
  3362  003272  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3363  003274  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  3364                           
  3365                           ;main.c: 624:     I2C_Master_Stop();
  3366  003278  EC61  F01B         	call	_I2C_Master_Stop	;wreg free
  3367  00327C  0012               	return		;funcret
  3368  00327E                     __end_of_start:
  3369                           	opt callstack 0
  3370                           
  3371 ;; *************** function _number_deploy *****************
  3372 ;; Defined at:
  3373 ;;		line 358 in file "main.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  avg_dist        2  121[BANK0 ] int 
  3376 ;;  poles_detect    2  123[BANK0 ] int 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  t_count         2    6[BANK1 ] int 
  3379 ;;  tires_detect    2    4[BANK1 ] int 
  3380 ;;  tires_t         2    2[BANK1 ] int 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  2  121[BANK0 ] int 
  3383 ;; Registers used:
  3384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:       12 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:   14
  3397 ;; This function calls:
  3398 ;;		___awdiv
  3399 ;;		_lcdInst
  3400 ;;		_printf
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text7
  3407  001F0A                     __ptext7:
  3408                           	opt callstack 0
  3409  001F0A                     _number_deploy:
  3410                           	opt callstack 16
  3411                           
  3412                           ;main.c: 359:     int tires_t=0;
  3413                           
  3414                           ;incstack = 0
  3415  001F0A  0E00               	movlw	0
  3416  001F0C  0101               	movlb	1	; () banked
  3417  001F0E  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3418  001F10  0E00               	movlw	0
  3419  001F12  6F02               	movwf	number_deploy@tires_t& (0+255),b
  3420                           
  3421                           ;main.c: 360:     int tires_detected=0;
  3422  001F14  0E00               	movlw	0
  3423  001F16  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  3424  001F18  0E00               	movlw	0
  3425  001F1A  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  3426                           
  3427                           ;main.c: 361:     int t_count = 0;
  3428  001F1C  0E00               	movlw	0
  3429  001F1E  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  3430  001F20  0E00               	movlw	0
  3431  001F22  6F06               	movwf	number_deploy@t_count& (0+255),b
  3432                           
  3433                           ;main.c: 364:     while (t_count<3){
  3434  001F24  D0FA               	goto	l7020
  3435  001F26                     l6962:
  3436                           
  3437                           ; BSR set to: 1
  3438                           ;main.c: 365:   if (poles_detected != 0){
  3439  001F26  0100               	movlb	0	; () banked
  3440  001F28  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  3441  001F2A  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  3442  001F2C  B4D8               	btfsc	status,2,c
  3443  001F2E  D031               	goto	l6972
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;main.c: 366:    if ((avg_dist/1000)<30){
  3447  001F30  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  3448  001F34  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  3449  001F38  0E03               	movlw	3
  3450  001F3A  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3451  001F3C  0EE8               	movlw	232
  3452  001F3E  6F82               	movwf	___awdiv@divisor& (0+255),b
  3453  001F40  EC63  F016         	call	___awdiv	;wreg free
  3454  001F44  0100               	movlb	0	; () banked
  3455  001F46  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  3456  001F48  D006               	goto	u7630
  3457  001F4A  5181               	movf	(?___awdiv+1)& (0+255),w,b
  3458  001F4C  E109               	bnz	l6968
  3459  001F4E  0E1E               	movlw	30
  3460  001F50  5D80               	subwf	?___awdiv& (0+255),w,b
  3461  001F52  B0D8               	btfsc	status,0,c
  3462  001F54  D005               	goto	l6968
  3463  001F56                     u7630:
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;main.c: 368:     tires_t = 1;
  3467  001F56  0E00               	movlw	0
  3468  001F58  0101               	movlb	1	; () banked
  3469  001F5A  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3470  001F5C  0E01               	movlw	1
  3471  001F5E  6F02               	movwf	number_deploy@tires_t& (0+255),b
  3472  001F60                     l6968:
  3473                           
  3474                           ;main.c: 370:    if ((avg_dist/1000)>30){
  3475  001F60  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  3476  001F64  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  3477  001F68  0E03               	movlw	3
  3478  001F6A  0100               	movlb	0	; () banked
  3479  001F6C  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3480  001F6E  0EE8               	movlw	232
  3481  001F70  6F82               	movwf	___awdiv@divisor& (0+255),b
  3482  001F72  EC63  F016         	call	___awdiv	;wreg free
  3483  001F76  0100               	movlb	0	; () banked
  3484  001F78  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  3485  001F7A  D00B               	goto	l6972
  3486  001F7C  5181               	movf	(?___awdiv+1)& (0+255),w,b
  3487  001F7E  E104               	bnz	u7640
  3488  001F80  0E1F               	movlw	31
  3489  001F82  5D80               	subwf	?___awdiv& (0+255),w,b
  3490  001F84  A0D8               	btfss	status,0,c
  3491  001F86  D005               	goto	l6972
  3492  001F88                     u7640:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;main.c: 371:     tires_t = 2;
  3496  001F88  0E00               	movlw	0
  3497  001F8A  0101               	movlb	1	; () banked
  3498  001F8C  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3499  001F8E  0E02               	movlw	2
  3500  001F90  6F02               	movwf	number_deploy@tires_t& (0+255),b
  3501  001F92                     l6972:
  3502                           
  3503                           ;main.c: 375:   if (poles_detected == 0){
  3504  001F92  0100               	movlb	0	; () banked
  3505  001F94  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  3506  001F96  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  3507  001F98  A4D8               	btfss	status,2,c
  3508  001F9A  D005               	goto	l6976
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;main.c: 376:    tires_t = 2;
  3512  001F9C  0E00               	movlw	0
  3513  001F9E  0101               	movlb	1	; () banked
  3514  001FA0  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3515  001FA2  0E02               	movlw	2
  3516  001FA4  6F02               	movwf	number_deploy@tires_t& (0+255),b
  3517  001FA6                     l6976:
  3518                           
  3519                           ;main.c: 379:   if ((a[0]>=2 && a[0] <= 15)){
  3520  001FA6  BE41               	btfsc	_a+1,7,c
  3521  001FA8  D028               	goto	l6988
  3522  001FAA  5041               	movf	_a+1,w,c
  3523  001FAC  E104               	bnz	u7660
  3524  001FAE  0E02               	movlw	2
  3525  001FB0  5C40               	subwf	_a,w,c
  3526  001FB2  A0D8               	btfss	status,0,c
  3527  001FB4  D022               	goto	l6988
  3528  001FB6                     u7660:
  3529  001FB6  BE41               	btfsc	_a+1,7,c
  3530  001FB8  D006               	goto	u7670
  3531  001FBA  5041               	movf	_a+1,w,c
  3532  001FBC  E11E               	bnz	l6988
  3533  001FBE  0E10               	movlw	16
  3534  001FC0  5C40               	subwf	_a,w,c
  3535  001FC2  B0D8               	btfsc	status,0,c
  3536  001FC4  D01A               	goto	l6988
  3537  001FC6                     u7670:
  3538                           
  3539                           ;main.c: 381:             if ((a[1]>=2 && a[1] <= 15)){
  3540  001FC6  BE43               	btfsc	_a+3,7,c
  3541  001FC8  D013               	goto	l6986
  3542  001FCA  5043               	movf	_a+3,w,c
  3543  001FCC  E104               	bnz	u7680
  3544  001FCE  0E02               	movlw	2
  3545  001FD0  5C42               	subwf	_a+2,w,c
  3546  001FD2  A0D8               	btfss	status,0,c
  3547  001FD4  D00D               	goto	l6986
  3548  001FD6                     u7680:
  3549  001FD6  BE43               	btfsc	_a+3,7,c
  3550  001FD8  D006               	goto	u7690
  3551  001FDA  5043               	movf	_a+3,w,c
  3552  001FDC  E109               	bnz	l6986
  3553  001FDE  0E10               	movlw	16
  3554  001FE0  5C42               	subwf	_a+2,w,c
  3555  001FE2  B0D8               	btfsc	status,0,c
  3556  001FE4  D005               	goto	l6986
  3557  001FE6                     u7690:
  3558                           
  3559                           ;main.c: 383:                 tires_detected = 1;
  3560  001FE6  0E00               	movlw	0
  3561  001FE8  0101               	movlb	1	; () banked
  3562  001FEA  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  3563  001FEC  0E01               	movlw	1
  3564  001FEE  D004               	goto	L3
  3565  001FF0                     l6986:
  3566                           
  3567                           ;main.c: 386:                 tires_detected = 0;
  3568  001FF0  0E00               	movlw	0
  3569  001FF2  0101               	movlb	1	; () banked
  3570  001FF4  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  3571  001FF6  0E00               	movlw	0
  3572  001FF8                     L3:
  3573  001FF8  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  3574  001FFA                     l6988:
  3575                           
  3576                           ;main.c: 389:         if ((tires_detected==1)){
  3577  001FFA  0101               	movlb	1	; () banked
  3578  001FFC  0504               	decf	number_deploy@tires_detected& (0+255),w,b
  3579  001FFE  1105               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  3580  002000  B4D8               	btfsc	status,2,c
  3581                           
  3582                           ; BSR set to: 1
  3583                           ;main.c: 390:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  3584  002002  BE45               	btfsc	_a+5,7,c
  3585  002004  D020               	goto	l7000
  3586  002006  5045               	movf	_a+5,w,c
  3587  002008  E104               	bnz	u7710
  3588  00200A  0E02               	movlw	2
  3589  00200C  5C44               	subwf	_a+4,w,c
  3590  00200E  A0D8               	btfss	status,0,c
  3591  002010  D01A               	goto	l7000
  3592  002012                     u7710:
  3593                           
  3594                           ; BSR set to: 1
  3595  002012  BE45               	btfsc	_a+5,7,c
  3596  002014  D006               	goto	u7720
  3597  002016  5045               	movf	_a+5,w,c
  3598  002018  E116               	bnz	l7000
  3599  00201A  0E10               	movlw	16
  3600  00201C  5C44               	subwf	_a+4,w,c
  3601  00201E  B0D8               	btfsc	status,0,c
  3602  002020  D012               	goto	l7000
  3603  002022                     u7720:
  3604                           
  3605                           ; BSR set to: 1
  3606  002022  BE47               	btfsc	_a+7,7,c
  3607  002024  D010               	goto	l7000
  3608  002026  5047               	movf	_a+7,w,c
  3609  002028  E104               	bnz	u7730
  3610  00202A  0E02               	movlw	2
  3611  00202C  5C46               	subwf	_a+6,w,c
  3612  00202E  A0D8               	btfss	status,0,c
  3613  002030  D00A               	goto	l7000
  3614  002032                     u7730:
  3615                           
  3616                           ; BSR set to: 1
  3617  002032  BE47               	btfsc	_a+7,7,c
  3618  002034  D006               	goto	u7740
  3619  002036  5047               	movf	_a+7,w,c
  3620  002038  E106               	bnz	l7000
  3621  00203A  0E10               	movlw	16
  3622  00203C  5C46               	subwf	_a+6,w,c
  3623  00203E  B0D8               	btfsc	status,0,c
  3624  002040  D002               	goto	l7000
  3625  002042                     u7740:
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;main.c: 391:                 tires_detected++;
  3629  002042  4B04               	infsnz	number_deploy@tires_detected& (0+255),f,b
  3630  002044  2B05               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  3631  002046                     l7000:
  3632                           
  3633                           ; BSR set to: 1
  3634                           ;main.c: 395:     t_count = tires_t - tires_detected;
  3635  002046  5104               	movf	number_deploy@tires_detected& (0+255),w,b
  3636  002048  5D02               	subwf	number_deploy@tires_t& (0+255),w,b
  3637  00204A  6F06               	movwf	number_deploy@t_count& (0+255),b
  3638  00204C  5105               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  3639  00204E  5903               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  3640  002050  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  3641                           
  3642                           ; BSR set to: 1
  3643                           ;main.c: 396:     Pole[poles_detected].tires_deployed = t_count;
  3644  002052  C0FB  F100         	movff	number_deploy@poles_detected,??_number_deploy
  3645  002056  C0FC  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  3646  00205A  90D8               	bcf	status,0,c
  3647  00205C  3700               	rlcf	??_number_deploy& (0+255),f,b
  3648  00205E  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3649  002060  90D8               	bcf	status,0,c
  3650  002062  3700               	rlcf	??_number_deploy& (0+255),f,b
  3651  002064  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3652  002066  90D8               	bcf	status,0,c
  3653  002068  3700               	rlcf	??_number_deploy& (0+255),f,b
  3654  00206A  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3655  00206C  0E00               	movlw	low _Pole
  3656  00206E  2500               	addwf	??_number_deploy& (0+255),w,b
  3657  002070  6ED9               	movwf	fsr2l,c
  3658  002072  0E02               	movlw	high _Pole
  3659  002074  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  3660  002076  6EDA               	movwf	fsr2h,c
  3661  002078  C106  FFDE         	movff	number_deploy@t_count,postinc2
  3662  00207C  C107  FFDD         	movff	number_deploy@t_count+1,postdec2
  3663                           
  3664                           ; BSR set to: 1
  3665                           ;main.c: 397:     Pole[poles_detected].tires_final = tires_t;
  3666  002080  C0FB  F100         	movff	number_deploy@poles_detected,??_number_deploy
  3667  002084  C0FC  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  3668  002088  90D8               	bcf	status,0,c
  3669  00208A  3700               	rlcf	??_number_deploy& (0+255),f,b
  3670  00208C  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3671  00208E  90D8               	bcf	status,0,c
  3672  002090  3700               	rlcf	??_number_deploy& (0+255),f,b
  3673  002092  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3674  002094  90D8               	bcf	status,0,c
  3675  002096  3700               	rlcf	??_number_deploy& (0+255),f,b
  3676  002098  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3677  00209A  0E02               	movlw	low (_Pole+2)
  3678  00209C  2500               	addwf	??_number_deploy& (0+255),w,b
  3679  00209E  6ED9               	movwf	fsr2l,c
  3680  0020A0  0E02               	movlw	high (_Pole+2)
  3681  0020A2  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  3682  0020A4  6EDA               	movwf	fsr2h,c
  3683  0020A6  C102  FFDE         	movff	number_deploy@tires_t,postinc2
  3684  0020AA  C103  FFDD         	movff	number_deploy@tires_t+1,postdec2
  3685                           
  3686                           ; BSR set to: 1
  3687                           ;main.c: 398:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3688  0020AE  0E01               	movlw	1
  3689  0020B0  EC4C  F01B         	call	_lcdInst
  3690  0020B4  0E11               	movlw	17
  3691  0020B6  0101               	movlb	1	; () banked
  3692  0020B8  6F00               	movwf	??_number_deploy& (0+255),b
  3693  0020BA  0E3A               	movlw	58
  3694  0020BC                     u8337:
  3695  0020BC  2EE8               	decfsz	wreg,f,c
  3696  0020BE  D7FE               	bra	u8337
  3697  0020C0  2F00               	decfsz	??_number_deploy& (0+255),f,b
  3698  0020C2  D7FC               	bra	u8337
  3699  0020C4  F000               	nop	
  3700                           
  3701                           ;main.c: 399:     printf("det,%d, tcnt %d",tires_detected,t_count);
  3702  0020C6  0EB6               	movlw	low STR_10
  3703  0020C8  0100               	movlb	0	; () banked
  3704  0020CA  6FED               	movwf	printf@fmt& (0+255),b
  3705  0020CC  0EFE               	movlw	high STR_10
  3706  0020CE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3707  0020D0  C104  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  3708  0020D4  C105  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  3709  0020D8  C106  F0F1         	movff	number_deploy@t_count,?_printf+4
  3710  0020DC  C107  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  3711  0020E0  ECBD  F01A         	call	_printf	;wreg free
  3712                           
  3713                           ;main.c: 400:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3714  0020E4  0E0D               	movlw	13
  3715  0020E6  0101               	movlb	1	; () banked
  3716  0020E8  6F01               	movwf	(??_number_deploy+1)& (0+255),b
  3717  0020EA  0EAF               	movlw	175
  3718  0020EC  6F00               	movwf	??_number_deploy& (0+255),b
  3719  0020EE  0EB6               	movlw	182
  3720  0020F0                     u8347:
  3721  0020F0  2EE8               	decfsz	wreg,f,c
  3722  0020F2  D7FE               	bra	u8347
  3723  0020F4  2F00               	decfsz	??_number_deploy& (0+255),f,b
  3724  0020F6  D7FC               	bra	u8347
  3725  0020F8  2F01               	decfsz	(??_number_deploy+1)& (0+255),f,b
  3726  0020FA  D7FA               	bra	u8347
  3727  0020FC  F000               	nop	
  3728                           
  3729                           ;main.c: 402:     if (t_count<=2){
  3730  0020FE  0101               	movlb	1	; () banked
  3731  002100  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  3732  002102  D006               	goto	u7750
  3733  002104  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  3734  002106  E109               	bnz	l7020
  3735  002108  0E03               	movlw	3
  3736  00210A  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  3737  00210C  B0D8               	btfsc	status,0,c
  3738  00210E  D005               	goto	l7020
  3739  002110                     u7750:
  3740                           
  3741                           ; BSR set to: 1
  3742                           ;main.c: 406:         return (int) t_count;
  3743  002110  C106  F0F9         	movff	number_deploy@t_count,?_number_deploy
  3744  002114  C107  F0FA         	movff	number_deploy@t_count+1,?_number_deploy+1
  3745  002118  0012               	return	
  3746  00211A                     l7020:
  3747                           
  3748                           ; BSR set to: 1
  3749                           ;main.c: 364:     while (t_count<3){
  3750  00211A  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  3751  00211C  D704               	goto	l6962
  3752  00211E  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  3753  002120  E105               	bnz	u7760
  3754  002122  0E03               	movlw	3
  3755  002124  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  3756  002126  B0D8               	btfsc	status,0,c
  3757  002128  0012               	return	
  3758  00212A  D6FD               	goto	l6962
  3759  00212C                     u7760:
  3760                           
  3761                           ; BSR set to: 1
  3762  00212C  0012               	return		;funcret
  3763  00212E                     __end_of_number_deploy:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function ___awdiv *****************
  3767 ;; Defined at:
  3768 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  dividend        2    0[BANK0 ] int 
  3771 ;;  divisor         2    2[BANK0 ] int 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  quotient        2    6[BANK0 ] int 
  3774 ;;  sign            1    5[BANK0 ] unsigned char 
  3775 ;;  counter         1    4[BANK0 ] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  2    0[BANK0 ] int 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3785 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;Total ram usage:        8 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    3
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_number_deploy
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text8
  3800  002CC6                     __ptext8:
  3801                           	opt callstack 0
  3802  002CC6                     ___awdiv:
  3803                           	opt callstack 26
  3804                           
  3805                           ; BSR set to: 1
  3806                           ;incstack = 0
  3807  002CC6  0E00               	movlw	0
  3808  002CC8  0100               	movlb	0	; () banked
  3809  002CCA  6F85               	movwf	___awdiv@sign& (0+255),b
  3810                           
  3811                           ; BSR set to: 0
  3812  002CCC  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3813  002CCE  D006               	goto	l6860
  3814                           
  3815                           ; BSR set to: 0
  3816  002CD0  6D82               	negf	___awdiv@divisor& (0+255),b
  3817  002CD2  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3818  002CD4  B0D8               	btfsc	status,0,c
  3819  002CD6  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3820                           
  3821                           ; BSR set to: 0
  3822  002CD8  0E01               	movlw	1
  3823  002CDA  6F85               	movwf	___awdiv@sign& (0+255),b
  3824  002CDC                     l6860:
  3825                           
  3826                           ; BSR set to: 0
  3827  002CDC  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  3828  002CDE  D006               	goto	l6866
  3829                           
  3830                           ; BSR set to: 0
  3831  002CE0  6D80               	negf	___awdiv@dividend& (0+255),b
  3832  002CE2  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3833  002CE4  B0D8               	btfsc	status,0,c
  3834  002CE6  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3835                           
  3836                           ; BSR set to: 0
  3837  002CE8  0E01               	movlw	1
  3838  002CEA  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  3839  002CEC                     l6866:
  3840                           
  3841                           ; BSR set to: 0
  3842  002CEC  0E00               	movlw	0
  3843  002CEE  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  3844  002CF0  0E00               	movlw	0
  3845  002CF2  6F86               	movwf	___awdiv@quotient& (0+255),b
  3846                           
  3847                           ; BSR set to: 0
  3848  002CF4  5182               	movf	___awdiv@divisor& (0+255),w,b
  3849  002CF6  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3850  002CF8  B4D8               	btfsc	status,2,c
  3851  002CFA  D01C               	goto	l6888
  3852                           
  3853                           ; BSR set to: 0
  3854  002CFC  0E01               	movlw	1
  3855  002CFE  6F84               	movwf	___awdiv@counter& (0+255),b
  3856  002D00  D004               	goto	l6874
  3857  002D02                     l6872:
  3858                           
  3859                           ; BSR set to: 0
  3860  002D02  90D8               	bcf	status,0,c
  3861  002D04  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  3862  002D06  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3863  002D08  2B84               	incf	___awdiv@counter& (0+255),f,b
  3864  002D0A                     l6874:
  3865                           
  3866                           ; BSR set to: 0
  3867  002D0A  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3868  002D0C  D7FA               	goto	l6872
  3869  002D0E                     u7520:
  3870                           
  3871                           ; BSR set to: 0
  3872  002D0E  90D8               	bcf	status,0,c
  3873  002D10  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  3874  002D12  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3875                           
  3876                           ; BSR set to: 0
  3877  002D14  5182               	movf	___awdiv@divisor& (0+255),w,b
  3878  002D16  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  3879  002D18  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3880  002D1A  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3881  002D1C  A0D8               	btfss	status,0,c
  3882  002D1E  D005               	goto	l6884
  3883                           
  3884                           ; BSR set to: 0
  3885  002D20  5182               	movf	___awdiv@divisor& (0+255),w,b
  3886  002D22  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  3887  002D24  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3888  002D26  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3889                           
  3890                           ; BSR set to: 0
  3891  002D28  8186               	bsf	___awdiv@quotient& (0+255),0,b
  3892  002D2A                     l6884:
  3893                           
  3894                           ; BSR set to: 0
  3895  002D2A  90D8               	bcf	status,0,c
  3896  002D2C  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3897  002D2E  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  3898                           
  3899                           ; BSR set to: 0
  3900  002D30  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  3901  002D32  D7ED               	goto	u7520
  3902  002D34                     l6888:
  3903                           
  3904                           ; BSR set to: 0
  3905  002D34  5185               	movf	___awdiv@sign& (0+255),w,b
  3906  002D36  B4D8               	btfsc	status,2,c
  3907  002D38  D004               	goto	l6892
  3908                           
  3909                           ; BSR set to: 0
  3910  002D3A  6D86               	negf	___awdiv@quotient& (0+255),b
  3911  002D3C  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3912  002D3E  B0D8               	btfsc	status,0,c
  3913  002D40  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3914  002D42                     l6892:
  3915                           
  3916                           ; BSR set to: 0
  3917  002D42  C086  F080         	movff	___awdiv@quotient,?___awdiv
  3918  002D46  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  3919                           
  3920                           ; BSR set to: 0
  3921  002D4A  0012               	return		;funcret
  3922  002D4C                     __end_of___awdiv:
  3923                           	opt callstack 0
  3924                           
  3925 ;; *************** function _backwards *****************
  3926 ;; Defined at:
  3927 ;;		line 626 in file "main.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    5
  3948 ;; This function calls:
  3949 ;;		_I2C_Master_Start
  3950 ;;		_I2C_Master_Stop
  3951 ;;		_I2C_Master_Write
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text9
  3958  0035F0                     __ptext9:
  3959                           	opt callstack 0
  3960  0035F0                     _backwards:
  3961                           	opt callstack 25
  3962                           
  3963                           ;main.c: 627:     I2C_Master_Start();
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;incstack = 0
  3967  0035F0  EC65  F01B         	call	_I2C_Master_Start	;wreg free
  3968                           
  3969                           ;main.c: 628:     I2C_Master_Write(0b00010000);
  3970  0035F4  0E00               	movlw	0
  3971  0035F6  0100               	movlb	0	; () banked
  3972  0035F8  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3973  0035FA  0E10               	movlw	16
  3974  0035FC  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3975  0035FE  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  3976                           
  3977                           ;main.c: 629:     I2C_Master_Write('5');
  3978  003602  0E00               	movlw	0
  3979  003604  0100               	movlb	0	; () banked
  3980  003606  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3981  003608  0E35               	movlw	53
  3982  00360A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3983  00360C  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  3984                           
  3985                           ;main.c: 630:     I2C_Master_Stop();
  3986  003610  EC61  F01B         	call	_I2C_Master_Stop	;wreg free
  3987  003614  0012               	return		;funcret
  3988  003616                     __end_of_backwards:
  3989                           	opt callstack 0
  3990                           
  3991 ;; *************** function _actuators_main *****************
  3992 ;; Defined at:
  3993 ;;		line 64 in file "actuators_main.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  stack           2    8[BANK1 ] int 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  act_cnt         2   12[BANK1 ] int 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4007 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;Total ram usage:        6 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:   16
  4014 ;; This function calls:
  4015 ;;		_initLCD
  4016 ;;		_lcdInst
  4017 ;;		_printf
  4018 ;;		_servo
  4019 ;;		_stepper
  4020 ;;		_stepper2
  4021 ;;		_system_init
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text10
  4028  002912                     __ptext10:
  4029                           	opt callstack 0
  4030  002912                     _actuators_main:
  4031                           	opt callstack 14
  4032                           
  4033                           ;actuators_main.c: 65:     int act_cnt = 0;
  4034                           
  4035                           ;incstack = 0
  4036  002912  0E00               	movlw	0
  4037  002914  0101               	movlb	1	; () banked
  4038  002916  6F0D               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4039  002918  0E00               	movlw	0
  4040  00291A  6F0C               	movwf	actuators_main@act_cnt& (0+255),b
  4041                           
  4042                           ; BSR set to: 1
  4043                           ;actuators_main.c: 66:     system_init();
  4044  00291C  EC00  F01A         	call	_system_init	;wreg free
  4045                           
  4046                           ;actuators_main.c: 67:     initLCD();
  4047  002920  EC69  F017         	call	_initLCD	;wreg free
  4048                           
  4049                           ;actuators_main.c: 68:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  4050  002924  0E01               	movlw	1
  4051  002926  EC4C  F01B         	call	_lcdInst
  4052  00292A  0E11               	movlw	17
  4053  00292C  0101               	movlb	1	; () banked
  4054  00292E  6F0A               	movwf	??_actuators_main& (0+255),b
  4055  002930  0E3A               	movlw	58
  4056  002932                     u8357:
  4057  002932  2EE8               	decfsz	wreg,f,c
  4058  002934  D7FE               	bra	u8357
  4059  002936  2F0A               	decfsz	??_actuators_main& (0+255),f,b
  4060  002938  D7FC               	bra	u8357
  4061  00293A  F000               	nop	
  4062                           
  4063                           ;actuators_main.c: 69:     printf("cnt is %d",act_cnt);
  4064  00293C  0EAB               	movlw	low STR_44
  4065  00293E  0100               	movlb	0	; () banked
  4066  002940  6FED               	movwf	printf@fmt& (0+255),b
  4067  002942  0EFF               	movlw	high STR_44
  4068  002944  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4069  002946  0E00               	movlw	0
  4070  002948  6FF0               	movwf	(?_printf+3)& (0+255),b
  4071  00294A  0E00               	movlw	0
  4072  00294C  6FEF               	movwf	(?_printf+2)& (0+255),b
  4073  00294E  ECBD  F01A         	call	_printf	;wreg free
  4074                           
  4075                           ;actuators_main.c: 70:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4076  002952  0E03               	movlw	3
  4077  002954  0101               	movlb	1	; () banked
  4078  002956  6F0B               	movwf	(??_actuators_main+1)& (0+255),b
  4079  002958  0E8A               	movlw	138
  4080  00295A  6F0A               	movwf	??_actuators_main& (0+255),b
  4081  00295C  0E55               	movlw	85
  4082  00295E                     u8367:
  4083  00295E  2EE8               	decfsz	wreg,f,c
  4084  002960  D7FE               	bra	u8367
  4085  002962  2F0A               	decfsz	??_actuators_main& (0+255),f,b
  4086  002964  D7FC               	bra	u8367
  4087  002966  2F0B               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4088  002968  D7FA               	bra	u8367
  4089  00296A  D000               	nop2	
  4090  00296C                     l7300:
  4091                           
  4092                           ;actuators_main.c: 72:     if (act_cnt==0){
  4093  00296C  0101               	movlb	1	; () banked
  4094  00296E  510C               	movf	actuators_main@act_cnt& (0+255),w,b
  4095  002970  110D               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4096  002972  A4D8               	btfss	status,2,c
  4097  002974  D044               	goto	l7324
  4098                           
  4099                           ; BSR set to: 1
  4100                           ;actuators_main.c: 76:         stepper(stack);
  4101  002976  C108  F100         	movff	actuators_main@stack,stepper@stack
  4102  00297A  C109  F101         	movff	actuators_main@stack+1,stepper@stack+1
  4103  00297E  EC2A  F017         	call	_stepper	;wreg free
  4104                           
  4105                           ;actuators_main.c: 77:         stepper2(0);
  4106  002982  0E00               	movlw	0
  4107  002984  EC3C  F018         	call	_stepper2
  4108                           
  4109                           ;actuators_main.c: 79:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4110  002988  0E01               	movlw	1
  4111  00298A  EC4C  F01B         	call	_lcdInst
  4112  00298E  0E11               	movlw	17
  4113  002990  0101               	movlb	1	; () banked
  4114  002992  6F0A               	movwf	??_actuators_main& (0+255),b
  4115  002994  0E3A               	movlw	58
  4116  002996                     u8377:
  4117  002996  2EE8               	decfsz	wreg,f,c
  4118  002998  D7FE               	bra	u8377
  4119  00299A  2F0A               	decfsz	??_actuators_main& (0+255),f,b
  4120  00299C  D7FC               	bra	u8377
  4121  00299E  F000               	nop	
  4122                           
  4123                           ;actuators_main.c: 80:         printf("Stepper done");
  4124  0029A0  0E4D               	movlw	low STR_45
  4125  0029A2  0100               	movlb	0	; () banked
  4126  0029A4  6FED               	movwf	printf@fmt& (0+255),b
  4127  0029A6  0EFF               	movlw	high STR_45
  4128  0029A8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4129  0029AA  ECBD  F01A         	call	_printf	;wreg free
  4130                           
  4131                           ;actuators_main.c: 82:         servo();
  4132  0029AE  EC92  F01A         	call	_servo	;wreg free
  4133                           
  4134                           ;actuators_main.c: 83:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4135  0029B2  0E01               	movlw	1
  4136  0029B4  EC4C  F01B         	call	_lcdInst
  4137  0029B8  0E11               	movlw	17
  4138  0029BA  0101               	movlb	1	; () banked
  4139  0029BC  6F0A               	movwf	??_actuators_main& (0+255),b
  4140  0029BE  0E3A               	movlw	58
  4141  0029C0                     u8387:
  4142  0029C0  2EE8               	decfsz	wreg,f,c
  4143  0029C2  D7FE               	bra	u8387
  4144  0029C4  2F0A               	decfsz	??_actuators_main& (0+255),f,b
  4145  0029C6  D7FC               	bra	u8387
  4146  0029C8  F000               	nop	
  4147                           
  4148                           ;actuators_main.c: 84:         printf("Servo done");
  4149  0029CA  0E8A               	movlw	low STR_46
  4150  0029CC  0100               	movlb	0	; () banked
  4151  0029CE  6FED               	movwf	printf@fmt& (0+255),b
  4152  0029D0  0EFF               	movlw	high STR_46
  4153  0029D2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4154  0029D4  ECBD  F01A         	call	_printf	;wreg free
  4155                           
  4156                           ;actuators_main.c: 88:         _delay((unsigned long)((200)*(10000000/4000.0)));
  4157  0029D8  0E03               	movlw	3
  4158  0029DA  0101               	movlb	1	; () banked
  4159  0029DC  6F0B               	movwf	(??_actuators_main+1)& (0+255),b
  4160  0029DE  0E8A               	movlw	138
  4161  0029E0  6F0A               	movwf	??_actuators_main& (0+255),b
  4162  0029E2  0E55               	movlw	85
  4163  0029E4                     u8397:
  4164  0029E4  2EE8               	decfsz	wreg,f,c
  4165  0029E6  D7FE               	bra	u8397
  4166  0029E8  2F0A               	decfsz	??_actuators_main& (0+255),f,b
  4167  0029EA  D7FC               	bra	u8397
  4168  0029EC  2F0B               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4169  0029EE  D7FA               	bra	u8397
  4170  0029F0  D000               	nop2	
  4171                           
  4172                           ;actuators_main.c: 90:         stepper2(1);
  4173  0029F2  0E01               	movlw	1
  4174  0029F4  EC3C  F018         	call	_stepper2
  4175                           
  4176                           ;actuators_main.c: 91:         act_cnt++;
  4177  0029F8  0101               	movlb	1	; () banked
  4178  0029FA  4B0C               	infsnz	actuators_main@act_cnt& (0+255),f,b
  4179  0029FC  2B0D               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  4180  0029FE                     l7324:
  4181                           
  4182                           ; BSR set to: 1
  4183                           ;actuators_main.c: 94:     if(act_cnt){
  4184  0029FE  510C               	movf	actuators_main@act_cnt& (0+255),w,b
  4185  002A00  110D               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4186  002A02  A4D8               	btfss	status,2,c
  4187  002A04  0012               	return	
  4188  002A06  D7B2               	goto	l7300
  4189  002A08                     __end_of_actuators_main:
  4190                           	opt callstack 0
  4191                           
  4192 ;; *************** function _system_init *****************
  4193 ;; Defined at:
  4194 ;;		line 112 in file "actuators_main.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;		None
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;Total ram usage:        0 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    3
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_actuators_main
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text11
  4223  003400                     __ptext11:
  4224                           	opt callstack 0
  4225  003400                     _system_init:
  4226                           	opt callstack 26
  4227                           
  4228                           ;actuators_main.c: 113:     TRISB = 0x00;
  4229                           
  4230                           ; BSR set to: 1
  4231                           ;incstack = 0
  4232  003400  0E00               	movlw	0
  4233  003402  6E93               	movwf	3987,c	;volatile
  4234                           
  4235                           ;actuators_main.c: 115:     LATB = 0x0F;
  4236  003404  0E0F               	movlw	15
  4237  003406  6E8A               	movwf	3978,c	;volatile
  4238                           
  4239                           ;actuators_main.c: 116:     TRISA = 0x00;
  4240  003408  0E00               	movlw	0
  4241  00340A  6E92               	movwf	3986,c	;volatile
  4242                           
  4243                           ;actuators_main.c: 117:     LATA = 0x0F;
  4244  00340C  0E0F               	movlw	15
  4245  00340E  6E89               	movwf	3977,c	;volatile
  4246                           
  4247                           ;actuators_main.c: 119:     TRISCbits.TRISC1 = 0;
  4248  003410  9294               	bcf	3988,1,c	;volatile
  4249                           
  4250                           ;actuators_main.c: 122:     TRISCbits.TRISC2 = 0;
  4251  003412  9494               	bcf	3988,2,c	;volatile
  4252                           
  4253                           ;actuators_main.c: 125:     LATD = 0x00;
  4254  003414  0E00               	movlw	0
  4255  003416  6E8C               	movwf	3980,c	;volatile
  4256                           
  4257                           ;actuators_main.c: 126:     TRISD = 0x00;
  4258  003418  0E00               	movlw	0
  4259  00341A  6E95               	movwf	3989,c	;volatile
  4260                           
  4261                           ;actuators_main.c: 128:     ADCON1 = 0b00001111;
  4262  00341C  0E0F               	movlw	15
  4263  00341E  6EC1               	movwf	4033,c	;volatile
  4264                           
  4265                           ;actuators_main.c: 130:     TRISC = 0x00;
  4266  003420  0E00               	movlw	0
  4267  003422  6E94               	movwf	3988,c	;volatile
  4268                           
  4269                           ;actuators_main.c: 131:     LATC = 0x00;
  4270  003424  0E00               	movlw	0
  4271  003426  6E8B               	movwf	3979,c	;volatile
  4272                           
  4273                           ;actuators_main.c: 132:     TRISE = 0x00;
  4274  003428  0E00               	movlw	0
  4275  00342A  6E96               	movwf	3990,c	;volatile
  4276                           
  4277                           ;actuators_main.c: 133:     LATE = 0x00;
  4278  00342C  0E00               	movlw	0
  4279  00342E  6E8D               	movwf	3981,c	;volatile
  4280  003430  0012               	return		;funcret
  4281  003432                     __end_of_system_init:
  4282                           	opt callstack 0
  4283                           
  4284 ;; *************** function _stepper2 *****************
  4285 ;; Defined at:
  4286 ;;		line 377 in file "actuators_main.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  direction       1    wreg     unsigned char 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  direction       1    0[BANK1 ] unsigned char 
  4291 ;;  i               2    3[BANK1 ] int 
  4292 ;;  count_steppe    2    1[BANK1 ] int 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;Total ram usage:        5 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:   15
  4309 ;; This function calls:
  4310 ;;		_full_drive
  4311 ;;		_printf
  4312 ;; This function is called by:
  4313 ;;		_actuators_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text12
  4318  003078                     __ptext12:
  4319                           	opt callstack 0
  4320  003078                     _stepper2:
  4321                           	opt callstack 14
  4322                           
  4323                           ;incstack = 0
  4324                           ;stepper2@direction stored from wreg
  4325  003078  0101               	movlb	1	; () banked
  4326  00307A  6F00               	movwf	stepper2@direction& (0+255),b
  4327                           
  4328                           ;actuators_main.c: 395:     int count_stepper = 0;
  4329  00307C  0E00               	movlw	0
  4330  00307E  0101               	movlb	1	; () banked
  4331  003080  6F02               	movwf	(stepper2@count_stepper+1)& (0+255),b
  4332  003082  0E00               	movlw	0
  4333  003084  6F01               	movwf	stepper2@count_stepper& (0+255),b
  4334                           
  4335                           ; BSR set to: 1
  4336                           ;actuators_main.c: 402:             for(int i=0;i<110;i++){
  4337                           
  4338                           ; BSR set to: 1
  4339                           ;actuators_main.c: 397:         if (count_stepper<1){
  4340  003086  0E00               	movlw	0
  4341  003088  6F04               	movwf	(stepper2@i+1)& (0+255),b
  4342  00308A  0E00               	movlw	0
  4343  00308C  6F03               	movwf	stepper2@i& (0+255),b
  4344  00308E                     l6832:
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;actuators_main.c: 404:                 full_drive(direction, 2);
  4348  00308E  0E00               	movlw	0
  4349  003090  0100               	movlb	0	; () banked
  4350  003092  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  4351  003094  0E02               	movlw	2
  4352  003096  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  4353  003098  0101               	movlb	1	; () banked
  4354  00309A  5100               	movf	stepper2@direction& (0+255),w,b
  4355  00309C  EC60  F00A         	call	_full_drive
  4356                           
  4357                           ;actuators_main.c: 406:             }
  4358  0030A0  0101               	movlb	1	; () banked
  4359  0030A2  4B03               	infsnz	stepper2@i& (0+255),f,b
  4360  0030A4  2B04               	incf	(stepper2@i+1)& (0+255),f,b
  4361                           
  4362                           ; BSR set to: 1
  4363  0030A6  BF04               	btfsc	(stepper2@i+1)& (0+255),7,b
  4364  0030A8  D7F2               	goto	l6832
  4365  0030AA  5104               	movf	(stepper2@i+1)& (0+255),w,b
  4366  0030AC  E104               	bnz	u7480
  4367  0030AE  0E6E               	movlw	110
  4368  0030B0  5D03               	subwf	stepper2@i& (0+255),w,b
  4369  0030B2  A0D8               	btfss	status,0,c
  4370  0030B4  D7EC               	goto	l6832
  4371  0030B6                     u7480:
  4372                           
  4373                           ; BSR set to: 1
  4374                           ;actuators_main.c: 407:             printf("cnt is %d", count_stepper);
  4375  0030B6  0EAB               	movlw	low STR_44
  4376  0030B8  0100               	movlb	0	; () banked
  4377  0030BA  6FED               	movwf	printf@fmt& (0+255),b
  4378  0030BC  0EFF               	movlw	high STR_44
  4379  0030BE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4380  0030C0  C101  F0EF         	movff	stepper2@count_stepper,?_printf+2
  4381  0030C4  C102  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  4382  0030C8  ECBD  F01A         	call	_printf	;wreg free
  4383                           
  4384                           ;actuators_main.c: 408:             count_stepper++;
  4385  0030CC  0101               	movlb	1	; () banked
  4386  0030CE  4B01               	infsnz	stepper2@count_stepper& (0+255),f,b
  4387  0030D0  2B02               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  4388                           
  4389                           ; BSR set to: 1
  4390  0030D2  0012               	return		;funcret
  4391  0030D4                     __end_of_stepper2:
  4392                           	opt callstack 0
  4393                           
  4394 ;; *************** function _stepper *****************
  4395 ;; Defined at:
  4396 ;;		line 329 in file "actuators_main.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  stack           2    0[BANK1 ] int 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  i               2    6[BANK1 ] int 
  4401 ;;  i               2    4[BANK1 ] int 
  4402 ;;  count_steppe    2    2[BANK1 ] int 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4412 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;Total ram usage:        8 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:   15
  4419 ;; This function calls:
  4420 ;;		_full_drive
  4421 ;; This function is called by:
  4422 ;;		_actuators_main
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text13
  4427  002E54                     __ptext13:
  4428                           	opt callstack 0
  4429  002E54                     _stepper:
  4430                           	opt callstack 14
  4431                           
  4432                           ;actuators_main.c: 330:     int count_stepper = 0;
  4433                           
  4434                           ; BSR set to: 1
  4435                           ;incstack = 0
  4436  002E54  0E00               	movlw	0
  4437  002E56  0101               	movlb	1	; () banked
  4438  002E58  6F03               	movwf	(stepper@count_stepper+1)& (0+255),b
  4439  002E5A  0E00               	movlw	0
  4440  002E5C  6F02               	movwf	stepper@count_stepper& (0+255),b
  4441                           
  4442                           ; BSR set to: 1
  4443                           ;actuators_main.c: 339:             if (stack == 1){
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;actuators_main.c: 333:         if (count_stepper<1){
  4447  002E5E  0500               	decf	stepper@stack& (0+255),w,b
  4448  002E60  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  4449  002E62  A4D8               	btfss	status,2,c
  4450  002E64  D017               	goto	u7450
  4451                           
  4452                           ; BSR set to: 1
  4453                           ;actuators_main.c: 340:                 for(int i=0;i<14;i++){
  4454  002E66  0E00               	movlw	0
  4455  002E68  6F05               	movwf	(stepper@i+1)& (0+255),b
  4456  002E6A  0E00               	movlw	0
  4457  002E6C  6F04               	movwf	stepper@i& (0+255),b
  4458  002E6E                     l6800:
  4459                           
  4460                           ; BSR set to: 1
  4461                           ;actuators_main.c: 342:                     full_drive(0, 1);
  4462  002E6E  0E00               	movlw	0
  4463  002E70  0100               	movlb	0	; () banked
  4464  002E72  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  4465  002E74  0E01               	movlw	1
  4466  002E76  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  4467  002E78  0E00               	movlw	0
  4468  002E7A  EC60  F00A         	call	_full_drive
  4469                           
  4470                           ;actuators_main.c: 344:                 }
  4471  002E7E  0101               	movlb	1	; () banked
  4472  002E80  4B04               	infsnz	stepper@i& (0+255),f,b
  4473  002E82  2B05               	incf	(stepper@i+1)& (0+255),f,b
  4474                           
  4475                           ; BSR set to: 1
  4476  002E84  BF05               	btfsc	(stepper@i+1)& (0+255),7,b
  4477  002E86  D7F3               	goto	l6800
  4478  002E88  5105               	movf	(stepper@i+1)& (0+255),w,b
  4479  002E8A  E104               	bnz	u7450
  4480  002E8C  0E0E               	movlw	14
  4481  002E8E  5D04               	subwf	stepper@i& (0+255),w,b
  4482  002E90  A0D8               	btfss	status,0,c
  4483  002E92  D7ED               	goto	l6800
  4484  002E94                     u7450:
  4485                           
  4486                           ; BSR set to: 1
  4487                           ;actuators_main.c: 346:             if (stack == 2){
  4488  002E94  0E02               	movlw	2
  4489  002E96  1900               	xorwf	stepper@stack& (0+255),w,b
  4490  002E98  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  4491  002E9A  A4D8               	btfss	status,2,c
  4492  002E9C  D017               	goto	u7470
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;actuators_main.c: 347:                 for(int i=0;i<14;i++){
  4496  002E9E  0E00               	movlw	0
  4497  002EA0  6F07               	movwf	(stepper@i_909+1)& (0+255),b
  4498  002EA2  0E00               	movlw	0
  4499  002EA4  6F06               	movwf	stepper@i_909& (0+255),b
  4500  002EA6                     l6814:
  4501                           
  4502                           ; BSR set to: 1
  4503                           ;actuators_main.c: 348:                     full_drive(0, 3);
  4504  002EA6  0E00               	movlw	0
  4505  002EA8  0100               	movlb	0	; () banked
  4506  002EAA  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  4507  002EAC  0E03               	movlw	3
  4508  002EAE  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  4509  002EB0  0E00               	movlw	0
  4510  002EB2  EC60  F00A         	call	_full_drive
  4511                           
  4512                           ;actuators_main.c: 351:                 }
  4513  002EB6  0101               	movlb	1	; () banked
  4514  002EB8  4B06               	infsnz	stepper@i_909& (0+255),f,b
  4515  002EBA  2B07               	incf	(stepper@i_909+1)& (0+255),f,b
  4516                           
  4517                           ; BSR set to: 1
  4518  002EBC  BF07               	btfsc	(stepper@i_909+1)& (0+255),7,b
  4519  002EBE  D7F3               	goto	l6814
  4520  002EC0  5107               	movf	(stepper@i_909+1)& (0+255),w,b
  4521  002EC2  E104               	bnz	u7470
  4522  002EC4  0E0E               	movlw	14
  4523  002EC6  5D06               	subwf	stepper@i_909& (0+255),w,b
  4524  002EC8  A0D8               	btfss	status,0,c
  4525  002ECA  D7ED               	goto	l6814
  4526  002ECC                     u7470:
  4527                           
  4528                           ; BSR set to: 1
  4529                           ;actuators_main.c: 354:             count_stepper++;
  4530  002ECC  4B02               	infsnz	stepper@count_stepper& (0+255),f,b
  4531  002ECE  2B03               	incf	(stepper@count_stepper+1)& (0+255),f,b
  4532                           
  4533                           ; BSR set to: 1
  4534                           
  4535                           ;actuators_main.c: 355:         }
  4536  002ED0  0012               	return		;funcret
  4537  002ED2                     __end_of_stepper:
  4538                           	opt callstack 0
  4539                           
  4540 ;; *************** function _full_drive *****************
  4541 ;; Defined at:
  4542 ;;		line 462 in file "actuators_main.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  direction       1    wreg     unsigned char 
  4545 ;;  stepper_no      2  121[BANK0 ] int 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  direction       1  124[BANK0 ] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4557 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;Total ram usage:        4 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:   14
  4564 ;; This function calls:
  4565 ;;		_printf
  4566 ;; This function is called by:
  4567 ;;		_stepper
  4568 ;;		_stepper2
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text14
  4573  0014C0                     __ptext14:
  4574                           	opt callstack 0
  4575  0014C0                     _full_drive:
  4576                           	opt callstack 14
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;incstack = 0
  4580                           ;full_drive@direction stored from wreg
  4581  0014C0  0100               	movlb	0	; () banked
  4582  0014C2  6FFC               	movwf	full_drive@direction& (0+255),b
  4583                           
  4584                           ;actuators_main.c: 463:     if (stepper_no == 1){
  4585  0014C4  0100               	movlb	0	; () banked
  4586  0014C6  05F9               	decf	full_drive@stepper_no& (0+255),w,b
  4587  0014C8  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  4588  0014CA  A4D8               	btfss	status,2,c
  4589  0014CC  D075               	goto	l6416
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;actuators_main.c: 464:         if (direction == 1){
  4593  0014CE  05FC               	decf	full_drive@direction& (0+255),w,b
  4594  0014D0  A4D8               	btfss	status,2,c
  4595  0014D2  D037               	goto	l6400
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;actuators_main.c: 465:             LATA = 0b00000011;
  4599  0014D4  0E03               	movlw	3
  4600  0014D6  6E89               	movwf	3977,c	;volatile
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;actuators_main.c: 466:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4604  0014D8  0E21               	movlw	33
  4605  0014DA  0100               	movlb	0	; () banked
  4606  0014DC  6FFB               	movwf	??_full_drive& (0+255),b
  4607  0014DE  0E76               	movlw	118
  4608  0014E0                     u8407:
  4609  0014E0  2EE8               	decfsz	wreg,f,c
  4610  0014E2  D7FE               	bra	u8407
  4611  0014E4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4612  0014E6  D7FC               	bra	u8407
  4613  0014E8  F000               	nop	
  4614                           
  4615                           ;actuators_main.c: 467:             LATA = 0b00000110;
  4616  0014EA  0E06               	movlw	6
  4617  0014EC  6E89               	movwf	3977,c	;volatile
  4618                           
  4619                           ;actuators_main.c: 468:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4620  0014EE  0E21               	movlw	33
  4621  0014F0  0100               	movlb	0	; () banked
  4622  0014F2  6FFB               	movwf	??_full_drive& (0+255),b
  4623  0014F4  0E76               	movlw	118
  4624  0014F6                     u8417:
  4625  0014F6  2EE8               	decfsz	wreg,f,c
  4626  0014F8  D7FE               	bra	u8417
  4627  0014FA  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4628  0014FC  D7FC               	bra	u8417
  4629  0014FE  F000               	nop	
  4630                           
  4631                           ;actuators_main.c: 469:             LATA = 0b00001100;
  4632  001500  0E0C               	movlw	12
  4633  001502  6E89               	movwf	3977,c	;volatile
  4634                           
  4635                           ;actuators_main.c: 470:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4636  001504  0E21               	movlw	33
  4637  001506  0100               	movlb	0	; () banked
  4638  001508  6FFB               	movwf	??_full_drive& (0+255),b
  4639  00150A  0E76               	movlw	118
  4640  00150C                     u8427:
  4641  00150C  2EE8               	decfsz	wreg,f,c
  4642  00150E  D7FE               	bra	u8427
  4643  001510  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4644  001512  D7FC               	bra	u8427
  4645  001514  F000               	nop	
  4646                           
  4647                           ;actuators_main.c: 471:             LATA = 0b00001001;
  4648  001516  0E09               	movlw	9
  4649  001518  6E89               	movwf	3977,c	;volatile
  4650                           
  4651                           ;actuators_main.c: 472:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4652  00151A  0E21               	movlw	33
  4653  00151C  0100               	movlb	0	; () banked
  4654  00151E  6FFB               	movwf	??_full_drive& (0+255),b
  4655  001520  0E76               	movlw	118
  4656  001522                     u8437:
  4657  001522  2EE8               	decfsz	wreg,f,c
  4658  001524  D7FE               	bra	u8437
  4659  001526  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4660  001528  D7FC               	bra	u8437
  4661  00152A  F000               	nop	
  4662                           
  4663                           ;actuators_main.c: 473:             LATA = 0b00000011;
  4664  00152C  0E03               	movlw	3
  4665  00152E  6E89               	movwf	3977,c	;volatile
  4666                           
  4667                           ;actuators_main.c: 474:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4668  001530  0E21               	movlw	33
  4669  001532  0100               	movlb	0	; () banked
  4670  001534  6FFB               	movwf	??_full_drive& (0+255),b
  4671  001536  0E76               	movlw	118
  4672  001538                     u8447:
  4673  001538  2EE8               	decfsz	wreg,f,c
  4674  00153A  D7FE               	bra	u8447
  4675  00153C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4676  00153E  D7FC               	bra	u8447
  4677  001540  F000               	nop	
  4678  001542                     l6400:
  4679                           
  4680                           ;actuators_main.c: 476:         if (direction == 0){
  4681  001542  0100               	movlb	0	; () banked
  4682  001544  51FC               	movf	full_drive@direction& (0+255),w,b
  4683  001546  A4D8               	btfss	status,2,c
  4684  001548  D037               	goto	l6416
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;actuators_main.c: 477:             LATA = 0b00001001;
  4688  00154A  0E09               	movlw	9
  4689  00154C  6E89               	movwf	3977,c	;volatile
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;actuators_main.c: 478:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4693  00154E  0E21               	movlw	33
  4694  001550  0100               	movlb	0	; () banked
  4695  001552  6FFB               	movwf	??_full_drive& (0+255),b
  4696  001554  0E76               	movlw	118
  4697  001556                     u8457:
  4698  001556  2EE8               	decfsz	wreg,f,c
  4699  001558  D7FE               	bra	u8457
  4700  00155A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4701  00155C  D7FC               	bra	u8457
  4702  00155E  F000               	nop	
  4703                           
  4704                           ;actuators_main.c: 479:             LATA = 0b00001100;
  4705  001560  0E0C               	movlw	12
  4706  001562  6E89               	movwf	3977,c	;volatile
  4707                           
  4708                           ;actuators_main.c: 480:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4709  001564  0E21               	movlw	33
  4710  001566  0100               	movlb	0	; () banked
  4711  001568  6FFB               	movwf	??_full_drive& (0+255),b
  4712  00156A  0E76               	movlw	118
  4713  00156C                     u8467:
  4714  00156C  2EE8               	decfsz	wreg,f,c
  4715  00156E  D7FE               	bra	u8467
  4716  001570  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4717  001572  D7FC               	bra	u8467
  4718  001574  F000               	nop	
  4719                           
  4720                           ;actuators_main.c: 481:             LATA = 0b00000110;
  4721  001576  0E06               	movlw	6
  4722  001578  6E89               	movwf	3977,c	;volatile
  4723                           
  4724                           ;actuators_main.c: 482:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4725  00157A  0E21               	movlw	33
  4726  00157C  0100               	movlb	0	; () banked
  4727  00157E  6FFB               	movwf	??_full_drive& (0+255),b
  4728  001580  0E76               	movlw	118
  4729  001582                     u8477:
  4730  001582  2EE8               	decfsz	wreg,f,c
  4731  001584  D7FE               	bra	u8477
  4732  001586  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4733  001588  D7FC               	bra	u8477
  4734  00158A  F000               	nop	
  4735                           
  4736                           ;actuators_main.c: 483:             LATA = 0b00000011;
  4737  00158C  0E03               	movlw	3
  4738  00158E  6E89               	movwf	3977,c	;volatile
  4739                           
  4740                           ;actuators_main.c: 484:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4741  001590  0E21               	movlw	33
  4742  001592  0100               	movlb	0	; () banked
  4743  001594  6FFB               	movwf	??_full_drive& (0+255),b
  4744  001596  0E76               	movlw	118
  4745  001598                     u8487:
  4746  001598  2EE8               	decfsz	wreg,f,c
  4747  00159A  D7FE               	bra	u8487
  4748  00159C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4749  00159E  D7FC               	bra	u8487
  4750  0015A0  F000               	nop	
  4751                           
  4752                           ;actuators_main.c: 485:             LATA = 0b00001001;
  4753  0015A2  0E09               	movlw	9
  4754  0015A4  6E89               	movwf	3977,c	;volatile
  4755                           
  4756                           ;actuators_main.c: 486:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4757  0015A6  0E21               	movlw	33
  4758  0015A8  0100               	movlb	0	; () banked
  4759  0015AA  6FFB               	movwf	??_full_drive& (0+255),b
  4760  0015AC  0E76               	movlw	118
  4761  0015AE                     u8497:
  4762  0015AE  2EE8               	decfsz	wreg,f,c
  4763  0015B0  D7FE               	bra	u8497
  4764  0015B2  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4765  0015B4  D7FC               	bra	u8497
  4766  0015B6  F000               	nop	
  4767  0015B8                     l6416:
  4768                           
  4769                           ;actuators_main.c: 489:     if (stepper_no == 2){
  4770  0015B8  0E02               	movlw	2
  4771  0015BA  0100               	movlb	0	; () banked
  4772  0015BC  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  4773  0015BE  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  4774  0015C0  A4D8               	btfss	status,2,c
  4775  0015C2  D089               	goto	l6494
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;actuators_main.c: 490:         if (direction == 1){
  4779  0015C4  05FC               	decf	full_drive@direction& (0+255),w,b
  4780  0015C6  A4D8               	btfss	status,2,c
  4781  0015C8  D041               	goto	l6456
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;actuators_main.c: 491:             LATCbits.LATC0 = 1;
  4785  0015CA  808B               	bsf	3979,0,c	;volatile
  4786                           
  4787                           ;actuators_main.c: 492:             LATEbits.LATE0 = 1;
  4788  0015CC  808D               	bsf	3981,0,c	;volatile
  4789                           
  4790                           ;actuators_main.c: 493:             LATEbits.LATE1 = 0;
  4791  0015CE  928D               	bcf	3981,1,c	;volatile
  4792                           
  4793                           ;actuators_main.c: 494:             LATEbits.LATE2 = 0;
  4794  0015D0  948D               	bcf	3981,2,c	;volatile
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;actuators_main.c: 495:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4798  0015D2  0E14               	movlw	20
  4799  0015D4  0100               	movlb	0	; () banked
  4800  0015D6  6FFB               	movwf	??_full_drive& (0+255),b
  4801  0015D8  0E79               	movlw	121
  4802  0015DA                     u8507:
  4803  0015DA  2EE8               	decfsz	wreg,f,c
  4804  0015DC  D7FE               	bra	u8507
  4805  0015DE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4806  0015E0  D7FC               	bra	u8507
  4807  0015E2  D000               	nop2	
  4808                           
  4809                           ;actuators_main.c: 496:             LATCbits.LATC0 = 0;
  4810  0015E4  908B               	bcf	3979,0,c	;volatile
  4811                           
  4812                           ;actuators_main.c: 497:             LATEbits.LATE0 = 1;
  4813  0015E6  808D               	bsf	3981,0,c	;volatile
  4814                           
  4815                           ;actuators_main.c: 498:             LATEbits.LATE1 = 1;
  4816  0015E8  828D               	bsf	3981,1,c	;volatile
  4817                           
  4818                           ;actuators_main.c: 499:             LATEbits.LATE2 = 0;
  4819  0015EA  948D               	bcf	3981,2,c	;volatile
  4820                           
  4821                           ;actuators_main.c: 500:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4822  0015EC  0E14               	movlw	20
  4823  0015EE  0100               	movlb	0	; () banked
  4824  0015F0  6FFB               	movwf	??_full_drive& (0+255),b
  4825  0015F2  0E79               	movlw	121
  4826  0015F4                     u8517:
  4827  0015F4  2EE8               	decfsz	wreg,f,c
  4828  0015F6  D7FE               	bra	u8517
  4829  0015F8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4830  0015FA  D7FC               	bra	u8517
  4831  0015FC  D000               	nop2	
  4832                           
  4833                           ;actuators_main.c: 501:             LATCbits.LATC0 = 0;
  4834  0015FE  908B               	bcf	3979,0,c	;volatile
  4835                           
  4836                           ;actuators_main.c: 502:             LATEbits.LATE0 = 0;
  4837  001600  908D               	bcf	3981,0,c	;volatile
  4838                           
  4839                           ;actuators_main.c: 503:             LATEbits.LATE1 = 1;
  4840  001602  828D               	bsf	3981,1,c	;volatile
  4841                           
  4842                           ;actuators_main.c: 504:             LATEbits.LATE2 = 1;
  4843  001604  848D               	bsf	3981,2,c	;volatile
  4844                           
  4845                           ;actuators_main.c: 505:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4846  001606  0E14               	movlw	20
  4847  001608  0100               	movlb	0	; () banked
  4848  00160A  6FFB               	movwf	??_full_drive& (0+255),b
  4849  00160C  0E79               	movlw	121
  4850  00160E                     u8527:
  4851  00160E  2EE8               	decfsz	wreg,f,c
  4852  001610  D7FE               	bra	u8527
  4853  001612  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4854  001614  D7FC               	bra	u8527
  4855  001616  D000               	nop2	
  4856                           
  4857                           ;actuators_main.c: 506:             LATCbits.LATC0 = 1;
  4858  001618  808B               	bsf	3979,0,c	;volatile
  4859                           
  4860                           ;actuators_main.c: 507:             LATEbits.LATE0 = 0;
  4861  00161A  908D               	bcf	3981,0,c	;volatile
  4862                           
  4863                           ;actuators_main.c: 508:             LATEbits.LATE1 = 0;
  4864  00161C  928D               	bcf	3981,1,c	;volatile
  4865                           
  4866                           ;actuators_main.c: 509:             LATEbits.LATE2 = 1;
  4867  00161E  848D               	bsf	3981,2,c	;volatile
  4868                           
  4869                           ;actuators_main.c: 510:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4870  001620  0E14               	movlw	20
  4871  001622  0100               	movlb	0	; () banked
  4872  001624  6FFB               	movwf	??_full_drive& (0+255),b
  4873  001626  0E79               	movlw	121
  4874  001628                     u8537:
  4875  001628  2EE8               	decfsz	wreg,f,c
  4876  00162A  D7FE               	bra	u8537
  4877  00162C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4878  00162E  D7FC               	bra	u8537
  4879  001630  D000               	nop2	
  4880                           
  4881                           ;actuators_main.c: 511:             LATCbits.LATC0 = 1;
  4882  001632  808B               	bsf	3979,0,c	;volatile
  4883                           
  4884                           ;actuators_main.c: 512:             LATEbits.LATE0 = 1;
  4885  001634  808D               	bsf	3981,0,c	;volatile
  4886                           
  4887                           ;actuators_main.c: 513:             LATEbits.LATE1 = 0;
  4888  001636  928D               	bcf	3981,1,c	;volatile
  4889                           
  4890                           ;actuators_main.c: 514:             LATEbits.LATE2 = 0;
  4891  001638  948D               	bcf	3981,2,c	;volatile
  4892                           
  4893                           ;actuators_main.c: 515:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4894  00163A  0E14               	movlw	20
  4895  00163C  0100               	movlb	0	; () banked
  4896  00163E  6FFB               	movwf	??_full_drive& (0+255),b
  4897  001640  0E79               	movlw	121
  4898  001642                     u8547:
  4899  001642  2EE8               	decfsz	wreg,f,c
  4900  001644  D7FE               	bra	u8547
  4901  001646  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4902  001648  D7FC               	bra	u8547
  4903  00164A  D000               	nop2	
  4904  00164C                     l6456:
  4905                           
  4906                           ;actuators_main.c: 517:         if (direction == 0){
  4907  00164C  0100               	movlb	0	; () banked
  4908  00164E  51FC               	movf	full_drive@direction& (0+255),w,b
  4909  001650  A4D8               	btfss	status,2,c
  4910  001652  D041               	goto	l6494
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;actuators_main.c: 518:             LATCbits.LATC0 = 1;
  4914  001654  808B               	bsf	3979,0,c	;volatile
  4915                           
  4916                           ;actuators_main.c: 519:             LATEbits.LATE0 = 0;
  4917  001656  908D               	bcf	3981,0,c	;volatile
  4918                           
  4919                           ;actuators_main.c: 520:             LATEbits.LATE1 = 0;
  4920  001658  928D               	bcf	3981,1,c	;volatile
  4921                           
  4922                           ;actuators_main.c: 521:             LATEbits.LATE2 = 1;
  4923  00165A  848D               	bsf	3981,2,c	;volatile
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;actuators_main.c: 522:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4927  00165C  0E14               	movlw	20
  4928  00165E  0100               	movlb	0	; () banked
  4929  001660  6FFB               	movwf	??_full_drive& (0+255),b
  4930  001662  0E79               	movlw	121
  4931  001664                     u8557:
  4932  001664  2EE8               	decfsz	wreg,f,c
  4933  001666  D7FE               	bra	u8557
  4934  001668  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4935  00166A  D7FC               	bra	u8557
  4936  00166C  D000               	nop2	
  4937                           
  4938                           ;actuators_main.c: 523:             LATCbits.LATC0 = 0;
  4939  00166E  908B               	bcf	3979,0,c	;volatile
  4940                           
  4941                           ;actuators_main.c: 524:             LATEbits.LATE0 = 0;
  4942  001670  908D               	bcf	3981,0,c	;volatile
  4943                           
  4944                           ;actuators_main.c: 525:             LATEbits.LATE1 = 1;
  4945  001672  828D               	bsf	3981,1,c	;volatile
  4946                           
  4947                           ;actuators_main.c: 526:             LATEbits.LATE2 = 1;
  4948  001674  848D               	bsf	3981,2,c	;volatile
  4949                           
  4950                           ;actuators_main.c: 527:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4951  001676  0E14               	movlw	20
  4952  001678  0100               	movlb	0	; () banked
  4953  00167A  6FFB               	movwf	??_full_drive& (0+255),b
  4954  00167C  0E79               	movlw	121
  4955  00167E                     u8567:
  4956  00167E  2EE8               	decfsz	wreg,f,c
  4957  001680  D7FE               	bra	u8567
  4958  001682  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4959  001684  D7FC               	bra	u8567
  4960  001686  D000               	nop2	
  4961                           
  4962                           ;actuators_main.c: 528:             LATCbits.LATC0 = 0;
  4963  001688  908B               	bcf	3979,0,c	;volatile
  4964                           
  4965                           ;actuators_main.c: 529:             LATEbits.LATE0 = 1;
  4966  00168A  808D               	bsf	3981,0,c	;volatile
  4967                           
  4968                           ;actuators_main.c: 530:             LATEbits.LATE1 = 1;
  4969  00168C  828D               	bsf	3981,1,c	;volatile
  4970                           
  4971                           ;actuators_main.c: 531:             LATEbits.LATE2 = 0;
  4972  00168E  948D               	bcf	3981,2,c	;volatile
  4973                           
  4974                           ;actuators_main.c: 532:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4975  001690  0E14               	movlw	20
  4976  001692  0100               	movlb	0	; () banked
  4977  001694  6FFB               	movwf	??_full_drive& (0+255),b
  4978  001696  0E79               	movlw	121
  4979  001698                     u8577:
  4980  001698  2EE8               	decfsz	wreg,f,c
  4981  00169A  D7FE               	bra	u8577
  4982  00169C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4983  00169E  D7FC               	bra	u8577
  4984  0016A0  D000               	nop2	
  4985                           
  4986                           ;actuators_main.c: 533:             LATCbits.LATC0 = 1;
  4987  0016A2  808B               	bsf	3979,0,c	;volatile
  4988                           
  4989                           ;actuators_main.c: 534:             LATEbits.LATE0 = 1;
  4990  0016A4  808D               	bsf	3981,0,c	;volatile
  4991                           
  4992                           ;actuators_main.c: 535:             LATEbits.LATE1 = 0;
  4993  0016A6  928D               	bcf	3981,1,c	;volatile
  4994                           
  4995                           ;actuators_main.c: 536:             LATEbits.LATE2 = 0;
  4996  0016A8  948D               	bcf	3981,2,c	;volatile
  4997                           
  4998                           ;actuators_main.c: 537:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4999  0016AA  0E14               	movlw	20
  5000  0016AC  0100               	movlb	0	; () banked
  5001  0016AE  6FFB               	movwf	??_full_drive& (0+255),b
  5002  0016B0  0E79               	movlw	121
  5003  0016B2                     u8587:
  5004  0016B2  2EE8               	decfsz	wreg,f,c
  5005  0016B4  D7FE               	bra	u8587
  5006  0016B6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5007  0016B8  D7FC               	bra	u8587
  5008  0016BA  D000               	nop2	
  5009                           
  5010                           ;actuators_main.c: 538:             LATCbits.LATC0 = 1;
  5011  0016BC  808B               	bsf	3979,0,c	;volatile
  5012                           
  5013                           ;actuators_main.c: 539:             LATEbits.LATE0 = 0;
  5014  0016BE  908D               	bcf	3981,0,c	;volatile
  5015                           
  5016                           ;actuators_main.c: 540:             LATEbits.LATE1 = 0;
  5017  0016C0  928D               	bcf	3981,1,c	;volatile
  5018                           
  5019                           ;actuators_main.c: 541:             LATEbits.LATE2 = 1;
  5020  0016C2  848D               	bsf	3981,2,c	;volatile
  5021                           
  5022                           ;actuators_main.c: 542:             _delay((unsigned long)((6)*(10000000/4000.0)));
  5023  0016C4  0E14               	movlw	20
  5024  0016C6  0100               	movlb	0	; () banked
  5025  0016C8  6FFB               	movwf	??_full_drive& (0+255),b
  5026  0016CA  0E79               	movlw	121
  5027  0016CC                     u8597:
  5028  0016CC  2EE8               	decfsz	wreg,f,c
  5029  0016CE  D7FE               	bra	u8597
  5030  0016D0  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5031  0016D2  D7FC               	bra	u8597
  5032  0016D4  D000               	nop2	
  5033  0016D6                     l6494:
  5034                           
  5035                           ;actuators_main.c: 545:     if (stepper_no == 3){
  5036  0016D6  0E03               	movlw	3
  5037  0016D8  0100               	movlb	0	; () banked
  5038  0016DA  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  5039  0016DC  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5040  0016DE  A4D8               	btfss	status,2,c
  5041  0016E0  0012               	return	
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;actuators_main.c: 546:         printf("what");
  5045  0016E2  0EFA               	movlw	low STR_48
  5046  0016E4  6FED               	movwf	printf@fmt& (0+255),b
  5047  0016E6  0EFF               	movlw	high STR_48
  5048  0016E8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5049  0016EA  ECBD  F01A         	call	_printf	;wreg free
  5050                           
  5051                           ;actuators_main.c: 547:         if (direction == 0){
  5052  0016EE  0100               	movlb	0	; () banked
  5053  0016F0  51FC               	movf	full_drive@direction& (0+255),w,b
  5054  0016F2  A4D8               	btfss	status,2,c
  5055  0016F4  D041               	goto	l6536
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;actuators_main.c: 548:             LATCbits.LATC5 = 1;
  5059  0016F6  8A8B               	bsf	3979,5,c	;volatile
  5060                           
  5061                           ;actuators_main.c: 549:             LATCbits.LATC6 = 0;
  5062  0016F8  9C8B               	bcf	3979,6,c	;volatile
  5063                           
  5064                           ;actuators_main.c: 550:             LATCbits.LATC7 = 0;
  5065  0016FA  9E8B               	bcf	3979,7,c	;volatile
  5066                           
  5067                           ;actuators_main.c: 551:             LATAbits.LATA5 = 1;
  5068  0016FC  8A89               	bsf	3977,5,c	;volatile
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;actuators_main.c: 552:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5072  0016FE  0E21               	movlw	33
  5073  001700  0100               	movlb	0	; () banked
  5074  001702  6FFB               	movwf	??_full_drive& (0+255),b
  5075  001704  0E76               	movlw	118
  5076  001706                     u8607:
  5077  001706  2EE8               	decfsz	wreg,f,c
  5078  001708  D7FE               	bra	u8607
  5079  00170A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5080  00170C  D7FC               	bra	u8607
  5081  00170E  F000               	nop	
  5082                           
  5083                           ;actuators_main.c: 553:             LATCbits.LATC5 = 1;
  5084  001710  8A8B               	bsf	3979,5,c	;volatile
  5085                           
  5086                           ;actuators_main.c: 554:             LATCbits.LATC6 = 1;
  5087  001712  8C8B               	bsf	3979,6,c	;volatile
  5088                           
  5089                           ;actuators_main.c: 555:             LATCbits.LATC7 = 0;
  5090  001714  9E8B               	bcf	3979,7,c	;volatile
  5091                           
  5092                           ;actuators_main.c: 556:             LATAbits.LATA5 = 0;
  5093  001716  9A89               	bcf	3977,5,c	;volatile
  5094                           
  5095                           ;actuators_main.c: 557:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5096  001718  0E21               	movlw	33
  5097  00171A  0100               	movlb	0	; () banked
  5098  00171C  6FFB               	movwf	??_full_drive& (0+255),b
  5099  00171E  0E76               	movlw	118
  5100  001720                     u8617:
  5101  001720  2EE8               	decfsz	wreg,f,c
  5102  001722  D7FE               	bra	u8617
  5103  001724  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5104  001726  D7FC               	bra	u8617
  5105  001728  F000               	nop	
  5106                           
  5107                           ;actuators_main.c: 558:             LATCbits.LATC5 = 0;
  5108  00172A  9A8B               	bcf	3979,5,c	;volatile
  5109                           
  5110                           ;actuators_main.c: 559:             LATCbits.LATC6 = 1;
  5111  00172C  8C8B               	bsf	3979,6,c	;volatile
  5112                           
  5113                           ;actuators_main.c: 560:             LATCbits.LATC7 = 1;
  5114  00172E  8E8B               	bsf	3979,7,c	;volatile
  5115                           
  5116                           ;actuators_main.c: 561:             LATAbits.LATA5 = 0;
  5117  001730  9A89               	bcf	3977,5,c	;volatile
  5118                           
  5119                           ;actuators_main.c: 562:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5120  001732  0E21               	movlw	33
  5121  001734  0100               	movlb	0	; () banked
  5122  001736  6FFB               	movwf	??_full_drive& (0+255),b
  5123  001738  0E76               	movlw	118
  5124  00173A                     u8627:
  5125  00173A  2EE8               	decfsz	wreg,f,c
  5126  00173C  D7FE               	bra	u8627
  5127  00173E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5128  001740  D7FC               	bra	u8627
  5129  001742  F000               	nop	
  5130                           
  5131                           ;actuators_main.c: 563:             LATCbits.LATC5 = 0;
  5132  001744  9A8B               	bcf	3979,5,c	;volatile
  5133                           
  5134                           ;actuators_main.c: 564:             LATCbits.LATC6 = 0;
  5135  001746  9C8B               	bcf	3979,6,c	;volatile
  5136                           
  5137                           ;actuators_main.c: 565:             LATCbits.LATC7 = 1;
  5138  001748  8E8B               	bsf	3979,7,c	;volatile
  5139                           
  5140                           ;actuators_main.c: 566:             LATAbits.LATA5 = 1;
  5141  00174A  8A89               	bsf	3977,5,c	;volatile
  5142                           
  5143                           ;actuators_main.c: 567:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5144  00174C  0E21               	movlw	33
  5145  00174E  0100               	movlb	0	; () banked
  5146  001750  6FFB               	movwf	??_full_drive& (0+255),b
  5147  001752  0E76               	movlw	118
  5148  001754                     u8637:
  5149  001754  2EE8               	decfsz	wreg,f,c
  5150  001756  D7FE               	bra	u8637
  5151  001758  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5152  00175A  D7FC               	bra	u8637
  5153  00175C  F000               	nop	
  5154                           
  5155                           ;actuators_main.c: 568:             LATCbits.LATC5 = 1;
  5156  00175E  8A8B               	bsf	3979,5,c	;volatile
  5157                           
  5158                           ;actuators_main.c: 569:             LATCbits.LATC6 = 0;
  5159  001760  9C8B               	bcf	3979,6,c	;volatile
  5160                           
  5161                           ;actuators_main.c: 570:             LATCbits.LATC7 = 0;
  5162  001762  9E8B               	bcf	3979,7,c	;volatile
  5163                           
  5164                           ;actuators_main.c: 571:             LATAbits.LATA5 = 1;
  5165  001764  8A89               	bsf	3977,5,c	;volatile
  5166                           
  5167                           ;actuators_main.c: 572:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5168  001766  0E21               	movlw	33
  5169  001768  0100               	movlb	0	; () banked
  5170  00176A  6FFB               	movwf	??_full_drive& (0+255),b
  5171  00176C  0E76               	movlw	118
  5172  00176E                     u8647:
  5173  00176E  2EE8               	decfsz	wreg,f,c
  5174  001770  D7FE               	bra	u8647
  5175  001772  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5176  001774  D7FC               	bra	u8647
  5177  001776  F000               	nop	
  5178  001778                     l6536:
  5179                           
  5180                           ;actuators_main.c: 574:         if (direction == 1){
  5181  001778  0100               	movlb	0	; () banked
  5182  00177A  05FC               	decf	full_drive@direction& (0+255),w,b
  5183  00177C  A4D8               	btfss	status,2,c
  5184  00177E  0012               	return	
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;actuators_main.c: 575:             LATCbits.LATC5 = 1;
  5188  001780  8A8B               	bsf	3979,5,c	;volatile
  5189                           
  5190                           ;actuators_main.c: 576:             LATCbits.LATC6 = 1;
  5191  001782  8C8B               	bsf	3979,6,c	;volatile
  5192                           
  5193                           ;actuators_main.c: 577:             LATCbits.LATC7 = 0;
  5194  001784  9E8B               	bcf	3979,7,c	;volatile
  5195                           
  5196                           ;actuators_main.c: 578:             LATAbits.LATA5 = 0;
  5197  001786  9A89               	bcf	3977,5,c	;volatile
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;actuators_main.c: 579:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5201  001788  0E21               	movlw	33
  5202  00178A  0100               	movlb	0	; () banked
  5203  00178C  6FFB               	movwf	??_full_drive& (0+255),b
  5204  00178E  0E76               	movlw	118
  5205  001790                     u8657:
  5206  001790  2EE8               	decfsz	wreg,f,c
  5207  001792  D7FE               	bra	u8657
  5208  001794  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5209  001796  D7FC               	bra	u8657
  5210  001798  F000               	nop	
  5211                           
  5212                           ;actuators_main.c: 580:             LATCbits.LATC5 = 0;
  5213  00179A  9A8B               	bcf	3979,5,c	;volatile
  5214                           
  5215                           ;actuators_main.c: 581:             LATCbits.LATC6 = 1;
  5216  00179C  8C8B               	bsf	3979,6,c	;volatile
  5217                           
  5218                           ;actuators_main.c: 582:             LATCbits.LATC7 = 1;
  5219  00179E  8E8B               	bsf	3979,7,c	;volatile
  5220                           
  5221                           ;actuators_main.c: 583:             LATAbits.LATA5 = 0;
  5222  0017A0  9A89               	bcf	3977,5,c	;volatile
  5223                           
  5224                           ;actuators_main.c: 584:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5225  0017A2  0E21               	movlw	33
  5226  0017A4  0100               	movlb	0	; () banked
  5227  0017A6  6FFB               	movwf	??_full_drive& (0+255),b
  5228  0017A8  0E76               	movlw	118
  5229  0017AA                     u8667:
  5230  0017AA  2EE8               	decfsz	wreg,f,c
  5231  0017AC  D7FE               	bra	u8667
  5232  0017AE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5233  0017B0  D7FC               	bra	u8667
  5234  0017B2  F000               	nop	
  5235                           
  5236                           ;actuators_main.c: 585:             LATCbits.LATC5 = 0;
  5237  0017B4  9A8B               	bcf	3979,5,c	;volatile
  5238                           
  5239                           ;actuators_main.c: 586:             LATCbits.LATC6 = 0;
  5240  0017B6  9C8B               	bcf	3979,6,c	;volatile
  5241                           
  5242                           ;actuators_main.c: 587:             LATCbits.LATC7 = 1;
  5243  0017B8  8E8B               	bsf	3979,7,c	;volatile
  5244                           
  5245                           ;actuators_main.c: 588:             LATAbits.LATA5 = 1;
  5246  0017BA  8A89               	bsf	3977,5,c	;volatile
  5247                           
  5248                           ;actuators_main.c: 589:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5249  0017BC  0E21               	movlw	33
  5250  0017BE  0100               	movlb	0	; () banked
  5251  0017C0  6FFB               	movwf	??_full_drive& (0+255),b
  5252  0017C2  0E76               	movlw	118
  5253  0017C4                     u8677:
  5254  0017C4  2EE8               	decfsz	wreg,f,c
  5255  0017C6  D7FE               	bra	u8677
  5256  0017C8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5257  0017CA  D7FC               	bra	u8677
  5258  0017CC  F000               	nop	
  5259                           
  5260                           ;actuators_main.c: 590:             LATCbits.LATC5 = 1;
  5261  0017CE  8A8B               	bsf	3979,5,c	;volatile
  5262                           
  5263                           ;actuators_main.c: 591:             LATCbits.LATC6 = 0;
  5264  0017D0  9C8B               	bcf	3979,6,c	;volatile
  5265                           
  5266                           ;actuators_main.c: 592:             LATCbits.LATC7 = 0;
  5267  0017D2  9E8B               	bcf	3979,7,c	;volatile
  5268                           
  5269                           ;actuators_main.c: 593:             LATAbits.LATA5 = 1;
  5270  0017D4  8A89               	bsf	3977,5,c	;volatile
  5271                           
  5272                           ;actuators_main.c: 594:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5273  0017D6  0E21               	movlw	33
  5274  0017D8  0100               	movlb	0	; () banked
  5275  0017DA  6FFB               	movwf	??_full_drive& (0+255),b
  5276  0017DC  0E76               	movlw	118
  5277  0017DE                     u8687:
  5278  0017DE  2EE8               	decfsz	wreg,f,c
  5279  0017E0  D7FE               	bra	u8687
  5280  0017E2  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5281  0017E4  D7FC               	bra	u8687
  5282  0017E6  F000               	nop	
  5283                           
  5284                           ;actuators_main.c: 595:             LATCbits.LATC5 = 1;
  5285  0017E8  8A8B               	bsf	3979,5,c	;volatile
  5286                           
  5287                           ;actuators_main.c: 596:             LATCbits.LATC6 = 1;
  5288  0017EA  8C8B               	bsf	3979,6,c	;volatile
  5289                           
  5290                           ;actuators_main.c: 597:             LATCbits.LATC7 = 0;
  5291  0017EC  9E8B               	bcf	3979,7,c	;volatile
  5292                           
  5293                           ;actuators_main.c: 598:             LATAbits.LATA5 = 0;
  5294  0017EE  9A89               	bcf	3977,5,c	;volatile
  5295                           
  5296                           ;actuators_main.c: 599:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5297  0017F0  0E21               	movlw	33
  5298  0017F2  0100               	movlb	0	; () banked
  5299  0017F4  6FFB               	movwf	??_full_drive& (0+255),b
  5300  0017F6  0E76               	movlw	118
  5301  0017F8                     u8697:
  5302  0017F8  2EE8               	decfsz	wreg,f,c
  5303  0017FA  D7FE               	bra	u8697
  5304  0017FC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5305  0017FE  D7FC               	bra	u8697
  5306  001800  F000               	nop	
  5307  001802  0012               	return		;funcret
  5308  001804                     __end_of_full_drive:
  5309                           	opt callstack 0
  5310                           
  5311 ;; *************** function _servo *****************
  5312 ;; Defined at:
  5313 ;;		line 312 in file "actuators_main.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;Total ram usage:        2 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    4
  5334 ;; This function calls:
  5335 ;;		_servoRotate0
  5336 ;;		_servoRotate180
  5337 ;; This function is called by:
  5338 ;;		_actuators_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text15
  5343  003524                     __ptext15:
  5344                           	opt callstack 0
  5345  003524                     _servo:
  5346                           	opt callstack 25
  5347                           
  5348                           ;actuators_main.c: 314:   TRISC = 0;
  5349                           
  5350                           ;incstack = 0
  5351  003524  0E00               	movlw	0
  5352  003526  6E94               	movwf	3988,c	;volatile
  5353                           
  5354                           ;actuators_main.c: 315:   {;actuators_main.c: 317:     servoRotate0();
  5355  003528  EC3F  F019         	call	_servoRotate0	;wreg free
  5356                           
  5357                           ;actuators_main.c: 321:     servoRotate180();
  5358  00352C  ECC2  F018         	call	_servoRotate180	;wreg free
  5359                           
  5360                           ;actuators_main.c: 323:     _delay((unsigned long)((500)*(10000000/4000.0)));
  5361  003530  0E07               	movlw	7
  5362  003532  0100               	movlb	0	; () banked
  5363  003534  6F84               	movwf	(??_servo+1)& (0+255),b
  5364  003536  0E58               	movlw	88
  5365  003538  6F83               	movwf	??_servo& (0+255),b
  5366  00353A  0E59               	movlw	89
  5367  00353C                     u8707:
  5368  00353C  2EE8               	decfsz	wreg,f,c
  5369  00353E  D7FE               	bra	u8707
  5370  003540  2F83               	decfsz	??_servo& (0+255),f,b
  5371  003542  D7FC               	bra	u8707
  5372  003544  2F84               	decfsz	(??_servo+1)& (0+255),f,b
  5373  003546  D7FA               	bra	u8707
  5374  003548  D000               	nop2	
  5375                           
  5376                           ;actuators_main.c: 324:     servoRotate0();
  5377  00354A  EC3F  F019         	call	_servoRotate0	;wreg free
  5378  00354E  0012               	return		;funcret
  5379  003550                     __end_of_servo:
  5380                           	opt callstack 0
  5381                           
  5382 ;; *************** function _servoRotate180 *****************
  5383 ;; Defined at:
  5384 ;;		line 286 in file "actuators_main.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;		None
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;  i               2    1[BANK0 ] unsigned int 
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		wreg, status,2, status,0
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;Total ram usage:        3 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    3
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_servo
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text16
  5413  003184                     __ptext16:
  5414                           	opt callstack 0
  5415  003184                     _servoRotate180:
  5416                           	opt callstack 25
  5417                           
  5418                           ;actuators_main.c: 288:   unsigned int i;;actuators_main.c: 290:     for(i=0;i<40;i++)
  5419                           
  5420                           ;incstack = 0
  5421  003184  0E00               	movlw	0
  5422  003186  0100               	movlb	0	; () banked
  5423  003188  6F82               	movwf	(servoRotate180@i+1)& (0+255),b
  5424  00318A  0E00               	movlw	0
  5425  00318C  6F81               	movwf	servoRotate180@i& (0+255),b
  5426  00318E                     l485:
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;actuators_main.c: 291:         {;actuators_main.c: 292:           RC1 = 1;
  5430  00318E  8282               	bsf	3970,1,c	;volatile
  5431                           
  5432                           ;actuators_main.c: 293:           RC2 = 1;
  5433  003190  8482               	bsf	3970,2,c	;volatile
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;actuators_main.c: 294:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  5437  003192  0EE1               	movlw	225
  5438  003194                     u8717:
  5439  003194  D000               	nop2	
  5440  003196  2EE8               	decfsz	wreg,f,c
  5441  003198  D7FD               	bra	u8717
  5442                           
  5443                           ;actuators_main.c: 296:           RC2 =0;
  5444  00319A  9482               	bcf	3970,2,c	;volatile
  5445                           
  5446                           ;actuators_main.c: 297:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  5447  00319C  0E07               	movlw	7
  5448  00319E  0100               	movlb	0	; () banked
  5449  0031A0  6F80               	movwf	??_servoRotate180& (0+255),b
  5450  0031A2  0ED0               	movlw	208
  5451  0031A4                     u8727:
  5452  0031A4  2EE8               	decfsz	wreg,f,c
  5453  0031A6  D7FE               	bra	u8727
  5454  0031A8  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  5455  0031AA  D7FC               	bra	u8727
  5456  0031AC  F000               	nop	
  5457                           
  5458                           ;actuators_main.c: 298:           RC1 = 0;
  5459  0031AE  9282               	bcf	3970,1,c	;volatile
  5460                           
  5461                           ;actuators_main.c: 299:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  5462  0031B0  0E2C               	movlw	44
  5463  0031B2  0100               	movlb	0	; () banked
  5464  0031B4  6F80               	movwf	??_servoRotate180& (0+255),b
  5465  0031B6  0EFD               	movlw	253
  5466  0031B8                     u8737:
  5467  0031B8  2EE8               	decfsz	wreg,f,c
  5468  0031BA  D7FE               	bra	u8737
  5469  0031BC  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  5470  0031BE  D7FC               	bra	u8737
  5471  0031C0  F000               	nop	
  5472                           
  5473                           ;actuators_main.c: 300:         }
  5474  0031C2  0100               	movlb	0	; () banked
  5475  0031C4  4B81               	infsnz	servoRotate180@i& (0+255),f,b
  5476  0031C6  2B82               	incf	(servoRotate180@i+1)& (0+255),f,b
  5477  0031C8  5182               	movf	(servoRotate180@i+1)& (0+255),w,b
  5478  0031CA  E105               	bnz	u6990
  5479  0031CC  0E28               	movlw	40
  5480  0031CE  5D81               	subwf	servoRotate180@i& (0+255),w,b
  5481  0031D0  B0D8               	btfsc	status,0,c
  5482  0031D2  0012               	return	
  5483  0031D4  D7DC               	goto	l485
  5484  0031D6                     u6990:
  5485                           
  5486                           ; BSR set to: 0
  5487  0031D6  0012               	return		;funcret
  5488  0031D8                     __end_of_servoRotate180:
  5489                           	opt callstack 0
  5490                           
  5491 ;; *************** function _servoRotate0 *****************
  5492 ;; Defined at:
  5493 ;;		line 248 in file "actuators_main.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  i               2    1[BANK0 ] unsigned int 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      void 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;Total ram usage:        3 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    3
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_servo
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text17
  5522  00327E                     __ptext17:
  5523                           	opt callstack 0
  5524  00327E                     _servoRotate0:
  5525                           	opt callstack 25
  5526                           
  5527                           ;actuators_main.c: 250:     unsigned int i;;actuators_main.c: 252:       for(i=0;i<40;i+
      +                          +)
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;incstack = 0
  5531  00327E  0E00               	movlw	0
  5532  003280  0100               	movlb	0	; () banked
  5533  003282  6F82               	movwf	(servoRotate0@i+1)& (0+255),b
  5534  003284  0E00               	movlw	0
  5535  003286  6F81               	movwf	servoRotate0@i& (0+255),b
  5536  003288                     l480:
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;actuators_main.c: 253:           {;actuators_main.c: 255:             RC1 = 1;
  5540  003288  8282               	bsf	3970,1,c	;volatile
  5541                           
  5542                           ;actuators_main.c: 256:             RC2 = 1;
  5543  00328A  8482               	bsf	3970,2,c	;volatile
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;actuators_main.c: 257:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  5547  00328C  0E04               	movlw	4
  5548  00328E  0100               	movlb	0	; () banked
  5549  003290  6F80               	movwf	??_servoRotate0& (0+255),b
  5550  003292  0E91               	movlw	145
  5551  003294                     u8747:
  5552  003294  2EE8               	decfsz	wreg,f,c
  5553  003296  D7FE               	bra	u8747
  5554  003298  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  5555  00329A  D7FC               	bra	u8747
  5556                           
  5557                           ;actuators_main.c: 258:             RC2 = 0;
  5558  00329C  9482               	bcf	3970,2,c	;volatile
  5559                           
  5560                           ;actuators_main.c: 259:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  5561  00329E  0EFA               	movlw	250
  5562  0032A0                     u8757:
  5563  0032A0  2EE8               	decfsz	wreg,f,c
  5564  0032A2  D7FE               	bra	u8757
  5565                           
  5566                           ;actuators_main.c: 260:             RC1 = 0;
  5567  0032A4  9282               	bcf	3970,1,c	;volatile
  5568                           
  5569                           ;actuators_main.c: 264:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  5570  0032A6  0E3D               	movlw	61
  5571  0032A8  0100               	movlb	0	; () banked
  5572  0032AA  6F80               	movwf	??_servoRotate0& (0+255),b
  5573  0032AC  0E62               	movlw	98
  5574  0032AE                     u8767:
  5575  0032AE  2EE8               	decfsz	wreg,f,c
  5576  0032B0  D7FE               	bra	u8767
  5577  0032B2  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  5578  0032B4  D7FC               	bra	u8767
  5579  0032B6  F000               	nop	
  5580                           
  5581                           ;actuators_main.c: 274:           }
  5582  0032B8  0100               	movlb	0	; () banked
  5583  0032BA  4B81               	infsnz	servoRotate0@i& (0+255),f,b
  5584  0032BC  2B82               	incf	(servoRotate0@i+1)& (0+255),f,b
  5585  0032BE  5182               	movf	(servoRotate0@i+1)& (0+255),w,b
  5586  0032C0  E105               	bnz	u6980
  5587  0032C2  0E28               	movlw	40
  5588  0032C4  5D81               	subwf	servoRotate0@i& (0+255),w,b
  5589  0032C6  B0D8               	btfsc	status,0,c
  5590  0032C8  0012               	return	
  5591  0032CA  D7DE               	goto	l480
  5592  0032CC                     u6980:
  5593                           
  5594                           ; BSR set to: 0
  5595  0032CC  0012               	return		;funcret
  5596  0032CE                     __end_of_servoRotate0:
  5597                           	opt callstack 0
  5598                           
  5599 ;; *************** function _UI_main *****************
  5600 ;; Defined at:
  5601 ;;		line 424 in file "main.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  t_dep           2  121[BANK0 ] int 
  5604 ;;  poles_detect    2  123[BANK0 ] int 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  i               1   89[BANK1 ] unsigned char 
  5607 ;;  keypress        1   84[BANK1 ] unsigned char 
  5608 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  5609 ;;  tick            4   85[BANK1 ] unsigned long 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5619 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5620 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;Total ram usage:       94 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:   14
  5626 ;; This function calls:
  5627 ;;		_I2C_Master_Init
  5628 ;;		_I2C_Master_Read
  5629 ;;		_I2C_Master_Start
  5630 ;;		_I2C_Master_Stop
  5631 ;;		_I2C_Master_Write
  5632 ;;		___llmod
  5633 ;;		_initLCD
  5634 ;;		_lcdInst
  5635 ;;		_printf
  5636 ;;		_timer_main
  5637 ;; This function is called by:
  5638 ;;		_main
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text18
  5643  000012                     __ptext18:
  5644                           	opt callstack 0
  5645  000012                     _UI_main:
  5646                           	opt callstack 16
  5647                           
  5648                           ;main.c: 425:     sens = 0;
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;incstack = 0
  5652  000012  0E00               	movlw	0
  5653  000014  6E61               	movwf	_sens+1,c	;volatile
  5654  000016  0E00               	movlw	0
  5655  000018  6E60               	movwf	_sens,c	;volatile
  5656                           
  5657                           ;main.c: 430:     LATD = 0x00;
  5658  00001A  0E00               	movlw	0
  5659  00001C  6E8C               	movwf	3980,c	;volatile
  5660                           
  5661                           ;main.c: 431:     TRISD = 0x00;
  5662  00001E  0E00               	movlw	0
  5663  000020  6E95               	movwf	3989,c	;volatile
  5664                           
  5665                           ;main.c: 434:     TRISD = 0x00;
  5666  000022  0E00               	movlw	0
  5667  000024  6E95               	movwf	3989,c	;volatile
  5668                           
  5669                           ;main.c: 437:     INT1IE = 1;
  5670  000026  86F0               	bsf	4080,3,c	;volatile
  5671                           
  5672                           ;main.c: 440:     initLCD();
  5673  000028  EC69  F017         	call	_initLCD	;wreg free
  5674                           
  5675                           ;main.c: 443:     (INTCONbits.GIE = 1);
  5676  00002C  8EF2               	bsf	4082,7,c	;volatile
  5677                           
  5678                           ;main.c: 445:     I2C_Master_Init(100000);
  5679  00002E  0EA0               	movlw	160
  5680  000030  0100               	movlb	0	; () banked
  5681  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  5682  000034  0E86               	movlw	134
  5683  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  5684  000038  0E01               	movlw	1
  5685  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  5686  00003C  0E00               	movlw	0
  5687  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  5688  000040  EC0C  F018         	call	_I2C_Master_Init	;wreg free
  5689                           
  5690                           ;main.c: 446:     I2C_Master_Start();
  5691  000044  EC65  F01B         	call	_I2C_Master_Start	;wreg free
  5692                           
  5693                           ;main.c: 447:     I2C_Master_Write(0b00010000);
  5694  000048  0E00               	movlw	0
  5695  00004A  0100               	movlb	0	; () banked
  5696  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5697  00004E  0E10               	movlw	16
  5698  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5699  000052  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  5700                           
  5701                           ;main.c: 448:     I2C_Master_Stop();
  5702  000056  EC61  F01B         	call	_I2C_Master_Stop	;wreg free
  5703                           
  5704                           ;main.c: 458:     if((pressed == 0)&&(sens==0)){
  5705  00005A  0101               	movlb	1	; () banked
  5706  00005C  5163               	movf	_pressed& (0+255),w,b
  5707  00005E  1164               	iorwf	(_pressed+1)& (0+255),w,b
  5708  000060  A4D8               	btfss	status,2,c
  5709  000062  D3CC               	goto	u8000
  5710                           
  5711                           ; BSR set to: 1
  5712  000064  5060               	movf	_sens,w,c	;volatile
  5713  000066  1061               	iorwf	_sens+1,w,c	;volatile
  5714  000068  A4D8               	btfss	status,2,c
  5715  00006A  D3C8               	goto	u8000
  5716                           
  5717                           ; BSR set to: 1
  5718                           ;main.c: 459:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  5719  00006C  0E01               	movlw	1
  5720  00006E  EC4C  F01B         	call	_lcdInst
  5721  000072  0E11               	movlw	17
  5722  000074  0101               	movlb	1	; () banked
  5723  000076  6F00               	movwf	??_UI_main& (0+255),b
  5724  000078  0E3A               	movlw	58
  5725  00007A                     u8777:
  5726  00007A  2EE8               	decfsz	wreg,f,c
  5727  00007C  D7FE               	bra	u8777
  5728  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  5729  000080  D7FC               	bra	u8777
  5730  000082  F000               	nop	
  5731                           
  5732                           ;main.c: 460:         printf("1 - Start");
  5733  000084  0EE7               	movlw	low STR_11
  5734  000086  0100               	movlb	0	; () banked
  5735  000088  6FED               	movwf	printf@fmt& (0+255),b
  5736  00008A  0EFF               	movlw	high STR_11
  5737  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5738  00008E  ECBD  F01A         	call	_printf	;wreg free
  5739  000092  0EC0               	movlw	192
  5740  000094  EC4C  F01B         	call	_lcdInst
  5741                           
  5742                           ;main.c: 462:         printf("2 - Summary");
  5743  000098  0E7E               	movlw	low STR_12
  5744  00009A  0100               	movlb	0	; () banked
  5745  00009C  6FED               	movwf	printf@fmt& (0+255),b
  5746  00009E  0EFF               	movlw	high STR_12
  5747  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5748  0000A2  ECBD  F01A         	call	_printf	;wreg free
  5749  0000A6  0E90               	movlw	144
  5750  0000A8  EC4C  F01B         	call	_lcdInst
  5751                           
  5752                           ;main.c: 464:         printf("3 - Date&Time ");
  5753  0000AC  0EE6               	movlw	low STR_13
  5754  0000AE  0100               	movlb	0	; () banked
  5755  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  5756  0000B2  0EFE               	movlw	high STR_13
  5757  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5758  0000B6  ECBD  F01A         	call	_printf	;wreg free
  5759  0000BA  D3A0               	goto	u8000
  5760  0000BC                     l7058:
  5761                           
  5762                           ;main.c: 475:         if (send){
  5763  0000BC  506D               	movf	_send,w,c
  5764  0000BE  B4D8               	btfsc	status,2,c
  5765  0000C0  D39D               	goto	u8000
  5766                           
  5767                           ;main.c: 476:         if(key_was_pressed){
  5768  0000C2  0101               	movlb	1	; () banked
  5769  0000C4  516D               	movf	_key_was_pressed& (0+255),w,b	;volatile
  5770  0000C6  B4D8               	btfsc	status,2,c
  5771  0000C8  D399               	goto	u8000
  5772                           
  5773                           ; BSR set to: 1
  5774                           ;main.c: 477:             pressed = 1;
  5775  0000CA  0E00               	movlw	0
  5776  0000CC  6F64               	movwf	(_pressed+1)& (0+255),b
  5777  0000CE  0E01               	movlw	1
  5778  0000D0  6F63               	movwf	_pressed& (0+255),b
  5779                           
  5780                           ;main.c: 478:             key_was_pressed = 0;
  5781  0000D2  0E00               	movlw	0
  5782  0000D4  6F6D               	movwf	_key_was_pressed& (0+255),b	;volatile
  5783                           
  5784                           ; BSR set to: 1
  5785                           ;main.c: 479:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  5786  0000D6  3881               	swapf	3969,w,c	;volatile
  5787  0000D8  0B0F               	andlw	15
  5788  0000DA  0B0F               	andlw	15
  5789  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  5790                           
  5791                           ; BSR set to: 1
  5792                           ;main.c: 480:             temp = keys[keypress];
  5793  0000DE  0E27               	movlw	low _keys
  5794  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  5795  0000E2  6EF6               	movwf	tblptrl,c
  5796  0000E4  6AF7               	clrf	tblptrh,c
  5797  0000E6  0EFE               	movlw	high _keys
  5798  0000E8  22F7               	addwfc	tblptrh,f,c
  5799  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  5800  0000EA                     	endif
  5801  0000EA  0008               	tblrd		*
  5802  0000EC  CFF5 F0FF          	movff	tablat,_temp
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;main.c: 481:             temp_int = (temp-'0');
  5806  0000F0  0ED0               	movlw	208
  5807  0000F2  0100               	movlb	0	; () banked
  5808  0000F4  25FF               	addwf	_temp& (0+255),w,b
  5809  0000F6  0101               	movlb	1	; () banked
  5810  0000F8  6F69               	movwf	_temp_int& (0+255),b
  5811  0000FA  6B6A               	clrf	(_temp_int+1)& (0+255),b
  5812  0000FC  0EFF               	movlw	255
  5813  0000FE  236A               	addwfc	(_temp_int+1)& (0+255),f,b
  5814                           
  5815                           ; BSR set to: 1
  5816                           ;main.c: 483:             if (temp_int == 0){
  5817  000100  5169               	movf	_temp_int& (0+255),w,b
  5818  000102  116A               	iorwf	(_temp_int+1)& (0+255),w,b
  5819  000104  A4D8               	btfss	status,2,c
  5820  000106  D02B               	goto	l7088
  5821                           
  5822                           ; BSR set to: 1
  5823                           ;main.c: 484:                 state = 0;
  5824  000108  0E00               	movlw	0
  5825  00010A  6F68               	movwf	(_state+1)& (0+255),b
  5826  00010C  0E00               	movlw	0
  5827  00010E  6F67               	movwf	_state& (0+255),b
  5828                           
  5829                           ; BSR set to: 1
  5830                           ;main.c: 485:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  5831  000110  0E01               	movlw	1
  5832  000112  EC4C  F01B         	call	_lcdInst
  5833  000116  0E11               	movlw	17
  5834  000118  0101               	movlb	1	; () banked
  5835  00011A  6F00               	movwf	??_UI_main& (0+255),b
  5836  00011C  0E3A               	movlw	58
  5837  00011E                     u8787:
  5838  00011E  2EE8               	decfsz	wreg,f,c
  5839  000120  D7FE               	bra	u8787
  5840  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  5841  000124  D7FC               	bra	u8787
  5842  000126  F000               	nop	
  5843                           
  5844                           ;main.c: 486:                 printf("1 - Start");
  5845  000128  0EE7               	movlw	low STR_11
  5846  00012A  0100               	movlb	0	; () banked
  5847  00012C  6FED               	movwf	printf@fmt& (0+255),b
  5848  00012E  0EFF               	movlw	high STR_11
  5849  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5850  000132  ECBD  F01A         	call	_printf	;wreg free
  5851  000136  0EC0               	movlw	192
  5852  000138  EC4C  F01B         	call	_lcdInst
  5853                           
  5854                           ;main.c: 488:                 printf("2 - Summary");
  5855  00013C  0E7E               	movlw	low STR_12
  5856  00013E  0100               	movlb	0	; () banked
  5857  000140  6FED               	movwf	printf@fmt& (0+255),b
  5858  000142  0EFF               	movlw	high STR_12
  5859  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5860  000146  ECBD  F01A         	call	_printf	;wreg free
  5861  00014A  0E90               	movlw	144
  5862  00014C  EC4C  F01B         	call	_lcdInst
  5863                           
  5864                           ;main.c: 490:                 printf("3 - Date&Time ");
  5865  000150  0EE6               	movlw	low STR_13
  5866  000152  0100               	movlb	0	; () banked
  5867  000154  6FED               	movwf	printf@fmt& (0+255),b
  5868  000156  0EFE               	movlw	high STR_13
  5869  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5870  00015A  ECBD  F01A         	call	_printf	;wreg free
  5871  00015E                     l7088:
  5872                           
  5873                           ;main.c: 493:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  5874  00015E  0101               	movlb	1	; () banked
  5875  000160  0569               	decf	_temp_int& (0+255),w,b
  5876  000162  116A               	iorwf	(_temp_int+1)& (0+255),w,b
  5877  000164  A4D8               	btfss	status,2,c
  5878  000166  D043               	goto	l7118
  5879                           
  5880                           ; BSR set to: 1
  5881  000168  0E2A               	movlw	42
  5882  00016A  0100               	movlb	0	; () banked
  5883  00016C  19FF               	xorwf	_temp& (0+255),w,b
  5884  00016E  B4D8               	btfsc	status,2,c
  5885  000170  D03E               	goto	l7118
  5886                           
  5887                           ; BSR set to: 0
  5888  000172  0E23               	movlw	35
  5889  000174  19FF               	xorwf	_temp& (0+255),w,b
  5890  000176  B4D8               	btfsc	status,2,c
  5891  000178  D03A               	goto	l7118
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;main.c: 494:                 state = 0;
  5895  00017A  0E00               	movlw	0
  5896  00017C  0101               	movlb	1	; () banked
  5897  00017E  6F68               	movwf	(_state+1)& (0+255),b
  5898  000180  0E00               	movlw	0
  5899  000182  6F67               	movwf	_state& (0+255),b
  5900                           
  5901                           ; BSR set to: 1
  5902                           ;main.c: 495:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  5903  000184  0E01               	movlw	1
  5904  000186  EC4C  F01B         	call	_lcdInst
  5905  00018A  0E11               	movlw	17
  5906  00018C  0101               	movlb	1	; () banked
  5907  00018E  6F00               	movwf	??_UI_main& (0+255),b
  5908  000190  0E3A               	movlw	58
  5909  000192                     u8797:
  5910  000192  2EE8               	decfsz	wreg,f,c
  5911  000194  D7FE               	bra	u8797
  5912  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  5913  000198  D7FC               	bra	u8797
  5914  00019A  F000               	nop	
  5915                           
  5916                           ;main.c: 496:                 printf("Machine In Use");
  5917  00019C  0E04               	movlw	low STR_17
  5918  00019E  0100               	movlb	0	; () banked
  5919  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  5920  0001A2  0EFF               	movlw	high STR_17
  5921  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5922  0001A6  ECBD  F01A         	call	_printf	;wreg free
  5923  0001AA  0ED0               	movlw	208
  5924  0001AC  EC4C  F01B         	call	_lcdInst
  5925                           
  5926                           ;main.c: 498:                 printf("     0-Menu     ");
  5927  0001B0  0E50               	movlw	low STR_18
  5928  0001B2  0100               	movlb	0	; () banked
  5929  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  5930  0001B6  0EFE               	movlw	high STR_18
  5931  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5932  0001BA  ECBD  F01A         	call	_printf	;wreg free
  5933                           
  5934                           ;main.c: 502:                 I2C_Master_Start();
  5935  0001BE  EC65  F01B         	call	_I2C_Master_Start	;wreg free
  5936                           
  5937                           ;main.c: 503:                 I2C_Master_Write(0b00010000);
  5938  0001C2  0E00               	movlw	0
  5939  0001C4  0100               	movlb	0	; () banked
  5940  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5941  0001C8  0E10               	movlw	16
  5942  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5943  0001CC  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  5944                           
  5945                           ;main.c: 504:                 I2C_Master_Write('1');
  5946  0001D0  0E00               	movlw	0
  5947  0001D2  0100               	movlb	0	; () banked
  5948  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5949  0001D6  0E31               	movlw	49
  5950  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5951  0001DA  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  5952                           
  5953                           ;main.c: 505:                 I2C_Master_Stop();
  5954  0001DE  EC61  F01B         	call	_I2C_Master_Stop	;wreg free
  5955                           
  5956                           ;main.c: 506:                 timer_main();
  5957  0001E2  EC37  F01B         	call	_timer_main	;wreg free
  5958                           
  5959                           ;main.c: 507:                 sens = 1;
  5960  0001E6  0E00               	movlw	0
  5961  0001E8  6E61               	movwf	_sens+1,c	;volatile
  5962  0001EA  0E01               	movlw	1
  5963  0001EC  6E60               	movwf	_sens,c	;volatile
  5964  0001EE                     l7118:
  5965                           
  5966                           ;main.c: 510:                 if ((temp_int == 2)||(state == 2)){
  5967  0001EE  0E02               	movlw	2
  5968  0001F0  0101               	movlb	1	; () banked
  5969  0001F2  1969               	xorwf	_temp_int& (0+255),w,b
  5970  0001F4  116A               	iorwf	(_temp_int+1)& (0+255),w,b
  5971  0001F6  B4D8               	btfsc	status,2,c
  5972  0001F8  D005               	goto	u7860
  5973                           
  5974                           ; BSR set to: 1
  5975  0001FA  0E02               	movlw	2
  5976  0001FC  1967               	xorwf	_state& (0+255),w,b
  5977  0001FE  1168               	iorwf	(_state+1)& (0+255),w,b
  5978  000200  A4D8               	btfss	status,2,c
  5979  000202  D241               	goto	l7228
  5980  000204                     u7860:
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;main.c: 511:                     if ((temp_int == 2)){
  5984  000204  0E02               	movlw	2
  5985  000206  1969               	xorwf	_temp_int& (0+255),w,b
  5986  000208  116A               	iorwf	(_temp_int+1)& (0+255),w,b
  5987  00020A  A4D8               	btfss	status,2,c
  5988  00020C  D033               	goto	l7140
  5989                           
  5990                           ; BSR set to: 1
  5991                           ;main.c: 512:                         state = 2;
  5992  00020E  0E00               	movlw	0
  5993  000210  6F68               	movwf	(_state+1)& (0+255),b
  5994  000212  0E02               	movlw	2
  5995  000214  6F67               	movwf	_state& (0+255),b
  5996                           
  5997                           ;main.c: 513:                         disp = 0;
  5998  000216  0E00               	movlw	0
  5999  000218  6F66               	movwf	(_disp+1)& (0+255),b
  6000  00021A  0E00               	movlw	0
  6001  00021C  6F65               	movwf	_disp& (0+255),b
  6002                           
  6003                           ; BSR set to: 1
  6004                           ;main.c: 514:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6005  00021E  0E01               	movlw	1
  6006  000220  EC4C  F01B         	call	_lcdInst
  6007  000224  0E11               	movlw	17
  6008  000226  0101               	movlb	1	; () banked
  6009  000228  6F00               	movwf	??_UI_main& (0+255),b
  6010  00022A  0E3A               	movlw	58
  6011  00022C                     u8807:
  6012  00022C  2EE8               	decfsz	wreg,f,c
  6013  00022E  D7FE               	bra	u8807
  6014  000230  2F00               	decfsz	??_UI_main& (0+255),f,b
  6015  000232  D7FC               	bra	u8807
  6016  000234  F000               	nop	
  6017                           
  6018                           ;main.c: 515:                         printf("Op Time:");
  6019  000236  0EF1               	movlw	low STR_19
  6020  000238  0100               	movlb	0	; () banked
  6021  00023A  6FED               	movwf	printf@fmt& (0+255),b
  6022  00023C  0EFF               	movlw	high STR_19
  6023  00023E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6024  000240  ECBD  F01A         	call	_printf	;wreg free
  6025  000244  0EC0               	movlw	192
  6026  000246  EC4C  F01B         	call	_lcdInst
  6027                           
  6028                           ;main.c: 517:                         printf("%d", cnt);
  6029  00024A  0E3C               	movlw	low (STR_26+11)
  6030  00024C  0100               	movlb	0	; () banked
  6031  00024E  6FED               	movwf	printf@fmt& (0+255),b
  6032  000250  0EFF               	movlw	high (STR_26+11)
  6033  000252  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6034  000254  C16B  F0EF         	movff	_cnt,?_printf+2
  6035  000258  C16C  F0F0         	movff	_cnt+1,?_printf+3
  6036  00025C  ECBD  F01A         	call	_printf	;wreg free
  6037  000260  0ED0               	movlw	208
  6038  000262  EC4C  F01B         	call	_lcdInst
  6039                           
  6040                           ;main.c: 519:                         printf("    0-Menu   #>");
  6041  000266  0E95               	movlw	low (STR_24+1)
  6042  000268  0100               	movlb	0	; () banked
  6043  00026A  6FED               	movwf	printf@fmt& (0+255),b
  6044  00026C  0EFE               	movlw	high (STR_24+1)
  6045  00026E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6046  000270  ECBD  F01A         	call	_printf	;wreg free
  6047  000274                     l7140:
  6048                           
  6049                           ;main.c: 521:                     if ((temp == '*') && (disp != 0)){
  6050  000274  0E2A               	movlw	42
  6051  000276  0100               	movlb	0	; () banked
  6052  000278  19FF               	xorwf	_temp& (0+255),w,b
  6053  00027A  A4D8               	btfss	status,2,c
  6054  00027C  D00B               	goto	l276
  6055                           
  6056                           ; BSR set to: 0
  6057  00027E  0101               	movlb	1	; () banked
  6058  000280  5165               	movf	_disp& (0+255),w,b
  6059  000282  1166               	iorwf	(_disp+1)& (0+255),w,b
  6060  000284  B4D8               	btfsc	status,2,c
  6061  000286  D006               	goto	l276
  6062                           
  6063                           ; BSR set to: 1
  6064                           ;main.c: 522:                         disp = disp - 1;
  6065  000288  0EFF               	movlw	255
  6066  00028A  2565               	addwf	_disp& (0+255),w,b
  6067  00028C  6F65               	movwf	_disp& (0+255),b
  6068  00028E  0EFF               	movlw	255
  6069  000290  2166               	addwfc	(_disp+1)& (0+255),w,b
  6070  000292  6F66               	movwf	(_disp+1)& (0+255),b
  6071  000294                     l276:
  6072                           
  6073                           ;main.c: 524:                     if ((temp == '#')&& (disp <12)){
  6074  000294  0E23               	movlw	35
  6075  000296  0100               	movlb	0	; () banked
  6076  000298  19FF               	xorwf	_temp& (0+255),w,b
  6077  00029A  A4D8               	btfss	status,2,c
  6078  00029C  D00B               	goto	l7150
  6079                           
  6080                           ; BSR set to: 0
  6081  00029E  0101               	movlb	1	; () banked
  6082  0002A0  BF66               	btfsc	(_disp+1)& (0+255),7,b
  6083  0002A2  D006               	goto	u7910
  6084  0002A4  5166               	movf	(_disp+1)& (0+255),w,b
  6085  0002A6  E106               	bnz	l7150
  6086  0002A8  0E0C               	movlw	12
  6087  0002AA  5D65               	subwf	_disp& (0+255),w,b
  6088  0002AC  B0D8               	btfsc	status,0,c
  6089  0002AE  D002               	goto	l7150
  6090  0002B0                     u7910:
  6091                           
  6092                           ; BSR set to: 1
  6093                           ;main.c: 525:                         disp++;
  6094  0002B0  4B65               	infsnz	_disp& (0+255),f,b
  6095  0002B2  2B66               	incf	(_disp+1)& (0+255),f,b
  6096  0002B4                     l7150:
  6097                           
  6098                           ;main.c: 527:                     if (disp == 0){
  6099  0002B4  0101               	movlb	1	; () banked
  6100  0002B6  5165               	movf	_disp& (0+255),w,b
  6101  0002B8  1166               	iorwf	(_disp+1)& (0+255),w,b
  6102  0002BA  A4D8               	btfss	status,2,c
  6103  0002BC  D02B               	goto	l7166
  6104                           
  6105                           ; BSR set to: 1
  6106                           ;main.c: 528:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6107  0002BE  0E01               	movlw	1
  6108  0002C0  EC4C  F01B         	call	_lcdInst
  6109  0002C4  0E11               	movlw	17
  6110  0002C6  0101               	movlb	1	; () banked
  6111  0002C8  6F00               	movwf	??_UI_main& (0+255),b
  6112  0002CA  0E3A               	movlw	58
  6113  0002CC                     u8817:
  6114  0002CC  2EE8               	decfsz	wreg,f,c
  6115  0002CE  D7FE               	bra	u8817
  6116  0002D0  2F00               	decfsz	??_UI_main& (0+255),f,b
  6117  0002D2  D7FC               	bra	u8817
  6118  0002D4  F000               	nop	
  6119                           
  6120                           ;main.c: 529:                         printf("Op Time:");
  6121  0002D6  0EF1               	movlw	low STR_19
  6122  0002D8  0100               	movlb	0	; () banked
  6123  0002DA  6FED               	movwf	printf@fmt& (0+255),b
  6124  0002DC  0EFF               	movlw	high STR_19
  6125  0002DE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6126  0002E0  ECBD  F01A         	call	_printf	;wreg free
  6127  0002E4  0EC0               	movlw	192
  6128  0002E6  EC4C  F01B         	call	_lcdInst
  6129                           
  6130                           ;main.c: 531:                         printf("%d", cnt);
  6131  0002EA  0E3C               	movlw	low (STR_26+11)
  6132  0002EC  0100               	movlb	0	; () banked
  6133  0002EE  6FED               	movwf	printf@fmt& (0+255),b
  6134  0002F0  0EFF               	movlw	high (STR_26+11)
  6135  0002F2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6136  0002F4  C16B  F0EF         	movff	_cnt,?_printf+2
  6137  0002F8  C16C  F0F0         	movff	_cnt+1,?_printf+3
  6138  0002FC  ECBD  F01A         	call	_printf	;wreg free
  6139  000300  0ED0               	movlw	208
  6140  000302  EC4C  F01B         	call	_lcdInst
  6141                           
  6142                           ;main.c: 533:                         printf("     0-Menu   #>");
  6143  000306  0E94               	movlw	low STR_24
  6144  000308  0100               	movlb	0	; () banked
  6145  00030A  6FED               	movwf	printf@fmt& (0+255),b
  6146  00030C  0EFE               	movlw	high STR_24
  6147  00030E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6148  000310  ECBD  F01A         	call	_printf	;wreg free
  6149  000314                     l7166:
  6150                           
  6151                           ;main.c: 536:                     if (disp == 1){
  6152  000314  0101               	movlb	1	; () banked
  6153  000316  0565               	decf	_disp& (0+255),w,b
  6154  000318  1166               	iorwf	(_disp+1)& (0+255),w,b
  6155  00031A  A4D8               	btfss	status,2,c
  6156  00031C  D02F               	goto	l7182
  6157                           
  6158                           ; BSR set to: 1
  6159                           ;main.c: 537:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6160  00031E  0E01               	movlw	1
  6161  000320  EC4C  F01B         	call	_lcdInst
  6162  000324  0E11               	movlw	17
  6163  000326  0101               	movlb	1	; () banked
  6164  000328  6F00               	movwf	??_UI_main& (0+255),b
  6165  00032A  0E3A               	movlw	58
  6166  00032C                     u8827:
  6167  00032C  2EE8               	decfsz	wreg,f,c
  6168  00032E  D7FE               	bra	u8827
  6169  000330  2F00               	decfsz	??_UI_main& (0+255),f,b
  6170  000332  D7FC               	bra	u8827
  6171  000334  F000               	nop	
  6172                           
  6173                           ;main.c: 538:                         printf("No. Tires: %d",t_dep);
  6174  000336  0E3F               	movlw	low STR_25
  6175  000338  0100               	movlb	0	; () banked
  6176  00033A  6FED               	movwf	printf@fmt& (0+255),b
  6177  00033C  0EFF               	movlw	high STR_25
  6178  00033E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6179  000340  C0F9  F0EF         	movff	UI_main@t_dep,?_printf+2
  6180  000344  C0FA  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  6181  000348  ECBD  F01A         	call	_printf	;wreg free
  6182  00034C  0EC0               	movlw	192
  6183  00034E  EC4C  F01B         	call	_lcdInst
  6184                           
  6185                           ;main.c: 540:                         printf("No. Poles: %d", poles_detected);
  6186  000352  0E31               	movlw	low STR_26
  6187  000354  0100               	movlb	0	; () banked
  6188  000356  6FED               	movwf	printf@fmt& (0+255),b
  6189  000358  0EFF               	movlw	high STR_26
  6190  00035A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6191  00035C  C0FB  F0EF         	movff	UI_main@poles_detected,?_printf+2
  6192  000360  C0FC  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  6193  000364  ECBD  F01A         	call	_printf	;wreg free
  6194  000368  0ED0               	movlw	208
  6195  00036A  EC4C  F01B         	call	_lcdInst
  6196                           
  6197                           ;main.c: 542:                         printf("<*   0-Menu   #>");
  6198  00036E  0EA5               	movlw	low STR_27
  6199  000370  0100               	movlb	0	; () banked
  6200  000372  6FED               	movwf	printf@fmt& (0+255),b
  6201  000374  0EFE               	movlw	high STR_27
  6202  000376  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6203  000378  ECBD  F01A         	call	_printf	;wreg free
  6204  00037C                     l7182:
  6205                           
  6206                           ;main.c: 545:                     if (disp > 1 && disp <11){
  6207  00037C  0101               	movlb	1	; () banked
  6208  00037E  BF66               	btfsc	(_disp+1)& (0+255),7,b
  6209  000380  D0C5               	goto	l7206
  6210  000382  5166               	movf	(_disp+1)& (0+255),w,b
  6211  000384  E104               	bnz	u7940
  6212  000386  0E02               	movlw	2
  6213  000388  5D65               	subwf	_disp& (0+255),w,b
  6214  00038A  A0D8               	btfss	status,0,c
  6215  00038C  D0BF               	goto	l7206
  6216  00038E                     u7940:
  6217                           
  6218                           ; BSR set to: 1
  6219  00038E  BF66               	btfsc	(_disp+1)& (0+255),7,b
  6220  000390  D006               	goto	u7950
  6221  000392  5166               	movf	(_disp+1)& (0+255),w,b
  6222  000394  E103               	bnz	u7951
  6223  000396  0E0B               	movlw	11
  6224  000398  5D65               	subwf	_disp& (0+255),w,b
  6225  00039A  B0D8               	btfsc	status,0,c
  6226  00039C                     u7951:
  6227  00039C  D0B7               	goto	l7206
  6228  00039E                     u7950:
  6229                           
  6230                           ; BSR set to: 1
  6231                           ;main.c: 546:                         i = disp - 2;
  6232  00039E  0EFE               	movlw	254
  6233  0003A0  2565               	addwf	_disp& (0+255),w,b
  6234  0003A2  0100               	movlb	0	; () banked
  6235  0003A4  6FFD               	movwf	_i& (0+255),b
  6236  0003A6  0EFF               	movlw	255
  6237  0003A8  0101               	movlb	1	; () banked
  6238  0003AA  2166               	addwfc	(_disp+1)& (0+255),w,b
  6239  0003AC  0100               	movlb	0	; () banked
  6240  0003AE  6FFE               	movwf	(_i+1)& (0+255),b
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;main.c: 547:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6244  0003B0  0E01               	movlw	1
  6245  0003B2  EC4C  F01B         	call	_lcdInst
  6246  0003B6  0E11               	movlw	17
  6247  0003B8  0101               	movlb	1	; () banked
  6248  0003BA  6F00               	movwf	??_UI_main& (0+255),b
  6249  0003BC  0E3A               	movlw	58
  6250  0003BE                     u8837:
  6251  0003BE  2EE8               	decfsz	wreg,f,c
  6252  0003C0  D7FE               	bra	u8837
  6253  0003C2  2F00               	decfsz	??_UI_main& (0+255),f,b
  6254  0003C4  D7FC               	bra	u8837
  6255  0003C6  F000               	nop	
  6256                           
  6257                           ;main.c: 548:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  6258  0003C8  0E3E               	movlw	low STR_28
  6259  0003CA  0100               	movlb	0	; () banked
  6260  0003CC  6FED               	movwf	printf@fmt& (0+255),b
  6261  0003CE  0EFE               	movlw	high STR_28
  6262  0003D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6263  0003D2  0E01               	movlw	1
  6264  0003D4  25FD               	addwf	_i& (0+255),w,b
  6265  0003D6  6FEF               	movwf	(?_printf+2)& (0+255),b
  6266  0003D8  0E00               	movlw	0
  6267  0003DA  21FE               	addwfc	(_i+1)& (0+255),w,b
  6268  0003DC  6FF0               	movwf	(?_printf+3)& (0+255),b
  6269  0003DE  C0FD  F100         	movff	_i,??_UI_main
  6270  0003E2  C0FE  F101         	movff	_i+1,??_UI_main+1
  6271  0003E6  0101               	movlb	1	; () banked
  6272  0003E8  90D8               	bcf	status,0,c
  6273  0003EA  3700               	rlcf	??_UI_main& (0+255),f,b
  6274  0003EC  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6275  0003EE  90D8               	bcf	status,0,c
  6276  0003F0  3700               	rlcf	??_UI_main& (0+255),f,b
  6277  0003F2  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6278  0003F4  90D8               	bcf	status,0,c
  6279  0003F6  3700               	rlcf	??_UI_main& (0+255),f,b
  6280  0003F8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6281  0003FA  0E04               	movlw	low UI_main@Pole
  6282  0003FC  2500               	addwf	??_UI_main& (0+255),w,b
  6283  0003FE  6ED9               	movwf	fsr2l,c
  6284  000400  0E01               	movlw	high UI_main@Pole
  6285  000402  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6286  000404  6EDA               	movwf	fsr2h,c
  6287  000406  CFDE F0F1          	movff	postinc2,?_printf+4
  6288  00040A  CFDD F0F2          	movff	postdec2,?_printf+5
  6289  00040E  C0FD  F102         	movff	_i,??_UI_main+2
  6290  000412  C0FE  F103         	movff	_i+1,??_UI_main+3
  6291  000416  90D8               	bcf	status,0,c
  6292  000418  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6293  00041A  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6294  00041C  90D8               	bcf	status,0,c
  6295  00041E  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6296  000420  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6297  000422  90D8               	bcf	status,0,c
  6298  000424  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6299  000426  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6300  000428  0E02               	movlw	2
  6301  00042A  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  6302  00042C  0E00               	movlw	0
  6303  00042E  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  6304  000430  0E04               	movlw	low UI_main@Pole
  6305  000432  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  6306  000434  6ED9               	movwf	fsr2l,c
  6307  000436  0E01               	movlw	high UI_main@Pole
  6308  000438  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  6309  00043A  6EDA               	movwf	fsr2h,c
  6310  00043C  CFDE F0F3          	movff	postinc2,?_printf+6
  6311  000440  CFDD F0F4          	movff	postdec2,?_printf+7
  6312  000444  ECBD  F01A         	call	_printf	;wreg free
  6313  000448  0EC0               	movlw	192
  6314  00044A  EC4C  F01B         	call	_lcdInst
  6315                           
  6316                           ;main.c: 550:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  6317  00044E  0EF5               	movlw	low STR_29
  6318  000450  0100               	movlb	0	; () banked
  6319  000452  6FED               	movwf	printf@fmt& (0+255),b
  6320  000454  0EFE               	movlw	high STR_29
  6321  000456  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6322  000458  0E01               	movlw	1
  6323  00045A  25FD               	addwf	_i& (0+255),w,b
  6324  00045C  6FEF               	movwf	(?_printf+2)& (0+255),b
  6325  00045E  0E00               	movlw	0
  6326  000460  21FE               	addwfc	(_i+1)& (0+255),w,b
  6327  000462  6FF0               	movwf	(?_printf+3)& (0+255),b
  6328  000464  C0FD  F100         	movff	_i,??_UI_main
  6329  000468  C0FE  F101         	movff	_i+1,??_UI_main+1
  6330  00046C  0101               	movlb	1	; () banked
  6331  00046E  90D8               	bcf	status,0,c
  6332  000470  3700               	rlcf	??_UI_main& (0+255),f,b
  6333  000472  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6334  000474  90D8               	bcf	status,0,c
  6335  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  6336  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6337  00047A  90D8               	bcf	status,0,c
  6338  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  6339  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6340  000480  0E04               	movlw	4
  6341  000482  2700               	addwf	??_UI_main& (0+255),f,b
  6342  000484  0E00               	movlw	0
  6343  000486  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  6344  000488  0E04               	movlw	low UI_main@Pole
  6345  00048A  2500               	addwf	??_UI_main& (0+255),w,b
  6346  00048C  6ED9               	movwf	fsr2l,c
  6347  00048E  0E01               	movlw	high UI_main@Pole
  6348  000490  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6349  000492  6EDA               	movwf	fsr2h,c
  6350  000494  CFDE F0F1          	movff	postinc2,?_printf+4
  6351  000498  CFDD F0F2          	movff	postdec2,?_printf+5
  6352  00049C  ECBD  F01A         	call	_printf	;wreg free
  6353  0004A0  0E90               	movlw	144
  6354  0004A2  EC4C  F01B         	call	_lcdInst
  6355                           
  6356                           ;main.c: 552:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  6357  0004A6  0E72               	movlw	low STR_30
  6358  0004A8  0100               	movlb	0	; () banked
  6359  0004AA  6FED               	movwf	printf@fmt& (0+255),b
  6360  0004AC  0EFF               	movlw	high STR_30
  6361  0004AE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6362  0004B0  0E01               	movlw	1
  6363  0004B2  25FD               	addwf	_i& (0+255),w,b
  6364  0004B4  6FEF               	movwf	(?_printf+2)& (0+255),b
  6365  0004B6  0E00               	movlw	0
  6366  0004B8  21FE               	addwfc	(_i+1)& (0+255),w,b
  6367  0004BA  6FF0               	movwf	(?_printf+3)& (0+255),b
  6368  0004BC  C0FD  F100         	movff	_i,??_UI_main
  6369  0004C0  C0FE  F101         	movff	_i+1,??_UI_main+1
  6370  0004C4  0101               	movlb	1	; () banked
  6371  0004C6  90D8               	bcf	status,0,c
  6372  0004C8  3700               	rlcf	??_UI_main& (0+255),f,b
  6373  0004CA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6374  0004CC  90D8               	bcf	status,0,c
  6375  0004CE  3700               	rlcf	??_UI_main& (0+255),f,b
  6376  0004D0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6377  0004D2  90D8               	bcf	status,0,c
  6378  0004D4  3700               	rlcf	??_UI_main& (0+255),f,b
  6379  0004D6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6380  0004D8  0E06               	movlw	6
  6381  0004DA  2700               	addwf	??_UI_main& (0+255),f,b
  6382  0004DC  0E00               	movlw	0
  6383  0004DE  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  6384  0004E0  0E04               	movlw	low UI_main@Pole
  6385  0004E2  2500               	addwf	??_UI_main& (0+255),w,b
  6386  0004E4  6ED9               	movwf	fsr2l,c
  6387  0004E6  0E01               	movlw	high UI_main@Pole
  6388  0004E8  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6389  0004EA  6EDA               	movwf	fsr2h,c
  6390  0004EC  CFDE F0F1          	movff	postinc2,?_printf+4
  6391  0004F0  CFDD F0F2          	movff	postdec2,?_printf+5
  6392  0004F4  ECBD  F01A         	call	_printf	;wreg free
  6393  0004F8  0ED0               	movlw	208
  6394  0004FA  EC4C  F01B         	call	_lcdInst
  6395                           
  6396                           ;main.c: 554:                         printf("<*   0-Menu   #>");
  6397  0004FE  0EA5               	movlw	low STR_27
  6398  000500  0100               	movlb	0	; () banked
  6399  000502  6FED               	movwf	printf@fmt& (0+255),b
  6400  000504  0EFE               	movlw	high STR_27
  6401  000506  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6402  000508  ECBD  F01A         	call	_printf	;wreg free
  6403  00050C                     l7206:
  6404                           
  6405                           ;main.c: 556:                     if (disp == 11){
  6406  00050C  0E0B               	movlw	11
  6407  00050E  0101               	movlb	1	; () banked
  6408  000510  1965               	xorwf	_disp& (0+255),w,b
  6409  000512  1166               	iorwf	(_disp+1)& (0+255),w,b
  6410  000514  A4D8               	btfss	status,2,c
  6411  000516  D0B7               	goto	l7228
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;main.c: 557:                         i = disp - 2;
  6415  000518  0EFE               	movlw	254
  6416  00051A  2565               	addwf	_disp& (0+255),w,b
  6417  00051C  0100               	movlb	0	; () banked
  6418  00051E  6FFD               	movwf	_i& (0+255),b
  6419  000520  0EFF               	movlw	255
  6420  000522  0101               	movlb	1	; () banked
  6421  000524  2166               	addwfc	(_disp+1)& (0+255),w,b
  6422  000526  0100               	movlb	0	; () banked
  6423  000528  6FFE               	movwf	(_i+1)& (0+255),b
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;main.c: 558:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6427  00052A  0E01               	movlw	1
  6428  00052C  EC4C  F01B         	call	_lcdInst
  6429  000530  0E11               	movlw	17
  6430  000532  0101               	movlb	1	; () banked
  6431  000534  6F00               	movwf	??_UI_main& (0+255),b
  6432  000536  0E3A               	movlw	58
  6433  000538                     u8847:
  6434  000538  2EE8               	decfsz	wreg,f,c
  6435  00053A  D7FE               	bra	u8847
  6436  00053C  2F00               	decfsz	??_UI_main& (0+255),f,b
  6437  00053E  D7FC               	bra	u8847
  6438  000540  F000               	nop	
  6439                           
  6440                           ;main.c: 559:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  6441  000542  0E3E               	movlw	low STR_28
  6442  000544  0100               	movlb	0	; () banked
  6443  000546  6FED               	movwf	printf@fmt& (0+255),b
  6444  000548  0EFE               	movlw	high STR_28
  6445  00054A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6446  00054C  0E01               	movlw	1
  6447  00054E  25FD               	addwf	_i& (0+255),w,b
  6448  000550  6FEF               	movwf	(?_printf+2)& (0+255),b
  6449  000552  0E00               	movlw	0
  6450  000554  21FE               	addwfc	(_i+1)& (0+255),w,b
  6451  000556  6FF0               	movwf	(?_printf+3)& (0+255),b
  6452  000558  C0FD  F100         	movff	_i,??_UI_main
  6453  00055C  C0FE  F101         	movff	_i+1,??_UI_main+1
  6454  000560  0101               	movlb	1	; () banked
  6455  000562  90D8               	bcf	status,0,c
  6456  000564  3700               	rlcf	??_UI_main& (0+255),f,b
  6457  000566  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6458  000568  90D8               	bcf	status,0,c
  6459  00056A  3700               	rlcf	??_UI_main& (0+255),f,b
  6460  00056C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6461  00056E  90D8               	bcf	status,0,c
  6462  000570  3700               	rlcf	??_UI_main& (0+255),f,b
  6463  000572  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6464  000574  0E04               	movlw	low UI_main@Pole
  6465  000576  2500               	addwf	??_UI_main& (0+255),w,b
  6466  000578  6ED9               	movwf	fsr2l,c
  6467  00057A  0E01               	movlw	high UI_main@Pole
  6468  00057C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6469  00057E  6EDA               	movwf	fsr2h,c
  6470  000580  CFDE F0F1          	movff	postinc2,?_printf+4
  6471  000584  CFDD F0F2          	movff	postdec2,?_printf+5
  6472  000588  C0FD  F102         	movff	_i,??_UI_main+2
  6473  00058C  C0FE  F103         	movff	_i+1,??_UI_main+3
  6474  000590  90D8               	bcf	status,0,c
  6475  000592  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6476  000594  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6477  000596  90D8               	bcf	status,0,c
  6478  000598  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6479  00059A  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6480  00059C  90D8               	bcf	status,0,c
  6481  00059E  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6482  0005A0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6483  0005A2  0E02               	movlw	2
  6484  0005A4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  6485  0005A6  0E00               	movlw	0
  6486  0005A8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  6487  0005AA  0E04               	movlw	low UI_main@Pole
  6488  0005AC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  6489  0005AE  6ED9               	movwf	fsr2l,c
  6490  0005B0  0E01               	movlw	high UI_main@Pole
  6491  0005B2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  6492  0005B4  6EDA               	movwf	fsr2h,c
  6493  0005B6  CFDE F0F3          	movff	postinc2,?_printf+6
  6494  0005BA  CFDD F0F4          	movff	postdec2,?_printf+7
  6495  0005BE  ECBD  F01A         	call	_printf	;wreg free
  6496  0005C2  0EC0               	movlw	192
  6497  0005C4  EC4C  F01B         	call	_lcdInst
  6498                           
  6499                           ;main.c: 561:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  6500  0005C8  0EF5               	movlw	low STR_29
  6501  0005CA  0100               	movlb	0	; () banked
  6502  0005CC  6FED               	movwf	printf@fmt& (0+255),b
  6503  0005CE  0EFE               	movlw	high STR_29
  6504  0005D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6505  0005D2  0E01               	movlw	1
  6506  0005D4  25FD               	addwf	_i& (0+255),w,b
  6507  0005D6  6FEF               	movwf	(?_printf+2)& (0+255),b
  6508  0005D8  0E00               	movlw	0
  6509  0005DA  21FE               	addwfc	(_i+1)& (0+255),w,b
  6510  0005DC  6FF0               	movwf	(?_printf+3)& (0+255),b
  6511  0005DE  C0FD  F100         	movff	_i,??_UI_main
  6512  0005E2  C0FE  F101         	movff	_i+1,??_UI_main+1
  6513  0005E6  0101               	movlb	1	; () banked
  6514  0005E8  90D8               	bcf	status,0,c
  6515  0005EA  3700               	rlcf	??_UI_main& (0+255),f,b
  6516  0005EC  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6517  0005EE  90D8               	bcf	status,0,c
  6518  0005F0  3700               	rlcf	??_UI_main& (0+255),f,b
  6519  0005F2  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6520  0005F4  90D8               	bcf	status,0,c
  6521  0005F6  3700               	rlcf	??_UI_main& (0+255),f,b
  6522  0005F8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6523  0005FA  0E04               	movlw	4
  6524  0005FC  2700               	addwf	??_UI_main& (0+255),f,b
  6525  0005FE  0E00               	movlw	0
  6526  000600  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  6527  000602  0E04               	movlw	low UI_main@Pole
  6528  000604  2500               	addwf	??_UI_main& (0+255),w,b
  6529  000606  6ED9               	movwf	fsr2l,c
  6530  000608  0E01               	movlw	high UI_main@Pole
  6531  00060A  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6532  00060C  6EDA               	movwf	fsr2h,c
  6533  00060E  CFDE F0F1          	movff	postinc2,?_printf+4
  6534  000612  CFDD F0F2          	movff	postdec2,?_printf+5
  6535  000616  ECBD  F01A         	call	_printf	;wreg free
  6536  00061A  0E90               	movlw	144
  6537  00061C  EC4C  F01B         	call	_lcdInst
  6538                           
  6539                           ;main.c: 563:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  6540  000620  0E72               	movlw	low STR_30
  6541  000622  0100               	movlb	0	; () banked
  6542  000624  6FED               	movwf	printf@fmt& (0+255),b
  6543  000626  0EFF               	movlw	high STR_30
  6544  000628  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6545  00062A  0E01               	movlw	1
  6546  00062C  25FD               	addwf	_i& (0+255),w,b
  6547  00062E  6FEF               	movwf	(?_printf+2)& (0+255),b
  6548  000630  0E00               	movlw	0
  6549  000632  21FE               	addwfc	(_i+1)& (0+255),w,b
  6550  000634  6FF0               	movwf	(?_printf+3)& (0+255),b
  6551  000636  C0FD  F100         	movff	_i,??_UI_main
  6552  00063A  C0FE  F101         	movff	_i+1,??_UI_main+1
  6553  00063E  0101               	movlb	1	; () banked
  6554  000640  90D8               	bcf	status,0,c
  6555  000642  3700               	rlcf	??_UI_main& (0+255),f,b
  6556  000644  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6557  000646  90D8               	bcf	status,0,c
  6558  000648  3700               	rlcf	??_UI_main& (0+255),f,b
  6559  00064A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6560  00064C  90D8               	bcf	status,0,c
  6561  00064E  3700               	rlcf	??_UI_main& (0+255),f,b
  6562  000650  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6563  000652  0E06               	movlw	6
  6564  000654  2700               	addwf	??_UI_main& (0+255),f,b
  6565  000656  0E00               	movlw	0
  6566  000658  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  6567  00065A  0E04               	movlw	low UI_main@Pole
  6568  00065C  2500               	addwf	??_UI_main& (0+255),w,b
  6569  00065E  6ED9               	movwf	fsr2l,c
  6570  000660  0E01               	movlw	high UI_main@Pole
  6571  000662  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6572  000664  6EDA               	movwf	fsr2h,c
  6573  000666  CFDE F0F1          	movff	postinc2,?_printf+4
  6574  00066A  CFDD F0F2          	movff	postdec2,?_printf+5
  6575  00066E  ECBD  F01A         	call	_printf	;wreg free
  6576  000672  0ED0               	movlw	208
  6577  000674  EC4C  F01B         	call	_lcdInst
  6578                           
  6579                           ;main.c: 565:                         printf("<*   0-Menu     ");
  6580  000678  0E61               	movlw	low STR_35
  6581  00067A  0100               	movlb	0	; () banked
  6582  00067C  6FED               	movwf	printf@fmt& (0+255),b
  6583  00067E  0EFE               	movlw	high STR_35
  6584  000680  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6585  000682  ECBD  F01A         	call	_printf	;wreg free
  6586  000686                     l7228:
  6587                           
  6588                           ;main.c: 568:             if (temp_int == 3){
  6589  000686  0E03               	movlw	3
  6590  000688  0101               	movlb	1	; () banked
  6591  00068A  1969               	xorwf	_temp_int& (0+255),w,b
  6592  00068C  116A               	iorwf	(_temp_int+1)& (0+255),w,b
  6593  00068E  A4D8               	btfss	status,2,c
  6594  000690  D0B5               	goto	u8000
  6595                           
  6596                           ; BSR set to: 1
  6597                           ;main.c: 569:                 state = 0;
  6598  000692  0E00               	movlw	0
  6599  000694  6F68               	movwf	(_state+1)& (0+255),b
  6600  000696  0E00               	movlw	0
  6601  000698  6F67               	movwf	_state& (0+255),b
  6602                           
  6603                           ;main.c: 570:                 tick = 0;
  6604  00069A  0E00               	movlw	0
  6605  00069C  6F55               	movwf	UI_main@tick& (0+255),b
  6606  00069E  0E00               	movlw	0
  6607  0006A0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  6608  0006A2  0E00               	movlw	0
  6609  0006A4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  6610  0006A6  0E00               	movlw	0
  6611  0006A8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  6612                           
  6613                           ;main.c: 571:                 while(~key_was_pressed){
  6614  0006AA  D0A5               	goto	l7278
  6615  0006AC                     l7232:
  6616                           
  6617                           ; BSR set to: 1
  6618                           ;main.c: 572:                     if(tick % 1000 == 0){
  6619  0006AC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  6620  0006B0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  6621  0006B4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  6622  0006B8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  6623  0006BC  0EE8               	movlw	232
  6624  0006BE  0100               	movlb	0	; () banked
  6625  0006C0  6F84               	movwf	___llmod@divisor& (0+255),b
  6626  0006C2  0E03               	movlw	3
  6627  0006C4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  6628  0006C6  0E00               	movlw	0
  6629  0006C8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  6630  0006CA  0E00               	movlw	0
  6631  0006CC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  6632  0006CE  ECD8  F017         	call	___llmod	;wreg free
  6633  0006D2  0100               	movlb	0	; () banked
  6634  0006D4  5180               	movf	?___llmod& (0+255),w,b
  6635  0006D6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  6636  0006D8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  6637  0006DA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  6638  0006DC  A4D8               	btfss	status,2,c
  6639  0006DE  D084               	goto	l7276
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;main.c: 573:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6643  0006E0  0E01               	movlw	1
  6644  0006E2  EC4C  F01B         	call	_lcdInst
  6645  0006E6  0E11               	movlw	17
  6646  0006E8  0101               	movlb	1	; () banked
  6647  0006EA  6F00               	movwf	??_UI_main& (0+255),b
  6648  0006EC  0E3A               	movlw	58
  6649  0006EE                     u8857:
  6650  0006EE  2EE8               	decfsz	wreg,f,c
  6651  0006F0  D7FE               	bra	u8857
  6652  0006F2  2F00               	decfsz	??_UI_main& (0+255),f,b
  6653  0006F4  D7FC               	bra	u8857
  6654  0006F6  F000               	nop	
  6655                           
  6656                           ;main.c: 574:                         printf("DATE & TIME");
  6657  0006F8  0E5A               	movlw	low STR_36
  6658  0006FA  0100               	movlb	0	; () banked
  6659  0006FC  6FED               	movwf	printf@fmt& (0+255),b
  6660  0006FE  0EFF               	movlw	high STR_36
  6661  000700  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6662  000702  ECBD  F01A         	call	_printf	;wreg free
  6663                           
  6664                           ;main.c: 575:                         I2C_Master_Init(100000);
  6665  000706  0EA0               	movlw	160
  6666  000708  0100               	movlb	0	; () banked
  6667  00070A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  6668  00070C  0E86               	movlw	134
  6669  00070E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  6670  000710  0E01               	movlw	1
  6671  000712  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  6672  000714  0E00               	movlw	0
  6673  000716  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  6674  000718  EC0C  F018         	call	_I2C_Master_Init	;wreg free
  6675                           
  6676                           ;main.c: 576:                         I2C_Master_Start();
  6677  00071C  EC65  F01B         	call	_I2C_Master_Start	;wreg free
  6678                           
  6679                           ;main.c: 577:                         I2C_Master_Write(0b11010000);
  6680  000720  0E00               	movlw	0
  6681  000722  0100               	movlb	0	; () banked
  6682  000724  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6683  000726  0ED0               	movlw	208
  6684  000728  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6685  00072A  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  6686                           
  6687                           ;main.c: 578:                         I2C_Master_Write(0x00);
  6688  00072E  0E00               	movlw	0
  6689  000730  0100               	movlb	0	; () banked
  6690  000732  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6691  000734  0E00               	movlw	0
  6692  000736  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6693  000738  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  6694                           
  6695                           ;main.c: 579:                         I2C_Master_Stop();
  6696  00073C  EC61  F01B         	call	_I2C_Master_Stop	;wreg free
  6697                           
  6698                           ;main.c: 581:                         I2C_Master_Start();
  6699  000740  EC65  F01B         	call	_I2C_Master_Start	;wreg free
  6700                           
  6701                           ;main.c: 582:                         I2C_Master_Write(0b11010001);
  6702  000744  0E00               	movlw	0
  6703  000746  0100               	movlb	0	; () banked
  6704  000748  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6705  00074A  0ED1               	movlw	209
  6706  00074C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6707  00074E  EC5C  F01B         	call	_I2C_Master_Write	;wreg free
  6708                           
  6709                           ;main.c: 583:                         for(unsigned char i = 0; i < 6; i++){
  6710  000752  0E00               	movlw	0
  6711  000754  0101               	movlb	1	; () banked
  6712  000756  6F59               	movwf	UI_main@i& (0+255),b
  6713  000758                     l7256:
  6714                           
  6715                           ; BSR set to: 1
  6716  000758  0E05               	movlw	5
  6717  00075A  6559               	cpfsgt	UI_main@i& (0+255),b
  6718  00075C  D001               	goto	l7260
  6719  00075E  D00D               	goto	l7266
  6720  000760                     l7260:
  6721                           
  6722                           ; BSR set to: 1
  6723                           ;main.c: 584:                             time[i] = I2C_Master_Read(0);
  6724  000760  0E5C               	movlw	low _time
  6725  000762  2559               	addwf	UI_main@i& (0+255),w,b
  6726  000764  6ED9               	movwf	fsr2l,c
  6727  000766  6ADA               	clrf	fsr2h,c
  6728  000768  0E01               	movlw	high _time
  6729  00076A  22DA               	addwfc	fsr2h,f,c
  6730  00076C  0E00               	movlw	0
  6731  00076E  ECA8  F01A         	call	_I2C_Master_Read
  6732  000772  6EDF               	movwf	indf2,c
  6733                           
  6734                           ;main.c: 585:                         }
  6735  000774  0101               	movlb	1	; () banked
  6736  000776  2B59               	incf	UI_main@i& (0+255),f,b
  6737  000778  D7EF               	goto	l7256
  6738  00077A                     l7266:
  6739                           
  6740                           ; BSR set to: 1
  6741                           ;main.c: 586:                         time[6] = I2C_Master_Read(1);
  6742  00077A  0E01               	movlw	1
  6743  00077C  ECA8  F01A         	call	_I2C_Master_Read
  6744  000780  0101               	movlb	1	; () banked
  6745  000782  6F62               	movwf	(_time+6)& (0+255),b
  6746                           
  6747                           ;main.c: 587:                         I2C_Master_Stop();
  6748  000784  EC61  F01B         	call	_I2C_Master_Stop	;wreg free
  6749  000788  0EC0               	movlw	192
  6750  00078A  EC4C  F01B         	call	_lcdInst
  6751                           
  6752                           ;main.c: 591:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  6753  00078E  0E13               	movlw	low STR_37
  6754  000790  0100               	movlb	0	; () banked
  6755  000792  6FED               	movwf	printf@fmt& (0+255),b
  6756  000794  0EFF               	movlw	high STR_37
  6757  000796  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6758  000798  C162  F0EF         	movff	_time+6,?_printf+2
  6759  00079C  6BF0               	clrf	(?_printf+3)& (0+255),b
  6760  00079E  C161  F0F1         	movff	_time+5,?_printf+4
  6761  0007A2  6BF2               	clrf	(?_printf+5)& (0+255),b
  6762  0007A4  C160  F0F3         	movff	_time+4,?_printf+6
  6763  0007A8  6BF4               	clrf	(?_printf+7)& (0+255),b
  6764  0007AA  ECBD  F01A         	call	_printf	;wreg free
  6765  0007AE  0E90               	movlw	144
  6766  0007B0  EC4C  F01B         	call	_lcdInst
  6767                           
  6768                           ;main.c: 593:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  6769  0007B4  0E22               	movlw	low STR_38
  6770  0007B6  0100               	movlb	0	; () banked
  6771  0007B8  6FED               	movwf	printf@fmt& (0+255),b
  6772  0007BA  0EFF               	movlw	high STR_38
  6773  0007BC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6774  0007BE  C15E  F0EF         	movff	_time+2,?_printf+2
  6775  0007C2  6BF0               	clrf	(?_printf+3)& (0+255),b
  6776  0007C4  C15D  F0F1         	movff	_time+1,?_printf+4
  6777  0007C8  6BF2               	clrf	(?_printf+5)& (0+255),b
  6778  0007CA  C15C  F0F3         	movff	_time,?_printf+6
  6779  0007CE  6BF4               	clrf	(?_printf+7)& (0+255),b
  6780  0007D0  ECBD  F01A         	call	_printf	;wreg free
  6781  0007D4  0ED0               	movlw	208
  6782  0007D6  EC4C  F01B         	call	_lcdInst
  6783                           
  6784                           ;main.c: 595:                         printf("     0-Menu     ");
  6785  0007DA  0E50               	movlw	low STR_18
  6786  0007DC  0100               	movlb	0	; () banked
  6787  0007DE  6FED               	movwf	printf@fmt& (0+255),b
  6788  0007E0  0EFE               	movlw	high STR_18
  6789  0007E2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6790  0007E4  ECBD  F01A         	call	_printf	;wreg free
  6791  0007E8                     l7276:
  6792                           
  6793                           ;main.c: 598:                     tick++;
  6794  0007E8  0E01               	movlw	1
  6795  0007EA  0101               	movlb	1	; () banked
  6796  0007EC  2755               	addwf	UI_main@tick& (0+255),f,b
  6797  0007EE  0E00               	movlw	0
  6798  0007F0  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  6799  0007F2  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  6800  0007F4  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  6801  0007F6                     l7278:
  6802                           
  6803                           ; BSR set to: 1
  6804                           ;main.c: 571:                 while(~key_was_pressed){
  6805  0007F6  056D               	decf	_key_was_pressed& (0+255),w,b	;volatile
  6806  0007F8  A4D8               	btfss	status,2,c
  6807  0007FA  D758               	goto	l7232
  6808  0007FC                     u8000:
  6809                           
  6810                           ;main.c: 466:     while(sens==0){
  6811  0007FC  5060               	movf	_sens,w,c	;volatile
  6812  0007FE  1061               	iorwf	_sens+1,w,c	;volatile
  6813  000800  A4D8               	btfss	status,2,c
  6814  000802  0012               	return	
  6815  000804  D45B               	goto	l7058
  6816  000806                     __end_of_UI_main:
  6817                           	opt callstack 0
  6818                           
  6819 ;; *************** function _timer_main *****************
  6820 ;; Defined at:
  6821 ;;		line 28 in file "../timer.X/timer_main.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;		None
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;		None
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0, cstack
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;Total ram usage:        0 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; Hardware stack levels required when called:    8
  6842 ;; This function calls:
  6843 ;;		_TIMER_INIT
  6844 ;;		_initLCD
  6845 ;; This function is called by:
  6846 ;;		_UI_main
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text19
  6851  00366E                     __ptext19:
  6852                           	opt callstack 0
  6853  00366E                     _timer_main:
  6854                           	opt callstack 21
  6855                           
  6856                           ;../timer.X/timer_main.c: 29:     TRISD = 0x00;
  6857                           
  6858                           ;incstack = 0
  6859  00366E  0E00               	movlw	0
  6860  003670  6E95               	movwf	3989,c	;volatile
  6861                           
  6862                           ;../timer.X/timer_main.c: 30:     LATD = 0x00;
  6863  003672  0E00               	movlw	0
  6864  003674  6E8C               	movwf	3980,c	;volatile
  6865                           
  6866                           ;../timer.X/timer_main.c: 31:     initLCD();
  6867  003676  EC69  F017         	call	_initLCD	;wreg free
  6868                           
  6869                           ;../timer.X/timer_main.c: 34:     TIMER_INIT();
  6870  00367A  EC0B  F01B         	call	_TIMER_INIT	;wreg free
  6871                           
  6872                           ;../timer.X/timer_main.c: 35:     timer_count++;
  6873  00367E  4A64               	infsnz	_timer_count,f,c
  6874  003680  2A65               	incf	_timer_count+1,f,c
  6875  003682  0012               	return		;funcret
  6876  003684                     __end_of_timer_main:
  6877                           	opt callstack 0
  6878                           
  6879 ;; *************** function _initLCD *****************
  6880 ;; Defined at:
  6881 ;;		line 69 in file "lcd.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;		None
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;		None
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  1    wreg      void 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, status,0, cstack
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;Total ram usage:        1 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    7
  6902 ;; This function calls:
  6903 ;;		_lcdInst
  6904 ;;		_send_byte
  6905 ;;		_send_nibble
  6906 ;; This function is called by:
  6907 ;;		_UI_main
  6908 ;;		_main
  6909 ;;		_actuators_main
  6910 ;;		_timer_main
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           	psect	text20
  6915  002ED2                     __ptext20:
  6916                           	opt callstack 0
  6917  002ED2                     _initLCD:
  6918                           	opt callstack 23
  6919                           
  6920                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  6921                           
  6922                           ;incstack = 0
  6923  002ED2  0E31               	movlw	49
  6924  002ED4  0100               	movlb	0	; () banked
  6925  002ED6  6F84               	movwf	??_initLCD& (0+255),b
  6926  002ED8  0EB2               	movlw	178
  6927  002EDA                     u8867:
  6928  002EDA  2EE8               	decfsz	wreg,f,c
  6929  002EDC  D7FE               	bra	u8867
  6930  002EDE  2F84               	decfsz	??_initLCD& (0+255),f,b
  6931  002EE0  D7FC               	bra	u8867
  6932  002EE2  F000               	nop	
  6933                           
  6934                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  6935  002EE4  948C               	bcf	3980,2,c	;volatile
  6936                           
  6937                           ;lcd.c: 74:     send_nibble(0b0011);
  6938  002EE6  0E03               	movlw	3
  6939  002EE8  EC1E  F01B         	call	_send_nibble
  6940                           
  6941                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  6942  002EEC  0E11               	movlw	17
  6943  002EEE  0100               	movlb	0	; () banked
  6944  002EF0  6F84               	movwf	??_initLCD& (0+255),b
  6945  002EF2  0E3A               	movlw	58
  6946  002EF4                     u8877:
  6947  002EF4  2EE8               	decfsz	wreg,f,c
  6948  002EF6  D7FE               	bra	u8877
  6949  002EF8  2F84               	decfsz	??_initLCD& (0+255),f,b
  6950  002EFA  D7FC               	bra	u8877
  6951  002EFC  F000               	nop	
  6952                           
  6953                           ;lcd.c: 76:     send_nibble(0b0011);
  6954  002EFE  0E03               	movlw	3
  6955  002F00  EC1E  F01B         	call	_send_nibble
  6956                           
  6957                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  6958  002F04  0E7D               	movlw	125
  6959  002F06                     u8887:
  6960  002F06  2EE8               	decfsz	wreg,f,c
  6961  002F08  D7FE               	bra	u8887
  6962                           
  6963                           ;lcd.c: 78:     send_byte(0b00110010);
  6964  002F0A  0E32               	movlw	50
  6965  002F0C  EC2B  F01B         	call	_send_byte
  6966                           
  6967                           ;lcd.c: 80:     send_byte(0b00101000);
  6968  002F10  0E28               	movlw	40
  6969  002F12  EC2B  F01B         	call	_send_byte
  6970                           
  6971                           ;lcd.c: 81:     send_byte(0b00001000);
  6972  002F16  0E08               	movlw	8
  6973  002F18  EC2B  F01B         	call	_send_byte
  6974                           
  6975                           ;lcd.c: 82:     send_byte(0b00000001);
  6976  002F1C  0E01               	movlw	1
  6977  002F1E  EC2B  F01B         	call	_send_byte
  6978                           
  6979                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  6980  002F22  0E11               	movlw	17
  6981  002F24  0100               	movlb	0	; () banked
  6982  002F26  6F84               	movwf	??_initLCD& (0+255),b
  6983  002F28  0E3A               	movlw	58
  6984  002F2A                     u8897:
  6985  002F2A  2EE8               	decfsz	wreg,f,c
  6986  002F2C  D7FE               	bra	u8897
  6987  002F2E  2F84               	decfsz	??_initLCD& (0+255),f,b
  6988  002F30  D7FC               	bra	u8897
  6989  002F32  F000               	nop	
  6990                           
  6991                           ;lcd.c: 84:     send_byte(0b00000110);
  6992  002F34  0E06               	movlw	6
  6993  002F36  EC2B  F01B         	call	_send_byte
  6994                           
  6995                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  6996  002F3A  0E0F               	movlw	15
  6997  002F3C  EC4C  F01B         	call	_lcdInst
  6998  002F40  0012               	return		;funcret
  6999  002F42                     __end_of_initLCD:
  7000                           	opt callstack 0
  7001                           
  7002 ;; *************** function _lcdInst *****************
  7003 ;; Defined at:
  7004 ;;		line 64 in file "lcd.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  data            1    wreg     unsigned char 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;  data            1    3[BANK0 ] unsigned char 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  1    wreg      void 
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;Total ram usage:        1 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; Hardware stack levels required when called:    6
  7025 ;; This function calls:
  7026 ;;		_send_byte
  7027 ;; This function is called by:
  7028 ;;		_print_echo
  7029 ;;		_ultrasonic_main
  7030 ;;		_number_deploy
  7031 ;;		_UI_main
  7032 ;;		_main
  7033 ;;		_initLCD
  7034 ;;		_actuators_main
  7035 ;;		_lcd_shift_cursor
  7036 ;;		_lcd_shift_display
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text21
  7041  003698                     __ptext21:
  7042                           	opt callstack 0
  7043  003698                     _lcdInst:
  7044                           	opt callstack 22
  7045                           
  7046                           ;incstack = 0
  7047                           ;lcdInst@data stored from wreg
  7048  003698  0100               	movlb	0	; () banked
  7049  00369A  6F83               	movwf	lcdInst@data& (0+255),b
  7050                           
  7051                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  7052  00369C  948C               	bcf	3980,2,c	;volatile
  7053                           
  7054                           ;lcd.c: 66:     send_byte(data);
  7055  00369E  0100               	movlb	0	; () banked
  7056  0036A0  5183               	movf	lcdInst@data& (0+255),w,b
  7057  0036A2  EC2B  F01B         	call	_send_byte
  7058  0036A6  0012               	return		;funcret
  7059  0036A8                     __end_of_lcdInst:
  7060                           	opt callstack 0
  7061                           
  7062 ;; *************** function _TIMER_INIT *****************
  7063 ;; Defined at:
  7064 ;;		line 11 in file "../timer.X/timer_main.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;		None
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;		None
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;Total ram usage:        0 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    3
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_timer_main
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text22
  7093  003616                     __ptext22:
  7094                           	opt callstack 0
  7095  003616                     _TIMER_INIT:
  7096                           	opt callstack 25
  7097                           
  7098                           ;../timer.X/timer_main.c: 12:     TRISD = 0x00;
  7099                           
  7100                           ;incstack = 0
  7101  003616  0E00               	movlw	0
  7102  003618  6E95               	movwf	3989,c	;volatile
  7103                           
  7104                           ;../timer.X/timer_main.c: 13:     LATD = 0x00;
  7105  00361A  0E00               	movlw	0
  7106  00361C  6E8C               	movwf	3980,c	;volatile
  7107                           
  7108                           ;../timer.X/timer_main.c: 14:     T0CONbits.TMR0ON = 0;
  7109  00361E  9ED5               	bcf	4053,7,c	;volatile
  7110                           
  7111                           ;../timer.X/timer_main.c: 15:     T0CONbits.T08BIT = 0;
  7112  003620  9CD5               	bcf	4053,6,c	;volatile
  7113                           
  7114                           ;../timer.X/timer_main.c: 16:     T0CONbits.T0CS = 0;
  7115  003622  9AD5               	bcf	4053,5,c	;volatile
  7116                           
  7117                           ;../timer.X/timer_main.c: 17:     T0CONbits.PSA = 0;
  7118  003624  96D5               	bcf	4053,3,c	;volatile
  7119                           
  7120                           ;../timer.X/timer_main.c: 18:     T0CONbits.T0PS = 0b000;
  7121  003626  0EF8               	movlw	-8
  7122  003628  16D5               	andwf	4053,f,c	;volatile
  7123                           
  7124                           ;../timer.X/timer_main.c: 19:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000)) 
      +                          >> 8;
  7125  00362A  0EFB               	movlw	251
  7126  00362C  6ED7               	movwf	4055,c	;volatile
  7127                           
  7128                           ;../timer.X/timer_main.c: 20:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000));
  7129  00362E  0E1E               	movlw	30
  7130  003630  6ED6               	movwf	4054,c	;volatile
  7131                           
  7132                           ;../timer.X/timer_main.c: 21:     T0CONbits.TMR0ON = 1;
  7133  003632  8ED5               	bsf	4053,7,c	;volatile
  7134                           
  7135                           ;../timer.X/timer_main.c: 22:     INTCONbits.TMR0IE = 1;
  7136  003634  8AF2               	bsf	4082,5,c	;volatile
  7137                           
  7138                           ;../timer.X/timer_main.c: 24:     INTCONbits.GIE = 1;
  7139  003636  8EF2               	bsf	4082,7,c	;volatile
  7140                           
  7141                           ;../timer.X/timer_main.c: 25:     INTCONbits.PEIE = 1;
  7142  003638  8CF2               	bsf	4082,6,c	;volatile
  7143  00363A  0012               	return		;funcret
  7144  00363C                     __end_of_TIMER_INIT:
  7145                           	opt callstack 0
  7146                           
  7147 ;; *************** function _printf *****************
  7148 ;; Defined at:
  7149 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  7152 ;;		 -> STR_48(5), STR_47(10), STR_46(11), STR_45(13), 
  7153 ;;		 -> STR_44(10), STR_43(10), STR_42(11), STR_41(11), 
  7154 ;;		 -> STR_40(12), STR_39(17), STR_38(15), STR_37(15), 
  7155 ;;		 -> STR_36(12), STR_35(17), STR_34(12), STR_33(15), 
  7156 ;;		 -> STR_32(18), STR_31(17), STR_30(12), STR_29(15), 
  7157 ;;		 -> STR_28(18), STR_27(17), STR_26(14), STR_25(14), 
  7158 ;;		 -> STR_24(17), STR_23(3), STR_22(9), STR_21(16), 
  7159 ;;		 -> STR_20(3), STR_19(9), STR_18(17), STR_17(15), 
  7160 ;;		 -> STR_16(15), STR_15(12), STR_14(10), STR_13(15), 
  7161 ;;		 -> STR_12(12), STR_11(10), STR_10(16), STR_9(3), 
  7162 ;;		 -> STR_8(10), STR_7(17), STR_6(10), STR_5(16), 
  7163 ;;		 -> STR_4(10), STR_3(16), STR_2(10), STR_1(17), 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  ap              2  119[BANK0 ] PTR void [1]
  7166 ;;		 -> ?_printf(2), 
  7167 ;;  ret             2    0        int 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  2  109[BANK0 ] int 
  7170 ;; Registers used:
  7171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7177 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;Total ram usage:       12 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; Hardware stack levels required when called:   13
  7184 ;; This function calls:
  7185 ;;		_vfprintf
  7186 ;; This function is called by:
  7187 ;;		_print_echo
  7188 ;;		_ultrasonic_main
  7189 ;;		_number_deploy
  7190 ;;		_UI_main
  7191 ;;		_main
  7192 ;;		_actuators_main
  7193 ;;		_stepper2
  7194 ;;		_full_drive
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text23
  7199  00357A                     __ptext23:
  7200                           	opt callstack 0
  7201  00357A                     _printf:
  7202                           	opt callstack 16
  7203                           
  7204                           ;incstack = 0
  7205  00357A  0EEF               	movlw	low (?_printf+2)
  7206  00357C  0100               	movlb	0	; () banked
  7207  00357E  6FF7               	movwf	printf@ap& (0+255),b
  7208  003580  0E00               	movlw	high (?_printf+2)
  7209  003582  6FF8               	movwf	(printf@ap+1)& (0+255),b
  7210                           
  7211                           ; BSR set to: 0
  7212  003584  0E00               	movlw	0
  7213  003586  6FE5               	movwf	vfprintf@fp& (0+255),b
  7214  003588  0E00               	movlw	0
  7215  00358A  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  7216  00358C  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  7217  003590  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  7218  003594  0EF7               	movlw	low printf@ap
  7219  003596  6FE9               	movwf	vfprintf@ap& (0+255),b
  7220  003598  0E00               	movlw	high printf@ap
  7221  00359A  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  7222  00359C  EC97  F018         	call	_vfprintf	;wreg free
  7223  0035A0  0012               	return		;funcret
  7224  0035A2                     __end_of_printf:
  7225                           	opt callstack 0
  7226                           
  7227 ;; *************** function _vfprintf *****************
  7228 ;; Defined at:
  7229 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  7232 ;;		 -> NULL(0), 
  7233 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  7234 ;;		 -> STR_48(5), STR_47(10), STR_46(11), STR_45(13), 
  7235 ;;		 -> STR_44(10), STR_43(10), STR_42(11), STR_41(11), 
  7236 ;;		 -> STR_40(12), STR_39(17), STR_38(15), STR_37(15), 
  7237 ;;		 -> STR_36(12), STR_35(17), STR_34(12), STR_33(15), 
  7238 ;;		 -> STR_32(18), STR_31(17), STR_30(12), STR_29(15), 
  7239 ;;		 -> STR_28(18), STR_27(17), STR_26(14), STR_25(14), 
  7240 ;;		 -> STR_24(17), STR_23(3), STR_22(9), STR_21(16), 
  7241 ;;		 -> STR_20(3), STR_19(9), STR_18(17), STR_17(15), 
  7242 ;;		 -> STR_16(15), STR_15(12), STR_14(10), STR_13(15), 
  7243 ;;		 -> STR_12(12), STR_11(10), STR_10(16), STR_9(3), 
  7244 ;;		 -> STR_8(10), STR_7(17), STR_6(10), STR_5(16), 
  7245 ;;		 -> STR_4(10), STR_3(16), STR_2(10), STR_1(17), 
  7246 ;;  ap              2  105[BANK0 ] PTR PTR void 
  7247 ;;		 -> printf@ap(2), 
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  7250 ;;		 -> STR_48(5), STR_47(10), STR_46(11), STR_45(13), 
  7251 ;;		 -> STR_44(10), STR_43(10), STR_42(11), STR_41(11), 
  7252 ;;		 -> STR_40(12), STR_39(17), STR_38(15), STR_37(15), 
  7253 ;;		 -> STR_36(12), STR_35(17), STR_34(12), STR_33(15), 
  7254 ;;		 -> STR_32(18), STR_31(17), STR_30(12), STR_29(15), 
  7255 ;;		 -> STR_28(18), STR_27(17), STR_26(14), STR_25(14), 
  7256 ;;		 -> STR_24(17), STR_23(3), STR_22(9), STR_21(16), 
  7257 ;;		 -> STR_20(3), STR_19(9), STR_18(17), STR_17(15), 
  7258 ;;		 -> STR_16(15), STR_15(12), STR_14(10), STR_13(15), 
  7259 ;;		 -> STR_12(12), STR_11(10), STR_10(16), STR_9(3), 
  7260 ;;		 -> STR_8(10), STR_7(17), STR_6(10), STR_5(16), 
  7261 ;;		 -> STR_4(10), STR_3(16), STR_2(10), STR_1(17), 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  2  101[BANK0 ] int 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7271 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7272 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;Total ram usage:        8 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:   12
  7278 ;; This function calls:
  7279 ;;		_vfpfcnvrt
  7280 ;; This function is called by:
  7281 ;;		_printf
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           	psect	text24
  7286  00312E                     __ptext24:
  7287                           	opt callstack 0
  7288  00312E                     _vfprintf:
  7289                           	opt callstack 16
  7290                           
  7291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7292                           
  7293                           ;incstack = 0
  7294  00312E  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  7295  003132  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7296                           
  7297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7298  003136  0E00               	movlw	0
  7299  003138  6E51               	movwf	_nout+1,c
  7300  00313A  0E00               	movlw	0
  7301  00313C  6E50               	movwf	_nout,c
  7302                           
  7303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7304  00313E  D014               	goto	l6308
  7305  003140                     l6306:
  7306                           
  7307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7308  003140  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  7309  003144  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7310  003148  0EEB               	movlw	low vfprintf@cfmt
  7311  00314A  0100               	movlb	0	; () banked
  7312  00314C  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  7313  00314E  0E00               	movlw	high vfprintf@cfmt
  7314  003150  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7315  003152  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  7316  003156  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7317  00315A  EC8B  F008         	call	_vfpfcnvrt	;wreg free
  7318  00315E  0100               	movlb	0	; () banked
  7319  003160  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  7320  003162  2650               	addwf	_nout,f,c
  7321  003164  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7322  003166  2251               	addwfc	_nout+1,f,c
  7323  003168                     l6308:
  7324                           
  7325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7326  003168  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  7327  00316C  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7328  003170                     	if	0	;tblptru may be non-zero
  7329  003170                     	endif
  7330  003170                     	if	0	;tblptru may be non-zero
  7331  003170                     	endif
  7332  003170  0008               	tblrd		*
  7333  003172  50F5               	movf	tablat,w,c
  7334  003174  0900               	iorlw	0
  7335  003176  A4D8               	btfss	status,2,c
  7336  003178  D7E3               	goto	l6306
  7337                           
  7338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7339  00317A  C050  F0E5         	movff	_nout,?_vfprintf
  7340  00317E  C051  F0E6         	movff	_nout+1,?_vfprintf+1
  7341  003182  0012               	return		;funcret
  7342  003184                     __end_of_vfprintf:
  7343                           	opt callstack 0
  7344                           
  7345 ;; *************** function _vfpfcnvrt *****************
  7346 ;; Defined at:
  7347 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  7350 ;;		 -> NULL(0), 
  7351 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  7352 ;;		 -> vfprintf@cfmt(2), 
  7353 ;;  ap              2   74[BANK0 ] PTR PTR void 
  7354 ;;		 -> printf@ap(2), 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  llu             8   88[BANK0 ] unsigned long long 
  7357 ;;  ll              8   80[BANK0 ] long long 
  7358 ;;  f               4    0        long long 
  7359 ;;  vp              3    0        PTR void 
  7360 ;;  ct              3    0        unsigned char [3]
  7361 ;;  cp              3    0        PTR unsigned char 
  7362 ;;  done            2   97[BANK0 ] int 
  7363 ;;  i               2    0        int 
  7364 ;;  c               1   96[BANK0 ] unsigned char 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  2   70[BANK0 ] int 
  7367 ;; Registers used:
  7368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7374 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7376 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7377 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7378 ;;Total ram usage:       31 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:   11
  7381 ;; This function calls:
  7382 ;;		_atoi
  7383 ;;		_dtoa
  7384 ;;		_fputc
  7385 ;;		_isdigit
  7386 ;;		_xtoa
  7387 ;; This function is called by:
  7388 ;;		_vfprintf
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text25
  7393  001116                     __ptext25:
  7394                           	opt callstack 0
  7395  001116                     _vfpfcnvrt:
  7396                           	opt callstack 16
  7397                           
  7398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7399                           
  7400                           ;incstack = 0
  7401  001116  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7402  00111A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7403  00111E  CFDE FFF6          	movff	postinc2,tblptrl
  7404  001122  CFDD FFF7          	movff	postdec2,tblptrh
  7405  001126                     	if	0	;tblptru may be non-zero
  7406  001126                     	endif
  7407  001126                     	if	0	;tblptru may be non-zero
  7408  001126                     	endif
  7409  001126  0008               	tblrd		*
  7410  001128  50F5               	movf	tablat,w,c
  7411  00112A  0A25               	xorlw	37
  7412  00112C  A4D8               	btfss	status,2,c
  7413  00112E  D1AD               	goto	l6282
  7414                           
  7415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7416  001130  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7417  001134  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7418  001138  2ADE               	incf	postinc2,f,c
  7419  00113A  0E00               	movlw	0
  7420  00113C  22DD               	addwfc	postdec2,f,c
  7421                           
  7422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7423  00113E  0E00               	movlw	0
  7424  001140  6E53               	movwf	_width+1,c
  7425  001142  0E00               	movlw	0
  7426  001144  6E52               	movwf	_width,c
  7427  001146  C052  F056         	movff	_width,_flags
  7428  00114A  C053  F057         	movff	_width+1,_flags+1
  7429                           
  7430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7431  00114E  6854               	setf	_prec,c
  7432  001150  6855               	setf	_prec+1,c
  7433                           
  7434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  7435  001152  0E00               	movlw	0
  7436  001154  0100               	movlb	0	; () banked
  7437  001156  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7438  001158  0E00               	movlw	0
  7439  00115A  D014               	goto	L4
  7440  00115C                     l6194:
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  7444  00115C  8056               	bsf	_flags,0,c
  7445  00115E                     l6196:
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  7449  00115E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7450  001162  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7451  001166  2ADE               	incf	postinc2,f,c
  7452  001168  0E00               	movlw	0
  7453  00116A  22DD               	addwfc	postdec2,f,c
  7454                           
  7455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  7456  00116C  D02E               	goto	l6220
  7457  00116E                     l6198:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  7461  00116E  8256               	bsf	_flags,1,c
  7462  001170  D7F6               	goto	l6196
  7463  001172                     l6202:
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  7467  001172  8456               	bsf	_flags,2,c
  7468  001174  D7F4               	goto	l6196
  7469  001176                     l6206:
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  7473  001176  8656               	bsf	_flags,3,c
  7474  001178  D7F2               	goto	l6196
  7475  00117A                     l6210:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  7479  00117A  8856               	bsf	_flags,4,c
  7480  00117C  D7F0               	goto	l6196
  7481  00117E                     l6214:
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  7485  00117E  0E00               	movlw	0
  7486  001180  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7487  001182  0E01               	movlw	1
  7488  001184                     L4:
  7489  001184  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  7490                           
  7491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  7492  001186  D021               	goto	l6220
  7493  001188                     l6218:
  7494                           
  7495                           ; BSR set to: 0
  7496  001188  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7497  00118C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7498  001190  CFDE FFF6          	movff	postinc2,tblptrl
  7499  001194  CFDD FFF7          	movff	postdec2,tblptrh
  7500  001198                     	if	0	;tblptru may be non-zero
  7501  001198                     	endif
  7502  001198                     	if	0	;tblptru may be non-zero
  7503  001198                     	endif
  7504  001198  0008               	tblrd		*
  7505  00119A  50F5               	movf	tablat,w,c
  7506  00119C  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  7507  00119E  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7508                           
  7509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7510                           ; Switch size 1, requested type "simple"
  7511                           ; Number of cases is 1, Range of values is 0 to 0
  7512                           ; switch strategies available:
  7513                           ; Name         Instructions Cycles
  7514                           ; simple_byte            4     3 (average)
  7515                           ;	Chosen strategy is simple_byte
  7516  0011A0  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7517  0011A2  0A00               	xorlw	0	; case 0
  7518  0011A4  A4D8               	btfss	status,2,c
  7519  0011A6  D7EB               	goto	l6214
  7520                           
  7521                           ; BSR set to: 0
  7522                           ; Switch size 1, requested type "simple"
  7523                           ; Number of cases is 5, Range of values is 32 to 48
  7524                           ; switch strategies available:
  7525                           ; Name         Instructions Cycles
  7526                           ; simple_byte           16     9 (average)
  7527                           ;	Chosen strategy is simple_byte
  7528  0011A8  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  7529  0011AA  0A20               	xorlw	32	; case 32
  7530  0011AC  B4D8               	btfsc	status,2,c
  7531  0011AE  D7E3               	goto	l6206
  7532  0011B0  0A03               	xorlw	3	; case 35
  7533  0011B2  B4D8               	btfsc	status,2,c
  7534  0011B4  D7E2               	goto	l6210
  7535  0011B6  0A08               	xorlw	8	; case 43
  7536  0011B8  B4D8               	btfsc	status,2,c
  7537  0011BA  D7DB               	goto	l6202
  7538  0011BC  0A06               	xorlw	6	; case 45
  7539  0011BE  B4D8               	btfsc	status,2,c
  7540  0011C0  D7CD               	goto	l6194
  7541  0011C2  0A1D               	xorlw	29	; case 48
  7542  0011C4  B4D8               	btfsc	status,2,c
  7543  0011C6  D7D3               	goto	l6198
  7544  0011C8  D7DA               	goto	l6214
  7545  0011CA                     l6220:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7549  0011CA  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  7550  0011CC  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  7551  0011CE  B4D8               	btfsc	status,2,c
  7552  0011D0  D7DB               	goto	l6218
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  7556  0011D2  B056               	btfsc	_flags,0,c
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  7560  0011D4  9256               	bcf	_flags,1,c
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7564  0011D6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7565  0011DA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7566  0011DE  CFDE FFF6          	movff	postinc2,tblptrl
  7567  0011E2  CFDD FFF7          	movff	postdec2,tblptrh
  7568  0011E6                     	if	0	;tblptru may be non-zero
  7569  0011E6                     	endif
  7570  0011E6                     	if	0	;tblptru may be non-zero
  7571  0011E6                     	endif
  7572  0011E6  0008               	tblrd		*
  7573  0011E8  50F5               	movf	tablat,w,c
  7574  0011EA  0A2A               	xorlw	42
  7575  0011EC  A4D8               	btfss	status,2,c
  7576  0011EE  D023               	goto	l6232
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7580  0011F0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7581  0011F4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7582  0011F8  2ADE               	incf	postinc2,f,c
  7583  0011FA  0E00               	movlw	0
  7584  0011FC  22DD               	addwfc	postdec2,f,c
  7585                           
  7586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7587  0011FE  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7588  001202  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7589  001206  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  7590  00120A  0E02               	movlw	2
  7591  00120C  26DE               	addwf	postinc2,f,c
  7592  00120E  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  7593  001212  0E00               	movlw	0
  7594  001214  22DD               	addwfc	postdec2,f,c
  7595  001216  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7596  00121A  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7597  00121E  CFDE F052          	movff	postinc2,_width
  7598  001222  CFDD F053          	movff	postdec2,_width+1
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7602  001226  AE53               	btfss	_width+1,7,c
  7603  001228  D040               	goto	u6890
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7607  00122A  8056               	bsf	_flags,0,c
  7608                           
  7609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7610  00122C  6C52               	negf	_width,c
  7611  00122E  1E53               	comf	_width+1,f,c
  7612  001230  B0D8               	btfsc	status,0,c
  7613  001232  2A53               	incf	_width+1,f,c
  7614  001234  D03A               	goto	u6890
  7615  001236                     l6232:
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7619  001236  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7620  00123A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7621  00123E  CFDE F087          	movff	postinc2,atoi@s
  7622  001242  CFDD F088          	movff	postdec2,atoi@s+1
  7623  001246  EC33  F012         	call	_atoi	;wreg free
  7624  00124A  C087  F052         	movff	?_atoi,_width
  7625  00124E  C088  F053         	movff	?_atoi+1,_width+1
  7626                           
  7627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7628  001252  D007               	goto	l6236
  7629  001254                     l6234:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7633  001254  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7634  001258  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7635  00125C  2ADE               	incf	postinc2,f,c
  7636  00125E  0E00               	movlw	0
  7637  001260  22DD               	addwfc	postdec2,f,c
  7638  001262                     l6236:
  7639  001262  0ED0               	movlw	208
  7640  001264  0100               	movlb	0	; () banked
  7641  001266  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  7642  001268  0EFF               	movlw	255
  7643  00126A  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7644  00126C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7645  001270  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7646  001274  CFDE FFF6          	movff	postinc2,tblptrl
  7647  001278  CFDD FFF7          	movff	postdec2,tblptrh
  7648  00127C                     	if	0	;tblptru may be non-zero
  7649  00127C                     	endif
  7650  00127C                     	if	0	;tblptru may be non-zero
  7651  00127C                     	endif
  7652  00127C  0008               	tblrd		*
  7653  00127E  50F5               	movf	tablat,w,c
  7654  001280  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7655  001282  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7656  001284  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  7657  001286  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7658  001288  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7659  00128A  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7660  00128C  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7661  00128E  E106               	bnz	u6870
  7662  001290  0E0A               	movlw	10
  7663  001292  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7664  001294  B0D8               	btfsc	status,0,c
  7665  001296  D002               	goto	u6870
  7666  001298  0E01               	movlw	1
  7667  00129A  D001               	goto	u6880
  7668  00129C                     u6870:
  7669  00129C  0E00               	movlw	0
  7670  00129E                     u6880:
  7671  00129E  6FE3               	movwf	_vfpfcnvrt$1109& (0+255),b
  7672  0012A0  6BE4               	clrf	(_vfpfcnvrt$1109+1)& (0+255),b
  7673                           
  7674                           ; BSR set to: 0
  7675  0012A2  51E3               	movf	_vfpfcnvrt$1109& (0+255),w,b
  7676  0012A4  11E4               	iorwf	(_vfpfcnvrt$1109+1)& (0+255),w,b
  7677  0012A6  A4D8               	btfss	status,2,c
  7678  0012A8  D7D5               	goto	l6234
  7679  0012AA                     u6890:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7683  0012AA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7684  0012AE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7685  0012B2  CFDE FFF6          	movff	postinc2,tblptrl
  7686  0012B6  CFDD FFF7          	movff	postdec2,tblptrh
  7687  0012BA                     	if	0	;tblptru may be non-zero
  7688  0012BA                     	endif
  7689  0012BA                     	if	0	;tblptru may be non-zero
  7690  0012BA                     	endif
  7691  0012BA  0008               	tblrd		*
  7692  0012BC  50F5               	movf	tablat,w,c
  7693  0012BE  0A64               	xorlw	100
  7694  0012C0  B4D8               	btfsc	status,2,c
  7695  0012C2  D00D               	goto	u6910
  7696                           
  7697                           ; BSR set to: 0
  7698  0012C4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7699  0012C8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7700  0012CC  CFDE FFF6          	movff	postinc2,tblptrl
  7701  0012D0  CFDD FFF7          	movff	postdec2,tblptrh
  7702  0012D4                     	if	0	;tblptru may be non-zero
  7703  0012D4                     	endif
  7704  0012D4                     	if	0	;tblptru may be non-zero
  7705  0012D4                     	endif
  7706  0012D4  0008               	tblrd		*
  7707  0012D6  50F5               	movf	tablat,w,c
  7708  0012D8  0A69               	xorlw	105
  7709  0012DA  A4D8               	btfss	status,2,c
  7710  0012DC  D03F               	goto	l6252
  7711  0012DE                     u6910:
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  7715  0012DE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7716  0012E2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7717  0012E6  2ADE               	incf	postinc2,f,c
  7718  0012E8  0E00               	movlw	0
  7719  0012EA  22DD               	addwfc	postdec2,f,c
  7720                           
  7721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7722  0012EC  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7723  0012F0  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7724  0012F4  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  7725  0012F8  0E02               	movlw	2
  7726  0012FA  26DE               	addwf	postinc2,f,c
  7727  0012FC  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  7728  001300  0E00               	movlw	0
  7729  001302  22DD               	addwfc	postdec2,f,c
  7730  001304  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7731  001308  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7732  00130C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  7733  001310  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  7734  001314  0E00               	movlw	0
  7735  001316  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7736  001318  0EFF               	movlw	-1
  7737  00131A  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7738  00131C  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7739  00131E  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7740  001320  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7741  001322  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7742  001324  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  7746  001326  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  7747  00132A  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7748  00132E  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  7749  001332  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7750  001336  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7751  00133A  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7752  00133E  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7753  001342  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7754  001346  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7755  00134A  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7756  00134E  EC46  F00D         	call	_dtoa	;wreg free
  7757  001352  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  7758  001356  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7759  00135A  0012               	return	
  7760  00135C                     l6252:
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  7764  00135C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7765  001360  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7766  001364  CFDE FFF6          	movff	postinc2,tblptrl
  7767  001368  CFDD FFF7          	movff	postdec2,tblptrh
  7768  00136C                     	if	0	;tblptru may be non-zero
  7769  00136C                     	endif
  7770  00136C                     	if	0	;tblptru may be non-zero
  7771  00136C                     	endif
  7772  00136C  0008               	tblrd		*
  7773  00136E  50F5               	movf	tablat,w,c
  7774  001370  0A78               	xorlw	120
  7775  001372  B4D8               	btfsc	status,2,c
  7776  001374  D00D               	goto	u6930
  7777                           
  7778                           ; BSR set to: 0
  7779  001376  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7780  00137A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7781  00137E  CFDE FFF6          	movff	postinc2,tblptrl
  7782  001382  CFDD FFF7          	movff	postdec2,tblptrh
  7783  001386                     	if	0	;tblptru may be non-zero
  7784  001386                     	endif
  7785  001386                     	if	0	;tblptru may be non-zero
  7786  001386                     	endif
  7787  001386  0008               	tblrd		*
  7788  001388  50F5               	movf	tablat,w,c
  7789  00138A  0A58               	xorlw	88
  7790  00138C  A4D8               	btfss	status,2,c
  7791  00138E  D04D               	goto	l6266
  7792  001390                     u6930:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  7796  001390  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7797  001394  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7798  001398  CFDE FFF6          	movff	postinc2,tblptrl
  7799  00139C  CFDD FFF7          	movff	postdec2,tblptrh
  7800  0013A0                     	if	0	;tblptru may be non-zero
  7801  0013A0                     	endif
  7802  0013A0                     	if	0	;tblptru may be non-zero
  7803  0013A0                     	endif
  7804  0013A0  0008               	tblrd		*
  7805  0013A2  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  7809  0013A6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7810  0013AA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7811  0013AE  2ADE               	incf	postinc2,f,c
  7812  0013B0  0E00               	movlw	0
  7813  0013B2  22DD               	addwfc	postdec2,f,c
  7814                           
  7815                           ; BSR set to: 0
  7816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  7817  0013B4  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7818  0013B8  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7819  0013BC  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  7820  0013C0  0E02               	movlw	2
  7821  0013C2  26DE               	addwf	postinc2,f,c
  7822  0013C4  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  7823  0013C8  0E00               	movlw	0
  7824  0013CA  22DD               	addwfc	postdec2,f,c
  7825  0013CC  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7826  0013D0  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7827  0013D4  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  7828  0013D8  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  7829  0013DC  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7830  0013E0  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7831  0013E4  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7832  0013E6  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7833  0013E8  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7834  0013EA  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7835  0013EC  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7836  0013EE  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  7840  0013F0  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  7841  0013F4  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  7842  0013F8  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  7843  0013FC  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  7844  001400  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  7845  001404  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  7846  001408  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  7847  00140C  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  7848  001410  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  7849  001414  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  7850  001418  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  7851  00141C  EC6A  F00E         	call	_xtoa	;wreg free
  7852  001420  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  7853  001424  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  7854  001428  0012               	return	
  7855  00142A                     l6266:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7859  00142A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7860  00142E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7861  001432  CFDE FFF6          	movff	postinc2,tblptrl
  7862  001436  CFDD FFF7          	movff	postdec2,tblptrh
  7863  00143A                     	if	0	;tblptru may be non-zero
  7864  00143A                     	endif
  7865  00143A                     	if	0	;tblptru may be non-zero
  7866  00143A                     	endif
  7867  00143A  0008               	tblrd		*
  7868  00143C  50F5               	movf	tablat,w,c
  7869  00143E  0A25               	xorlw	37
  7870  001440  A4D8               	btfss	status,2,c
  7871  001442  D017               	goto	l6276
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7875  001444  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7876  001448  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7877  00144C  2ADE               	incf	postinc2,f,c
  7878  00144E  0E00               	movlw	0
  7879  001450  22DD               	addwfc	postdec2,f,c
  7880                           
  7881                           ; BSR set to: 0
  7882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7883  001452  0E00               	movlw	0
  7884  001454  6F85               	movwf	(fputc@c+1)& (0+255),b
  7885  001456  0E25               	movlw	37
  7886  001458  6F84               	movwf	fputc@c& (0+255),b
  7887  00145A  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  7888  00145E  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7889  001462  ECA1  F017         	call	_fputc	;wreg free
  7890  001466                     l6272:
  7891                           
  7892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7893  001466  0E00               	movlw	0
  7894  001468  0100               	movlb	0	; () banked
  7895  00146A  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7896  00146C  0E01               	movlw	1
  7897  00146E  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  7898  001470  0012               	return	
  7899  001472                     l6276:
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7903  001472  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7904  001476  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7905  00147A  2ADE               	incf	postinc2,f,c
  7906  00147C  0E00               	movlw	0
  7907  00147E  22DD               	addwfc	postdec2,f,c
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  7911  001480  0E00               	movlw	0
  7912  001482  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7913  001484  0E00               	movlw	0
  7914  001486  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  7915  001488  0012               	return	
  7916  00148A                     l6282:
  7917                           
  7918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7919  00148A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7920  00148E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7921  001492  CFDE FFF6          	movff	postinc2,tblptrl
  7922  001496  CFDD FFF7          	movff	postdec2,tblptrh
  7923  00149A                     	if	0	;tblptru may be non-zero
  7924  00149A                     	endif
  7925  00149A                     	if	0	;tblptru may be non-zero
  7926  00149A                     	endif
  7927  00149A  0008               	tblrd		*
  7928  00149C  50F5               	movf	tablat,w,c
  7929  00149E  0100               	movlb	0	; () banked
  7930  0014A0  6F84               	movwf	fputc@c& (0+255),b
  7931  0014A2  6B85               	clrf	(fputc@c+1)& (0+255),b
  7932  0014A4  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  7933  0014A8  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7934  0014AC  ECA1  F017         	call	_fputc	;wreg free
  7935                           
  7936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7937  0014B0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7938  0014B4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7939  0014B8  2ADE               	incf	postinc2,f,c
  7940  0014BA  0E00               	movlw	0
  7941  0014BC  22DD               	addwfc	postdec2,f,c
  7942  0014BE  D7D3               	goto	l6272
  7943  0014C0                     __end_of_vfpfcnvrt:
  7944                           	opt callstack 0
  7945                           
  7946 ;; *************** function _xtoa *****************
  7947 ;; Defined at:
  7948 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  7951 ;;		 -> NULL(0), 
  7952 ;;  d               8   33[BANK0 ] unsigned long long 
  7953 ;;  x               1   41[BANK0 ] unsigned char 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  n               8   58[BANK0 ] unsigned long long 
  7956 ;;  c               2   68[BANK0 ] int 
  7957 ;;  i               2   66[BANK0 ] int 
  7958 ;;  w               2   56[BANK0 ] int 
  7959 ;;  p               2   54[BANK0 ] int 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  2   31[BANK0 ] int 
  7962 ;; Registers used:
  7963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7969 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7970 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7971 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;Total ram usage:       39 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:   10
  7976 ;; This function calls:
  7977 ;;		_isalpha
  7978 ;;		_isupper
  7979 ;;		_pad
  7980 ;;		_toupper
  7981 ;; This function is called by:
  7982 ;;		_vfpfcnvrt
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text26
  7987  001CD4                     __ptext26:
  7988                           	opt callstack 0
  7989  001CD4                     _xtoa:
  7990                           	opt callstack 16
  7991                           
  7992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7993                           
  7994                           ;incstack = 0
  7995  001CD4  AE55               	btfss	_prec+1,7,c
  7996                           
  7997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7998  001CD6  9256               	bcf	_flags,1,c
  7999                           
  8000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  8001  001CD8  BE55               	btfsc	_prec+1,7,c
  8002  001CDA  D005               	goto	u6590
  8003  001CDC  5055               	movf	_prec+1,w,c
  8004  001CDE  E109               	bnz	l616
  8005  001CE0  0454               	decf	_prec,w,c
  8006  001CE2  B0D8               	btfsc	status,0,c
  8007  001CE4  D006               	goto	l616
  8008  001CE6                     u6590:
  8009  001CE6  0E00               	movlw	0
  8010  001CE8  0100               	movlb	0	; () banked
  8011  001CEA  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  8012  001CEC  0E01               	movlw	1
  8013  001CEE  6FB6               	movwf	xtoa@p& (0+255),b
  8014  001CF0  D004               	goto	l618
  8015  001CF2                     l616:
  8016  001CF2  C054  F0B6         	movff	_prec,xtoa@p
  8017  001CF6  C055  F0B7         	movff	_prec+1,xtoa@p+1
  8018  001CFA                     l618:
  8019                           
  8020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  8021  001CFA  C052  F0B8         	movff	_width,xtoa@w
  8022  001CFE  C053  F0B9         	movff	_width+1,xtoa@w+1
  8023                           
  8024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  8025  001D02  A856               	btfss	_flags,4,c
  8026  001D04  D005               	goto	l6086
  8027                           
  8028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  8029  001D06  0100               	movlb	0	; () banked
  8030  001D08  0EFE               	movlw	254
  8031  001D0A  27B8               	addwf	xtoa@w& (0+255),f,b
  8032  001D0C  0EFF               	movlw	255
  8033  001D0E  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  8034  001D10                     l6086:
  8035                           
  8036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  8037  001D10  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  8038  001D14  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  8039  001D18  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  8040  001D1C  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  8041  001D20  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  8042  001D24  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  8043  001D28  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  8044  001D2C  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  8045                           
  8046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  8047  001D30  0E00               	movlw	0
  8048  001D32  0100               	movlb	0	; () banked
  8049  001D34  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  8050  001D36  0E1F               	movlw	31
  8051  001D38  6FC2               	movwf	xtoa@i& (0+255),b
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  8055  001D3A  0E00               	movlw	0
  8056  001D3C  0102               	movlb	2	; () banked
  8057  001D3E  6F77               	movwf	(_dbuf+31)& (0+255),b
  8058                           
  8059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8060  001D40  D094               	goto	l6122
  8061  001D42                     l6092:
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  8065  001D42  07C2               	decf	xtoa@i& (0+255),f,b
  8066  001D44  A0D8               	btfss	status,0,c
  8067  001D46  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  8071  001D48  0E0F               	movlw	15
  8072  001D4A  15BA               	andwf	xtoa@n& (0+255),w,b
  8073  001D4C  6FC4               	movwf	xtoa@c& (0+255),b
  8074  001D4E  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  8078  001D50  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  8079  001D52  D008               	goto	l6100
  8080  001D54  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  8081  001D56  E104               	bnz	u6610
  8082  001D58  0E0A               	movlw	10
  8083  001D5A  5DC4               	subwf	xtoa@c& (0+255),w,b
  8084  001D5C  A0D8               	btfss	status,0,c
  8085  001D5E  D002               	goto	l6100
  8086  001D60                     u6610:
  8087                           
  8088                           ; BSR set to: 0
  8089  001D60  0E57               	movlw	87
  8090  001D62  D001               	goto	L5
  8091  001D64                     l6100:
  8092                           
  8093                           ; BSR set to: 0
  8094  001D64  0E30               	movlw	48
  8095  001D66                     L5:
  8096  001D66  25C4               	addwf	xtoa@c& (0+255),w,b
  8097  001D68  6FC4               	movwf	xtoa@c& (0+255),b
  8098  001D6A  0E00               	movlw	0
  8099  001D6C  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  8100  001D6E  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  8101                           
  8102                           ; BSR set to: 0
  8103                           
  8104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  8105  001D70  0EBF               	movlw	191
  8106  001D72  6FAA               	movwf	??_xtoa& (0+255),b
  8107  001D74  0EFF               	movlw	255
  8108  001D76  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8109  001D78  51A9               	movf	xtoa@x& (0+255),w,b
  8110  001D7A  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8111  001D7C  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  8112  001D7E  51AA               	movf	??_xtoa& (0+255),w,b
  8113  001D80  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8114  001D82  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8115  001D84  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8116  001D86  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8117  001D88  E106               	bnz	u6620
  8118  001D8A  0E1A               	movlw	26
  8119  001D8C  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8120  001D8E  B0D8               	btfsc	status,0,c
  8121  001D90  D002               	goto	u6620
  8122  001D92  0E01               	movlw	1
  8123  001D94  D001               	goto	u6630
  8124  001D96                     u6620:
  8125  001D96  0E00               	movlw	0
  8126  001D98                     u6630:
  8127  001D98  6FB2               	movwf	_xtoa$1094& (0+255),b
  8128  001D9A  6BB3               	clrf	(_xtoa$1094+1)& (0+255),b
  8129                           
  8130                           ; BSR set to: 0
  8131  001D9C  51B2               	movf	_xtoa$1094& (0+255),w,b
  8132  001D9E  11B3               	iorwf	(_xtoa$1094+1)& (0+255),w,b
  8133  001DA0  B4D8               	btfsc	status,2,c
  8134  001DA2  D027               	goto	l6114
  8135                           
  8136                           ; BSR set to: 0
  8137  001DA4  0E9F               	movlw	159
  8138  001DA6  6FAA               	movwf	??_xtoa& (0+255),b
  8139  001DA8  0EFF               	movlw	255
  8140  001DAA  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8141  001DAC  0E20               	movlw	32
  8142  001DAE  11C4               	iorwf	xtoa@c& (0+255),w,b
  8143  001DB0  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8144  001DB2  0E00               	movlw	0
  8145  001DB4  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  8146  001DB6  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  8147  001DB8  51AA               	movf	??_xtoa& (0+255),w,b
  8148  001DBA  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8149  001DBC  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8150  001DBE  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8151  001DC0  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8152  001DC2  E106               	bnz	u6650
  8153  001DC4  0E1A               	movlw	26
  8154  001DC6  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8155  001DC8  B0D8               	btfsc	status,0,c
  8156  001DCA  D002               	goto	u6650
  8157  001DCC  0E01               	movlw	1
  8158  001DCE  D001               	goto	u6660
  8159  001DD0                     u6650:
  8160  001DD0  0E00               	movlw	0
  8161  001DD2                     u6660:
  8162  001DD2  6FB4               	movwf	_xtoa$1095& (0+255),b
  8163  001DD4  6BB5               	clrf	(_xtoa$1095+1)& (0+255),b
  8164                           
  8165                           ; BSR set to: 0
  8166  001DD6  51B4               	movf	_xtoa$1095& (0+255),w,b
  8167  001DD8  11B5               	iorwf	(_xtoa$1095+1)& (0+255),w,b
  8168  001DDA  B4D8               	btfsc	status,2,c
  8169  001DDC  D00A               	goto	l6114
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  8173  001DDE  C0C4  F086         	movff	xtoa@c,toupper@c
  8174  001DE2  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  8175  001DE6  EC67  F019         	call	_toupper	;wreg free
  8176  001DEA  C086  F0C4         	movff	?_toupper,xtoa@c
  8177  001DEE  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  8178  001DF2                     l6114:
  8179                           
  8180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  8181  001DF2  0E58               	movlw	low _dbuf
  8182  001DF4  0100               	movlb	0	; () banked
  8183  001DF6  25C2               	addwf	xtoa@i& (0+255),w,b
  8184  001DF8  6ED9               	movwf	fsr2l,c
  8185  001DFA  0E02               	movlw	high _dbuf
  8186  001DFC  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8187  001DFE  6EDA               	movwf	fsr2h,c
  8188  001E00  C0C4  FFDF         	movff	xtoa@c,indf2
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  8192  001E04  07B6               	decf	xtoa@p& (0+255),f,b
  8193  001E06  A0D8               	btfss	status,0,c
  8194  001E08  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  8198  001E0A  07B8               	decf	xtoa@w& (0+255),f,b
  8199  001E0C  A0D8               	btfss	status,0,c
  8200  001E0E  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  8204  001E10  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  8205  001E14  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  8206  001E18  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  8207  001E1C  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  8208  001E20  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  8209  001E24  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  8210  001E28  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  8211  001E2C  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  8212  001E30  0E05               	movlw	5
  8213  001E32  D009               	goto	u6680
  8214  001E34                     u6685:
  8215  001E34  90D8               	bcf	status,0,c
  8216  001E36  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  8217  001E38  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  8218  001E3A  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  8219  001E3C  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  8220  001E3E  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  8221  001E40  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  8222  001E42  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  8223  001E44  33AA               	rrcf	??_xtoa& (0+255),f,b
  8224  001E46                     u6680:
  8225  001E46  2EE8               	decfsz	wreg,f,c
  8226  001E48  D7F5               	goto	u6685
  8227  001E4A  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  8228  001E4E  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  8229  001E52  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  8230  001E56  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  8231  001E5A  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  8232  001E5E  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  8233  001E62  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  8234  001E66  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  8235  001E6A                     l6122:
  8236                           
  8237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8238  001E6A  0100               	movlb	0	; () banked
  8239  001E6C  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  8240  001E6E  D020               	goto	u6730
  8241  001E70  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  8242  001E72  E104               	bnz	u6690
  8243  001E74  0E02               	movlw	2
  8244  001E76  5DC2               	subwf	xtoa@i& (0+255),w,b
  8245  001E78  A0D8               	btfss	status,0,c
  8246  001E7A  D01A               	goto	u6730
  8247  001E7C                     u6690:
  8248                           
  8249                           ; BSR set to: 0
  8250  001E7C  51BA               	movf	xtoa@n& (0+255),w,b
  8251  001E7E  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  8252  001E80  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  8253  001E82  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  8254  001E84  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  8255  001E86  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  8256  001E88  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  8257  001E8A  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  8258  001E8C  A4D8               	btfss	status,2,c
  8259  001E8E  D759               	goto	l6092
  8260                           
  8261                           ; BSR set to: 0
  8262  001E90  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  8263  001E92  D005               	goto	u6710
  8264  001E94  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  8265  001E96  E102               	bnz	u6711
  8266  001E98  05B6               	decf	xtoa@p& (0+255),w,b
  8267  001E9A  B0D8               	btfsc	status,0,c
  8268  001E9C                     u6711:
  8269  001E9C  D752               	goto	l6092
  8270  001E9E                     u6710:
  8271                           
  8272                           ; BSR set to: 0
  8273  001E9E  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  8274  001EA0  D007               	goto	u6730
  8275  001EA2  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  8276  001EA4  E103               	bnz	u6720
  8277  001EA6  05B8               	decf	xtoa@w& (0+255),w,b
  8278  001EA8  A0D8               	btfss	status,0,c
  8279  001EAA  D002               	goto	u6730
  8280  001EAC                     u6720:
  8281                           
  8282                           ; BSR set to: 0
  8283  001EAC  B256               	btfsc	_flags,1,c
  8284  001EAE  D749               	goto	l6092
  8285  001EB0                     u6730:
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  8289  001EB0  A856               	btfss	_flags,4,c
  8290  001EB2  D016               	goto	l6138
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  8294  001EB4  07C2               	decf	xtoa@i& (0+255),f,b
  8295  001EB6  A0D8               	btfss	status,0,c
  8296  001EB8  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  8300  001EBA  0E58               	movlw	low _dbuf
  8301  001EBC  25C2               	addwf	xtoa@i& (0+255),w,b
  8302  001EBE  6ED9               	movwf	fsr2l,c
  8303  001EC0  0E02               	movlw	high _dbuf
  8304  001EC2  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8305  001EC4  6EDA               	movwf	fsr2h,c
  8306  001EC6  C0A9  FFDF         	movff	xtoa@x,indf2
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  8310  001ECA  07C2               	decf	xtoa@i& (0+255),f,b
  8311  001ECC  A0D8               	btfss	status,0,c
  8312  001ECE  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8313                           
  8314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  8315  001ED0  0E58               	movlw	low _dbuf
  8316  001ED2  25C2               	addwf	xtoa@i& (0+255),w,b
  8317  001ED4  6ED9               	movwf	fsr2l,c
  8318  001ED6  0E02               	movlw	high _dbuf
  8319  001ED8  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8320  001EDA  6EDA               	movwf	fsr2h,c
  8321  001EDC  0E30               	movlw	48
  8322  001EDE  6EDF               	movwf	indf2,c
  8323  001EE0                     l6138:
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  8327  001EE0  C09F  F094         	movff	xtoa@fp,pad@fp
  8328  001EE4  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  8329  001EE8  0E58               	movlw	low _dbuf
  8330  001EEA  25C2               	addwf	xtoa@i& (0+255),w,b
  8331  001EEC  6F96               	movwf	pad@buf& (0+255),b
  8332  001EEE  0E02               	movlw	high _dbuf
  8333  001EF0  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8334  001EF2  6F97               	movwf	(pad@buf+1)& (0+255),b
  8335  001EF4  C0B8  F098         	movff	xtoa@w,pad@p
  8336  001EF8  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  8337  001EFC  ECCF  F015         	call	_pad	;wreg free
  8338  001F00  C094  F09F         	movff	?_pad,?_xtoa
  8339  001F04  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  8340  001F08  0012               	return		;funcret
  8341  001F0A                     __end_of_xtoa:
  8342                           	opt callstack 0
  8343                           
  8344 ;; *************** function _toupper *****************
  8345 ;; Defined at:
  8346 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  c               2    6[BANK0 ] int 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  2    6[BANK0 ] int 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8361 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8362 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8363 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;Total ram usage:        8 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    4
  8367 ;; This function calls:
  8368 ;;		_islower
  8369 ;; This function is called by:
  8370 ;;		_xtoa
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text27
  8375  0032CE                     __ptext27:
  8376                           	opt callstack 0
  8377  0032CE                     _toupper:
  8378                           	opt callstack 21
  8379                           
  8380                           ;incstack = 0
  8381  0032CE  0E9F               	movlw	159
  8382  0032D0  0100               	movlb	0	; () banked
  8383  0032D2  6F88               	movwf	??_toupper& (0+255),b
  8384  0032D4  0EFF               	movlw	255
  8385  0032D6  6F89               	movwf	(??_toupper+1)& (0+255),b
  8386  0032D8  C086  F08A         	movff	toupper@c,??_toupper+2
  8387  0032DC  C087  F08B         	movff	toupper@c+1,??_toupper+3
  8388  0032E0  5188               	movf	??_toupper& (0+255),w,b
  8389  0032E2  278A               	addwf	(??_toupper+2)& (0+255),f,b
  8390  0032E4  5189               	movf	(??_toupper+1)& (0+255),w,b
  8391  0032E6  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  8392  0032E8  518B               	movf	(??_toupper+3)& (0+255),w,b
  8393  0032EA  E106               	bnz	u6230
  8394  0032EC  0E1A               	movlw	26
  8395  0032EE  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  8396  0032F0  B0D8               	btfsc	status,0,c
  8397  0032F2  D002               	goto	u6230
  8398  0032F4  0E01               	movlw	1
  8399  0032F6  D001               	goto	u6240
  8400  0032F8                     u6230:
  8401  0032F8  0E00               	movlw	0
  8402  0032FA                     u6240:
  8403  0032FA  6F8C               	movwf	_toupper$1659& (0+255),b
  8404  0032FC  6B8D               	clrf	(_toupper$1659+1)& (0+255),b
  8405                           
  8406                           ; BSR set to: 0
  8407  0032FE  518C               	movf	_toupper$1659& (0+255),w,b
  8408  003300  118D               	iorwf	(_toupper$1659+1)& (0+255),w,b
  8409  003302  B4D8               	btfsc	status,2,c
  8410  003304  D005               	goto	l1456
  8411                           
  8412                           ; BSR set to: 0
  8413  003306  0E5F               	movlw	95
  8414  003308  1586               	andwf	toupper@c& (0+255),w,b
  8415  00330A  6F86               	movwf	?_toupper& (0+255),b
  8416  00330C  6B87               	clrf	(?_toupper+1)& (0+255),b
  8417  00330E  0012               	return	
  8418  003310                     l1456:
  8419                           
  8420                           ; BSR set to: 0
  8421  003310  C086  F086         	movff	toupper@c,?_toupper
  8422  003314  C087  F087         	movff	toupper@c+1,?_toupper+1
  8423                           
  8424                           ; BSR set to: 0
  8425  003318  0012               	return		;funcret
  8426  00331A                     __end_of_toupper:
  8427                           	opt callstack 0
  8428                           
  8429 ;; *************** function _islower *****************
  8430 ;; Defined at:
  8431 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;  c               2    0[BANK0 ] int 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  2    0[BANK0 ] int 
  8438 ;; Registers used:
  8439 ;;		wreg, status,2, status,0
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;Total ram usage:        6 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:    3
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_toupper
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text28
  8460  003432                     __ptext28:
  8461                           	opt callstack 0
  8462  003432                     _islower:
  8463                           	opt callstack 21
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;incstack = 0
  8467  003432  0E9F               	movlw	159
  8468  003434  0100               	movlb	0	; () banked
  8469  003436  6F82               	movwf	??_islower& (0+255),b
  8470  003438  0EFF               	movlw	255
  8471  00343A  6F83               	movwf	(??_islower+1)& (0+255),b
  8472  00343C  C080  F084         	movff	islower@c,??_islower+2
  8473  003440  C081  F085         	movff	islower@c+1,??_islower+3
  8474  003444  5182               	movf	??_islower& (0+255),w,b
  8475  003446  2784               	addwf	(??_islower+2)& (0+255),f,b
  8476  003448  5183               	movf	(??_islower+1)& (0+255),w,b
  8477  00344A  2385               	addwfc	(??_islower+3)& (0+255),f,b
  8478  00344C  5185               	movf	(??_islower+3)& (0+255),w,b
  8479  00344E  E106               	bnz	u6120
  8480  003450  0E1A               	movlw	26
  8481  003452  5D84               	subwf	(??_islower+2)& (0+255),w,b
  8482  003454  B0D8               	btfsc	status,0,c
  8483  003456  D002               	goto	u6120
  8484  003458  0E01               	movlw	1
  8485  00345A  D001               	goto	u6130
  8486  00345C                     u6120:
  8487  00345C  0E00               	movlw	0
  8488  00345E                     u6130:
  8489  00345E  6F80               	movwf	?_islower& (0+255),b
  8490  003460  6B81               	clrf	(?_islower+1)& (0+255),b
  8491                           
  8492                           ; BSR set to: 0
  8493  003462  0012               	return		;funcret
  8494  003464                     __end_of_islower:
  8495                           	opt callstack 0
  8496                           
  8497 ;; *************** function _isupper *****************
  8498 ;; Defined at:
  8499 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;  c               2    0[BANK0 ] int 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;		None
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  2    0[BANK0 ] int 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8515 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;Total ram usage:        6 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    3
  8520 ;; This function calls:
  8521 ;;		Nothing
  8522 ;; This function is called by:
  8523 ;;		_xtoa
  8524 ;; This function uses a non-reentrant model
  8525 ;;
  8526                           
  8527                           	psect	text29
  8528  003464                     __ptext29:
  8529                           	opt callstack 0
  8530  003464                     _isupper:
  8531                           	opt callstack 22
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;incstack = 0
  8535  003464  0EBF               	movlw	191
  8536  003466  0100               	movlb	0	; () banked
  8537  003468  6F82               	movwf	??_isupper& (0+255),b
  8538  00346A  0EFF               	movlw	255
  8539  00346C  6F83               	movwf	(??_isupper+1)& (0+255),b
  8540  00346E  C080  F084         	movff	isupper@c,??_isupper+2
  8541  003472  C081  F085         	movff	isupper@c+1,??_isupper+3
  8542  003476  5182               	movf	??_isupper& (0+255),w,b
  8543  003478  2784               	addwf	(??_isupper+2)& (0+255),f,b
  8544  00347A  5183               	movf	(??_isupper+1)& (0+255),w,b
  8545  00347C  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  8546  00347E  5185               	movf	(??_isupper+3)& (0+255),w,b
  8547  003480  E106               	bnz	u6190
  8548  003482  0E1A               	movlw	26
  8549  003484  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  8550  003486  B0D8               	btfsc	status,0,c
  8551  003488  D002               	goto	u6190
  8552  00348A  0E01               	movlw	1
  8553  00348C  D001               	goto	u6200
  8554  00348E                     u6190:
  8555  00348E  0E00               	movlw	0
  8556  003490                     u6200:
  8557  003490  6F80               	movwf	?_isupper& (0+255),b
  8558  003492  6B81               	clrf	(?_isupper+1)& (0+255),b
  8559                           
  8560                           ; BSR set to: 0
  8561  003494  0012               	return		;funcret
  8562  003496                     __end_of_isupper:
  8563                           	opt callstack 0
  8564                           
  8565 ;; *************** function _isalpha *****************
  8566 ;; Defined at:
  8567 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;  c               2    0[BANK0 ] int 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;		None
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  2    0[BANK0 ] int 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8584 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8585 ;;Total ram usage:        6 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    3
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_xtoa
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text30
  8596  003396                     __ptext30:
  8597                           	opt callstack 0
  8598  003396                     _isalpha:
  8599                           	opt callstack 22
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;incstack = 0
  8603  003396  0E9F               	movlw	159
  8604  003398  0100               	movlb	0	; () banked
  8605  00339A  6F82               	movwf	??_isalpha& (0+255),b
  8606  00339C  0EFF               	movlw	255
  8607  00339E  6F83               	movwf	(??_isalpha+1)& (0+255),b
  8608  0033A0  0E20               	movlw	32
  8609  0033A2  1180               	iorwf	isalpha@c& (0+255),w,b
  8610  0033A4  6F84               	movwf	(??_isalpha+2)& (0+255),b
  8611  0033A6  0E00               	movlw	0
  8612  0033A8  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
  8613  0033AA  6F85               	movwf	(??_isalpha+3)& (0+255),b
  8614  0033AC  5182               	movf	??_isalpha& (0+255),w,b
  8615  0033AE  2784               	addwf	(??_isalpha+2)& (0+255),f,b
  8616  0033B0  5183               	movf	(??_isalpha+1)& (0+255),w,b
  8617  0033B2  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
  8618  0033B4  5185               	movf	(??_isalpha+3)& (0+255),w,b
  8619  0033B6  E106               	bnz	u6210
  8620  0033B8  0E1A               	movlw	26
  8621  0033BA  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
  8622  0033BC  B0D8               	btfsc	status,0,c
  8623  0033BE  D002               	goto	u6210
  8624  0033C0  0E01               	movlw	1
  8625  0033C2  D001               	goto	u6220
  8626  0033C4                     u6210:
  8627  0033C4  0E00               	movlw	0
  8628  0033C6                     u6220:
  8629  0033C6  6F80               	movwf	?_isalpha& (0+255),b
  8630  0033C8  6B81               	clrf	(?_isalpha+1)& (0+255),b
  8631                           
  8632                           ; BSR set to: 0
  8633  0033CA  0012               	return		;funcret
  8634  0033CC                     __end_of_isalpha:
  8635                           	opt callstack 0
  8636                           
  8637 ;; *************** function _dtoa *****************
  8638 ;; Defined at:
  8639 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  8642 ;;		 -> NULL(0), 
  8643 ;;  d               8   33[BANK0 ] long long 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  n               8   57[BANK0 ] long long 
  8646 ;;  i               2   65[BANK0 ] int 
  8647 ;;  s               2   55[BANK0 ] int 
  8648 ;;  w               2   53[BANK0 ] int 
  8649 ;;  p               2   51[BANK0 ] int 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  2   31[BANK0 ] int 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8659 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8660 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;Total ram usage:       36 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:   10
  8666 ;; This function calls:
  8667 ;;		___aodiv
  8668 ;;		___aomod
  8669 ;;		_abs
  8670 ;;		_pad
  8671 ;; This function is called by:
  8672 ;;		_vfpfcnvrt
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text31
  8677  001A8C                     __ptext31:
  8678                           	opt callstack 0
  8679  001A8C                     _dtoa:
  8680                           	opt callstack 16
  8681                           
  8682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;incstack = 0
  8686  001A8C  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  8687  001A90  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  8688  001A94  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  8689  001A98  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  8690  001A9C  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  8691  001AA0  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  8692  001AA4  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  8693  001AA8  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  8694                           
  8695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8696  001AAC  0100               	movlb	0	; () banked
  8697  001AAE  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  8698  001AB0  D002               	goto	u6430
  8699  001AB2  0E01               	movlw	1
  8700  001AB4  D001               	goto	u6440
  8701  001AB6                     u6430:
  8702  001AB6  0E00               	movlw	0
  8703  001AB8                     u6440:
  8704  001AB8  6FB7               	movwf	dtoa@s& (0+255),b
  8705  001ABA  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  8706                           
  8707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8708  001ABC  51B7               	movf	dtoa@s& (0+255),w,b
  8709  001ABE  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  8710  001AC0  B4D8               	btfsc	status,2,c
  8711  001AC2  D010               	goto	l6020
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8715  001AC4  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  8716  001AC6  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  8717  001AC8  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  8718  001ACA  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  8719  001ACC  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  8720  001ACE  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  8721  001AD0  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  8722  001AD2  6DB9               	negf	dtoa@n& (0+255),b
  8723  001AD4  0E00               	movlw	0
  8724  001AD6  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  8725  001AD8  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  8726  001ADA  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  8727  001ADC  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  8728  001ADE  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  8729  001AE0  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  8730  001AE2  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  8731  001AE4                     l6020:
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8735  001AE4  AE55               	btfss	_prec+1,7,c
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8739  001AE6  9256               	bcf	_flags,1,c
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8743  001AE8  BE55               	btfsc	_prec+1,7,c
  8744  001AEA  D005               	goto	u6470
  8745  001AEC  5055               	movf	_prec+1,w,c
  8746  001AEE  E108               	bnz	l591
  8747  001AF0  0454               	decf	_prec,w,c
  8748  001AF2  B0D8               	btfsc	status,0,c
  8749  001AF4  D005               	goto	l591
  8750  001AF6                     u6470:
  8751                           
  8752                           ; BSR set to: 0
  8753  001AF6  0E00               	movlw	0
  8754  001AF8  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  8755  001AFA  0E01               	movlw	1
  8756  001AFC  6FB3               	movwf	dtoa@p& (0+255),b
  8757  001AFE  D004               	goto	l593
  8758  001B00                     l591:
  8759                           
  8760                           ; BSR set to: 0
  8761  001B00  C054  F0B3         	movff	_prec,dtoa@p
  8762  001B04  C055  F0B4         	movff	_prec+1,dtoa@p+1
  8763  001B08                     l593:
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8767  001B08  C052  F0B5         	movff	_width,dtoa@w
  8768  001B0C  C053  F0B6         	movff	_width+1,dtoa@w+1
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8772  001B10  51B7               	movf	dtoa@s& (0+255),w,b
  8773  001B12  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  8774  001B14  A4D8               	btfss	status,2,c
  8775  001B16  D002               	goto	u6490
  8776                           
  8777                           ; BSR set to: 0
  8778  001B18  A456               	btfss	_flags,2,c
  8779  001B1A  D003               	goto	l6034
  8780  001B1C                     u6490:
  8781                           
  8782                           ; BSR set to: 0
  8783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8784  001B1C  07B5               	decf	dtoa@w& (0+255),f,b
  8785  001B1E  A0D8               	btfss	status,0,c
  8786  001B20  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  8787  001B22                     l6034:
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8791  001B22  0E00               	movlw	0
  8792  001B24  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  8793  001B26  0E1F               	movlw	31
  8794  001B28  6FC1               	movwf	dtoa@i& (0+255),b
  8795                           
  8796                           ; BSR set to: 0
  8797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8798  001B2A  0E00               	movlw	0
  8799  001B2C  0102               	movlb	2	; () banked
  8800  001B2E  6F77               	movwf	(_dbuf+31)& (0+255),b
  8801                           
  8802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8803  001B30  D07D               	goto	l6048
  8804  001B32                     l6038:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8808  001B32  07C1               	decf	dtoa@i& (0+255),f,b
  8809  001B34  A0D8               	btfss	status,0,c
  8810  001B36  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8814  001B38  0E58               	movlw	low _dbuf
  8815  001B3A  25C1               	addwf	dtoa@i& (0+255),w,b
  8816  001B3C  6ED9               	movwf	fsr2l,c
  8817  001B3E  0E02               	movlw	high _dbuf
  8818  001B40  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  8819  001B42  6EDA               	movwf	fsr2h,c
  8820  001B44  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  8821  001B48  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  8822  001B4C  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  8823  001B50  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  8824  001B54  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  8825  001B58  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  8826  001B5C  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  8827  001B60  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  8828  001B64  0E0A               	movlw	10
  8829  001B66  6F88               	movwf	___aomod@divisor& (0+255),b
  8830  001B68  0E00               	movlw	0
  8831  001B6A  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  8832  001B6C  0E00               	movlw	0
  8833  001B6E  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  8834  001B70  0E00               	movlw	0
  8835  001B72  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  8836  001B74  0E00               	movlw	0
  8837  001B76  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  8838  001B78  0E00               	movlw	0
  8839  001B7A  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  8840  001B7C  0E00               	movlw	0
  8841  001B7E  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  8842  001B80  0E00               	movlw	0
  8843  001B82  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  8844  001B84  EC75  F013         	call	___aomod	;wreg free
  8845  001B88  C080  F0A9         	movff	?___aomod,??_dtoa
  8846  001B8C  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  8847  001B90  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  8848  001B94  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  8849  001B98  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  8850  001B9C  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  8851  001BA0  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  8852  001BA4  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  8853  001BA8  C0A9  F092         	movff	??_dtoa,abs@a
  8854  001BAC  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  8855  001BB0  ECE6  F019         	call	_abs	;wreg free
  8856  001BB4  0100               	movlb	0	; () banked
  8857  001BB6  5192               	movf	?_abs& (0+255),w,b
  8858  001BB8  0F30               	addlw	48
  8859  001BBA  6EDF               	movwf	indf2,c
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8863  001BBC  07B3               	decf	dtoa@p& (0+255),f,b
  8864  001BBE  A0D8               	btfss	status,0,c
  8865  001BC0  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8869  001BC2  07B5               	decf	dtoa@w& (0+255),f,b
  8870  001BC4  A0D8               	btfss	status,0,c
  8871  001BC6  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8875  001BC8  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  8876  001BCC  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  8877  001BD0  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  8878  001BD4  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  8879  001BD8  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  8880  001BDC  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  8881  001BE0  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  8882  001BE4  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  8883  001BE8  0E0A               	movlw	10
  8884  001BEA  6F88               	movwf	___aodiv@divisor& (0+255),b
  8885  001BEC  0E00               	movlw	0
  8886  001BEE  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  8887  001BF0  0E00               	movlw	0
  8888  001BF2  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  8889  001BF4  0E00               	movlw	0
  8890  001BF6  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  8891  001BF8  0E00               	movlw	0
  8892  001BFA  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  8893  001BFC  0E00               	movlw	0
  8894  001BFE  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  8895  001C00  0E00               	movlw	0
  8896  001C02  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  8897  001C04  0E00               	movlw	0
  8898  001C06  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  8899  001C08  EC8E  F011         	call	___aodiv	;wreg free
  8900  001C0C  C080  F0B9         	movff	?___aodiv,dtoa@n
  8901  001C10  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  8902  001C14  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  8903  001C18  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  8904  001C1C  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  8905  001C20  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  8906  001C24  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  8907  001C28  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  8908  001C2C                     l6048:
  8909                           
  8910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8911  001C2C  0100               	movlb	0	; () banked
  8912  001C2E  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  8913  001C30  D01F               	goto	u6540
  8914  001C32  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  8915  001C34  E103               	bnz	u6500
  8916  001C36  05C1               	decf	dtoa@i& (0+255),w,b
  8917  001C38  A0D8               	btfss	status,0,c
  8918  001C3A  D01A               	goto	u6540
  8919  001C3C                     u6500:
  8920                           
  8921                           ; BSR set to: 0
  8922  001C3C  51B9               	movf	dtoa@n& (0+255),w,b
  8923  001C3E  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  8924  001C40  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  8925  001C42  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  8926  001C44  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  8927  001C46  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  8928  001C48  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  8929  001C4A  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  8930  001C4C  A4D8               	btfss	status,2,c
  8931  001C4E  D771               	goto	l6038
  8932                           
  8933                           ; BSR set to: 0
  8934  001C50  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  8935  001C52  D005               	goto	u6520
  8936  001C54  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  8937  001C56  E102               	bnz	u6521
  8938  001C58  05B3               	decf	dtoa@p& (0+255),w,b
  8939  001C5A  B0D8               	btfsc	status,0,c
  8940  001C5C                     u6521:
  8941  001C5C  D76A               	goto	l6038
  8942  001C5E                     u6520:
  8943                           
  8944                           ; BSR set to: 0
  8945  001C5E  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  8946  001C60  D007               	goto	u6540
  8947  001C62  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  8948  001C64  E103               	bnz	u6530
  8949  001C66  05B5               	decf	dtoa@w& (0+255),w,b
  8950  001C68  A0D8               	btfss	status,0,c
  8951  001C6A  D002               	goto	u6540
  8952  001C6C                     u6530:
  8953                           
  8954                           ; BSR set to: 0
  8955  001C6C  B256               	btfsc	_flags,1,c
  8956  001C6E  D761               	goto	l6038
  8957  001C70                     u6540:
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8961  001C70  51B7               	movf	dtoa@s& (0+255),w,b
  8962  001C72  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  8963  001C74  A4D8               	btfss	status,2,c
  8964  001C76  D002               	goto	u6560
  8965                           
  8966                           ; BSR set to: 0
  8967  001C78  A456               	btfss	_flags,2,c
  8968  001C7A  D017               	goto	l6072
  8969  001C7C                     u6560:
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8973  001C7C  07C1               	decf	dtoa@i& (0+255),f,b
  8974  001C7E  A0D8               	btfss	status,0,c
  8975  001C80  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8979  001C82  51B7               	movf	dtoa@s& (0+255),w,b
  8980  001C84  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  8981  001C86  A4D8               	btfss	status,2,c
  8982  001C88  D004               	goto	l6068
  8983                           
  8984                           ; BSR set to: 0
  8985  001C8A  0E00               	movlw	0
  8986  001C8C  6FB2               	movwf	(_dtoa$1083+1)& (0+255),b
  8987  001C8E  0E2B               	movlw	43
  8988  001C90  D003               	goto	L6
  8989  001C92                     l6068:
  8990                           
  8991                           ; BSR set to: 0
  8992  001C92  0E00               	movlw	0
  8993  001C94  6FB2               	movwf	(_dtoa$1083+1)& (0+255),b
  8994  001C96  0E2D               	movlw	45
  8995  001C98                     L6:
  8996  001C98  6FB1               	movwf	_dtoa$1083& (0+255),b
  8997                           
  8998                           ; BSR set to: 0
  8999  001C9A  0E58               	movlw	low _dbuf
  9000  001C9C  25C1               	addwf	dtoa@i& (0+255),w,b
  9001  001C9E  6ED9               	movwf	fsr2l,c
  9002  001CA0  0E02               	movlw	high _dbuf
  9003  001CA2  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9004  001CA4  6EDA               	movwf	fsr2h,c
  9005  001CA6  C0B1  FFDF         	movff	_dtoa$1083,indf2
  9006  001CAA                     l6072:
  9007                           
  9008                           ; BSR set to: 0
  9009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9010  001CAA  C09F  F094         	movff	dtoa@fp,pad@fp
  9011  001CAE  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  9012  001CB2  0E58               	movlw	low _dbuf
  9013  001CB4  25C1               	addwf	dtoa@i& (0+255),w,b
  9014  001CB6  6F96               	movwf	pad@buf& (0+255),b
  9015  001CB8  0E02               	movlw	high _dbuf
  9016  001CBA  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9017  001CBC  6F97               	movwf	(pad@buf+1)& (0+255),b
  9018  001CBE  C0B5  F098         	movff	dtoa@w,pad@p
  9019  001CC2  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  9020  001CC6  ECCF  F015         	call	_pad	;wreg free
  9021  001CCA  C094  F09F         	movff	?_pad,?_dtoa
  9022  001CCE  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  9023  001CD2  0012               	return		;funcret
  9024  001CD4                     __end_of_dtoa:
  9025                           	opt callstack 0
  9026                           
  9027 ;; *************** function _pad *****************
  9028 ;; Defined at:
  9029 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  9032 ;;		 -> NULL(0), 
  9033 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  9034 ;;		 -> dbuf(32), 
  9035 ;;  p               2   24[BANK0 ] int 
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;  w               2   29[BANK0 ] int 
  9038 ;;  i               2   27[BANK0 ] int 
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  2   20[BANK0 ] int 
  9041 ;; Registers used:
  9042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9048 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;Total ram usage:       11 bytes
  9053 ;; Hardware stack levels used:    1
  9054 ;; Hardware stack levels required when called:    9
  9055 ;; This function calls:
  9056 ;;		_fputc
  9057 ;;		_fputs
  9058 ;;		_strlen
  9059 ;; This function is called by:
  9060 ;;		_dtoa
  9061 ;;		_xtoa
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           	psect	text32
  9066  002B9E                     __ptext32:
  9067                           	opt callstack 0
  9068  002B9E                     _pad:
  9069                           	opt callstack 16
  9070                           
  9071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9072                           
  9073                           ;incstack = 0
  9074  002B9E  A056               	btfss	_flags,0,c
  9075  002BA0  D00A               	goto	l5872
  9076                           
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9078  002BA2  C096  F08D         	movff	pad@buf,fputs@s
  9079  002BA6  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9080  002BAA  C094  F08F         	movff	pad@fp,fputs@fp
  9081  002BAE  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9082  002BB2  ECAD  F019         	call	_fputs	;wreg free
  9083  002BB6                     l5872:
  9084                           
  9085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9086  002BB6  0100               	movlb	0	; () banked
  9087  002BB8  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  9088  002BBA  D005               	goto	l5876
  9089                           
  9090                           ; BSR set to: 0
  9091  002BBC  C098  F09D         	movff	pad@p,pad@w
  9092  002BC0  C099  F09E         	movff	pad@p+1,pad@w+1
  9093  002BC4  D004               	goto	l580
  9094  002BC6                     l5876:
  9095                           
  9096                           ; BSR set to: 0
  9097  002BC6  0E00               	movlw	0
  9098  002BC8  6F9E               	movwf	(pad@w+1)& (0+255),b
  9099  002BCA  0E00               	movlw	0
  9100  002BCC  6F9D               	movwf	pad@w& (0+255),b
  9101  002BCE                     l580:
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9105  002BCE  0E00               	movlw	0
  9106  002BD0  6F9C               	movwf	(pad@i+1)& (0+255),b
  9107  002BD2  0E00               	movlw	0
  9108  002BD4  6F9B               	movwf	pad@i& (0+255),b
  9109                           
  9110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9111  002BD6  D00D               	goto	l5882
  9112  002BD8                     l5878:
  9113                           
  9114                           ; BSR set to: 0
  9115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9116  002BD8  0E00               	movlw	0
  9117  002BDA  6F85               	movwf	(fputc@c+1)& (0+255),b
  9118  002BDC  0E20               	movlw	32
  9119  002BDE  6F84               	movwf	fputc@c& (0+255),b
  9120  002BE0  C094  F086         	movff	pad@fp,fputc@fp
  9121  002BE4  C095  F087         	movff	pad@fp+1,fputc@fp+1
  9122  002BE8  ECA1  F017         	call	_fputc	;wreg free
  9123                           
  9124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9125  002BEC  0100               	movlb	0	; () banked
  9126  002BEE  4B9B               	infsnz	pad@i& (0+255),f,b
  9127  002BF0  2B9C               	incf	(pad@i+1)& (0+255),f,b
  9128  002BF2                     l5882:
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9132  002BF2  519D               	movf	pad@w& (0+255),w,b
  9133  002BF4  5D9B               	subwf	pad@i& (0+255),w,b
  9134  002BF6  519C               	movf	(pad@i+1)& (0+255),w,b
  9135  002BF8  0A80               	xorlw	128
  9136  002BFA  6F9A               	movwf	??_pad& (0+255),b
  9137  002BFC  519E               	movf	(pad@w+1)& (0+255),w,b
  9138  002BFE  0A80               	xorlw	128
  9139  002C00  599A               	subwfb	??_pad& (0+255),w,b
  9140  002C02  A0D8               	btfss	status,0,c
  9141  002C04  D7E9               	goto	l5878
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9145  002C06  B056               	btfsc	_flags,0,c
  9146  002C08  D00A               	goto	l5886
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9150  002C0A  C096  F08D         	movff	pad@buf,fputs@s
  9151  002C0E  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9152  002C12  C094  F08F         	movff	pad@fp,fputs@fp
  9153  002C16  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9154  002C1A  ECAD  F019         	call	_fputs	;wreg free
  9155  002C1E                     l5886:
  9156                           
  9157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9158  002C1E  C096  F080         	movff	pad@buf,strlen@s
  9159  002C22  C097  F081         	movff	pad@buf+1,strlen@s+1
  9160  002C26  EC64  F01A         	call	_strlen	;wreg free
  9161  002C2A  0100               	movlb	0	; () banked
  9162  002C2C  519D               	movf	pad@w& (0+255),w,b
  9163  002C2E  2580               	addwf	?_strlen& (0+255),w,b
  9164  002C30  6F94               	movwf	?_pad& (0+255),b
  9165  002C32  519E               	movf	(pad@w+1)& (0+255),w,b
  9166  002C34  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  9167  002C36  6F95               	movwf	(?_pad+1)& (0+255),b
  9168                           
  9169                           ; BSR set to: 0
  9170  002C38  0012               	return		;funcret
  9171  002C3A                     __end_of_pad:
  9172                           	opt callstack 0
  9173                           
  9174 ;; *************** function _strlen *****************
  9175 ;; Defined at:
  9176 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  9179 ;;		 -> dbuf(32), 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  9182 ;;		 -> dbuf(32), 
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  2    0[BANK0 ] unsigned int 
  9185 ;; Registers used:
  9186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9192 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;Total ram usage:        4 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    3
  9199 ;; This function calls:
  9200 ;;		Nothing
  9201 ;; This function is called by:
  9202 ;;		_pad
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text33
  9207  0034C8                     __ptext33:
  9208                           	opt callstack 0
  9209  0034C8                     _strlen:
  9210                           	opt callstack 21
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;incstack = 0
  9214  0034C8  C080  F082         	movff	strlen@s,strlen@a
  9215  0034CC  C081  F083         	movff	strlen@s+1,strlen@a+1
  9216  0034D0  D003               	goto	l5858
  9217  0034D2                     l5856:
  9218  0034D2  0100               	movlb	0	; () banked
  9219  0034D4  4B80               	infsnz	strlen@s& (0+255),f,b
  9220  0034D6  2B81               	incf	(strlen@s+1)& (0+255),f,b
  9221  0034D8                     l5858:
  9222  0034D8  C080  FFD9         	movff	strlen@s,fsr2l
  9223  0034DC  C081  FFDA         	movff	strlen@s+1,fsr2h
  9224  0034E0  50DF               	movf	indf2,w,c
  9225  0034E2  A4D8               	btfss	status,2,c
  9226  0034E4  D7F6               	goto	l5856
  9227  0034E6  0100               	movlb	0	; () banked
  9228  0034E8  5182               	movf	strlen@a& (0+255),w,b
  9229  0034EA  5D80               	subwf	strlen@s& (0+255),w,b
  9230  0034EC  6F80               	movwf	?_strlen& (0+255),b
  9231  0034EE  5183               	movf	(strlen@a+1)& (0+255),w,b
  9232  0034F0  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  9233  0034F2  6F81               	movwf	(?_strlen+1)& (0+255),b
  9234                           
  9235                           ; BSR set to: 0
  9236  0034F4  0012               	return		;funcret
  9237  0034F6                     __end_of_strlen:
  9238                           	opt callstack 0
  9239                           
  9240 ;; *************** function _fputs *****************
  9241 ;; Defined at:
  9242 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  9245 ;;		 -> dbuf(32), 
  9246 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  9247 ;;		 -> NULL(0), 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;  i               2   18[BANK0 ] int 
  9250 ;;  c               1   17[BANK0 ] unsigned char 
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  2   13[BANK0 ] int 
  9253 ;; Registers used:
  9254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 0/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9260 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9264 ;;Total ram usage:        7 bytes
  9265 ;; Hardware stack levels used:    1
  9266 ;; Hardware stack levels required when called:    8
  9267 ;; This function calls:
  9268 ;;		_fputc
  9269 ;; This function is called by:
  9270 ;;		_pad
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           	psect	text34
  9275  00335A                     __ptext34:
  9276                           	opt callstack 0
  9277  00335A                     _fputs:
  9278                           	opt callstack 16
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;incstack = 0
  9282  00335A  0E00               	movlw	0
  9283  00335C  0100               	movlb	0	; () banked
  9284  00335E  6F93               	movwf	(fputs@i+1)& (0+255),b
  9285  003360  0E00               	movlw	0
  9286  003362  6F92               	movwf	fputs@i& (0+255),b
  9287  003364  D00C               	goto	l5852
  9288  003366                     l5848:
  9289                           
  9290                           ; BSR set to: 0
  9291  003366  C091  F084         	movff	fputs@c,fputc@c
  9292  00336A  6B85               	clrf	(fputc@c+1)& (0+255),b
  9293  00336C  C08F  F086         	movff	fputs@fp,fputc@fp
  9294  003370  C090  F087         	movff	fputs@fp+1,fputc@fp+1
  9295  003374  ECA1  F017         	call	_fputc	;wreg free
  9296  003378  0100               	movlb	0	; () banked
  9297  00337A  4B92               	infsnz	fputs@i& (0+255),f,b
  9298  00337C  2B93               	incf	(fputs@i+1)& (0+255),f,b
  9299  00337E                     l5852:
  9300                           
  9301                           ; BSR set to: 0
  9302  00337E  5192               	movf	fputs@i& (0+255),w,b
  9303  003380  258D               	addwf	fputs@s& (0+255),w,b
  9304  003382  6ED9               	movwf	fsr2l,c
  9305  003384  5193               	movf	(fputs@i+1)& (0+255),w,b
  9306  003386  218E               	addwfc	(fputs@s+1)& (0+255),w,b
  9307  003388  6EDA               	movwf	fsr2h,c
  9308  00338A  50DF               	movf	indf2,w,c
  9309  00338C  6F91               	movwf	fputs@c& (0+255),b
  9310  00338E  5191               	movf	fputs@c& (0+255),w,b
  9311  003390  B4D8               	btfsc	status,2,c
  9312  003392  0012               	return	
  9313  003394  D7E8               	goto	l5848
  9314  003396                     __end_of_fputs:
  9315                           	opt callstack 0
  9316                           
  9317 ;; *************** function _fputc *****************
  9318 ;; Defined at:
  9319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  c               2    4[BANK0 ] int 
  9322 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9323 ;;		 -> NULL(0), 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;		None
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  2    4[BANK0 ] int 
  9328 ;; Registers used:
  9329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9338 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9339 ;;Total ram usage:        9 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:    7
  9342 ;; This function calls:
  9343 ;;		_putch
  9344 ;; This function is called by:
  9345 ;;		_pad
  9346 ;;		_vfpfcnvrt
  9347 ;;		_fputs
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text35
  9352  002F42                     __ptext35:
  9353                           	opt callstack 0
  9354  002F42                     _fputc:
  9355                           	opt callstack 16
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;incstack = 0
  9359  002F42  0100               	movlb	0	; () banked
  9360  002F44  5186               	movf	fputc@fp& (0+255),w,b
  9361  002F46  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  9362  002F48  B4D8               	btfsc	status,2,c
  9363  002F4A  D004               	goto	u6070
  9364                           
  9365                           ; BSR set to: 0
  9366  002F4C  5186               	movf	fputc@fp& (0+255),w,b
  9367  002F4E  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  9368  002F50  A4D8               	btfss	status,2,c
  9369  002F52  D004               	goto	l5838
  9370  002F54                     u6070:
  9371                           
  9372                           ; BSR set to: 0
  9373  002F54  5184               	movf	fputc@c& (0+255),w,b
  9374  002F56  EC54  F01B         	call	_putch
  9375  002F5A  0012               	return	
  9376  002F5C                     l5838:
  9377                           
  9378                           ; BSR set to: 0
  9379  002F5C  EE20 F004          	lfsr	2,4
  9380  002F60  5186               	movf	fputc@fp& (0+255),w,b
  9381  002F62  26D9               	addwf	fsr2l,f,c
  9382  002F64  5187               	movf	(fputc@fp+1)& (0+255),w,b
  9383  002F66  22DA               	addwfc	fsr2h,f,c
  9384  002F68  50DE               	movf	postinc2,w,c
  9385  002F6A  10DE               	iorwf	postinc2,w,c
  9386  002F6C  B4D8               	btfsc	status,2,c
  9387  002F6E  D016               	goto	u6090
  9388                           
  9389                           ; BSR set to: 0
  9390  002F70  EE20 F004          	lfsr	2,4
  9391  002F74  5186               	movf	fputc@fp& (0+255),w,b
  9392  002F76  26D9               	addwf	fsr2l,f,c
  9393  002F78  5187               	movf	(fputc@fp+1)& (0+255),w,b
  9394  002F7A  22DA               	addwfc	fsr2h,f,c
  9395  002F7C  EE10 F002          	lfsr	1,2
  9396  002F80  5186               	movf	fputc@fp& (0+255),w,b
  9397  002F82  26E1               	addwf	fsr1l,f,c
  9398  002F84  5187               	movf	(fputc@fp+1)& (0+255),w,b
  9399  002F86  22E2               	addwfc	fsr1h,f,c
  9400  002F88  50DE               	movf	postinc2,w,c
  9401  002F8A  5CE6               	subwf	postinc1,w,c
  9402  002F8C  50E6               	movf	postinc1,w,c
  9403  002F8E  0A80               	xorlw	128
  9404  002F90  6F8C               	movwf	(??_fputc+4)& (0+255),b
  9405  002F92  50DE               	movf	postinc2,w,c
  9406  002F94  0A80               	xorlw	128
  9407  002F96  598C               	subwfb	(??_fputc+4)& (0+255),w,b
  9408  002F98  B0D8               	btfsc	status,0,c
  9409  002F9A  0012               	return	
  9410  002F9C                     u6090:
  9411                           
  9412                           ; BSR set to: 0
  9413  002F9C  EE20 F002          	lfsr	2,2
  9414  002FA0  5186               	movf	fputc@fp& (0+255),w,b
  9415  002FA2  26D9               	addwf	fsr2l,f,c
  9416  002FA4  5187               	movf	(fputc@fp+1)& (0+255),w,b
  9417  002FA6  22DA               	addwfc	fsr2h,f,c
  9418  002FA8  2ADE               	incf	postinc2,f,c
  9419  002FAA  0E00               	movlw	0
  9420  002FAC  22DD               	addwfc	postdec2,f,c
  9421  002FAE  0012               	return		;funcret
  9422  002FB0                     __end_of_fputc:
  9423                           	opt callstack 0
  9424                           
  9425 ;; *************** function _putch *****************
  9426 ;; Defined at:
  9427 ;;		line 102 in file "lcd.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  data            1    wreg     unsigned char 
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;  data            1    3[BANK0 ] unsigned char 
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  1    wreg      void 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0, cstack
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9444 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;Total ram usage:        1 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:    6
  9448 ;; This function calls:
  9449 ;;		_send_byte
  9450 ;; This function is called by:
  9451 ;;		_fputc
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text36
  9456  0036A8                     __ptext36:
  9457                           	opt callstack 0
  9458  0036A8                     _putch:
  9459                           	opt callstack 16
  9460                           
  9461                           ;incstack = 0
  9462                           ;putch@data stored from wreg
  9463  0036A8  0100               	movlb	0	; () banked
  9464  0036AA  6F83               	movwf	putch@data& (0+255),b
  9465                           
  9466                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  9467  0036AC  848C               	bsf	3980,2,c	;volatile
  9468                           
  9469                           ;lcd.c: 104:     send_byte((unsigned char)data);
  9470  0036AE  0100               	movlb	0	; () banked
  9471  0036B0  5183               	movf	putch@data& (0+255),w,b
  9472  0036B2  EC2B  F01B         	call	_send_byte
  9473  0036B6  0012               	return		;funcret
  9474  0036B8                     __end_of_putch:
  9475                           	opt callstack 0
  9476                           
  9477 ;; *************** function _send_byte *****************
  9478 ;; Defined at:
  9479 ;;		line 55 in file "lcd.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;  data            1    wreg     unsigned char 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;  data            1    2[BANK0 ] unsigned char 
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		wreg, status,2, status,0, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9496 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9497 ;;Total ram usage:        1 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    5
  9500 ;; This function calls:
  9501 ;;		_send_nibble
  9502 ;; This function is called by:
  9503 ;;		_lcdInst
  9504 ;;		_initLCD
  9505 ;;		_putch
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text37
  9510  003656                     __ptext37:
  9511                           	opt callstack 0
  9512  003656                     _send_byte:
  9513                           	opt callstack 16
  9514                           
  9515                           ;incstack = 0
  9516                           ;send_byte@data stored from wreg
  9517  003656  0100               	movlb	0	; () banked
  9518  003658  6F82               	movwf	send_byte@data& (0+255),b
  9519                           
  9520                           ;lcd.c: 57:     send_nibble(data >> 4);
  9521  00365A  0100               	movlb	0	; () banked
  9522  00365C  3982               	swapf	send_byte@data& (0+255),w,b
  9523  00365E  0B0F               	andlw	15
  9524  003660  EC1E  F01B         	call	_send_nibble
  9525                           
  9526                           ;lcd.c: 60:     send_nibble(data);
  9527  003664  0100               	movlb	0	; () banked
  9528  003666  5182               	movf	send_byte@data& (0+255),w,b
  9529  003668  EC1E  F01B         	call	_send_nibble
  9530  00366C  0012               	return		;funcret
  9531  00366E                     __end_of_send_byte:
  9532                           	opt callstack 0
  9533                           
  9534 ;; *************** function _send_nibble *****************
  9535 ;; Defined at:
  9536 ;;		line 44 in file "lcd.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;  data            1    wreg     unsigned char 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  data            1    1[BANK0 ] unsigned char 
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  1    wreg      void 
  9543 ;; Registers used:
  9544 ;;		wreg, status,2, status,0, cstack
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;Total ram usage:        1 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; Hardware stack levels required when called:    4
  9557 ;; This function calls:
  9558 ;;		_pulse_e
  9559 ;; This function is called by:
  9560 ;;		_send_byte
  9561 ;;		_initLCD
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           	psect	text38
  9566  00363C                     __ptext38:
  9567                           	opt callstack 0
  9568  00363C                     _send_nibble:
  9569                           	opt callstack 16
  9570                           
  9571                           ;incstack = 0
  9572                           ;send_nibble@data stored from wreg
  9573  00363C  0100               	movlb	0	; () banked
  9574  00363E  6F81               	movwf	send_nibble@data& (0+255),b
  9575                           
  9576                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  9577  003640  508C               	movf	3980,w,c	;volatile
  9578  003642  0B0F               	andlw	15
  9579  003644  6E8C               	movwf	3980,c	;volatile
  9580                           
  9581                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  9582  003646  0100               	movlb	0	; () banked
  9583  003648  3981               	swapf	send_nibble@data& (0+255),w,b
  9584  00364A  0BF0               	andlw	240
  9585  00364C  108C               	iorwf	3980,w,c	;volatile
  9586  00364E  6E8C               	movwf	3980,c	;volatile
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;lcd.c: 48:     pulse_e();
  9590  003650  EC7B  F01A         	call	_pulse_e	;wreg free
  9591  003654  0012               	return		;funcret
  9592  003656                     __end_of_send_nibble:
  9593                           	opt callstack 0
  9594                           
  9595 ;; *************** function _pulse_e *****************
  9596 ;; Defined at:
  9597 ;;		line 28 in file "lcd.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;		None
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;  interruptSta    1    0[BANK0 ] unsigned char 
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      void 
  9604 ;; Registers used:
  9605 ;;		wreg
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9615 ;;Total ram usage:        1 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; Hardware stack levels required when called:    3
  9618 ;; This function calls:
  9619 ;;		Nothing
  9620 ;; This function is called by:
  9621 ;;		_send_nibble
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           	psect	text39
  9626  0034F6                     __ptext39:
  9627                           	opt callstack 0
  9628  0034F6                     _pulse_e:
  9629                           	opt callstack 16
  9630                           
  9631                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  9632                           
  9633                           ;incstack = 0
  9634  0034F6  0E00               	movlw	0
  9635  0034F8  BEF2               	btfsc	4082,7,c	;volatile
  9636  0034FA  0E01               	movlw	1
  9637  0034FC  0100               	movlb	0	; () banked
  9638  0034FE  6F80               	movwf	pulse_e@interruptState& (0+255),b
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  9642  003500  9EF2               	bcf	4082,7,c	;volatile
  9643                           
  9644                           ; BSR set to: 0
  9645                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  9646  003502  868C               	bsf	3980,3,c	;volatile
  9647                           
  9648                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  9649  003504  0E14               	movlw	20
  9650  003506                     u8907:
  9651  003506  2EE8               	decfsz	wreg,f,c
  9652  003508  D7FE               	bra	u8907
  9653  00350A  D000               	nop2	
  9654                           
  9655                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  9656  00350C  968C               	bcf	3980,3,c	;volatile
  9657                           
  9658                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  9659  00350E  0E53               	movlw	83
  9660  003510                     u8917:
  9661  003510  2EE8               	decfsz	wreg,f,c
  9662  003512  D7FE               	bra	u8917
  9663  003514  F000               	nop	
  9664                           
  9665                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  9666  003516  0100               	movlb	0	; () banked
  9667  003518  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
  9668  00351A  D002               	bra	u6055
  9669  00351C  9EF2               	bcf	4082,7,c	;volatile
  9670  00351E  D001               	bra	u6056
  9671  003520                     u6055:
  9672  003520  8EF2               	bsf	4082,7,c	;volatile
  9673  003522                     u6056:
  9674  003522  0012               	return		;funcret
  9675  003524                     __end_of_pulse_e:
  9676                           	opt callstack 0
  9677                           
  9678 ;; *************** function _abs *****************
  9679 ;; Defined at:
  9680 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;  a               2   18[BANK0 ] int 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;		None
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  2   18[BANK0 ] int 
  9687 ;; Registers used:
  9688 ;;		wreg, status,2, status,0
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9696 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;Total ram usage:        4 bytes
  9699 ;; Hardware stack levels used:    1
  9700 ;; Hardware stack levels required when called:    3
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_dtoa
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text40
  9709  0033CC                     __ptext40:
  9710                           	opt callstack 0
  9711  0033CC                     _abs:
  9712                           	opt callstack 22
  9713                           
  9714                           ;incstack = 0
  9715  0033CC  0100               	movlb	0	; () banked
  9716  0033CE  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  9717  0033D0  D005               	goto	u6180
  9718  0033D2  5193               	movf	(abs@a+1)& (0+255),w,b
  9719  0033D4  E110               	bnz	l1358
  9720  0033D6  0592               	decf	abs@a& (0+255),w,b
  9721  0033D8  B0D8               	btfsc	status,0,c
  9722  0033DA  D00D               	goto	l1358
  9723  0033DC                     u6180:
  9724                           
  9725                           ; BSR set to: 0
  9726  0033DC  C092  F094         	movff	abs@a,??_abs
  9727  0033E0  C093  F095         	movff	abs@a+1,??_abs+1
  9728  0033E4  1F94               	comf	??_abs& (0+255),f,b
  9729  0033E6  1F95               	comf	(??_abs+1)& (0+255),f,b
  9730  0033E8  4B94               	infsnz	??_abs& (0+255),f,b
  9731  0033EA  2B95               	incf	(??_abs+1)& (0+255),f,b
  9732  0033EC  C094  F092         	movff	??_abs,?_abs
  9733  0033F0  C095  F093         	movff	??_abs+1,?_abs+1
  9734  0033F4  0012               	return	
  9735  0033F6                     l1358:
  9736                           
  9737                           ; BSR set to: 0
  9738  0033F6  C092  F092         	movff	abs@a,?_abs
  9739  0033FA  C093  F093         	movff	abs@a+1,?_abs+1
  9740                           
  9741                           ; BSR set to: 0
  9742  0033FE  0012               	return		;funcret
  9743  003400                     __end_of_abs:
  9744                           	opt callstack 0
  9745                           
  9746 ;; *************** function ___aomod *****************
  9747 ;; Defined at:
  9748 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;  dividend        8    0[BANK0 ] long long 
  9751 ;;  divisor         8    8[BANK0 ] long long 
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;  sign            1   17[BANK0 ] unsigned char 
  9754 ;;  counter         1   16[BANK0 ] unsigned char 
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  8    0[BANK0 ] long long 
  9757 ;; Registers used:
  9758 ;;		wreg, status,2, status,0
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9764 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9767 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;Total ram usage:       18 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; Hardware stack levels required when called:    3
  9771 ;; This function calls:
  9772 ;;		Nothing
  9773 ;; This function is called by:
  9774 ;;		_dtoa
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           	psect	text41
  9779  0026EA                     __ptext41:
  9780                           	opt callstack 0
  9781  0026EA                     ___aomod:
  9782                           	opt callstack 22
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;incstack = 0
  9786  0026EA  0E00               	movlw	0
  9787  0026EC  0100               	movlb	0	; () banked
  9788  0026EE  6F91               	movwf	___aomod@sign& (0+255),b
  9789                           
  9790                           ; BSR set to: 0
  9791  0026F0  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  9792  0026F2  D012               	goto	l5974
  9793                           
  9794                           ; BSR set to: 0
  9795  0026F4  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  9796  0026F6  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  9797  0026F8  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  9798  0026FA  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  9799  0026FC  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  9800  0026FE  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  9801  002700  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  9802  002702  6D80               	negf	___aomod@dividend& (0+255),b
  9803  002704  0E00               	movlw	0
  9804  002706  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  9805  002708  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  9806  00270A  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  9807  00270C  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  9808  00270E  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  9809  002710  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  9810  002712  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  9811                           
  9812                           ; BSR set to: 0
  9813  002714  0E01               	movlw	1
  9814  002716  6F91               	movwf	___aomod@sign& (0+255),b
  9815  002718                     l5974:
  9816                           
  9817                           ; BSR set to: 0
  9818  002718  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  9819  00271A  D010               	goto	l5978
  9820                           
  9821                           ; BSR set to: 0
  9822  00271C  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  9823  00271E  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  9824  002720  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  9825  002722  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  9826  002724  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  9827  002726  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  9828  002728  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  9829  00272A  6D88               	negf	___aomod@divisor& (0+255),b
  9830  00272C  0E00               	movlw	0
  9831  00272E  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  9832  002730  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  9833  002732  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  9834  002734  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  9835  002736  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  9836  002738  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  9837  00273A  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  9838  00273C                     l5978:
  9839                           
  9840                           ; BSR set to: 0
  9841  00273C  5188               	movf	___aomod@divisor& (0+255),w,b
  9842  00273E  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  9843  002740  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  9844  002742  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  9845  002744  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  9846  002746  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  9847  002748  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  9848  00274A  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  9849  00274C  B4D8               	btfsc	status,2,c
  9850  00274E  D03C               	goto	l5994
  9851                           
  9852                           ; BSR set to: 0
  9853  002750  0E01               	movlw	1
  9854  002752  6F90               	movwf	___aomod@counter& (0+255),b
  9855  002754  D00A               	goto	l5984
  9856  002756                     l5982:
  9857                           
  9858                           ; BSR set to: 0
  9859  002756  90D8               	bcf	status,0,c
  9860  002758  3788               	rlcf	___aomod@divisor& (0+255),f,b
  9861  00275A  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  9862  00275C  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  9863  00275E  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  9864  002760  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  9865  002762  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  9866  002764  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  9867  002766  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  9868  002768  2B90               	incf	___aomod@counter& (0+255),f,b
  9869  00276A                     l5984:
  9870                           
  9871                           ; BSR set to: 0
  9872  00276A  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  9873  00276C  D7F4               	goto	l5982
  9874  00276E                     u6380:
  9875                           
  9876                           ; BSR set to: 0
  9877  00276E  5188               	movf	___aomod@divisor& (0+255),w,b
  9878  002770  5D80               	subwf	___aomod@dividend& (0+255),w,b
  9879  002772  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  9880  002774  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  9881  002776  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  9882  002778  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  9883  00277A  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  9884  00277C  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  9885  00277E  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  9886  002780  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  9887  002782  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  9888  002784  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  9889  002786  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  9890  002788  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  9891  00278A  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  9892  00278C  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  9893  00278E  A0D8               	btfss	status,0,c
  9894  002790  D010               	goto	l5990
  9895                           
  9896                           ; BSR set to: 0
  9897  002792  5188               	movf	___aomod@divisor& (0+255),w,b
  9898  002794  5F80               	subwf	___aomod@dividend& (0+255),f,b
  9899  002796  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  9900  002798  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  9901  00279A  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  9902  00279C  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  9903  00279E  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  9904  0027A0  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  9905  0027A2  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  9906  0027A4  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  9907  0027A6  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  9908  0027A8  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  9909  0027AA  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  9910  0027AC  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  9911  0027AE  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  9912  0027B0  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  9913  0027B2                     l5990:
  9914                           
  9915                           ; BSR set to: 0
  9916  0027B2  90D8               	bcf	status,0,c
  9917  0027B4  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  9918  0027B6  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  9919  0027B8  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  9920  0027BA  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  9921  0027BC  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  9922  0027BE  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  9923  0027C0  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  9924  0027C2  3388               	rrcf	___aomod@divisor& (0+255),f,b
  9925                           
  9926                           ; BSR set to: 0
  9927  0027C4  2F90               	decfsz	___aomod@counter& (0+255),f,b
  9928  0027C6  D7D3               	goto	u6380
  9929  0027C8                     l5994:
  9930                           
  9931                           ; BSR set to: 0
  9932  0027C8  5191               	movf	___aomod@sign& (0+255),w,b
  9933  0027CA  B4D8               	btfsc	status,2,c
  9934  0027CC  D010               	goto	l5998
  9935                           
  9936                           ; BSR set to: 0
  9937  0027CE  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  9938  0027D0  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  9939  0027D2  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  9940  0027D4  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  9941  0027D6  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  9942  0027D8  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  9943  0027DA  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  9944  0027DC  6D80               	negf	___aomod@dividend& (0+255),b
  9945  0027DE  0E00               	movlw	0
  9946  0027E0  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  9947  0027E2  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  9948  0027E4  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  9949  0027E6  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  9950  0027E8  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  9951  0027EA  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  9952  0027EC  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  9953  0027EE                     l5998:
  9954                           
  9955                           ; BSR set to: 0
  9956  0027EE  C080  F080         	movff	___aomod@dividend,?___aomod
  9957  0027F2  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  9958  0027F6  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  9959  0027FA  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  9960  0027FE  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  9961  002802  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  9962  002806  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  9963  00280A  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  9964                           
  9965                           ; BSR set to: 0
  9966  00280E  0012               	return		;funcret
  9967  002810                     __end_of___aomod:
  9968                           	opt callstack 0
  9969                           
  9970 ;; *************** function ___aodiv *****************
  9971 ;; Defined at:
  9972 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  dividend        8    0[BANK0 ] long long 
  9975 ;;  divisor         8    8[BANK0 ] long long 
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;  quotient        8   18[BANK0 ] long long 
  9978 ;;  sign            1   17[BANK0 ] unsigned char 
  9979 ;;  counter         1   16[BANK0 ] unsigned char 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  8    0[BANK0 ] long long 
  9982 ;; Registers used:
  9983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9989 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9990 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9992 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9993 ;;Total ram usage:       26 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:    3
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_dtoa
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text42
 10004  00231C                     __ptext42:
 10005                           	opt callstack 0
 10006  00231C                     ___aodiv:
 10007                           	opt callstack 22
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;incstack = 0
 10011  00231C  0E00               	movlw	0
 10012  00231E  0100               	movlb	0	; () banked
 10013  002320  6F91               	movwf	___aodiv@sign& (0+255),b
 10014                           
 10015                           ; BSR set to: 0
 10016  002322  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10017  002324  D012               	goto	l5930
 10018                           
 10019                           ; BSR set to: 0
 10020  002326  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10021  002328  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10022  00232A  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10023  00232C  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10024  00232E  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10025  002330  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10026  002332  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10027  002334  6D88               	negf	___aodiv@divisor& (0+255),b
 10028  002336  0E00               	movlw	0
 10029  002338  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10030  00233A  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10031  00233C  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10032  00233E  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10033  002340  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10034  002342  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10035  002344  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10036                           
 10037                           ; BSR set to: 0
 10038  002346  0E01               	movlw	1
 10039  002348  6F91               	movwf	___aodiv@sign& (0+255),b
 10040  00234A                     l5930:
 10041                           
 10042                           ; BSR set to: 0
 10043  00234A  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 10044  00234C  D012               	goto	l5936
 10045                           
 10046                           ; BSR set to: 0
 10047  00234E  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10048  002350  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10049  002352  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10050  002354  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10051  002356  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10052  002358  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10053  00235A  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10054  00235C  6D80               	negf	___aodiv@dividend& (0+255),b
 10055  00235E  0E00               	movlw	0
 10056  002360  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10057  002362  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10058  002364  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10059  002366  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10060  002368  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10061  00236A  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10062  00236C  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10063                           
 10064                           ; BSR set to: 0
 10065  00236E  0E01               	movlw	1
 10066  002370  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 10067  002372                     l5936:
 10068                           
 10069                           ; BSR set to: 0
 10070  002372  EE20  F092         	lfsr	2,___aodiv@quotient
 10071  002376  0E07               	movlw	7
 10072  002378                     u6301:
 10073  002378  6ADE               	clrf	postinc2,c
 10074  00237A  06E8               	decf	wreg,f,c
 10075  00237C  E2FD               	bc	u6301
 10076                           
 10077                           ; BSR set to: 0
 10078  00237E  5188               	movf	___aodiv@divisor& (0+255),w,b
 10079  002380  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10080  002382  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10081  002384  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10082  002386  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10083  002388  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10084  00238A  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10085  00238C  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10086  00238E  B4D8               	btfsc	status,2,c
 10087  002390  D046               	goto	l5958
 10088                           
 10089                           ; BSR set to: 0
 10090  002392  0E01               	movlw	1
 10091  002394  6F90               	movwf	___aodiv@counter& (0+255),b
 10092  002396  D00A               	goto	l5944
 10093  002398                     l5942:
 10094                           
 10095                           ; BSR set to: 0
 10096  002398  90D8               	bcf	status,0,c
 10097  00239A  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 10098  00239C  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10099  00239E  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10100  0023A0  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10101  0023A2  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10102  0023A4  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10103  0023A6  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10104  0023A8  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10105  0023AA  2B90               	incf	___aodiv@counter& (0+255),f,b
 10106  0023AC                     l5944:
 10107                           
 10108                           ; BSR set to: 0
 10109  0023AC  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10110  0023AE  D7F4               	goto	l5942
 10111  0023B0                     u6320:
 10112                           
 10113                           ; BSR set to: 0
 10114  0023B0  90D8               	bcf	status,0,c
 10115  0023B2  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 10116  0023B4  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10117  0023B6  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10118  0023B8  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10119  0023BA  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10120  0023BC  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10121  0023BE  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10122  0023C0  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10123                           
 10124                           ; BSR set to: 0
 10125  0023C2  5188               	movf	___aodiv@divisor& (0+255),w,b
 10126  0023C4  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 10127  0023C6  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10128  0023C8  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10129  0023CA  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10130  0023CC  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10131  0023CE  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10132  0023D0  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10133  0023D2  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10134  0023D4  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10135  0023D6  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10136  0023D8  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10137  0023DA  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10138  0023DC  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10139  0023DE  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10140  0023E0  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10141  0023E2  A0D8               	btfss	status,0,c
 10142  0023E4  D011               	goto	l5954
 10143                           
 10144                           ; BSR set to: 0
 10145  0023E6  5188               	movf	___aodiv@divisor& (0+255),w,b
 10146  0023E8  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 10147  0023EA  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10148  0023EC  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10149  0023EE  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10150  0023F0  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10151  0023F2  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10152  0023F4  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10153  0023F6  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10154  0023F8  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10155  0023FA  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10156  0023FC  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10157  0023FE  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10158  002400  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10159  002402  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10160  002404  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10161                           
 10162                           ; BSR set to: 0
 10163  002406  8192               	bsf	___aodiv@quotient& (0+255),0,b
 10164  002408                     l5954:
 10165                           
 10166                           ; BSR set to: 0
 10167  002408  90D8               	bcf	status,0,c
 10168  00240A  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10169  00240C  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10170  00240E  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10171  002410  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10172  002412  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10173  002414  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10174  002416  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10175  002418  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 10176                           
 10177                           ; BSR set to: 0
 10178  00241A  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 10179  00241C  D7C9               	goto	u6320
 10180  00241E                     l5958:
 10181                           
 10182                           ; BSR set to: 0
 10183  00241E  5191               	movf	___aodiv@sign& (0+255),w,b
 10184  002420  B4D8               	btfsc	status,2,c
 10185  002422  D010               	goto	l5962
 10186                           
 10187                           ; BSR set to: 0
 10188  002424  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10189  002426  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10190  002428  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10191  00242A  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10192  00242C  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10193  00242E  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10194  002430  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10195  002432  6D92               	negf	___aodiv@quotient& (0+255),b
 10196  002434  0E00               	movlw	0
 10197  002436  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10198  002438  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10199  00243A  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10200  00243C  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10201  00243E  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10202  002440  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10203  002442  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10204  002444                     l5962:
 10205                           
 10206                           ; BSR set to: 0
 10207  002444  C092  F080         	movff	___aodiv@quotient,?___aodiv
 10208  002448  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 10209  00244C  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 10210  002450  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 10211  002454  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 10212  002458  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 10213  00245C  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 10214  002460  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 10215                           
 10216                           ; BSR set to: 0
 10217  002464  0012               	return		;funcret
 10218  002466                     __end_of___aodiv:
 10219                           	opt callstack 0
 10220                           
 10221 ;; *************** function _atoi *****************
 10222 ;; Defined at:
 10223 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 10226 ;;		 -> STR_48(5), STR_47(10), STR_46(11), STR_45(13), 
 10227 ;;		 -> STR_44(10), STR_43(10), STR_42(11), STR_41(11), 
 10228 ;;		 -> STR_40(12), STR_39(17), STR_38(15), STR_37(15), 
 10229 ;;		 -> STR_36(12), STR_35(17), STR_34(12), STR_33(15), 
 10230 ;;		 -> STR_32(18), STR_31(17), STR_30(12), STR_29(15), 
 10231 ;;		 -> STR_28(18), STR_27(17), STR_26(14), STR_25(14), 
 10232 ;;		 -> STR_24(17), STR_23(3), STR_22(9), STR_21(16), 
 10233 ;;		 -> STR_20(3), STR_19(9), STR_18(17), STR_17(15), 
 10234 ;;		 -> STR_16(15), STR_15(12), STR_14(10), STR_13(15), 
 10235 ;;		 -> STR_12(12), STR_11(10), STR_10(16), STR_9(3), 
 10236 ;;		 -> STR_8(10), STR_7(17), STR_6(10), STR_5(16), 
 10237 ;;		 -> STR_4(10), STR_3(16), STR_2(10), STR_1(17), 
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;  n               2   20[BANK0 ] int 
 10240 ;;  neg             2   13[BANK0 ] int 
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  2    7[BANK0 ] int 
 10243 ;; Registers used:
 10244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10251 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10253 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;Total ram usage:       15 bytes
 10255 ;; Hardware stack levels used:    1
 10256 ;; Hardware stack levels required when called:    4
 10257 ;; This function calls:
 10258 ;;		___wmul
 10259 ;;		_isdigit
 10260 ;;		_isspace
 10261 ;; This function is called by:
 10262 ;;		_vfpfcnvrt
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266                           	psect	text43
 10267  002466                     __ptext43:
 10268                           	opt callstack 0
 10269  002466                     _atoi:
 10270                           	opt callstack 22
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;incstack = 0
 10274  002466  0E00               	movlw	0
 10275  002468  0100               	movlb	0	; () banked
 10276  00246A  6F95               	movwf	(atoi@n+1)& (0+255),b
 10277  00246C  0E00               	movlw	0
 10278  00246E  6F94               	movwf	atoi@n& (0+255),b
 10279  002470  0E00               	movlw	0
 10280  002472  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10281  002474  0E00               	movlw	0
 10282  002476  6F8D               	movwf	atoi@neg& (0+255),b
 10283  002478  D002               	goto	l6146
 10284  00247A                     l6144:
 10285                           
 10286                           ; BSR set to: 0
 10287  00247A  4B87               	infsnz	atoi@s& (0+255),f,b
 10288  00247C  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10289  00247E                     l6146:
 10290                           
 10291                           ; BSR set to: 0
 10292  00247E  0E01               	movlw	1
 10293  002480  6F93               	movwf	_atoi$1568& (0+255),b
 10294                           
 10295                           ; BSR set to: 0
 10296  002482  C087  FFF6         	movff	atoi@s,tblptrl
 10297  002486  C088  FFF7         	movff	atoi@s+1,tblptrh
 10298  00248A                     	if	0	;tblptru may be non-zero
 10299  00248A                     	endif
 10300  00248A                     	if	0	;tblptru may be non-zero
 10301  00248A                     	endif
 10302  00248A  0008               	tblrd		*
 10303  00248C  50F5               	movf	tablat,w,c
 10304  00248E  0A20               	xorlw	32
 10305  002490  B4D8               	btfsc	status,2,c
 10306  002492  D018               	goto	l6154
 10307                           
 10308                           ; BSR set to: 0
 10309  002494  0EF7               	movlw	247
 10310  002496  6F89               	movwf	??_atoi& (0+255),b
 10311  002498  0EFF               	movlw	255
 10312  00249A  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10313  00249C  C087  FFF6         	movff	atoi@s,tblptrl
 10314  0024A0  C088  FFF7         	movff	atoi@s+1,tblptrh
 10315  0024A4                     	if	0	;tblptru may be non-zero
 10316  0024A4                     	endif
 10317  0024A4                     	if	0	;tblptru may be non-zero
 10318  0024A4                     	endif
 10319  0024A4  0008               	tblrd		*
 10320  0024A6  50F5               	movf	tablat,w,c
 10321  0024A8  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10322  0024AA  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10323  0024AC  5189               	movf	??_atoi& (0+255),w,b
 10324  0024AE  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10325  0024B0  518A               	movf	(??_atoi+1)& (0+255),w,b
 10326  0024B2  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10327  0024B4  518C               	movf	(??_atoi+3)& (0+255),w,b
 10328  0024B6  E104               	bnz	u6760
 10329  0024B8  0E05               	movlw	5
 10330  0024BA  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10331  0024BC  A0D8               	btfss	status,0,c
 10332  0024BE  D002               	goto	l6154
 10333  0024C0                     u6760:
 10334                           
 10335                           ; BSR set to: 0
 10336  0024C0  0E00               	movlw	0
 10337  0024C2  6F93               	movwf	_atoi$1568& (0+255),b
 10338  0024C4                     l6154:
 10339                           
 10340                           ; BSR set to: 0
 10341  0024C4  C093  F08F         	movff	_atoi$1568,_atoi$1567
 10342  0024C8  6B90               	clrf	(_atoi$1567+1)& (0+255),b
 10343                           
 10344                           ; BSR set to: 0
 10345  0024CA  518F               	movf	_atoi$1567& (0+255),w,b
 10346  0024CC  1190               	iorwf	(_atoi$1567+1)& (0+255),w,b
 10347  0024CE  B4D8               	btfsc	status,2,c
 10348  0024D0  D008               	goto	l6164
 10349  0024D2  D7D3               	goto	l6144
 10350  0024D4                     l6160:
 10351                           
 10352                           ; BSR set to: 0
 10353  0024D4  0E00               	movlw	0
 10354  0024D6  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10355  0024D8  0E01               	movlw	1
 10356  0024DA  6F8D               	movwf	atoi@neg& (0+255),b
 10357  0024DC                     l6162:
 10358                           
 10359                           ; BSR set to: 0
 10360  0024DC  4B87               	infsnz	atoi@s& (0+255),f,b
 10361  0024DE  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10362  0024E0  D02F               	goto	l6170
 10363  0024E2                     l6164:
 10364                           
 10365                           ; BSR set to: 0
 10366  0024E2  C087  FFF6         	movff	atoi@s,tblptrl
 10367  0024E6  C088  FFF7         	movff	atoi@s+1,tblptrh
 10368  0024EA                     	if	0	;tblptru may be non-zero
 10369  0024EA                     	endif
 10370  0024EA                     	if	0	;tblptru may be non-zero
 10371  0024EA                     	endif
 10372  0024EA  0008               	tblrd		*
 10373  0024EC  50F5               	movf	tablat,w,c
 10374  0024EE  6F89               	movwf	??_atoi& (0+255),b
 10375  0024F0  6B8A               	clrf	(??_atoi+1)& (0+255),b
 10376                           
 10377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10378                           ; Switch size 1, requested type "simple"
 10379                           ; Number of cases is 1, Range of values is 0 to 0
 10380                           ; switch strategies available:
 10381                           ; Name         Instructions Cycles
 10382                           ; simple_byte            4     3 (average)
 10383                           ;	Chosen strategy is simple_byte
 10384  0024F2  518A               	movf	(??_atoi+1)& (0+255),w,b
 10385  0024F4  0A00               	xorlw	0	; case 0
 10386  0024F6  A4D8               	btfss	status,2,c
 10387  0024F8  D023               	goto	l6170
 10388                           
 10389                           ; BSR set to: 0
 10390                           ; Switch size 1, requested type "simple"
 10391                           ; Number of cases is 2, Range of values is 43 to 45
 10392                           ; switch strategies available:
 10393                           ; Name         Instructions Cycles
 10394                           ; simple_byte            7     4 (average)
 10395                           ;	Chosen strategy is simple_byte
 10396  0024FA  5189               	movf	??_atoi& (0+255),w,b
 10397  0024FC  0A2B               	xorlw	43	; case 43
 10398  0024FE  B4D8               	btfsc	status,2,c
 10399  002500  D7ED               	goto	l6162
 10400  002502  0A06               	xorlw	6	; case 45
 10401  002504  B4D8               	btfsc	status,2,c
 10402  002506  D7E6               	goto	l6160
 10403  002508  D01B               	goto	l6170
 10404  00250A                     l6166:
 10405                           
 10406                           ; BSR set to: 0
 10407  00250A  C094  F080         	movff	atoi@n,___wmul@multiplier
 10408  00250E  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 10409  002512  0E00               	movlw	0
 10410  002514  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10411  002516  0E0A               	movlw	10
 10412  002518  6F82               	movwf	___wmul@multiplicand& (0+255),b
 10413  00251A  ECD1  F01A         	call	___wmul	;wreg free
 10414  00251E  C087  FFF6         	movff	atoi@s,tblptrl
 10415  002522  C088  FFF7         	movff	atoi@s+1,tblptrh
 10416  002526                     	if	0	;tblptru may be non-zero
 10417  002526                     	endif
 10418  002526                     	if	0	;tblptru may be non-zero
 10419  002526                     	endif
 10420  002526  0008               	tblrd		*
 10421  002528  50F5               	movf	tablat,w,c
 10422  00252A  0100               	movlb	0	; () banked
 10423  00252C  5F80               	subwf	?___wmul& (0+255),f,b
 10424  00252E  0E00               	movlw	0
 10425  002530  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 10426  002532  0E30               	movlw	48
 10427  002534  2580               	addwf	?___wmul& (0+255),w,b
 10428  002536  6F94               	movwf	atoi@n& (0+255),b
 10429  002538  0E00               	movlw	0
 10430  00253A  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 10431  00253C  6F95               	movwf	(atoi@n+1)& (0+255),b
 10432  00253E  D7CE               	goto	l6162
 10433  002540                     l6170:
 10434                           
 10435                           ; BSR set to: 0
 10436  002540  0ED0               	movlw	208
 10437  002542  6F89               	movwf	??_atoi& (0+255),b
 10438  002544  0EFF               	movlw	255
 10439  002546  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10440  002548  C087  FFF6         	movff	atoi@s,tblptrl
 10441  00254C  C088  FFF7         	movff	atoi@s+1,tblptrh
 10442  002550                     	if	0	;tblptru may be non-zero
 10443  002550                     	endif
 10444  002550                     	if	0	;tblptru may be non-zero
 10445  002550                     	endif
 10446  002550  0008               	tblrd		*
 10447  002552  50F5               	movf	tablat,w,c
 10448  002554  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10449  002556  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10450  002558  5189               	movf	??_atoi& (0+255),w,b
 10451  00255A  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10452  00255C  518A               	movf	(??_atoi+1)& (0+255),w,b
 10453  00255E  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10454  002560  518C               	movf	(??_atoi+3)& (0+255),w,b
 10455  002562  E106               	bnz	u6780
 10456  002564  0E0A               	movlw	10
 10457  002566  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10458  002568  B0D8               	btfsc	status,0,c
 10459  00256A  D002               	goto	u6780
 10460  00256C  0E01               	movlw	1
 10461  00256E  D001               	goto	u6790
 10462  002570                     u6780:
 10463  002570  0E00               	movlw	0
 10464  002572                     u6790:
 10465  002572  6F91               	movwf	_atoi$1569& (0+255),b
 10466  002574  6B92               	clrf	(_atoi$1569+1)& (0+255),b
 10467                           
 10468                           ; BSR set to: 0
 10469  002576  5191               	movf	_atoi$1569& (0+255),w,b
 10470  002578  1192               	iorwf	(_atoi$1569+1)& (0+255),w,b
 10471  00257A  A4D8               	btfss	status,2,c
 10472  00257C  D7C6               	goto	l6166
 10473                           
 10474                           ; BSR set to: 0
 10475  00257E  518D               	movf	atoi@neg& (0+255),w,b
 10476  002580  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 10477  002582  A4D8               	btfss	status,2,c
 10478  002584  D00D               	goto	l1389
 10479                           
 10480                           ; BSR set to: 0
 10481  002586  C094  F089         	movff	atoi@n,??_atoi
 10482  00258A  C095  F08A         	movff	atoi@n+1,??_atoi+1
 10483  00258E  1F89               	comf	??_atoi& (0+255),f,b
 10484  002590  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 10485  002592  4B89               	infsnz	??_atoi& (0+255),f,b
 10486  002594  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 10487  002596  C089  F087         	movff	??_atoi,?_atoi
 10488  00259A  C08A  F088         	movff	??_atoi+1,?_atoi+1
 10489  00259E  0012               	return	
 10490  0025A0                     l1389:
 10491                           
 10492                           ; BSR set to: 0
 10493  0025A0  C094  F087         	movff	atoi@n,?_atoi
 10494  0025A4  C095  F088         	movff	atoi@n+1,?_atoi+1
 10495                           
 10496                           ; BSR set to: 0
 10497  0025A8  0012               	return		;funcret
 10498  0025AA                     __end_of_atoi:
 10499                           	opt callstack 0
 10500                           
 10501 ;; *************** function _isspace *****************
 10502 ;; Defined at:
 10503 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10504 ;; Parameters:    Size  Location     Type
 10505 ;;  c               2    0[BANK0 ] int 
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;		None
 10508 ;; Return value:  Size  Location     Type
 10509 ;;                  2    0[BANK0 ] int 
 10510 ;; Registers used:
 10511 ;;		wreg, status,2, status,0
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10519 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10520 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10521 ;;Total ram usage:        7 bytes
 10522 ;; Hardware stack levels used:    1
 10523 ;; Hardware stack levels required when called:    3
 10524 ;; This function calls:
 10525 ;;		Nothing
 10526 ;; This function is called by:
 10527 ;;		_atoi
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           	psect	text44
 10532  00331A                     __ptext44:
 10533                           	opt callstack 0
 10534  00331A                     _isspace:
 10535                           	opt callstack 22
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;incstack = 0
 10539  00331A  0E01               	movlw	1
 10540  00331C  0100               	movlb	0	; () banked
 10541  00331E  6F86               	movwf	_isspace$1594& (0+255),b
 10542                           
 10543                           ; BSR set to: 0
 10544  003320  0E20               	movlw	32
 10545  003322  1980               	xorwf	isspace@c& (0+255),w,b
 10546  003324  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 10547  003326  B4D8               	btfsc	status,2,c
 10548  003328  D014               	goto	l6010
 10549                           
 10550                           ; BSR set to: 0
 10551  00332A  0EF7               	movlw	247
 10552  00332C  6F82               	movwf	??_isspace& (0+255),b
 10553  00332E  0EFF               	movlw	255
 10554  003330  6F83               	movwf	(??_isspace+1)& (0+255),b
 10555  003332  C080  F084         	movff	isspace@c,??_isspace+2
 10556  003336  C081  F085         	movff	isspace@c+1,??_isspace+3
 10557  00333A  5182               	movf	??_isspace& (0+255),w,b
 10558  00333C  2784               	addwf	(??_isspace+2)& (0+255),f,b
 10559  00333E  5183               	movf	(??_isspace+1)& (0+255),w,b
 10560  003340  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 10561  003342  5185               	movf	(??_isspace+3)& (0+255),w,b
 10562  003344  E104               	bnz	u6420
 10563  003346  0E05               	movlw	5
 10564  003348  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 10565  00334A  A0D8               	btfss	status,0,c
 10566  00334C  D002               	goto	l6010
 10567  00334E                     u6420:
 10568                           
 10569                           ; BSR set to: 0
 10570  00334E  0E00               	movlw	0
 10571  003350  6F86               	movwf	_isspace$1594& (0+255),b
 10572  003352                     l6010:
 10573                           
 10574                           ; BSR set to: 0
 10575  003352  C086  F080         	movff	_isspace$1594,?_isspace
 10576  003356  6B81               	clrf	(?_isspace+1)& (0+255),b
 10577                           
 10578                           ; BSR set to: 0
 10579  003358  0012               	return		;funcret
 10580  00335A                     __end_of_isspace:
 10581                           	opt callstack 0
 10582                           
 10583 ;; *************** function _isdigit *****************
 10584 ;; Defined at:
 10585 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10586 ;; Parameters:    Size  Location     Type
 10587 ;;  c               2    0[BANK0 ] int 
 10588 ;; Auto vars:     Size  Location     Type
 10589 ;;		None
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  2    0[BANK0 ] int 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10599 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10601 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10602 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10603 ;;Total ram usage:        6 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; Hardware stack levels required when called:    3
 10606 ;; This function calls:
 10607 ;;		Nothing
 10608 ;; This function is called by:
 10609 ;;		_vfpfcnvrt
 10610 ;;		_atoi
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text45
 10615  003496                     __ptext45:
 10616                           	opt callstack 0
 10617  003496                     _isdigit:
 10618                           	opt callstack 23
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;incstack = 0
 10622  003496  0ED0               	movlw	208
 10623  003498  0100               	movlb	0	; () banked
 10624  00349A  6F82               	movwf	??_isdigit& (0+255),b
 10625  00349C  0EFF               	movlw	255
 10626  00349E  6F83               	movwf	(??_isdigit+1)& (0+255),b
 10627  0034A0  C080  F084         	movff	isdigit@c,??_isdigit+2
 10628  0034A4  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 10629  0034A8  5182               	movf	??_isdigit& (0+255),w,b
 10630  0034AA  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 10631  0034AC  5183               	movf	(??_isdigit+1)& (0+255),w,b
 10632  0034AE  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 10633  0034B0  5185               	movf	(??_isdigit+3)& (0+255),w,b
 10634  0034B2  E106               	bnz	u6260
 10635  0034B4  0E0A               	movlw	10
 10636  0034B6  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 10637  0034B8  B0D8               	btfsc	status,0,c
 10638  0034BA  D002               	goto	u6260
 10639  0034BC  0E01               	movlw	1
 10640  0034BE  D001               	goto	u6270
 10641  0034C0                     u6260:
 10642  0034C0  0E00               	movlw	0
 10643  0034C2                     u6270:
 10644  0034C2  6F80               	movwf	?_isdigit& (0+255),b
 10645  0034C4  6B81               	clrf	(?_isdigit+1)& (0+255),b
 10646                           
 10647                           ; BSR set to: 0
 10648  0034C6  0012               	return		;funcret
 10649  0034C8                     __end_of_isdigit:
 10650                           	opt callstack 0
 10651                           
 10652 ;; *************** function ___wmul *****************
 10653 ;; Defined at:
 10654 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10657 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;  product         2    4[BANK0 ] unsigned int 
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  2    0[BANK0 ] unsigned int 
 10662 ;; Registers used:
 10663 ;;		wreg, status,2, status,0, prodl, prodh
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;Total ram usage:        6 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:    3
 10676 ;; This function calls:
 10677 ;;		Nothing
 10678 ;; This function is called by:
 10679 ;;		_main
 10680 ;;		_atoi
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text46
 10685  0035A2                     __ptext46:
 10686                           	opt callstack 0
 10687  0035A2                     ___wmul:
 10688                           	opt callstack 22
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;incstack = 0
 10692  0035A2  0100               	movlb	0	; () banked
 10693  0035A4  5180               	movf	___wmul@multiplier& (0+255),w,b
 10694  0035A6  0382               	mulwf	___wmul@multiplicand& (0+255),b
 10695  0035A8  CFF3 F084          	movff	prodl,___wmul@product
 10696  0035AC  CFF4 F085          	movff	prodh,___wmul@product+1
 10697  0035B0  5180               	movf	___wmul@multiplier& (0+255),w,b
 10698  0035B2  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10699  0035B4  50F3               	movf	prodl,w,c
 10700  0035B6  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 10701  0035B8  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10702  0035BA  0382               	mulwf	___wmul@multiplicand& (0+255),b
 10703  0035BC  50F3               	movf	prodl,w,c
 10704  0035BE  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 10705                           
 10706                           ; BSR set to: 0
 10707  0035C0  C084  F080         	movff	___wmul@product,?___wmul
 10708  0035C4  C085  F081         	movff	___wmul@product+1,?___wmul+1
 10709                           
 10710                           ; BSR set to: 0
 10711  0035C8  0012               	return		;funcret
 10712  0035CA                     __end_of___wmul:
 10713                           	opt callstack 0
 10714                           
 10715 ;; *************** function ___llmod *****************
 10716 ;; Defined at:
 10717 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;  dividend        4    0[BANK0 ] unsigned long 
 10720 ;;  divisor         4    4[BANK0 ] unsigned long 
 10721 ;; Auto vars:     Size  Location     Type
 10722 ;;  counter         1    8[BANK0 ] unsigned char 
 10723 ;; Return value:  Size  Location     Type
 10724 ;;                  4    0[BANK0 ] unsigned long 
 10725 ;; Registers used:
 10726 ;;		wreg, status,2, status,0
 10727 ;; Tracked objects:
 10728 ;;		On entry : 0/0
 10729 ;;		On exit  : 0/0
 10730 ;;		Unchanged: 0/0
 10731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10732 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;Total ram usage:        9 bytes
 10737 ;; Hardware stack levels used:    1
 10738 ;; Hardware stack levels required when called:    3
 10739 ;; This function calls:
 10740 ;;		Nothing
 10741 ;; This function is called by:
 10742 ;;		_UI_main
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           	psect	text47
 10747  002FB0                     __ptext47:
 10748                           	opt callstack 0
 10749  002FB0                     ___llmod:
 10750                           	opt callstack 26
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;incstack = 0
 10754  002FB0  0100               	movlb	0	; () banked
 10755  002FB2  5184               	movf	___llmod@divisor& (0+255),w,b
 10756  002FB4  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10757  002FB6  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10758  002FB8  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10759  002FBA  B4D8               	btfsc	status,2,c
 10760  002FBC  D024               	goto	l1103
 10761                           
 10762                           ; BSR set to: 0
 10763  002FBE  0E01               	movlw	1
 10764  002FC0  6F88               	movwf	___llmod@counter& (0+255),b
 10765  002FC2  D006               	goto	l6902
 10766  002FC4                     l6900:
 10767                           
 10768                           ; BSR set to: 0
 10769  002FC4  90D8               	bcf	status,0,c
 10770  002FC6  3784               	rlcf	___llmod@divisor& (0+255),f,b
 10771  002FC8  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10772  002FCA  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10773  002FCC  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10774  002FCE  2B88               	incf	___llmod@counter& (0+255),f,b
 10775  002FD0                     l6902:
 10776                           
 10777                           ; BSR set to: 0
 10778  002FD0  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10779  002FD2  D7F8               	goto	l6900
 10780  002FD4                     u7560:
 10781                           
 10782                           ; BSR set to: 0
 10783  002FD4  5184               	movf	___llmod@divisor& (0+255),w,b
 10784  002FD6  5D80               	subwf	___llmod@dividend& (0+255),w,b
 10785  002FD8  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 10786  002FDA  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10787  002FDC  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 10788  002FDE  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10789  002FE0  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 10790  002FE2  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10791  002FE4  A0D8               	btfss	status,0,c
 10792  002FE6  D008               	goto	l6908
 10793                           
 10794                           ; BSR set to: 0
 10795  002FE8  5184               	movf	___llmod@divisor& (0+255),w,b
 10796  002FEA  5F80               	subwf	___llmod@dividend& (0+255),f,b
 10797  002FEC  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 10798  002FEE  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10799  002FF0  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 10800  002FF2  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10801  002FF4  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 10802  002FF6  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10803  002FF8                     l6908:
 10804                           
 10805                           ; BSR set to: 0
 10806  002FF8  90D8               	bcf	status,0,c
 10807  002FFA  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10808  002FFC  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10809  002FFE  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10810  003000  3384               	rrcf	___llmod@divisor& (0+255),f,b
 10811                           
 10812                           ; BSR set to: 0
 10813  003002  2F88               	decfsz	___llmod@counter& (0+255),f,b
 10814  003004  D7E7               	goto	u7560
 10815  003006                     l1103:
 10816                           
 10817                           ; BSR set to: 0
 10818  003006  C080  F080         	movff	___llmod@dividend,?___llmod
 10819  00300A  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 10820  00300E  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 10821  003012  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 10822                           
 10823                           ; BSR set to: 0
 10824  003016  0012               	return		;funcret
 10825  003018                     __end_of___llmod:
 10826                           	opt callstack 0
 10827                           
 10828 ;; *************** function _I2C_Master_Write *****************
 10829 ;; Defined at:
 10830 ;;		line 70 in file "I2C.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;		None
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      void 
 10837 ;; Registers used:
 10838 ;;		wreg, status,2, status,0, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;Total ram usage:        2 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:    4
 10851 ;; This function calls:
 10852 ;;		_I2C_Master_Wait
 10853 ;; This function is called by:
 10854 ;;		_ultrasonic_main
 10855 ;;		_UI_main
 10856 ;;		_brake
 10857 ;;		_start
 10858 ;;		_backwards
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text48
 10863  0036B8                     __ptext48:
 10864                           	opt callstack 0
 10865  0036B8                     _I2C_Master_Write:
 10866                           	opt callstack 23
 10867                           
 10868                           ;I2C.c: 71:     I2C_Master_Wait();
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;incstack = 0
 10872  0036B8  EC42  F01B         	call	_I2C_Master_Wait	;wreg free
 10873                           
 10874                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 10875  0036BC  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 10876  0036C0  0012               	return		;funcret
 10877  0036C2                     __end_of_I2C_Master_Write:
 10878                           	opt callstack 0
 10879                           
 10880 ;; *************** function _I2C_Master_Stop *****************
 10881 ;; Defined at:
 10882 ;;		line 65 in file "I2C.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;		None
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;		None
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		wreg, status,2, status,0, cstack
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10900 ;;Total ram usage:        0 bytes
 10901 ;; Hardware stack levels used:    1
 10902 ;; Hardware stack levels required when called:    4
 10903 ;; This function calls:
 10904 ;;		_I2C_Master_Wait
 10905 ;; This function is called by:
 10906 ;;		_ultrasonic_main
 10907 ;;		_UI_main
 10908 ;;		_brake
 10909 ;;		_start
 10910 ;;		_backwards
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text49
 10915  0036C2                     __ptext49:
 10916                           	opt callstack 0
 10917  0036C2                     _I2C_Master_Stop:
 10918                           	opt callstack 23
 10919                           
 10920                           ;I2C.c: 66:     I2C_Master_Wait();
 10921                           
 10922                           ;incstack = 0
 10923  0036C2  EC42  F01B         	call	_I2C_Master_Wait	;wreg free
 10924                           
 10925                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 10926  0036C6  84C5               	bsf	4037,2,c	;volatile
 10927  0036C8  0012               	return		;funcret
 10928  0036CA                     __end_of_I2C_Master_Stop:
 10929                           	opt callstack 0
 10930                           
 10931 ;; *************** function _I2C_Master_Start *****************
 10932 ;; Defined at:
 10933 ;;		line 55 in file "I2C.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;		None
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  1    wreg      void 
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10951 ;;Total ram usage:        0 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:    4
 10954 ;; This function calls:
 10955 ;;		_I2C_Master_Wait
 10956 ;; This function is called by:
 10957 ;;		_ultrasonic_main
 10958 ;;		_UI_main
 10959 ;;		_brake
 10960 ;;		_start
 10961 ;;		_backwards
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           	psect	text50
 10966  0036CA                     __ptext50:
 10967                           	opt callstack 0
 10968  0036CA                     _I2C_Master_Start:
 10969                           	opt callstack 23
 10970                           
 10971                           ;I2C.c: 56:     I2C_Master_Wait();
 10972                           
 10973                           ;incstack = 0
 10974  0036CA  EC42  F01B         	call	_I2C_Master_Wait	;wreg free
 10975                           
 10976                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 10977  0036CE  80C5               	bsf	4037,0,c	;volatile
 10978  0036D0  0012               	return		;funcret
 10979  0036D2                     __end_of_I2C_Master_Start:
 10980                           	opt callstack 0
 10981                           
 10982 ;; *************** function _I2C_Master_Read *****************
 10983 ;; Defined at:
 10984 ;;		line 77 in file "I2C.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;  ackBit          1    wreg     unsigned char 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;  ackBit          1    1[BANK0 ] unsigned char 
 10989 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  1    wreg      unsigned char 
 10992 ;; Registers used:
 10993 ;;		wreg, status,2, status,0, cstack
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11000 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11003 ;;Total ram usage:        2 bytes
 11004 ;; Hardware stack levels used:    1
 11005 ;; Hardware stack levels required when called:    4
 11006 ;; This function calls:
 11007 ;;		_I2C_Master_Wait
 11008 ;; This function is called by:
 11009 ;;		_ultrasonic_main
 11010 ;;		_UI_main
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           	psect	text51
 11015  003550                     __ptext51:
 11016                           	opt callstack 0
 11017  003550                     _I2C_Master_Read:
 11018                           	opt callstack 25
 11019                           
 11020                           ;incstack = 0
 11021                           ;I2C_Master_Read@ackBit stored from wreg
 11022  003550  0100               	movlb	0	; () banked
 11023  003552  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 11024                           
 11025                           ;I2C.c: 78:     I2C_Master_Wait();
 11026  003554  EC42  F01B         	call	_I2C_Master_Wait	;wreg free
 11027                           
 11028                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 11029  003558  86C5               	bsf	4037,3,c	;volatile
 11030                           
 11031                           ;I2C.c: 81:     I2C_Master_Wait();
 11032  00355A  EC42  F01B         	call	_I2C_Master_Wait	;wreg free
 11033                           
 11034                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 11035  00355E  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 11036                           
 11037                           ;I2C.c: 86:     I2C_Master_Wait();
 11038  003562  EC42  F01B         	call	_I2C_Master_Wait	;wreg free
 11039                           
 11040                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 11041  003566  0100               	movlb	0	; () banked
 11042  003568  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 11043  00356A  D002               	bra	u7425
 11044  00356C  9AC5               	bcf	4037,5,c	;volatile
 11045  00356E  D001               	bra	u7426
 11046  003570                     u7425:
 11047  003570  8AC5               	bsf	4037,5,c	;volatile
 11048  003572                     u7426:
 11049                           
 11050                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 11051  003572  88C5               	bsf	4037,4,c	;volatile
 11052                           
 11053                           ;I2C.c: 90:     return receivedByte;
 11054  003574  0100               	movlb	0	; () banked
 11055  003576  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 11056                           
 11057                           ; BSR set to: 0
 11058  003578  0012               	return		;funcret
 11059  00357A                     __end_of_I2C_Master_Read:
 11060                           	opt callstack 0
 11061                           
 11062 ;; *************** function _I2C_Master_Wait *****************
 11063 ;; Defined at:
 11064 ;;		line 21 in file "I2C.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;		None
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;		None
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  1    wreg      void 
 11071 ;; Registers used:
 11072 ;;		wreg, status,2, status,0
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;Total ram usage:        1 bytes
 11083 ;; Hardware stack levels used:    1
 11084 ;; Hardware stack levels required when called:    3
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		_I2C_Master_Start
 11089 ;;		_I2C_Master_Stop
 11090 ;;		_I2C_Master_Write
 11091 ;;		_I2C_Master_Read
 11092 ;;		_I2C_Master_RepeatedStart
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096                           	psect	text52
 11097  003684                     __ptext52:
 11098                           	opt callstack 0
 11099  003684                     _I2C_Master_Wait:
 11100                           	opt callstack 23
 11101                           
 11102                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 11103                           
 11104                           ;I2C.c: 28:     }
 11105                           
 11106                           ; BSR set to: 0
 11107                           ;incstack = 0
 11108  003684  B4C7               	btfsc	4039,2,c	;volatile
 11109  003686  D7FE               	goto	_I2C_Master_Wait
 11110  003688  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 11111  00368C  0E1F               	movlw	31
 11112  00368E  0100               	movlb	0	; () banked
 11113  003690  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 11114  003692  B4D8               	btfsc	status,2,c
 11115  003694  0012               	return	
 11116  003696  D7F6               	goto	_I2C_Master_Wait
 11117  003698                     __end_of_I2C_Master_Wait:
 11118                           	opt callstack 0
 11119                           
 11120 ;; *************** function _I2C_Master_Init *****************
 11121 ;; Defined at:
 11122 ;;		line 32 in file "I2C.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;		None
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  1    wreg      void 
 11129 ;; Registers used:
 11130 ;;		wreg, status,2, status,0, cstack
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11139 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11140 ;;Total ram usage:        8 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; Hardware stack levels required when called:    4
 11143 ;; This function calls:
 11144 ;;		___lldiv
 11145 ;; This function is called by:
 11146 ;;		_UI_main
 11147 ;;		_start
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151                           	psect	text53
 11152  003018                     __ptext53:
 11153                           	opt callstack 0
 11154  003018                     _I2C_Master_Init:
 11155                           	opt callstack 25
 11156                           
 11157                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 11158                           
 11159                           ; BSR set to: 0
 11160                           ;incstack = 0
 11161  003018  9AC6               	bcf	4038,5,c	;volatile
 11162                           
 11163                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 11164  00301A  8694               	bsf	3988,3,c	;volatile
 11165                           
 11166                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 11167  00301C  8894               	bsf	3988,4,c	;volatile
 11168                           
 11169                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 11170  00301E  0E80               	movlw	128
 11171  003020  0100               	movlb	0	; () banked
 11172  003022  6F80               	movwf	___lldiv@dividend& (0+255),b
 11173  003024  0E96               	movlw	150
 11174  003026  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 11175  003028  0E98               	movlw	152
 11176  00302A  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 11177  00302C  0E00               	movlw	0
 11178  00302E  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 11179  003030  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 11180  003034  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 11181  003038  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 11182  00303C  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 11183  003040  0E02               	movlw	2
 11184  003042                     u7435:
 11185  003042  90D8               	bcf	status,0,c
 11186  003044  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 11187  003046  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 11188  003048  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 11189  00304A  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 11190  00304C  2EE8               	decfsz	wreg,f,c
 11191  00304E  D7F9               	goto	u7435
 11192  003050  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 11193  003054  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 11194  003058  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 11195  00305C  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 11196  003060  ECA6  F016         	call	___lldiv	;wreg free
 11197  003064  0100               	movlb	0	; () banked
 11198  003066  0580               	decf	?___lldiv& (0+255),w,b
 11199  003068  6EC8               	movwf	4040,c	;volatile
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 11203  00306A  0E80               	movlw	128
 11204  00306C  6EC7               	movwf	4039,c	;volatile
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 11208  00306E  0E28               	movlw	40
 11209  003070  6EC6               	movwf	4038,c	;volatile
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 11213  003072  0E00               	movlw	0
 11214  003074  6EC5               	movwf	4037,c	;volatile
 11215                           
 11216                           ; BSR set to: 0
 11217  003076  0012               	return		;funcret
 11218  003078                     __end_of_I2C_Master_Init:
 11219                           	opt callstack 0
 11220                           
 11221 ;; *************** function ___lldiv *****************
 11222 ;; Defined at:
 11223 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 11224 ;; Parameters:    Size  Location     Type
 11225 ;;  dividend        4    0[BANK0 ] unsigned long 
 11226 ;;  divisor         4    4[BANK0 ] unsigned long 
 11227 ;; Auto vars:     Size  Location     Type
 11228 ;;  quotient        4    8[BANK0 ] unsigned long 
 11229 ;;  counter         1   12[BANK0 ] unsigned char 
 11230 ;; Return value:  Size  Location     Type
 11231 ;;                  4    0[BANK0 ] unsigned long 
 11232 ;; Registers used:
 11233 ;;		wreg, status,2, status,0
 11234 ;; Tracked objects:
 11235 ;;		On entry : 0/0
 11236 ;;		On exit  : 0/0
 11237 ;;		Unchanged: 0/0
 11238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11239 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11240 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11242 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;Total ram usage:       13 bytes
 11244 ;; Hardware stack levels used:    1
 11245 ;; Hardware stack levels required when called:    3
 11246 ;; This function calls:
 11247 ;;		Nothing
 11248 ;; This function is called by:
 11249 ;;		_I2C_Master_Init
 11250 ;; This function uses a non-reentrant model
 11251 ;;
 11252                           
 11253                           	psect	text54
 11254  002D4C                     __ptext54:
 11255                           	opt callstack 0
 11256  002D4C                     ___lldiv:
 11257                           	opt callstack 25
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;incstack = 0
 11261  002D4C  0E00               	movlw	0
 11262  002D4E  0100               	movlb	0	; () banked
 11263  002D50  6F88               	movwf	___lldiv@quotient& (0+255),b
 11264  002D52  0E00               	movlw	0
 11265  002D54  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 11266  002D56  0E00               	movlw	0
 11267  002D58  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11268  002D5A  0E00               	movlw	0
 11269  002D5C  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11270                           
 11271                           ; BSR set to: 0
 11272  002D5E  5184               	movf	___lldiv@divisor& (0+255),w,b
 11273  002D60  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11274  002D62  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11275  002D64  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11276  002D66  B4D8               	btfsc	status,2,c
 11277  002D68  D02A               	goto	l710
 11278                           
 11279                           ; BSR set to: 0
 11280  002D6A  0E01               	movlw	1
 11281  002D6C  6F8C               	movwf	___lldiv@counter& (0+255),b
 11282  002D6E  D006               	goto	l6600
 11283  002D70                     l6598:
 11284                           
 11285                           ; BSR set to: 0
 11286  002D70  90D8               	bcf	status,0,c
 11287  002D72  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 11288  002D74  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11289  002D76  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11290  002D78  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11291  002D7A  2B8C               	incf	___lldiv@counter& (0+255),f,b
 11292  002D7C                     l6600:
 11293                           
 11294                           ; BSR set to: 0
 11295  002D7C  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11296  002D7E  D7F8               	goto	l6598
 11297  002D80                     u7100:
 11298                           
 11299                           ; BSR set to: 0
 11300  002D80  90D8               	bcf	status,0,c
 11301  002D82  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 11302  002D84  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11303  002D86  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11304  002D88  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11305                           
 11306                           ; BSR set to: 0
 11307  002D8A  5184               	movf	___lldiv@divisor& (0+255),w,b
 11308  002D8C  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 11309  002D8E  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11310  002D90  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11311  002D92  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11312  002D94  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11313  002D96  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11314  002D98  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11315  002D9A  A0D8               	btfss	status,0,c
 11316  002D9C  D009               	goto	l6610
 11317                           
 11318                           ; BSR set to: 0
 11319  002D9E  5184               	movf	___lldiv@divisor& (0+255),w,b
 11320  002DA0  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 11321  002DA2  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11322  002DA4  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11323  002DA6  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11324  002DA8  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11325  002DAA  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11326  002DAC  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11327                           
 11328                           ; BSR set to: 0
 11329  002DAE  8188               	bsf	___lldiv@quotient& (0+255),0,b
 11330  002DB0                     l6610:
 11331                           
 11332                           ; BSR set to: 0
 11333  002DB0  90D8               	bcf	status,0,c
 11334  002DB2  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11335  002DB4  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11336  002DB6  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11337  002DB8  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 11338                           
 11339                           ; BSR set to: 0
 11340  002DBA  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 11341  002DBC  D7E1               	goto	u7100
 11342  002DBE                     l710:
 11343                           
 11344                           ; BSR set to: 0
 11345  002DBE  C088  F080         	movff	___lldiv@quotient,?___lldiv
 11346  002DC2  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 11347  002DC6  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 11348  002DCA  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 11349                           
 11350                           ; BSR set to: 0
 11351  002DCE  0012               	return		;funcret
 11352  002DD0                     __end_of___lldiv:
 11353                           	opt callstack 0
 11354                           
 11355 ;; *************** function _ISR *****************
 11356 ;; Defined at:
 11357 ;;		line 72 in file "main.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      void 
 11364 ;; Registers used:
 11365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;Total ram usage:        2 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:    2
 11378 ;; This function calls:
 11379 ;;		_echo
 11380 ;; This function is called by:
 11381 ;;		Interrupt level 2
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	intcode
 11386  000008                     __pintcode:
 11387                           	opt callstack 0
 11388  000008                     _ISR:
 11389                           	opt callstack 14
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;incstack = 0
 11393  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11394  00000A  EDEC  F018         	call	int_func,f	;refresh shadow registers
 11395                           
 11396                           	psect	intcode_body
 11397  0031D8                     __pintcode_body:
 11398                           	opt callstack 14
 11399  0031D8                     int_func:
 11400                           	opt callstack 14
 11401  0031D8  0006               	pop		; remove dummy address from shadow register refresh
 11402  0031DA  CFD9 F036          	movff	fsr2l,??_ISR
 11403  0031DE  CFDA F037          	movff	fsr2h,??_ISR+1
 11404                           
 11405                           ;main.c: 73:  if(RBIF == 1){
 11406  0031E2  A0F2               	btfss	4082,0,c	;volatile
 11407  0031E4  D012               	goto	i2l5586
 11408                           
 11409                           ;main.c: 74:         if (sens){
 11410  0031E6  5060               	movf	_sens,w,c	;volatile
 11411  0031E8  1061               	iorwf	_sens+1,w,c	;volatile
 11412  0031EA  B4D8               	btfsc	status,2,c
 11413  0031EC  D005               	goto	i2l5580
 11414                           
 11415                           ;main.c: 75:             RBIE = 0;
 11416  0031EE  96F2               	bcf	4082,3,c	;volatile
 11417                           
 11418                           ;main.c: 76:             echo();
 11419  0031F0  EC03  F004         	call	_echo	;wreg free
 11420                           
 11421                           ;main.c: 77:             RBIF = 0;
 11422  0031F4  90F2               	bcf	4082,0,c	;volatile
 11423                           
 11424                           ;main.c: 78:             RBIE = 1;
 11425  0031F6  86F2               	bsf	4082,3,c	;volatile
 11426  0031F8                     i2l5580:
 11427                           
 11428                           ;main.c: 80:         if (~sens){
 11429  0031F8  2860               	incf	_sens,w,c	;volatile
 11430  0031FA  E103               	bnz	i2u590_40
 11431  0031FC  2861               	incf	_sens+1,w,c	;volatile
 11432  0031FE  B4D8               	btfsc	status,2,c
 11433  003200  D004               	goto	i2l5586
 11434  003202                     i2u590_40:
 11435                           
 11436                           ;main.c: 81:             key_was_pressed = 1;
 11437  003202  0E01               	movlw	1
 11438  003204  0101               	movlb	1	; () banked
 11439  003206  6F6D               	movwf	_key_was_pressed& (0+255),b	;volatile
 11440                           
 11441                           ; BSR set to: 1
 11442                           ;main.c: 82:             INT1IF = 0;
 11443  003208  90F0               	bcf	4080,0,c	;volatile
 11444  00320A                     i2l5586:
 11445                           
 11446                           ;main.c: 85:     if (TMR0IF){
 11447  00320A  A4F2               	btfss	4082,2,c	;volatile
 11448  00320C  D009               	goto	i2l161
 11449                           
 11450                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
 11451  00320E  94F2               	bcf	4082,2,c	;volatile
 11452                           
 11453                           ;main.c: 87:         TMR0H = (65536ul - (((10000000 / (4ul))/(64ul))/2ul)) >> 8;
 11454  003210  0EB3               	movlw	179
 11455  003212  6ED7               	movwf	4055,c	;volatile
 11456                           
 11457                           ;main.c: 88:         TMR0L = (65536ul - (((10000000 / (4ul))/(64ul))/2ul));
 11458  003214  0EB5               	movlw	181
 11459  003216  6ED6               	movwf	4054,c	;volatile
 11460                           
 11461                           ;main.c: 89:         cnt++;
 11462  003218  0101               	movlb	1	; () banked
 11463  00321A  4B6B               	infsnz	_cnt& (0+255),f,b
 11464  00321C  2B6C               	incf	(_cnt+1)& (0+255),f,b
 11465                           
 11466                           ; BSR set to: 1
 11467                           ;main.c: 90:         LATDbits.LATD7 ^= 1u;
 11468  00321E  7E8C               	btg	3980,7,c	;volatile
 11469  003220                     i2l161:
 11470  003220  C037  FFDA         	movff	??_ISR+1,fsr2h
 11471  003224  C036  FFD9         	movff	??_ISR,fsr2l
 11472  003228  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11473  00322A  0011               	retfie		f
 11474  00322C                     __end_of_ISR:
 11475                           	opt callstack 0
 11476                           
 11477 ;; *************** function _echo *****************
 11478 ;; Defined at:
 11479 ;;		line 100 in file "main.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;		None
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;		None
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      void 
 11486 ;; Registers used:
 11487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;Total ram usage:        4 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; Hardware stack levels required when called:    1
 11500 ;; This function calls:
 11501 ;;		___fldiv
 11502 ;;		___fltol
 11503 ;;		___xxtofl
 11504 ;;		i2___awdiv
 11505 ;; This function is called by:
 11506 ;;		_ISR
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text56
 11511  000806                     __ptext56:
 11512                           	opt callstack 0
 11513  000806                     _echo:
 11514                           	opt callstack 14
 11515                           
 11516                           ;main.c: 101:     if (b==1){
 11517                           
 11518                           ;incstack = 0
 11519  000806  0462               	decf	_b,w,c
 11520  000808  1063               	iorwf	_b+1,w,c
 11521  00080A  A4D8               	btfss	status,2,c
 11522  00080C  D0A2               	goto	i2l5050
 11523                           
 11524                           ;main.c: 102:         if (RB7 == 1){
 11525  00080E  BE81               	btfsc	3969,7,c	;volatile
 11526                           
 11527                           ;main.c: 103:             TMR1ON = 1;
 11528  000810  80CD               	bsf	4045,0,c	;volatile
 11529                           
 11530                           ;main.c: 105:         if (RB7 == 0){
 11531                           
 11532                           ;main.c: 104:         }
 11533  000812  BE81               	btfsc	3969,7,c	;volatile
 11534  000814  D037               	goto	i2l5026
 11535                           
 11536                           ;main.c: 106:             TMR1ON = 0;
 11537  000816  90CD               	bcf	4045,0,c	;volatile
 11538                           
 11539                           ;main.c: 107:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 11540  000818  0EAE               	movlw	174
 11541  00081A  6E13               	movwf	___fldiv@a,c
 11542  00081C  0E47               	movlw	71
 11543  00081E  6E14               	movwf	___fldiv@a+1,c
 11544  000820  0E6B               	movlw	107
 11545  000822  6E15               	movwf	___fldiv@a+2,c
 11546  000824  0E42               	movlw	66
 11547  000826  6E16               	movwf	___fldiv@a+3,c
 11548  000828  50CF               	movf	4047,w,c	;volatile
 11549  00082A  6E33               	movwf	(??_echo+1)& (0+255),c
 11550  00082C  6A32               	clrf	??_echo& (0+255),c
 11551  00082E  50CE               	movf	4046,w,c	;volatile
 11552  000830  6E34               	movwf	(??_echo+2)& (0+255),c
 11553  000832  6A35               	clrf	(??_echo+3)& (0+255),c
 11554  000834  5032               	movf	??_echo,w,c
 11555  000836  1234               	iorwf	??_echo+2,f,c
 11556  000838  5033               	movf	??_echo+1,w,c
 11557  00083A  1235               	iorwf	??_echo+3,f,c
 11558  00083C  C034  F001         	movff	??_echo+2,___xxtofl@val
 11559  000840  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 11560  000844  0E00               	movlw	0
 11561  000846  BE02               	btfsc	___xxtofl@val+1,7,c
 11562  000848  0EFF               	movlw	-1
 11563  00084A  6E03               	movwf	___xxtofl@val+2,c
 11564  00084C  6E04               	movwf	___xxtofl@val+3,c
 11565  00084E  0E01               	movlw	1
 11566  000850  ECD5  F012         	call	___xxtofl
 11567  000854  C001  F00F         	movff	?___xxtofl,___fldiv@b
 11568  000858  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 11569  00085C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 11570  000860  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 11571  000864  EC02  F00C         	call	___fldiv	;wreg free
 11572  000868  C00F  F028         	movff	?___fldiv,___fltol@f1
 11573  00086C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 11574  000870  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 11575  000874  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 11576  000878  EC72  F015         	call	___fltol	;wreg free
 11577  00087C  C028  F040         	movff	?___fltol,_a
 11578  000880  C029  F041         	movff	?___fltol+1,_a+1
 11579  000884                     i2l5026:
 11580                           
 11581                           ;main.c: 111:         if (a[0]>=2 && a[0]<=200){
 11582  000884  BE41               	btfsc	_a+1,7,c
 11583  000886  D065               	goto	i2l5050
 11584  000888  5041               	movf	_a+1,w,c
 11585  00088A  E104               	bnz	i2u505_40
 11586  00088C  0E02               	movlw	2
 11587  00088E  5C40               	subwf	_a,w,c
 11588  000890  A0D8               	btfss	status,0,c
 11589  000892  D05F               	goto	i2l5050
 11590  000894                     i2u505_40:
 11591  000894  BE41               	btfsc	_a+1,7,c
 11592  000896  D006               	goto	i2u506_40
 11593  000898  5041               	movf	_a+1,w,c
 11594  00089A  E15B               	bnz	i2l5050
 11595  00089C  0EC9               	movlw	201
 11596  00089E  5C40               	subwf	_a,w,c
 11597  0008A0  B0D8               	btfsc	status,0,c
 11598  0008A2  D057               	goto	i2l5050
 11599  0008A4                     i2u506_40:
 11600                           
 11601                           ;main.c: 112:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 11602  0008A4  0448               	decf	_sumf,w,c
 11603  0008A6  B4D8               	btfsc	status,2,c
 11604  0008A8  D01B               	goto	i2l5042
 11605  0008AA  0101               	movlb	1	; () banked
 11606  0008AC  516E               	movf	_dist_final& (0+255),w,b
 11607  0008AE  116F               	iorwf	(_dist_final+1)& (0+255),w,b
 11608  0008B0  B4D8               	btfsc	status,2,c
 11609  0008B2  D016               	goto	i2l5042
 11610                           
 11611                           ; BSR set to: 1
 11612  0008B4  5170               	movf	(_dist_final+2)& (0+255),w,b
 11613  0008B6  1171               	iorwf	(_dist_final+3)& (0+255),w,b
 11614  0008B8  B4D8               	btfsc	status,2,c
 11615  0008BA  D012               	goto	i2l5042
 11616                           
 11617                           ; BSR set to: 1
 11618  0008BC  5172               	movf	(_dist_final+4)& (0+255),w,b
 11619  0008BE  1173               	iorwf	(_dist_final+5)& (0+255),w,b
 11620  0008C0  B4D8               	btfsc	status,2,c
 11621  0008C2  D00E               	goto	i2l5042
 11622                           
 11623                           ; BSR set to: 1
 11624                           ;main.c: 113:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 11625  0008C4  5172               	movf	(_dist_final+4)& (0+255),w,b
 11626  0008C6  2570               	addwf	(_dist_final+2)& (0+255),w,b
 11627  0008C8  6E32               	movwf	??_echo& (0+255),c
 11628  0008CA  5173               	movf	(_dist_final+5)& (0+255),w,b
 11629  0008CC  2171               	addwfc	(_dist_final+3)& (0+255),w,b
 11630  0008CE  6E33               	movwf	(??_echo+1)& (0+255),c
 11631  0008D0  516E               	movf	_dist_final& (0+255),w,b
 11632  0008D2  2432               	addwf	??_echo,w,c
 11633  0008D4  6E38               	movwf	_sum,c
 11634  0008D6  516F               	movf	(_dist_final+1)& (0+255),w,b
 11635  0008D8  2033               	addwfc	??_echo+1,w,c
 11636  0008DA  6E39               	movwf	_sum+1,c
 11637                           
 11638                           ; BSR set to: 1
 11639                           ;main.c: 114:                 sumf[0] = 1;
 11640  0008DC  0E01               	movlw	1
 11641  0008DE  6E48               	movwf	_sumf,c
 11642  0008E0                     i2l5042:
 11643                           
 11644                           ;main.c: 116:             if (sumf[0]){
 11645  0008E0  5048               	movf	_sumf,w,c
 11646  0008E2  B4D8               	btfsc	status,2,c
 11647  0008E4  D029               	goto	i2l5048
 11648                           
 11649                           ;main.c: 117:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 11650  0008E6  90D8               	bcf	status,0,c
 11651  0008E8  3458               	rlcf	_meas,w,c	;volatile
 11652  0008EA  6ED9               	movwf	fsr2l,c
 11653  0008EC  3459               	rlcf	_meas+1,w,c	;volatile
 11654  0008EE  6EDA               	movwf	fsr2h,c
 11655  0008F0  0E6E               	movlw	low _dist_final
 11656  0008F2  26D9               	addwf	fsr2l,f,c
 11657  0008F4  0E01               	movlw	high _dist_final
 11658  0008F6  22DA               	addwfc	fsr2h,f,c
 11659  0008F8  CFDE F032          	movff	postinc2,??_echo
 11660  0008FC  CFDD F033          	movff	postdec2,??_echo+1
 11661  000900  C038  F034         	movff	_sum,??_echo+2
 11662  000904  C039  F035         	movff	_sum+1,??_echo+3
 11663  000908  5032               	movf	??_echo,w,c
 11664  00090A  5E34               	subwf	??_echo+2,f,c
 11665  00090C  5033               	movf	??_echo+1,w,c
 11666  00090E  5A35               	subwfb	??_echo+3,f,c
 11667  000910  5040               	movf	_a,w,c
 11668  000912  2434               	addwf	??_echo+2,w,c
 11669  000914  6E38               	movwf	_sum,c
 11670  000916  5041               	movf	_a+1,w,c
 11671  000918  2035               	addwfc	??_echo+3,w,c
 11672  00091A  6E39               	movwf	_sum+1,c
 11673                           
 11674                           ;main.c: 118:                 dist_final[0][5] = (sum[0]/5);
 11675  00091C  C038  F001         	movff	_sum,i2___awdiv@dividend
 11676  000920  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 11677  000924  0E00               	movlw	0
 11678  000926  6E04               	movwf	i2___awdiv@divisor+1,c
 11679  000928  0E05               	movlw	5
 11680  00092A  6E03               	movwf	i2___awdiv@divisor,c
 11681  00092C  ECE8  F016         	call	i2___awdiv	;wreg free
 11682  000930  C001  F178         	movff	?i2___awdiv,_dist_final+10
 11683  000934  C002  F179         	movff	?i2___awdiv+1,_dist_final+11
 11684  000938                     i2l5048:
 11685                           
 11686                           ;main.c: 120:             dist_final[0][meas] = a[0];
 11687  000938  90D8               	bcf	status,0,c
 11688  00093A  3458               	rlcf	_meas,w,c	;volatile
 11689  00093C  6ED9               	movwf	fsr2l,c
 11690  00093E  3459               	rlcf	_meas+1,w,c	;volatile
 11691  000940  6EDA               	movwf	fsr2h,c
 11692  000942  0E6E               	movlw	low _dist_final
 11693  000944  26D9               	addwf	fsr2l,f,c
 11694  000946  0E01               	movlw	high _dist_final
 11695  000948  22DA               	addwfc	fsr2h,f,c
 11696  00094A  C040  FFDE         	movff	_a,postinc2
 11697  00094E  C041  FFDD         	movff	_a+1,postdec2
 11698  000952                     i2l5050:
 11699                           
 11700                           ;main.c: 123:     if (b==2){
 11701  000952  0E02               	movlw	2
 11702  000954  1862               	xorwf	_b,w,c
 11703  000956  1063               	iorwf	_b+1,w,c
 11704  000958  A4D8               	btfss	status,2,c
 11705  00095A  D0A4               	goto	i2l5084
 11706                           
 11707                           ;main.c: 124:         if (RB6 == 1){
 11708  00095C  BC81               	btfsc	3969,6,c	;volatile
 11709                           
 11710                           ;main.c: 125:             TMR1ON = 1;
 11711  00095E  80CD               	bsf	4045,0,c	;volatile
 11712                           
 11713                           ;main.c: 127:         if (RB6 == 0){
 11714                           
 11715                           ;main.c: 126:         }
 11716  000960  BC81               	btfsc	3969,6,c	;volatile
 11717  000962  D037               	goto	i2l5060
 11718                           
 11719                           ;main.c: 128:             TMR1ON = 0;
 11720  000964  90CD               	bcf	4045,0,c	;volatile
 11721                           
 11722                           ;main.c: 129:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 11723  000966  0EAE               	movlw	174
 11724  000968  6E13               	movwf	___fldiv@a,c
 11725  00096A  0E47               	movlw	71
 11726  00096C  6E14               	movwf	___fldiv@a+1,c
 11727  00096E  0E6B               	movlw	107
 11728  000970  6E15               	movwf	___fldiv@a+2,c
 11729  000972  0E42               	movlw	66
 11730  000974  6E16               	movwf	___fldiv@a+3,c
 11731  000976  50CF               	movf	4047,w,c	;volatile
 11732  000978  6E33               	movwf	(??_echo+1)& (0+255),c
 11733  00097A  6A32               	clrf	??_echo& (0+255),c
 11734  00097C  50CE               	movf	4046,w,c	;volatile
 11735  00097E  6E34               	movwf	(??_echo+2)& (0+255),c
 11736  000980  6A35               	clrf	(??_echo+3)& (0+255),c
 11737  000982  5032               	movf	??_echo,w,c
 11738  000984  1234               	iorwf	??_echo+2,f,c
 11739  000986  5033               	movf	??_echo+1,w,c
 11740  000988  1235               	iorwf	??_echo+3,f,c
 11741  00098A  C034  F001         	movff	??_echo+2,___xxtofl@val
 11742  00098E  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 11743  000992  0E00               	movlw	0
 11744  000994  BE02               	btfsc	___xxtofl@val+1,7,c
 11745  000996  0EFF               	movlw	-1
 11746  000998  6E03               	movwf	___xxtofl@val+2,c
 11747  00099A  6E04               	movwf	___xxtofl@val+3,c
 11748  00099C  0E01               	movlw	1
 11749  00099E  ECD5  F012         	call	___xxtofl
 11750  0009A2  C001  F00F         	movff	?___xxtofl,___fldiv@b
 11751  0009A6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 11752  0009AA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 11753  0009AE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 11754  0009B2  EC02  F00C         	call	___fldiv	;wreg free
 11755  0009B6  C00F  F028         	movff	?___fldiv,___fltol@f1
 11756  0009BA  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 11757  0009BE  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 11758  0009C2  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 11759  0009C6  EC72  F015         	call	___fltol	;wreg free
 11760  0009CA  C028  F042         	movff	?___fltol,_a+2
 11761  0009CE  C029  F043         	movff	?___fltol+1,_a+3
 11762  0009D2                     i2l5060:
 11763                           
 11764                           ;main.c: 132:                 if (a[1]>=2 && a[1]<=200){
 11765  0009D2  BE43               	btfsc	_a+3,7,c
 11766  0009D4  D067               	goto	i2l5084
 11767  0009D6  5043               	movf	_a+3,w,c
 11768  0009D8  E104               	bnz	i2u515_40
 11769  0009DA  0E02               	movlw	2
 11770  0009DC  5C42               	subwf	_a+2,w,c
 11771  0009DE  A0D8               	btfss	status,0,c
 11772  0009E0  D061               	goto	i2l5084
 11773  0009E2                     i2u515_40:
 11774  0009E2  BE43               	btfsc	_a+3,7,c
 11775  0009E4  D006               	goto	i2u516_40
 11776  0009E6  5043               	movf	_a+3,w,c
 11777  0009E8  E15D               	bnz	i2l5084
 11778  0009EA  0EC9               	movlw	201
 11779  0009EC  5C42               	subwf	_a+2,w,c
 11780  0009EE  B0D8               	btfsc	status,0,c
 11781  0009F0  D059               	goto	i2l5084
 11782  0009F2                     i2u516_40:
 11783                           
 11784                           ;main.c: 134:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 11785  0009F2  0449               	decf	_sumf+1,w,c
 11786  0009F4  B4D8               	btfsc	status,2,c
 11787  0009F6  D01B               	goto	i2l5076
 11788  0009F8  0101               	movlb	1	; () banked
 11789  0009FA  517A               	movf	(_dist_final+12)& (0+255),w,b
 11790  0009FC  117B               	iorwf	(_dist_final+13)& (0+255),w,b
 11791  0009FE  B4D8               	btfsc	status,2,c
 11792  000A00  D016               	goto	i2l5076
 11793                           
 11794                           ; BSR set to: 1
 11795  000A02  517C               	movf	(_dist_final+14)& (0+255),w,b
 11796  000A04  117D               	iorwf	(_dist_final+15)& (0+255),w,b
 11797  000A06  B4D8               	btfsc	status,2,c
 11798  000A08  D012               	goto	i2l5076
 11799                           
 11800                           ; BSR set to: 1
 11801  000A0A  517E               	movf	(_dist_final+16)& (0+255),w,b
 11802  000A0C  117F               	iorwf	(_dist_final+17)& (0+255),w,b
 11803  000A0E  B4D8               	btfsc	status,2,c
 11804  000A10  D00E               	goto	i2l5076
 11805                           
 11806                           ; BSR set to: 1
 11807                           ;main.c: 135:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 11808  000A12  517C               	movf	(_dist_final+14)& (0+255),w,b
 11809  000A14  257A               	addwf	(_dist_final+12)& (0+255),w,b
 11810  000A16  6E32               	movwf	??_echo& (0+255),c
 11811  000A18  517D               	movf	(_dist_final+15)& (0+255),w,b
 11812  000A1A  217B               	addwfc	(_dist_final+13)& (0+255),w,b
 11813  000A1C  6E33               	movwf	(??_echo+1)& (0+255),c
 11814  000A1E  517E               	movf	(_dist_final+16)& (0+255),w,b
 11815  000A20  2432               	addwf	??_echo,w,c
 11816  000A22  6E3A               	movwf	_sum+2,c
 11817  000A24  517F               	movf	(_dist_final+17)& (0+255),w,b
 11818  000A26  2033               	addwfc	??_echo+1,w,c
 11819  000A28  6E3B               	movwf	_sum+3,c
 11820                           
 11821                           ; BSR set to: 1
 11822                           ;main.c: 136:             sumf[1] = 1;
 11823  000A2A  0E01               	movlw	1
 11824  000A2C  6E49               	movwf	_sumf+1,c
 11825  000A2E                     i2l5076:
 11826                           
 11827                           ;main.c: 138:         if (sumf[1]){
 11828  000A2E  5049               	movf	_sumf+1,w,c
 11829  000A30  B4D8               	btfsc	status,2,c
 11830  000A32  D02B               	goto	i2l5082
 11831                           
 11832                           ;main.c: 139:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 11833  000A34  90D8               	bcf	status,0,c
 11834  000A36  3458               	rlcf	_meas,w,c	;volatile
 11835  000A38  6ED9               	movwf	fsr2l,c
 11836  000A3A  3459               	rlcf	_meas+1,w,c	;volatile
 11837  000A3C  6EDA               	movwf	fsr2h,c
 11838  000A3E  0E7A               	movlw	low (_dist_final+12)
 11839  000A40  26D9               	addwf	fsr2l,f,c
 11840  000A42  0E01               	movlw	high (_dist_final+12)
 11841  000A44  22DA               	addwfc	fsr2h,f,c
 11842  000A46  CFDE F032          	movff	postinc2,??_echo
 11843  000A4A  CFDD F033          	movff	postdec2,??_echo+1
 11844  000A4E  EE20  F03A         	lfsr	2,_sum+2
 11845  000A52  CFDE F034          	movff	postinc2,??_echo+2
 11846  000A56  CFDD F035          	movff	postdec2,??_echo+3
 11847  000A5A  5032               	movf	??_echo,w,c
 11848  000A5C  5E34               	subwf	??_echo+2,f,c
 11849  000A5E  5033               	movf	??_echo+1,w,c
 11850  000A60  5A35               	subwfb	??_echo+3,f,c
 11851  000A62  5042               	movf	_a+2,w,c
 11852  000A64  2434               	addwf	??_echo+2,w,c
 11853  000A66  6E3A               	movwf	_sum+2,c
 11854  000A68  5043               	movf	_a+3,w,c
 11855  000A6A  2035               	addwfc	??_echo+3,w,c
 11856  000A6C  6E3B               	movwf	_sum+3,c
 11857                           
 11858                           ;main.c: 140:             dist_final[1][5] = (sum[1]/5);
 11859  000A6E  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 11860  000A72  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 11861  000A76  0E00               	movlw	0
 11862  000A78  6E04               	movwf	i2___awdiv@divisor+1,c
 11863  000A7A  0E05               	movlw	5
 11864  000A7C  6E03               	movwf	i2___awdiv@divisor,c
 11865  000A7E  ECE8  F016         	call	i2___awdiv	;wreg free
 11866  000A82  C001  F184         	movff	?i2___awdiv,_dist_final+22
 11867  000A86  C002  F185         	movff	?i2___awdiv+1,_dist_final+23
 11868  000A8A                     i2l5082:
 11869                           
 11870                           ;main.c: 142:         dist_final[1][meas] = a[1];
 11871  000A8A  90D8               	bcf	status,0,c
 11872  000A8C  3458               	rlcf	_meas,w,c	;volatile
 11873  000A8E  6ED9               	movwf	fsr2l,c
 11874  000A90  3459               	rlcf	_meas+1,w,c	;volatile
 11875  000A92  6EDA               	movwf	fsr2h,c
 11876  000A94  0E7A               	movlw	low (_dist_final+12)
 11877  000A96  26D9               	addwf	fsr2l,f,c
 11878  000A98  0E01               	movlw	high (_dist_final+12)
 11879  000A9A  22DA               	addwfc	fsr2h,f,c
 11880  000A9C  C042  FFDE         	movff	_a+2,postinc2
 11881  000AA0  C043  FFDD         	movff	_a+3,postdec2
 11882  000AA4                     i2l5084:
 11883                           
 11884                           ;main.c: 145:     if (b==3){
 11885  000AA4  0E03               	movlw	3
 11886  000AA6  1862               	xorwf	_b,w,c
 11887  000AA8  1063               	iorwf	_b+1,w,c
 11888  000AAA  A4D8               	btfss	status,2,c
 11889  000AAC  D0A4               	goto	i2l5118
 11890                           
 11891                           ;main.c: 146:         if (RB5 == 1){
 11892  000AAE  BA81               	btfsc	3969,5,c	;volatile
 11893                           
 11894                           ;main.c: 147:             TMR1ON = 1;
 11895  000AB0  80CD               	bsf	4045,0,c	;volatile
 11896                           
 11897                           ;main.c: 149:         if (RB5 == 0){
 11898                           
 11899                           ;main.c: 148:         }
 11900  000AB2  BA81               	btfsc	3969,5,c	;volatile
 11901  000AB4  D037               	goto	i2l5094
 11902                           
 11903                           ;main.c: 150:             TMR1ON = 0;
 11904  000AB6  90CD               	bcf	4045,0,c	;volatile
 11905                           
 11906                           ;main.c: 151:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 11907  000AB8  0EAE               	movlw	174
 11908  000ABA  6E13               	movwf	___fldiv@a,c
 11909  000ABC  0E47               	movlw	71
 11910  000ABE  6E14               	movwf	___fldiv@a+1,c
 11911  000AC0  0E6B               	movlw	107
 11912  000AC2  6E15               	movwf	___fldiv@a+2,c
 11913  000AC4  0E42               	movlw	66
 11914  000AC6  6E16               	movwf	___fldiv@a+3,c
 11915  000AC8  50CF               	movf	4047,w,c	;volatile
 11916  000ACA  6E33               	movwf	(??_echo+1)& (0+255),c
 11917  000ACC  6A32               	clrf	??_echo& (0+255),c
 11918  000ACE  50CE               	movf	4046,w,c	;volatile
 11919  000AD0  6E34               	movwf	(??_echo+2)& (0+255),c
 11920  000AD2  6A35               	clrf	(??_echo+3)& (0+255),c
 11921  000AD4  5032               	movf	??_echo,w,c
 11922  000AD6  1234               	iorwf	??_echo+2,f,c
 11923  000AD8  5033               	movf	??_echo+1,w,c
 11924  000ADA  1235               	iorwf	??_echo+3,f,c
 11925  000ADC  C034  F001         	movff	??_echo+2,___xxtofl@val
 11926  000AE0  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 11927  000AE4  0E00               	movlw	0
 11928  000AE6  BE02               	btfsc	___xxtofl@val+1,7,c
 11929  000AE8  0EFF               	movlw	-1
 11930  000AEA  6E03               	movwf	___xxtofl@val+2,c
 11931  000AEC  6E04               	movwf	___xxtofl@val+3,c
 11932  000AEE  0E01               	movlw	1
 11933  000AF0  ECD5  F012         	call	___xxtofl
 11934  000AF4  C001  F00F         	movff	?___xxtofl,___fldiv@b
 11935  000AF8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 11936  000AFC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 11937  000B00  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 11938  000B04  EC02  F00C         	call	___fldiv	;wreg free
 11939  000B08  C00F  F028         	movff	?___fldiv,___fltol@f1
 11940  000B0C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 11941  000B10  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 11942  000B14  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 11943  000B18  EC72  F015         	call	___fltol	;wreg free
 11944  000B1C  C028  F044         	movff	?___fltol,_a+4
 11945  000B20  C029  F045         	movff	?___fltol+1,_a+5
 11946  000B24                     i2l5094:
 11947                           
 11948                           ;main.c: 154:                 if (a[2]>=2 && a[2]<=200){
 11949  000B24  BE45               	btfsc	_a+5,7,c
 11950  000B26  D067               	goto	i2l5118
 11951  000B28  5045               	movf	_a+5,w,c
 11952  000B2A  E104               	bnz	i2u525_40
 11953  000B2C  0E02               	movlw	2
 11954  000B2E  5C44               	subwf	_a+4,w,c
 11955  000B30  A0D8               	btfss	status,0,c
 11956  000B32  D061               	goto	i2l5118
 11957  000B34                     i2u525_40:
 11958  000B34  BE45               	btfsc	_a+5,7,c
 11959  000B36  D006               	goto	i2u526_40
 11960  000B38  5045               	movf	_a+5,w,c
 11961  000B3A  E15D               	bnz	i2l5118
 11962  000B3C  0EC9               	movlw	201
 11963  000B3E  5C44               	subwf	_a+4,w,c
 11964  000B40  B0D8               	btfsc	status,0,c
 11965  000B42  D059               	goto	i2l5118
 11966  000B44                     i2u526_40:
 11967                           
 11968                           ;main.c: 156:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 11969  000B44  044A               	decf	_sumf+2,w,c
 11970  000B46  B4D8               	btfsc	status,2,c
 11971  000B48  D01B               	goto	i2l5110
 11972  000B4A  0101               	movlb	1	; () banked
 11973  000B4C  5186               	movf	(_dist_final+24)& (0+255),w,b
 11974  000B4E  1187               	iorwf	(_dist_final+25)& (0+255),w,b
 11975  000B50  B4D8               	btfsc	status,2,c
 11976  000B52  D016               	goto	i2l5110
 11977                           
 11978                           ; BSR set to: 1
 11979  000B54  5188               	movf	(_dist_final+26)& (0+255),w,b
 11980  000B56  1189               	iorwf	(_dist_final+27)& (0+255),w,b
 11981  000B58  B4D8               	btfsc	status,2,c
 11982  000B5A  D012               	goto	i2l5110
 11983                           
 11984                           ; BSR set to: 1
 11985  000B5C  518A               	movf	(_dist_final+28)& (0+255),w,b
 11986  000B5E  118B               	iorwf	(_dist_final+29)& (0+255),w,b
 11987  000B60  B4D8               	btfsc	status,2,c
 11988  000B62  D00E               	goto	i2l5110
 11989                           
 11990                           ; BSR set to: 1
 11991                           ;main.c: 157:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 11992  000B64  5188               	movf	(_dist_final+26)& (0+255),w,b
 11993  000B66  2586               	addwf	(_dist_final+24)& (0+255),w,b
 11994  000B68  6E32               	movwf	??_echo& (0+255),c
 11995  000B6A  5189               	movf	(_dist_final+27)& (0+255),w,b
 11996  000B6C  2187               	addwfc	(_dist_final+25)& (0+255),w,b
 11997  000B6E  6E33               	movwf	(??_echo+1)& (0+255),c
 11998  000B70  518A               	movf	(_dist_final+28)& (0+255),w,b
 11999  000B72  2432               	addwf	??_echo,w,c
 12000  000B74  6E3C               	movwf	_sum+4,c
 12001  000B76  518B               	movf	(_dist_final+29)& (0+255),w,b
 12002  000B78  2033               	addwfc	??_echo+1,w,c
 12003  000B7A  6E3D               	movwf	_sum+5,c
 12004                           
 12005                           ; BSR set to: 1
 12006                           ;main.c: 158:             sumf[2] = 1;
 12007  000B7C  0E01               	movlw	1
 12008  000B7E  6E4A               	movwf	_sumf+2,c
 12009  000B80                     i2l5110:
 12010                           
 12011                           ;main.c: 160:         if (sumf[2]){
 12012  000B80  504A               	movf	_sumf+2,w,c
 12013  000B82  B4D8               	btfsc	status,2,c
 12014  000B84  D02B               	goto	i2l5116
 12015                           
 12016                           ;main.c: 161:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 12017  000B86  90D8               	bcf	status,0,c
 12018  000B88  3458               	rlcf	_meas,w,c	;volatile
 12019  000B8A  6ED9               	movwf	fsr2l,c
 12020  000B8C  3459               	rlcf	_meas+1,w,c	;volatile
 12021  000B8E  6EDA               	movwf	fsr2h,c
 12022  000B90  0E86               	movlw	low (_dist_final+24)
 12023  000B92  26D9               	addwf	fsr2l,f,c
 12024  000B94  0E01               	movlw	high (_dist_final+24)
 12025  000B96  22DA               	addwfc	fsr2h,f,c
 12026  000B98  CFDE F032          	movff	postinc2,??_echo
 12027  000B9C  CFDD F033          	movff	postdec2,??_echo+1
 12028  000BA0  EE20  F03C         	lfsr	2,_sum+4
 12029  000BA4  CFDE F034          	movff	postinc2,??_echo+2
 12030  000BA8  CFDD F035          	movff	postdec2,??_echo+3
 12031  000BAC  5032               	movf	??_echo,w,c
 12032  000BAE  5E34               	subwf	??_echo+2,f,c
 12033  000BB0  5033               	movf	??_echo+1,w,c
 12034  000BB2  5A35               	subwfb	??_echo+3,f,c
 12035  000BB4  5044               	movf	_a+4,w,c
 12036  000BB6  2434               	addwf	??_echo+2,w,c
 12037  000BB8  6E3C               	movwf	_sum+4,c
 12038  000BBA  5045               	movf	_a+5,w,c
 12039  000BBC  2035               	addwfc	??_echo+3,w,c
 12040  000BBE  6E3D               	movwf	_sum+5,c
 12041                           
 12042                           ;main.c: 162:             dist_final[2][5] = (sum[2]/5);
 12043  000BC0  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 12044  000BC4  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 12045  000BC8  0E00               	movlw	0
 12046  000BCA  6E04               	movwf	i2___awdiv@divisor+1,c
 12047  000BCC  0E05               	movlw	5
 12048  000BCE  6E03               	movwf	i2___awdiv@divisor,c
 12049  000BD0  ECE8  F016         	call	i2___awdiv	;wreg free
 12050  000BD4  C001  F190         	movff	?i2___awdiv,_dist_final+34
 12051  000BD8  C002  F191         	movff	?i2___awdiv+1,_dist_final+35
 12052  000BDC                     i2l5116:
 12053                           
 12054                           ;main.c: 164:         dist_final[2][meas] = a[2];
 12055  000BDC  90D8               	bcf	status,0,c
 12056  000BDE  3458               	rlcf	_meas,w,c	;volatile
 12057  000BE0  6ED9               	movwf	fsr2l,c
 12058  000BE2  3459               	rlcf	_meas+1,w,c	;volatile
 12059  000BE4  6EDA               	movwf	fsr2h,c
 12060  000BE6  0E86               	movlw	low (_dist_final+24)
 12061  000BE8  26D9               	addwf	fsr2l,f,c
 12062  000BEA  0E01               	movlw	high (_dist_final+24)
 12063  000BEC  22DA               	addwfc	fsr2h,f,c
 12064  000BEE  C044  FFDE         	movff	_a+4,postinc2
 12065  000BF2  C045  FFDD         	movff	_a+5,postdec2
 12066  000BF6                     i2l5118:
 12067                           
 12068                           ;main.c: 167:     if (b==4){
 12069  000BF6  0E04               	movlw	4
 12070  000BF8  1862               	xorwf	_b,w,c
 12071  000BFA  1063               	iorwf	_b+1,w,c
 12072  000BFC  A4D8               	btfss	status,2,c
 12073  000BFE  0012               	return	
 12074                           
 12075                           ;main.c: 168:         if (RB4 == 1){
 12076  000C00  B881               	btfsc	3969,4,c	;volatile
 12077                           
 12078                           ;main.c: 169:             TMR1ON = 1;
 12079  000C02  80CD               	bsf	4045,0,c	;volatile
 12080                           
 12081                           ;main.c: 171:         if (RB4 == 0){
 12082                           
 12083                           ;main.c: 170:         }
 12084  000C04  B881               	btfsc	3969,4,c	;volatile
 12085  000C06  D037               	goto	i2l5128
 12086                           
 12087                           ;main.c: 172:             TMR1ON = 0;
 12088  000C08  90CD               	bcf	4045,0,c	;volatile
 12089                           
 12090                           ;main.c: 173:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 12091  000C0A  0EAE               	movlw	174
 12092  000C0C  6E13               	movwf	___fldiv@a,c
 12093  000C0E  0E47               	movlw	71
 12094  000C10  6E14               	movwf	___fldiv@a+1,c
 12095  000C12  0E6B               	movlw	107
 12096  000C14  6E15               	movwf	___fldiv@a+2,c
 12097  000C16  0E42               	movlw	66
 12098  000C18  6E16               	movwf	___fldiv@a+3,c
 12099  000C1A  50CF               	movf	4047,w,c	;volatile
 12100  000C1C  6E33               	movwf	(??_echo+1)& (0+255),c
 12101  000C1E  6A32               	clrf	??_echo& (0+255),c
 12102  000C20  50CE               	movf	4046,w,c	;volatile
 12103  000C22  6E34               	movwf	(??_echo+2)& (0+255),c
 12104  000C24  6A35               	clrf	(??_echo+3)& (0+255),c
 12105  000C26  5032               	movf	??_echo,w,c
 12106  000C28  1234               	iorwf	??_echo+2,f,c
 12107  000C2A  5033               	movf	??_echo+1,w,c
 12108  000C2C  1235               	iorwf	??_echo+3,f,c
 12109  000C2E  C034  F001         	movff	??_echo+2,___xxtofl@val
 12110  000C32  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12111  000C36  0E00               	movlw	0
 12112  000C38  BE02               	btfsc	___xxtofl@val+1,7,c
 12113  000C3A  0EFF               	movlw	-1
 12114  000C3C  6E03               	movwf	___xxtofl@val+2,c
 12115  000C3E  6E04               	movwf	___xxtofl@val+3,c
 12116  000C40  0E01               	movlw	1
 12117  000C42  ECD5  F012         	call	___xxtofl
 12118  000C46  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12119  000C4A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12120  000C4E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12121  000C52  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12122  000C56  EC02  F00C         	call	___fldiv	;wreg free
 12123  000C5A  C00F  F028         	movff	?___fldiv,___fltol@f1
 12124  000C5E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12125  000C62  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12126  000C66  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12127  000C6A  EC72  F015         	call	___fltol	;wreg free
 12128  000C6E  C028  F046         	movff	?___fltol,_a+6
 12129  000C72  C029  F047         	movff	?___fltol+1,_a+7
 12130  000C76                     i2l5128:
 12131                           
 12132                           ;main.c: 176:                 if (a[3]>=2 && a[3]<=200){
 12133  000C76  BE47               	btfsc	_a+7,7,c
 12134  000C78  0012               	return	
 12135  000C7A  5047               	movf	_a+7,w,c
 12136  000C7C  E104               	bnz	i2u535_40
 12137  000C7E  0E02               	movlw	2
 12138  000C80  5C46               	subwf	_a+6,w,c
 12139  000C82  A0D8               	btfss	status,0,c
 12140  000C84  0012               	return	
 12141  000C86                     i2u535_40:
 12142  000C86  BE47               	btfsc	_a+7,7,c
 12143  000C88  D006               	goto	i2u536_40
 12144  000C8A  5047               	movf	_a+7,w,c
 12145  000C8C  E15D               	bnz	i2l188
 12146  000C8E  0EC9               	movlw	201
 12147  000C90  5C46               	subwf	_a+6,w,c
 12148  000C92  B0D8               	btfsc	status,0,c
 12149  000C94  0012               	return	
 12150  000C96                     i2u536_40:
 12151                           
 12152                           ;main.c: 178:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 12153  000C96  044B               	decf	_sumf+3,w,c
 12154  000C98  B4D8               	btfsc	status,2,c
 12155  000C9A  D01B               	goto	i2l5144
 12156  000C9C  0101               	movlb	1	; () banked
 12157  000C9E  5192               	movf	(_dist_final+36)& (0+255),w,b
 12158  000CA0  1193               	iorwf	(_dist_final+37)& (0+255),w,b
 12159  000CA2  B4D8               	btfsc	status,2,c
 12160  000CA4  D016               	goto	i2l5144
 12161                           
 12162                           ; BSR set to: 1
 12163  000CA6  5194               	movf	(_dist_final+38)& (0+255),w,b
 12164  000CA8  1195               	iorwf	(_dist_final+39)& (0+255),w,b
 12165  000CAA  B4D8               	btfsc	status,2,c
 12166  000CAC  D012               	goto	i2l5144
 12167                           
 12168                           ; BSR set to: 1
 12169  000CAE  5196               	movf	(_dist_final+40)& (0+255),w,b
 12170  000CB0  1197               	iorwf	(_dist_final+41)& (0+255),w,b
 12171  000CB2  B4D8               	btfsc	status,2,c
 12172  000CB4  D00E               	goto	i2l5144
 12173                           
 12174                           ; BSR set to: 1
 12175                           ;main.c: 179:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 12176  000CB6  5194               	movf	(_dist_final+38)& (0+255),w,b
 12177  000CB8  2592               	addwf	(_dist_final+36)& (0+255),w,b
 12178  000CBA  6E32               	movwf	??_echo& (0+255),c
 12179  000CBC  5195               	movf	(_dist_final+39)& (0+255),w,b
 12180  000CBE  2193               	addwfc	(_dist_final+37)& (0+255),w,b
 12181  000CC0  6E33               	movwf	(??_echo+1)& (0+255),c
 12182  000CC2  5196               	movf	(_dist_final+40)& (0+255),w,b
 12183  000CC4  2432               	addwf	??_echo,w,c
 12184  000CC6  6E3E               	movwf	_sum+6,c
 12185  000CC8  5197               	movf	(_dist_final+41)& (0+255),w,b
 12186  000CCA  2033               	addwfc	??_echo+1,w,c
 12187  000CCC  6E3F               	movwf	_sum+7,c
 12188                           
 12189                           ; BSR set to: 1
 12190                           ;main.c: 180:             sumf[3] = 1;
 12191  000CCE  0E01               	movlw	1
 12192  000CD0  6E4B               	movwf	_sumf+3,c
 12193  000CD2                     i2l5144:
 12194                           
 12195                           ;main.c: 182:         if (sumf[3]){
 12196  000CD2  504B               	movf	_sumf+3,w,c
 12197  000CD4  B4D8               	btfsc	status,2,c
 12198  000CD6  D02B               	goto	i2l5150
 12199                           
 12200                           ;main.c: 183:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 12201  000CD8  90D8               	bcf	status,0,c
 12202  000CDA  3458               	rlcf	_meas,w,c	;volatile
 12203  000CDC  6ED9               	movwf	fsr2l,c
 12204  000CDE  3459               	rlcf	_meas+1,w,c	;volatile
 12205  000CE0  6EDA               	movwf	fsr2h,c
 12206  000CE2  0E92               	movlw	low (_dist_final+36)
 12207  000CE4  26D9               	addwf	fsr2l,f,c
 12208  000CE6  0E01               	movlw	high (_dist_final+36)
 12209  000CE8  22DA               	addwfc	fsr2h,f,c
 12210  000CEA  CFDE F032          	movff	postinc2,??_echo
 12211  000CEE  CFDD F033          	movff	postdec2,??_echo+1
 12212  000CF2  EE20  F03E         	lfsr	2,_sum+6
 12213  000CF6  CFDE F034          	movff	postinc2,??_echo+2
 12214  000CFA  CFDD F035          	movff	postdec2,??_echo+3
 12215  000CFE  5032               	movf	??_echo,w,c
 12216  000D00  5E34               	subwf	??_echo+2,f,c
 12217  000D02  5033               	movf	??_echo+1,w,c
 12218  000D04  5A35               	subwfb	??_echo+3,f,c
 12219  000D06  5046               	movf	_a+6,w,c
 12220  000D08  2434               	addwf	??_echo+2,w,c
 12221  000D0A  6E3E               	movwf	_sum+6,c
 12222  000D0C  5047               	movf	_a+7,w,c
 12223  000D0E  2035               	addwfc	??_echo+3,w,c
 12224  000D10  6E3F               	movwf	_sum+7,c
 12225                           
 12226                           ;main.c: 184:             dist_final[3][5] = (sum[3]/5);
 12227  000D12  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 12228  000D16  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 12229  000D1A  0E00               	movlw	0
 12230  000D1C  6E04               	movwf	i2___awdiv@divisor+1,c
 12231  000D1E  0E05               	movlw	5
 12232  000D20  6E03               	movwf	i2___awdiv@divisor,c
 12233  000D22  ECE8  F016         	call	i2___awdiv	;wreg free
 12234  000D26  C001  F19C         	movff	?i2___awdiv,_dist_final+46
 12235  000D2A  C002  F19D         	movff	?i2___awdiv+1,_dist_final+47
 12236  000D2E                     i2l5150:
 12237                           
 12238                           ;main.c: 186:         dist_final[3][meas] = a[3];
 12239  000D2E  90D8               	bcf	status,0,c
 12240  000D30  3458               	rlcf	_meas,w,c	;volatile
 12241  000D32  6ED9               	movwf	fsr2l,c
 12242  000D34  3459               	rlcf	_meas+1,w,c	;volatile
 12243  000D36  6EDA               	movwf	fsr2h,c
 12244  000D38  0E92               	movlw	low (_dist_final+36)
 12245  000D3A  26D9               	addwf	fsr2l,f,c
 12246  000D3C  0E01               	movlw	high (_dist_final+36)
 12247  000D3E  22DA               	addwfc	fsr2h,f,c
 12248  000D40  C046  FFDE         	movff	_a+6,postinc2
 12249  000D44  C047  FFDD         	movff	_a+7,postdec2
 12250  000D48                     i2l188:
 12251  000D48  0012               	return		;funcret
 12252  000D4A                     __end_of_echo:
 12253                           	opt callstack 0
 12254                           
 12255 ;; *************** function i2___awdiv *****************
 12256 ;; Defined at:
 12257 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12258 ;; Parameters:    Size  Location     Type
 12259 ;;  dividend        2    0[COMRAM] int 
 12260 ;;  divisor         2    2[COMRAM] int 
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;  __awdiv         2    6[COMRAM] int 
 12263 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12264 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  2    0[COMRAM] int 
 12267 ;; Registers used:
 12268 ;;		wreg, status,2, status,0
 12269 ;; Tracked objects:
 12270 ;;		On entry : 0/0
 12271 ;;		On exit  : 0/0
 12272 ;;		Unchanged: 0/0
 12273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12275 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12277 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12278 ;;Total ram usage:        8 bytes
 12279 ;; Hardware stack levels used:    1
 12280 ;; This function calls:
 12281 ;;		Nothing
 12282 ;; This function is called by:
 12283 ;;		_echo
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text57
 12288  002DD0                     __ptext57:
 12289                           	opt callstack 0
 12290  002DD0                     i2___awdiv:
 12291                           	opt callstack 14
 12292                           
 12293                           ;incstack = 0
 12294  002DD0  0E00               	movlw	0
 12295  002DD2  6E06               	movwf	i2___awdiv@sign,c
 12296  002DD4  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12297  002DD6  D006               	goto	i2l4980
 12298  002DD8  6C03               	negf	i2___awdiv@divisor,c
 12299  002DDA  1E04               	comf	i2___awdiv@divisor+1,f,c
 12300  002DDC  B0D8               	btfsc	status,0,c
 12301  002DDE  2A04               	incf	i2___awdiv@divisor+1,f,c
 12302  002DE0  0E01               	movlw	1
 12303  002DE2  6E06               	movwf	i2___awdiv@sign,c
 12304  002DE4                     i2l4980:
 12305  002DE4  AE02               	btfss	i2___awdiv@dividend+1,7,c
 12306  002DE6  D006               	goto	i2l4986
 12307  002DE8  6C01               	negf	i2___awdiv@dividend,c
 12308  002DEA  1E02               	comf	i2___awdiv@dividend+1,f,c
 12309  002DEC  B0D8               	btfsc	status,0,c
 12310  002DEE  2A02               	incf	i2___awdiv@dividend+1,f,c
 12311  002DF0  0E01               	movlw	1
 12312  002DF2  1A06               	xorwf	i2___awdiv@sign,f,c
 12313  002DF4                     i2l4986:
 12314  002DF4  0E00               	movlw	0
 12315  002DF6  6E08               	movwf	i2___awdiv@quotient+1,c
 12316  002DF8  0E00               	movlw	0
 12317  002DFA  6E07               	movwf	i2___awdiv@quotient,c
 12318  002DFC  5003               	movf	i2___awdiv@divisor,w,c
 12319  002DFE  1004               	iorwf	i2___awdiv@divisor+1,w,c
 12320  002E00  B4D8               	btfsc	status,2,c
 12321  002E02  D01C               	goto	i2l5008
 12322  002E04  0E01               	movlw	1
 12323  002E06  6E05               	movwf	i2___awdiv@counter,c
 12324  002E08  D004               	goto	i2l4994
 12325  002E0A                     i2l4992:
 12326  002E0A  90D8               	bcf	status,0,c
 12327  002E0C  3603               	rlcf	i2___awdiv@divisor,f,c
 12328  002E0E  3604               	rlcf	i2___awdiv@divisor+1,f,c
 12329  002E10  2A05               	incf	i2___awdiv@counter,f,c
 12330  002E12                     i2l4994:
 12331  002E12  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12332  002E14  D7FA               	goto	i2l4992
 12333  002E16                     i2u499_40:
 12334  002E16  90D8               	bcf	status,0,c
 12335  002E18  3607               	rlcf	i2___awdiv@quotient,f,c
 12336  002E1A  3608               	rlcf	i2___awdiv@quotient+1,f,c
 12337  002E1C  5003               	movf	i2___awdiv@divisor,w,c
 12338  002E1E  5C01               	subwf	i2___awdiv@dividend,w,c
 12339  002E20  5004               	movf	i2___awdiv@divisor+1,w,c
 12340  002E22  5802               	subwfb	i2___awdiv@dividend+1,w,c
 12341  002E24  A0D8               	btfss	status,0,c
 12342  002E26  D005               	goto	i2l5004
 12343  002E28  5003               	movf	i2___awdiv@divisor,w,c
 12344  002E2A  5E01               	subwf	i2___awdiv@dividend,f,c
 12345  002E2C  5004               	movf	i2___awdiv@divisor+1,w,c
 12346  002E2E  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 12347  002E30  8007               	bsf	i2___awdiv@quotient,0,c
 12348  002E32                     i2l5004:
 12349  002E32  90D8               	bcf	status,0,c
 12350  002E34  3204               	rrcf	i2___awdiv@divisor+1,f,c
 12351  002E36  3203               	rrcf	i2___awdiv@divisor,f,c
 12352  002E38  2E05               	decfsz	i2___awdiv@counter,f,c
 12353  002E3A  D7ED               	goto	i2u499_40
 12354  002E3C                     i2l5008:
 12355  002E3C  5006               	movf	i2___awdiv@sign,w,c
 12356  002E3E  B4D8               	btfsc	status,2,c
 12357  002E40  D004               	goto	i2l5012
 12358  002E42  6C07               	negf	i2___awdiv@quotient,c
 12359  002E44  1E08               	comf	i2___awdiv@quotient+1,f,c
 12360  002E46  B0D8               	btfsc	status,0,c
 12361  002E48  2A08               	incf	i2___awdiv@quotient+1,f,c
 12362  002E4A                     i2l5012:
 12363  002E4A  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12364  002E4E  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12365  002E52  0012               	return		;funcret
 12366  002E54                     __end_ofi2___awdiv:
 12367                           	opt callstack 0
 12368                           
 12369 ;; *************** function ___xxtofl *****************
 12370 ;; Defined at:
 12371 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;  sign            1    wreg     unsigned char 
 12374 ;;  val             4    0[COMRAM] long 
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;  sign            1    8[COMRAM] unsigned char 
 12377 ;;  arg             4   10[COMRAM] unsigned long 
 12378 ;;  exp             1    9[COMRAM] unsigned char 
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  4    0[COMRAM] unsigned char 
 12381 ;; Registers used:
 12382 ;;		wreg, status,2, status,0
 12383 ;; Tracked objects:
 12384 ;;		On entry : 0/0
 12385 ;;		On exit  : 0/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12389 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12391 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12392 ;;Total ram usage:       14 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; This function calls:
 12395 ;;		Nothing
 12396 ;; This function is called by:
 12397 ;;		_echo
 12398 ;; This function uses a non-reentrant model
 12399 ;;
 12400                           
 12401                           	psect	text58
 12402  0025AA                     __ptext58:
 12403                           	opt callstack 0
 12404  0025AA                     ___xxtofl:
 12405                           	opt callstack 14
 12406                           
 12407                           ;incstack = 0
 12408                           ;___xxtofl@sign stored from wreg
 12409  0025AA  6E09               	movwf	___xxtofl@sign,c
 12410  0025AC  5009               	movf	___xxtofl@sign,w,c
 12411  0025AE  A4D8               	btfss	status,2,c
 12412  0025B0  AE04               	btfss	___xxtofl@val+3,7,c
 12413  0025B2  D01A               	goto	i2l1338
 12414  0025B4  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12415  0025B8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12416  0025BC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12417  0025C0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12418  0025C4  1E05               	comf	??___xxtofl,f,c
 12419  0025C6  1E06               	comf	??___xxtofl+1,f,c
 12420  0025C8  1E07               	comf	??___xxtofl+2,f,c
 12421  0025CA  1E08               	comf	??___xxtofl+3,f,c
 12422  0025CC  2A05               	incf	??___xxtofl,f,c
 12423  0025CE  0E00               	movlw	0
 12424  0025D0  2206               	addwfc	??___xxtofl+1,f,c
 12425  0025D2  2207               	addwfc	??___xxtofl+2,f,c
 12426  0025D4  2208               	addwfc	??___xxtofl+3,f,c
 12427  0025D6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12428  0025DA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12429  0025DE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12430  0025E2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12431  0025E6  D008               	goto	i2l4932
 12432  0025E8                     i2l1338:
 12433  0025E8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12434  0025EC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12435  0025F0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12436  0025F4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12437  0025F8                     i2l4932:
 12438  0025F8  5001               	movf	___xxtofl@val,w,c
 12439  0025FA  1002               	iorwf	___xxtofl@val+1,w,c
 12440  0025FC  1003               	iorwf	___xxtofl@val+2,w,c
 12441  0025FE  1004               	iorwf	___xxtofl@val+3,w,c
 12442  002600  A4D8               	btfss	status,2,c
 12443  002602  D009               	goto	i2l4938
 12444  002604  0E00               	movlw	0
 12445  002606  6E01               	movwf	?___xxtofl,c
 12446  002608  0E00               	movlw	0
 12447  00260A  6E02               	movwf	?___xxtofl+1,c
 12448  00260C  0E00               	movlw	0
 12449  00260E  6E03               	movwf	?___xxtofl+2,c
 12450  002610  0E00               	movlw	0
 12451  002612  6E04               	movwf	?___xxtofl+3,c
 12452  002614  0012               	return	
 12453  002616                     i2l4938:
 12454  002616  0E96               	movlw	150
 12455  002618  6E0A               	movwf	___xxtofl@exp,c
 12456  00261A  D006               	goto	i2l4942
 12457  00261C                     i2l4940:
 12458  00261C  2A0A               	incf	___xxtofl@exp,f,c
 12459  00261E  90D8               	bcf	status,0,c
 12460  002620  320E               	rrcf	___xxtofl@arg+3,f,c
 12461  002622  320D               	rrcf	___xxtofl@arg+2,f,c
 12462  002624  320C               	rrcf	___xxtofl@arg+1,f,c
 12463  002626  320B               	rrcf	___xxtofl@arg,f,c
 12464  002628                     i2l4942:
 12465  002628  0E00               	movlw	0
 12466  00262A  140B               	andwf	___xxtofl@arg,w,c
 12467  00262C  6E05               	movwf	??___xxtofl& (0+255),c
 12468  00262E  0E00               	movlw	0
 12469  002630  140C               	andwf	___xxtofl@arg+1,w,c
 12470  002632  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 12471  002634  0E00               	movlw	0
 12472  002636  140D               	andwf	___xxtofl@arg+2,w,c
 12473  002638  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 12474  00263A  0EFE               	movlw	254
 12475  00263C  140E               	andwf	___xxtofl@arg+3,w,c
 12476  00263E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 12477  002640  5005               	movf	??___xxtofl,w,c
 12478  002642  1006               	iorwf	??___xxtofl+1,w,c
 12479  002644  1007               	iorwf	??___xxtofl+2,w,c
 12480  002646  1008               	iorwf	??___xxtofl+3,w,c
 12481  002648  B4D8               	btfsc	status,2,c
 12482  00264A  D00D               	goto	i2l1345
 12483  00264C  D7E7               	goto	i2l4940
 12484  00264E                     i2l4944:
 12485  00264E  2A0A               	incf	___xxtofl@exp,f,c
 12486  002650  0E01               	movlw	1
 12487  002652  260B               	addwf	___xxtofl@arg,f,c
 12488  002654  0E00               	movlw	0
 12489  002656  220C               	addwfc	___xxtofl@arg+1,f,c
 12490  002658  220D               	addwfc	___xxtofl@arg+2,f,c
 12491  00265A  220E               	addwfc	___xxtofl@arg+3,f,c
 12492  00265C  90D8               	bcf	status,0,c
 12493  00265E  320E               	rrcf	___xxtofl@arg+3,f,c
 12494  002660  320D               	rrcf	___xxtofl@arg+2,f,c
 12495  002662  320C               	rrcf	___xxtofl@arg+1,f,c
 12496  002664  320B               	rrcf	___xxtofl@arg,f,c
 12497  002666                     i2l1345:
 12498  002666  0E00               	movlw	0
 12499  002668  140B               	andwf	___xxtofl@arg,w,c
 12500  00266A  6E05               	movwf	??___xxtofl& (0+255),c
 12501  00266C  0E00               	movlw	0
 12502  00266E  140C               	andwf	___xxtofl@arg+1,w,c
 12503  002670  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 12504  002672  0E00               	movlw	0
 12505  002674  140D               	andwf	___xxtofl@arg+2,w,c
 12506  002676  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 12507  002678  0EFF               	movlw	255
 12508  00267A  140E               	andwf	___xxtofl@arg+3,w,c
 12509  00267C  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 12510  00267E  5005               	movf	??___xxtofl,w,c
 12511  002680  1006               	iorwf	??___xxtofl+1,w,c
 12512  002682  1007               	iorwf	??___xxtofl+2,w,c
 12513  002684  1008               	iorwf	??___xxtofl+3,w,c
 12514  002686  B4D8               	btfsc	status,2,c
 12515  002688  D007               	goto	i2l4952
 12516  00268A  D7E1               	goto	i2l4944
 12517  00268C                     i2l4950:
 12518  00268C  060A               	decf	___xxtofl@exp,f,c
 12519  00268E  90D8               	bcf	status,0,c
 12520  002690  360B               	rlcf	___xxtofl@arg,f,c
 12521  002692  360C               	rlcf	___xxtofl@arg+1,f,c
 12522  002694  360D               	rlcf	___xxtofl@arg+2,f,c
 12523  002696  360E               	rlcf	___xxtofl@arg+3,f,c
 12524  002698                     i2l4952:
 12525  002698  BE0D               	btfsc	___xxtofl@arg+2,7,c
 12526  00269A  D003               	goto	i2u492_40
 12527  00269C  0E02               	movlw	2
 12528  00269E  600A               	cpfslt	___xxtofl@exp,c
 12529  0026A0  D7F5               	goto	i2l4950
 12530  0026A2                     i2u492_40:
 12531  0026A2  A00A               	btfss	___xxtofl@exp,0,c
 12532  0026A4  9E0D               	bcf	___xxtofl@arg+2,7,c
 12533  0026A6  90D8               	bcf	status,0,c
 12534  0026A8  320A               	rrcf	___xxtofl@exp,f,c
 12535  0026AA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12536  0026AE  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 12537  0026B0  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 12538  0026B2  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 12539  0026B4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12540  0026B8  6A07               	clrf	??___xxtofl+2,c
 12541  0026BA  6A06               	clrf	??___xxtofl+1,c
 12542  0026BC  6A05               	clrf	??___xxtofl,c
 12543  0026BE  5005               	movf	??___xxtofl,w,c
 12544  0026C0  120B               	iorwf	___xxtofl@arg,f,c
 12545  0026C2  5006               	movf	??___xxtofl+1,w,c
 12546  0026C4  120C               	iorwf	___xxtofl@arg+1,f,c
 12547  0026C6  5007               	movf	??___xxtofl+2,w,c
 12548  0026C8  120D               	iorwf	___xxtofl@arg+2,f,c
 12549  0026CA  5008               	movf	??___xxtofl+3,w,c
 12550  0026CC  120E               	iorwf	___xxtofl@arg+3,f,c
 12551  0026CE  5009               	movf	___xxtofl@sign,w,c
 12552  0026D0  A4D8               	btfss	status,2,c
 12553  0026D2  AE04               	btfss	___xxtofl@val+3,7,c
 12554  0026D4  D001               	goto	i2l4968
 12555  0026D6  8E0E               	bsf	___xxtofl@arg+3,7,c
 12556  0026D8                     i2l4968:
 12557  0026D8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12558  0026DC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12559  0026E0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12560  0026E4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12561  0026E8  0012               	return		;funcret
 12562  0026EA                     __end_of___xxtofl:
 12563                           	opt callstack 0
 12564                           
 12565 ;; *************** function ___fltol *****************
 12566 ;; Defined at:
 12567 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 12568 ;; Parameters:    Size  Location     Type
 12569 ;;  f1              4   39[COMRAM] unsigned char 
 12570 ;; Auto vars:     Size  Location     Type
 12571 ;;  exp1            1   48[COMRAM] unsigned char 
 12572 ;;  sign1           1   47[COMRAM] unsigned char 
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  4   39[COMRAM] long 
 12575 ;; Registers used:
 12576 ;;		wreg, status,2, status,0
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12586 ;;Total ram usage:       10 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; This function calls:
 12589 ;;		Nothing
 12590 ;; This function is called by:
 12591 ;;		_echo
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           	psect	text59
 12596  002AE4                     __ptext59:
 12597                           	opt callstack 0
 12598  002AE4                     ___fltol:
 12599                           	opt callstack 14
 12600                           
 12601                           ;incstack = 0
 12602  002AE4  342A               	rlcf	___fltol@f1+2,w,c
 12603  002AE6  342B               	rlcf	___fltol@f1+3,w,c
 12604  002AE8  6E31               	movwf	___fltol@exp1,c
 12605  002AEA  5031               	movf	___fltol@exp1,w,c
 12606  002AEC  A4D8               	btfss	status,2,c
 12607  002AEE  D009               	goto	i2l4872
 12608  002AF0                     i2u476_40:
 12609  002AF0  0E00               	movlw	0
 12610  002AF2  6E28               	movwf	?___fltol,c
 12611  002AF4  0E00               	movlw	0
 12612  002AF6  6E29               	movwf	?___fltol+1,c
 12613  002AF8  0E00               	movlw	0
 12614  002AFA  6E2A               	movwf	?___fltol+2,c
 12615  002AFC  0E00               	movlw	0
 12616  002AFE  6E2B               	movwf	?___fltol+3,c
 12617  002B00  0012               	return	
 12618  002B02                     i2l4872:
 12619  002B02  C028  F02C         	movff	___fltol@f1,??___fltol
 12620  002B06  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 12621  002B0A  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 12622  002B0E  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 12623  002B12  0E20               	movlw	32
 12624  002B14  D005               	goto	i2u477_40
 12625  002B16                     i2u477_45:
 12626  002B16  90D8               	bcf	status,0,c
 12627  002B18  322F               	rrcf	??___fltol+3,f,c
 12628  002B1A  322E               	rrcf	??___fltol+2,f,c
 12629  002B1C  322D               	rrcf	??___fltol+1,f,c
 12630  002B1E  322C               	rrcf	??___fltol,f,c
 12631  002B20                     i2u477_40:
 12632  002B20  2EE8               	decfsz	wreg,f,c
 12633  002B22  D7F9               	goto	i2u477_45
 12634  002B24  502C               	movf	??___fltol,w,c
 12635  002B26  6E30               	movwf	___fltol@sign1,c
 12636  002B28  8E2A               	bsf	___fltol@f1+2,7,c
 12637  002B2A  0EFF               	movlw	255
 12638  002B2C  1628               	andwf	___fltol@f1,f,c
 12639  002B2E  0EFF               	movlw	255
 12640  002B30  1629               	andwf	___fltol@f1+1,f,c
 12641  002B32  0EFF               	movlw	255
 12642  002B34  162A               	andwf	___fltol@f1+2,f,c
 12643  002B36  0E00               	movlw	0
 12644  002B38  162B               	andwf	___fltol@f1+3,f,c
 12645  002B3A  0E96               	movlw	150
 12646  002B3C  5E31               	subwf	___fltol@exp1,f,c
 12647  002B3E  AE31               	btfss	___fltol@exp1,7,c
 12648  002B40  D00D               	goto	i2l4892
 12649  002B42  5031               	movf	___fltol@exp1,w,c
 12650  002B44  0A80               	xorlw	128
 12651  002B46  0F97               	addlw	151
 12652  002B48  A0D8               	btfss	status,0,c
 12653  002B4A  D7D2               	goto	i2u476_40
 12654  002B4C                     i2l4888:
 12655  002B4C  90D8               	bcf	status,0,c
 12656  002B4E  322B               	rrcf	___fltol@f1+3,f,c
 12657  002B50  322A               	rrcf	___fltol@f1+2,f,c
 12658  002B52  3229               	rrcf	___fltol@f1+1,f,c
 12659  002B54  3228               	rrcf	___fltol@f1,f,c
 12660  002B56  3E31               	incfsz	___fltol@exp1,f,c
 12661  002B58  D7F9               	goto	i2l4888
 12662  002B5A  D00D               	goto	i2u481_40
 12663  002B5C                     i2l4892:
 12664  002B5C  0E1F               	movlw	31
 12665  002B5E  6431               	cpfsgt	___fltol@exp1,c
 12666  002B60  D007               	goto	i2l4900
 12667  002B62  D7C6               	goto	i2u476_40
 12668  002B64                     i2l4898:
 12669  002B64  90D8               	bcf	status,0,c
 12670  002B66  3628               	rlcf	___fltol@f1,f,c
 12671  002B68  3629               	rlcf	___fltol@f1+1,f,c
 12672  002B6A  362A               	rlcf	___fltol@f1+2,f,c
 12673  002B6C  362B               	rlcf	___fltol@f1+3,f,c
 12674  002B6E  0631               	decf	___fltol@exp1,f,c
 12675  002B70                     i2l4900:
 12676  002B70  5031               	movf	___fltol@exp1,w,c
 12677  002B72  A4D8               	btfss	status,2,c
 12678  002B74  D7F7               	goto	i2l4898
 12679  002B76                     i2u481_40:
 12680  002B76  5030               	movf	___fltol@sign1,w,c
 12681  002B78  B4D8               	btfsc	status,2,c
 12682  002B7A  D008               	goto	i2l4906
 12683  002B7C  1E2B               	comf	___fltol@f1+3,f,c
 12684  002B7E  1E2A               	comf	___fltol@f1+2,f,c
 12685  002B80  1E29               	comf	___fltol@f1+1,f,c
 12686  002B82  6C28               	negf	___fltol@f1,c
 12687  002B84  0E00               	movlw	0
 12688  002B86  2229               	addwfc	___fltol@f1+1,f,c
 12689  002B88  222A               	addwfc	___fltol@f1+2,f,c
 12690  002B8A  222B               	addwfc	___fltol@f1+3,f,c
 12691  002B8C                     i2l4906:
 12692  002B8C  C028  F028         	movff	___fltol@f1,?___fltol
 12693  002B90  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 12694  002B94  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 12695  002B98  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 12696  002B9C  0012               	return		;funcret
 12697  002B9E                     __end_of___fltol:
 12698                           	opt callstack 0
 12699                           
 12700 ;; *************** function ___fldiv *****************
 12701 ;; Defined at:
 12702 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 12703 ;; Parameters:    Size  Location     Type
 12704 ;;  b               4   14[COMRAM] long 
 12705 ;;  a               4   18[COMRAM] long 
 12706 ;; Auto vars:     Size  Location     Type
 12707 ;;  grs             4   33[COMRAM] unsigned long 
 12708 ;;  rem             4   26[COMRAM] unsigned long 
 12709 ;;  new_exp         2   31[COMRAM] short 
 12710 ;;  aexp            1   38[COMRAM] unsigned char 
 12711 ;;  bexp            1   37[COMRAM] unsigned char 
 12712 ;;  sign            1   30[COMRAM] unsigned char 
 12713 ;; Return value:  Size  Location     Type
 12714 ;;                  4   14[COMRAM] unsigned char 
 12715 ;; Registers used:
 12716 ;;		wreg, status,2, status,0
 12717 ;; Tracked objects:
 12718 ;;		On entry : 0/0
 12719 ;;		On exit  : 0/0
 12720 ;;		Unchanged: 0/0
 12721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12722 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12724 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12725 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12726 ;;Total ram usage:       25 bytes
 12727 ;; Hardware stack levels used:    1
 12728 ;; This function calls:
 12729 ;;		Nothing
 12730 ;; This function is called by:
 12731 ;;		_echo
 12732 ;; This function uses a non-reentrant model
 12733 ;;
 12734                           
 12735                           	psect	text60
 12736  001804                     __ptext60:
 12737                           	opt callstack 0
 12738  001804                     ___fldiv:
 12739                           	opt callstack 14
 12740                           
 12741                           ;incstack = 0
 12742  001804  5012               	movf	___fldiv@b+3,w,c
 12743  001806  0B80               	andlw	128
 12744  001808  6E1F               	movwf	___fldiv@sign,c
 12745  00180A  5012               	movf	___fldiv@b+3,w,c
 12746  00180C  2412               	addwf	___fldiv@b+3,w,c
 12747  00180E  6E26               	movwf	___fldiv@bexp,c
 12748  001810  BE11               	btfsc	___fldiv@b+2,7,c
 12749  001812  8026               	bsf	___fldiv@bexp,0,c
 12750  001814  5026               	movf	___fldiv@bexp,w,c
 12751  001816  B4D8               	btfsc	status,2,c
 12752  001818  D00D               	goto	i2l4700
 12753  00181A  2826               	incf	___fldiv@bexp,w,c
 12754  00181C  A4D8               	btfss	status,2,c
 12755  00181E  D008               	goto	i2l4696
 12756  001820  0E00               	movlw	0
 12757  001822  6E0F               	movwf	___fldiv@b,c
 12758  001824  0E00               	movlw	0
 12759  001826  6E10               	movwf	___fldiv@b+1,c
 12760  001828  0E00               	movlw	0
 12761  00182A  6E11               	movwf	___fldiv@b+2,c
 12762  00182C  0E00               	movlw	0
 12763  00182E  6E12               	movwf	___fldiv@b+3,c
 12764  001830                     i2l4696:
 12765  001830  8E11               	bsf	___fldiv@b+2,7,c
 12766  001832  D006               	goto	L7
 12767  001834                     i2l4700:
 12768  001834  0E00               	movlw	0
 12769  001836  6E0F               	movwf	___fldiv@b,c
 12770  001838  0E00               	movlw	0
 12771  00183A  6E10               	movwf	___fldiv@b+1,c
 12772  00183C  0E00               	movlw	0
 12773  00183E  6E11               	movwf	___fldiv@b+2,c
 12774  001840                     L7:
 12775  001840  0E00               	movlw	0
 12776  001842  6E12               	movwf	___fldiv@b+3,c
 12777  001844  5016               	movf	___fldiv@a+3,w,c
 12778  001846  0B80               	andlw	128
 12779  001848  1A1F               	xorwf	___fldiv@sign,f,c
 12780  00184A  5016               	movf	___fldiv@a+3,w,c
 12781  00184C  2416               	addwf	___fldiv@a+3,w,c
 12782  00184E  6E27               	movwf	___fldiv@aexp,c
 12783  001850  BE15               	btfsc	___fldiv@a+2,7,c
 12784  001852  8027               	bsf	___fldiv@aexp,0,c
 12785  001854  5027               	movf	___fldiv@aexp,w,c
 12786  001856  B4D8               	btfsc	status,2,c
 12787  001858  D00D               	goto	i2l4720
 12788  00185A  2827               	incf	___fldiv@aexp,w,c
 12789  00185C  A4D8               	btfss	status,2,c
 12790  00185E  D008               	goto	i2l4716
 12791  001860  0E00               	movlw	0
 12792  001862  6E13               	movwf	___fldiv@a,c
 12793  001864  0E00               	movlw	0
 12794  001866  6E14               	movwf	___fldiv@a+1,c
 12795  001868  0E00               	movlw	0
 12796  00186A  6E15               	movwf	___fldiv@a+2,c
 12797  00186C  0E00               	movlw	0
 12798  00186E  6E16               	movwf	___fldiv@a+3,c
 12799  001870                     i2l4716:
 12800  001870  8E15               	bsf	___fldiv@a+2,7,c
 12801  001872  D006               	goto	L8
 12802  001874                     i2l4720:
 12803  001874  0E00               	movlw	0
 12804  001876  6E13               	movwf	___fldiv@a,c
 12805  001878  0E00               	movlw	0
 12806  00187A  6E14               	movwf	___fldiv@a+1,c
 12807  00187C  0E00               	movlw	0
 12808  00187E  6E15               	movwf	___fldiv@a+2,c
 12809  001880                     L8:
 12810  001880  0E00               	movlw	0
 12811  001882  6E16               	movwf	___fldiv@a+3,c
 12812  001884  5013               	movf	___fldiv@a,w,c
 12813  001886  1014               	iorwf	___fldiv@a+1,w,c
 12814  001888  1015               	iorwf	___fldiv@a+2,w,c
 12815  00188A  1016               	iorwf	___fldiv@a+3,w,c
 12816  00188C  A4D8               	btfss	status,2,c
 12817  00188E  D017               	goto	i2l4734
 12818  001890  0E00               	movlw	0
 12819  001892  6E0F               	movwf	___fldiv@b,c
 12820  001894  0E00               	movlw	0
 12821  001896  6E10               	movwf	___fldiv@b+1,c
 12822  001898  0E00               	movlw	0
 12823  00189A  6E11               	movwf	___fldiv@b+2,c
 12824  00189C  0E00               	movlw	0
 12825  00189E  6E12               	movwf	___fldiv@b+3,c
 12826  0018A0  0E80               	movlw	128
 12827  0018A2  1211               	iorwf	___fldiv@b+2,f,c
 12828  0018A4  0E7F               	movlw	127
 12829  0018A6  1212               	iorwf	___fldiv@b+3,f,c
 12830  0018A8                     i2l4728:
 12831  0018A8  501F               	movf	___fldiv@sign,w,c
 12832  0018AA  1212               	iorwf	___fldiv@b+3,f,c
 12833  0018AC  C00F  F00F         	movff	___fldiv@b,?___fldiv
 12834  0018B0  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 12835  0018B4  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 12836  0018B8  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 12837  0018BC  0012               	return	
 12838  0018BE                     i2l4734:
 12839  0018BE  5026               	movf	___fldiv@bexp,w,c
 12840  0018C0  A4D8               	btfss	status,2,c
 12841  0018C2  D009               	goto	i2l4742
 12842  0018C4  0E00               	movlw	0
 12843  0018C6  6E0F               	movwf	?___fldiv,c
 12844  0018C8  0E00               	movlw	0
 12845  0018CA  6E10               	movwf	?___fldiv+1,c
 12846  0018CC  0E00               	movlw	0
 12847  0018CE  6E11               	movwf	?___fldiv+2,c
 12848  0018D0  0E00               	movlw	0
 12849  0018D2  6E12               	movwf	?___fldiv+3,c
 12850  0018D4  0012               	return	
 12851  0018D6                     i2l4742:
 12852  0018D6  5027               	movf	___fldiv@aexp,w,c
 12853  0018D8  C026  F017         	movff	___fldiv@bexp,??___fldiv
 12854  0018DC  6A18               	clrf	(??___fldiv+1)& (0+255),c
 12855  0018DE  5E17               	subwf	??___fldiv,f,c
 12856  0018E0  0E00               	movlw	0
 12857  0018E2  5A18               	subwfb	??___fldiv+1,f,c
 12858  0018E4  0E7F               	movlw	127
 12859  0018E6  2417               	addwf	??___fldiv,w,c
 12860  0018E8  6E20               	movwf	___fldiv@new_exp,c
 12861  0018EA  0E00               	movlw	0
 12862  0018EC  2018               	addwfc	??___fldiv+1,w,c
 12863  0018EE  6E21               	movwf	___fldiv@new_exp+1,c
 12864  0018F0  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 12865  0018F4  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 12866  0018F8  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 12867  0018FC  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 12868  001900  0E00               	movlw	0
 12869  001902  6E0F               	movwf	___fldiv@b,c
 12870  001904  0E00               	movlw	0
 12871  001906  6E10               	movwf	___fldiv@b+1,c
 12872  001908  0E00               	movlw	0
 12873  00190A  6E11               	movwf	___fldiv@b+2,c
 12874  00190C  0E00               	movlw	0
 12875  00190E  6E12               	movwf	___fldiv@b+3,c
 12876  001910  0E00               	movlw	0
 12877  001912  6E22               	movwf	___fldiv@grs,c
 12878  001914  0E00               	movlw	0
 12879  001916  6E23               	movwf	___fldiv@grs+1,c
 12880  001918  0E00               	movlw	0
 12881  00191A  6E24               	movwf	___fldiv@grs+2,c
 12882  00191C  0E00               	movlw	0
 12883  00191E  6E25               	movwf	___fldiv@grs+3,c
 12884  001920  0E00               	movlw	0
 12885  001922  6E27               	movwf	___fldiv@aexp,c
 12886  001924  D028               	goto	i2l1267
 12887  001926                     i2l4752:
 12888  001926  5027               	movf	___fldiv@aexp,w,c
 12889  001928  B4D8               	btfsc	status,2,c
 12890  00192A  D011               	goto	i2l4760
 12891  00192C  90D8               	bcf	status,0,c
 12892  00192E  361B               	rlcf	___fldiv@rem,f,c
 12893  001930  361C               	rlcf	___fldiv@rem+1,f,c
 12894  001932  361D               	rlcf	___fldiv@rem+2,f,c
 12895  001934  361E               	rlcf	___fldiv@rem+3,f,c
 12896  001936  90D8               	bcf	status,0,c
 12897  001938  360F               	rlcf	___fldiv@b,f,c
 12898  00193A  3610               	rlcf	___fldiv@b+1,f,c
 12899  00193C  3611               	rlcf	___fldiv@b+2,f,c
 12900  00193E  3612               	rlcf	___fldiv@b+3,f,c
 12901  001940  BE25               	btfsc	___fldiv@grs+3,7,c
 12902  001942  800F               	bsf	___fldiv@b,0,c
 12903  001944  90D8               	bcf	status,0,c
 12904  001946  3622               	rlcf	___fldiv@grs,f,c
 12905  001948  3623               	rlcf	___fldiv@grs+1,f,c
 12906  00194A  3624               	rlcf	___fldiv@grs+2,f,c
 12907  00194C  3625               	rlcf	___fldiv@grs+3,f,c
 12908  00194E                     i2l4760:
 12909  00194E  5013               	movf	___fldiv@a,w,c
 12910  001950  5C1B               	subwf	___fldiv@rem,w,c
 12911  001952  5014               	movf	___fldiv@a+1,w,c
 12912  001954  581C               	subwfb	___fldiv@rem+1,w,c
 12913  001956  5015               	movf	___fldiv@a+2,w,c
 12914  001958  581D               	subwfb	___fldiv@rem+2,w,c
 12915  00195A  5016               	movf	___fldiv@a+3,w,c
 12916  00195C  581E               	subwfb	___fldiv@rem+3,w,c
 12917  00195E  A0D8               	btfss	status,0,c
 12918  001960  D009               	goto	i2l4766
 12919  001962  8C25               	bsf	___fldiv@grs+3,6,c
 12920  001964  5013               	movf	___fldiv@a,w,c
 12921  001966  5E1B               	subwf	___fldiv@rem,f,c
 12922  001968  5014               	movf	___fldiv@a+1,w,c
 12923  00196A  5A1C               	subwfb	___fldiv@rem+1,f,c
 12924  00196C  5015               	movf	___fldiv@a+2,w,c
 12925  00196E  5A1D               	subwfb	___fldiv@rem+2,f,c
 12926  001970  5016               	movf	___fldiv@a+3,w,c
 12927  001972  5A1E               	subwfb	___fldiv@rem+3,f,c
 12928  001974                     i2l4766:
 12929  001974  2A27               	incf	___fldiv@aexp,f,c
 12930  001976                     i2l1267:
 12931  001976  0E19               	movlw	25
 12932  001978  6427               	cpfsgt	___fldiv@aexp,c
 12933  00197A  D7D5               	goto	i2l4752
 12934  00197C  501B               	movf	___fldiv@rem,w,c
 12935  00197E  101C               	iorwf	___fldiv@rem+1,w,c
 12936  001980  101D               	iorwf	___fldiv@rem+2,w,c
 12937  001982  101E               	iorwf	___fldiv@rem+3,w,c
 12938  001984  B4D8               	btfsc	status,2,c
 12939  001986  D011               	goto	i2l4778
 12940  001988  8022               	bsf	___fldiv@grs,0,c
 12941  00198A  D00F               	goto	i2l4778
 12942  00198C                     i2l4772:
 12943  00198C  90D8               	bcf	status,0,c
 12944  00198E  360F               	rlcf	___fldiv@b,f,c
 12945  001990  3610               	rlcf	___fldiv@b+1,f,c
 12946  001992  3611               	rlcf	___fldiv@b+2,f,c
 12947  001994  3612               	rlcf	___fldiv@b+3,f,c
 12948  001996  BE25               	btfsc	___fldiv@grs+3,7,c
 12949  001998  800F               	bsf	___fldiv@b,0,c
 12950  00199A  90D8               	bcf	status,0,c
 12951  00199C  3622               	rlcf	___fldiv@grs,f,c
 12952  00199E  3623               	rlcf	___fldiv@grs+1,f,c
 12953  0019A0  3624               	rlcf	___fldiv@grs+2,f,c
 12954  0019A2  3625               	rlcf	___fldiv@grs+3,f,c
 12955  0019A4  0620               	decf	___fldiv@new_exp,f,c
 12956  0019A6  A0D8               	btfss	status,0,c
 12957  0019A8  0621               	decf	___fldiv@new_exp+1,f,c
 12958  0019AA                     i2l4778:
 12959  0019AA  AE11               	btfss	___fldiv@b+2,7,c
 12960  0019AC  D7EF               	goto	i2l4772
 12961  0019AE  0E00               	movlw	0
 12962  0019B0  6E27               	movwf	___fldiv@aexp,c
 12963  0019B2  AE25               	btfss	___fldiv@grs+3,7,c
 12964  0019B4  D017               	goto	i2l1278
 12965  0019B6  0EFF               	movlw	255
 12966  0019B8  1422               	andwf	___fldiv@grs,w,c
 12967  0019BA  6E17               	movwf	??___fldiv& (0+255),c
 12968  0019BC  0EFF               	movlw	255
 12969  0019BE  1423               	andwf	___fldiv@grs+1,w,c
 12970  0019C0  6E18               	movwf	(??___fldiv+1)& (0+255),c
 12971  0019C2  0EFF               	movlw	255
 12972  0019C4  1424               	andwf	___fldiv@grs+2,w,c
 12973  0019C6  6E19               	movwf	(??___fldiv+2)& (0+255),c
 12974  0019C8  0E7F               	movlw	127
 12975  0019CA  1425               	andwf	___fldiv@grs+3,w,c
 12976  0019CC  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 12977  0019CE  5017               	movf	??___fldiv,w,c
 12978  0019D0  1018               	iorwf	??___fldiv+1,w,c
 12979  0019D2  1019               	iorwf	??___fldiv+2,w,c
 12980  0019D4  101A               	iorwf	??___fldiv+3,w,c
 12981  0019D6  B4D8               	btfsc	status,2,c
 12982  0019D8  D003               	goto	i2l1279
 12983  0019DA                     i2u463_40:
 12984  0019DA  0E01               	movlw	1
 12985  0019DC  6E27               	movwf	___fldiv@aexp,c
 12986  0019DE  D002               	goto	i2l1278
 12987  0019E0                     i2l1279:
 12988  0019E0  B00F               	btfsc	___fldiv@b,0,c
 12989  0019E2  D7FB               	goto	i2u463_40
 12990  0019E4                     i2l1278:
 12991  0019E4  5027               	movf	___fldiv@aexp,w,c
 12992  0019E6  B4D8               	btfsc	status,2,c
 12993  0019E8  D01F               	goto	i2l4798
 12994  0019EA  0E01               	movlw	1
 12995  0019EC  260F               	addwf	___fldiv@b,f,c
 12996  0019EE  0E00               	movlw	0
 12997  0019F0  2210               	addwfc	___fldiv@b+1,f,c
 12998  0019F2  2211               	addwfc	___fldiv@b+2,f,c
 12999  0019F4  2212               	addwfc	___fldiv@b+3,f,c
 13000  0019F6  A012               	btfss	___fldiv@b+3,0,c
 13001  0019F8  D017               	goto	i2l4798
 13002  0019FA  C00F  F017         	movff	___fldiv@b,??___fldiv
 13003  0019FE  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13004  001A02  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13005  001A06  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13006  001A0A  341A               	rlcf	??___fldiv+3,w,c
 13007  001A0C  321A               	rrcf	??___fldiv+3,f,c
 13008  001A0E  3219               	rrcf	??___fldiv+2,f,c
 13009  001A10  3218               	rrcf	??___fldiv+1,f,c
 13010  001A12  3217               	rrcf	??___fldiv,f,c
 13011  001A14  C017  F00F         	movff	??___fldiv,___fldiv@b
 13012  001A18  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13013  001A1C  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13014  001A20  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13015  001A24  4A20               	infsnz	___fldiv@new_exp,f,c
 13016  001A26  2A21               	incf	___fldiv@new_exp+1,f,c
 13017  001A28                     i2l4798:
 13018  001A28  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13019  001A2A  D010               	goto	i2l4802
 13020  001A2C  5021               	movf	___fldiv@new_exp+1,w,c
 13021  001A2E  E103               	bnz	i2u467_40
 13022  001A30  2820               	incf	___fldiv@new_exp,w,c
 13023  001A32  A0D8               	btfss	status,0,c
 13024  001A34  D00B               	goto	i2l4802
 13025  001A36                     i2u467_40:
 13026  001A36  0E00               	movlw	0
 13027  001A38  6E21               	movwf	___fldiv@new_exp+1,c
 13028  001A3A  6820               	setf	___fldiv@new_exp,c
 13029  001A3C  0E00               	movlw	0
 13030  001A3E  6E0F               	movwf	___fldiv@b,c
 13031  001A40  0E00               	movlw	0
 13032  001A42  6E10               	movwf	___fldiv@b+1,c
 13033  001A44  0E00               	movlw	0
 13034  001A46  6E11               	movwf	___fldiv@b+2,c
 13035  001A48  0E00               	movlw	0
 13036  001A4A  6E12               	movwf	___fldiv@b+3,c
 13037  001A4C                     i2l4802:
 13038  001A4C  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13039  001A4E  D005               	goto	i2u468_40
 13040  001A50  5021               	movf	___fldiv@new_exp+1,w,c
 13041  001A52  E111               	bnz	i2l4806
 13042  001A54  0420               	decf	___fldiv@new_exp,w,c
 13043  001A56  B0D8               	btfsc	status,0,c
 13044  001A58  D00E               	goto	i2l4806
 13045  001A5A                     i2u468_40:
 13046  001A5A  0E00               	movlw	0
 13047  001A5C  6E21               	movwf	___fldiv@new_exp+1,c
 13048  001A5E  0E00               	movlw	0
 13049  001A60  6E20               	movwf	___fldiv@new_exp,c
 13050  001A62  0E00               	movlw	0
 13051  001A64  6E0F               	movwf	___fldiv@b,c
 13052  001A66  0E00               	movlw	0
 13053  001A68  6E10               	movwf	___fldiv@b+1,c
 13054  001A6A  0E00               	movlw	0
 13055  001A6C  6E11               	movwf	___fldiv@b+2,c
 13056  001A6E  0E00               	movlw	0
 13057  001A70  6E12               	movwf	___fldiv@b+3,c
 13058  001A72  0E00               	movlw	0
 13059  001A74  6E1F               	movwf	___fldiv@sign,c
 13060  001A76                     i2l4806:
 13061  001A76  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13062  001A7A  A026               	btfss	___fldiv@bexp,0,c
 13063  001A7C  D002               	goto	i2l4812
 13064  001A7E  8E11               	bsf	___fldiv@b+2,7,c
 13065  001A80  D001               	goto	i2l4814
 13066  001A82                     i2l4812:
 13067  001A82  9E11               	bcf	___fldiv@b+2,7,c
 13068  001A84                     i2l4814:
 13069  001A84  90D8               	bcf	status,0,c
 13070  001A86  3026               	rrcf	___fldiv@bexp,w,c
 13071  001A88  6E12               	movwf	___fldiv@b+3,c
 13072  001A8A  D70E               	goto	i2l4728
 13073  001A8C                     __end_of___fldiv:
 13074                           	opt callstack 0
 13075                           
 13076                           	psect	rparam
 13077  0000                     
 13078                           	psect	temp
 13079  00006E                     btemp:
 13080                           	opt callstack 0
 13081  00006E                     	ds	1
 13082  0000                     int$flags	set	btemp
 13083  0000                     wtemp8	set	btemp+1
 13084  0000                     ttemp5	set	btemp+1
 13085  0000                     ttemp6	set	btemp+4
 13086  0000                     ttemp7	set	btemp+8
 13087                           tosu	equ	0xFFF
 13088                           tosh	equ	0xFFE
 13089                           tosl	equ	0xFFD
 13090                           stkptr	equ	0xFFC
 13091                           pclatu	equ	0xFFB
 13092                           pclath	equ	0xFFA
 13093                           pcl	equ	0xFF9
 13094                           tblptru	equ	0xFF8
 13095                           tblptrh	equ	0xFF7
 13096                           tblptrl	equ	0xFF6
 13097                           tablat	equ	0xFF5
 13098                           prodh	equ	0xFF4
 13099                           prodl	equ	0xFF3
 13100                           indf0	equ	0xFEF
 13101                           postinc0	equ	0xFEE
 13102                           postdec0	equ	0xFED
 13103                           preinc0	equ	0xFEC
 13104                           plusw0	equ	0xFEB
 13105                           fsr0h	equ	0xFEA
 13106                           fsr0l	equ	0xFE9
 13107                           wreg	equ	0xFE8
 13108                           indf1	equ	0xFE7
 13109                           postinc1	equ	0xFE6
 13110                           postdec1	equ	0xFE5
 13111                           preinc1	equ	0xFE4
 13112                           plusw1	equ	0xFE3
 13113                           fsr1h	equ	0xFE2
 13114                           fsr1l	equ	0xFE1
 13115                           bsr	equ	0xFE0
 13116                           indf2	equ	0xFDF
 13117                           postinc2	equ	0xFDE
 13118                           postdec2	equ	0xFDD
 13119                           preinc2	equ	0xFDC
 13120                           plusw2	equ	0xFDB
 13121                           fsr2h	equ	0xFDA
 13122                           fsr2l	equ	0xFD9
 13123                           status	equ	0xFD8


Data Sizes:
    Strings     449
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    125     128
    BANK1           256     92     158
    BANK2           256    104     224
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_48(CODE[5]), STR_47(CODE[10]), STR_46(CODE[11]), STR_45(CODE[13]), 
		 -> STR_44(CODE[10]), STR_43(CODE[10]), STR_42(CODE[11]), STR_41(CODE[11]), 
		 -> STR_40(CODE[12]), STR_39(CODE[17]), STR_38(CODE[15]), STR_37(CODE[15]), 
		 -> STR_36(CODE[12]), STR_35(CODE[17]), STR_34(CODE[12]), STR_33(CODE[15]), 
		 -> STR_32(CODE[18]), STR_31(CODE[17]), STR_30(CODE[12]), STR_29(CODE[15]), 
		 -> STR_28(CODE[18]), STR_27(CODE[17]), STR_26(CODE[14]), STR_25(CODE[14]), 
		 -> STR_24(CODE[17]), STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[16]), 
		 -> STR_20(CODE[3]), STR_19(CODE[9]), STR_18(CODE[17]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[12]), STR_14(CODE[10]), STR_13(CODE[15]), 
		 -> STR_12(CODE[12]), STR_11(CODE[10]), STR_10(CODE[16]), STR_9(CODE[3]), 
		 -> STR_8(CODE[10]), STR_7(CODE[17]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[10]), STR_3(CODE[16]), STR_2(CODE[10]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1607_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_48(CODE[5]), STR_47(CODE[10]), STR_46(CODE[11]), STR_45(CODE[13]), 
		 -> STR_44(CODE[10]), STR_43(CODE[10]), STR_42(CODE[11]), STR_41(CODE[11]), 
		 -> STR_40(CODE[12]), STR_39(CODE[17]), STR_38(CODE[15]), STR_37(CODE[15]), 
		 -> STR_36(CODE[12]), STR_35(CODE[17]), STR_34(CODE[12]), STR_33(CODE[15]), 
		 -> STR_32(CODE[18]), STR_31(CODE[17]), STR_30(CODE[12]), STR_29(CODE[15]), 
		 -> STR_28(CODE[18]), STR_27(CODE[17]), STR_26(CODE[14]), STR_25(CODE[14]), 
		 -> STR_24(CODE[17]), STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[16]), 
		 -> STR_20(CODE[3]), STR_19(CODE[9]), STR_18(CODE[17]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[12]), STR_14(CODE[10]), STR_13(CODE[15]), 
		 -> STR_12(CODE[12]), STR_11(CODE[10]), STR_10(CODE[16]), STR_9(CODE[3]), 
		 -> STR_8(CODE[10]), STR_7(CODE[17]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[10]), STR_3(CODE[16]), STR_2(CODE[10]), STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_48(CODE[5]), STR_47(CODE[10]), STR_46(CODE[11]), STR_45(CODE[13]), 
		 -> STR_44(CODE[10]), STR_43(CODE[10]), STR_42(CODE[11]), STR_41(CODE[11]), 
		 -> STR_40(CODE[12]), STR_39(CODE[17]), STR_38(CODE[15]), STR_37(CODE[15]), 
		 -> STR_36(CODE[12]), STR_35(CODE[17]), STR_34(CODE[12]), STR_33(CODE[15]), 
		 -> STR_32(CODE[18]), STR_31(CODE[17]), STR_30(CODE[12]), STR_29(CODE[15]), 
		 -> STR_28(CODE[18]), STR_27(CODE[17]), STR_26(CODE[14]), STR_25(CODE[14]), 
		 -> STR_24(CODE[17]), STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[16]), 
		 -> STR_20(CODE[3]), STR_19(CODE[9]), STR_18(CODE[17]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[12]), STR_14(CODE[10]), STR_13(CODE[15]), 
		 -> STR_12(CODE[12]), STR_11(CODE[10]), STR_10(CODE[16]), STR_9(CODE[3]), 
		 -> STR_8(CODE[10]), STR_7(CODE[17]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[10]), STR_3(CODE[16]), STR_2(CODE[10]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_48(CODE[5]), STR_47(CODE[10]), STR_46(CODE[11]), STR_45(CODE[13]), 
		 -> STR_44(CODE[10]), STR_43(CODE[10]), STR_42(CODE[11]), STR_41(CODE[11]), 
		 -> STR_40(CODE[12]), STR_39(CODE[17]), STR_38(CODE[15]), STR_37(CODE[15]), 
		 -> STR_36(CODE[12]), STR_35(CODE[17]), STR_34(CODE[12]), STR_33(CODE[15]), 
		 -> STR_32(CODE[18]), STR_31(CODE[17]), STR_30(CODE[12]), STR_29(CODE[15]), 
		 -> STR_28(CODE[18]), STR_27(CODE[17]), STR_26(CODE[14]), STR_25(CODE[14]), 
		 -> STR_24(CODE[17]), STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[16]), 
		 -> STR_20(CODE[3]), STR_19(CODE[9]), STR_18(CODE[17]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[12]), STR_14(CODE[10]), STR_13(CODE[15]), 
		 -> STR_12(CODE[12]), STR_11(CODE[10]), STR_10(CODE[16]), STR_9(CODE[3]), 
		 -> STR_8(CODE[10]), STR_7(CODE[17]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[10]), STR_3(CODE[16]), STR_2(CODE[10]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_UI_main
    _main->_number_deploy
    _main->_ultrasonic_main
    _ultrasonic_main->_print_echo
    _brake->_I2C_Master_Write
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _backwards->_I2C_Master_Write
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _timer_main->_initLCD
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _abs->___aomod
    _atoi->_isspace
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               106   106      0  213635
                                             90 BANK1      2     2      0
                                              0 BANK2    104   104      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                      3     3      0   46391
                                            122 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                         _print_echo
                             _printf
                        _sense_tires
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sense_tires                                          2     0      2    1412
                                              3 BANK0      2     0      2
                              _brake
 ---------------------------------------------------------------------------------
 (3) _brake                                                0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   21793
                                            121 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   23744
                                            121 BANK0      4     0      4
                                              0 BANK1      8     8      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       6     4      2   89084
                                              8 BANK1      6     4      2
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2                                             5     5      0   43986
                                              0 BANK1      5     5      0
                         _full_drive
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   22509
                                              0 BANK1      8     6      2
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   22184
                                            121 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0     136
                                              3 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   25850
                                            121 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
                         _timer_main
 ---------------------------------------------------------------------------------
 (2) _timer_main                                           0     0      0     350
                         _TIMER_INIT
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   21635
                                            109 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17222
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16677
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6083
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _timer_main
       _TIMER_INIT
       _initLCD
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _send_byte
           _send_nibble
             _pulse_e
         _send_nibble
           _pulse_e
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _sense_tires
       _brake
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     68      E0       9       87.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5C      9E       7       61.7%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7D      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26B      34        0.0%
DATA                 0      0     26B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 04 03:36:00 2019

               ___fldiv@aexp 0027                 ___fldiv@bexp 0026                            _a 0040  
                          _b 0062                            _i 00FD                 ___fldiv@sign 001F  
                __CFG_CPD$ON 000000                 ___awdiv@sign 0085          ___wmul@multiplicand 0082  
                __CFG_BORV$3 000000              ??_number_deploy 0100            stepper2@direction 0100  
              servoRotate0@i 0081                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000  
        __end_of_system_init 3432              _ultrasonic_main 2A08                          l246 2CC4  
                        l276 0294                          l710 2DBE                          l616 1CF2  
                        l480 3288                          l618 1CFA                          l580 2BCE  
                        l485 318E                          l591 1B00                          l593 1B08  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                          _RB2 007C0A  
                        _RB3 007C0B                          _RC1 007C11                          _RB4 007C0C  
                        _RD0 007C18                          _RC2 007C12                          _RB5 007C0D  
                        _RD1 007C19                          _RB6 007C0E                          _RB7 007C0F  
                        _ISR 0008                          _abs 33CC                          _cnt 016B  
                        _pad 2B9E                          _sum 0038                          wreg 000FE8  
               __CFG_LVP$OFF 000000                         ?_ISR 0001                 ___fltol@exp1 0031  
               __CFG_WDT$OFF 000000                         l1103 3006                         ?_abs 0092  
                       l1358 33F6                         l1456 3310                         l1389 25A0  
                       l6010 3352                         l6020 1AE4                         l6100 1D64  
                       l7000 2046                         l6034 1B22                         l6114 1DF2  
                       l6122 1E6A                         l6210 117A                         l6202 1172  
                       l6220 11CA                         l7020 211A                         l6038 1B32  
                       l6214 117E                         l6206 1176                         ?_pad 0094  
                       l6160 24D4                         l6144 247A                         l6072 1CAA  
                       l6048 1C2C                         l6232 1236                         l6400 1542  
                       l6170 2540                         l6162 24DC                         l6154 24C4  
                       l6146 247E                         l6138 1EE0                         l6234 1254  
                       l6218 1188                         l6306 3140                         l6164 24E2  
                       l6068 1C92                         l6092 1D42                         l6252 135C  
                       l6236 1262                         l6308 3168                         l7140 0274  
                       l7300 296C                         l6166 250A                         l6086 1D10  
                       l7206 050C                         l7150 02B4                         l7118 01EE  
                       l6600 2D7C                         l6272 1466                         l7232 06AC  
                       l6416 15B8                         l6610 2DB0                         l6266 142A  
                       l6194 115C                         l6282 148A                         l7058 00BC  
                       l7410 0F9A                         l6276 1472                         l6196 115E  
                       l7260 0760                         l7228 0686                         l7324 29FE  
                       l6620 2824                         l6198 116E                         l7182 037C  
                       l7166 0314                         l7430 1078                         l7256 0758  
                       l7088 015E                         l6536 1778                         l6456 164C  
                       l6800 2E6E                         l6720 22E6                         l6712 22A2  
                       l6704 226E                         l6632 285E                         l5930 234A  
                       l7266 077A                         l6642 2892                         l7418 0FE6  
                       l6900 2FC4                         l5852 337E                         l7276 07E8  
                       l6652 28C6                         l7380 0E8C                         l7348 0DA2  
                       l6902 2FD0                         l5942 2398                         l5838 2F5C  
                       l7278 07F6                         l6494 16D6                         l6814 2EA6  
                       l6662 28FA                         l7374 0E4E                         l5944 23AC  
                       l5936 2372                         l5848 3366                         l5856 34D2  
                       l5872 2BB6                         l6832 308E                         l6680 21B2  
                       l6920 2A20                         l7368 0E38                         l7376 0E68  
                       l5962 2444                         l5954 2408                         l5858 34D8  
                       l5882 2BF2                         l6674 2184                         l6922 2A28  
                       l7386 0EA2                         l6908 2FF8                         l5876 2BC6  
                       l6860 2CDC                         l7388 0EBC                         l6598 2D70  
                       l5958 241E                         l5990 27B2                         l5982 2756  
                       l5974 2718                         l5886 2C1E                         l5878 2BD8  
                       l6926 2A38                         l6942 2A5C                         l5984 276A  
                       l6872 2D02                         l6696 222A                         l6688 21F6  
                       l6944 2A64                         l5994 27C8                         l5978 273C  
                       l6874 2D0A                         l6866 2CEC                         l6962 1F26  
                       l6892 2D42                         l6884 2D2A                         l6972 1F92  
                       l6956 2AD6                         l5998 27EE                         l6958 2ADC  
                       l6888 2D34                         l6976 1FA6                         l6968 1F60  
                       l6986 1FF0                         l6988 1FFA                         STR_1 FE72  
                       STR_2 FFB5                         STR_3 FEC6                         STR_4 FFBF  
                       STR_5 FED6                         STR_6 FFC9                         STR_7 FE83  
                       STR_8 FFD3                         STR_9 FF3C                         _LATA 000F89  
                       _LATB 000F8A                         _LATC 000F8B                         _LATD 000F8C  
                       _LATE 000F8D                         u6200 3490                         u6120 345C  
                       u6210 33C4                         u6130 345E                         u7100 2D80  
                       u6220 33C6                         u6301 2378                         u6070 2F54  
                       u6230 32F8                         u6055 3520                         _RBIE 007F93  
                       u6320 23B0                         u6056 3522                         u6240 32FA  
                       u8000 07FC                         u7200 2194                         u7120 2822  
                       _RBIF 007F90                         u6090 2F9C                         u7210 21A4  
                       u6260 34C0                         u6420 334E                         u6180 33DC  
                       u6500 1C3C                         u7300 22B2                         u7220 21C2  
                       u8100 0E68                         u6270 34C2                         u6430 1AB6  
                       u6190 348E                         u7310 22C2                         u7230 21D2  
                       u8110 0E7A                         u6520 1C5E                         u6440 1AB8  
                       u7320 22F6                         u7240 2206                         u7400 2CAC  
                       u8120 0EBC                         u8040 0D8C                         u6521 1C5C  
                       u6530 1C6C                         u6610 1D60                         u7330 2306  
                       u7250 2216                         u7410 2CBC                         u7170 2910  
                       u8130 104A                         u8050 0DB4                         u8051 0DB2  
                       u6380 276E                         u6540 1C70                         u6620 1D96  
                       u7260 223A                         u7180 2156                         u7340 2C4C  
                       u8140 105E                         u8060 0DCA                         u8061 0DC8  
                       u6470 1AF6                         u6710 1E9E                         u6630 1D98  
                       u7270 224A                         u7190 2166                         u7350 2C5C  
                       u6711 1E9C                         u8207 10AE                         u6560 1C7C  
                       u6720 1EAC                         u7520 2D0E                         u7280 227E  
                       u7360 2C6C                         u8080 0E10                         u7425 3570  
                       u8217 10E2                         u7426 3572                         u6490 1B1C  
                       u6730 1EB0                         u6650 1DD0                         u7450 2E94  
                       u7290 228E                         u7370 2C7C                         u8090 0E20  
                       u7435 3042                         u8307 28D6                         u8227 1106  
                       u6660 1DD2                         u7380 2C8C                         u8317 28EC  
                       u8237 2AA8                         u6590 1CE6                         u6910 12DE  
                       u7470 2ECC                         u7710 2012                         u7630 1F56  
                       u7390 2C9C                         u8407 14E0                         u8327 213C  
                       u8247 283A                         u7560 2FD4                         u6760 24C0  
                       u6680 1E46                         u7480 30B6                         u7720 2022  
                       u7640 1F88                         u8417 14F6                         u8337 20BC  
                       u8257 2850                         u8177 0F52                         u6690 1E7C  
                       u6930 1390                         u7730 2032                         u8507 15DA  
                       u8427 150C                         u8347 20F0                         u8267 286E  
                       u8187 106A                         u6780 2570                         u7740 2042  
                       u7660 1FB6                         u6685 1E34                         u8517 15F4  
                       u8437 1522                         u8357 2932                         u8277 2884  
                       u8197 108A                         u6790 2572                         u6870 129C  
                       u7910 02B0                         u7750 2110                         u7670 1FC6  
                       u8607 1706                         u8527 160E                         u8447 1538  
                       u8367 295E                         u8287 28A2                         u6880 129E  
                       u7760 212C                         u7680 1FD6                         u8617 1720  
                       u8537 1628                         u8457 1556                         u8377 2996  
                       u8297 28B8                         u6890 12AA                         u7690 1FE6  
                       u8707 353C                         u8627 173A                         u8547 1642  
                       u8467 156C                         u8387 29C0                         u7940 038E  
                       u7860 0204                         u6980 32CC                         u8717 3194  
                       u8637 1754                         u8557 1664                         u8477 1582  
                       u8397 29E4                         u7950 039E                         u6990 31D6  
                       u7951 039C                         u8807 022C                         u8727 31A4  
                       u8647 176E                         u8567 167E                         u8487 1598  
                       u8817 02CC                         u8737 31B8                         u8657 1790  
                       u8577 1698                         u8497 15AE                         u8907 3506  
                       u8827 032C                         u8747 3294                         u8667 17AA  
                       u8587 16B2                         u8917 3510                         u8837 03BE  
                       u8757 32A0                         u8677 17C4                         u8597 16CC  
                       u8847 0538                         u8767 32AE                         u8687 17DE  
                       u8857 06EE                         u8777 007A                         u8697 17F8  
                       u8867 2EDA                         u8787 011E                         u8877 2EF4  
                       u8797 0192                         u8887 2F06                         u8897 2F2A  
                       _Pole 0200           main@poles_detected 02DA                  main@t_count 02D2  
                       abs@a 0092                         _data 0066                         _echo 0806  
                       _dbuf 0258                         _disp 0165                         _atoi 2466  
                       _main 0D4A                         _dtoa 1A8C                         _meas 0058  
                       _keys FE27                         _send 006D                         _tick 005E  
                       _prec 0054                         _sens 0060                         _temp 00FF  
                       _time 015C                         _nout 0050                         pad@i 009B  
                       pad@p 0098                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         pad@w 009D  
                       fsr2l 000FD9                         _trig 2810                         _sumf 0048  
                       btemp 006E                         _xtoa 1CD4                         prodh 000FF4  
                       prodl 000FF3                         start 000E      __size_of_actuators_main 00F6  
              __CFG_IESO$OFF 000000              ___fldiv@new_exp 0020              __end_of_UI_main 0806  
            servoRotate180@i 0081                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
                      ??_ISR 0036                        ??_abs 0094                        ??_pad 009A  
      actuators_main@act_cnt 010C        I2C_Master_Read@ackBit 0081             ?_I2C_Master_Init 008D  
           ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001  
                      ?_echo 0001                ___fltol@sign1 0030                  ?_TIMER_INIT 0001  
            __end_of___aodiv 2466                        ?_atoi 0087                        ?_main 0001  
                      ?_dtoa 009F              __end_of___aomod 2810              __end_of___fldiv 1A8C  
            __end_of___awdiv 2D4C                        STR_10 FEB6                        STR_11 FFE7  
                      STR_20 FF3C                        STR_12 FF7E                        STR_21 FE95  
                      STR_13 FEE6                        STR_22 FFF1                        STR_14 FFE7  
                      STR_30 FF72                        STR_31 FEA5                        STR_23 FF3C  
                      STR_15 FF7E                        STR_16 FEE6                        STR_32 FE3E  
                      STR_40 FF66                        STR_24 FE94                        STR_33 FEF5  
                      STR_41 FF95                        STR_25 FF3F                        STR_17 FF04  
                      STR_34 FF72                        STR_42 FFA0                        STR_26 FF31  
                      STR_18 FE50                        STR_19 FFF1                        STR_43 FFDD  
                      STR_27 FEA5                        STR_35 FE61                        STR_44 FFAB  
                      STR_36 FF5A                        STR_28 FE3E                        STR_45 FF4D  
                      STR_37 FF13                        STR_29 FEF5                        STR_46 FF8A  
                      STR_38 FF22                        STR_39 FE50                        STR_47 FFAB  
                      STR_48 FFFA              __end_of___fltol 2B9E                        ?_trig 0001  
            __end_of___lldiv 2DD0              ___awdiv@divisor 0082                        ?_xtoa 009F  
                      _T1CON 000FCD              __end_of___llmod 3018                        i2l161 3220  
                      i2l188 0D48              ___awdiv@counter 0084                 vfpfcnvrt@fmt 00C8  
                      _TMR0H 000FD7                 vfpfcnvrt@llu 00D8                        _TMR1H 000FCF  
                      _TMR0L 000FD6                        _TMR1L 000FCE                        _PORTB 000F81  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000              __end_of_lcdInst 36A8               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000              __end_of_initLCD 2F42               __CFG_EBTRB$OFF 000000  
                      _brake 35CA                        _flags 0056                        _dists 0069  
                      _fputc 2F42              __end_of_isalpha 33CC                        _fputs 335A  
            __end_of_isdigit 34C8                        _servo 3524                        atoi@n 0094  
                      pad@fp 0094                        atoi@s 0087                        _width 0052  
                      _state 0167                        _putch 36A8                        _start 322C  
                      main@i 02CC                        main@k 02D4                        dtoa@d 00A1  
                      dtoa@i 00C1                        dtoa@n 00B9                        dtoa@p 00B3  
                      dtoa@s 00B7                        dtoa@w 00B5              __end_of_islower 3464  
            __end_of_isspace 335A              __end_of_isupper 3496                        tablat 000FF5  
            send_nibble@data 0081              __end_of_pulse_e 3524                        ttemp5 006F  
                      ttemp6 0072                        ttemp7 0076                        status 000FD8  
I2C_Master_Read@receivedByte 0082              __end_of_stepper 2ED2                        wtemp8 006F  
                      xtoa@c 00C4                        xtoa@d 00A1                        xtoa@i 00C2  
                      xtoa@n 00BA                        xtoa@p 00B6                        xtoa@w 00B8  
                      xtoa@x 00A9              __end_of_toupper 331A             ??_servoRotate180 0080  
         __size_ofi2___awdiv 0084               __CFG_PBADEN$ON 000000                 _toupper$1659 008C  
            __initialization 30D4                 __end_of_echo 0D4A                  _system_init 3400  
               __end_of_atoi 25AA                 __end_of_main 1116                 __end_of_dtoa 1CD4  
               __end_of_keys FE38      __end_of_ultrasonic_main 2AE4                 __end_of_trig 2912  
               __end_of_xtoa 1F0A                       ??_echo 0032                       ??_atoi 0089  
                     ??_main 015A                       ??_dtoa 00A9                       ??_trig 0080  
                     ??_xtoa 00AA                __activetblptr 000002         number_deploy@t_count 0106  
          ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0081         number_deploy@tires_t 0102  
         ??_I2C_Master_Start 0081                       ?_brake 0001                       _ADCON1 000FC1  
         ??_I2C_Master_Write 0083                 ?_send_nibble 0001                       ?_fputc 0084  
           ___llmod@dividend 0080                       ?_fputs 008D             ___awdiv@dividend 0080  
                     ?_servo 0001                       ?_putch 0001                       ?_start 0001  
                     _INT1IE 007F83                       _INT1IF 007F80                       i2l1345 2666  
                     i2l1338 25E8                       i2l1267 1976                       i2l1278 19E4  
                     i2l1279 19E0                       i2l5012 2E4A                       i2l5004 2E32  
                     i2l5110 0B80                       i2l5008 2E3C                       i2l5042 08E0  
                     i2l5026 0884                       i2l5050 0952                       i2l5116 0BDC  
                     i2l5060 09D2                       i2l5150 0D2E                       i2l5118 0BF6  
                     i2l5144 0CD2                       i2l5128 0C76                       i2l5048 0938  
                     i2l5082 0A8A                       i2l4700 1834                       i2l5076 0A2E  
                     i2l5084 0AA4                       i2l5094 0B24                       i2l4720 1874  
                     i2l4802 1A4C                       i2l4812 1A82                       i2l4716 1870  
                     i2l4900 2B70                       i2l4814 1A84                       i2l4806 1A76  
                     i2l4742 18D6                       i2l4734 18BE                       i2l4760 194E  
                     i2l4752 1926                       i2l4728 18A8                       i2l4906 2B8C  
                     i2l4772 198C                       i2l4940 261C                       i2l4932 25F8  
                     i2l5580 31F8                       i2l4766 1974                       i2l4950 268C  
                     i2l4942 2628                       i2l4696 1830                       i2l4872 2B02  
                     i2l4952 2698                       i2l4944 264E                       i2l4778 19AA  
                     i2l4938 2616                       i2l5586 320A                       i2l4892 2B5C  
                     i2l4980 2DE4                       i2l4798 1A28                       i2l4888 2B4C  
                     i2l4968 26D8                       i2l4992 2E0A                       i2l4898 2B64  
                     i2l4994 2E12                       i2l4986 2DF4                    ??_UI_main 0100  
              vfpfcnvrt@done 00E1                       _TMR0IF 007F92                       _TMR1ON 007E68  
                     _SSPADD 000FC8                       _SSPBUF 000FC9             __end_of___xxtofl 26EA  
        __size_of_TIMER_INIT 0026  number_deploy@poles_detected 00FB               __CFG_XINST$OFF 000000  
               vfprintf@cfmt 00EB                    ??___aodiv 0090                    ??___aomod 0090  
                     ___wmul 35A2                    ??___fldiv 0017                    ??___awdiv 0084  
             __CFG_STVREN$ON 000000                    ??___fltol 002C                    ??___lldiv 0088  
               ?_sense_tires 0083                    ??___llmod 0088                       clear_0 30FA  
                     clear_1 3106                       clear_2 311A             ___awdiv@quotient 0086  
                  ??_lcdInst 0083                       _printf 357A                       pad@buf 0096  
                     dtoa@fp 009F                       _strlen 34C8               i2___awdiv@sign 0006  
                  ??_initLCD 0084                       fputc@c 0084                       fputs@c 0091  
                     fputs@i 0092                 __pdataCOMRAM 0069                       fputs@s 008D  
                  ??_isalpha 0082                    ??_isdigit 0082            __end_ofi2___awdiv 2E54  
                  ??_islower 0082                 __mediumconst FE26                    ??_isspace 0082  
                     tblptrh 000FF7                    ??_isupper 0082                       tblptrl 000FF6  
                     tblptru 000FF8             __end_of_vfprintf 3184                    ??_pulse_e 0080  
           __end_of_stepper2 30D4                    ??_stepper 00FD                       xtoa@fp 009F  
                  ??_toupper 0088                 ___xxtofl@arg 000B        pulse_e@interruptState 0080  
               ___xxtofl@exp 000A                 ___xxtofl@val 0001                   __accesstop 0080  
    __end_of__initialization 3120               _actuators_main 2912                ___rparam_used 000001  
                 ___fltol@f1 0028                 stepper@i_909 0106           __size_of_backwards 0026  
        full_drive@direction 00FC               __pcstackCOMRAM 0001                 stepper@stack 0100  
           ?_ultrasonic_main 0001                __end_of_brake 35F0                __end_of_fputc 2FB0  
              __end_of_fputs 3396                __end_of_servo 3550                __end_of_putch 36B8  
              __end_of_start 327E              _key_was_pressed 016D        number_deploy@avg_dist 00F9  
                    ??_brake 0083                      ??_fputc 0088                      ??_fputs 0091  
                    ??_servo 0083                      ??_putch 0083                      ??_start 0095  
                 __pbssBANK0 00FD                   __pbssBANK1 015C                   __pbssBANK2 0200  
     __end_of_actuators_main 2A08                      ?___wmul 0080           __size_of_send_byte 0018  
               ??_TIMER_INIT 0080                      ?_printf 00ED                      ?_strlen 0080  
      __end_of_number_deploy 212E                    ?___xxtofl 0001            __end_of_backwards 3616  
         __size_of_vfpfcnvrt 03AA                   _dist_final 016E                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7                      _UI_main 0012  
       __size_of_send_nibble 001A              ?_actuators_main 0108           __end_of_TIMER_INIT 363C  
                    __Hparam 0000                      __Lparam 0000                 ?_system_init 0001  
                    ___aodiv 231C                      ___aomod 26EA                      ___fldiv 1804  
                    ___awdiv 2CC6                      ___fltol 2AE4                      ___lldiv 2D4C  
            __size_of___wmul 0028                      ___llmod 2FB0                    ?_vfprintf 00E5  
                  ?_stepper2 0001                      __pcinit 30D4                   _full_drive 14C0  
                    __ramtop 1000         __size_of_sense_tires 008C                      _lcdInst 3698  
                    __ptext0 0D4A                      __ptext1 2A08                      __ptext2 2810  
                    __ptext3 2C3A                      __ptext4 35CA                      __ptext5 212E  
                    __ptext6 322C                      __ptext7 1F0A                      __ptext8 2CC6  
                    __ptext9 35F0              __size_of_printf 0028                    _T0CONbits 000FD5  
            __size_of_strlen 002E                      _initLCD 2ED2                 __size_of_ISR 3224  
                    _counter 0068                 __size_of_abs 0034                 __size_of_pad 009C  
                    _isalpha 3396                      _isdigit 3496                   ??___xxtofl 0005  
                    _islower 3432                      _isspace 331A                      _isupper 3464  
   __size_of_I2C_Master_Init 0060     __size_of_I2C_Master_Read 002A     __size_of_I2C_Master_Wait 0014  
   __size_of_I2C_Master_Stop 0008              _prev_dist_final 0250                      _pressed 0163  
                    atoi@neg 008D                      _pulse_e 34F6                      _stepper 2E54  
             __pintcode_body 31D8                      _toupper 32CE         end_of_initialization 3120  
      __end_of_LCD_SIZE_HORZ FE3B            __end_of_send_byte 366E        __end_of_LCD_SIZE_VERT FE3A  
                    fputc@fp 0086                __Lmediumconst FE26                      int_func 31D8  
                    fputs@fp 008F    __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A  
            ___lldiv@divisor 0084              ___lldiv@counter 008C            __end_of_vfpfcnvrt 14C0  
              ?_servoRotate0 0001                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc1 000FE6                      postinc2 000FDE  
                 ??_vfprintf 00EB                   ??_stepper2 00FD                      strlen@a 0082  
                    strlen@s 0080                   _timer_main 366E                   _print_echo 212E  
              ___xxtofl@sign 0009                    _TRISAbits 000F92                    _TRISBbits 000F93  
                  _TRISCbits 000F94                  ___fldiv@grs 0022                  ___fldiv@rem 001B  
                  i2___awdiv 2DD0                send_byte@data 0082           i2___awdiv@dividend 0001  
      UI_main@poles_detected 00FB               ??_servoRotate0 0080  number_deploy@tires_detected 0104  
                vfpfcnvrt@ap 00CA                  vfpfcnvrt@fp 00C6                  vfpfcnvrt@ll 00D0  
             __end_of___wmul 35CA                  ?_full_drive 00F9      __size_of_servoRotate180 0054  
              __pidataCOMRAM 36D2               __end_of_printf 35A2               __end_of_strlen 34F6  
        start_initialization 30D4           i2___awdiv@quotient 0007                  __end_of_ISR 322C  
                __end_of_abs 3400                  __end_of_pad 2C3A        stepper2@count_stepper 0101  
                 ?i2___awdiv 0001            ??_I2C_Master_Init 0091            ??_I2C_Master_Read 0081  
          ??_I2C_Master_Wait 0080            ??_I2C_Master_Stop 0081            main@prev_avg_dist 02DC  
             _poles_detected 005A              ___llmod@divisor 0084              ___llmod@counter 0088  
               UI_main@t_dep 00F9                  vfprintf@fmt 00E7                     ??___wmul 0084  
   I2C_Master_Init@clockFreq 008D             __CFG_LPT1OSC$OFF 000000         __size_of_system_init 0032  
                ?_timer_main 0001                     ??_printf 00F5                     ??_strlen 0082  
                ?_print_echo 0001                    ___fldiv@a 0013                    ___fldiv@b 000F  
   __size_of_ultrasonic_main 00DC                  __pbssCOMRAM 0038                __pcstackBANK0 0080  
              __pcstackBANK1 0100                __pcstackBANK2 0278             ___aodiv@dividend 0080  
           ??_actuators_main 010A            __size_of___xxtofl 0140                    _backwards 35F0  
                   ?_UI_main 00F9          __size_of_full_drive 0344                    _atoi$1567 008F  
                  _atoi$1568 0093                    _atoi$1569 0091             _I2C_Master_Start 36CA  
           _I2C_Master_Write 36B8                    _dtoa$1083 00B1            __CFG_CCP2MX$PORTC 000000  
                  __pintcode 0008                __pmediumconst FE26                     ?___aodiv 0080  
                   ?___aomod 0080                     ?___fldiv 000F                     ?___awdiv 0080  
           ___aodiv@quotient 0092                     ?___fltol 0028                     ?___lldiv 0080  
                   ?___llmod 0080                     ?_lcdInst 0001            __size_of_vfprintf 0056  
          __size_of_stepper2 005C         full_drive@stepper_no 00F9                     ?_initLCD 0001  
                   ?_isalpha 0080                     ?_isdigit 0080                     ?_islower 0080  
                   ?_isspace 0080                     ?_isupper 0080         __end_of_servoRotate0 32CE  
              ??_send_nibble 0081                     ?_pulse_e 0001               __size_of_brake 0026  
                ??i2___awdiv 0005                     ?_stepper 0100               __size_of_fputc 006E  
             __size_of_fputs 003C                     ?_toupper 0086               __size_of_servo 002C  
                 ?_backwards 0001               __size_of_putch 0010               __size_of_start 0052  
             ___wmul@product 0084                     _LATAbits 000F89                     _LATBbits 000F8A  
                   _LATCbits 000F8B                     _LATDbits 000F8C                     _LATEbits 000F8D  
        __size_of_timer_main 0016                     UI_main@i 0159             main@pole_cl_dist 02CA  
                  _send_byte 3656          __size_of_print_echo 01EE       __size_of_number_deploy 0224  
             _LCD_LINE1_ADDR FE38               _LCD_LINE2_ADDR FE3D               _LCD_LINE3_ADDR FE3C  
             _LCD_LINE4_ADDR FE3B                     i2u505_40 0894                     i2u506_40 08A4  
                   i2u515_40 09E2                     i2u516_40 09F2                     i2u525_40 0B34  
                   i2u526_40 0B44                     i2u463_40 19DA                     i2u535_40 0C86  
                   i2u536_40 0C96                     i2u481_40 2B76                     i2u467_40 1A36  
                   i2u468_40 1A5A                     i2u476_40 2AF0                     i2u492_40 26A2  
                   i2u477_40 2B20                     i2u477_45 2B16                     i2u590_40 3202  
                   i2u499_40 2E16             __CFG_WDTPS$32768 000000                ??_sense_tires 0085  
             _servoRotate180 3184                    _vfpfcnvrt 1116                    _xtoa$1094 00B2  
                  _xtoa$1095 00B4                    main@i_511 02D8                    main@i_503 02CE  
          ___wmul@multiplier 0080                    main@t_dep 02D6            i2___awdiv@divisor 0003  
                  main@stack 02D0            i2___awdiv@counter 0005                 _isspace$1594 0086  
                 vfpfcnvrt@c 00E0          actuators_main@stack 0108                    copy_data0 30E8  
          ??_ultrasonic_main 00FA              UI_main@keypress 0154       __end_of_LCD_LINE1_ADDR FE39  
           __size_of_UI_main 07F4       __end_of_LCD_LINE2_ADDR FE3E       __end_of_LCD_LINE3_ADDR FE3D  
     __end_of_LCD_LINE4_ADDR FE3C          __end_of_send_nibble 3656                   ?_send_byte 0001  
                UI_main@Pole 0104                     __Hrparam 0000                  UI_main@tick 0155  
                 vfprintf@ap 00E9                     __Lrparam 0000                   vfprintf@fp 00E5  
         __CFG_BOREN$SBORDIS 000000       __end_of_servoRotate180 31D8             __size_of___aodiv 014A  
           __size_of___aomod 0126             __size_of___fldiv 0288             __size_of___awdiv 0086  
           __size_of___fltol 00BA             __size_of___lldiv 0084             __size_of___llmod 0068  
               ??_full_drive 00FB                   ?_vfpfcnvrt 00C6              ___aodiv@divisor 0088  
            ___aodiv@counter 0090             __size_of_lcdInst 0010          __end_of_sense_tires 2CC6  
              _number_deploy 1F0A              _I2C_Master_Init 3018              _I2C_Master_Read 3550  
           __size_of_initLCD 0070                     ___xxtofl 25AA              _I2C_Master_Wait 3684  
            _I2C_Master_Stop 36C2             __size_of_isalpha 0036             __size_of_isdigit 0032  
           __size_of_islower 0032             __size_of_isspace 0040                     __ptext10 2912  
                   __ptext11 3400                     __ptext20 2ED2                     __ptext12 3078  
                   __ptext21 3698                     __ptext13 2E54                     __ptext30 3396  
                   __ptext22 3616                     __ptext14 14C0                     __ptext31 1A8C  
                   __ptext23 357A                     __ptext15 3524                     __ptext40 33CC  
                   __ptext32 2B9E                     __ptext24 312E                     __ptext16 3184  
                   __ptext41 26EA                     __ptext33 34C8                     __ptext25 1116  
                   __ptext17 327E                     __ptext50 36CA                     __ptext42 231C  
                   __ptext34 335A                     __ptext26 1CD4                     __ptext18 0012  
                   __ptext51 3550                     __ptext43 2466                     __ptext35 2F42  
                   __ptext27 32CE                     __ptext19 366E                     __ptext60 1804  
                   __ptext52 3684                     __ptext44 331A                     __ptext36 36A8  
                   __ptext28 3432                     __ptext53 3018                     __ptext45 3496  
                   __ptext37 3656                     __ptext29 3464                     __ptext54 2D4C  
                   __ptext46 35A2                     __ptext38 363C                     __ptext47 2FB0  
                   __ptext39 34F6                     __ptext56 0806                     __ptext48 36B8  
                   __ptext57 2DD0                     __ptext49 36C2                     __ptext58 25AA  
                   __ptext59 2AE4             __size_of_isupper 0032                     _avg_dist 004C  
           __size_of_pulse_e 002E                  ??_backwards 0083             __size_of_stepper 007E  
           __size_of_toupper 004C                __size_of_echo 0544                __size_of_atoi 0144  
              __size_of_main 03CC                __size_of_dtoa 0248                __size_of_trig 0102  
              __size_of_xtoa 0236           __end_of_full_drive 1804                     _keypress 0067  
                   _temp_int 0169              ?_servoRotate180 0001                     int$flags 006E  
                   _vfprintf 312E                     main@Pole 0278                     _stepper2 3078  
                  printf@fmt 00ED                 ??_timer_main 0085  I2C_Master_Write@byteToWrite 0081  
           ___aomod@dividend 0080        __size_of_servoRotate0 0050                 ??_print_echo 00F9  
             ?_number_deploy 00F9                    putch@data 0083               _vfpfcnvrt$1109 00E3  
   __end_of_I2C_Master_Start 36D2     __end_of_I2C_Master_Write 36C2                   _INTCONbits 000FF2  
      ultrasonic_main@sensed 00FB                     isalpha@c 0080                     isdigit@c 0080  
                  stepper2@i 0103                  _send_nibble 363C                     intlevel2 0000  
              _LCD_SIZE_HORZ FE3A                     islower@c 0080                _LCD_SIZE_VERT FE39  
                   isspace@c 0080             ___lldiv@dividend 0080           __end_of_timer_main 3684  
                ??_send_byte 0082                     isupper@c 0080               _tires_deployed 005C  
         __end_of_print_echo 231C                ??_system_init 0080                 _servoRotate0 327E  
                   printf@ap 00F7                  _sense_tires 2C3A      __end_of_I2C_Master_Init 3078  
            ___aomod@divisor 0088      __end_of_I2C_Master_Read 357A      __end_of_I2C_Master_Wait 3698  
    __end_of_I2C_Master_Stop 36CA                  ??_vfpfcnvrt 00CC                  lcdInst@data 0083  
            ___aomod@counter 0090                   _TIMER_INIT 3616                     stepper@i 0104  
          sense_tires@sensed 0083             ___lldiv@quotient 0088                     toupper@c 0086  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5                  _timer_count 0064  
               ___aodiv@sign 0091                 ___aomod@sign 0091         stepper@count_stepper 0102  
