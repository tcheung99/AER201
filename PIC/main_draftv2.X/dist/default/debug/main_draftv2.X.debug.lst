

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 02 00:11:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,inline
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataCOMRAM
   119  003624                     __pidataCOMRAM:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for _dists
   123  003624  0000               	dw	0
   124  003626  FFFF               	dw	65535
   125                           
   126                           ;initializer for _send
   127  003628  01                 	db	1
   128                           
   129                           	psect	mediumconst
   130  00FB66                     __pmediumconst:
   131                           	opt callstack 0
   132  00FB66  00                 	db	0
   133  00FB67                     _keys:
   134                           	opt callstack 0
   135  00FB67  31                 	db	49
   136  00FB68  32                 	db	50
   137  00FB69  33                 	db	51
   138  00FB6A  41                 	db	65
   139  00FB6B  34                 	db	52
   140  00FB6C  35                 	db	53
   141  00FB6D  36                 	db	54
   142  00FB6E  42                 	db	66
   143  00FB6F  37                 	db	55
   144  00FB70  38                 	db	56
   145  00FB71  39                 	db	57
   146  00FB72  43                 	db	67
   147  00FB73  2A                 	db	42
   148  00FB74  30                 	db	48
   149  00FB75  23                 	db	35
   150  00FB76  44                 	db	68
   151  00FB77  00                 	db	0
   152  00FB78                     __end_of_keys:
   153                           	opt callstack 0
   154  00FB78                     _LCD_LINE1_ADDR:
   155                           	opt callstack 0
   156  00FB78  00                 	db	0
   157  00FB79                     __end_of_LCD_LINE1_ADDR:
   158                           	opt callstack 0
   159  00FB79                     _LCD_SIZE_VERT:
   160                           	opt callstack 0
   161  00FB79  04                 	db	4
   162  00FB7A                     __end_of_LCD_SIZE_VERT:
   163                           	opt callstack 0
   164  00FB7A                     _LCD_SIZE_HORZ:
   165                           	opt callstack 0
   166  00FB7A  10                 	db	16
   167  00FB7B                     __end_of_LCD_SIZE_HORZ:
   168                           	opt callstack 0
   169  00FB7B  50                 	db	80
   170  00FB7C                     __end_of_LCD_LINE4_ADDR:
   171                           	opt callstack 0
   172  00FB7C  10                 	db	16
   173  00FB7D                     __end_of_LCD_LINE3_ADDR:
   174                           	opt callstack 0
   175  00FB7D  40                 	db	64
   176  00FB7E                     __end_of_LCD_LINE2_ADDR:
   177                           	opt callstack 0
   178  0000                     _LATAbits	set	3977
   179  0000                     _LATEbits	set	3981
   180  0000                     _LATCbits	set	3979
   181  0000                     _LATE	set	3981
   182  0000                     _TRISE	set	3990
   183  0000                     _LATC	set	3979
   184  0000                     _TRISC	set	3988
   185  0000                     _LATA	set	3977
   186  0000                     _TRISA	set	3986
   187  0000                     _LATB	set	3978
   188  0000                     _TRISCbits	set	3988
   189  0000                     _PORTB	set	3969
   190  0000                     _TRISD	set	3989
   191  0000                     _LATD	set	3980
   192  0000                     _TRISB	set	3987
   193  0000                     _LATBbits	set	3978
   194  0000                     _TRISBbits	set	3987
   195  0000                     _LATDbits	set	3980
   196  0000                     _RC2	set	31762
   197  0000                     _RC1	set	31761
   198  0000                     _RB2	set	31754
   199  0000                     _RB3	set	31755
   200  0000                     _RD0	set	31768
   201  0000                     _RD1	set	31769
   202  0000                     _RB4	set	31756
   203  0000                     _RB5	set	31757
   204  0000                     _RB6	set	31758
   205  0000                     _RB7	set	31759
   206  0000                     _SSPBUF	set	4041
   207  0000                     _SSPCON2bits	set	4037
   208  0000                     _SSPCON1	set	4038
   209  0000                     _SSPADD	set	4040
   210  0000                     _SSPCON1bits	set	4038
   211  0000                     _SSPCON2	set	4037
   212  0000                     _SSPSTAT	set	4039
   213  0000                     _T1CON	set	4045
   214  0000                     _ADCON1	set	4033
   215  0000                     _TMR1H	set	4047
   216  0000                     _TMR1L	set	4046
   217  0000                     _TMR1ON	set	32360
   218  0000                     _T0CONbits	set	4053
   219  0000                     _TMR0L	set	4054
   220  0000                     _TMR0H	set	4055
   221  0000                     _INTCONbits	set	4082
   222  0000                     _GIE	set	32663
   223  0000                     _INT1IE	set	32643
   224  0000                     _TMR0IF	set	32658
   225  0000                     _INT1IF	set	32640
   226  0000                     _RBIE	set	32659
   227  0000                     _RBIF	set	32656
   228  00FB7E                     STR_28:
   229  00FB7E  50                 	db	80	;'P'
   230  00FB7F  25                 	db	37
   231  00FB80  64                 	db	100	;'d'
   232  00FB81  20                 	db	32
   233  00FB82  44                 	db	68	;'D'
   234  00FB83  65                 	db	101	;'e'
   235  00FB84  70                 	db	112	;'p'
   236  00FB85  3A                 	db	58	;':'
   237  00FB86  25                 	db	37
   238  00FB87  64                 	db	100	;'d'
   239  00FB88  2C                 	db	44
   240  00FB89  54                 	db	84	;'T'
   241  00FB8A  6F                 	db	111	;'o'
   242  00FB8B  74                 	db	116	;'t'
   243  00FB8C  3A                 	db	58	;':'
   244  00FB8D  25                 	db	37
   245  00FB8E  64                 	db	100	;'d'
   246  00FB8F  00                 	db	0
   247  00FB90                     STR_18:
   248  00FB90  20                 	db	32
   249  00FB91  20                 	db	32
   250  00FB92  20                 	db	32
   251  00FB93  20                 	db	32
   252  00FB94  20                 	db	32
   253  00FB95  30                 	db	48	;'0'
   254  00FB96  2D                 	db	45
   255  00FB97  4D                 	db	77	;'M'
   256  00FB98  65                 	db	101	;'e'
   257  00FB99  6E                 	db	110	;'n'
   258  00FB9A  75                 	db	117	;'u'
   259  00FB9B  20                 	db	32
   260  00FB9C  20                 	db	32
   261  00FB9D  20                 	db	32
   262  00FB9E  20                 	db	32
   263  00FB9F  20                 	db	32
   264  00FBA0  00                 	db	0
   265  00FBA1                     STR_35:
   266  00FBA1  3C                 	db	60	;'<'
   267  00FBA2  2A                 	db	42
   268  00FBA3  20                 	db	32
   269  00FBA4  20                 	db	32
   270  00FBA5  20                 	db	32
   271  00FBA6  30                 	db	48	;'0'
   272  00FBA7  2D                 	db	45
   273  00FBA8  4D                 	db	77	;'M'
   274  00FBA9  65                 	db	101	;'e'
   275  00FBAA  6E                 	db	110	;'n'
   276  00FBAB  75                 	db	117	;'u'
   277  00FBAC  20                 	db	32
   278  00FBAD  20                 	db	32
   279  00FBAE  20                 	db	32
   280  00FBAF  20                 	db	32
   281  00FBB0  20                 	db	32
   282  00FBB1  00                 	db	0
   283  00FBB2                     STR_1:
   284  00FBB2  44                 	db	68	;'D'
   285  00FBB3  69                 	db	105	;'i'
   286  00FBB4  73                 	db	115	;'s'
   287  00FBB5  74                 	db	116	;'t'
   288  00FBB6  31                 	db	49	;'1'
   289  00FBB7  3D                 	db	61	;'='
   290  00FBB8  25                 	db	37
   291  00FBB9  64                 	db	100	;'d'
   292  00FBBA  2C                 	db	44
   293  00FBBB  41                 	db	65	;'A'
   294  00FBBC  76                 	db	118	;'v'
   295  00FBBD  67                 	db	103	;'g'
   296  00FBBE  3D                 	db	61	;'='
   297  00FBBF  25                 	db	37
   298  00FBC0  64                 	db	100	;'d'
   299  00FBC1  20                 	db	32
   300  00FBC2  00                 	db	0
   301  00FBC3                     STR_7:
   302  00FBC3  44                 	db	68	;'D'
   303  00FBC4  69                 	db	105	;'i'
   304  00FBC5  73                 	db	115	;'s'
   305  00FBC6  74                 	db	116	;'t'
   306  00FBC7  34                 	db	52	;'4'
   307  00FBC8  3D                 	db	61	;'='
   308  00FBC9  25                 	db	37
   309  00FBCA  64                 	db	100	;'d'
   310  00FBCB  2C                 	db	44
   311  00FBCC  41                 	db	65	;'A'
   312  00FBCD  76                 	db	118	;'v'
   313  00FBCE  67                 	db	103	;'g'
   314  00FBCF  3D                 	db	61	;'='
   315  00FBD0  25                 	db	37
   316  00FBD1  64                 	db	100	;'d'
   317  00FBD2  20                 	db	32
   318  00FBD3  00                 	db	0
   319  00FBD4                     STR_24:
   320  00FBD4  20                 	db	32
   321  00FBD5  20                 	db	32
   322  00FBD6  20                 	db	32
   323  00FBD7  20                 	db	32
   324  00FBD8  20                 	db	32
   325  00FBD9  30                 	db	48	;'0'
   326  00FBDA  2D                 	db	45
   327  00FBDB  4D                 	db	77	;'M'
   328  00FBDC  65                 	db	101	;'e'
   329  00FBDD  6E                 	db	110	;'n'
   330  00FBDE  75                 	db	117	;'u'
   331  00FBDF  20                 	db	32
   332  00FBE0  20                 	db	32
   333  00FBE1  20                 	db	32
   334  00FBE2  23                 	db	35
   335  00FBE3  3E                 	db	62	;'>'
   336  00FBE4  00                 	db	0
   337  00FBE5                     STR_27:
   338  00FBE5  3C                 	db	60	;'<'
   339  00FBE6  2A                 	db	42
   340  00FBE7  20                 	db	32
   341  00FBE8  20                 	db	32
   342  00FBE9  20                 	db	32
   343  00FBEA  30                 	db	48	;'0'
   344  00FBEB  2D                 	db	45
   345  00FBEC  4D                 	db	77	;'M'
   346  00FBED  65                 	db	101	;'e'
   347  00FBEE  6E                 	db	110	;'n'
   348  00FBEF  75                 	db	117	;'u'
   349  00FBF0  20                 	db	32
   350  00FBF1  20                 	db	32
   351  00FBF2  20                 	db	32
   352  00FBF3  23                 	db	35
   353  00FBF4  3E                 	db	62	;'>'
   354  00FBF5  00                 	db	0
   355  00FBF6                     STR_10:
   356  00FBF6  64                 	db	100	;'d'
   357  00FBF7  65                 	db	101	;'e'
   358  00FBF8  74                 	db	116	;'t'
   359  00FBF9  2C                 	db	44
   360  00FBFA  25                 	db	37
   361  00FBFB  64                 	db	100	;'d'
   362  00FBFC  2C                 	db	44
   363  00FBFD  20                 	db	32
   364  00FBFE  74                 	db	116	;'t'
   365  00FBFF  63                 	db	99	;'c'
   366  00FC00  6E                 	db	110	;'n'
   367  00FC01  74                 	db	116	;'t'
   368  00FC02  20                 	db	32
   369  00FC03  25                 	db	37
   370  00FC04  64                 	db	100	;'d'
   371  00FC05  00                 	db	0
   372  00FC06                     STR_3:
   373  00FC06  44                 	db	68	;'D'
   374  00FC07  69                 	db	105	;'i'
   375  00FC08  73                 	db	115	;'s'
   376  00FC09  74                 	db	116	;'t'
   377  00FC0A  32                 	db	50	;'2'
   378  00FC0B  3D                 	db	61	;'='
   379  00FC0C  25                 	db	37
   380  00FC0D  64                 	db	100	;'d'
   381  00FC0E  2C                 	db	44
   382  00FC0F  41                 	db	65	;'A'
   383  00FC10  76                 	db	118	;'v'
   384  00FC11  67                 	db	103	;'g'
   385  00FC12  3D                 	db	61	;'='
   386  00FC13  25                 	db	37
   387  00FC14  64                 	db	100	;'d'
   388  00FC15  00                 	db	0
   389  00FC16                     STR_5:
   390  00FC16  44                 	db	68	;'D'
   391  00FC17  69                 	db	105	;'i'
   392  00FC18  73                 	db	115	;'s'
   393  00FC19  74                 	db	116	;'t'
   394  00FC1A  33                 	db	51	;'3'
   395  00FC1B  3D                 	db	61	;'='
   396  00FC1C  25                 	db	37
   397  00FC1D  64                 	db	100	;'d'
   398  00FC1E  2C                 	db	44
   399  00FC1F  41                 	db	65	;'A'
   400  00FC20  76                 	db	118	;'v'
   401  00FC21  67                 	db	103	;'g'
   402  00FC22  3D                 	db	61	;'='
   403  00FC23  25                 	db	37
   404  00FC24  64                 	db	100	;'d'
   405  00FC25  00                 	db	0
   406  00FC26                     STR_13:
   407  00FC26  33                 	db	51	;'3'
   408  00FC27  20                 	db	32
   409  00FC28  2D                 	db	45
   410  00FC29  20                 	db	32
   411  00FC2A  44                 	db	68	;'D'
   412  00FC2B  61                 	db	97	;'a'
   413  00FC2C  74                 	db	116	;'t'
   414  00FC2D  65                 	db	101	;'e'
   415  00FC2E  26                 	db	38
   416  00FC2F  54                 	db	84	;'T'
   417  00FC30  69                 	db	105	;'i'
   418  00FC31  6D                 	db	109	;'m'
   419  00FC32  65                 	db	101	;'e'
   420  00FC33  20                 	db	32
   421  00FC34  00                 	db	0
   422  00FC35                     STR_29:
   423  00FC35  44                 	db	68	;'D'
   424  00FC36  69                 	db	105	;'i'
   425  00FC37  73                 	db	115	;'s'
   426  00FC38  74                 	db	116	;'t'
   427  00FC39  54                 	db	84	;'T'
   428  00FC3A  6F                 	db	111	;'o'
   429  00FC3B  53                 	db	83	;'S'
   430  00FC3C  74                 	db	116	;'t'
   431  00FC3D  61                 	db	97	;'a'
   432  00FC3E  72                 	db	114	;'r'
   433  00FC3F  74                 	db	116	;'t'
   434  00FC40  3A                 	db	58	;':'
   435  00FC41  25                 	db	37
   436  00FC42  64                 	db	100	;'d'
   437  00FC43  00                 	db	0
   438  00FC44                     STR_17:
   439  00FC44  4D                 	db	77	;'M'
   440  00FC45  61                 	db	97	;'a'
   441  00FC46  63                 	db	99	;'c'
   442  00FC47  68                 	db	104	;'h'
   443  00FC48  69                 	db	105	;'i'
   444  00FC49  6E                 	db	110	;'n'
   445  00FC4A  65                 	db	101	;'e'
   446  00FC4B  20                 	db	32
   447  00FC4C  49                 	db	73	;'I'
   448  00FC4D  6E                 	db	110	;'n'
   449  00FC4E  20                 	db	32
   450  00FC4F  55                 	db	85	;'U'
   451  00FC50  73                 	db	115	;'s'
   452  00FC51  65                 	db	101	;'e'
   453  00FC52  00                 	db	0
   454  00FC53                     STR_37:
   455  00FC53  25                 	db	37
   456  00FC54  30                 	db	48	;'0'
   457  00FC55  32                 	db	50	;'2'
   458  00FC56  78                 	db	120	;'x'
   459  00FC57  2F                 	db	47
   460  00FC58  25                 	db	37
   461  00FC59  30                 	db	48	;'0'
   462  00FC5A  32                 	db	50	;'2'
   463  00FC5B  78                 	db	120	;'x'
   464  00FC5C  2F                 	db	47
   465  00FC5D  25                 	db	37
   466  00FC5E  30                 	db	48	;'0'
   467  00FC5F  32                 	db	50	;'2'
   468  00FC60  78                 	db	120	;'x'
   469  00FC61  00                 	db	0
   470  00FC62                     STR_38:
   471  00FC62  25                 	db	37
   472  00FC63  30                 	db	48	;'0'
   473  00FC64  32                 	db	50	;'2'
   474  00FC65  78                 	db	120	;'x'
   475  00FC66  3A                 	db	58	;':'
   476  00FC67  25                 	db	37
   477  00FC68  30                 	db	48	;'0'
   478  00FC69  32                 	db	50	;'2'
   479  00FC6A  78                 	db	120	;'x'
   480  00FC6B  3A                 	db	58	;':'
   481  00FC6C  25                 	db	37
   482  00FC6D  30                 	db	48	;'0'
   483  00FC6E  32                 	db	50	;'2'
   484  00FC6F  78                 	db	120	;'x'
   485  00FC70  00                 	db	0
   486  00FC71                     STR_26:
   487  00FC71  4E                 	db	78	;'N'
   488  00FC72  6F                 	db	111	;'o'
   489  00FC73  2E                 	db	46
   490  00FC74  20                 	db	32
   491  00FC75  50                 	db	80	;'P'
   492  00FC76  6F                 	db	111	;'o'
   493  00FC77  6C                 	db	108	;'l'
   494  00FC78  65                 	db	101	;'e'
   495  00FC79  73                 	db	115	;'s'
   496  00FC7A  3A                 	db	58	;':'
   497  00FC7B  20                 	db	32
   498  00FC7C  25                 	db	37
   499  00FC7D  64                 	db	100	;'d'
   500  00FC7E  00                 	db	0
   501  00FC7F                     STR_25:
   502  00FC7F  4E                 	db	78	;'N'
   503  00FC80  6F                 	db	111	;'o'
   504  00FC81  2E                 	db	46
   505  00FC82  20                 	db	32
   506  00FC83  54                 	db	84	;'T'
   507  00FC84  69                 	db	105	;'i'
   508  00FC85  72                 	db	114	;'r'
   509  00FC86  65                 	db	101	;'e'
   510  00FC87  73                 	db	115	;'s'
   511  00FC88  3A                 	db	58	;':'
   512  00FC89  20                 	db	32
   513  00FC8A  25                 	db	37
   514  00FC8B  64                 	db	100	;'d'
   515  00FC8C  00                 	db	0
   516  00FC8D                     STR_36:
   517  00FC8D  44                 	db	68	;'D'
   518  00FC8E  41                 	db	65	;'A'
   519  00FC8F  54                 	db	84	;'T'
   520  00FC90  45                 	db	69	;'E'
   521  00FC91  20                 	db	32
   522  00FC92  26                 	db	38
   523  00FC93  20                 	db	32
   524  00FC94  54                 	db	84	;'T'
   525  00FC95  49                 	db	73	;'I'
   526  00FC96  4D                 	db	77	;'M'
   527  00FC97  45                 	db	69	;'E'
   528  00FC98  00                 	db	0
   529  00FC99                     STR_42:
   530  00FC99  61                 	db	97	;'a'
   531  00FC9A  76                 	db	118	;'v'
   532  00FC9B  67                 	db	103	;'g'
   533  00FC9C  20                 	db	32
   534  00FC9D  64                 	db	100	;'d'
   535  00FC9E  69                 	db	105	;'i'
   536  00FC9F  73                 	db	115	;'s'
   537  00FCA0  74                 	db	116	;'t'
   538  00FCA1  20                 	db	32
   539  00FCA2  25                 	db	37
   540  00FCA3  64                 	db	100	;'d'
   541  00FCA4  00                 	db	0
   542  00FCA5                     STR_30:
   543  00FCA5  44                 	db	68	;'D'
   544  00FCA6  69                 	db	105	;'i'
   545  00FCA7  73                 	db	115	;'s'
   546  00FCA8  74                 	db	116	;'t'
   547  00FCA9  54                 	db	84	;'T'
   548  00FCAA  6F                 	db	111	;'o'
   549  00FCAB  43                 	db	67	;'C'
   550  00FCAC  4C                 	db	76	;'L'
   551  00FCAD  3A                 	db	58	;':'
   552  00FCAE  25                 	db	37
   553  00FCAF  64                 	db	100	;'d'
   554  00FCB0  00                 	db	0
   555  00FCB1                     STR_12:
   556  00FCB1  32                 	db	50	;'2'
   557  00FCB2  20                 	db	32
   558  00FCB3  2D                 	db	45
   559  00FCB4  20                 	db	32
   560  00FCB5  53                 	db	83	;'S'
   561  00FCB6  75                 	db	117	;'u'
   562  00FCB7  6D                 	db	109	;'m'
   563  00FCB8  6D                 	db	109	;'m'
   564  00FCB9  61                 	db	97	;'a'
   565  00FCBA  72                 	db	114	;'r'
   566  00FCBB  79                 	db	121	;'y'
   567  00FCBC  00                 	db	0
   568  00FCBD                     STR_43:
   569  00FCBD  70                 	db	112	;'p'
   570  00FCBE  6F                 	db	111	;'o'
   571  00FCBF  6C                 	db	108	;'l'
   572  00FCC0  65                 	db	101	;'e'
   573  00FCC1  73                 	db	115	;'s'
   574  00FCC2  20                 	db	32
   575  00FCC3  64                 	db	100	;'d'
   576  00FCC4  20                 	db	32
   577  00FCC5  25                 	db	37
   578  00FCC6  64                 	db	100	;'d'
   579  00FCC7  00                 	db	0
   580  00FCC8                     STR_44:
   581  00FCC8  70                 	db	112	;'p'
   582  00FCC9  6F                 	db	111	;'o'
   583  00FCCA  6C                 	db	108	;'l'
   584  00FCCB  65                 	db	101	;'e'
   585  00FCCC  73                 	db	115	;'s'
   586  00FCCD  20                 	db	32
   587  00FCCE  64                 	db	100	;'d'
   588  00FCCF  6F                 	db	111	;'o'
   589  00FCD0  6E                 	db	110	;'n'
   590  00FCD1  65                 	db	101	;'e'
   591  00FCD2  00                 	db	0
   592  00FCD3                     STR_46:
   593  00FCD3  63                 	db	99	;'c'
   594  00FCD4  6E                 	db	110	;'n'
   595  00FCD5  74                 	db	116	;'t'
   596  00FCD6  20                 	db	32
   597  00FCD7  69                 	db	105	;'i'
   598  00FCD8  73                 	db	115	;'s'
   599  00FCD9  20                 	db	32
   600  00FCDA  25                 	db	37
   601  00FCDB  64                 	db	100	;'d'
   602  00FCDC  00                 	db	0
   603  00FCDD                     STR_2:
   604  00FCDD  44                 	db	68	;'D'
   605  00FCDE  69                 	db	105	;'i'
   606  00FCDF  73                 	db	115	;'s'
   607  00FCE0  74                 	db	116	;'t'
   608  00FCE1  31                 	db	49	;'1'
   609  00FCE2  20                 	db	32
   610  00FCE3  3D                 	db	61	;'='
   611  00FCE4  20                 	db	32
   612  00FCE5  58                 	db	88	;'X'
   613  00FCE6  00                 	db	0
   614  00FCE7                     STR_4:
   615  00FCE7  44                 	db	68	;'D'
   616  00FCE8  69                 	db	105	;'i'
   617  00FCE9  73                 	db	115	;'s'
   618  00FCEA  74                 	db	116	;'t'
   619  00FCEB  32                 	db	50	;'2'
   620  00FCEC  20                 	db	32
   621  00FCED  3D                 	db	61	;'='
   622  00FCEE  20                 	db	32
   623  00FCEF  58                 	db	88	;'X'
   624  00FCF0  00                 	db	0
   625  00FCF1                     STR_6:
   626  00FCF1  44                 	db	68	;'D'
   627  00FCF2  69                 	db	105	;'i'
   628  00FCF3  73                 	db	115	;'s'
   629  00FCF4  74                 	db	116	;'t'
   630  00FCF5  33                 	db	51	;'3'
   631  00FCF6  20                 	db	32
   632  00FCF7  3D                 	db	61	;'='
   633  00FCF8  20                 	db	32
   634  00FCF9  58                 	db	88	;'X'
   635  00FCFA  00                 	db	0
   636  00FCFB                     STR_8:
   637  00FCFB  44                 	db	68	;'D'
   638  00FCFC  69                 	db	105	;'i'
   639  00FCFD  73                 	db	115	;'s'
   640  00FCFE  74                 	db	116	;'t'
   641  00FCFF  34                 	db	52	;'4'
   642  00FD00  20                 	db	32
   643  00FD01  3D                 	db	61	;'='
   644  00FD02  20                 	db	32
   645  00FD03  58                 	db	88	;'X'
   646  00FD04  00                 	db	0
   647  00FD05                     STR_45:
   648  00FD05  62                 	db	98	;'b'
   649  00FD06  61                 	db	97	;'a'
   650  00FD07  63                 	db	99	;'c'
   651  00FD08  6B                 	db	107	;'k'
   652  00FD09  77                 	db	119	;'w'
   653  00FD0A  61                 	db	97	;'a'
   654  00FD0B  72                 	db	114	;'r'
   655  00FD0C  64                 	db	100	;'d'
   656  00FD0D  73                 	db	115	;'s'
   657  00FD0E  00                 	db	0
   658  00FD0F                     STR_11:
   659  00FD0F  31                 	db	49	;'1'
   660  00FD10  20                 	db	32
   661  00FD11  2D                 	db	45
   662  00FD12  20                 	db	32
   663  00FD13  53                 	db	83	;'S'
   664  00FD14  74                 	db	116	;'t'
   665  00FD15  61                 	db	97	;'a'
   666  00FD16  72                 	db	114	;'r'
   667  00FD17  74                 	db	116	;'t'
   668  00FD18  00                 	db	0
   669  00FD19                     STR_19:
   670  00FD19  4F                 	db	79	;'O'
   671  00FD1A  70                 	db	112	;'p'
   672  00FD1B  20                 	db	32
   673  00FD1C  54                 	db	84	;'T'
   674  00FD1D  69                 	db	105	;'i'
   675  00FD1E  6D                 	db	109	;'m'
   676  00FD1F  65                 	db	101	;'e'
   677  00FD20  3A                 	db	58	;':'
   678  00FD21  00                 	db	0
   679  00FD22                     STR_41:
   680  00FD22  74                 	db	116	;'t'
   681  00FD23  64                 	db	100	;'d'
   682  00FD24  65                 	db	101	;'e'
   683  00FD25  70                 	db	112	;'p'
   684  00FD26  20                 	db	32
   685  00FD27  25                 	db	37
   686  00FD28  64                 	db	100	;'d'
   687  00FD29  00                 	db	0
   688  00FD2A                     STR_48:
   689  00FD2A  77                 	db	119	;'w'
   690  00FD2B  68                 	db	104	;'h'
   691  00FD2C  61                 	db	97	;'a'
   692  00FD2D  74                 	db	116	;'t'
   693  00FD2E  00                 	db	0
   694  0000                     
   695                           ; #config settings
   696  00FD2F  00                 	db	0	; dummy byte at the end
   697  0000                     
   698                           	psect	cinit
   699  00302A                     __pcinit:
   700                           	opt callstack 0
   701  00302A                     start_initialization:
   702                           	opt callstack 0
   703  00302A                     __initialization:
   704                           	opt callstack 0
   705                           
   706                           ; Initialize objects allocated to COMRAM (5 bytes)
   707                           ; load TBLPTR registers with __pidataCOMRAM
   708  00302A  0E24               	movlw	low __pidataCOMRAM
   709  00302C  6EF6               	movwf	tblptrl,c
   710  00302E  0E36               	movlw	high __pidataCOMRAM
   711  003030  6EF7               	movwf	tblptrh,c
   712  003032  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   713  003034  6EF8               	movwf	tblptru,c
   714  003036  EE00  F069         	lfsr	0,__pdataCOMRAM
   715  00303A  EE10 F005          	lfsr	1,5
   716  00303E                     copy_data0:
   717  00303E  0009               	tblrd		*+
   718  003040  CFF5 FFEE          	movff	tablat,postinc0
   719  003044  50E5               	movf	postdec1,w,c
   720  003046  50E1               	movf	fsr1l,w,c
   721  003048  E1FA               	bnz	copy_data0
   722                           
   723                           ; Clear objects allocated to BANK2 (120 bytes)
   724  00304A  EE02  F000         	lfsr	0,__pbssBANK2
   725  00304E  0E78               	movlw	120
   726  003050                     clear_0:
   727  003050  6AEE               	clrf	postinc0,c
   728  003052  06E8               	decf	wreg,f,c
   729  003054  E1FD               	bnz	clear_0
   730                           
   731                           ; Clear objects allocated to BANK1 (66 bytes)
   732  003056  EE01  F05C         	lfsr	0,__pbssBANK1
   733  00305A  0E42               	movlw	66
   734  00305C                     clear_1:
   735  00305C  6AEE               	clrf	postinc0,c
   736  00305E  06E8               	decf	wreg,f,c
   737  003060  E1FD               	bnz	clear_1
   738                           
   739                           ; Clear objects allocated to BANK0 (3 bytes)
   740  003062  0100               	movlb	0
   741  003064  6BFF               	clrf	(__pbssBANK0+2)& (0+255),b
   742  003066  6BFE               	clrf	(__pbssBANK0+1)& (0+255),b
   743  003068  6BFD               	clrf	__pbssBANK0& (0+255),b
   744                           
   745                           ; Clear objects allocated to COMRAM (49 bytes)
   746  00306A  EE00  F038         	lfsr	0,__pbssCOMRAM
   747  00306E  0E31               	movlw	49
   748  003070                     clear_2:
   749  003070  6AEE               	clrf	postinc0,c
   750  003072  06E8               	decf	wreg,f,c
   751  003074  E1FD               	bnz	clear_2
   752  003076                     end_of_initialization:
   753                           	opt callstack 0
   754  003076                     __end_of__initialization:
   755                           	opt callstack 0
   756  003076  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   757  003078  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   758  00307A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   759  00307C  6EF8               	movwf	tblptru,c
   760  00307E  0100               	movlb	0
   761  003080  EF7A  F008         	goto	_main	;jump to C main() function
   762                           
   763                           	psect	bssCOMRAM
   764  000038                     __pbssCOMRAM:
   765                           	opt callstack 0
   766  000038                     _sum:
   767                           	opt callstack 0
   768  000038                     	ds	8
   769  000040                     _a:
   770                           	opt callstack 0
   771  000040                     	ds	8
   772  000048                     _sumf:
   773                           	opt callstack 0
   774  000048                     	ds	4
   775  00004C                     _avg_dist:
   776                           	opt callstack 0
   777  00004C                     	ds	4
   778  000050                     _nout:
   779                           	opt callstack 0
   780  000050                     	ds	2
   781  000052                     _width:
   782                           	opt callstack 0
   783  000052                     	ds	2
   784  000054                     _prec:
   785                           	opt callstack 0
   786  000054                     	ds	2
   787  000056                     _flags:
   788                           	opt callstack 0
   789  000056                     	ds	2
   790  000058                     _meas:
   791                           	opt callstack 0
   792  000058                     	ds	2
   793  00005A                     _poles_detected:
   794                           	opt callstack 0
   795  00005A                     	ds	2
   796  00005C                     _tires_deployed:
   797                           	opt callstack 0
   798  00005C                     	ds	2
   799  00005E                     _tick:
   800                           	opt callstack 0
   801  00005E                     	ds	2
   802  000060                     _sens:
   803                           	opt callstack 0
   804  000060                     	ds	2
   805  000062                     _b:
   806                           	opt callstack 0
   807  000062                     	ds	2
   808  000064                     _timer_count:
   809                           	opt callstack 0
   810  000064                     	ds	2
   811  000066                     _data:
   812                           	opt callstack 0
   813  000066                     	ds	1
   814  000067                     _keypress:
   815                           	opt callstack 0
   816  000067                     	ds	1
   817  000068                     _counter:
   818                           	opt callstack 0
   819  000068                     	ds	1
   820                           
   821                           	psect	dataCOMRAM
   822  000069                     __pdataCOMRAM:
   823                           	opt callstack 0
   824  000069                     _dists:
   825                           	opt callstack 0
   826  000069                     	ds	4
   827  00006D                     _send:
   828                           	opt callstack 0
   829  00006D                     	ds	1
   830                           
   831                           	psect	bssBANK0
   832  0000FD                     __pbssBANK0:
   833                           	opt callstack 0
   834  0000FD                     _i:
   835                           	opt callstack 0
   836  0000FD                     	ds	2
   837  0000FF                     _temp:
   838                           	opt callstack 0
   839  0000FF                     	ds	1
   840                           
   841                           	psect	bssBANK1
   842  00015C                     __pbssBANK1:
   843                           	opt callstack 0
   844  00015C                     _dist_final:
   845                           	opt callstack 0
   846  00015C                     	ds	48
   847  00018C                     _time:
   848                           	opt callstack 0
   849  00018C                     	ds	7
   850  000193                     _pressed:
   851                           	opt callstack 0
   852  000193                     	ds	2
   853  000195                     _disp:
   854                           	opt callstack 0
   855  000195                     	ds	2
   856  000197                     _state:
   857                           	opt callstack 0
   858  000197                     	ds	2
   859  000199                     _temp_int:
   860                           	opt callstack 0
   861  000199                     	ds	2
   862  00019B                     _cnt:
   863                           	opt callstack 0
   864  00019B                     	ds	2
   865  00019D                     _key_was_pressed:
   866                           	opt callstack 0
   867  00019D                     	ds	1
   868                           
   869                           	psect	bssBANK2
   870  000200                     __pbssBANK2:
   871                           	opt callstack 0
   872  000200                     _Pole:
   873                           	opt callstack 0
   874  000200                     	ds	80
   875  000250                     _prev_dist_final:
   876                           	opt callstack 0
   877  000250                     	ds	8
   878  000258                     _dbuf:
   879                           	opt callstack 0
   880  000258                     	ds	32
   881                           
   882                           	psect	cstackBANK2
   883  000278                     __pcstackBANK2:
   884                           	opt callstack 0
   885  000278                     main@Pole:
   886                           	opt callstack 0
   887                           
   888                           ; 80 bytes @ 0x0
   889  000278                     	ds	80
   890  0002C8                     main@pole_cl_dist:
   891                           	opt callstack 0
   892                           
   893                           ; 2 bytes @ 0x50
   894  0002C8                     	ds	2
   895  0002CA                     main@read:
   896                           	opt callstack 0
   897                           
   898                           ; 2 bytes @ 0x52
   899  0002CA                     	ds	2
   900  0002CC                     main@i:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x54
   904  0002CC                     	ds	2
   905  0002CE                     main@i_457:
   906                           	opt callstack 0
   907                           
   908                           ; 2 bytes @ 0x56
   909  0002CE                     	ds	2
   910  0002D0                     main@stack:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x58
   914  0002D0                     	ds	2
   915  0002D2                     main@t_count:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x5A
   919  0002D2                     	ds	2
   920  0002D4                     main@t_dep:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x5C
   924  0002D4                     	ds	2
   925  0002D6                     main@poles_detected:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x5E
   929  0002D6                     	ds	2
   930  0002D8                     main@prev_avg_dist:
   931                           	opt callstack 0
   932                           
   933                           ; 4 bytes @ 0x60
   934  0002D8                     	ds	4
   935                           
   936                           	psect	cstackBANK1
   937  000100                     __pcstackBANK1:
   938                           	opt callstack 0
   939  000100                     ??_number_deploy:
   940  000100                     ??_UI_main:
   941  000100                     stepper2@direction:
   942                           	opt callstack 0
   943  000100                     stepper@stack:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0x0
   947  000100                     	ds	1
   948  000101                     stepper2@count_stepper:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x1
   952  000101                     	ds	1
   953  000102                     number_deploy@tires_t:
   954                           	opt callstack 0
   955  000102                     stepper@count_stepper:
   956                           	opt callstack 0
   957                           
   958                           ; 2 bytes @ 0x2
   959  000102                     	ds	1
   960  000103                     stepper2@i:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0x3
   964  000103                     	ds	1
   965  000104                     number_deploy@tires_detected:
   966                           	opt callstack 0
   967  000104                     stepper@i:
   968                           	opt callstack 0
   969  000104                     UI_main@Pole:
   970                           	opt callstack 0
   971                           
   972                           ; 80 bytes @ 0x4
   973  000104                     	ds	2
   974  000106                     number_deploy@t_count:
   975                           	opt callstack 0
   976  000106                     stepper@i_859:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x6
   980  000106                     	ds	2
   981  000108                     actuators_main@stack:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x8
   985  000108                     	ds	2
   986  00010A                     ??_actuators_main:
   987                           
   988                           ; 1 bytes @ 0xA
   989  00010A                     	ds	2
   990  00010C                     actuators_main@act_cnt:
   991                           	opt callstack 0
   992                           
   993                           ; 2 bytes @ 0xC
   994  00010C                     	ds	72
   995  000154                     UI_main@keypress:
   996                           	opt callstack 0
   997                           
   998                           ; 1 bytes @ 0x54
   999  000154                     	ds	1
  1000  000155                     UI_main@tick:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x55
  1004  000155                     	ds	4
  1005  000159                     UI_main@i:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x59
  1009  000159                     	ds	1
  1010  00015A                     ??_main:
  1011                           
  1012                           ; 1 bytes @ 0x5A
  1013  00015A                     	ds	2
  1014                           
  1015                           	psect	cstackBANK0
  1016  000080                     __pcstackBANK0:
  1017                           	opt callstack 0
  1018  000080                     ??_trig:
  1019  000080                     ??_I2C_Master_Wait:
  1020  000080                     ??_servoRotate0:
  1021  000080                     ??_servoRotate180:
  1022  000080                     ?_strlen:
  1023                           	opt callstack 0
  1024  000080                     ?_isupper:
  1025                           	opt callstack 0
  1026  000080                     ?_isalpha:
  1027                           	opt callstack 0
  1028  000080                     ?_isdigit:
  1029                           	opt callstack 0
  1030  000080                     ?_isspace:
  1031                           	opt callstack 0
  1032  000080                     ?_islower:
  1033                           	opt callstack 0
  1034  000080                     ?___wmul:
  1035                           	opt callstack 0
  1036  000080                     ?___awdiv:
  1037                           	opt callstack 0
  1038  000080                     ?___lldiv:
  1039                           	opt callstack 0
  1040  000080                     ?___llmod:
  1041                           	opt callstack 0
  1042  000080                     ?___aodiv:
  1043                           	opt callstack 0
  1044  000080                     ?___aomod:
  1045                           	opt callstack 0
  1046  000080                     pulse_e@interruptState:
  1047                           	opt callstack 0
  1048  000080                     ___wmul@multiplier:
  1049                           	opt callstack 0
  1050  000080                     ___awdiv@dividend:
  1051                           	opt callstack 0
  1052  000080                     isalpha@c:
  1053                           	opt callstack 0
  1054  000080                     isdigit@c:
  1055                           	opt callstack 0
  1056  000080                     isspace@c:
  1057                           	opt callstack 0
  1058  000080                     isupper@c:
  1059                           	opt callstack 0
  1060  000080                     strlen@s:
  1061                           	opt callstack 0
  1062  000080                     islower@c:
  1063                           	opt callstack 0
  1064  000080                     ___lldiv@dividend:
  1065                           	opt callstack 0
  1066  000080                     ___llmod@dividend:
  1067                           	opt callstack 0
  1068  000080                     ___aodiv@dividend:
  1069                           	opt callstack 0
  1070  000080                     ___aomod@dividend:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 8 bytes @ 0x0
  1074  000080                     	ds	1
  1075  000081                     I2C_Master_Read@ackBit:
  1076                           	opt callstack 0
  1077  000081                     send_nibble@data:
  1078                           	opt callstack 0
  1079  000081                     I2C_Master_Write@byteToWrite:
  1080                           	opt callstack 0
  1081  000081                     servoRotate0@i:
  1082                           	opt callstack 0
  1083  000081                     servoRotate180@i:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x1
  1087  000081                     	ds	1
  1088  000082                     ??_isupper:
  1089  000082                     ??_isalpha:
  1090  000082                     ??_isdigit:
  1091  000082                     ??_isspace:
  1092  000082                     ??_islower:
  1093  000082                     I2C_Master_Read@receivedByte:
  1094                           	opt callstack 0
  1095  000082                     send_byte@data:
  1096                           	opt callstack 0
  1097  000082                     ___wmul@multiplicand:
  1098                           	opt callstack 0
  1099  000082                     ___awdiv@divisor:
  1100                           	opt callstack 0
  1101  000082                     strlen@a:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x2
  1105  000082                     	ds	1
  1106  000083                     ??_servo:
  1107  000083                     lcdInst@data:
  1108                           	opt callstack 0
  1109  000083                     putch@data:
  1110                           	opt callstack 0
  1111  000083                     sense_tires@sensed:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x3
  1115  000083                     	ds	1
  1116  000084                     ??_initLCD:
  1117  000084                     ___awdiv@counter:
  1118                           	opt callstack 0
  1119  000084                     ___wmul@product:
  1120                           	opt callstack 0
  1121  000084                     fputc@c:
  1122                           	opt callstack 0
  1123  000084                     ___lldiv@divisor:
  1124                           	opt callstack 0
  1125  000084                     ___llmod@divisor:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x4
  1129  000084                     	ds	1
  1130  000085                     ___awdiv@sign:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x5
  1134  000085                     	ds	1
  1135  000086                     ?_toupper:
  1136                           	opt callstack 0
  1137  000086                     _isspace$1544:
  1138                           	opt callstack 0
  1139  000086                     ___awdiv@quotient:
  1140                           	opt callstack 0
  1141  000086                     fputc@fp:
  1142                           	opt callstack 0
  1143  000086                     toupper@c:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x6
  1147  000086                     	ds	1
  1148  000087                     ?_atoi:
  1149                           	opt callstack 0
  1150  000087                     atoi@s:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x7
  1154  000087                     	ds	1
  1155  000088                     ??_fputc:
  1156  000088                     ??_toupper:
  1157  000088                     ___llmod@counter:
  1158                           	opt callstack 0
  1159  000088                     ___lldiv@quotient:
  1160                           	opt callstack 0
  1161  000088                     ___aodiv@divisor:
  1162                           	opt callstack 0
  1163  000088                     ___aomod@divisor:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 8 bytes @ 0x8
  1167  000088                     	ds	1
  1168  000089                     ??_atoi:
  1169                           
  1170                           ; 1 bytes @ 0x9
  1171  000089                     	ds	3
  1172  00008C                     ___lldiv@counter:
  1173                           	opt callstack 0
  1174  00008C                     _toupper$1609:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 2 bytes @ 0xC
  1178  00008C                     	ds	1
  1179  00008D                     atoi@neg:
  1180                           	opt callstack 0
  1181  00008D                     fputs@s:
  1182                           	opt callstack 0
  1183  00008D                     I2C_Master_Init@clockFreq:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 4 bytes @ 0xD
  1187  00008D                     	ds	2
  1188  00008F                     _atoi$1517:
  1189                           	opt callstack 0
  1190  00008F                     fputs@fp:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0xF
  1194  00008F                     	ds	1
  1195  000090                     ___aodiv@counter:
  1196                           	opt callstack 0
  1197  000090                     ___aomod@counter:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 1 bytes @ 0x10
  1201  000090                     	ds	1
  1202  000091                     ??_I2C_Master_Init:
  1203  000091                     ___aodiv@sign:
  1204                           	opt callstack 0
  1205  000091                     ___aomod@sign:
  1206                           	opt callstack 0
  1207  000091                     fputs@c:
  1208                           	opt callstack 0
  1209  000091                     _atoi$1519:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x11
  1213  000091                     	ds	1
  1214  000092                     ?_abs:
  1215                           	opt callstack 0
  1216  000092                     abs@a:
  1217                           	opt callstack 0
  1218  000092                     fputs@i:
  1219                           	opt callstack 0
  1220  000092                     ___aodiv@quotient:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 8 bytes @ 0x12
  1224  000092                     	ds	1
  1225  000093                     _atoi$1518:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x13
  1229  000093                     	ds	1
  1230  000094                     ??_abs:
  1231  000094                     ?_pad:
  1232                           	opt callstack 0
  1233  000094                     pad@fp:
  1234                           	opt callstack 0
  1235  000094                     atoi@n:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x14
  1239  000094                     	ds	1
  1240  000095                     
  1241                           ; 1 bytes @ 0x15
  1242  000095                     	ds	1
  1243  000096                     pad@buf:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x16
  1247  000096                     	ds	2
  1248  000098                     pad@p:
  1249                           	opt callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x18
  1252  000098                     	ds	2
  1253  00009A                     ??_pad:
  1254                           
  1255                           ; 1 bytes @ 0x1A
  1256  00009A                     	ds	1
  1257  00009B                     pad@i:
  1258                           	opt callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x1B
  1261  00009B                     	ds	2
  1262  00009D                     pad@w:
  1263                           	opt callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x1D
  1266  00009D                     	ds	2
  1267  00009F                     ?_dtoa:
  1268                           	opt callstack 0
  1269  00009F                     ?_xtoa:
  1270                           	opt callstack 0
  1271  00009F                     dtoa@fp:
  1272                           	opt callstack 0
  1273  00009F                     xtoa@fp:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x1F
  1277  00009F                     	ds	2
  1278  0000A1                     dtoa@d:
  1279                           	opt callstack 0
  1280  0000A1                     xtoa@d:
  1281                           	opt callstack 0
  1282                           
  1283                           ; 8 bytes @ 0x21
  1284  0000A1                     	ds	8
  1285  0000A9                     ??_dtoa:
  1286  0000A9                     xtoa@x:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 1 bytes @ 0x29
  1290  0000A9                     	ds	1
  1291  0000AA                     ??_xtoa:
  1292                           
  1293                           ; 1 bytes @ 0x2A
  1294  0000AA                     	ds	7
  1295  0000B1                     _dtoa$1033:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x31
  1299  0000B1                     	ds	1
  1300  0000B2                     _xtoa$1044:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x32
  1304  0000B2                     	ds	1
  1305  0000B3                     dtoa@p:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x33
  1309  0000B3                     	ds	1
  1310  0000B4                     _xtoa$1045:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x34
  1314  0000B4                     	ds	1
  1315  0000B5                     dtoa@w:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x35
  1319  0000B5                     	ds	1
  1320  0000B6                     xtoa@p:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x36
  1324  0000B6                     	ds	1
  1325  0000B7                     dtoa@s:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x37
  1329  0000B7                     	ds	1
  1330  0000B8                     xtoa@w:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x38
  1334  0000B8                     	ds	1
  1335  0000B9                     dtoa@n:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 8 bytes @ 0x39
  1339  0000B9                     	ds	1
  1340  0000BA                     xtoa@n:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 8 bytes @ 0x3A
  1344  0000BA                     	ds	7
  1345  0000C1                     dtoa@i:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x41
  1349  0000C1                     	ds	1
  1350  0000C2                     xtoa@i:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x42
  1354  0000C2                     	ds	2
  1355  0000C4                     xtoa@c:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x44
  1359  0000C4                     	ds	2
  1360  0000C6                     ?_vfpfcnvrt:
  1361                           	opt callstack 0
  1362  0000C6                     vfpfcnvrt@fp:
  1363                           	opt callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x46
  1366  0000C6                     	ds	2
  1367  0000C8                     vfpfcnvrt@fmt:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x48
  1371  0000C8                     	ds	2
  1372  0000CA                     vfpfcnvrt@ap:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x4A
  1376  0000CA                     	ds	2
  1377  0000CC                     ??_vfpfcnvrt:
  1378                           
  1379                           ; 1 bytes @ 0x4C
  1380  0000CC                     	ds	4
  1381  0000D0                     vfpfcnvrt@ll:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 8 bytes @ 0x50
  1385  0000D0                     	ds	8
  1386  0000D8                     vfpfcnvrt@llu:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 8 bytes @ 0x58
  1390  0000D8                     	ds	8
  1391  0000E0                     vfpfcnvrt@c:
  1392                           	opt callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x60
  1395  0000E0                     	ds	1
  1396  0000E1                     vfpfcnvrt@done:
  1397                           	opt callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x61
  1400  0000E1                     	ds	2
  1401  0000E3                     _vfpfcnvrt$1059:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x63
  1405  0000E3                     	ds	2
  1406  0000E5                     ?_vfprintf:
  1407                           	opt callstack 0
  1408  0000E5                     vfprintf@fp:
  1409                           	opt callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x65
  1412  0000E5                     	ds	2
  1413  0000E7                     vfprintf@fmt:
  1414                           	opt callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x67
  1417  0000E7                     	ds	2
  1418  0000E9                     vfprintf@ap:
  1419                           	opt callstack 0
  1420                           
  1421                           ; 2 bytes @ 0x69
  1422  0000E9                     	ds	2
  1423  0000EB                     vfprintf@cfmt:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x6B
  1427  0000EB                     	ds	2
  1428  0000ED                     ?_printf:
  1429                           	opt callstack 0
  1430  0000ED                     printf@fmt:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x6D
  1434  0000ED                     	ds	8
  1435  0000F5                     
  1436                           ; 1 bytes @ 0x75
  1437  0000F5                     	ds	2
  1438  0000F7                     printf@ap:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x77
  1442  0000F7                     	ds	2
  1443  0000F9                     ??_print_echo:
  1444  0000F9                     ?_number_deploy:
  1445                           	opt callstack 0
  1446  0000F9                     number_deploy@avg_dist:
  1447                           	opt callstack 0
  1448  0000F9                     UI_main@t_dep:
  1449                           	opt callstack 0
  1450  0000F9                     full_drive@stepper_no:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x79
  1454  0000F9                     	ds	1
  1455  0000FA                     ??_ultrasonic_main:
  1456                           
  1457                           ; 1 bytes @ 0x7A
  1458  0000FA                     	ds	1
  1459  0000FB                     ??_full_drive:
  1460  0000FB                     ultrasonic_main@sensed:
  1461                           	opt callstack 0
  1462  0000FB                     number_deploy@poles_detected:
  1463                           	opt callstack 0
  1464  0000FB                     UI_main@poles_detected:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x7B
  1468  0000FB                     	ds	1
  1469  0000FC                     full_drive@direction:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x7C
  1473  0000FC                     	ds	1
  1474  0000FD                     
  1475                           ; 1 bytes @ 0x7D
  1476                           
  1477                           	psect	cstackCOMRAM
  1478  000001                     __pcstackCOMRAM:
  1479                           	opt callstack 0
  1480  000001                     ?i2___awdiv:
  1481                           	opt callstack 0
  1482  000001                     ?___xxtofl:
  1483                           	opt callstack 0
  1484  000001                     i2___awdiv@dividend:
  1485                           	opt callstack 0
  1486  000001                     ___xxtofl@val:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 4 bytes @ 0x0
  1490  000001                     	ds	2
  1491  000003                     i2___awdiv@divisor:
  1492                           	opt callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x2
  1495  000003                     	ds	2
  1496  000005                     ??___xxtofl:
  1497  000005                     i2___awdiv@counter:
  1498                           	opt callstack 0
  1499                           
  1500                           ; 1 bytes @ 0x4
  1501  000005                     	ds	1
  1502  000006                     i2___awdiv@sign:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 1 bytes @ 0x5
  1506  000006                     	ds	1
  1507  000007                     i2___awdiv@quotient:
  1508                           	opt callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x6
  1511  000007                     	ds	2
  1512  000009                     ___xxtofl@sign:
  1513                           	opt callstack 0
  1514                           
  1515                           ; 1 bytes @ 0x8
  1516  000009                     	ds	1
  1517  00000A                     ___xxtofl@exp:
  1518                           	opt callstack 0
  1519                           
  1520                           ; 1 bytes @ 0x9
  1521  00000A                     	ds	1
  1522  00000B                     ___xxtofl@arg:
  1523                           	opt callstack 0
  1524                           
  1525                           ; 4 bytes @ 0xA
  1526  00000B                     	ds	4
  1527  00000F                     ?___fldiv:
  1528                           	opt callstack 0
  1529  00000F                     ___fldiv@b:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 4 bytes @ 0xE
  1533  00000F                     	ds	4
  1534  000013                     ___fldiv@a:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 4 bytes @ 0x12
  1538  000013                     	ds	4
  1539  000017                     ??___fldiv:
  1540                           
  1541                           ; 1 bytes @ 0x16
  1542  000017                     	ds	4
  1543  00001B                     ___fldiv@rem:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 4 bytes @ 0x1A
  1547  00001B                     	ds	4
  1548  00001F                     ___fldiv@sign:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 1 bytes @ 0x1E
  1552  00001F                     	ds	1
  1553  000020                     ___fldiv@new_exp:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x1F
  1557  000020                     	ds	2
  1558  000022                     ___fldiv@grs:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 4 bytes @ 0x21
  1562  000022                     	ds	4
  1563  000026                     ___fldiv@bexp:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 1 bytes @ 0x25
  1567  000026                     	ds	1
  1568  000027                     ___fldiv@aexp:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 1 bytes @ 0x26
  1572  000027                     	ds	1
  1573  000028                     ?___fltol:
  1574                           	opt callstack 0
  1575  000028                     ___fltol@f1:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 4 bytes @ 0x27
  1579  000028                     	ds	4
  1580  00002C                     ??___fltol:
  1581                           
  1582                           ; 1 bytes @ 0x2B
  1583  00002C                     	ds	4
  1584  000030                     ___fltol@sign1:
  1585                           	opt callstack 0
  1586                           
  1587                           ; 1 bytes @ 0x2F
  1588  000030                     	ds	1
  1589  000031                     ___fltol@exp1:
  1590                           	opt callstack 0
  1591                           
  1592                           ; 1 bytes @ 0x30
  1593  000031                     	ds	1
  1594  000032                     ??_echo:
  1595                           
  1596                           ; 1 bytes @ 0x31
  1597  000032                     	ds	4
  1598  000036                     ??_ISR:
  1599                           
  1600                           ; 1 bytes @ 0x35
  1601  000036                     	ds	2
  1602                           
  1603 ;;
  1604 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1605 ;;
  1606 ;; *************** function _main *****************
  1607 ;; Defined at:
  1608 ;;		line 633 in file "main.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  i               2   86[BANK2 ] int 
  1613 ;;  i               2   84[BANK2 ] int 
  1614 ;;  pole_cl_dist    2   80[BANK2 ] int 
  1615 ;;  Pole           80    0[BANK2 ] struct Poles[10]
  1616 ;;  prev_avg_dis    4   96[BANK2 ] volatile long 
  1617 ;;  poles_detect    2   94[BANK2 ] int 
  1618 ;;  t_dep           2   92[BANK2 ] int 
  1619 ;;  t_count         2   90[BANK2 ] int 
  1620 ;;  stack           2   88[BANK2 ] int 
  1621 ;;  read            2   82[BANK2 ] int 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Locals:         0       0       0     100       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Totals:         0       0       2     100       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;Total ram usage:      102 bytes
  1636 ;; Hardware stack levels required when called:   17
  1637 ;; This function calls:
  1638 ;;		_I2C_Master_Read
  1639 ;;		_I2C_Master_Start
  1640 ;;		_I2C_Master_Stop
  1641 ;;		_I2C_Master_Write
  1642 ;;		_UI_main
  1643 ;;		_actuators_main
  1644 ;;		_backwards
  1645 ;;		_brake
  1646 ;;		_initLCD
  1647 ;;		_lcdInst
  1648 ;;		_number_deploy
  1649 ;;		_printf
  1650 ;;		_start
  1651 ;;		_ultrasonic_main
  1652 ;; This function is called by:
  1653 ;;		Startup code after reset
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text0
  1658  0010F4                     __ptext0:
  1659                           	opt callstack 0
  1660  0010F4                     _main:
  1661                           	opt callstack 14
  1662                           
  1663                           ;main.c: 635:     int t_dep=0;
  1664                           
  1665                           ;incstack = 0
  1666  0010F4  0E00               	movlw	0
  1667  0010F6  0102               	movlb	2	; () banked
  1668  0010F8  6FD5               	movwf	(main@t_dep+1)& (0+255),b
  1669  0010FA  0E00               	movlw	0
  1670  0010FC  6FD4               	movwf	main@t_dep& (0+255),b
  1671                           
  1672                           ;main.c: 636:     int t_count;;main.c: 637:  TRISD = 0x00;
  1673  0010FE  0E00               	movlw	0
  1674  001100  6E95               	movwf	3989,c	;volatile
  1675                           
  1676                           ; BSR set to: 2
  1677                           ;main.c: 638:  GIE = 1;
  1678  001102  8EF2               	bsf	4082,7,c	;volatile
  1679                           
  1680                           ;main.c: 640:     ADCON1=0x0F;
  1681  001104  0E0F               	movlw	15
  1682  001106  6EC1               	movwf	4033,c	;volatile
  1683                           
  1684                           ; BSR set to: 2
  1685                           ;main.c: 642:  initLCD();
  1686  001108  EC14  F017         	call	_initLCD	;wreg free
  1687                           
  1688                           ;main.c: 644:  T1CON = 0x10;
  1689  00110C  0E10               	movlw	16
  1690  00110E  6ECD               	movwf	4045,c	;volatile
  1691                           
  1692                           ;main.c: 645:     int poles_detected=0;
  1693  001110  0E00               	movlw	0
  1694  001112  0102               	movlb	2	; () banked
  1695  001114  6FD7               	movwf	(main@poles_detected+1)& (0+255),b
  1696  001116  0E00               	movlw	0
  1697  001118  6FD6               	movwf	main@poles_detected& (0+255),b
  1698                           
  1699                           ; BSR set to: 2
  1700                           ;main.c: 647:     volatile long prev_avg_dist=0;
  1701                           
  1702                           ; BSR set to: 2
  1703  00111A  0E00               	movlw	0
  1704  00111C  6FD8               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1705  00111E  0E00               	movlw	0
  1706  001120  6FD9               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1707  001122  0E00               	movlw	0
  1708  001124  6FDA               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1709  001126  0E00               	movlw	0
  1710  001128  6FDB               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1711                           
  1712                           ; BSR set to: 2
  1713                           ;main.c: 649:     Poles Pole[10];;main.c: 657:     if (~sens){
  1714  00112A  2860               	incf	_sens,w,c	;volatile
  1715  00112C  E103               	bnz	u8020
  1716  00112E  2861               	incf	_sens+1,w,c	;volatile
  1717  001130  B4D8               	btfsc	status,2,c
  1718  001132  D00B               	goto	l7265
  1719  001134                     u8020:
  1720                           
  1721                           ; BSR set to: 2
  1722                           ;main.c: 658:         UI_main( t_dep, poles_detected);
  1723  001134  0E00               	movlw	0
  1724  001136  0100               	movlb	0	; () banked
  1725  001138  6FFA               	movwf	(UI_main@t_dep+1)& (0+255),b
  1726  00113A  0E00               	movlw	0
  1727  00113C  6FF9               	movwf	UI_main@t_dep& (0+255),b
  1728  00113E  0E00               	movlw	0
  1729  001140  6FFC               	movwf	(UI_main@poles_detected+1)& (0+255),b
  1730  001142  0E00               	movlw	0
  1731  001144  6FFB               	movwf	UI_main@poles_detected& (0+255),b
  1732  001146  EC09  F000         	call	_UI_main	;wreg free
  1733  00114A                     l7265:
  1734                           
  1735                           ;main.c: 664:         if ((poles_detected <10)&&(avg_dist<4000)){
  1736  00114A  0102               	movlb	2	; () banked
  1737  00114C  BFD7               	btfsc	(main@poles_detected+1)& (0+255),7,b
  1738  00114E  D006               	goto	u8030
  1739  001150  51D7               	movf	(main@poles_detected+1)& (0+255),w,b
  1740  001152  E103               	bnz	u8031
  1741  001154  0E0A               	movlw	10
  1742  001156  5DD6               	subwf	main@poles_detected& (0+255),w,b
  1743  001158  B0D8               	btfsc	status,0,c
  1744  00115A                     u8031:
  1745  00115A  D141               	goto	l7337
  1746  00115C                     u8030:
  1747                           
  1748                           ; BSR set to: 2
  1749  00115C  BE4F               	btfsc	_avg_dist+3,7,c	;volatile
  1750  00115E  D024               	goto	l7277
  1751  001160  504F               	movf	_avg_dist+3,w,c	;volatile
  1752  001162  104E               	iorwf	_avg_dist+2,w,c	;volatile
  1753  001164  E106               	bnz	u8041
  1754  001166  0EA0               	movlw	160
  1755  001168  5C4C               	subwf	_avg_dist,w,c	;volatile
  1756  00116A  0E0F               	movlw	15
  1757  00116C  584D               	subwfb	_avg_dist+1,w,c	;volatile
  1758  00116E  A0D8               	btfss	status,0,c
  1759  001170  D01B               	goto	l7277
  1760  001172                     u8041:
  1761  001172  D135               	goto	l7337
  1762  001174                     l7271:
  1763                           
  1764                           ;main.c: 674:                 I2C_Master_Start();
  1765  001174  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  1766                           
  1767                           ;main.c: 675:                 I2C_Master_Write(0b00010001);
  1768  001178  0E00               	movlw	0
  1769  00117A  0100               	movlb	0	; () banked
  1770  00117C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  1771  00117E  0E11               	movlw	17
  1772  001180  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  1773  001182  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  1774                           
  1775                           ;main.c: 676:                 read = I2C_Master_Read(1);
  1776  001186  0E01               	movlw	1
  1777  001188  EC3D  F01A         	call	_I2C_Master_Read
  1778  00118C  0101               	movlb	1	; () banked
  1779  00118E  6F5A               	movwf	??_main& (0+255),b
  1780  001190  515A               	movf	??_main& (0+255),w,b
  1781  001192  0102               	movlb	2	; () banked
  1782  001194  6FCA               	movwf	main@read& (0+255),b
  1783  001196  6BCB               	clrf	(main@read+1)& (0+255),b
  1784                           
  1785                           ;main.c: 677:                 I2C_Master_Stop();
  1786  001198  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  1787                           
  1788                           ;main.c: 678:                 if (read!=1){
  1789  00119C  0102               	movlb	2	; () banked
  1790  00119E  05CA               	decf	main@read& (0+255),w,b
  1791  0011A0  11CB               	iorwf	(main@read+1)& (0+255),w,b
  1792  0011A2  A4D8               	btfss	status,2,c
  1793                           
  1794                           ; BSR set to: 2
  1795                           ;main.c: 679:                 ultrasonic_main();
  1796  0011A4  EC67  F014         	call	_ultrasonic_main	;wreg free
  1797  0011A8                     l7277:
  1798                           
  1799                           ;main.c: 672:             while (sens){
  1800  0011A8  5060               	movf	_sens,w,c	;volatile
  1801  0011AA  1061               	iorwf	_sens+1,w,c	;volatile
  1802  0011AC  A4D8               	btfss	status,2,c
  1803  0011AE  D7E2               	goto	l7271
  1804                           
  1805                           ;main.c: 686:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  1806  0011B0  0102               	movlb	2	; () banked
  1807  0011B2  51D8               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  1808  0011B4  5C4C               	subwf	_avg_dist,w,c	;volatile
  1809  0011B6  6FC8               	movwf	main@pole_cl_dist& (0+255),b
  1810  0011B8  51D9               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  1811  0011BA  584D               	subwfb	_avg_dist+1,w,c	;volatile
  1812  0011BC  6FC9               	movwf	(main@pole_cl_dist+1)& (0+255),b
  1813                           
  1814                           ; BSR set to: 2
  1815                           ;main.c: 687:             t_count = number_deploy(avg_dist, poles_detected);
  1816  0011BE  C04C  F0F9         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  1817  0011C2  C04D  F0FA         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  1818  0011C6  C2D6  F0FB         	movff	main@poles_detected,number_deploy@poles_detected
  1819  0011CA  C2D7  F0FC         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  1820  0011CE  EC63  F00F         	call	_number_deploy	;wreg free
  1821  0011D2  C0F9  F2D2         	movff	?_number_deploy,main@t_count
  1822  0011D6  C0FA  F2D3         	movff	?_number_deploy+1,main@t_count+1
  1823                           
  1824                           ;main.c: 688:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1825  0011DA  0E01               	movlw	1
  1826  0011DC  ECF5  F01A         	call	_lcdInst
  1827  0011E0  0E11               	movlw	17
  1828  0011E2  0101               	movlb	1	; () banked
  1829  0011E4  6F5A               	movwf	??_main& (0+255),b
  1830  0011E6  0E3A               	movlw	58
  1831  0011E8                     u8147:
  1832  0011E8  2EE8               	decfsz	wreg,f,c
  1833  0011EA  D7FE               	bra	u8147
  1834  0011EC  2F5A               	decfsz	??_main& (0+255),f,b
  1835  0011EE  D7FC               	bra	u8147
  1836  0011F0  F000               	nop	
  1837                           
  1838                           ;main.c: 689:             printf("tcnt %d", t_count);
  1839  0011F2  0EFE               	movlw	low (STR_10+8)
  1840  0011F4  0100               	movlb	0	; () banked
  1841  0011F6  6FED               	movwf	printf@fmt& (0+255),b
  1842  0011F8  0EFB               	movlw	high (STR_10+8)
  1843  0011FA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  1844  0011FC  C2D2  F0EF         	movff	main@t_count,?_printf+2
  1845  001200  C2D3  F0F0         	movff	main@t_count+1,?_printf+3
  1846  001204  EC66  F01A         	call	_printf	;wreg free
  1847                           
  1848                           ;main.c: 690:             printf("tdep %d", t_dep);
  1849  001208  0E22               	movlw	low STR_41
  1850  00120A  0100               	movlb	0	; () banked
  1851  00120C  6FED               	movwf	printf@fmt& (0+255),b
  1852  00120E  0EFD               	movlw	high STR_41
  1853  001210  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  1854  001212  C2D4  F0EF         	movff	main@t_dep,?_printf+2
  1855  001216  C2D5  F0F0         	movff	main@t_dep+1,?_printf+3
  1856  00121A  EC66  F01A         	call	_printf	;wreg free
  1857                           
  1858                           ;main.c: 691:             _delay((unsigned long)((500)*(10000000/4000.0)));
  1859  00121E  0E07               	movlw	7
  1860  001220  0101               	movlb	1	; () banked
  1861  001222  6F5B               	movwf	(??_main+1)& (0+255),b
  1862  001224  0E58               	movlw	88
  1863  001226  6F5A               	movwf	??_main& (0+255),b
  1864  001228  0E59               	movlw	89
  1865  00122A                     u8157:
  1866  00122A  2EE8               	decfsz	wreg,f,c
  1867  00122C  D7FE               	bra	u8157
  1868  00122E  2F5A               	decfsz	??_main& (0+255),f,b
  1869  001230  D7FC               	bra	u8157
  1870  001232  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  1871  001234  D7FA               	bra	u8157
  1872  001236  D000               	nop2	
  1873                           
  1874                           ;main.c: 692:             if (t_count<=2){
  1875  001238  0102               	movlb	2	; () banked
  1876  00123A  BFD3               	btfsc	(main@t_count+1)& (0+255),7,b
  1877  00123C  D006               	goto	u8070
  1878  00123E  51D3               	movf	(main@t_count+1)& (0+255),w,b
  1879  001240  E157               	bnz	l7319
  1880  001242  0E03               	movlw	3
  1881  001244  5DD2               	subwf	main@t_count& (0+255),w,b
  1882  001246  B0D8               	btfsc	status,0,c
  1883  001248  D053               	goto	u8110
  1884  00124A                     u8070:
  1885                           
  1886                           ; BSR set to: 2
  1887                           ;main.c: 694:                 if (t_dep <8){
  1888  00124A  BFD5               	btfsc	(main@t_dep+1)& (0+255),7,b
  1889  00124C  D006               	goto	u8080
  1890  00124E  51D5               	movf	(main@t_dep+1)& (0+255),w,b
  1891  001250  E125               	bnz	l7307
  1892  001252  0E08               	movlw	8
  1893  001254  5DD4               	subwf	main@t_dep& (0+255),w,b
  1894  001256  B0D8               	btfsc	status,0,c
  1895  001258  D021               	goto	u8090
  1896  00125A                     u8080:
  1897                           
  1898                           ; BSR set to: 2
  1899                           ;main.c: 697:                     stack = 1;
  1900  00125A  0E00               	movlw	0
  1901  00125C  6FD1               	movwf	(main@stack+1)& (0+255),b
  1902  00125E  0E01               	movlw	1
  1903  001260  6FD0               	movwf	main@stack& (0+255),b
  1904                           
  1905                           ;main.c: 698:                     for(int i=0; i<(t_count); i++){
  1906  001262  0E00               	movlw	0
  1907  001264  6FCD               	movwf	(main@i+1)& (0+255),b
  1908  001266  0E00               	movlw	0
  1909  001268  6FCC               	movwf	main@i& (0+255),b
  1910  00126A  D00B               	goto	l7305
  1911  00126C                     l7299:
  1912                           
  1913                           ; BSR set to: 1
  1914                           ;main.c: 699:                         actuators_main(stack);
  1915  00126C  C2D0  F108         	movff	main@stack,actuators_main@stack
  1916  001270  C2D1  F109         	movff	main@stack+1,actuators_main@stack+1
  1917  001274  EC80  F015         	call	_actuators_main	;wreg free
  1918                           
  1919                           ;main.c: 700:                         t_dep++;
  1920  001278  0102               	movlb	2	; () banked
  1921  00127A  4BD4               	infsnz	main@t_dep& (0+255),f,b
  1922  00127C  2BD5               	incf	(main@t_dep+1)& (0+255),f,b
  1923                           
  1924                           ; BSR set to: 2
  1925                           ;main.c: 701:                     }
  1926  00127E  4BCC               	infsnz	main@i& (0+255),f,b
  1927  001280  2BCD               	incf	(main@i+1)& (0+255),f,b
  1928  001282                     l7305:
  1929                           
  1930                           ; BSR set to: 2
  1931  001282  51D2               	movf	main@t_count& (0+255),w,b
  1932  001284  5DCC               	subwf	main@i& (0+255),w,b
  1933  001286  51CD               	movf	(main@i+1)& (0+255),w,b
  1934  001288  0A80               	xorlw	128
  1935  00128A  0101               	movlb	1	; () banked
  1936  00128C  6F5A               	movwf	??_main& (0+255),b
  1937  00128E  0102               	movlb	2	; () banked
  1938  001290  51D3               	movf	(main@t_count+1)& (0+255),w,b
  1939  001292  0A80               	xorlw	128
  1940  001294  0101               	movlb	1	; () banked
  1941  001296  595A               	subwfb	??_main& (0+255),w,b
  1942  001298  A0D8               	btfss	status,0,c
  1943  00129A  D7E8               	goto	l7299
  1944  00129C                     u8090:
  1945  00129C                     l7307:
  1946                           
  1947                           ;main.c: 703:                 if (t_dep >= 8){
  1948  00129C  0102               	movlb	2	; () banked
  1949  00129E  BFD5               	btfsc	(main@t_dep+1)& (0+255),7,b
  1950  0012A0  D027               	goto	u8110
  1951  0012A2  51D5               	movf	(main@t_dep+1)& (0+255),w,b
  1952  0012A4  E104               	bnz	u8100
  1953  0012A6  0E08               	movlw	8
  1954  0012A8  5DD4               	subwf	main@t_dep& (0+255),w,b
  1955  0012AA  A0D8               	btfss	status,0,c
  1956  0012AC  D021               	goto	u8110
  1957  0012AE                     u8100:
  1958                           
  1959                           ; BSR set to: 2
  1960                           ;main.c: 704:                     stack = 2;
  1961  0012AE  0E00               	movlw	0
  1962  0012B0  6FD1               	movwf	(main@stack+1)& (0+255),b
  1963  0012B2  0E02               	movlw	2
  1964  0012B4  6FD0               	movwf	main@stack& (0+255),b
  1965                           
  1966                           ;main.c: 705:                     for(int i=0; i<(t_count); i++){
  1967  0012B6  0E00               	movlw	0
  1968  0012B8  6FCF               	movwf	(main@i_457+1)& (0+255),b
  1969  0012BA  0E00               	movlw	0
  1970  0012BC  6FCE               	movwf	main@i_457& (0+255),b
  1971  0012BE  D00B               	goto	l7317
  1972  0012C0                     l7311:
  1973                           
  1974                           ; BSR set to: 1
  1975                           ;main.c: 706:                         actuators_main(stack);
  1976  0012C0  C2D0  F108         	movff	main@stack,actuators_main@stack
  1977  0012C4  C2D1  F109         	movff	main@stack+1,actuators_main@stack+1
  1978  0012C8  EC80  F015         	call	_actuators_main	;wreg free
  1979                           
  1980                           ;main.c: 707:                         t_dep++;
  1981  0012CC  0102               	movlb	2	; () banked
  1982  0012CE  4BD4               	infsnz	main@t_dep& (0+255),f,b
  1983  0012D0  2BD5               	incf	(main@t_dep+1)& (0+255),f,b
  1984                           
  1985                           ; BSR set to: 2
  1986                           ;main.c: 708:                     }
  1987  0012D2  4BCE               	infsnz	main@i_457& (0+255),f,b
  1988  0012D4  2BCF               	incf	(main@i_457+1)& (0+255),f,b
  1989  0012D6                     l7317:
  1990                           
  1991                           ; BSR set to: 2
  1992  0012D6  51D2               	movf	main@t_count& (0+255),w,b
  1993  0012D8  5DCE               	subwf	main@i_457& (0+255),w,b
  1994  0012DA  51CF               	movf	(main@i_457+1)& (0+255),w,b
  1995  0012DC  0A80               	xorlw	128
  1996  0012DE  0101               	movlb	1	; () banked
  1997  0012E0  6F5A               	movwf	??_main& (0+255),b
  1998  0012E2  0102               	movlb	2	; () banked
  1999  0012E4  51D3               	movf	(main@t_count+1)& (0+255),w,b
  2000  0012E6  0A80               	xorlw	128
  2001  0012E8  0101               	movlb	1	; () banked
  2002  0012EA  595A               	subwfb	??_main& (0+255),w,b
  2003  0012EC  A0D8               	btfss	status,0,c
  2004  0012EE  D7E8               	goto	l7311
  2005  0012F0                     u8110:
  2006  0012F0                     l7319:
  2007                           
  2008                           ;main.c: 713:             Pole[poles_detected].dist_from_cl = pole_cl_dist;
  2009  0012F0  C2D6  F15A         	movff	main@poles_detected,??_main
  2010  0012F4  C2D7  F15B         	movff	main@poles_detected+1,??_main+1
  2011  0012F8  0101               	movlb	1	; () banked
  2012  0012FA  90D8               	bcf	status,0,c
  2013  0012FC  375A               	rlcf	??_main& (0+255),f,b
  2014  0012FE  375B               	rlcf	(??_main+1)& (0+255),f,b
  2015  001300  90D8               	bcf	status,0,c
  2016  001302  375A               	rlcf	??_main& (0+255),f,b
  2017  001304  375B               	rlcf	(??_main+1)& (0+255),f,b
  2018  001306  90D8               	bcf	status,0,c
  2019  001308  375A               	rlcf	??_main& (0+255),f,b
  2020  00130A  375B               	rlcf	(??_main+1)& (0+255),f,b
  2021  00130C  0E06               	movlw	6
  2022  00130E  275A               	addwf	??_main& (0+255),f,b
  2023  001310  0E00               	movlw	0
  2024  001312  235B               	addwfc	(??_main+1)& (0+255),f,b
  2025  001314  0E78               	movlw	low main@Pole
  2026  001316  255A               	addwf	??_main& (0+255),w,b
  2027  001318  6ED9               	movwf	fsr2l,c
  2028  00131A  0E02               	movlw	high main@Pole
  2029  00131C  215B               	addwfc	(??_main+1)& (0+255),w,b
  2030  00131E  6EDA               	movwf	fsr2h,c
  2031  001320  C2C8  FFDE         	movff	main@pole_cl_dist,postinc2
  2032  001324  C2C9  FFDD         	movff	main@pole_cl_dist+1,postdec2
  2033                           
  2034                           ;main.c: 714:             Pole[poles_detected].dist_from_start = avg_dist;
  2035  001328  C2D6  F15A         	movff	main@poles_detected,??_main
  2036  00132C  C2D7  F15B         	movff	main@poles_detected+1,??_main+1
  2037  001330  90D8               	bcf	status,0,c
  2038  001332  375A               	rlcf	??_main& (0+255),f,b
  2039  001334  375B               	rlcf	(??_main+1)& (0+255),f,b
  2040  001336  90D8               	bcf	status,0,c
  2041  001338  375A               	rlcf	??_main& (0+255),f,b
  2042  00133A  375B               	rlcf	(??_main+1)& (0+255),f,b
  2043  00133C  90D8               	bcf	status,0,c
  2044  00133E  375A               	rlcf	??_main& (0+255),f,b
  2045  001340  375B               	rlcf	(??_main+1)& (0+255),f,b
  2046  001342  0E04               	movlw	4
  2047  001344  275A               	addwf	??_main& (0+255),f,b
  2048  001346  0E00               	movlw	0
  2049  001348  235B               	addwfc	(??_main+1)& (0+255),f,b
  2050  00134A  0E78               	movlw	low main@Pole
  2051  00134C  255A               	addwf	??_main& (0+255),w,b
  2052  00134E  6ED9               	movwf	fsr2l,c
  2053  001350  0E02               	movlw	high main@Pole
  2054  001352  215B               	addwfc	(??_main+1)& (0+255),w,b
  2055  001354  6EDA               	movwf	fsr2h,c
  2056  001356  C04C  FFDE         	movff	_avg_dist,postinc2	;volatile
  2057  00135A  C04D  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;main.c: 716:             prev_avg_dist = avg_dist ;
  2061  00135E  C04C  F2D8         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2062  001362  C04D  F2D9         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2063  001366  C04E  F2DA         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2064  00136A  C04F  F2DB         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;main.c: 717:             poles_detected++;
  2068  00136E  0102               	movlb	2	; () banked
  2069  001370  4BD6               	infsnz	main@poles_detected& (0+255),f,b
  2070  001372  2BD7               	incf	(main@poles_detected+1)& (0+255),f,b
  2071                           
  2072                           ; BSR set to: 2
  2073                           ;main.c: 719:             start();
  2074  001374  ECC1  F018         	call	_start	;wreg free
  2075                           
  2076                           ;main.c: 725:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2077  001378  0E01               	movlw	1
  2078  00137A  ECF5  F01A         	call	_lcdInst
  2079  00137E  0E11               	movlw	17
  2080  001380  0101               	movlb	1	; () banked
  2081  001382  6F5A               	movwf	??_main& (0+255),b
  2082  001384  0E3A               	movlw	58
  2083  001386                     u8167:
  2084  001386  2EE8               	decfsz	wreg,f,c
  2085  001388  D7FE               	bra	u8167
  2086  00138A  2F5A               	decfsz	??_main& (0+255),f,b
  2087  00138C  D7FC               	bra	u8167
  2088  00138E  F000               	nop	
  2089                           
  2090                           ;main.c: 726:             printf("avg dist %d", avg_dist);
  2091  001390  0E99               	movlw	low STR_42
  2092  001392  0100               	movlb	0	; () banked
  2093  001394  6FED               	movwf	printf@fmt& (0+255),b
  2094  001396  0EFC               	movlw	high STR_42
  2095  001398  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2096  00139A  C04C  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2097  00139E  C04D  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2098  0013A2  C04E  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2099  0013A6  C04F  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2100  0013AA  EC66  F01A         	call	_printf	;wreg free
  2101                           
  2102                           ;main.c: 727:             printf("poles d %d", poles_detected);
  2103  0013AE  0EBD               	movlw	low STR_43
  2104  0013B0  0100               	movlb	0	; () banked
  2105  0013B2  6FED               	movwf	printf@fmt& (0+255),b
  2106  0013B4  0EFC               	movlw	high STR_43
  2107  0013B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2108  0013B8  C2D6  F0EF         	movff	main@poles_detected,?_printf+2
  2109  0013BC  C2D7  F0F0         	movff	main@poles_detected+1,?_printf+3
  2110  0013C0  EC66  F01A         	call	_printf	;wreg free
  2111                           
  2112                           ;main.c: 728:             _delay((unsigned long)((3000)*(10000000/4000.0)));
  2113  0013C4  0E27               	movlw	39
  2114  0013C6  0101               	movlb	1	; () banked
  2115  0013C8  6F5B               	movwf	(??_main+1)& (0+255),b
  2116  0013CA  0E0D               	movlw	13
  2117  0013CC  6F5A               	movwf	??_main& (0+255),b
  2118  0013CE  0E26               	movlw	38
  2119  0013D0                     u8177:
  2120  0013D0  2EE8               	decfsz	wreg,f,c
  2121  0013D2  D7FE               	bra	u8177
  2122  0013D4  2F5A               	decfsz	??_main& (0+255),f,b
  2123  0013D6  D7FC               	bra	u8177
  2124  0013D8  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2125  0013DA  D7FA               	bra	u8177
  2126  0013DC  D04D               	goto	L1
  2127  0013DE                     l7337:
  2128                           
  2129                           ; BSR set to: 2
  2130                           ;main.c: 731:             brake();
  2131  0013DE  EC8E  F01A         	call	_brake	;wreg free
  2132                           
  2133                           ;main.c: 732:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2134  0013E2  0E01               	movlw	1
  2135  0013E4  ECF5  F01A         	call	_lcdInst
  2136  0013E8  0E11               	movlw	17
  2137  0013EA  0101               	movlb	1	; () banked
  2138  0013EC  6F5A               	movwf	??_main& (0+255),b
  2139  0013EE  0E3A               	movlw	58
  2140  0013F0                     u8187:
  2141  0013F0  2EE8               	decfsz	wreg,f,c
  2142  0013F2  D7FE               	bra	u8187
  2143  0013F4  2F5A               	decfsz	??_main& (0+255),f,b
  2144  0013F6  D7FC               	bra	u8187
  2145  0013F8  F000               	nop	
  2146                           
  2147                           ;main.c: 733:             printf("poles done");
  2148  0013FA  0EC8               	movlw	low STR_44
  2149  0013FC  0100               	movlb	0	; () banked
  2150  0013FE  6FED               	movwf	printf@fmt& (0+255),b
  2151  001400  0EFC               	movlw	high STR_44
  2152  001402  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2153  001404  EC66  F01A         	call	_printf	;wreg free
  2154                           
  2155                           ;main.c: 734:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2156  001408  0E0D               	movlw	13
  2157  00140A  0101               	movlb	1	; () banked
  2158  00140C  6F5B               	movwf	(??_main+1)& (0+255),b
  2159  00140E  0EAF               	movlw	175
  2160  001410  6F5A               	movwf	??_main& (0+255),b
  2161  001412  0EB6               	movlw	182
  2162  001414                     u8197:
  2163  001414  2EE8               	decfsz	wreg,f,c
  2164  001416  D7FE               	bra	u8197
  2165  001418  2F5A               	decfsz	??_main& (0+255),f,b
  2166  00141A  D7FC               	bra	u8197
  2167  00141C  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2168  00141E  D7FA               	bra	u8197
  2169  001420  F000               	nop	
  2170                           
  2171                           ;main.c: 735:             UI_main(t_dep, poles_detected);
  2172  001422  C2D4  F0F9         	movff	main@t_dep,UI_main@t_dep
  2173  001426  C2D5  F0FA         	movff	main@t_dep+1,UI_main@t_dep+1
  2174  00142A  C2D6  F0FB         	movff	main@poles_detected,UI_main@poles_detected
  2175  00142E  C2D7  F0FC         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2176  001432  EC09  F000         	call	_UI_main	;wreg free
  2177                           
  2178                           ;main.c: 736:             backwards();
  2179  001436  ECA1  F01A         	call	_backwards	;wreg free
  2180                           
  2181                           ;main.c: 737:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2182  00143A  0E01               	movlw	1
  2183  00143C  ECF5  F01A         	call	_lcdInst
  2184  001440  0E11               	movlw	17
  2185  001442  0101               	movlb	1	; () banked
  2186  001444  6F5A               	movwf	??_main& (0+255),b
  2187  001446  0E3A               	movlw	58
  2188  001448                     u8207:
  2189  001448  2EE8               	decfsz	wreg,f,c
  2190  00144A  D7FE               	bra	u8207
  2191  00144C  2F5A               	decfsz	??_main& (0+255),f,b
  2192  00144E  D7FC               	bra	u8207
  2193  001450  F000               	nop	
  2194                           
  2195                           ;main.c: 738:             printf("backwards");
  2196  001452  0E05               	movlw	low STR_45
  2197  001454  0100               	movlb	0	; () banked
  2198  001456  6FED               	movwf	printf@fmt& (0+255),b
  2199  001458  0EFD               	movlw	high STR_45
  2200  00145A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2201  00145C  EC66  F01A         	call	_printf	;wreg free
  2202                           
  2203                           ;main.c: 739:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2204  001460  0E0D               	movlw	13
  2205  001462  0101               	movlb	1	; () banked
  2206  001464  6F5B               	movwf	(??_main+1)& (0+255),b
  2207  001466  0EAF               	movlw	175
  2208  001468  6F5A               	movwf	??_main& (0+255),b
  2209  00146A  0EB6               	movlw	182
  2210  00146C                     u8217:
  2211  00146C  2EE8               	decfsz	wreg,f,c
  2212  00146E  D7FE               	bra	u8217
  2213  001470  2F5A               	decfsz	??_main& (0+255),f,b
  2214  001472  D7FC               	bra	u8217
  2215  001474  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2216  001476  D7FA               	bra	u8217
  2217  001478                     L1:
  2218  001478  F000               	nop	
  2219  00147A  D667               	goto	l7265
  2220  00147C                     __end_of_main:
  2221                           	opt callstack 0
  2222                           
  2223 ;; *************** function _ultrasonic_main *****************
  2224 ;; Defined at:
  2225 ;;		line 269 in file "main.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  sensed          2  123[BANK0 ] int 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;Total ram usage:        3 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:   15
  2246 ;; This function calls:
  2247 ;;		_I2C_Master_Read
  2248 ;;		_I2C_Master_Start
  2249 ;;		_I2C_Master_Stop
  2250 ;;		_I2C_Master_Write
  2251 ;;		_lcdInst
  2252 ;;		_print_echo
  2253 ;;		_printf
  2254 ;;		_sense_tires
  2255 ;;		_trig
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text1
  2262  0028CE                     __ptext1:
  2263                           	opt callstack 0
  2264  0028CE                     _ultrasonic_main:
  2265                           	opt callstack 15
  2266                           
  2267                           ;main.c: 270:     TRISBbits.RB0 = 0;
  2268                           
  2269                           ;incstack = 0
  2270  0028CE  9093               	bcf	3987,0,c	;volatile
  2271                           
  2272                           ;main.c: 271:     LATBbits.LATB0 = 1;
  2273  0028D0  808A               	bsf	3978,0,c	;volatile
  2274                           
  2275                           ;main.c: 273:  TRISB = 0b11110000;
  2276  0028D2  0EF0               	movlw	240
  2277  0028D4  6E93               	movwf	3987,c	;volatile
  2278                           
  2279                           ;main.c: 275:     RBIF = 0;
  2280  0028D6  90F2               	bcf	4082,0,c	;volatile
  2281                           
  2282                           ;main.c: 276:  RBIE = 1;
  2283  0028D8  86F2               	bsf	4082,3,c	;volatile
  2284                           
  2285                           ;main.c: 278:     int sensed = 0;
  2286  0028DA  0E00               	movlw	0
  2287  0028DC  0100               	movlb	0	; () banked
  2288  0028DE  6FFC               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2289  0028E0  0E00               	movlw	0
  2290  0028E2  6FFB               	movwf	ultrasonic_main@sensed& (0+255),b
  2291                           
  2292                           ;main.c: 279:     while(send){
  2293  0028E4  D01E               	goto	l6875
  2294  0028E6                     l6853:
  2295                           
  2296                           ;main.c: 280:         for (meas=0; meas<3;meas++){
  2297  0028E6  0E00               	movlw	0
  2298  0028E8  6E59               	movwf	_meas+1,c	;volatile
  2299  0028EA  0E00               	movlw	0
  2300  0028EC  6E58               	movwf	_meas,c	;volatile
  2301  0028EE                     l6855:
  2302  0028EE  BE59               	btfsc	_meas+1,7,c	;volatile
  2303  0028F0  D006               	goto	l6859
  2304  0028F2  5059               	movf	_meas+1,w,c	;volatile
  2305  0028F4  E116               	bnz	l6875
  2306  0028F6  0E03               	movlw	3
  2307  0028F8  5C58               	subwf	_meas,w,c	;volatile
  2308  0028FA  B0D8               	btfsc	status,0,c
  2309  0028FC  D012               	goto	l6875
  2310  0028FE                     l6859:
  2311                           
  2312                           ;main.c: 281:         trig();
  2313  0028FE  ECE6  F013         	call	_trig	;wreg free
  2314                           
  2315                           ;main.c: 282:         RBIE = 0;
  2316  002902  96F2               	bcf	4082,3,c	;volatile
  2317                           
  2318                           ;main.c: 283:         print_echo();
  2319  002904  EC75  F010         	call	_print_echo	;wreg free
  2320                           
  2321                           ;main.c: 284:         RBIE = 1;
  2322  002908  86F2               	bsf	4082,3,c	;volatile
  2323                           
  2324                           ;main.c: 285:         sensed++;
  2325  00290A  0100               	movlb	0	; () banked
  2326  00290C  4BFB               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  2327  00290E  2BFC               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;main.c: 286:         sense_tires(sensed);
  2331  002910  C0FB  F083         	movff	ultrasonic_main@sensed,sense_tires@sensed
  2332  002914  C0FC  F084         	movff	ultrasonic_main@sensed+1,sense_tires@sensed+1
  2333  002918  ECC8  F015         	call	_sense_tires	;wreg free
  2334                           
  2335                           ;main.c: 287:         }
  2336  00291C  4A58               	infsnz	_meas,f,c	;volatile
  2337  00291E  2A59               	incf	_meas+1,f,c	;volatile
  2338  002920  D7E6               	goto	l6855
  2339  002922                     l6875:
  2340                           
  2341                           ;main.c: 279:     while(send){
  2342  002922  506D               	movf	_send,w,c
  2343  002924  B4D8               	btfsc	status,2,c
  2344  002926  D03D               	goto	l6891
  2345  002928  D7DE               	goto	l6853
  2346  00292A                     l6877:
  2347                           
  2348                           ;main.c: 291:         I2C_Master_Start();
  2349  00292A  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  2350                           
  2351                           ;main.c: 292:         I2C_Master_Write(0b00010001);
  2352  00292E  0E00               	movlw	0
  2353  002930  0100               	movlb	0	; () banked
  2354  002932  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2355  002934  0E11               	movlw	17
  2356  002936  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2357  002938  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  2358                           
  2359                           ;main.c: 293:         avg_dist = I2C_Master_Read(1);
  2360  00293C  0E01               	movlw	1
  2361  00293E  EC3D  F01A         	call	_I2C_Master_Read
  2362  002942  0100               	movlb	0	; () banked
  2363  002944  6FFA               	movwf	??_ultrasonic_main& (0+255),b
  2364  002946  51FA               	movf	??_ultrasonic_main& (0+255),w,b
  2365  002948  6E4C               	movwf	_avg_dist,c	;volatile
  2366  00294A  6A4D               	clrf	_avg_dist+1,c	;volatile
  2367  00294C  6A4E               	clrf	_avg_dist+2,c	;volatile
  2368  00294E  6A4F               	clrf	_avg_dist+3,c	;volatile
  2369                           
  2370                           ;main.c: 294:         I2C_Master_Stop();
  2371  002950  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  2372                           
  2373                           ;main.c: 295:         if(avg_dist){
  2374  002954  504C               	movf	_avg_dist,w,c	;volatile
  2375  002956  104D               	iorwf	_avg_dist+1,w,c	;volatile
  2376  002958  104E               	iorwf	_avg_dist+2,w,c	;volatile
  2377  00295A  104F               	iorwf	_avg_dist+3,w,c	;volatile
  2378  00295C  B4D8               	btfsc	status,2,c
  2379  00295E  D01E               	goto	l6889
  2380                           
  2381                           ;main.c: 297:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2382  002960  0E01               	movlw	1
  2383  002962  ECF5  F01A         	call	_lcdInst
  2384  002966  0E11               	movlw	17
  2385  002968  0100               	movlb	0	; () banked
  2386  00296A  6FFA               	movwf	??_ultrasonic_main& (0+255),b
  2387  00296C  0E3A               	movlw	58
  2388  00296E                     u8227:
  2389  00296E  2EE8               	decfsz	wreg,f,c
  2390  002970  D7FE               	bra	u8227
  2391  002972  2FFA               	decfsz	??_ultrasonic_main& (0+255),f,b
  2392  002974  D7FC               	bra	u8227
  2393  002976  F000               	nop	
  2394                           
  2395                           ;main.c: 305:             printf("%d",avg_dist);
  2396  002978  0E7C               	movlw	low (STR_26+11)
  2397  00297A  0100               	movlb	0	; () banked
  2398  00297C  6FED               	movwf	printf@fmt& (0+255),b
  2399  00297E  0EFC               	movlw	high (STR_26+11)
  2400  002980  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2401  002982  C04C  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2402  002986  C04D  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2403  00298A  C04E  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2404  00298E  C04F  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2405  002992  EC66  F01A         	call	_printf	;wreg free
  2406                           
  2407                           ;main.c: 312:         send = 1;
  2408  002996  0E01               	movlw	1
  2409  002998  6E6D               	movwf	_send,c
  2410                           
  2411                           ;main.c: 313:         }
  2412  00299A  D003               	goto	l6891
  2413  00299C                     l6889:
  2414                           
  2415                           ;main.c: 316:             send = 0;
  2416  00299C  0E00               	movlw	0
  2417  00299E  6E6D               	movwf	_send,c
  2418                           
  2419                           ;main.c: 317:             break;
  2420  0029A0  0012               	return	
  2421  0029A2                     l6891:
  2422                           
  2423                           ;main.c: 289:     while (~send){
  2424  0029A2  046D               	decf	_send,w,c
  2425  0029A4  B4D8               	btfsc	status,2,c
  2426  0029A6  0012               	return	
  2427  0029A8  D7C0               	goto	l6877
  2428  0029AA                     __end_of_ultrasonic_main:
  2429                           	opt callstack 0
  2430                           
  2431 ;; *************** function _trig *****************
  2432 ;; Defined at:
  2433 ;;		line 191 in file "main.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;Total ram usage:        2 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    3
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_ultrasonic_main
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text2
  2462  0027CC                     __ptext2:
  2463                           	opt callstack 0
  2464  0027CC                     _trig:
  2465                           	opt callstack 26
  2466                           
  2467                           ;main.c: 192:     for(b=1; b<5; b++){
  2468                           
  2469                           ;incstack = 0
  2470  0027CC  0E00               	movlw	0
  2471  0027CE  6E63               	movwf	_b+1,c
  2472  0027D0  0E01               	movlw	1
  2473  0027D2  6E62               	movwf	_b,c
  2474  0027D4  BE63               	btfsc	_b+1,7,c
  2475  0027D6  D004               	goto	l6557
  2476  0027D8  5063               	movf	_b+1,w,c
  2477  0027DA  E101               	bnz	u7100
  2478  0027DC  D072               	goto	L2
  2479  0027DE                     u7100:
  2480  0027DE  0012               	return	
  2481  0027E0                     l6557:
  2482                           
  2483                           ;main.c: 193:         TMR1H = 0;
  2484  0027E0  0E00               	movlw	0
  2485  0027E2  6ECF               	movwf	4047,c	;volatile
  2486                           
  2487                           ;main.c: 194:         TMR1L = 0;
  2488  0027E4  0E00               	movlw	0
  2489  0027E6  6ECE               	movwf	4046,c	;volatile
  2490                           
  2491                           ;main.c: 195:         if(b==1){
  2492  0027E8  0462               	decf	_b,w,c
  2493  0027EA  1063               	iorwf	_b+1,w,c
  2494  0027EC  A4D8               	btfss	status,2,c
  2495  0027EE  D015               	goto	l6569
  2496                           
  2497                           ;main.c: 196:             RBIE = 0;
  2498  0027F0  96F2               	bcf	4082,3,c	;volatile
  2499                           
  2500                           ;main.c: 197:             RD1 = 1;
  2501  0027F2  8283               	bsf	3971,1,c	;volatile
  2502                           
  2503                           ;main.c: 198:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  2504  0027F4  0E08               	movlw	8
  2505  0027F6                     u8237:
  2506  0027F6  2EE8               	decfsz	wreg,f,c
  2507  0027F8  D7FE               	bra	u8237
  2508  0027FA  F000               	nop	
  2509                           
  2510                           ;main.c: 199:             RD1 = 0;
  2511  0027FC  9283               	bcf	3971,1,c	;volatile
  2512                           
  2513                           ;main.c: 201:             RBIE = 1;
  2514  0027FE  86F2               	bsf	4082,3,c	;volatile
  2515                           
  2516                           ;main.c: 202:             _delay((unsigned long)((135)*(10000000/4000.0)));
  2517  002800  0E02               	movlw	2
  2518  002802  0100               	movlb	0	; () banked
  2519  002804  6F81               	movwf	(??_trig+1)& (0+255),b
  2520  002806  0EB7               	movlw	183
  2521  002808  6F80               	movwf	??_trig& (0+255),b
  2522  00280A  0E4C               	movlw	76
  2523  00280C                     u8247:
  2524  00280C  2EE8               	decfsz	wreg,f,c
  2525  00280E  D7FE               	bra	u8247
  2526  002810  2F80               	decfsz	??_trig& (0+255),f,b
  2527  002812  D7FC               	bra	u8247
  2528  002814  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  2529  002816  D7FA               	bra	u8247
  2530  002818  F000               	nop	
  2531  00281A                     l6569:
  2532                           
  2533                           ;main.c: 204:         if(b==2){
  2534  00281A  0E02               	movlw	2
  2535  00281C  1862               	xorwf	_b,w,c
  2536  00281E  1063               	iorwf	_b+1,w,c
  2537  002820  A4D8               	btfss	status,2,c
  2538  002822  D015               	goto	l6579
  2539                           
  2540                           ;main.c: 205:             RBIE = 0;
  2541  002824  96F2               	bcf	4082,3,c	;volatile
  2542                           
  2543                           ;main.c: 206:             RD0 = 1;
  2544  002826  8083               	bsf	3971,0,c	;volatile
  2545                           
  2546                           ;main.c: 207:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  2547  002828  0E08               	movlw	8
  2548  00282A                     u8257:
  2549  00282A  2EE8               	decfsz	wreg,f,c
  2550  00282C  D7FE               	bra	u8257
  2551  00282E  F000               	nop	
  2552                           
  2553                           ;main.c: 208:             RD0 = 0;
  2554  002830  9083               	bcf	3971,0,c	;volatile
  2555                           
  2556                           ;main.c: 210:             RBIE = 1;
  2557  002832  86F2               	bsf	4082,3,c	;volatile
  2558                           
  2559                           ;main.c: 211:             _delay((unsigned long)((135)*(10000000/4000.0)));
  2560  002834  0E02               	movlw	2
  2561  002836  0100               	movlb	0	; () banked
  2562  002838  6F81               	movwf	(??_trig+1)& (0+255),b
  2563  00283A  0EB7               	movlw	183
  2564  00283C  6F80               	movwf	??_trig& (0+255),b
  2565  00283E  0E4C               	movlw	76
  2566  002840                     u8267:
  2567  002840  2EE8               	decfsz	wreg,f,c
  2568  002842  D7FE               	bra	u8267
  2569  002844  2F80               	decfsz	??_trig& (0+255),f,b
  2570  002846  D7FC               	bra	u8267
  2571  002848  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  2572  00284A  D7FA               	bra	u8267
  2573  00284C  F000               	nop	
  2574  00284E                     l6579:
  2575                           
  2576                           ;main.c: 213:         if(b==3){
  2577  00284E  0E03               	movlw	3
  2578  002850  1862               	xorwf	_b,w,c
  2579  002852  1063               	iorwf	_b+1,w,c
  2580  002854  A4D8               	btfss	status,2,c
  2581  002856  D015               	goto	l6589
  2582                           
  2583                           ;main.c: 214:             RBIE = 0;
  2584  002858  96F2               	bcf	4082,3,c	;volatile
  2585                           
  2586                           ;main.c: 215:             RB3 = 1;
  2587  00285A  8681               	bsf	3969,3,c	;volatile
  2588                           
  2589                           ;main.c: 216:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  2590  00285C  0E08               	movlw	8
  2591  00285E                     u8277:
  2592  00285E  2EE8               	decfsz	wreg,f,c
  2593  002860  D7FE               	bra	u8277
  2594  002862  F000               	nop	
  2595                           
  2596                           ;main.c: 217:             RB3 = 0;
  2597  002864  9681               	bcf	3969,3,c	;volatile
  2598                           
  2599                           ;main.c: 219:             RBIE = 1;
  2600  002866  86F2               	bsf	4082,3,c	;volatile
  2601                           
  2602                           ;main.c: 220:             _delay((unsigned long)((135)*(10000000/4000.0)));
  2603  002868  0E02               	movlw	2
  2604  00286A  0100               	movlb	0	; () banked
  2605  00286C  6F81               	movwf	(??_trig+1)& (0+255),b
  2606  00286E  0EB7               	movlw	183
  2607  002870  6F80               	movwf	??_trig& (0+255),b
  2608  002872  0E4C               	movlw	76
  2609  002874                     u8287:
  2610  002874  2EE8               	decfsz	wreg,f,c
  2611  002876  D7FE               	bra	u8287
  2612  002878  2F80               	decfsz	??_trig& (0+255),f,b
  2613  00287A  D7FC               	bra	u8287
  2614  00287C  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  2615  00287E  D7FA               	bra	u8287
  2616  002880  F000               	nop	
  2617  002882                     l6589:
  2618                           
  2619                           ;main.c: 222:         if(b==4){
  2620  002882  0E04               	movlw	4
  2621  002884  1862               	xorwf	_b,w,c
  2622  002886  1063               	iorwf	_b+1,w,c
  2623  002888  A4D8               	btfss	status,2,c
  2624  00288A  D015               	goto	l6599
  2625                           
  2626                           ;main.c: 223:             RBIE = 0;
  2627  00288C  96F2               	bcf	4082,3,c	;volatile
  2628                           
  2629                           ;main.c: 224:             RB2 = 1;
  2630  00288E  8481               	bsf	3969,2,c	;volatile
  2631                           
  2632                           ;main.c: 225:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  2633  002890  0E08               	movlw	8
  2634  002892                     u8297:
  2635  002892  2EE8               	decfsz	wreg,f,c
  2636  002894  D7FE               	bra	u8297
  2637  002896  F000               	nop	
  2638                           
  2639                           ;main.c: 226:             RB2 = 0;
  2640  002898  9481               	bcf	3969,2,c	;volatile
  2641                           
  2642                           ;main.c: 228:             RBIE = 1;
  2643  00289A  86F2               	bsf	4082,3,c	;volatile
  2644                           
  2645                           ;main.c: 229:             _delay((unsigned long)((135)*(10000000/4000.0)));
  2646  00289C  0E02               	movlw	2
  2647  00289E  0100               	movlb	0	; () banked
  2648  0028A0  6F81               	movwf	(??_trig+1)& (0+255),b
  2649  0028A2  0EB7               	movlw	183
  2650  0028A4  6F80               	movwf	??_trig& (0+255),b
  2651  0028A6  0E4C               	movlw	76
  2652  0028A8                     u8307:
  2653  0028A8  2EE8               	decfsz	wreg,f,c
  2654  0028AA  D7FE               	bra	u8307
  2655  0028AC  2F80               	decfsz	??_trig& (0+255),f,b
  2656  0028AE  D7FC               	bra	u8307
  2657  0028B0  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  2658  0028B2  D7FA               	bra	u8307
  2659  0028B4  F000               	nop	
  2660  0028B6                     l6599:
  2661                           
  2662                           ;main.c: 231:     }
  2663  0028B6  4A62               	infsnz	_b,f,c
  2664  0028B8  2A63               	incf	_b+1,f,c
  2665  0028BA  BE63               	btfsc	_b+1,7,c
  2666  0028BC  D791               	goto	l6557
  2667  0028BE  5063               	movf	_b+1,w,c
  2668  0028C0  E105               	bnz	u7150
  2669  0028C2                     L2:
  2670  0028C2  0E05               	movlw	5
  2671  0028C4  5C62               	subwf	_b,w,c
  2672  0028C6  B0D8               	btfsc	status,0,c
  2673  0028C8  0012               	return	
  2674  0028CA  D78A               	goto	l6557
  2675  0028CC                     u7150:
  2676  0028CC  0012               	return		;funcret
  2677  0028CE                     __end_of_trig:
  2678                           	opt callstack 0
  2679                           
  2680 ;; *************** function _sense_tires *****************
  2681 ;; Defined at:
  2682 ;;		line 323 in file "main.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  sensed          2    3[BANK0 ] int 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2696 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;Total ram usage:        2 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    6
  2703 ;; This function calls:
  2704 ;;		_brake
  2705 ;; This function is called by:
  2706 ;;		_ultrasonic_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text3
  2711  002B90                     __ptext3:
  2712                           	opt callstack 0
  2713  002B90                     _sense_tires:
  2714                           	opt callstack 23
  2715                           
  2716                           ;main.c: 328:                 if ((dist_final[0][5]>=2 && dist_final[0][5] <= 30) ||(dis
      +                          t_final[1][5]>=2 && dist_final[1][5] <= 30)||(dist_final[2][5]>=2 && dist_final[2][5] <=
      +                           30)||(dist_final[3][5] >=2 && dist_final[3][5]<= 30)){
  2717                           
  2718                           ;incstack = 0
  2719  002B90  0101               	movlb	1	; () banked
  2720  002B92  BF67               	btfsc	(_dist_final+11)& (0+255),7,b
  2721  002B94  D00E               	goto	u7330
  2722  002B96  5167               	movf	(_dist_final+11)& (0+255),w,b
  2723  002B98  E104               	bnz	u7320
  2724  002B9A  0E02               	movlw	2
  2725  002B9C  5D66               	subwf	(_dist_final+10)& (0+255),w,b
  2726  002B9E  A0D8               	btfss	status,0,c
  2727  002BA0  D008               	goto	u7330
  2728  002BA2                     u7320:
  2729                           
  2730                           ; BSR set to: 1
  2731  002BA2  BF67               	btfsc	(_dist_final+11)& (0+255),7,b
  2732  002BA4  D036               	goto	u7390
  2733  002BA6  5167               	movf	(_dist_final+11)& (0+255),w,b
  2734  002BA8  E104               	bnz	u7330
  2735  002BAA  0E1F               	movlw	31
  2736  002BAC  5D66               	subwf	(_dist_final+10)& (0+255),w,b
  2737  002BAE  A0D8               	btfss	status,0,c
  2738  002BB0  D030               	goto	u7390
  2739  002BB2                     u7330:
  2740                           
  2741                           ; BSR set to: 1
  2742  002BB2  BF73               	btfsc	(_dist_final+23)& (0+255),7,b
  2743  002BB4  D00E               	goto	u7350
  2744  002BB6  5173               	movf	(_dist_final+23)& (0+255),w,b
  2745  002BB8  E104               	bnz	u7340
  2746  002BBA  0E02               	movlw	2
  2747  002BBC  5D72               	subwf	(_dist_final+22)& (0+255),w,b
  2748  002BBE  A0D8               	btfss	status,0,c
  2749  002BC0  D008               	goto	u7350
  2750  002BC2                     u7340:
  2751                           
  2752                           ; BSR set to: 1
  2753  002BC2  BF73               	btfsc	(_dist_final+23)& (0+255),7,b
  2754  002BC4  D026               	goto	u7390
  2755  002BC6  5173               	movf	(_dist_final+23)& (0+255),w,b
  2756  002BC8  E104               	bnz	u7350
  2757  002BCA  0E1F               	movlw	31
  2758  002BCC  5D72               	subwf	(_dist_final+22)& (0+255),w,b
  2759  002BCE  A0D8               	btfss	status,0,c
  2760  002BD0  D020               	goto	u7390
  2761  002BD2                     u7350:
  2762                           
  2763                           ; BSR set to: 1
  2764  002BD2  BF7F               	btfsc	(_dist_final+35)& (0+255),7,b
  2765  002BD4  D00E               	goto	u7370
  2766  002BD6  517F               	movf	(_dist_final+35)& (0+255),w,b
  2767  002BD8  E104               	bnz	u7360
  2768  002BDA  0E02               	movlw	2
  2769  002BDC  5D7E               	subwf	(_dist_final+34)& (0+255),w,b
  2770  002BDE  A0D8               	btfss	status,0,c
  2771  002BE0  D008               	goto	u7370
  2772  002BE2                     u7360:
  2773                           
  2774                           ; BSR set to: 1
  2775  002BE2  BF7F               	btfsc	(_dist_final+35)& (0+255),7,b
  2776  002BE4  D016               	goto	u7390
  2777  002BE6  517F               	movf	(_dist_final+35)& (0+255),w,b
  2778  002BE8  E104               	bnz	u7370
  2779  002BEA  0E1F               	movlw	31
  2780  002BEC  5D7E               	subwf	(_dist_final+34)& (0+255),w,b
  2781  002BEE  A0D8               	btfss	status,0,c
  2782  002BF0  D010               	goto	u7390
  2783  002BF2                     u7370:
  2784                           
  2785                           ; BSR set to: 1
  2786  002BF2  BF8B               	btfsc	(_dist_final+47)& (0+255),7,b
  2787  002BF4  0012               	return	
  2788  002BF6  518B               	movf	(_dist_final+47)& (0+255),w,b
  2789  002BF8  E104               	bnz	u7380
  2790  002BFA  0E02               	movlw	2
  2791  002BFC  5D8A               	subwf	(_dist_final+46)& (0+255),w,b
  2792  002BFE  A0D8               	btfss	status,0,c
  2793  002C00  0012               	return	
  2794  002C02                     u7380:
  2795                           
  2796                           ; BSR set to: 1
  2797  002C02  BF8B               	btfsc	(_dist_final+47)& (0+255),7,b
  2798  002C04  D006               	goto	u7390
  2799  002C06  518B               	movf	(_dist_final+47)& (0+255),w,b
  2800  002C08  E108               	bnz	l244
  2801  002C0A  0E1F               	movlw	31
  2802  002C0C  5D8A               	subwf	(_dist_final+46)& (0+255),w,b
  2803  002C0E  B0D8               	btfsc	status,0,c
  2804  002C10  0012               	return	
  2805  002C12                     u7390:
  2806                           
  2807                           ; BSR set to: 1
  2808                           ;main.c: 330:                     brake();
  2809  002C12  EC8E  F01A         	call	_brake	;wreg free
  2810                           
  2811                           ;main.c: 332:                     send = 0;
  2812  002C16  0E00               	movlw	0
  2813  002C18  6E6D               	movwf	_send,c
  2814  002C1A                     l244:
  2815  002C1A  0012               	return		;funcret
  2816  002C1C                     __end_of_sense_tires:
  2817                           	opt callstack 0
  2818                           
  2819 ;; *************** function _brake *****************
  2820 ;; Defined at:
  2821 ;;		line 608 in file "main.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    5
  2842 ;; This function calls:
  2843 ;;		_I2C_Master_Start
  2844 ;;		_I2C_Master_Stop
  2845 ;;		_I2C_Master_Write
  2846 ;; This function is called by:
  2847 ;;		_sense_tires
  2848 ;;		_main
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text4
  2853  00351C                     __ptext4:
  2854                           	opt callstack 0
  2855  00351C                     _brake:
  2856                           	opt callstack 23
  2857                           
  2858                           ;main.c: 609:                 I2C_Master_Start();
  2859                           
  2860                           ;incstack = 0
  2861  00351C  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  2862                           
  2863                           ;main.c: 610:         I2C_Master_Write(0b00010000);
  2864  003520  0E00               	movlw	0
  2865  003522  0100               	movlb	0	; () banked
  2866  003524  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2867  003526  0E10               	movlw	16
  2868  003528  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2869  00352A  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  2870                           
  2871                           ;main.c: 611:         I2C_Master_Write('9');
  2872  00352E  0E00               	movlw	0
  2873  003530  0100               	movlb	0	; () banked
  2874  003532  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2875  003534  0E39               	movlw	57
  2876  003536  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2877  003538  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  2878                           
  2879                           ;main.c: 612:         I2C_Master_Stop();
  2880  00353C  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  2881  003540  0012               	return		;funcret
  2882  003542                     __end_of_brake:
  2883                           	opt callstack 0
  2884                           
  2885 ;; *************** function _print_echo *****************
  2886 ;; Defined at:
  2887 ;;		line 234 in file "main.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;Total ram usage:        1 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:   14
  2908 ;; This function calls:
  2909 ;;		_lcdInst
  2910 ;;		_printf
  2911 ;; This function is called by:
  2912 ;;		_ultrasonic_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text5
  2917  0020EA                     __ptext5:
  2918                           	opt callstack 0
  2919  0020EA                     _print_echo:
  2920                           	opt callstack 15
  2921                           
  2922                           ;main.c: 235:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2923                           
  2924                           ;incstack = 0
  2925  0020EA  0E01               	movlw	1
  2926  0020EC  ECF5  F01A         	call	_lcdInst
  2927  0020F0  0E11               	movlw	17
  2928  0020F2  0100               	movlb	0	; () banked
  2929  0020F4  6FF9               	movwf	??_print_echo& (0+255),b
  2930  0020F6  0E3A               	movlw	58
  2931  0020F8                     u8317:
  2932  0020F8  2EE8               	decfsz	wreg,f,c
  2933  0020FA  D7FE               	bra	u8317
  2934  0020FC  2FF9               	decfsz	??_print_echo& (0+255),f,b
  2935  0020FE  D7FC               	bra	u8317
  2936  002100  F000               	nop	
  2937                           
  2938                           ;main.c: 236:     if(a[0]>=2 && a[0]<=400){
  2939  002102  BE41               	btfsc	_a+1,7,c
  2940  002104  D01D               	goto	l6611
  2941  002106  5041               	movf	_a+1,w,c
  2942  002108  E104               	bnz	u7160
  2943  00210A  0E02               	movlw	2
  2944  00210C  5C40               	subwf	_a,w,c
  2945  00210E  A0D8               	btfss	status,0,c
  2946  002110  D017               	goto	l6611
  2947  002112                     u7160:
  2948  002112  BE41               	btfsc	_a+1,7,c
  2949  002114  D006               	goto	u7170
  2950  002116  0E91               	movlw	145
  2951  002118  5C40               	subwf	_a,w,c
  2952  00211A  0E01               	movlw	1
  2953  00211C  5841               	subwfb	_a+1,w,c
  2954  00211E  B0D8               	btfsc	status,0,c
  2955  002120  D00F               	goto	l6611
  2956  002122                     u7170:
  2957                           
  2958                           ;main.c: 237:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  2959  002122  0EB2               	movlw	low STR_1
  2960  002124  0100               	movlb	0	; () banked
  2961  002126  6FED               	movwf	printf@fmt& (0+255),b
  2962  002128  0EFB               	movlw	high STR_1
  2963  00212A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2964  00212C  C040  F0EF         	movff	_a,?_printf+2
  2965  002130  C041  F0F0         	movff	_a+1,?_printf+3
  2966  002134  C166  F0F1         	movff	_dist_final+10,?_printf+4
  2967  002138  C167  F0F2         	movff	_dist_final+11,?_printf+5
  2968  00213C  EC66  F01A         	call	_printf	;wreg free
  2969  002140                     l6611:
  2970                           
  2971                           ;main.c: 239:     if(!(a[0]>=2 && a[0]<=400)){
  2972  002140  BE41               	btfsc	_a+1,7,c
  2973  002142  D00E               	goto	u7190
  2974  002144  5041               	movf	_a+1,w,c
  2975  002146  E104               	bnz	u7180
  2976  002148  0E02               	movlw	2
  2977  00214A  5C40               	subwf	_a,w,c
  2978  00214C  A0D8               	btfss	status,0,c
  2979  00214E  D008               	goto	u7190
  2980  002150                     u7180:
  2981  002150  BE41               	btfsc	_a+1,7,c
  2982  002152  D00D               	goto	l6617
  2983  002154  0E91               	movlw	145
  2984  002156  5C40               	subwf	_a,w,c
  2985  002158  0E01               	movlw	1
  2986  00215A  5841               	subwfb	_a+1,w,c
  2987  00215C  A0D8               	btfss	status,0,c
  2988  00215E  D007               	goto	l6617
  2989  002160                     u7190:
  2990                           
  2991                           ;main.c: 240:         printf("Dist1 = X");
  2992  002160  0EDD               	movlw	low STR_2
  2993  002162  0100               	movlb	0	; () banked
  2994  002164  6FED               	movwf	printf@fmt& (0+255),b
  2995  002166  0EFC               	movlw	high STR_2
  2996  002168  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2997  00216A  EC66  F01A         	call	_printf	;wreg free
  2998  00216E                     l6617:
  2999                           
  3000                           ;main.c: 242:     if(a[1]>=2 && a[1]<=400){
  3001  00216E  BE43               	btfsc	_a+3,7,c
  3002  002170  D020               	goto	l6625
  3003  002172  5043               	movf	_a+3,w,c
  3004  002174  E104               	bnz	u7200
  3005  002176  0E02               	movlw	2
  3006  002178  5C42               	subwf	_a+2,w,c
  3007  00217A  A0D8               	btfss	status,0,c
  3008  00217C  D01A               	goto	l6625
  3009  00217E                     u7200:
  3010  00217E  BE43               	btfsc	_a+3,7,c
  3011  002180  D006               	goto	u7210
  3012  002182  0E91               	movlw	145
  3013  002184  5C42               	subwf	_a+2,w,c
  3014  002186  0E01               	movlw	1
  3015  002188  5843               	subwfb	_a+3,w,c
  3016  00218A  B0D8               	btfsc	status,0,c
  3017  00218C  D012               	goto	l6625
  3018  00218E                     u7210:
  3019  00218E  0EC0               	movlw	192
  3020  002190  ECF5  F01A         	call	_lcdInst
  3021                           
  3022                           ;main.c: 244:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3023  002194  0E06               	movlw	low STR_3
  3024  002196  0100               	movlb	0	; () banked
  3025  002198  6FED               	movwf	printf@fmt& (0+255),b
  3026  00219A  0EFC               	movlw	high STR_3
  3027  00219C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3028  00219E  C042  F0EF         	movff	_a+2,?_printf+2
  3029  0021A2  C043  F0F0         	movff	_a+3,?_printf+3
  3030  0021A6  C172  F0F1         	movff	_dist_final+22,?_printf+4
  3031  0021AA  C173  F0F2         	movff	_dist_final+23,?_printf+5
  3032  0021AE  EC66  F01A         	call	_printf	;wreg free
  3033  0021B2                     l6625:
  3034                           
  3035                           ;main.c: 246:     if(!(a[1]>=2 && a[1]<=400)){
  3036  0021B2  BE43               	btfsc	_a+3,7,c
  3037  0021B4  D00E               	goto	u7230
  3038  0021B6  5043               	movf	_a+3,w,c
  3039  0021B8  E104               	bnz	u7220
  3040  0021BA  0E02               	movlw	2
  3041  0021BC  5C42               	subwf	_a+2,w,c
  3042  0021BE  A0D8               	btfss	status,0,c
  3043  0021C0  D008               	goto	u7230
  3044  0021C2                     u7220:
  3045  0021C2  BE43               	btfsc	_a+3,7,c
  3046  0021C4  D010               	goto	l6633
  3047  0021C6  0E91               	movlw	145
  3048  0021C8  5C42               	subwf	_a+2,w,c
  3049  0021CA  0E01               	movlw	1
  3050  0021CC  5843               	subwfb	_a+3,w,c
  3051  0021CE  A0D8               	btfss	status,0,c
  3052  0021D0  D00A               	goto	l6633
  3053  0021D2                     u7230:
  3054  0021D2  0EC0               	movlw	192
  3055  0021D4  ECF5  F01A         	call	_lcdInst
  3056                           
  3057                           ;main.c: 248:         printf("Dist2 = X");
  3058  0021D8  0EE7               	movlw	low STR_4
  3059  0021DA  0100               	movlb	0	; () banked
  3060  0021DC  6FED               	movwf	printf@fmt& (0+255),b
  3061  0021DE  0EFC               	movlw	high STR_4
  3062  0021E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3063  0021E2  EC66  F01A         	call	_printf	;wreg free
  3064  0021E6                     l6633:
  3065                           
  3066                           ;main.c: 250:     if(a[2]>=2 && a[2]<=400){
  3067  0021E6  BE45               	btfsc	_a+5,7,c
  3068  0021E8  D020               	goto	l6641
  3069  0021EA  5045               	movf	_a+5,w,c
  3070  0021EC  E104               	bnz	u7240
  3071  0021EE  0E02               	movlw	2
  3072  0021F0  5C44               	subwf	_a+4,w,c
  3073  0021F2  A0D8               	btfss	status,0,c
  3074  0021F4  D01A               	goto	l6641
  3075  0021F6                     u7240:
  3076  0021F6  BE45               	btfsc	_a+5,7,c
  3077  0021F8  D006               	goto	u7250
  3078  0021FA  0E91               	movlw	145
  3079  0021FC  5C44               	subwf	_a+4,w,c
  3080  0021FE  0E01               	movlw	1
  3081  002200  5845               	subwfb	_a+5,w,c
  3082  002202  B0D8               	btfsc	status,0,c
  3083  002204  D012               	goto	l6641
  3084  002206                     u7250:
  3085  002206  0E90               	movlw	144
  3086  002208  ECF5  F01A         	call	_lcdInst
  3087                           
  3088                           ;main.c: 252:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3089  00220C  0E16               	movlw	low STR_5
  3090  00220E  0100               	movlb	0	; () banked
  3091  002210  6FED               	movwf	printf@fmt& (0+255),b
  3092  002212  0EFC               	movlw	high STR_5
  3093  002214  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3094  002216  C044  F0EF         	movff	_a+4,?_printf+2
  3095  00221A  C045  F0F0         	movff	_a+5,?_printf+3
  3096  00221E  C17E  F0F1         	movff	_dist_final+34,?_printf+4
  3097  002222  C17F  F0F2         	movff	_dist_final+35,?_printf+5
  3098  002226  EC66  F01A         	call	_printf	;wreg free
  3099  00222A                     l6641:
  3100                           
  3101                           ;main.c: 254:     if(!(a[2]>=2 && a[2]<=400)){
  3102  00222A  BE45               	btfsc	_a+5,7,c
  3103  00222C  D00E               	goto	u7270
  3104  00222E  5045               	movf	_a+5,w,c
  3105  002230  E104               	bnz	u7260
  3106  002232  0E02               	movlw	2
  3107  002234  5C44               	subwf	_a+4,w,c
  3108  002236  A0D8               	btfss	status,0,c
  3109  002238  D008               	goto	u7270
  3110  00223A                     u7260:
  3111  00223A  BE45               	btfsc	_a+5,7,c
  3112  00223C  D010               	goto	l6649
  3113  00223E  0E91               	movlw	145
  3114  002240  5C44               	subwf	_a+4,w,c
  3115  002242  0E01               	movlw	1
  3116  002244  5845               	subwfb	_a+5,w,c
  3117  002246  A0D8               	btfss	status,0,c
  3118  002248  D00A               	goto	l6649
  3119  00224A                     u7270:
  3120  00224A  0E90               	movlw	144
  3121  00224C  ECF5  F01A         	call	_lcdInst
  3122                           
  3123                           ;main.c: 256:         printf("Dist3 = X");
  3124  002250  0EF1               	movlw	low STR_6
  3125  002252  0100               	movlb	0	; () banked
  3126  002254  6FED               	movwf	printf@fmt& (0+255),b
  3127  002256  0EFC               	movlw	high STR_6
  3128  002258  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3129  00225A  EC66  F01A         	call	_printf	;wreg free
  3130  00225E                     l6649:
  3131                           
  3132                           ;main.c: 258:     if(a[3]>=2 && a[3]<=400){
  3133  00225E  BE47               	btfsc	_a+7,7,c
  3134  002260  D020               	goto	l6657
  3135  002262  5047               	movf	_a+7,w,c
  3136  002264  E104               	bnz	u7280
  3137  002266  0E02               	movlw	2
  3138  002268  5C46               	subwf	_a+6,w,c
  3139  00226A  A0D8               	btfss	status,0,c
  3140  00226C  D01A               	goto	l6657
  3141  00226E                     u7280:
  3142  00226E  BE47               	btfsc	_a+7,7,c
  3143  002270  D006               	goto	u7290
  3144  002272  0E91               	movlw	145
  3145  002274  5C46               	subwf	_a+6,w,c
  3146  002276  0E01               	movlw	1
  3147  002278  5847               	subwfb	_a+7,w,c
  3148  00227A  B0D8               	btfsc	status,0,c
  3149  00227C  D012               	goto	l6657
  3150  00227E                     u7290:
  3151  00227E  0ED0               	movlw	208
  3152  002280  ECF5  F01A         	call	_lcdInst
  3153                           
  3154                           ;main.c: 260:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3155  002284  0EC3               	movlw	low STR_7
  3156  002286  0100               	movlb	0	; () banked
  3157  002288  6FED               	movwf	printf@fmt& (0+255),b
  3158  00228A  0EFB               	movlw	high STR_7
  3159  00228C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3160  00228E  C046  F0EF         	movff	_a+6,?_printf+2
  3161  002292  C047  F0F0         	movff	_a+7,?_printf+3
  3162  002296  C18A  F0F1         	movff	_dist_final+46,?_printf+4
  3163  00229A  C18B  F0F2         	movff	_dist_final+47,?_printf+5
  3164  00229E  EC66  F01A         	call	_printf	;wreg free
  3165  0022A2                     l6657:
  3166                           
  3167                           ;main.c: 263:     if(!(a[3]>=2 && a[3]<=400)){
  3168  0022A2  BE47               	btfsc	_a+7,7,c
  3169  0022A4  D00E               	goto	u7310
  3170  0022A6  5047               	movf	_a+7,w,c
  3171  0022A8  E104               	bnz	u7300
  3172  0022AA  0E02               	movlw	2
  3173  0022AC  5C46               	subwf	_a+6,w,c
  3174  0022AE  A0D8               	btfss	status,0,c
  3175  0022B0  D008               	goto	u7310
  3176  0022B2                     u7300:
  3177  0022B2  BE47               	btfsc	_a+7,7,c
  3178  0022B4  0012               	return	
  3179  0022B6  0E91               	movlw	145
  3180  0022B8  5C46               	subwf	_a+6,w,c
  3181  0022BA  0E01               	movlw	1
  3182  0022BC  5847               	subwfb	_a+7,w,c
  3183  0022BE  A0D8               	btfss	status,0,c
  3184  0022C0  0012               	return	
  3185  0022C2                     u7310:
  3186  0022C2  0ED0               	movlw	208
  3187  0022C4  ECF5  F01A         	call	_lcdInst
  3188                           
  3189                           ;main.c: 265:         printf("Dist4 = X");
  3190  0022C8  0EFB               	movlw	low STR_8
  3191  0022CA  0100               	movlb	0	; () banked
  3192  0022CC  6FED               	movwf	printf@fmt& (0+255),b
  3193  0022CE  0EFC               	movlw	high STR_8
  3194  0022D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3195  0022D2  EC66  F01A         	call	_printf	;wreg free
  3196  0022D6  0012               	return		;funcret
  3197  0022D8                     __end_of_print_echo:
  3198                           	opt callstack 0
  3199                           
  3200 ;; *************** function _start *****************
  3201 ;; Defined at:
  3202 ;;		line 615 in file "main.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;Total ram usage:        0 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    5
  3223 ;; This function calls:
  3224 ;;		_I2C_Master_Init
  3225 ;;		_I2C_Master_Start
  3226 ;;		_I2C_Master_Stop
  3227 ;;		_I2C_Master_Write
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text6
  3234  003182                     __ptext6:
  3235                           	opt callstack 0
  3236  003182                     _start:
  3237                           	opt callstack 25
  3238                           
  3239                           ;main.c: 616:     I2C_Master_Init(100000);
  3240                           
  3241                           ;incstack = 0
  3242  003182  0EA0               	movlw	160
  3243  003184  0100               	movlb	0	; () banked
  3244  003186  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  3245  003188  0E86               	movlw	134
  3246  00318A  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  3247  00318C  0E01               	movlw	1
  3248  00318E  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  3249  003190  0E00               	movlw	0
  3250  003192  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  3251  003194  ECB7  F017         	call	_I2C_Master_Init	;wreg free
  3252                           
  3253                           ;main.c: 617:     I2C_Master_Start();
  3254  003198  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  3255                           
  3256                           ;main.c: 618:     I2C_Master_Write(0b00010000);
  3257  00319C  0E00               	movlw	0
  3258  00319E  0100               	movlb	0	; () banked
  3259  0031A0  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3260  0031A2  0E10               	movlw	16
  3261  0031A4  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3262  0031A6  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  3263                           
  3264                           ;main.c: 619:     I2C_Master_Stop();
  3265  0031AA  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  3266                           
  3267                           ;main.c: 621:     I2C_Master_Start();
  3268  0031AE  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  3269                           
  3270                           ;main.c: 622:     I2C_Master_Write(0b00010000);
  3271  0031B2  0E00               	movlw	0
  3272  0031B4  0100               	movlb	0	; () banked
  3273  0031B6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3274  0031B8  0E10               	movlw	16
  3275  0031BA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3276  0031BC  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  3277                           
  3278                           ;main.c: 623:     I2C_Master_Write('2');
  3279  0031C0  0E00               	movlw	0
  3280  0031C2  0100               	movlb	0	; () banked
  3281  0031C4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3282  0031C6  0E32               	movlw	50
  3283  0031C8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3284  0031CA  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  3285                           
  3286                           ;main.c: 624:     I2C_Master_Stop();
  3287  0031CE  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  3288  0031D2  0012               	return		;funcret
  3289  0031D4                     __end_of_start:
  3290                           	opt callstack 0
  3291                           
  3292 ;; *************** function _number_deploy *****************
  3293 ;; Defined at:
  3294 ;;		line 358 in file "main.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  avg_dist        2  121[BANK0 ] int 
  3297 ;;  poles_detect    2  123[BANK0 ] int 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  t_count         2    6[BANK1 ] int 
  3300 ;;  tires_detect    2    4[BANK1 ] int 
  3301 ;;  tires_t         2    2[BANK1 ] int 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  2  121[BANK0 ] int 
  3304 ;; Registers used:
  3305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3311 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;Total ram usage:       12 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:   14
  3318 ;; This function calls:
  3319 ;;		___awdiv
  3320 ;;		_lcdInst
  3321 ;;		_printf
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text7
  3328  001EC6                     __ptext7:
  3329                           	opt callstack 0
  3330  001EC6                     _number_deploy:
  3331                           	opt callstack 16
  3332                           
  3333                           ;main.c: 359:     int tires_t=0;
  3334                           
  3335                           ;incstack = 0
  3336  001EC6  0E00               	movlw	0
  3337  001EC8  0101               	movlb	1	; () banked
  3338  001ECA  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3339  001ECC  0E00               	movlw	0
  3340  001ECE  6F02               	movwf	number_deploy@tires_t& (0+255),b
  3341                           
  3342                           ;main.c: 360:     int tires_detected=0;
  3343  001ED0  0E00               	movlw	0
  3344  001ED2  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  3345  001ED4  0E00               	movlw	0
  3346  001ED6  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  3347                           
  3348                           ;main.c: 361:     int t_count = 0;
  3349  001ED8  0E00               	movlw	0
  3350  001EDA  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  3351  001EDC  0E00               	movlw	0
  3352  001EDE  6F06               	movwf	number_deploy@t_count& (0+255),b
  3353                           
  3354                           ;main.c: 364:     while (t_count<3){
  3355  001EE0  D0FA               	goto	l6953
  3356  001EE2                     l6895:
  3357                           
  3358                           ; BSR set to: 1
  3359                           ;main.c: 365:   if (poles_detected != 0){
  3360  001EE2  0100               	movlb	0	; () banked
  3361  001EE4  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  3362  001EE6  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  3363  001EE8  B4D8               	btfsc	status,2,c
  3364  001EEA  D031               	goto	l6905
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;main.c: 366:    if ((avg_dist/1000)<30){
  3368  001EEC  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  3369  001EF0  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  3370  001EF4  0E03               	movlw	3
  3371  001EF6  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3372  001EF8  0EE8               	movlw	232
  3373  001EFA  6F82               	movwf	___awdiv@divisor& (0+255),b
  3374  001EFC  EC0E  F016         	call	___awdiv	;wreg free
  3375  001F00  0100               	movlb	0	; () banked
  3376  001F02  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  3377  001F04  D006               	goto	u7610
  3378  001F06  5181               	movf	(?___awdiv+1)& (0+255),w,b
  3379  001F08  E109               	bnz	l6901
  3380  001F0A  0E1E               	movlw	30
  3381  001F0C  5D80               	subwf	?___awdiv& (0+255),w,b
  3382  001F0E  B0D8               	btfsc	status,0,c
  3383  001F10  D005               	goto	l6901
  3384  001F12                     u7610:
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;main.c: 368:     tires_t = 1;
  3388  001F12  0E00               	movlw	0
  3389  001F14  0101               	movlb	1	; () banked
  3390  001F16  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3391  001F18  0E01               	movlw	1
  3392  001F1A  6F02               	movwf	number_deploy@tires_t& (0+255),b
  3393  001F1C                     l6901:
  3394                           
  3395                           ;main.c: 370:    if ((avg_dist/1000)>30){
  3396  001F1C  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  3397  001F20  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  3398  001F24  0E03               	movlw	3
  3399  001F26  0100               	movlb	0	; () banked
  3400  001F28  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3401  001F2A  0EE8               	movlw	232
  3402  001F2C  6F82               	movwf	___awdiv@divisor& (0+255),b
  3403  001F2E  EC0E  F016         	call	___awdiv	;wreg free
  3404  001F32  0100               	movlb	0	; () banked
  3405  001F34  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  3406  001F36  D00B               	goto	l6905
  3407  001F38  5181               	movf	(?___awdiv+1)& (0+255),w,b
  3408  001F3A  E104               	bnz	u7620
  3409  001F3C  0E1F               	movlw	31
  3410  001F3E  5D80               	subwf	?___awdiv& (0+255),w,b
  3411  001F40  A0D8               	btfss	status,0,c
  3412  001F42  D005               	goto	l6905
  3413  001F44                     u7620:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;main.c: 371:     tires_t = 2;
  3417  001F44  0E00               	movlw	0
  3418  001F46  0101               	movlb	1	; () banked
  3419  001F48  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3420  001F4A  0E02               	movlw	2
  3421  001F4C  6F02               	movwf	number_deploy@tires_t& (0+255),b
  3422  001F4E                     l6905:
  3423                           
  3424                           ;main.c: 375:   if (poles_detected == 0){
  3425  001F4E  0100               	movlb	0	; () banked
  3426  001F50  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  3427  001F52  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  3428  001F54  A4D8               	btfss	status,2,c
  3429  001F56  D005               	goto	l6909
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;main.c: 376:    tires_t = 2;
  3433  001F58  0E00               	movlw	0
  3434  001F5A  0101               	movlb	1	; () banked
  3435  001F5C  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3436  001F5E  0E02               	movlw	2
  3437  001F60  6F02               	movwf	number_deploy@tires_t& (0+255),b
  3438  001F62                     l6909:
  3439                           
  3440                           ;main.c: 379:   if ((a[0]>=2 && a[0] <= 15)){
  3441  001F62  BE41               	btfsc	_a+1,7,c
  3442  001F64  D028               	goto	l6921
  3443  001F66  5041               	movf	_a+1,w,c
  3444  001F68  E104               	bnz	u7640
  3445  001F6A  0E02               	movlw	2
  3446  001F6C  5C40               	subwf	_a,w,c
  3447  001F6E  A0D8               	btfss	status,0,c
  3448  001F70  D022               	goto	l6921
  3449  001F72                     u7640:
  3450  001F72  BE41               	btfsc	_a+1,7,c
  3451  001F74  D006               	goto	u7650
  3452  001F76  5041               	movf	_a+1,w,c
  3453  001F78  E11E               	bnz	l6921
  3454  001F7A  0E10               	movlw	16
  3455  001F7C  5C40               	subwf	_a,w,c
  3456  001F7E  B0D8               	btfsc	status,0,c
  3457  001F80  D01A               	goto	l6921
  3458  001F82                     u7650:
  3459                           
  3460                           ;main.c: 381:             if ((a[1]>=2 && a[1] <= 15)){
  3461  001F82  BE43               	btfsc	_a+3,7,c
  3462  001F84  D013               	goto	l6919
  3463  001F86  5043               	movf	_a+3,w,c
  3464  001F88  E104               	bnz	u7660
  3465  001F8A  0E02               	movlw	2
  3466  001F8C  5C42               	subwf	_a+2,w,c
  3467  001F8E  A0D8               	btfss	status,0,c
  3468  001F90  D00D               	goto	l6919
  3469  001F92                     u7660:
  3470  001F92  BE43               	btfsc	_a+3,7,c
  3471  001F94  D006               	goto	u7670
  3472  001F96  5043               	movf	_a+3,w,c
  3473  001F98  E109               	bnz	l6919
  3474  001F9A  0E10               	movlw	16
  3475  001F9C  5C42               	subwf	_a+2,w,c
  3476  001F9E  B0D8               	btfsc	status,0,c
  3477  001FA0  D005               	goto	l6919
  3478  001FA2                     u7670:
  3479                           
  3480                           ;main.c: 383:                 tires_detected = 1;
  3481  001FA2  0E00               	movlw	0
  3482  001FA4  0101               	movlb	1	; () banked
  3483  001FA6  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  3484  001FA8  0E01               	movlw	1
  3485  001FAA  D004               	goto	L3
  3486  001FAC                     l6919:
  3487                           
  3488                           ;main.c: 386:                 tires_detected = 0;
  3489  001FAC  0E00               	movlw	0
  3490  001FAE  0101               	movlb	1	; () banked
  3491  001FB0  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  3492  001FB2  0E00               	movlw	0
  3493  001FB4                     L3:
  3494  001FB4  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  3495  001FB6                     l6921:
  3496                           
  3497                           ;main.c: 389:         if ((tires_detected==1)){
  3498  001FB6  0101               	movlb	1	; () banked
  3499  001FB8  0504               	decf	number_deploy@tires_detected& (0+255),w,b
  3500  001FBA  1105               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  3501  001FBC  B4D8               	btfsc	status,2,c
  3502                           
  3503                           ; BSR set to: 1
  3504                           ;main.c: 390:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  3505  001FBE  BE45               	btfsc	_a+5,7,c
  3506  001FC0  D020               	goto	l6933
  3507  001FC2  5045               	movf	_a+5,w,c
  3508  001FC4  E104               	bnz	u7690
  3509  001FC6  0E02               	movlw	2
  3510  001FC8  5C44               	subwf	_a+4,w,c
  3511  001FCA  A0D8               	btfss	status,0,c
  3512  001FCC  D01A               	goto	l6933
  3513  001FCE                     u7690:
  3514                           
  3515                           ; BSR set to: 1
  3516  001FCE  BE45               	btfsc	_a+5,7,c
  3517  001FD0  D006               	goto	u7700
  3518  001FD2  5045               	movf	_a+5,w,c
  3519  001FD4  E116               	bnz	l6933
  3520  001FD6  0E10               	movlw	16
  3521  001FD8  5C44               	subwf	_a+4,w,c
  3522  001FDA  B0D8               	btfsc	status,0,c
  3523  001FDC  D012               	goto	l6933
  3524  001FDE                     u7700:
  3525                           
  3526                           ; BSR set to: 1
  3527  001FDE  BE47               	btfsc	_a+7,7,c
  3528  001FE0  D010               	goto	l6933
  3529  001FE2  5047               	movf	_a+7,w,c
  3530  001FE4  E104               	bnz	u7710
  3531  001FE6  0E02               	movlw	2
  3532  001FE8  5C46               	subwf	_a+6,w,c
  3533  001FEA  A0D8               	btfss	status,0,c
  3534  001FEC  D00A               	goto	l6933
  3535  001FEE                     u7710:
  3536                           
  3537                           ; BSR set to: 1
  3538  001FEE  BE47               	btfsc	_a+7,7,c
  3539  001FF0  D006               	goto	u7720
  3540  001FF2  5047               	movf	_a+7,w,c
  3541  001FF4  E106               	bnz	l6933
  3542  001FF6  0E10               	movlw	16
  3543  001FF8  5C46               	subwf	_a+6,w,c
  3544  001FFA  B0D8               	btfsc	status,0,c
  3545  001FFC  D002               	goto	l6933
  3546  001FFE                     u7720:
  3547                           
  3548                           ; BSR set to: 1
  3549                           ;main.c: 391:                 tires_detected++;
  3550  001FFE  4B04               	infsnz	number_deploy@tires_detected& (0+255),f,b
  3551  002000  2B05               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  3552  002002                     l6933:
  3553                           
  3554                           ; BSR set to: 1
  3555                           ;main.c: 395:     t_count = tires_t - tires_detected;
  3556  002002  5104               	movf	number_deploy@tires_detected& (0+255),w,b
  3557  002004  5D02               	subwf	number_deploy@tires_t& (0+255),w,b
  3558  002006  6F06               	movwf	number_deploy@t_count& (0+255),b
  3559  002008  5105               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  3560  00200A  5903               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  3561  00200C  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  3562                           
  3563                           ; BSR set to: 1
  3564                           ;main.c: 396:     Pole[poles_detected].tires_deployed = t_count;
  3565  00200E  C0FB  F100         	movff	number_deploy@poles_detected,??_number_deploy
  3566  002012  C0FC  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  3567  002016  90D8               	bcf	status,0,c
  3568  002018  3700               	rlcf	??_number_deploy& (0+255),f,b
  3569  00201A  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3570  00201C  90D8               	bcf	status,0,c
  3571  00201E  3700               	rlcf	??_number_deploy& (0+255),f,b
  3572  002020  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3573  002022  90D8               	bcf	status,0,c
  3574  002024  3700               	rlcf	??_number_deploy& (0+255),f,b
  3575  002026  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3576  002028  0E00               	movlw	low _Pole
  3577  00202A  2500               	addwf	??_number_deploy& (0+255),w,b
  3578  00202C  6ED9               	movwf	fsr2l,c
  3579  00202E  0E02               	movlw	high _Pole
  3580  002030  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  3581  002032  6EDA               	movwf	fsr2h,c
  3582  002034  C106  FFDE         	movff	number_deploy@t_count,postinc2
  3583  002038  C107  FFDD         	movff	number_deploy@t_count+1,postdec2
  3584                           
  3585                           ; BSR set to: 1
  3586                           ;main.c: 397:     Pole[poles_detected].tires_final = tires_t;
  3587  00203C  C0FB  F100         	movff	number_deploy@poles_detected,??_number_deploy
  3588  002040  C0FC  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  3589  002044  90D8               	bcf	status,0,c
  3590  002046  3700               	rlcf	??_number_deploy& (0+255),f,b
  3591  002048  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3592  00204A  90D8               	bcf	status,0,c
  3593  00204C  3700               	rlcf	??_number_deploy& (0+255),f,b
  3594  00204E  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3595  002050  90D8               	bcf	status,0,c
  3596  002052  3700               	rlcf	??_number_deploy& (0+255),f,b
  3597  002054  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  3598  002056  0E02               	movlw	low (_Pole+2)
  3599  002058  2500               	addwf	??_number_deploy& (0+255),w,b
  3600  00205A  6ED9               	movwf	fsr2l,c
  3601  00205C  0E02               	movlw	high (_Pole+2)
  3602  00205E  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  3603  002060  6EDA               	movwf	fsr2h,c
  3604  002062  C102  FFDE         	movff	number_deploy@tires_t,postinc2
  3605  002066  C103  FFDD         	movff	number_deploy@tires_t+1,postdec2
  3606                           
  3607                           ; BSR set to: 1
  3608                           ;main.c: 398:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3609  00206A  0E01               	movlw	1
  3610  00206C  ECF5  F01A         	call	_lcdInst
  3611  002070  0E11               	movlw	17
  3612  002072  0101               	movlb	1	; () banked
  3613  002074  6F00               	movwf	??_number_deploy& (0+255),b
  3614  002076  0E3A               	movlw	58
  3615  002078                     u8327:
  3616  002078  2EE8               	decfsz	wreg,f,c
  3617  00207A  D7FE               	bra	u8327
  3618  00207C  2F00               	decfsz	??_number_deploy& (0+255),f,b
  3619  00207E  D7FC               	bra	u8327
  3620  002080  F000               	nop	
  3621                           
  3622                           ;main.c: 399:     printf("det,%d, tcnt %d",tires_detected,t_count);
  3623  002082  0EF6               	movlw	low STR_10
  3624  002084  0100               	movlb	0	; () banked
  3625  002086  6FED               	movwf	printf@fmt& (0+255),b
  3626  002088  0EFB               	movlw	high STR_10
  3627  00208A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3628  00208C  C104  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  3629  002090  C105  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  3630  002094  C106  F0F1         	movff	number_deploy@t_count,?_printf+4
  3631  002098  C107  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  3632  00209C  EC66  F01A         	call	_printf	;wreg free
  3633                           
  3634                           ;main.c: 400:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3635  0020A0  0E0D               	movlw	13
  3636  0020A2  0101               	movlb	1	; () banked
  3637  0020A4  6F01               	movwf	(??_number_deploy+1)& (0+255),b
  3638  0020A6  0EAF               	movlw	175
  3639  0020A8  6F00               	movwf	??_number_deploy& (0+255),b
  3640  0020AA  0EB6               	movlw	182
  3641  0020AC                     u8337:
  3642  0020AC  2EE8               	decfsz	wreg,f,c
  3643  0020AE  D7FE               	bra	u8337
  3644  0020B0  2F00               	decfsz	??_number_deploy& (0+255),f,b
  3645  0020B2  D7FC               	bra	u8337
  3646  0020B4  2F01               	decfsz	(??_number_deploy+1)& (0+255),f,b
  3647  0020B6  D7FA               	bra	u8337
  3648  0020B8  F000               	nop	
  3649                           
  3650                           ;main.c: 402:     if (t_count<=2){
  3651  0020BA  0101               	movlb	1	; () banked
  3652  0020BC  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  3653  0020BE  D006               	goto	u7730
  3654  0020C0  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  3655  0020C2  E109               	bnz	l6953
  3656  0020C4  0E03               	movlw	3
  3657  0020C6  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  3658  0020C8  B0D8               	btfsc	status,0,c
  3659  0020CA  D005               	goto	l6953
  3660  0020CC                     u7730:
  3661                           
  3662                           ; BSR set to: 1
  3663                           ;main.c: 406:         return (int) t_count;
  3664  0020CC  C106  F0F9         	movff	number_deploy@t_count,?_number_deploy
  3665  0020D0  C107  F0FA         	movff	number_deploy@t_count+1,?_number_deploy+1
  3666  0020D4  0012               	return	
  3667  0020D6                     l6953:
  3668                           
  3669                           ; BSR set to: 1
  3670                           ;main.c: 364:     while (t_count<3){
  3671  0020D6  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  3672  0020D8  D704               	goto	l6895
  3673  0020DA  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  3674  0020DC  E105               	bnz	u7740
  3675  0020DE  0E03               	movlw	3
  3676  0020E0  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  3677  0020E2  B0D8               	btfsc	status,0,c
  3678  0020E4  0012               	return	
  3679  0020E6  D6FD               	goto	l6895
  3680  0020E8                     u7740:
  3681                           
  3682                           ; BSR set to: 1
  3683  0020E8  0012               	return		;funcret
  3684  0020EA                     __end_of_number_deploy:
  3685                           	opt callstack 0
  3686                           
  3687 ;; *************** function ___awdiv *****************
  3688 ;; Defined at:
  3689 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  dividend        2    0[BANK0 ] int 
  3692 ;;  divisor         2    2[BANK0 ] int 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  quotient        2    6[BANK0 ] int 
  3695 ;;  sign            1    5[BANK0 ] unsigned char 
  3696 ;;  counter         1    4[BANK0 ] unsigned char 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  2    0[BANK0 ] int 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3706 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;Total ram usage:        8 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    3
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_number_deploy
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text8
  3721  002C1C                     __ptext8:
  3722                           	opt callstack 0
  3723  002C1C                     ___awdiv:
  3724                           	opt callstack 26
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;incstack = 0
  3728  002C1C  0E00               	movlw	0
  3729  002C1E  0100               	movlb	0	; () banked
  3730  002C20  6F85               	movwf	___awdiv@sign& (0+255),b
  3731                           
  3732                           ; BSR set to: 0
  3733  002C22  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3734  002C24  D006               	goto	l6793
  3735                           
  3736                           ; BSR set to: 0
  3737  002C26  6D82               	negf	___awdiv@divisor& (0+255),b
  3738  002C28  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3739  002C2A  B0D8               	btfsc	status,0,c
  3740  002C2C  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3741                           
  3742                           ; BSR set to: 0
  3743  002C2E  0E01               	movlw	1
  3744  002C30  6F85               	movwf	___awdiv@sign& (0+255),b
  3745  002C32                     l6793:
  3746                           
  3747                           ; BSR set to: 0
  3748  002C32  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  3749  002C34  D006               	goto	l6799
  3750                           
  3751                           ; BSR set to: 0
  3752  002C36  6D80               	negf	___awdiv@dividend& (0+255),b
  3753  002C38  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3754  002C3A  B0D8               	btfsc	status,0,c
  3755  002C3C  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3756                           
  3757                           ; BSR set to: 0
  3758  002C3E  0E01               	movlw	1
  3759  002C40  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  3760  002C42                     l6799:
  3761                           
  3762                           ; BSR set to: 0
  3763  002C42  0E00               	movlw	0
  3764  002C44  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  3765  002C46  0E00               	movlw	0
  3766  002C48  6F86               	movwf	___awdiv@quotient& (0+255),b
  3767                           
  3768                           ; BSR set to: 0
  3769  002C4A  5182               	movf	___awdiv@divisor& (0+255),w,b
  3770  002C4C  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3771  002C4E  B4D8               	btfsc	status,2,c
  3772  002C50  D01C               	goto	l6821
  3773                           
  3774                           ; BSR set to: 0
  3775  002C52  0E01               	movlw	1
  3776  002C54  6F84               	movwf	___awdiv@counter& (0+255),b
  3777  002C56  D004               	goto	l6807
  3778  002C58                     l6805:
  3779                           
  3780                           ; BSR set to: 0
  3781  002C58  90D8               	bcf	status,0,c
  3782  002C5A  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  3783  002C5C  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3784  002C5E  2B84               	incf	___awdiv@counter& (0+255),f,b
  3785  002C60                     l6807:
  3786                           
  3787                           ; BSR set to: 0
  3788  002C60  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3789  002C62  D7FA               	goto	l6805
  3790  002C64                     u7500:
  3791                           
  3792                           ; BSR set to: 0
  3793  002C64  90D8               	bcf	status,0,c
  3794  002C66  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  3795  002C68  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3796                           
  3797                           ; BSR set to: 0
  3798  002C6A  5182               	movf	___awdiv@divisor& (0+255),w,b
  3799  002C6C  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  3800  002C6E  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3801  002C70  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3802  002C72  A0D8               	btfss	status,0,c
  3803  002C74  D005               	goto	l6817
  3804                           
  3805                           ; BSR set to: 0
  3806  002C76  5182               	movf	___awdiv@divisor& (0+255),w,b
  3807  002C78  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  3808  002C7A  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3809  002C7C  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3810                           
  3811                           ; BSR set to: 0
  3812  002C7E  8186               	bsf	___awdiv@quotient& (0+255),0,b
  3813  002C80                     l6817:
  3814                           
  3815                           ; BSR set to: 0
  3816  002C80  90D8               	bcf	status,0,c
  3817  002C82  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3818  002C84  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  3819                           
  3820                           ; BSR set to: 0
  3821  002C86  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  3822  002C88  D7ED               	goto	u7500
  3823  002C8A                     l6821:
  3824                           
  3825                           ; BSR set to: 0
  3826  002C8A  5185               	movf	___awdiv@sign& (0+255),w,b
  3827  002C8C  B4D8               	btfsc	status,2,c
  3828  002C8E  D004               	goto	l6825
  3829                           
  3830                           ; BSR set to: 0
  3831  002C90  6D86               	negf	___awdiv@quotient& (0+255),b
  3832  002C92  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3833  002C94  B0D8               	btfsc	status,0,c
  3834  002C96  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3835  002C98                     l6825:
  3836                           
  3837                           ; BSR set to: 0
  3838  002C98  C086  F080         	movff	___awdiv@quotient,?___awdiv
  3839  002C9C  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  3840                           
  3841                           ; BSR set to: 0
  3842  002CA0  0012               	return		;funcret
  3843  002CA2                     __end_of___awdiv:
  3844                           	opt callstack 0
  3845                           
  3846 ;; *************** function _backwards *****************
  3847 ;; Defined at:
  3848 ;;		line 626 in file "main.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    5
  3869 ;; This function calls:
  3870 ;;		_I2C_Master_Start
  3871 ;;		_I2C_Master_Stop
  3872 ;;		_I2C_Master_Write
  3873 ;; This function is called by:
  3874 ;;		_main
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text9
  3879  003542                     __ptext9:
  3880                           	opt callstack 0
  3881  003542                     _backwards:
  3882                           	opt callstack 25
  3883                           
  3884                           ;main.c: 627:     I2C_Master_Start();
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;incstack = 0
  3888  003542  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  3889                           
  3890                           ;main.c: 628:     I2C_Master_Write(0b00010000);
  3891  003546  0E00               	movlw	0
  3892  003548  0100               	movlb	0	; () banked
  3893  00354A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3894  00354C  0E10               	movlw	16
  3895  00354E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3896  003550  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  3897                           
  3898                           ;main.c: 629:     I2C_Master_Write('5');
  3899  003554  0E00               	movlw	0
  3900  003556  0100               	movlb	0	; () banked
  3901  003558  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3902  00355A  0E35               	movlw	53
  3903  00355C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3904  00355E  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  3905                           
  3906                           ;main.c: 630:     I2C_Master_Stop();
  3907  003562  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  3908  003566  0012               	return		;funcret
  3909  003568                     __end_of_backwards:
  3910                           	opt callstack 0
  3911                           
  3912 ;; *************** function _actuators_main *****************
  3913 ;; Defined at:
  3914 ;;		line 64 in file "actuators_main.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  stack           2    8[BANK1 ] int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  act_cnt         2   12[BANK1 ] int 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3928 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;Total ram usage:        6 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:   16
  3935 ;; This function calls:
  3936 ;;		_initLCD
  3937 ;;		_lcdInst
  3938 ;;		_printf
  3939 ;;		_servo
  3940 ;;		_stepper
  3941 ;;		_stepper2
  3942 ;;		_system_init
  3943 ;; This function is called by:
  3944 ;;		_main
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text10
  3949  002B00                     __ptext10:
  3950                           	opt callstack 0
  3951  002B00                     _actuators_main:
  3952                           	opt callstack 14
  3953                           
  3954                           ;actuators_main.c: 65:     int act_cnt = 0;
  3955                           
  3956                           ;incstack = 0
  3957  002B00  0E00               	movlw	0
  3958  002B02  0101               	movlb	1	; () banked
  3959  002B04  6F0D               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  3960  002B06  0E00               	movlw	0
  3961  002B08  6F0C               	movwf	actuators_main@act_cnt& (0+255),b
  3962                           
  3963                           ; BSR set to: 1
  3964                           ;actuators_main.c: 66:     system_init();
  3965  002B0A  ECAB  F019         	call	_system_init	;wreg free
  3966                           
  3967                           ;actuators_main.c: 67:     initLCD();
  3968  002B0E  EC14  F017         	call	_initLCD	;wreg free
  3969                           
  3970                           ;actuators_main.c: 68:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)
      +                          ));};
  3971  002B12  0E01               	movlw	1
  3972  002B14  ECF5  F01A         	call	_lcdInst
  3973  002B18  0E11               	movlw	17
  3974  002B1A  0101               	movlb	1	; () banked
  3975  002B1C  6F0A               	movwf	??_actuators_main& (0+255),b
  3976  002B1E  0E3A               	movlw	58
  3977  002B20                     u8347:
  3978  002B20  2EE8               	decfsz	wreg,f,c
  3979  002B22  D7FE               	bra	u8347
  3980  002B24  2F0A               	decfsz	??_actuators_main& (0+255),f,b
  3981  002B26  D7FC               	bra	u8347
  3982  002B28  F000               	nop	
  3983                           
  3984                           ;actuators_main.c: 69:     printf("cnt is %d",act_cnt);
  3985  002B2A  0ED3               	movlw	low STR_46
  3986  002B2C  0100               	movlb	0	; () banked
  3987  002B2E  6FED               	movwf	printf@fmt& (0+255),b
  3988  002B30  0EFC               	movlw	high STR_46
  3989  002B32  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3990  002B34  0E00               	movlw	0
  3991  002B36  6FF0               	movwf	(?_printf+3)& (0+255),b
  3992  002B38  0E00               	movlw	0
  3993  002B3A  6FEF               	movwf	(?_printf+2)& (0+255),b
  3994  002B3C  EC66  F01A         	call	_printf	;wreg free
  3995                           
  3996                           ;actuators_main.c: 70:     _delay((unsigned long)((200)*(10000000/4000.0)));
  3997  002B40  0E03               	movlw	3
  3998  002B42  0101               	movlb	1	; () banked
  3999  002B44  6F0B               	movwf	(??_actuators_main+1)& (0+255),b
  4000  002B46  0E8A               	movlw	138
  4001  002B48  6F0A               	movwf	??_actuators_main& (0+255),b
  4002  002B4A  0E55               	movlw	85
  4003  002B4C                     u8357:
  4004  002B4C  2EE8               	decfsz	wreg,f,c
  4005  002B4E  D7FE               	bra	u8357
  4006  002B50  2F0A               	decfsz	??_actuators_main& (0+255),f,b
  4007  002B52  D7FC               	bra	u8357
  4008  002B54  2F0B               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4009  002B56  D7FA               	bra	u8357
  4010  002B58  D000               	nop2	
  4011  002B5A                     l7233:
  4012                           
  4013                           ;actuators_main.c: 72:     if (act_cnt==0){
  4014  002B5A  0101               	movlb	1	; () banked
  4015  002B5C  510C               	movf	actuators_main@act_cnt& (0+255),w,b
  4016  002B5E  110D               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4017  002B60  A4D8               	btfss	status,2,c
  4018  002B62  D011               	goto	l7243
  4019                           
  4020                           ; BSR set to: 1
  4021                           ;actuators_main.c: 76:         stepper(stack);
  4022  002B64  C108  F100         	movff	actuators_main@stack,stepper@stack
  4023  002B68  C109  F101         	movff	actuators_main@stack+1,stepper@stack+1
  4024  002B6C  ECD5  F016         	call	_stepper	;wreg free
  4025                           
  4026                           ;actuators_main.c: 77:         stepper2(0);
  4027  002B70  0E00               	movlw	0
  4028  002B72  ECE7  F017         	call	_stepper2
  4029                           
  4030                           ;actuators_main.c: 82:         servo();
  4031  002B76  EC52  F01A         	call	_servo	;wreg free
  4032                           
  4033                           ;actuators_main.c: 90:         stepper2(1);
  4034  002B7A  0E01               	movlw	1
  4035  002B7C  ECE7  F017         	call	_stepper2
  4036                           
  4037                           ;actuators_main.c: 91:         act_cnt++;
  4038  002B80  0101               	movlb	1	; () banked
  4039  002B82  4B0C               	infsnz	actuators_main@act_cnt& (0+255),f,b
  4040  002B84  2B0D               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  4041  002B86                     l7243:
  4042                           
  4043                           ; BSR set to: 1
  4044                           ;actuators_main.c: 94:     if(act_cnt){
  4045  002B86  510C               	movf	actuators_main@act_cnt& (0+255),w,b
  4046  002B88  110D               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4047  002B8A  A4D8               	btfss	status,2,c
  4048  002B8C  0012               	return	
  4049  002B8E  D7E5               	goto	l7233
  4050  002B90                     __end_of_actuators_main:
  4051                           	opt callstack 0
  4052                           
  4053 ;; *************** function _system_init *****************
  4054 ;; Defined at:
  4055 ;;		line 112 in file "actuators_main.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    3
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_actuators_main
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text11
  4084  003356                     __ptext11:
  4085                           	opt callstack 0
  4086  003356                     _system_init:
  4087                           	opt callstack 26
  4088                           
  4089                           ;actuators_main.c: 113:     TRISB = 0x00;
  4090                           
  4091                           ; BSR set to: 1
  4092                           ;incstack = 0
  4093  003356  0E00               	movlw	0
  4094  003358  6E93               	movwf	3987,c	;volatile
  4095                           
  4096                           ;actuators_main.c: 115:     LATB = 0x0F;
  4097  00335A  0E0F               	movlw	15
  4098  00335C  6E8A               	movwf	3978,c	;volatile
  4099                           
  4100                           ;actuators_main.c: 116:     TRISA = 0x00;
  4101  00335E  0E00               	movlw	0
  4102  003360  6E92               	movwf	3986,c	;volatile
  4103                           
  4104                           ;actuators_main.c: 117:     LATA = 0x0F;
  4105  003362  0E0F               	movlw	15
  4106  003364  6E89               	movwf	3977,c	;volatile
  4107                           
  4108                           ;actuators_main.c: 119:     TRISCbits.TRISC1 = 0;
  4109  003366  9294               	bcf	3988,1,c	;volatile
  4110                           
  4111                           ;actuators_main.c: 122:     TRISCbits.TRISC2 = 0;
  4112  003368  9494               	bcf	3988,2,c	;volatile
  4113                           
  4114                           ;actuators_main.c: 125:     LATD = 0x00;
  4115  00336A  0E00               	movlw	0
  4116  00336C  6E8C               	movwf	3980,c	;volatile
  4117                           
  4118                           ;actuators_main.c: 126:     TRISD = 0x00;
  4119  00336E  0E00               	movlw	0
  4120  003370  6E95               	movwf	3989,c	;volatile
  4121                           
  4122                           ;actuators_main.c: 128:     ADCON1 = 0b00001111;
  4123  003372  0E0F               	movlw	15
  4124  003374  6EC1               	movwf	4033,c	;volatile
  4125                           
  4126                           ;actuators_main.c: 130:     TRISC = 0x00;
  4127  003376  0E00               	movlw	0
  4128  003378  6E94               	movwf	3988,c	;volatile
  4129                           
  4130                           ;actuators_main.c: 131:     LATC = 0x00;
  4131  00337A  0E00               	movlw	0
  4132  00337C  6E8B               	movwf	3979,c	;volatile
  4133                           
  4134                           ;actuators_main.c: 132:     TRISE = 0x00;
  4135  00337E  0E00               	movlw	0
  4136  003380  6E96               	movwf	3990,c	;volatile
  4137                           
  4138                           ;actuators_main.c: 133:     LATE = 0x00;
  4139  003382  0E00               	movlw	0
  4140  003384  6E8D               	movwf	3981,c	;volatile
  4141  003386  0012               	return		;funcret
  4142  003388                     __end_of_system_init:
  4143                           	opt callstack 0
  4144                           
  4145 ;; *************** function _stepper2 *****************
  4146 ;; Defined at:
  4147 ;;		line 377 in file "actuators_main.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  direction       1    wreg     unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  direction       1    0[BANK1 ] unsigned char 
  4152 ;;  i               2    3[BANK1 ] int 
  4153 ;;  count_steppe    2    1[BANK1 ] int 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;Total ram usage:        5 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:   15
  4170 ;; This function calls:
  4171 ;;		_full_drive
  4172 ;;		_printf
  4173 ;; This function is called by:
  4174 ;;		_actuators_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text12
  4179  002FCE                     __ptext12:
  4180                           	opt callstack 0
  4181  002FCE                     _stepper2:
  4182                           	opt callstack 14
  4183                           
  4184                           ;incstack = 0
  4185                           ;stepper2@direction stored from wreg
  4186  002FCE  0101               	movlb	1	; () banked
  4187  002FD0  6F00               	movwf	stepper2@direction& (0+255),b
  4188                           
  4189                           ;actuators_main.c: 395:     int count_stepper = 0;
  4190  002FD2  0E00               	movlw	0
  4191  002FD4  0101               	movlb	1	; () banked
  4192  002FD6  6F02               	movwf	(stepper2@count_stepper+1)& (0+255),b
  4193  002FD8  0E00               	movlw	0
  4194  002FDA  6F01               	movwf	stepper2@count_stepper& (0+255),b
  4195                           
  4196                           ; BSR set to: 1
  4197                           ;actuators_main.c: 402:             for(int i=0;i<110;i++){
  4198                           
  4199                           ; BSR set to: 1
  4200                           ;actuators_main.c: 397:         if (count_stepper<1){
  4201  002FDC  0E00               	movlw	0
  4202  002FDE  6F04               	movwf	(stepper2@i+1)& (0+255),b
  4203  002FE0  0E00               	movlw	0
  4204  002FE2  6F03               	movwf	stepper2@i& (0+255),b
  4205  002FE4                     l6769:
  4206                           
  4207                           ; BSR set to: 1
  4208                           ;actuators_main.c: 404:                 full_drive(direction, 2);
  4209  002FE4  0E00               	movlw	0
  4210  002FE6  0100               	movlb	0	; () banked
  4211  002FE8  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  4212  002FEA  0E02               	movlw	2
  4213  002FEC  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  4214  002FEE  0101               	movlb	1	; () banked
  4215  002FF0  5100               	movf	stepper2@direction& (0+255),w,b
  4216  002FF2  EC3E  F00A         	call	_full_drive
  4217                           
  4218                           ;actuators_main.c: 406:             }
  4219  002FF6  0101               	movlb	1	; () banked
  4220  002FF8  4B03               	infsnz	stepper2@i& (0+255),f,b
  4221  002FFA  2B04               	incf	(stepper2@i+1)& (0+255),f,b
  4222                           
  4223                           ; BSR set to: 1
  4224  002FFC  BF04               	btfsc	(stepper2@i+1)& (0+255),7,b
  4225  002FFE  D7F2               	goto	l6769
  4226  003000  5104               	movf	(stepper2@i+1)& (0+255),w,b
  4227  003002  E104               	bnz	u7460
  4228  003004  0E6E               	movlw	110
  4229  003006  5D03               	subwf	stepper2@i& (0+255),w,b
  4230  003008  A0D8               	btfss	status,0,c
  4231  00300A  D7EC               	goto	l6769
  4232  00300C                     u7460:
  4233                           
  4234                           ; BSR set to: 1
  4235                           ;actuators_main.c: 407:             printf("cnt is %d", count_stepper);
  4236  00300C  0ED3               	movlw	low STR_46
  4237  00300E  0100               	movlb	0	; () banked
  4238  003010  6FED               	movwf	printf@fmt& (0+255),b
  4239  003012  0EFC               	movlw	high STR_46
  4240  003014  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4241  003016  C101  F0EF         	movff	stepper2@count_stepper,?_printf+2
  4242  00301A  C102  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  4243  00301E  EC66  F01A         	call	_printf	;wreg free
  4244                           
  4245                           ;actuators_main.c: 408:             count_stepper++;
  4246  003022  0101               	movlb	1	; () banked
  4247  003024  4B01               	infsnz	stepper2@count_stepper& (0+255),f,b
  4248  003026  2B02               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  4249                           
  4250                           ; BSR set to: 1
  4251  003028  0012               	return		;funcret
  4252  00302A                     __end_of_stepper2:
  4253                           	opt callstack 0
  4254                           
  4255 ;; *************** function _stepper *****************
  4256 ;; Defined at:
  4257 ;;		line 329 in file "actuators_main.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  stack           2    0[BANK1 ] int 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  i               2    6[BANK1 ] int 
  4262 ;;  i               2    4[BANK1 ] int 
  4263 ;;  count_steppe    2    2[BANK1 ] int 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4273 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;Total ram usage:        8 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:   15
  4280 ;; This function calls:
  4281 ;;		_full_drive
  4282 ;; This function is called by:
  4283 ;;		_actuators_main
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text13
  4288  002DAA                     __ptext13:
  4289                           	opt callstack 0
  4290  002DAA                     _stepper:
  4291                           	opt callstack 14
  4292                           
  4293                           ;actuators_main.c: 330:     int count_stepper = 0;
  4294                           
  4295                           ; BSR set to: 1
  4296                           ;incstack = 0
  4297  002DAA  0E00               	movlw	0
  4298  002DAC  0101               	movlb	1	; () banked
  4299  002DAE  6F03               	movwf	(stepper@count_stepper+1)& (0+255),b
  4300  002DB0  0E00               	movlw	0
  4301  002DB2  6F02               	movwf	stepper@count_stepper& (0+255),b
  4302                           
  4303                           ; BSR set to: 1
  4304                           ;actuators_main.c: 339:             if (stack == 1){
  4305                           
  4306                           ; BSR set to: 1
  4307                           ;actuators_main.c: 333:         if (count_stepper<1){
  4308  002DB4  0500               	decf	stepper@stack& (0+255),w,b
  4309  002DB6  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  4310  002DB8  A4D8               	btfss	status,2,c
  4311  002DBA  D017               	goto	u7430
  4312                           
  4313                           ; BSR set to: 1
  4314                           ;actuators_main.c: 340:                 for(int i=0;i<14;i++){
  4315  002DBC  0E00               	movlw	0
  4316  002DBE  6F05               	movwf	(stepper@i+1)& (0+255),b
  4317  002DC0  0E00               	movlw	0
  4318  002DC2  6F04               	movwf	stepper@i& (0+255),b
  4319  002DC4                     l6737:
  4320                           
  4321                           ; BSR set to: 1
  4322                           ;actuators_main.c: 342:                     full_drive(0, 1);
  4323  002DC4  0E00               	movlw	0
  4324  002DC6  0100               	movlb	0	; () banked
  4325  002DC8  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  4326  002DCA  0E01               	movlw	1
  4327  002DCC  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  4328  002DCE  0E00               	movlw	0
  4329  002DD0  EC3E  F00A         	call	_full_drive
  4330                           
  4331                           ;actuators_main.c: 344:                 }
  4332  002DD4  0101               	movlb	1	; () banked
  4333  002DD6  4B04               	infsnz	stepper@i& (0+255),f,b
  4334  002DD8  2B05               	incf	(stepper@i+1)& (0+255),f,b
  4335                           
  4336                           ; BSR set to: 1
  4337  002DDA  BF05               	btfsc	(stepper@i+1)& (0+255),7,b
  4338  002DDC  D7F3               	goto	l6737
  4339  002DDE  5105               	movf	(stepper@i+1)& (0+255),w,b
  4340  002DE0  E104               	bnz	u7430
  4341  002DE2  0E0E               	movlw	14
  4342  002DE4  5D04               	subwf	stepper@i& (0+255),w,b
  4343  002DE6  A0D8               	btfss	status,0,c
  4344  002DE8  D7ED               	goto	l6737
  4345  002DEA                     u7430:
  4346                           
  4347                           ; BSR set to: 1
  4348                           ;actuators_main.c: 346:             if (stack == 2){
  4349  002DEA  0E02               	movlw	2
  4350  002DEC  1900               	xorwf	stepper@stack& (0+255),w,b
  4351  002DEE  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  4352  002DF0  A4D8               	btfss	status,2,c
  4353  002DF2  D017               	goto	u7450
  4354                           
  4355                           ; BSR set to: 1
  4356                           ;actuators_main.c: 347:                 for(int i=0;i<14;i++){
  4357  002DF4  0E00               	movlw	0
  4358  002DF6  6F07               	movwf	(stepper@i_859+1)& (0+255),b
  4359  002DF8  0E00               	movlw	0
  4360  002DFA  6F06               	movwf	stepper@i_859& (0+255),b
  4361  002DFC                     l6751:
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;actuators_main.c: 348:                     full_drive(0, 3);
  4365  002DFC  0E00               	movlw	0
  4366  002DFE  0100               	movlb	0	; () banked
  4367  002E00  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  4368  002E02  0E03               	movlw	3
  4369  002E04  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  4370  002E06  0E00               	movlw	0
  4371  002E08  EC3E  F00A         	call	_full_drive
  4372                           
  4373                           ;actuators_main.c: 351:                 }
  4374  002E0C  0101               	movlb	1	; () banked
  4375  002E0E  4B06               	infsnz	stepper@i_859& (0+255),f,b
  4376  002E10  2B07               	incf	(stepper@i_859+1)& (0+255),f,b
  4377                           
  4378                           ; BSR set to: 1
  4379  002E12  BF07               	btfsc	(stepper@i_859+1)& (0+255),7,b
  4380  002E14  D7F3               	goto	l6751
  4381  002E16  5107               	movf	(stepper@i_859+1)& (0+255),w,b
  4382  002E18  E104               	bnz	u7450
  4383  002E1A  0E0E               	movlw	14
  4384  002E1C  5D06               	subwf	stepper@i_859& (0+255),w,b
  4385  002E1E  A0D8               	btfss	status,0,c
  4386  002E20  D7ED               	goto	l6751
  4387  002E22                     u7450:
  4388                           
  4389                           ; BSR set to: 1
  4390                           ;actuators_main.c: 354:             count_stepper++;
  4391  002E22  4B02               	infsnz	stepper@count_stepper& (0+255),f,b
  4392  002E24  2B03               	incf	(stepper@count_stepper+1)& (0+255),f,b
  4393                           
  4394                           ; BSR set to: 1
  4395                           
  4396                           ;actuators_main.c: 355:         }
  4397  002E26  0012               	return		;funcret
  4398  002E28                     __end_of_stepper:
  4399                           	opt callstack 0
  4400                           
  4401 ;; *************** function _full_drive *****************
  4402 ;; Defined at:
  4403 ;;		line 462 in file "actuators_main.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  direction       1    wreg     unsigned char 
  4406 ;;  stepper_no      2  121[BANK0 ] int 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  direction       1  124[BANK0 ] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;Total ram usage:        4 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:   14
  4425 ;; This function calls:
  4426 ;;		_printf
  4427 ;; This function is called by:
  4428 ;;		_stepper
  4429 ;;		_stepper2
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text14
  4434  00147C                     __ptext14:
  4435                           	opt callstack 0
  4436  00147C                     _full_drive:
  4437                           	opt callstack 14
  4438                           
  4439                           ; BSR set to: 1
  4440                           ;incstack = 0
  4441                           ;full_drive@direction stored from wreg
  4442  00147C  0100               	movlb	0	; () banked
  4443  00147E  6FFC               	movwf	full_drive@direction& (0+255),b
  4444                           
  4445                           ;actuators_main.c: 463:     if (stepper_no == 1){
  4446  001480  0100               	movlb	0	; () banked
  4447  001482  05F9               	decf	full_drive@stepper_no& (0+255),w,b
  4448  001484  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  4449  001486  A4D8               	btfss	status,2,c
  4450  001488  D075               	goto	l6353
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;actuators_main.c: 464:         if (direction == 1){
  4454  00148A  05FC               	decf	full_drive@direction& (0+255),w,b
  4455  00148C  A4D8               	btfss	status,2,c
  4456  00148E  D037               	goto	l6337
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;actuators_main.c: 465:             LATA = 0b00000011;
  4460  001490  0E03               	movlw	3
  4461  001492  6E89               	movwf	3977,c	;volatile
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;actuators_main.c: 466:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4465  001494  0E21               	movlw	33
  4466  001496  0100               	movlb	0	; () banked
  4467  001498  6FFB               	movwf	??_full_drive& (0+255),b
  4468  00149A  0E76               	movlw	118
  4469  00149C                     u8367:
  4470  00149C  2EE8               	decfsz	wreg,f,c
  4471  00149E  D7FE               	bra	u8367
  4472  0014A0  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4473  0014A2  D7FC               	bra	u8367
  4474  0014A4  F000               	nop	
  4475                           
  4476                           ;actuators_main.c: 467:             LATA = 0b00000110;
  4477  0014A6  0E06               	movlw	6
  4478  0014A8  6E89               	movwf	3977,c	;volatile
  4479                           
  4480                           ;actuators_main.c: 468:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4481  0014AA  0E21               	movlw	33
  4482  0014AC  0100               	movlb	0	; () banked
  4483  0014AE  6FFB               	movwf	??_full_drive& (0+255),b
  4484  0014B0  0E76               	movlw	118
  4485  0014B2                     u8377:
  4486  0014B2  2EE8               	decfsz	wreg,f,c
  4487  0014B4  D7FE               	bra	u8377
  4488  0014B6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4489  0014B8  D7FC               	bra	u8377
  4490  0014BA  F000               	nop	
  4491                           
  4492                           ;actuators_main.c: 469:             LATA = 0b00001100;
  4493  0014BC  0E0C               	movlw	12
  4494  0014BE  6E89               	movwf	3977,c	;volatile
  4495                           
  4496                           ;actuators_main.c: 470:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4497  0014C0  0E21               	movlw	33
  4498  0014C2  0100               	movlb	0	; () banked
  4499  0014C4  6FFB               	movwf	??_full_drive& (0+255),b
  4500  0014C6  0E76               	movlw	118
  4501  0014C8                     u8387:
  4502  0014C8  2EE8               	decfsz	wreg,f,c
  4503  0014CA  D7FE               	bra	u8387
  4504  0014CC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4505  0014CE  D7FC               	bra	u8387
  4506  0014D0  F000               	nop	
  4507                           
  4508                           ;actuators_main.c: 471:             LATA = 0b00001001;
  4509  0014D2  0E09               	movlw	9
  4510  0014D4  6E89               	movwf	3977,c	;volatile
  4511                           
  4512                           ;actuators_main.c: 472:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4513  0014D6  0E21               	movlw	33
  4514  0014D8  0100               	movlb	0	; () banked
  4515  0014DA  6FFB               	movwf	??_full_drive& (0+255),b
  4516  0014DC  0E76               	movlw	118
  4517  0014DE                     u8397:
  4518  0014DE  2EE8               	decfsz	wreg,f,c
  4519  0014E0  D7FE               	bra	u8397
  4520  0014E2  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4521  0014E4  D7FC               	bra	u8397
  4522  0014E6  F000               	nop	
  4523                           
  4524                           ;actuators_main.c: 473:             LATA = 0b00000011;
  4525  0014E8  0E03               	movlw	3
  4526  0014EA  6E89               	movwf	3977,c	;volatile
  4527                           
  4528                           ;actuators_main.c: 474:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4529  0014EC  0E21               	movlw	33
  4530  0014EE  0100               	movlb	0	; () banked
  4531  0014F0  6FFB               	movwf	??_full_drive& (0+255),b
  4532  0014F2  0E76               	movlw	118
  4533  0014F4                     u8407:
  4534  0014F4  2EE8               	decfsz	wreg,f,c
  4535  0014F6  D7FE               	bra	u8407
  4536  0014F8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4537  0014FA  D7FC               	bra	u8407
  4538  0014FC  F000               	nop	
  4539  0014FE                     l6337:
  4540                           
  4541                           ;actuators_main.c: 476:         if (direction == 0){
  4542  0014FE  0100               	movlb	0	; () banked
  4543  001500  51FC               	movf	full_drive@direction& (0+255),w,b
  4544  001502  A4D8               	btfss	status,2,c
  4545  001504  D037               	goto	l6353
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;actuators_main.c: 477:             LATA = 0b00001001;
  4549  001506  0E09               	movlw	9
  4550  001508  6E89               	movwf	3977,c	;volatile
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;actuators_main.c: 478:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4554  00150A  0E21               	movlw	33
  4555  00150C  0100               	movlb	0	; () banked
  4556  00150E  6FFB               	movwf	??_full_drive& (0+255),b
  4557  001510  0E76               	movlw	118
  4558  001512                     u8417:
  4559  001512  2EE8               	decfsz	wreg,f,c
  4560  001514  D7FE               	bra	u8417
  4561  001516  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4562  001518  D7FC               	bra	u8417
  4563  00151A  F000               	nop	
  4564                           
  4565                           ;actuators_main.c: 479:             LATA = 0b00001100;
  4566  00151C  0E0C               	movlw	12
  4567  00151E  6E89               	movwf	3977,c	;volatile
  4568                           
  4569                           ;actuators_main.c: 480:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4570  001520  0E21               	movlw	33
  4571  001522  0100               	movlb	0	; () banked
  4572  001524  6FFB               	movwf	??_full_drive& (0+255),b
  4573  001526  0E76               	movlw	118
  4574  001528                     u8427:
  4575  001528  2EE8               	decfsz	wreg,f,c
  4576  00152A  D7FE               	bra	u8427
  4577  00152C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4578  00152E  D7FC               	bra	u8427
  4579  001530  F000               	nop	
  4580                           
  4581                           ;actuators_main.c: 481:             LATA = 0b00000110;
  4582  001532  0E06               	movlw	6
  4583  001534  6E89               	movwf	3977,c	;volatile
  4584                           
  4585                           ;actuators_main.c: 482:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4586  001536  0E21               	movlw	33
  4587  001538  0100               	movlb	0	; () banked
  4588  00153A  6FFB               	movwf	??_full_drive& (0+255),b
  4589  00153C  0E76               	movlw	118
  4590  00153E                     u8437:
  4591  00153E  2EE8               	decfsz	wreg,f,c
  4592  001540  D7FE               	bra	u8437
  4593  001542  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4594  001544  D7FC               	bra	u8437
  4595  001546  F000               	nop	
  4596                           
  4597                           ;actuators_main.c: 483:             LATA = 0b00000011;
  4598  001548  0E03               	movlw	3
  4599  00154A  6E89               	movwf	3977,c	;volatile
  4600                           
  4601                           ;actuators_main.c: 484:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4602  00154C  0E21               	movlw	33
  4603  00154E  0100               	movlb	0	; () banked
  4604  001550  6FFB               	movwf	??_full_drive& (0+255),b
  4605  001552  0E76               	movlw	118
  4606  001554                     u8447:
  4607  001554  2EE8               	decfsz	wreg,f,c
  4608  001556  D7FE               	bra	u8447
  4609  001558  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4610  00155A  D7FC               	bra	u8447
  4611  00155C  F000               	nop	
  4612                           
  4613                           ;actuators_main.c: 485:             LATA = 0b00001001;
  4614  00155E  0E09               	movlw	9
  4615  001560  6E89               	movwf	3977,c	;volatile
  4616                           
  4617                           ;actuators_main.c: 486:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4618  001562  0E21               	movlw	33
  4619  001564  0100               	movlb	0	; () banked
  4620  001566  6FFB               	movwf	??_full_drive& (0+255),b
  4621  001568  0E76               	movlw	118
  4622  00156A                     u8457:
  4623  00156A  2EE8               	decfsz	wreg,f,c
  4624  00156C  D7FE               	bra	u8457
  4625  00156E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4626  001570  D7FC               	bra	u8457
  4627  001572  F000               	nop	
  4628  001574                     l6353:
  4629                           
  4630                           ;actuators_main.c: 489:     if (stepper_no == 2){
  4631  001574  0E02               	movlw	2
  4632  001576  0100               	movlb	0	; () banked
  4633  001578  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  4634  00157A  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  4635  00157C  A4D8               	btfss	status,2,c
  4636  00157E  D089               	goto	l6431
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;actuators_main.c: 490:         if (direction == 1){
  4640  001580  05FC               	decf	full_drive@direction& (0+255),w,b
  4641  001582  A4D8               	btfss	status,2,c
  4642  001584  D041               	goto	l6393
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;actuators_main.c: 491:             LATCbits.LATC0 = 1;
  4646  001586  808B               	bsf	3979,0,c	;volatile
  4647                           
  4648                           ;actuators_main.c: 492:             LATEbits.LATE0 = 1;
  4649  001588  808D               	bsf	3981,0,c	;volatile
  4650                           
  4651                           ;actuators_main.c: 493:             LATEbits.LATE1 = 0;
  4652  00158A  928D               	bcf	3981,1,c	;volatile
  4653                           
  4654                           ;actuators_main.c: 494:             LATEbits.LATE2 = 0;
  4655  00158C  948D               	bcf	3981,2,c	;volatile
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;actuators_main.c: 495:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4659  00158E  0E14               	movlw	20
  4660  001590  0100               	movlb	0	; () banked
  4661  001592  6FFB               	movwf	??_full_drive& (0+255),b
  4662  001594  0E79               	movlw	121
  4663  001596                     u8467:
  4664  001596  2EE8               	decfsz	wreg,f,c
  4665  001598  D7FE               	bra	u8467
  4666  00159A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4667  00159C  D7FC               	bra	u8467
  4668  00159E  D000               	nop2	
  4669                           
  4670                           ;actuators_main.c: 496:             LATCbits.LATC0 = 0;
  4671  0015A0  908B               	bcf	3979,0,c	;volatile
  4672                           
  4673                           ;actuators_main.c: 497:             LATEbits.LATE0 = 1;
  4674  0015A2  808D               	bsf	3981,0,c	;volatile
  4675                           
  4676                           ;actuators_main.c: 498:             LATEbits.LATE1 = 1;
  4677  0015A4  828D               	bsf	3981,1,c	;volatile
  4678                           
  4679                           ;actuators_main.c: 499:             LATEbits.LATE2 = 0;
  4680  0015A6  948D               	bcf	3981,2,c	;volatile
  4681                           
  4682                           ;actuators_main.c: 500:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4683  0015A8  0E14               	movlw	20
  4684  0015AA  0100               	movlb	0	; () banked
  4685  0015AC  6FFB               	movwf	??_full_drive& (0+255),b
  4686  0015AE  0E79               	movlw	121
  4687  0015B0                     u8477:
  4688  0015B0  2EE8               	decfsz	wreg,f,c
  4689  0015B2  D7FE               	bra	u8477
  4690  0015B4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4691  0015B6  D7FC               	bra	u8477
  4692  0015B8  D000               	nop2	
  4693                           
  4694                           ;actuators_main.c: 501:             LATCbits.LATC0 = 0;
  4695  0015BA  908B               	bcf	3979,0,c	;volatile
  4696                           
  4697                           ;actuators_main.c: 502:             LATEbits.LATE0 = 0;
  4698  0015BC  908D               	bcf	3981,0,c	;volatile
  4699                           
  4700                           ;actuators_main.c: 503:             LATEbits.LATE1 = 1;
  4701  0015BE  828D               	bsf	3981,1,c	;volatile
  4702                           
  4703                           ;actuators_main.c: 504:             LATEbits.LATE2 = 1;
  4704  0015C0  848D               	bsf	3981,2,c	;volatile
  4705                           
  4706                           ;actuators_main.c: 505:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4707  0015C2  0E14               	movlw	20
  4708  0015C4  0100               	movlb	0	; () banked
  4709  0015C6  6FFB               	movwf	??_full_drive& (0+255),b
  4710  0015C8  0E79               	movlw	121
  4711  0015CA                     u8487:
  4712  0015CA  2EE8               	decfsz	wreg,f,c
  4713  0015CC  D7FE               	bra	u8487
  4714  0015CE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4715  0015D0  D7FC               	bra	u8487
  4716  0015D2  D000               	nop2	
  4717                           
  4718                           ;actuators_main.c: 506:             LATCbits.LATC0 = 1;
  4719  0015D4  808B               	bsf	3979,0,c	;volatile
  4720                           
  4721                           ;actuators_main.c: 507:             LATEbits.LATE0 = 0;
  4722  0015D6  908D               	bcf	3981,0,c	;volatile
  4723                           
  4724                           ;actuators_main.c: 508:             LATEbits.LATE1 = 0;
  4725  0015D8  928D               	bcf	3981,1,c	;volatile
  4726                           
  4727                           ;actuators_main.c: 509:             LATEbits.LATE2 = 1;
  4728  0015DA  848D               	bsf	3981,2,c	;volatile
  4729                           
  4730                           ;actuators_main.c: 510:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4731  0015DC  0E14               	movlw	20
  4732  0015DE  0100               	movlb	0	; () banked
  4733  0015E0  6FFB               	movwf	??_full_drive& (0+255),b
  4734  0015E2  0E79               	movlw	121
  4735  0015E4                     u8497:
  4736  0015E4  2EE8               	decfsz	wreg,f,c
  4737  0015E6  D7FE               	bra	u8497
  4738  0015E8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4739  0015EA  D7FC               	bra	u8497
  4740  0015EC  D000               	nop2	
  4741                           
  4742                           ;actuators_main.c: 511:             LATCbits.LATC0 = 1;
  4743  0015EE  808B               	bsf	3979,0,c	;volatile
  4744                           
  4745                           ;actuators_main.c: 512:             LATEbits.LATE0 = 1;
  4746  0015F0  808D               	bsf	3981,0,c	;volatile
  4747                           
  4748                           ;actuators_main.c: 513:             LATEbits.LATE1 = 0;
  4749  0015F2  928D               	bcf	3981,1,c	;volatile
  4750                           
  4751                           ;actuators_main.c: 514:             LATEbits.LATE2 = 0;
  4752  0015F4  948D               	bcf	3981,2,c	;volatile
  4753                           
  4754                           ;actuators_main.c: 515:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4755  0015F6  0E14               	movlw	20
  4756  0015F8  0100               	movlb	0	; () banked
  4757  0015FA  6FFB               	movwf	??_full_drive& (0+255),b
  4758  0015FC  0E79               	movlw	121
  4759  0015FE                     u8507:
  4760  0015FE  2EE8               	decfsz	wreg,f,c
  4761  001600  D7FE               	bra	u8507
  4762  001602  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4763  001604  D7FC               	bra	u8507
  4764  001606  D000               	nop2	
  4765  001608                     l6393:
  4766                           
  4767                           ;actuators_main.c: 517:         if (direction == 0){
  4768  001608  0100               	movlb	0	; () banked
  4769  00160A  51FC               	movf	full_drive@direction& (0+255),w,b
  4770  00160C  A4D8               	btfss	status,2,c
  4771  00160E  D041               	goto	l6431
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;actuators_main.c: 518:             LATCbits.LATC0 = 1;
  4775  001610  808B               	bsf	3979,0,c	;volatile
  4776                           
  4777                           ;actuators_main.c: 519:             LATEbits.LATE0 = 0;
  4778  001612  908D               	bcf	3981,0,c	;volatile
  4779                           
  4780                           ;actuators_main.c: 520:             LATEbits.LATE1 = 0;
  4781  001614  928D               	bcf	3981,1,c	;volatile
  4782                           
  4783                           ;actuators_main.c: 521:             LATEbits.LATE2 = 1;
  4784  001616  848D               	bsf	3981,2,c	;volatile
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;actuators_main.c: 522:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4788  001618  0E14               	movlw	20
  4789  00161A  0100               	movlb	0	; () banked
  4790  00161C  6FFB               	movwf	??_full_drive& (0+255),b
  4791  00161E  0E79               	movlw	121
  4792  001620                     u8517:
  4793  001620  2EE8               	decfsz	wreg,f,c
  4794  001622  D7FE               	bra	u8517
  4795  001624  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4796  001626  D7FC               	bra	u8517
  4797  001628  D000               	nop2	
  4798                           
  4799                           ;actuators_main.c: 523:             LATCbits.LATC0 = 0;
  4800  00162A  908B               	bcf	3979,0,c	;volatile
  4801                           
  4802                           ;actuators_main.c: 524:             LATEbits.LATE0 = 0;
  4803  00162C  908D               	bcf	3981,0,c	;volatile
  4804                           
  4805                           ;actuators_main.c: 525:             LATEbits.LATE1 = 1;
  4806  00162E  828D               	bsf	3981,1,c	;volatile
  4807                           
  4808                           ;actuators_main.c: 526:             LATEbits.LATE2 = 1;
  4809  001630  848D               	bsf	3981,2,c	;volatile
  4810                           
  4811                           ;actuators_main.c: 527:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4812  001632  0E14               	movlw	20
  4813  001634  0100               	movlb	0	; () banked
  4814  001636  6FFB               	movwf	??_full_drive& (0+255),b
  4815  001638  0E79               	movlw	121
  4816  00163A                     u8527:
  4817  00163A  2EE8               	decfsz	wreg,f,c
  4818  00163C  D7FE               	bra	u8527
  4819  00163E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4820  001640  D7FC               	bra	u8527
  4821  001642  D000               	nop2	
  4822                           
  4823                           ;actuators_main.c: 528:             LATCbits.LATC0 = 0;
  4824  001644  908B               	bcf	3979,0,c	;volatile
  4825                           
  4826                           ;actuators_main.c: 529:             LATEbits.LATE0 = 1;
  4827  001646  808D               	bsf	3981,0,c	;volatile
  4828                           
  4829                           ;actuators_main.c: 530:             LATEbits.LATE1 = 1;
  4830  001648  828D               	bsf	3981,1,c	;volatile
  4831                           
  4832                           ;actuators_main.c: 531:             LATEbits.LATE2 = 0;
  4833  00164A  948D               	bcf	3981,2,c	;volatile
  4834                           
  4835                           ;actuators_main.c: 532:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4836  00164C  0E14               	movlw	20
  4837  00164E  0100               	movlb	0	; () banked
  4838  001650  6FFB               	movwf	??_full_drive& (0+255),b
  4839  001652  0E79               	movlw	121
  4840  001654                     u8537:
  4841  001654  2EE8               	decfsz	wreg,f,c
  4842  001656  D7FE               	bra	u8537
  4843  001658  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4844  00165A  D7FC               	bra	u8537
  4845  00165C  D000               	nop2	
  4846                           
  4847                           ;actuators_main.c: 533:             LATCbits.LATC0 = 1;
  4848  00165E  808B               	bsf	3979,0,c	;volatile
  4849                           
  4850                           ;actuators_main.c: 534:             LATEbits.LATE0 = 1;
  4851  001660  808D               	bsf	3981,0,c	;volatile
  4852                           
  4853                           ;actuators_main.c: 535:             LATEbits.LATE1 = 0;
  4854  001662  928D               	bcf	3981,1,c	;volatile
  4855                           
  4856                           ;actuators_main.c: 536:             LATEbits.LATE2 = 0;
  4857  001664  948D               	bcf	3981,2,c	;volatile
  4858                           
  4859                           ;actuators_main.c: 537:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4860  001666  0E14               	movlw	20
  4861  001668  0100               	movlb	0	; () banked
  4862  00166A  6FFB               	movwf	??_full_drive& (0+255),b
  4863  00166C  0E79               	movlw	121
  4864  00166E                     u8547:
  4865  00166E  2EE8               	decfsz	wreg,f,c
  4866  001670  D7FE               	bra	u8547
  4867  001672  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4868  001674  D7FC               	bra	u8547
  4869  001676  D000               	nop2	
  4870                           
  4871                           ;actuators_main.c: 538:             LATCbits.LATC0 = 1;
  4872  001678  808B               	bsf	3979,0,c	;volatile
  4873                           
  4874                           ;actuators_main.c: 539:             LATEbits.LATE0 = 0;
  4875  00167A  908D               	bcf	3981,0,c	;volatile
  4876                           
  4877                           ;actuators_main.c: 540:             LATEbits.LATE1 = 0;
  4878  00167C  928D               	bcf	3981,1,c	;volatile
  4879                           
  4880                           ;actuators_main.c: 541:             LATEbits.LATE2 = 1;
  4881  00167E  848D               	bsf	3981,2,c	;volatile
  4882                           
  4883                           ;actuators_main.c: 542:             _delay((unsigned long)((6)*(10000000/4000.0)));
  4884  001680  0E14               	movlw	20
  4885  001682  0100               	movlb	0	; () banked
  4886  001684  6FFB               	movwf	??_full_drive& (0+255),b
  4887  001686  0E79               	movlw	121
  4888  001688                     u8557:
  4889  001688  2EE8               	decfsz	wreg,f,c
  4890  00168A  D7FE               	bra	u8557
  4891  00168C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4892  00168E  D7FC               	bra	u8557
  4893  001690  D000               	nop2	
  4894  001692                     l6431:
  4895                           
  4896                           ;actuators_main.c: 545:     if (stepper_no == 3){
  4897  001692  0E03               	movlw	3
  4898  001694  0100               	movlb	0	; () banked
  4899  001696  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  4900  001698  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  4901  00169A  A4D8               	btfss	status,2,c
  4902  00169C  0012               	return	
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;actuators_main.c: 546:         printf("what");
  4906  00169E  0E2A               	movlw	low STR_48
  4907  0016A0  6FED               	movwf	printf@fmt& (0+255),b
  4908  0016A2  0EFD               	movlw	high STR_48
  4909  0016A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4910  0016A6  EC66  F01A         	call	_printf	;wreg free
  4911                           
  4912                           ;actuators_main.c: 547:         if (direction == 0){
  4913  0016AA  0100               	movlb	0	; () banked
  4914  0016AC  51FC               	movf	full_drive@direction& (0+255),w,b
  4915  0016AE  A4D8               	btfss	status,2,c
  4916  0016B0  D041               	goto	l6473
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;actuators_main.c: 548:             LATCbits.LATC5 = 1;
  4920  0016B2  8A8B               	bsf	3979,5,c	;volatile
  4921                           
  4922                           ;actuators_main.c: 549:             LATCbits.LATC6 = 0;
  4923  0016B4  9C8B               	bcf	3979,6,c	;volatile
  4924                           
  4925                           ;actuators_main.c: 550:             LATCbits.LATC7 = 0;
  4926  0016B6  9E8B               	bcf	3979,7,c	;volatile
  4927                           
  4928                           ;actuators_main.c: 551:             LATAbits.LATA5 = 1;
  4929  0016B8  8A89               	bsf	3977,5,c	;volatile
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;actuators_main.c: 552:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4933  0016BA  0E21               	movlw	33
  4934  0016BC  0100               	movlb	0	; () banked
  4935  0016BE  6FFB               	movwf	??_full_drive& (0+255),b
  4936  0016C0  0E76               	movlw	118
  4937  0016C2                     u8567:
  4938  0016C2  2EE8               	decfsz	wreg,f,c
  4939  0016C4  D7FE               	bra	u8567
  4940  0016C6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4941  0016C8  D7FC               	bra	u8567
  4942  0016CA  F000               	nop	
  4943                           
  4944                           ;actuators_main.c: 553:             LATCbits.LATC5 = 1;
  4945  0016CC  8A8B               	bsf	3979,5,c	;volatile
  4946                           
  4947                           ;actuators_main.c: 554:             LATCbits.LATC6 = 1;
  4948  0016CE  8C8B               	bsf	3979,6,c	;volatile
  4949                           
  4950                           ;actuators_main.c: 555:             LATCbits.LATC7 = 0;
  4951  0016D0  9E8B               	bcf	3979,7,c	;volatile
  4952                           
  4953                           ;actuators_main.c: 556:             LATAbits.LATA5 = 0;
  4954  0016D2  9A89               	bcf	3977,5,c	;volatile
  4955                           
  4956                           ;actuators_main.c: 557:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4957  0016D4  0E21               	movlw	33
  4958  0016D6  0100               	movlb	0	; () banked
  4959  0016D8  6FFB               	movwf	??_full_drive& (0+255),b
  4960  0016DA  0E76               	movlw	118
  4961  0016DC                     u8577:
  4962  0016DC  2EE8               	decfsz	wreg,f,c
  4963  0016DE  D7FE               	bra	u8577
  4964  0016E0  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4965  0016E2  D7FC               	bra	u8577
  4966  0016E4  F000               	nop	
  4967                           
  4968                           ;actuators_main.c: 558:             LATCbits.LATC5 = 0;
  4969  0016E6  9A8B               	bcf	3979,5,c	;volatile
  4970                           
  4971                           ;actuators_main.c: 559:             LATCbits.LATC6 = 1;
  4972  0016E8  8C8B               	bsf	3979,6,c	;volatile
  4973                           
  4974                           ;actuators_main.c: 560:             LATCbits.LATC7 = 1;
  4975  0016EA  8E8B               	bsf	3979,7,c	;volatile
  4976                           
  4977                           ;actuators_main.c: 561:             LATAbits.LATA5 = 0;
  4978  0016EC  9A89               	bcf	3977,5,c	;volatile
  4979                           
  4980                           ;actuators_main.c: 562:             _delay((unsigned long)((10)*(10000000/4000.0)));
  4981  0016EE  0E21               	movlw	33
  4982  0016F0  0100               	movlb	0	; () banked
  4983  0016F2  6FFB               	movwf	??_full_drive& (0+255),b
  4984  0016F4  0E76               	movlw	118
  4985  0016F6                     u8587:
  4986  0016F6  2EE8               	decfsz	wreg,f,c
  4987  0016F8  D7FE               	bra	u8587
  4988  0016FA  2FFB               	decfsz	??_full_drive& (0+255),f,b
  4989  0016FC  D7FC               	bra	u8587
  4990  0016FE  F000               	nop	
  4991                           
  4992                           ;actuators_main.c: 563:             LATCbits.LATC5 = 0;
  4993  001700  9A8B               	bcf	3979,5,c	;volatile
  4994                           
  4995                           ;actuators_main.c: 564:             LATCbits.LATC6 = 0;
  4996  001702  9C8B               	bcf	3979,6,c	;volatile
  4997                           
  4998                           ;actuators_main.c: 565:             LATCbits.LATC7 = 1;
  4999  001704  8E8B               	bsf	3979,7,c	;volatile
  5000                           
  5001                           ;actuators_main.c: 566:             LATAbits.LATA5 = 1;
  5002  001706  8A89               	bsf	3977,5,c	;volatile
  5003                           
  5004                           ;actuators_main.c: 567:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5005  001708  0E21               	movlw	33
  5006  00170A  0100               	movlb	0	; () banked
  5007  00170C  6FFB               	movwf	??_full_drive& (0+255),b
  5008  00170E  0E76               	movlw	118
  5009  001710                     u8597:
  5010  001710  2EE8               	decfsz	wreg,f,c
  5011  001712  D7FE               	bra	u8597
  5012  001714  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5013  001716  D7FC               	bra	u8597
  5014  001718  F000               	nop	
  5015                           
  5016                           ;actuators_main.c: 568:             LATCbits.LATC5 = 1;
  5017  00171A  8A8B               	bsf	3979,5,c	;volatile
  5018                           
  5019                           ;actuators_main.c: 569:             LATCbits.LATC6 = 0;
  5020  00171C  9C8B               	bcf	3979,6,c	;volatile
  5021                           
  5022                           ;actuators_main.c: 570:             LATCbits.LATC7 = 0;
  5023  00171E  9E8B               	bcf	3979,7,c	;volatile
  5024                           
  5025                           ;actuators_main.c: 571:             LATAbits.LATA5 = 1;
  5026  001720  8A89               	bsf	3977,5,c	;volatile
  5027                           
  5028                           ;actuators_main.c: 572:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5029  001722  0E21               	movlw	33
  5030  001724  0100               	movlb	0	; () banked
  5031  001726  6FFB               	movwf	??_full_drive& (0+255),b
  5032  001728  0E76               	movlw	118
  5033  00172A                     u8607:
  5034  00172A  2EE8               	decfsz	wreg,f,c
  5035  00172C  D7FE               	bra	u8607
  5036  00172E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5037  001730  D7FC               	bra	u8607
  5038  001732  F000               	nop	
  5039  001734                     l6473:
  5040                           
  5041                           ;actuators_main.c: 574:         if (direction == 1){
  5042  001734  0100               	movlb	0	; () banked
  5043  001736  05FC               	decf	full_drive@direction& (0+255),w,b
  5044  001738  A4D8               	btfss	status,2,c
  5045  00173A  0012               	return	
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;actuators_main.c: 575:             LATCbits.LATC5 = 1;
  5049  00173C  8A8B               	bsf	3979,5,c	;volatile
  5050                           
  5051                           ;actuators_main.c: 576:             LATCbits.LATC6 = 1;
  5052  00173E  8C8B               	bsf	3979,6,c	;volatile
  5053                           
  5054                           ;actuators_main.c: 577:             LATCbits.LATC7 = 0;
  5055  001740  9E8B               	bcf	3979,7,c	;volatile
  5056                           
  5057                           ;actuators_main.c: 578:             LATAbits.LATA5 = 0;
  5058  001742  9A89               	bcf	3977,5,c	;volatile
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;actuators_main.c: 579:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5062  001744  0E21               	movlw	33
  5063  001746  0100               	movlb	0	; () banked
  5064  001748  6FFB               	movwf	??_full_drive& (0+255),b
  5065  00174A  0E76               	movlw	118
  5066  00174C                     u8617:
  5067  00174C  2EE8               	decfsz	wreg,f,c
  5068  00174E  D7FE               	bra	u8617
  5069  001750  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5070  001752  D7FC               	bra	u8617
  5071  001754  F000               	nop	
  5072                           
  5073                           ;actuators_main.c: 580:             LATCbits.LATC5 = 0;
  5074  001756  9A8B               	bcf	3979,5,c	;volatile
  5075                           
  5076                           ;actuators_main.c: 581:             LATCbits.LATC6 = 1;
  5077  001758  8C8B               	bsf	3979,6,c	;volatile
  5078                           
  5079                           ;actuators_main.c: 582:             LATCbits.LATC7 = 1;
  5080  00175A  8E8B               	bsf	3979,7,c	;volatile
  5081                           
  5082                           ;actuators_main.c: 583:             LATAbits.LATA5 = 0;
  5083  00175C  9A89               	bcf	3977,5,c	;volatile
  5084                           
  5085                           ;actuators_main.c: 584:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5086  00175E  0E21               	movlw	33
  5087  001760  0100               	movlb	0	; () banked
  5088  001762  6FFB               	movwf	??_full_drive& (0+255),b
  5089  001764  0E76               	movlw	118
  5090  001766                     u8627:
  5091  001766  2EE8               	decfsz	wreg,f,c
  5092  001768  D7FE               	bra	u8627
  5093  00176A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5094  00176C  D7FC               	bra	u8627
  5095  00176E  F000               	nop	
  5096                           
  5097                           ;actuators_main.c: 585:             LATCbits.LATC5 = 0;
  5098  001770  9A8B               	bcf	3979,5,c	;volatile
  5099                           
  5100                           ;actuators_main.c: 586:             LATCbits.LATC6 = 0;
  5101  001772  9C8B               	bcf	3979,6,c	;volatile
  5102                           
  5103                           ;actuators_main.c: 587:             LATCbits.LATC7 = 1;
  5104  001774  8E8B               	bsf	3979,7,c	;volatile
  5105                           
  5106                           ;actuators_main.c: 588:             LATAbits.LATA5 = 1;
  5107  001776  8A89               	bsf	3977,5,c	;volatile
  5108                           
  5109                           ;actuators_main.c: 589:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5110  001778  0E21               	movlw	33
  5111  00177A  0100               	movlb	0	; () banked
  5112  00177C  6FFB               	movwf	??_full_drive& (0+255),b
  5113  00177E  0E76               	movlw	118
  5114  001780                     u8637:
  5115  001780  2EE8               	decfsz	wreg,f,c
  5116  001782  D7FE               	bra	u8637
  5117  001784  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5118  001786  D7FC               	bra	u8637
  5119  001788  F000               	nop	
  5120                           
  5121                           ;actuators_main.c: 590:             LATCbits.LATC5 = 1;
  5122  00178A  8A8B               	bsf	3979,5,c	;volatile
  5123                           
  5124                           ;actuators_main.c: 591:             LATCbits.LATC6 = 0;
  5125  00178C  9C8B               	bcf	3979,6,c	;volatile
  5126                           
  5127                           ;actuators_main.c: 592:             LATCbits.LATC7 = 0;
  5128  00178E  9E8B               	bcf	3979,7,c	;volatile
  5129                           
  5130                           ;actuators_main.c: 593:             LATAbits.LATA5 = 1;
  5131  001790  8A89               	bsf	3977,5,c	;volatile
  5132                           
  5133                           ;actuators_main.c: 594:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5134  001792  0E21               	movlw	33
  5135  001794  0100               	movlb	0	; () banked
  5136  001796  6FFB               	movwf	??_full_drive& (0+255),b
  5137  001798  0E76               	movlw	118
  5138  00179A                     u8647:
  5139  00179A  2EE8               	decfsz	wreg,f,c
  5140  00179C  D7FE               	bra	u8647
  5141  00179E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5142  0017A0  D7FC               	bra	u8647
  5143  0017A2  F000               	nop	
  5144                           
  5145                           ;actuators_main.c: 595:             LATCbits.LATC5 = 1;
  5146  0017A4  8A8B               	bsf	3979,5,c	;volatile
  5147                           
  5148                           ;actuators_main.c: 596:             LATCbits.LATC6 = 1;
  5149  0017A6  8C8B               	bsf	3979,6,c	;volatile
  5150                           
  5151                           ;actuators_main.c: 597:             LATCbits.LATC7 = 0;
  5152  0017A8  9E8B               	bcf	3979,7,c	;volatile
  5153                           
  5154                           ;actuators_main.c: 598:             LATAbits.LATA5 = 0;
  5155  0017AA  9A89               	bcf	3977,5,c	;volatile
  5156                           
  5157                           ;actuators_main.c: 599:             _delay((unsigned long)((10)*(10000000/4000.0)));
  5158  0017AC  0E21               	movlw	33
  5159  0017AE  0100               	movlb	0	; () banked
  5160  0017B0  6FFB               	movwf	??_full_drive& (0+255),b
  5161  0017B2  0E76               	movlw	118
  5162  0017B4                     u8657:
  5163  0017B4  2EE8               	decfsz	wreg,f,c
  5164  0017B6  D7FE               	bra	u8657
  5165  0017B8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5166  0017BA  D7FC               	bra	u8657
  5167  0017BC  F000               	nop	
  5168  0017BE  0012               	return		;funcret
  5169  0017C0                     __end_of_full_drive:
  5170                           	opt callstack 0
  5171                           
  5172 ;; *************** function _servo *****************
  5173 ;; Defined at:
  5174 ;;		line 312 in file "actuators_main.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;		None
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      void 
  5181 ;; Registers used:
  5182 ;;		wreg, status,2, status,0, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;Total ram usage:        2 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    4
  5195 ;; This function calls:
  5196 ;;		_servoRotate0
  5197 ;;		_servoRotate180
  5198 ;; This function is called by:
  5199 ;;		_actuators_main
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text15
  5204  0034A4                     __ptext15:
  5205                           	opt callstack 0
  5206  0034A4                     _servo:
  5207                           	opt callstack 25
  5208                           
  5209                           ;actuators_main.c: 315:   {;actuators_main.c: 317:     servoRotate0();
  5210                           
  5211                           ;incstack = 0
  5212  0034A4  ECEA  F018         	call	_servoRotate0	;wreg free
  5213                           
  5214                           ;actuators_main.c: 321:     servoRotate180();
  5215  0034A8  EC6D  F018         	call	_servoRotate180	;wreg free
  5216                           
  5217                           ;actuators_main.c: 323:     _delay((unsigned long)((500)*(10000000/4000.0)));
  5218  0034AC  0E07               	movlw	7
  5219  0034AE  0100               	movlb	0	; () banked
  5220  0034B0  6F84               	movwf	(??_servo+1)& (0+255),b
  5221  0034B2  0E58               	movlw	88
  5222  0034B4  6F83               	movwf	??_servo& (0+255),b
  5223  0034B6  0E59               	movlw	89
  5224  0034B8                     u8667:
  5225  0034B8  2EE8               	decfsz	wreg,f,c
  5226  0034BA  D7FE               	bra	u8667
  5227  0034BC  2F83               	decfsz	??_servo& (0+255),f,b
  5228  0034BE  D7FC               	bra	u8667
  5229  0034C0  2F84               	decfsz	(??_servo+1)& (0+255),f,b
  5230  0034C2  D7FA               	bra	u8667
  5231  0034C4  D000               	nop2	
  5232                           
  5233                           ;actuators_main.c: 324:     servoRotate0();
  5234  0034C6  ECEA  F018         	call	_servoRotate0	;wreg free
  5235  0034CA  0012               	return		;funcret
  5236  0034CC                     __end_of_servo:
  5237                           	opt callstack 0
  5238                           
  5239 ;; *************** function _servoRotate180 *****************
  5240 ;; Defined at:
  5241 ;;		line 286 in file "actuators_main.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  i               2    1[BANK0 ] unsigned int 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      void 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;Total ram usage:        3 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    3
  5262 ;; This function calls:
  5263 ;;		Nothing
  5264 ;; This function is called by:
  5265 ;;		_servo
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text16
  5270  0030DA                     __ptext16:
  5271                           	opt callstack 0
  5272  0030DA                     _servoRotate180:
  5273                           	opt callstack 25
  5274                           
  5275                           ;actuators_main.c: 288:   unsigned int i;;actuators_main.c: 290:     for(i=0;i<40;i++)
  5276                           
  5277                           ;incstack = 0
  5278  0030DA  0E00               	movlw	0
  5279  0030DC  0100               	movlb	0	; () banked
  5280  0030DE  6F82               	movwf	(servoRotate180@i+1)& (0+255),b
  5281  0030E0  0E00               	movlw	0
  5282  0030E2  6F81               	movwf	servoRotate180@i& (0+255),b
  5283  0030E4                     l482:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;actuators_main.c: 291:         {;actuators_main.c: 292:           RC1 = 1;
  5287  0030E4  8282               	bsf	3970,1,c	;volatile
  5288                           
  5289                           ;actuators_main.c: 293:           RC2 = 1;
  5290  0030E6  8482               	bsf	3970,2,c	;volatile
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;actuators_main.c: 295:           _delay((unsigned long)((420)*(10000000/4000000.0)));
  5294  0030E8  0ED2               	movlw	210
  5295  0030EA                     u8677:
  5296  0030EA  D000               	nop2	
  5297  0030EC  2EE8               	decfsz	wreg,f,c
  5298  0030EE  D7FD               	bra	u8677
  5299                           
  5300                           ;actuators_main.c: 296:           RC2 =0;
  5301  0030F0  9482               	bcf	3970,2,c	;volatile
  5302                           
  5303                           ;actuators_main.c: 297:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  5304  0030F2  0E07               	movlw	7
  5305  0030F4  0100               	movlb	0	; () banked
  5306  0030F6  6F80               	movwf	??_servoRotate180& (0+255),b
  5307  0030F8  0ED0               	movlw	208
  5308  0030FA                     u8687:
  5309  0030FA  2EE8               	decfsz	wreg,f,c
  5310  0030FC  D7FE               	bra	u8687
  5311  0030FE  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  5312  003100  D7FC               	bra	u8687
  5313  003102  F000               	nop	
  5314                           
  5315                           ;actuators_main.c: 298:           RC1 = 0;
  5316  003104  9282               	bcf	3970,1,c	;volatile
  5317                           
  5318                           ;actuators_main.c: 299:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  5319  003106  0E2C               	movlw	44
  5320  003108  0100               	movlb	0	; () banked
  5321  00310A  6F80               	movwf	??_servoRotate180& (0+255),b
  5322  00310C  0EFD               	movlw	253
  5323  00310E                     u8697:
  5324  00310E  2EE8               	decfsz	wreg,f,c
  5325  003110  D7FE               	bra	u8697
  5326  003112  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  5327  003114  D7FC               	bra	u8697
  5328  003116  F000               	nop	
  5329                           
  5330                           ;actuators_main.c: 300:         }
  5331  003118  0100               	movlb	0	; () banked
  5332  00311A  4B81               	infsnz	servoRotate180@i& (0+255),f,b
  5333  00311C  2B82               	incf	(servoRotate180@i+1)& (0+255),f,b
  5334  00311E  5182               	movf	(servoRotate180@i+1)& (0+255),w,b
  5335  003120  E105               	bnz	u6970
  5336  003122  0E28               	movlw	40
  5337  003124  5D81               	subwf	servoRotate180@i& (0+255),w,b
  5338  003126  B0D8               	btfsc	status,0,c
  5339  003128  0012               	return	
  5340  00312A  D7DC               	goto	l482
  5341  00312C                     u6970:
  5342                           
  5343                           ; BSR set to: 0
  5344  00312C  0012               	return		;funcret
  5345  00312E                     __end_of_servoRotate180:
  5346                           	opt callstack 0
  5347                           
  5348 ;; *************** function _servoRotate0 *****************
  5349 ;; Defined at:
  5350 ;;		line 248 in file "actuators_main.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  i               2    1[BANK0 ] unsigned int 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;Total ram usage:        3 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    3
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_servo
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text17
  5379  0031D4                     __ptext17:
  5380                           	opt callstack 0
  5381  0031D4                     _servoRotate0:
  5382                           	opt callstack 25
  5383                           
  5384                           ;actuators_main.c: 250:     unsigned int i;;actuators_main.c: 252:       for(i=0;i<40;i+
      +                          +)
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;incstack = 0
  5388  0031D4  0E00               	movlw	0
  5389  0031D6  0100               	movlb	0	; () banked
  5390  0031D8  6F82               	movwf	(servoRotate0@i+1)& (0+255),b
  5391  0031DA  0E00               	movlw	0
  5392  0031DC  6F81               	movwf	servoRotate0@i& (0+255),b
  5393  0031DE                     l477:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;actuators_main.c: 253:           {;actuators_main.c: 255:             RC1 = 1;
  5397  0031DE  8282               	bsf	3970,1,c	;volatile
  5398                           
  5399                           ;actuators_main.c: 256:             RC2 = 1;
  5400  0031E0  8482               	bsf	3970,2,c	;volatile
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;actuators_main.c: 257:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  5404  0031E2  0E04               	movlw	4
  5405  0031E4  0100               	movlb	0	; () banked
  5406  0031E6  6F80               	movwf	??_servoRotate0& (0+255),b
  5407  0031E8  0E91               	movlw	145
  5408  0031EA                     u8707:
  5409  0031EA  2EE8               	decfsz	wreg,f,c
  5410  0031EC  D7FE               	bra	u8707
  5411  0031EE  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  5412  0031F0  D7FC               	bra	u8707
  5413                           
  5414                           ;actuators_main.c: 258:             RC2 = 0;
  5415  0031F2  9482               	bcf	3970,2,c	;volatile
  5416                           
  5417                           ;actuators_main.c: 259:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  5418  0031F4  0EFA               	movlw	250
  5419  0031F6                     u8717:
  5420  0031F6  2EE8               	decfsz	wreg,f,c
  5421  0031F8  D7FE               	bra	u8717
  5422                           
  5423                           ;actuators_main.c: 260:             RC1 = 0;
  5424  0031FA  9282               	bcf	3970,1,c	;volatile
  5425                           
  5426                           ;actuators_main.c: 264:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  5427  0031FC  0E3D               	movlw	61
  5428  0031FE  0100               	movlb	0	; () banked
  5429  003200  6F80               	movwf	??_servoRotate0& (0+255),b
  5430  003202  0E62               	movlw	98
  5431  003204                     u8727:
  5432  003204  2EE8               	decfsz	wreg,f,c
  5433  003206  D7FE               	bra	u8727
  5434  003208  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  5435  00320A  D7FC               	bra	u8727
  5436  00320C  F000               	nop	
  5437                           
  5438                           ;actuators_main.c: 274:           }
  5439  00320E  0100               	movlb	0	; () banked
  5440  003210  4B81               	infsnz	servoRotate0@i& (0+255),f,b
  5441  003212  2B82               	incf	(servoRotate0@i+1)& (0+255),f,b
  5442  003214  5182               	movf	(servoRotate0@i+1)& (0+255),w,b
  5443  003216  E105               	bnz	u6960
  5444  003218  0E28               	movlw	40
  5445  00321A  5D81               	subwf	servoRotate0@i& (0+255),w,b
  5446  00321C  B0D8               	btfsc	status,0,c
  5447  00321E  0012               	return	
  5448  003220  D7DE               	goto	l477
  5449  003222                     u6960:
  5450                           
  5451                           ; BSR set to: 0
  5452  003222  0012               	return		;funcret
  5453  003224                     __end_of_servoRotate0:
  5454                           	opt callstack 0
  5455                           
  5456 ;; *************** function _UI_main *****************
  5457 ;; Defined at:
  5458 ;;		line 424 in file "main.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  t_dep           2  121[BANK0 ] int 
  5461 ;;  poles_detect    2  123[BANK0 ] int 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  i               1   89[BANK1 ] unsigned char 
  5464 ;;  keypress        1   84[BANK1 ] unsigned char 
  5465 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  5466 ;;  tick            4   85[BANK1 ] unsigned long 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5476 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;Total ram usage:       94 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:   14
  5483 ;; This function calls:
  5484 ;;		_I2C_Master_Init
  5485 ;;		_I2C_Master_Read
  5486 ;;		_I2C_Master_Start
  5487 ;;		_I2C_Master_Stop
  5488 ;;		_I2C_Master_Write
  5489 ;;		___llmod
  5490 ;;		_initLCD
  5491 ;;		_lcdInst
  5492 ;;		_printf
  5493 ;;		_timer_main
  5494 ;; This function is called by:
  5495 ;;		_main
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text18
  5500  000012                     __ptext18:
  5501                           	opt callstack 0
  5502  000012                     _UI_main:
  5503                           	opt callstack 16
  5504                           
  5505                           ;main.c: 425:     sens = 0;
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;incstack = 0
  5509  000012  0E00               	movlw	0
  5510  000014  6E61               	movwf	_sens+1,c	;volatile
  5511  000016  0E00               	movlw	0
  5512  000018  6E60               	movwf	_sens,c	;volatile
  5513                           
  5514                           ;main.c: 430:     LATD = 0x00;
  5515  00001A  0E00               	movlw	0
  5516  00001C  6E8C               	movwf	3980,c	;volatile
  5517                           
  5518                           ;main.c: 431:     TRISD = 0x00;
  5519  00001E  0E00               	movlw	0
  5520  000020  6E95               	movwf	3989,c	;volatile
  5521                           
  5522                           ;main.c: 434:     TRISD = 0x00;
  5523  000022  0E00               	movlw	0
  5524  000024  6E95               	movwf	3989,c	;volatile
  5525                           
  5526                           ;main.c: 437:     INT1IE = 1;
  5527  000026  86F0               	bsf	4080,3,c	;volatile
  5528                           
  5529                           ;main.c: 440:     initLCD();
  5530  000028  EC14  F017         	call	_initLCD	;wreg free
  5531                           
  5532                           ;main.c: 443:     (INTCONbits.GIE = 1);
  5533  00002C  8EF2               	bsf	4082,7,c	;volatile
  5534                           
  5535                           ;main.c: 445:     I2C_Master_Init(100000);
  5536  00002E  0EA0               	movlw	160
  5537  000030  0100               	movlb	0	; () banked
  5538  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  5539  000034  0E86               	movlw	134
  5540  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  5541  000038  0E01               	movlw	1
  5542  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  5543  00003C  0E00               	movlw	0
  5544  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  5545  000040  ECB7  F017         	call	_I2C_Master_Init	;wreg free
  5546                           
  5547                           ;main.c: 446:     I2C_Master_Start();
  5548  000044  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  5549                           
  5550                           ;main.c: 447:     I2C_Master_Write(0b00010000);
  5551  000048  0E00               	movlw	0
  5552  00004A  0100               	movlb	0	; () banked
  5553  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5554  00004E  0E10               	movlw	16
  5555  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5556  000052  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  5557                           
  5558                           ;main.c: 448:     I2C_Master_Stop();
  5559  000056  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  5560                           
  5561                           ;main.c: 458:     if((pressed == 0)&&(sens==0)){
  5562  00005A  0101               	movlb	1	; () banked
  5563  00005C  5193               	movf	_pressed& (0+255),w,b
  5564  00005E  1194               	iorwf	(_pressed+1)& (0+255),w,b
  5565  000060  A4D8               	btfss	status,2,c
  5566  000062  D3CC               	goto	u7980
  5567                           
  5568                           ; BSR set to: 1
  5569  000064  5060               	movf	_sens,w,c	;volatile
  5570  000066  1061               	iorwf	_sens+1,w,c	;volatile
  5571  000068  A4D8               	btfss	status,2,c
  5572  00006A  D3C8               	goto	u7980
  5573                           
  5574                           ; BSR set to: 1
  5575                           ;main.c: 459:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  5576  00006C  0E01               	movlw	1
  5577  00006E  ECF5  F01A         	call	_lcdInst
  5578  000072  0E11               	movlw	17
  5579  000074  0101               	movlb	1	; () banked
  5580  000076  6F00               	movwf	??_UI_main& (0+255),b
  5581  000078  0E3A               	movlw	58
  5582  00007A                     u8737:
  5583  00007A  2EE8               	decfsz	wreg,f,c
  5584  00007C  D7FE               	bra	u8737
  5585  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  5586  000080  D7FC               	bra	u8737
  5587  000082  F000               	nop	
  5588                           
  5589                           ;main.c: 460:         printf("1 - Start");
  5590  000084  0E0F               	movlw	low STR_11
  5591  000086  0100               	movlb	0	; () banked
  5592  000088  6FED               	movwf	printf@fmt& (0+255),b
  5593  00008A  0EFD               	movlw	high STR_11
  5594  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5595  00008E  EC66  F01A         	call	_printf	;wreg free
  5596  000092  0EC0               	movlw	192
  5597  000094  ECF5  F01A         	call	_lcdInst
  5598                           
  5599                           ;main.c: 462:         printf("2 - Summary");
  5600  000098  0EB1               	movlw	low STR_12
  5601  00009A  0100               	movlb	0	; () banked
  5602  00009C  6FED               	movwf	printf@fmt& (0+255),b
  5603  00009E  0EFC               	movlw	high STR_12
  5604  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5605  0000A2  EC66  F01A         	call	_printf	;wreg free
  5606  0000A6  0E90               	movlw	144
  5607  0000A8  ECF5  F01A         	call	_lcdInst
  5608                           
  5609                           ;main.c: 464:         printf("3 - Date&Time ");
  5610  0000AC  0E26               	movlw	low STR_13
  5611  0000AE  0100               	movlb	0	; () banked
  5612  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  5613  0000B2  0EFC               	movlw	high STR_13
  5614  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5615  0000B6  EC66  F01A         	call	_printf	;wreg free
  5616  0000BA  D3A0               	goto	u7980
  5617  0000BC                     l6991:
  5618                           
  5619                           ;main.c: 475:         if (send){
  5620  0000BC  506D               	movf	_send,w,c
  5621  0000BE  B4D8               	btfsc	status,2,c
  5622  0000C0  D39D               	goto	u7980
  5623                           
  5624                           ;main.c: 476:         if(key_was_pressed){
  5625  0000C2  0101               	movlb	1	; () banked
  5626  0000C4  519D               	movf	_key_was_pressed& (0+255),w,b	;volatile
  5627  0000C6  B4D8               	btfsc	status,2,c
  5628  0000C8  D399               	goto	u7980
  5629                           
  5630                           ; BSR set to: 1
  5631                           ;main.c: 477:             pressed = 1;
  5632  0000CA  0E00               	movlw	0
  5633  0000CC  6F94               	movwf	(_pressed+1)& (0+255),b
  5634  0000CE  0E01               	movlw	1
  5635  0000D0  6F93               	movwf	_pressed& (0+255),b
  5636                           
  5637                           ;main.c: 478:             key_was_pressed = 0;
  5638  0000D2  0E00               	movlw	0
  5639  0000D4  6F9D               	movwf	_key_was_pressed& (0+255),b	;volatile
  5640                           
  5641                           ; BSR set to: 1
  5642                           ;main.c: 479:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  5643  0000D6  3881               	swapf	3969,w,c	;volatile
  5644  0000D8  0B0F               	andlw	15
  5645  0000DA  0B0F               	andlw	15
  5646  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  5647                           
  5648                           ; BSR set to: 1
  5649                           ;main.c: 480:             temp = keys[keypress];
  5650  0000DE  0E67               	movlw	low _keys
  5651  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  5652  0000E2  6EF6               	movwf	tblptrl,c
  5653  0000E4  6AF7               	clrf	tblptrh,c
  5654  0000E6  0EFB               	movlw	high _keys
  5655  0000E8  22F7               	addwfc	tblptrh,f,c
  5656  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  5657  0000EA                     	endif
  5658  0000EA  0008               	tblrd		*
  5659  0000EC  CFF5 F0FF          	movff	tablat,_temp
  5660                           
  5661                           ; BSR set to: 1
  5662                           ;main.c: 481:             temp_int = (temp-'0');
  5663  0000F0  0ED0               	movlw	208
  5664  0000F2  0100               	movlb	0	; () banked
  5665  0000F4  25FF               	addwf	_temp& (0+255),w,b
  5666  0000F6  0101               	movlb	1	; () banked
  5667  0000F8  6F99               	movwf	_temp_int& (0+255),b
  5668  0000FA  6B9A               	clrf	(_temp_int+1)& (0+255),b
  5669  0000FC  0EFF               	movlw	255
  5670  0000FE  239A               	addwfc	(_temp_int+1)& (0+255),f,b
  5671                           
  5672                           ; BSR set to: 1
  5673                           ;main.c: 483:             if (temp_int == 0){
  5674  000100  5199               	movf	_temp_int& (0+255),w,b
  5675  000102  119A               	iorwf	(_temp_int+1)& (0+255),w,b
  5676  000104  A4D8               	btfss	status,2,c
  5677  000106  D02B               	goto	l7021
  5678                           
  5679                           ; BSR set to: 1
  5680                           ;main.c: 484:                 state = 0;
  5681  000108  0E00               	movlw	0
  5682  00010A  6F98               	movwf	(_state+1)& (0+255),b
  5683  00010C  0E00               	movlw	0
  5684  00010E  6F97               	movwf	_state& (0+255),b
  5685                           
  5686                           ; BSR set to: 1
  5687                           ;main.c: 485:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  5688  000110  0E01               	movlw	1
  5689  000112  ECF5  F01A         	call	_lcdInst
  5690  000116  0E11               	movlw	17
  5691  000118  0101               	movlb	1	; () banked
  5692  00011A  6F00               	movwf	??_UI_main& (0+255),b
  5693  00011C  0E3A               	movlw	58
  5694  00011E                     u8747:
  5695  00011E  2EE8               	decfsz	wreg,f,c
  5696  000120  D7FE               	bra	u8747
  5697  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  5698  000124  D7FC               	bra	u8747
  5699  000126  F000               	nop	
  5700                           
  5701                           ;main.c: 486:                 printf("1 - Start");
  5702  000128  0E0F               	movlw	low STR_11
  5703  00012A  0100               	movlb	0	; () banked
  5704  00012C  6FED               	movwf	printf@fmt& (0+255),b
  5705  00012E  0EFD               	movlw	high STR_11
  5706  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5707  000132  EC66  F01A         	call	_printf	;wreg free
  5708  000136  0EC0               	movlw	192
  5709  000138  ECF5  F01A         	call	_lcdInst
  5710                           
  5711                           ;main.c: 488:                 printf("2 - Summary");
  5712  00013C  0EB1               	movlw	low STR_12
  5713  00013E  0100               	movlb	0	; () banked
  5714  000140  6FED               	movwf	printf@fmt& (0+255),b
  5715  000142  0EFC               	movlw	high STR_12
  5716  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5717  000146  EC66  F01A         	call	_printf	;wreg free
  5718  00014A  0E90               	movlw	144
  5719  00014C  ECF5  F01A         	call	_lcdInst
  5720                           
  5721                           ;main.c: 490:                 printf("3 - Date&Time ");
  5722  000150  0E26               	movlw	low STR_13
  5723  000152  0100               	movlb	0	; () banked
  5724  000154  6FED               	movwf	printf@fmt& (0+255),b
  5725  000156  0EFC               	movlw	high STR_13
  5726  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5727  00015A  EC66  F01A         	call	_printf	;wreg free
  5728  00015E                     l7021:
  5729                           
  5730                           ;main.c: 493:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  5731  00015E  0101               	movlb	1	; () banked
  5732  000160  0599               	decf	_temp_int& (0+255),w,b
  5733  000162  119A               	iorwf	(_temp_int+1)& (0+255),w,b
  5734  000164  A4D8               	btfss	status,2,c
  5735  000166  D043               	goto	l7051
  5736                           
  5737                           ; BSR set to: 1
  5738  000168  0E2A               	movlw	42
  5739  00016A  0100               	movlb	0	; () banked
  5740  00016C  19FF               	xorwf	_temp& (0+255),w,b
  5741  00016E  B4D8               	btfsc	status,2,c
  5742  000170  D03E               	goto	l7051
  5743                           
  5744                           ; BSR set to: 0
  5745  000172  0E23               	movlw	35
  5746  000174  19FF               	xorwf	_temp& (0+255),w,b
  5747  000176  B4D8               	btfsc	status,2,c
  5748  000178  D03A               	goto	l7051
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;main.c: 494:                 state = 0;
  5752  00017A  0E00               	movlw	0
  5753  00017C  0101               	movlb	1	; () banked
  5754  00017E  6F98               	movwf	(_state+1)& (0+255),b
  5755  000180  0E00               	movlw	0
  5756  000182  6F97               	movwf	_state& (0+255),b
  5757                           
  5758                           ; BSR set to: 1
  5759                           ;main.c: 495:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  5760  000184  0E01               	movlw	1
  5761  000186  ECF5  F01A         	call	_lcdInst
  5762  00018A  0E11               	movlw	17
  5763  00018C  0101               	movlb	1	; () banked
  5764  00018E  6F00               	movwf	??_UI_main& (0+255),b
  5765  000190  0E3A               	movlw	58
  5766  000192                     u8757:
  5767  000192  2EE8               	decfsz	wreg,f,c
  5768  000194  D7FE               	bra	u8757
  5769  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  5770  000198  D7FC               	bra	u8757
  5771  00019A  F000               	nop	
  5772                           
  5773                           ;main.c: 496:                 printf("Machine In Use");
  5774  00019C  0E44               	movlw	low STR_17
  5775  00019E  0100               	movlb	0	; () banked
  5776  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  5777  0001A2  0EFC               	movlw	high STR_17
  5778  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5779  0001A6  EC66  F01A         	call	_printf	;wreg free
  5780  0001AA  0ED0               	movlw	208
  5781  0001AC  ECF5  F01A         	call	_lcdInst
  5782                           
  5783                           ;main.c: 498:                 printf("     0-Menu     ");
  5784  0001B0  0E90               	movlw	low STR_18
  5785  0001B2  0100               	movlb	0	; () banked
  5786  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  5787  0001B6  0EFB               	movlw	high STR_18
  5788  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5789  0001BA  EC66  F01A         	call	_printf	;wreg free
  5790                           
  5791                           ;main.c: 502:                 I2C_Master_Start();
  5792  0001BE  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  5793                           
  5794                           ;main.c: 503:                 I2C_Master_Write(0b00010000);
  5795  0001C2  0E00               	movlw	0
  5796  0001C4  0100               	movlb	0	; () banked
  5797  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5798  0001C8  0E10               	movlw	16
  5799  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5800  0001CC  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  5801                           
  5802                           ;main.c: 504:                 I2C_Master_Write('1');
  5803  0001D0  0E00               	movlw	0
  5804  0001D2  0100               	movlb	0	; () banked
  5805  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5806  0001D6  0E31               	movlw	49
  5807  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5808  0001DA  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  5809                           
  5810                           ;main.c: 505:                 I2C_Master_Stop();
  5811  0001DE  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  5812                           
  5813                           ;main.c: 506:                 timer_main();
  5814  0001E2  ECE0  F01A         	call	_timer_main	;wreg free
  5815                           
  5816                           ;main.c: 507:                 sens = 1;
  5817  0001E6  0E00               	movlw	0
  5818  0001E8  6E61               	movwf	_sens+1,c	;volatile
  5819  0001EA  0E01               	movlw	1
  5820  0001EC  6E60               	movwf	_sens,c	;volatile
  5821  0001EE                     l7051:
  5822                           
  5823                           ;main.c: 510:                 if ((temp_int == 2)||(state == 2)){
  5824  0001EE  0E02               	movlw	2
  5825  0001F0  0101               	movlb	1	; () banked
  5826  0001F2  1999               	xorwf	_temp_int& (0+255),w,b
  5827  0001F4  119A               	iorwf	(_temp_int+1)& (0+255),w,b
  5828  0001F6  B4D8               	btfsc	status,2,c
  5829  0001F8  D005               	goto	u7840
  5830                           
  5831                           ; BSR set to: 1
  5832  0001FA  0E02               	movlw	2
  5833  0001FC  1997               	xorwf	_state& (0+255),w,b
  5834  0001FE  1198               	iorwf	(_state+1)& (0+255),w,b
  5835  000200  A4D8               	btfss	status,2,c
  5836  000202  D241               	goto	l7161
  5837  000204                     u7840:
  5838                           
  5839                           ; BSR set to: 1
  5840                           ;main.c: 511:                     if ((temp_int == 2)){
  5841  000204  0E02               	movlw	2
  5842  000206  1999               	xorwf	_temp_int& (0+255),w,b
  5843  000208  119A               	iorwf	(_temp_int+1)& (0+255),w,b
  5844  00020A  A4D8               	btfss	status,2,c
  5845  00020C  D033               	goto	l7073
  5846                           
  5847                           ; BSR set to: 1
  5848                           ;main.c: 512:                         state = 2;
  5849  00020E  0E00               	movlw	0
  5850  000210  6F98               	movwf	(_state+1)& (0+255),b
  5851  000212  0E02               	movlw	2
  5852  000214  6F97               	movwf	_state& (0+255),b
  5853                           
  5854                           ;main.c: 513:                         disp = 0;
  5855  000216  0E00               	movlw	0
  5856  000218  6F96               	movwf	(_disp+1)& (0+255),b
  5857  00021A  0E00               	movlw	0
  5858  00021C  6F95               	movwf	_disp& (0+255),b
  5859                           
  5860                           ; BSR set to: 1
  5861                           ;main.c: 514:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  5862  00021E  0E01               	movlw	1
  5863  000220  ECF5  F01A         	call	_lcdInst
  5864  000224  0E11               	movlw	17
  5865  000226  0101               	movlb	1	; () banked
  5866  000228  6F00               	movwf	??_UI_main& (0+255),b
  5867  00022A  0E3A               	movlw	58
  5868  00022C                     u8767:
  5869  00022C  2EE8               	decfsz	wreg,f,c
  5870  00022E  D7FE               	bra	u8767
  5871  000230  2F00               	decfsz	??_UI_main& (0+255),f,b
  5872  000232  D7FC               	bra	u8767
  5873  000234  F000               	nop	
  5874                           
  5875                           ;main.c: 515:                         printf("Op Time:");
  5876  000236  0E19               	movlw	low STR_19
  5877  000238  0100               	movlb	0	; () banked
  5878  00023A  6FED               	movwf	printf@fmt& (0+255),b
  5879  00023C  0EFD               	movlw	high STR_19
  5880  00023E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5881  000240  EC66  F01A         	call	_printf	;wreg free
  5882  000244  0EC0               	movlw	192
  5883  000246  ECF5  F01A         	call	_lcdInst
  5884                           
  5885                           ;main.c: 517:                         printf("%d", cnt);
  5886  00024A  0E7C               	movlw	low (STR_26+11)
  5887  00024C  0100               	movlb	0	; () banked
  5888  00024E  6FED               	movwf	printf@fmt& (0+255),b
  5889  000250  0EFC               	movlw	high (STR_26+11)
  5890  000252  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5891  000254  C19B  F0EF         	movff	_cnt,?_printf+2
  5892  000258  C19C  F0F0         	movff	_cnt+1,?_printf+3
  5893  00025C  EC66  F01A         	call	_printf	;wreg free
  5894  000260  0ED0               	movlw	208
  5895  000262  ECF5  F01A         	call	_lcdInst
  5896                           
  5897                           ;main.c: 519:                         printf("    0-Menu   #>");
  5898  000266  0ED5               	movlw	low (STR_24+1)
  5899  000268  0100               	movlb	0	; () banked
  5900  00026A  6FED               	movwf	printf@fmt& (0+255),b
  5901  00026C  0EFB               	movlw	high (STR_24+1)
  5902  00026E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5903  000270  EC66  F01A         	call	_printf	;wreg free
  5904  000274                     l7073:
  5905                           
  5906                           ;main.c: 521:                     if ((temp == '*') && (disp != 0)){
  5907  000274  0E2A               	movlw	42
  5908  000276  0100               	movlb	0	; () banked
  5909  000278  19FF               	xorwf	_temp& (0+255),w,b
  5910  00027A  A4D8               	btfss	status,2,c
  5911  00027C  D00B               	goto	l274
  5912                           
  5913                           ; BSR set to: 0
  5914  00027E  0101               	movlb	1	; () banked
  5915  000280  5195               	movf	_disp& (0+255),w,b
  5916  000282  1196               	iorwf	(_disp+1)& (0+255),w,b
  5917  000284  B4D8               	btfsc	status,2,c
  5918  000286  D006               	goto	l274
  5919                           
  5920                           ; BSR set to: 1
  5921                           ;main.c: 522:                         disp = disp - 1;
  5922  000288  0EFF               	movlw	255
  5923  00028A  2595               	addwf	_disp& (0+255),w,b
  5924  00028C  6F95               	movwf	_disp& (0+255),b
  5925  00028E  0EFF               	movlw	255
  5926  000290  2196               	addwfc	(_disp+1)& (0+255),w,b
  5927  000292  6F96               	movwf	(_disp+1)& (0+255),b
  5928  000294                     l274:
  5929                           
  5930                           ;main.c: 524:                     if ((temp == '#')&& (disp <12)){
  5931  000294  0E23               	movlw	35
  5932  000296  0100               	movlb	0	; () banked
  5933  000298  19FF               	xorwf	_temp& (0+255),w,b
  5934  00029A  A4D8               	btfss	status,2,c
  5935  00029C  D00B               	goto	l7083
  5936                           
  5937                           ; BSR set to: 0
  5938  00029E  0101               	movlb	1	; () banked
  5939  0002A0  BF96               	btfsc	(_disp+1)& (0+255),7,b
  5940  0002A2  D006               	goto	u7890
  5941  0002A4  5196               	movf	(_disp+1)& (0+255),w,b
  5942  0002A6  E106               	bnz	l7083
  5943  0002A8  0E0C               	movlw	12
  5944  0002AA  5D95               	subwf	_disp& (0+255),w,b
  5945  0002AC  B0D8               	btfsc	status,0,c
  5946  0002AE  D002               	goto	l7083
  5947  0002B0                     u7890:
  5948                           
  5949                           ; BSR set to: 1
  5950                           ;main.c: 525:                         disp++;
  5951  0002B0  4B95               	infsnz	_disp& (0+255),f,b
  5952  0002B2  2B96               	incf	(_disp+1)& (0+255),f,b
  5953  0002B4                     l7083:
  5954                           
  5955                           ;main.c: 527:                     if (disp == 0){
  5956  0002B4  0101               	movlb	1	; () banked
  5957  0002B6  5195               	movf	_disp& (0+255),w,b
  5958  0002B8  1196               	iorwf	(_disp+1)& (0+255),w,b
  5959  0002BA  A4D8               	btfss	status,2,c
  5960  0002BC  D02B               	goto	l7099
  5961                           
  5962                           ; BSR set to: 1
  5963                           ;main.c: 528:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  5964  0002BE  0E01               	movlw	1
  5965  0002C0  ECF5  F01A         	call	_lcdInst
  5966  0002C4  0E11               	movlw	17
  5967  0002C6  0101               	movlb	1	; () banked
  5968  0002C8  6F00               	movwf	??_UI_main& (0+255),b
  5969  0002CA  0E3A               	movlw	58
  5970  0002CC                     u8777:
  5971  0002CC  2EE8               	decfsz	wreg,f,c
  5972  0002CE  D7FE               	bra	u8777
  5973  0002D0  2F00               	decfsz	??_UI_main& (0+255),f,b
  5974  0002D2  D7FC               	bra	u8777
  5975  0002D4  F000               	nop	
  5976                           
  5977                           ;main.c: 529:                         printf("Op Time:");
  5978  0002D6  0E19               	movlw	low STR_19
  5979  0002D8  0100               	movlb	0	; () banked
  5980  0002DA  6FED               	movwf	printf@fmt& (0+255),b
  5981  0002DC  0EFD               	movlw	high STR_19
  5982  0002DE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5983  0002E0  EC66  F01A         	call	_printf	;wreg free
  5984  0002E4  0EC0               	movlw	192
  5985  0002E6  ECF5  F01A         	call	_lcdInst
  5986                           
  5987                           ;main.c: 531:                         printf("%d", cnt);
  5988  0002EA  0E7C               	movlw	low (STR_26+11)
  5989  0002EC  0100               	movlb	0	; () banked
  5990  0002EE  6FED               	movwf	printf@fmt& (0+255),b
  5991  0002F0  0EFC               	movlw	high (STR_26+11)
  5992  0002F2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5993  0002F4  C19B  F0EF         	movff	_cnt,?_printf+2
  5994  0002F8  C19C  F0F0         	movff	_cnt+1,?_printf+3
  5995  0002FC  EC66  F01A         	call	_printf	;wreg free
  5996  000300  0ED0               	movlw	208
  5997  000302  ECF5  F01A         	call	_lcdInst
  5998                           
  5999                           ;main.c: 533:                         printf("     0-Menu   #>");
  6000  000306  0ED4               	movlw	low STR_24
  6001  000308  0100               	movlb	0	; () banked
  6002  00030A  6FED               	movwf	printf@fmt& (0+255),b
  6003  00030C  0EFB               	movlw	high STR_24
  6004  00030E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6005  000310  EC66  F01A         	call	_printf	;wreg free
  6006  000314                     l7099:
  6007                           
  6008                           ;main.c: 536:                     if (disp == 1){
  6009  000314  0101               	movlb	1	; () banked
  6010  000316  0595               	decf	_disp& (0+255),w,b
  6011  000318  1196               	iorwf	(_disp+1)& (0+255),w,b
  6012  00031A  A4D8               	btfss	status,2,c
  6013  00031C  D02F               	goto	l7115
  6014                           
  6015                           ; BSR set to: 1
  6016                           ;main.c: 537:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6017  00031E  0E01               	movlw	1
  6018  000320  ECF5  F01A         	call	_lcdInst
  6019  000324  0E11               	movlw	17
  6020  000326  0101               	movlb	1	; () banked
  6021  000328  6F00               	movwf	??_UI_main& (0+255),b
  6022  00032A  0E3A               	movlw	58
  6023  00032C                     u8787:
  6024  00032C  2EE8               	decfsz	wreg,f,c
  6025  00032E  D7FE               	bra	u8787
  6026  000330  2F00               	decfsz	??_UI_main& (0+255),f,b
  6027  000332  D7FC               	bra	u8787
  6028  000334  F000               	nop	
  6029                           
  6030                           ;main.c: 538:                         printf("No. Tires: %d",t_dep);
  6031  000336  0E7F               	movlw	low STR_25
  6032  000338  0100               	movlb	0	; () banked
  6033  00033A  6FED               	movwf	printf@fmt& (0+255),b
  6034  00033C  0EFC               	movlw	high STR_25
  6035  00033E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6036  000340  C0F9  F0EF         	movff	UI_main@t_dep,?_printf+2
  6037  000344  C0FA  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  6038  000348  EC66  F01A         	call	_printf	;wreg free
  6039  00034C  0EC0               	movlw	192
  6040  00034E  ECF5  F01A         	call	_lcdInst
  6041                           
  6042                           ;main.c: 540:                         printf("No. Poles: %d", poles_detected);
  6043  000352  0E71               	movlw	low STR_26
  6044  000354  0100               	movlb	0	; () banked
  6045  000356  6FED               	movwf	printf@fmt& (0+255),b
  6046  000358  0EFC               	movlw	high STR_26
  6047  00035A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6048  00035C  C0FB  F0EF         	movff	UI_main@poles_detected,?_printf+2
  6049  000360  C0FC  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  6050  000364  EC66  F01A         	call	_printf	;wreg free
  6051  000368  0ED0               	movlw	208
  6052  00036A  ECF5  F01A         	call	_lcdInst
  6053                           
  6054                           ;main.c: 542:                         printf("<*   0-Menu   #>");
  6055  00036E  0EE5               	movlw	low STR_27
  6056  000370  0100               	movlb	0	; () banked
  6057  000372  6FED               	movwf	printf@fmt& (0+255),b
  6058  000374  0EFB               	movlw	high STR_27
  6059  000376  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6060  000378  EC66  F01A         	call	_printf	;wreg free
  6061  00037C                     l7115:
  6062                           
  6063                           ;main.c: 545:                     if (disp > 1 && disp <11){
  6064  00037C  0101               	movlb	1	; () banked
  6065  00037E  BF96               	btfsc	(_disp+1)& (0+255),7,b
  6066  000380  D0C5               	goto	l7139
  6067  000382  5196               	movf	(_disp+1)& (0+255),w,b
  6068  000384  E104               	bnz	u7920
  6069  000386  0E02               	movlw	2
  6070  000388  5D95               	subwf	_disp& (0+255),w,b
  6071  00038A  A0D8               	btfss	status,0,c
  6072  00038C  D0BF               	goto	l7139
  6073  00038E                     u7920:
  6074                           
  6075                           ; BSR set to: 1
  6076  00038E  BF96               	btfsc	(_disp+1)& (0+255),7,b
  6077  000390  D006               	goto	u7930
  6078  000392  5196               	movf	(_disp+1)& (0+255),w,b
  6079  000394  E103               	bnz	u7931
  6080  000396  0E0B               	movlw	11
  6081  000398  5D95               	subwf	_disp& (0+255),w,b
  6082  00039A  B0D8               	btfsc	status,0,c
  6083  00039C                     u7931:
  6084  00039C  D0B7               	goto	l7139
  6085  00039E                     u7930:
  6086                           
  6087                           ; BSR set to: 1
  6088                           ;main.c: 546:                         i = disp - 2;
  6089  00039E  0EFE               	movlw	254
  6090  0003A0  2595               	addwf	_disp& (0+255),w,b
  6091  0003A2  0100               	movlb	0	; () banked
  6092  0003A4  6FFD               	movwf	_i& (0+255),b
  6093  0003A6  0EFF               	movlw	255
  6094  0003A8  0101               	movlb	1	; () banked
  6095  0003AA  2196               	addwfc	(_disp+1)& (0+255),w,b
  6096  0003AC  0100               	movlb	0	; () banked
  6097  0003AE  6FFE               	movwf	(_i+1)& (0+255),b
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;main.c: 547:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6101  0003B0  0E01               	movlw	1
  6102  0003B2  ECF5  F01A         	call	_lcdInst
  6103  0003B6  0E11               	movlw	17
  6104  0003B8  0101               	movlb	1	; () banked
  6105  0003BA  6F00               	movwf	??_UI_main& (0+255),b
  6106  0003BC  0E3A               	movlw	58
  6107  0003BE                     u8797:
  6108  0003BE  2EE8               	decfsz	wreg,f,c
  6109  0003C0  D7FE               	bra	u8797
  6110  0003C2  2F00               	decfsz	??_UI_main& (0+255),f,b
  6111  0003C4  D7FC               	bra	u8797
  6112  0003C6  F000               	nop	
  6113                           
  6114                           ;main.c: 548:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  6115  0003C8  0E7E               	movlw	low STR_28
  6116  0003CA  0100               	movlb	0	; () banked
  6117  0003CC  6FED               	movwf	printf@fmt& (0+255),b
  6118  0003CE  0EFB               	movlw	high STR_28
  6119  0003D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6120  0003D2  0E01               	movlw	1
  6121  0003D4  25FD               	addwf	_i& (0+255),w,b
  6122  0003D6  6FEF               	movwf	(?_printf+2)& (0+255),b
  6123  0003D8  0E00               	movlw	0
  6124  0003DA  21FE               	addwfc	(_i+1)& (0+255),w,b
  6125  0003DC  6FF0               	movwf	(?_printf+3)& (0+255),b
  6126  0003DE  C0FD  F100         	movff	_i,??_UI_main
  6127  0003E2  C0FE  F101         	movff	_i+1,??_UI_main+1
  6128  0003E6  0101               	movlb	1	; () banked
  6129  0003E8  90D8               	bcf	status,0,c
  6130  0003EA  3700               	rlcf	??_UI_main& (0+255),f,b
  6131  0003EC  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6132  0003EE  90D8               	bcf	status,0,c
  6133  0003F0  3700               	rlcf	??_UI_main& (0+255),f,b
  6134  0003F2  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6135  0003F4  90D8               	bcf	status,0,c
  6136  0003F6  3700               	rlcf	??_UI_main& (0+255),f,b
  6137  0003F8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6138  0003FA  0E04               	movlw	low UI_main@Pole
  6139  0003FC  2500               	addwf	??_UI_main& (0+255),w,b
  6140  0003FE  6ED9               	movwf	fsr2l,c
  6141  000400  0E01               	movlw	high UI_main@Pole
  6142  000402  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6143  000404  6EDA               	movwf	fsr2h,c
  6144  000406  CFDE F0F1          	movff	postinc2,?_printf+4
  6145  00040A  CFDD F0F2          	movff	postdec2,?_printf+5
  6146  00040E  C0FD  F102         	movff	_i,??_UI_main+2
  6147  000412  C0FE  F103         	movff	_i+1,??_UI_main+3
  6148  000416  90D8               	bcf	status,0,c
  6149  000418  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6150  00041A  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6151  00041C  90D8               	bcf	status,0,c
  6152  00041E  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6153  000420  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6154  000422  90D8               	bcf	status,0,c
  6155  000424  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6156  000426  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6157  000428  0E02               	movlw	2
  6158  00042A  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  6159  00042C  0E00               	movlw	0
  6160  00042E  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  6161  000430  0E04               	movlw	low UI_main@Pole
  6162  000432  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  6163  000434  6ED9               	movwf	fsr2l,c
  6164  000436  0E01               	movlw	high UI_main@Pole
  6165  000438  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  6166  00043A  6EDA               	movwf	fsr2h,c
  6167  00043C  CFDE F0F3          	movff	postinc2,?_printf+6
  6168  000440  CFDD F0F4          	movff	postdec2,?_printf+7
  6169  000444  EC66  F01A         	call	_printf	;wreg free
  6170  000448  0EC0               	movlw	192
  6171  00044A  ECF5  F01A         	call	_lcdInst
  6172                           
  6173                           ;main.c: 550:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  6174  00044E  0E35               	movlw	low STR_29
  6175  000450  0100               	movlb	0	; () banked
  6176  000452  6FED               	movwf	printf@fmt& (0+255),b
  6177  000454  0EFC               	movlw	high STR_29
  6178  000456  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6179  000458  0E01               	movlw	1
  6180  00045A  25FD               	addwf	_i& (0+255),w,b
  6181  00045C  6FEF               	movwf	(?_printf+2)& (0+255),b
  6182  00045E  0E00               	movlw	0
  6183  000460  21FE               	addwfc	(_i+1)& (0+255),w,b
  6184  000462  6FF0               	movwf	(?_printf+3)& (0+255),b
  6185  000464  C0FD  F100         	movff	_i,??_UI_main
  6186  000468  C0FE  F101         	movff	_i+1,??_UI_main+1
  6187  00046C  0101               	movlb	1	; () banked
  6188  00046E  90D8               	bcf	status,0,c
  6189  000470  3700               	rlcf	??_UI_main& (0+255),f,b
  6190  000472  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6191  000474  90D8               	bcf	status,0,c
  6192  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  6193  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6194  00047A  90D8               	bcf	status,0,c
  6195  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  6196  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6197  000480  0E04               	movlw	4
  6198  000482  2700               	addwf	??_UI_main& (0+255),f,b
  6199  000484  0E00               	movlw	0
  6200  000486  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  6201  000488  0E04               	movlw	low UI_main@Pole
  6202  00048A  2500               	addwf	??_UI_main& (0+255),w,b
  6203  00048C  6ED9               	movwf	fsr2l,c
  6204  00048E  0E01               	movlw	high UI_main@Pole
  6205  000490  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6206  000492  6EDA               	movwf	fsr2h,c
  6207  000494  CFDE F0F1          	movff	postinc2,?_printf+4
  6208  000498  CFDD F0F2          	movff	postdec2,?_printf+5
  6209  00049C  EC66  F01A         	call	_printf	;wreg free
  6210  0004A0  0E90               	movlw	144
  6211  0004A2  ECF5  F01A         	call	_lcdInst
  6212                           
  6213                           ;main.c: 552:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  6214  0004A6  0EA5               	movlw	low STR_30
  6215  0004A8  0100               	movlb	0	; () banked
  6216  0004AA  6FED               	movwf	printf@fmt& (0+255),b
  6217  0004AC  0EFC               	movlw	high STR_30
  6218  0004AE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6219  0004B0  0E01               	movlw	1
  6220  0004B2  25FD               	addwf	_i& (0+255),w,b
  6221  0004B4  6FEF               	movwf	(?_printf+2)& (0+255),b
  6222  0004B6  0E00               	movlw	0
  6223  0004B8  21FE               	addwfc	(_i+1)& (0+255),w,b
  6224  0004BA  6FF0               	movwf	(?_printf+3)& (0+255),b
  6225  0004BC  C0FD  F100         	movff	_i,??_UI_main
  6226  0004C0  C0FE  F101         	movff	_i+1,??_UI_main+1
  6227  0004C4  0101               	movlb	1	; () banked
  6228  0004C6  90D8               	bcf	status,0,c
  6229  0004C8  3700               	rlcf	??_UI_main& (0+255),f,b
  6230  0004CA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6231  0004CC  90D8               	bcf	status,0,c
  6232  0004CE  3700               	rlcf	??_UI_main& (0+255),f,b
  6233  0004D0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6234  0004D2  90D8               	bcf	status,0,c
  6235  0004D4  3700               	rlcf	??_UI_main& (0+255),f,b
  6236  0004D6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6237  0004D8  0E06               	movlw	6
  6238  0004DA  2700               	addwf	??_UI_main& (0+255),f,b
  6239  0004DC  0E00               	movlw	0
  6240  0004DE  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  6241  0004E0  0E04               	movlw	low UI_main@Pole
  6242  0004E2  2500               	addwf	??_UI_main& (0+255),w,b
  6243  0004E4  6ED9               	movwf	fsr2l,c
  6244  0004E6  0E01               	movlw	high UI_main@Pole
  6245  0004E8  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6246  0004EA  6EDA               	movwf	fsr2h,c
  6247  0004EC  CFDE F0F1          	movff	postinc2,?_printf+4
  6248  0004F0  CFDD F0F2          	movff	postdec2,?_printf+5
  6249  0004F4  EC66  F01A         	call	_printf	;wreg free
  6250  0004F8  0ED0               	movlw	208
  6251  0004FA  ECF5  F01A         	call	_lcdInst
  6252                           
  6253                           ;main.c: 554:                         printf("<*   0-Menu   #>");
  6254  0004FE  0EE5               	movlw	low STR_27
  6255  000500  0100               	movlb	0	; () banked
  6256  000502  6FED               	movwf	printf@fmt& (0+255),b
  6257  000504  0EFB               	movlw	high STR_27
  6258  000506  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6259  000508  EC66  F01A         	call	_printf	;wreg free
  6260  00050C                     l7139:
  6261                           
  6262                           ;main.c: 556:                     if (disp == 11){
  6263  00050C  0E0B               	movlw	11
  6264  00050E  0101               	movlb	1	; () banked
  6265  000510  1995               	xorwf	_disp& (0+255),w,b
  6266  000512  1196               	iorwf	(_disp+1)& (0+255),w,b
  6267  000514  A4D8               	btfss	status,2,c
  6268  000516  D0B7               	goto	l7161
  6269                           
  6270                           ; BSR set to: 1
  6271                           ;main.c: 557:                         i = disp - 2;
  6272  000518  0EFE               	movlw	254
  6273  00051A  2595               	addwf	_disp& (0+255),w,b
  6274  00051C  0100               	movlb	0	; () banked
  6275  00051E  6FFD               	movwf	_i& (0+255),b
  6276  000520  0EFF               	movlw	255
  6277  000522  0101               	movlb	1	; () banked
  6278  000524  2196               	addwfc	(_disp+1)& (0+255),w,b
  6279  000526  0100               	movlb	0	; () banked
  6280  000528  6FFE               	movwf	(_i+1)& (0+255),b
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;main.c: 558:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6284  00052A  0E01               	movlw	1
  6285  00052C  ECF5  F01A         	call	_lcdInst
  6286  000530  0E11               	movlw	17
  6287  000532  0101               	movlb	1	; () banked
  6288  000534  6F00               	movwf	??_UI_main& (0+255),b
  6289  000536  0E3A               	movlw	58
  6290  000538                     u8807:
  6291  000538  2EE8               	decfsz	wreg,f,c
  6292  00053A  D7FE               	bra	u8807
  6293  00053C  2F00               	decfsz	??_UI_main& (0+255),f,b
  6294  00053E  D7FC               	bra	u8807
  6295  000540  F000               	nop	
  6296                           
  6297                           ;main.c: 559:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  6298  000542  0E7E               	movlw	low STR_28
  6299  000544  0100               	movlb	0	; () banked
  6300  000546  6FED               	movwf	printf@fmt& (0+255),b
  6301  000548  0EFB               	movlw	high STR_28
  6302  00054A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6303  00054C  0E01               	movlw	1
  6304  00054E  25FD               	addwf	_i& (0+255),w,b
  6305  000550  6FEF               	movwf	(?_printf+2)& (0+255),b
  6306  000552  0E00               	movlw	0
  6307  000554  21FE               	addwfc	(_i+1)& (0+255),w,b
  6308  000556  6FF0               	movwf	(?_printf+3)& (0+255),b
  6309  000558  C0FD  F100         	movff	_i,??_UI_main
  6310  00055C  C0FE  F101         	movff	_i+1,??_UI_main+1
  6311  000560  0101               	movlb	1	; () banked
  6312  000562  90D8               	bcf	status,0,c
  6313  000564  3700               	rlcf	??_UI_main& (0+255),f,b
  6314  000566  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6315  000568  90D8               	bcf	status,0,c
  6316  00056A  3700               	rlcf	??_UI_main& (0+255),f,b
  6317  00056C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6318  00056E  90D8               	bcf	status,0,c
  6319  000570  3700               	rlcf	??_UI_main& (0+255),f,b
  6320  000572  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6321  000574  0E04               	movlw	low UI_main@Pole
  6322  000576  2500               	addwf	??_UI_main& (0+255),w,b
  6323  000578  6ED9               	movwf	fsr2l,c
  6324  00057A  0E01               	movlw	high UI_main@Pole
  6325  00057C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6326  00057E  6EDA               	movwf	fsr2h,c
  6327  000580  CFDE F0F1          	movff	postinc2,?_printf+4
  6328  000584  CFDD F0F2          	movff	postdec2,?_printf+5
  6329  000588  C0FD  F102         	movff	_i,??_UI_main+2
  6330  00058C  C0FE  F103         	movff	_i+1,??_UI_main+3
  6331  000590  90D8               	bcf	status,0,c
  6332  000592  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6333  000594  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6334  000596  90D8               	bcf	status,0,c
  6335  000598  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6336  00059A  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6337  00059C  90D8               	bcf	status,0,c
  6338  00059E  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  6339  0005A0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  6340  0005A2  0E02               	movlw	2
  6341  0005A4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  6342  0005A6  0E00               	movlw	0
  6343  0005A8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  6344  0005AA  0E04               	movlw	low UI_main@Pole
  6345  0005AC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  6346  0005AE  6ED9               	movwf	fsr2l,c
  6347  0005B0  0E01               	movlw	high UI_main@Pole
  6348  0005B2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  6349  0005B4  6EDA               	movwf	fsr2h,c
  6350  0005B6  CFDE F0F3          	movff	postinc2,?_printf+6
  6351  0005BA  CFDD F0F4          	movff	postdec2,?_printf+7
  6352  0005BE  EC66  F01A         	call	_printf	;wreg free
  6353  0005C2  0EC0               	movlw	192
  6354  0005C4  ECF5  F01A         	call	_lcdInst
  6355                           
  6356                           ;main.c: 561:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  6357  0005C8  0E35               	movlw	low STR_29
  6358  0005CA  0100               	movlb	0	; () banked
  6359  0005CC  6FED               	movwf	printf@fmt& (0+255),b
  6360  0005CE  0EFC               	movlw	high STR_29
  6361  0005D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6362  0005D2  0E01               	movlw	1
  6363  0005D4  25FD               	addwf	_i& (0+255),w,b
  6364  0005D6  6FEF               	movwf	(?_printf+2)& (0+255),b
  6365  0005D8  0E00               	movlw	0
  6366  0005DA  21FE               	addwfc	(_i+1)& (0+255),w,b
  6367  0005DC  6FF0               	movwf	(?_printf+3)& (0+255),b
  6368  0005DE  C0FD  F100         	movff	_i,??_UI_main
  6369  0005E2  C0FE  F101         	movff	_i+1,??_UI_main+1
  6370  0005E6  0101               	movlb	1	; () banked
  6371  0005E8  90D8               	bcf	status,0,c
  6372  0005EA  3700               	rlcf	??_UI_main& (0+255),f,b
  6373  0005EC  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6374  0005EE  90D8               	bcf	status,0,c
  6375  0005F0  3700               	rlcf	??_UI_main& (0+255),f,b
  6376  0005F2  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6377  0005F4  90D8               	bcf	status,0,c
  6378  0005F6  3700               	rlcf	??_UI_main& (0+255),f,b
  6379  0005F8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6380  0005FA  0E04               	movlw	4
  6381  0005FC  2700               	addwf	??_UI_main& (0+255),f,b
  6382  0005FE  0E00               	movlw	0
  6383  000600  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  6384  000602  0E04               	movlw	low UI_main@Pole
  6385  000604  2500               	addwf	??_UI_main& (0+255),w,b
  6386  000606  6ED9               	movwf	fsr2l,c
  6387  000608  0E01               	movlw	high UI_main@Pole
  6388  00060A  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6389  00060C  6EDA               	movwf	fsr2h,c
  6390  00060E  CFDE F0F1          	movff	postinc2,?_printf+4
  6391  000612  CFDD F0F2          	movff	postdec2,?_printf+5
  6392  000616  EC66  F01A         	call	_printf	;wreg free
  6393  00061A  0E90               	movlw	144
  6394  00061C  ECF5  F01A         	call	_lcdInst
  6395                           
  6396                           ;main.c: 563:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  6397  000620  0EA5               	movlw	low STR_30
  6398  000622  0100               	movlb	0	; () banked
  6399  000624  6FED               	movwf	printf@fmt& (0+255),b
  6400  000626  0EFC               	movlw	high STR_30
  6401  000628  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6402  00062A  0E01               	movlw	1
  6403  00062C  25FD               	addwf	_i& (0+255),w,b
  6404  00062E  6FEF               	movwf	(?_printf+2)& (0+255),b
  6405  000630  0E00               	movlw	0
  6406  000632  21FE               	addwfc	(_i+1)& (0+255),w,b
  6407  000634  6FF0               	movwf	(?_printf+3)& (0+255),b
  6408  000636  C0FD  F100         	movff	_i,??_UI_main
  6409  00063A  C0FE  F101         	movff	_i+1,??_UI_main+1
  6410  00063E  0101               	movlb	1	; () banked
  6411  000640  90D8               	bcf	status,0,c
  6412  000642  3700               	rlcf	??_UI_main& (0+255),f,b
  6413  000644  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6414  000646  90D8               	bcf	status,0,c
  6415  000648  3700               	rlcf	??_UI_main& (0+255),f,b
  6416  00064A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6417  00064C  90D8               	bcf	status,0,c
  6418  00064E  3700               	rlcf	??_UI_main& (0+255),f,b
  6419  000650  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  6420  000652  0E06               	movlw	6
  6421  000654  2700               	addwf	??_UI_main& (0+255),f,b
  6422  000656  0E00               	movlw	0
  6423  000658  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  6424  00065A  0E04               	movlw	low UI_main@Pole
  6425  00065C  2500               	addwf	??_UI_main& (0+255),w,b
  6426  00065E  6ED9               	movwf	fsr2l,c
  6427  000660  0E01               	movlw	high UI_main@Pole
  6428  000662  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  6429  000664  6EDA               	movwf	fsr2h,c
  6430  000666  CFDE F0F1          	movff	postinc2,?_printf+4
  6431  00066A  CFDD F0F2          	movff	postdec2,?_printf+5
  6432  00066E  EC66  F01A         	call	_printf	;wreg free
  6433  000672  0ED0               	movlw	208
  6434  000674  ECF5  F01A         	call	_lcdInst
  6435                           
  6436                           ;main.c: 565:                         printf("<*   0-Menu     ");
  6437  000678  0EA1               	movlw	low STR_35
  6438  00067A  0100               	movlb	0	; () banked
  6439  00067C  6FED               	movwf	printf@fmt& (0+255),b
  6440  00067E  0EFB               	movlw	high STR_35
  6441  000680  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6442  000682  EC66  F01A         	call	_printf	;wreg free
  6443  000686                     l7161:
  6444                           
  6445                           ;main.c: 568:             if (temp_int == 3){
  6446  000686  0E03               	movlw	3
  6447  000688  0101               	movlb	1	; () banked
  6448  00068A  1999               	xorwf	_temp_int& (0+255),w,b
  6449  00068C  119A               	iorwf	(_temp_int+1)& (0+255),w,b
  6450  00068E  A4D8               	btfss	status,2,c
  6451  000690  D0B5               	goto	u7980
  6452                           
  6453                           ; BSR set to: 1
  6454                           ;main.c: 569:                 state = 0;
  6455  000692  0E00               	movlw	0
  6456  000694  6F98               	movwf	(_state+1)& (0+255),b
  6457  000696  0E00               	movlw	0
  6458  000698  6F97               	movwf	_state& (0+255),b
  6459                           
  6460                           ;main.c: 570:                 tick = 0;
  6461  00069A  0E00               	movlw	0
  6462  00069C  6F55               	movwf	UI_main@tick& (0+255),b
  6463  00069E  0E00               	movlw	0
  6464  0006A0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  6465  0006A2  0E00               	movlw	0
  6466  0006A4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  6467  0006A6  0E00               	movlw	0
  6468  0006A8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  6469                           
  6470                           ;main.c: 571:                 while(~key_was_pressed){
  6471  0006AA  D0A5               	goto	l7211
  6472  0006AC                     l7165:
  6473                           
  6474                           ; BSR set to: 1
  6475                           ;main.c: 572:                     if(tick % 1000 == 0){
  6476  0006AC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  6477  0006B0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  6478  0006B4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  6479  0006B8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  6480  0006BC  0EE8               	movlw	232
  6481  0006BE  0100               	movlb	0	; () banked
  6482  0006C0  6F84               	movwf	___llmod@divisor& (0+255),b
  6483  0006C2  0E03               	movlw	3
  6484  0006C4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  6485  0006C6  0E00               	movlw	0
  6486  0006C8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  6487  0006CA  0E00               	movlw	0
  6488  0006CC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  6489  0006CE  EC83  F017         	call	___llmod	;wreg free
  6490  0006D2  0100               	movlb	0	; () banked
  6491  0006D4  5180               	movf	?___llmod& (0+255),w,b
  6492  0006D6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  6493  0006D8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  6494  0006DA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  6495  0006DC  A4D8               	btfss	status,2,c
  6496  0006DE  D084               	goto	l7209
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;main.c: 573:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  6500  0006E0  0E01               	movlw	1
  6501  0006E2  ECF5  F01A         	call	_lcdInst
  6502  0006E6  0E11               	movlw	17
  6503  0006E8  0101               	movlb	1	; () banked
  6504  0006EA  6F00               	movwf	??_UI_main& (0+255),b
  6505  0006EC  0E3A               	movlw	58
  6506  0006EE                     u8817:
  6507  0006EE  2EE8               	decfsz	wreg,f,c
  6508  0006F0  D7FE               	bra	u8817
  6509  0006F2  2F00               	decfsz	??_UI_main& (0+255),f,b
  6510  0006F4  D7FC               	bra	u8817
  6511  0006F6  F000               	nop	
  6512                           
  6513                           ;main.c: 574:                         printf("DATE & TIME");
  6514  0006F8  0E8D               	movlw	low STR_36
  6515  0006FA  0100               	movlb	0	; () banked
  6516  0006FC  6FED               	movwf	printf@fmt& (0+255),b
  6517  0006FE  0EFC               	movlw	high STR_36
  6518  000700  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6519  000702  EC66  F01A         	call	_printf	;wreg free
  6520                           
  6521                           ;main.c: 575:                         I2C_Master_Init(100000);
  6522  000706  0EA0               	movlw	160
  6523  000708  0100               	movlb	0	; () banked
  6524  00070A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  6525  00070C  0E86               	movlw	134
  6526  00070E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  6527  000710  0E01               	movlw	1
  6528  000712  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  6529  000714  0E00               	movlw	0
  6530  000716  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  6531  000718  ECB7  F017         	call	_I2C_Master_Init	;wreg free
  6532                           
  6533                           ;main.c: 576:                         I2C_Master_Start();
  6534  00071C  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  6535                           
  6536                           ;main.c: 577:                         I2C_Master_Write(0b11010000);
  6537  000720  0E00               	movlw	0
  6538  000722  0100               	movlb	0	; () banked
  6539  000724  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6540  000726  0ED0               	movlw	208
  6541  000728  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6542  00072A  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  6543                           
  6544                           ;main.c: 578:                         I2C_Master_Write(0x00);
  6545  00072E  0E00               	movlw	0
  6546  000730  0100               	movlb	0	; () banked
  6547  000732  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6548  000734  0E00               	movlw	0
  6549  000736  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6550  000738  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  6551                           
  6552                           ;main.c: 579:                         I2C_Master_Stop();
  6553  00073C  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  6554                           
  6555                           ;main.c: 581:                         I2C_Master_Start();
  6556  000740  EC0E  F01B         	call	_I2C_Master_Start	;wreg free
  6557                           
  6558                           ;main.c: 582:                         I2C_Master_Write(0b11010001);
  6559  000744  0E00               	movlw	0
  6560  000746  0100               	movlb	0	; () banked
  6561  000748  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6562  00074A  0ED1               	movlw	209
  6563  00074C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6564  00074E  EC05  F01B         	call	_I2C_Master_Write	;wreg free
  6565                           
  6566                           ;main.c: 583:                         for(unsigned char i = 0; i < 6; i++){
  6567  000752  0E00               	movlw	0
  6568  000754  0101               	movlb	1	; () banked
  6569  000756  6F59               	movwf	UI_main@i& (0+255),b
  6570  000758                     l7189:
  6571                           
  6572                           ; BSR set to: 1
  6573  000758  0E05               	movlw	5
  6574  00075A  6559               	cpfsgt	UI_main@i& (0+255),b
  6575  00075C  D001               	goto	l7193
  6576  00075E  D00D               	goto	l7199
  6577  000760                     l7193:
  6578                           
  6579                           ; BSR set to: 1
  6580                           ;main.c: 584:                             time[i] = I2C_Master_Read(0);
  6581  000760  0E8C               	movlw	low _time
  6582  000762  2559               	addwf	UI_main@i& (0+255),w,b
  6583  000764  6ED9               	movwf	fsr2l,c
  6584  000766  6ADA               	clrf	fsr2h,c
  6585  000768  0E01               	movlw	high _time
  6586  00076A  22DA               	addwfc	fsr2h,f,c
  6587  00076C  0E00               	movlw	0
  6588  00076E  EC3D  F01A         	call	_I2C_Master_Read
  6589  000772  6EDF               	movwf	indf2,c
  6590                           
  6591                           ;main.c: 585:                         }
  6592  000774  0101               	movlb	1	; () banked
  6593  000776  2B59               	incf	UI_main@i& (0+255),f,b
  6594  000778  D7EF               	goto	l7189
  6595  00077A                     l7199:
  6596                           
  6597                           ; BSR set to: 1
  6598                           ;main.c: 586:                         time[6] = I2C_Master_Read(1);
  6599  00077A  0E01               	movlw	1
  6600  00077C  EC3D  F01A         	call	_I2C_Master_Read
  6601  000780  0101               	movlb	1	; () banked
  6602  000782  6F92               	movwf	(_time+6)& (0+255),b
  6603                           
  6604                           ;main.c: 587:                         I2C_Master_Stop();
  6605  000784  EC0A  F01B         	call	_I2C_Master_Stop	;wreg free
  6606  000788  0EC0               	movlw	192
  6607  00078A  ECF5  F01A         	call	_lcdInst
  6608                           
  6609                           ;main.c: 591:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  6610  00078E  0E53               	movlw	low STR_37
  6611  000790  0100               	movlb	0	; () banked
  6612  000792  6FED               	movwf	printf@fmt& (0+255),b
  6613  000794  0EFC               	movlw	high STR_37
  6614  000796  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6615  000798  C192  F0EF         	movff	_time+6,?_printf+2
  6616  00079C  6BF0               	clrf	(?_printf+3)& (0+255),b
  6617  00079E  C191  F0F1         	movff	_time+5,?_printf+4
  6618  0007A2  6BF2               	clrf	(?_printf+5)& (0+255),b
  6619  0007A4  C190  F0F3         	movff	_time+4,?_printf+6
  6620  0007A8  6BF4               	clrf	(?_printf+7)& (0+255),b
  6621  0007AA  EC66  F01A         	call	_printf	;wreg free
  6622  0007AE  0E90               	movlw	144
  6623  0007B0  ECF5  F01A         	call	_lcdInst
  6624                           
  6625                           ;main.c: 593:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  6626  0007B4  0E62               	movlw	low STR_38
  6627  0007B6  0100               	movlb	0	; () banked
  6628  0007B8  6FED               	movwf	printf@fmt& (0+255),b
  6629  0007BA  0EFC               	movlw	high STR_38
  6630  0007BC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6631  0007BE  C18E  F0EF         	movff	_time+2,?_printf+2
  6632  0007C2  6BF0               	clrf	(?_printf+3)& (0+255),b
  6633  0007C4  C18D  F0F1         	movff	_time+1,?_printf+4
  6634  0007C8  6BF2               	clrf	(?_printf+5)& (0+255),b
  6635  0007CA  C18C  F0F3         	movff	_time,?_printf+6
  6636  0007CE  6BF4               	clrf	(?_printf+7)& (0+255),b
  6637  0007D0  EC66  F01A         	call	_printf	;wreg free
  6638  0007D4  0ED0               	movlw	208
  6639  0007D6  ECF5  F01A         	call	_lcdInst
  6640                           
  6641                           ;main.c: 595:                         printf("     0-Menu     ");
  6642  0007DA  0E90               	movlw	low STR_18
  6643  0007DC  0100               	movlb	0	; () banked
  6644  0007DE  6FED               	movwf	printf@fmt& (0+255),b
  6645  0007E0  0EFB               	movlw	high STR_18
  6646  0007E2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6647  0007E4  EC66  F01A         	call	_printf	;wreg free
  6648  0007E8                     l7209:
  6649                           
  6650                           ;main.c: 598:                     tick++;
  6651  0007E8  0E01               	movlw	1
  6652  0007EA  0101               	movlb	1	; () banked
  6653  0007EC  2755               	addwf	UI_main@tick& (0+255),f,b
  6654  0007EE  0E00               	movlw	0
  6655  0007F0  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  6656  0007F2  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  6657  0007F4  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  6658  0007F6                     l7211:
  6659                           
  6660                           ; BSR set to: 1
  6661                           ;main.c: 571:                 while(~key_was_pressed){
  6662  0007F6  059D               	decf	_key_was_pressed& (0+255),w,b	;volatile
  6663  0007F8  A4D8               	btfss	status,2,c
  6664  0007FA  D758               	goto	l7165
  6665  0007FC                     u7980:
  6666                           
  6667                           ;main.c: 466:     while(sens==0){
  6668  0007FC  5060               	movf	_sens,w,c	;volatile
  6669  0007FE  1061               	iorwf	_sens+1,w,c	;volatile
  6670  000800  A4D8               	btfss	status,2,c
  6671  000802  0012               	return	
  6672  000804  D45B               	goto	l6991
  6673  000806                     __end_of_UI_main:
  6674                           	opt callstack 0
  6675                           
  6676 ;; *************** function _timer_main *****************
  6677 ;; Defined at:
  6678 ;;		line 28 in file "../timer.X/timer_main.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;		None
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;		None
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  1    wreg      void 
  6685 ;; Registers used:
  6686 ;;		wreg, status,2, status,0, cstack
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;Total ram usage:        0 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    8
  6699 ;; This function calls:
  6700 ;;		_TIMER_INIT
  6701 ;;		_initLCD
  6702 ;; This function is called by:
  6703 ;;		_UI_main
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text19
  6708  0035C0                     __ptext19:
  6709                           	opt callstack 0
  6710  0035C0                     _timer_main:
  6711                           	opt callstack 21
  6712                           
  6713                           ;../timer.X/timer_main.c: 29:     TRISD = 0x00;
  6714                           
  6715                           ;incstack = 0
  6716  0035C0  0E00               	movlw	0
  6717  0035C2  6E95               	movwf	3989,c	;volatile
  6718                           
  6719                           ;../timer.X/timer_main.c: 30:     LATD = 0x00;
  6720  0035C4  0E00               	movlw	0
  6721  0035C6  6E8C               	movwf	3980,c	;volatile
  6722                           
  6723                           ;../timer.X/timer_main.c: 31:     initLCD();
  6724  0035C8  EC14  F017         	call	_initLCD	;wreg free
  6725                           
  6726                           ;../timer.X/timer_main.c: 34:     TIMER_INIT();
  6727  0035CC  ECB4  F01A         	call	_TIMER_INIT	;wreg free
  6728                           
  6729                           ;../timer.X/timer_main.c: 35:     timer_count++;
  6730  0035D0  4A64               	infsnz	_timer_count,f,c
  6731  0035D2  2A65               	incf	_timer_count+1,f,c
  6732  0035D4  0012               	return		;funcret
  6733  0035D6                     __end_of_timer_main:
  6734                           	opt callstack 0
  6735                           
  6736 ;; *************** function _initLCD *****************
  6737 ;; Defined at:
  6738 ;;		line 69 in file "lcd.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;		None
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg, status,2, status,0, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;Total ram usage:        1 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    7
  6759 ;; This function calls:
  6760 ;;		_lcdInst
  6761 ;;		_send_byte
  6762 ;;		_send_nibble
  6763 ;; This function is called by:
  6764 ;;		_UI_main
  6765 ;;		_main
  6766 ;;		_actuators_main
  6767 ;;		_timer_main
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text20
  6772  002E28                     __ptext20:
  6773                           	opt callstack 0
  6774  002E28                     _initLCD:
  6775                           	opt callstack 23
  6776                           
  6777                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  6778                           
  6779                           ;incstack = 0
  6780  002E28  0E31               	movlw	49
  6781  002E2A  0100               	movlb	0	; () banked
  6782  002E2C  6F84               	movwf	??_initLCD& (0+255),b
  6783  002E2E  0EB2               	movlw	178
  6784  002E30                     u8827:
  6785  002E30  2EE8               	decfsz	wreg,f,c
  6786  002E32  D7FE               	bra	u8827
  6787  002E34  2F84               	decfsz	??_initLCD& (0+255),f,b
  6788  002E36  D7FC               	bra	u8827
  6789  002E38  F000               	nop	
  6790                           
  6791                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  6792  002E3A  948C               	bcf	3980,2,c	;volatile
  6793                           
  6794                           ;lcd.c: 74:     send_nibble(0b0011);
  6795  002E3C  0E03               	movlw	3
  6796  002E3E  ECC7  F01A         	call	_send_nibble
  6797                           
  6798                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  6799  002E42  0E11               	movlw	17
  6800  002E44  0100               	movlb	0	; () banked
  6801  002E46  6F84               	movwf	??_initLCD& (0+255),b
  6802  002E48  0E3A               	movlw	58
  6803  002E4A                     u8837:
  6804  002E4A  2EE8               	decfsz	wreg,f,c
  6805  002E4C  D7FE               	bra	u8837
  6806  002E4E  2F84               	decfsz	??_initLCD& (0+255),f,b
  6807  002E50  D7FC               	bra	u8837
  6808  002E52  F000               	nop	
  6809                           
  6810                           ;lcd.c: 76:     send_nibble(0b0011);
  6811  002E54  0E03               	movlw	3
  6812  002E56  ECC7  F01A         	call	_send_nibble
  6813                           
  6814                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  6815  002E5A  0E7D               	movlw	125
  6816  002E5C                     u8847:
  6817  002E5C  2EE8               	decfsz	wreg,f,c
  6818  002E5E  D7FE               	bra	u8847
  6819                           
  6820                           ;lcd.c: 78:     send_byte(0b00110010);
  6821  002E60  0E32               	movlw	50
  6822  002E62  ECD4  F01A         	call	_send_byte
  6823                           
  6824                           ;lcd.c: 80:     send_byte(0b00101000);
  6825  002E66  0E28               	movlw	40
  6826  002E68  ECD4  F01A         	call	_send_byte
  6827                           
  6828                           ;lcd.c: 81:     send_byte(0b00001000);
  6829  002E6C  0E08               	movlw	8
  6830  002E6E  ECD4  F01A         	call	_send_byte
  6831                           
  6832                           ;lcd.c: 82:     send_byte(0b00000001);
  6833  002E72  0E01               	movlw	1
  6834  002E74  ECD4  F01A         	call	_send_byte
  6835                           
  6836                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  6837  002E78  0E11               	movlw	17
  6838  002E7A  0100               	movlb	0	; () banked
  6839  002E7C  6F84               	movwf	??_initLCD& (0+255),b
  6840  002E7E  0E3A               	movlw	58
  6841  002E80                     u8857:
  6842  002E80  2EE8               	decfsz	wreg,f,c
  6843  002E82  D7FE               	bra	u8857
  6844  002E84  2F84               	decfsz	??_initLCD& (0+255),f,b
  6845  002E86  D7FC               	bra	u8857
  6846  002E88  F000               	nop	
  6847                           
  6848                           ;lcd.c: 84:     send_byte(0b00000110);
  6849  002E8A  0E06               	movlw	6
  6850  002E8C  ECD4  F01A         	call	_send_byte
  6851                           
  6852                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  6853  002E90  0E0F               	movlw	15
  6854  002E92  ECF5  F01A         	call	_lcdInst
  6855  002E96  0012               	return		;funcret
  6856  002E98                     __end_of_initLCD:
  6857                           	opt callstack 0
  6858                           
  6859 ;; *************** function _lcdInst *****************
  6860 ;; Defined at:
  6861 ;;		line 64 in file "lcd.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  data            1    wreg     unsigned char 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  data            1    3[BANK0 ] unsigned char 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1    wreg      void 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2, status,0, cstack
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;Total ram usage:        1 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:    6
  6882 ;; This function calls:
  6883 ;;		_send_byte
  6884 ;; This function is called by:
  6885 ;;		_print_echo
  6886 ;;		_ultrasonic_main
  6887 ;;		_number_deploy
  6888 ;;		_UI_main
  6889 ;;		_main
  6890 ;;		_initLCD
  6891 ;;		_actuators_main
  6892 ;;		_lcd_shift_cursor
  6893 ;;		_lcd_shift_display
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text21
  6898  0035EA                     __ptext21:
  6899                           	opt callstack 0
  6900  0035EA                     _lcdInst:
  6901                           	opt callstack 22
  6902                           
  6903                           ;incstack = 0
  6904                           ;lcdInst@data stored from wreg
  6905  0035EA  0100               	movlb	0	; () banked
  6906  0035EC  6F83               	movwf	lcdInst@data& (0+255),b
  6907                           
  6908                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  6909  0035EE  948C               	bcf	3980,2,c	;volatile
  6910                           
  6911                           ;lcd.c: 66:     send_byte(data);
  6912  0035F0  0100               	movlb	0	; () banked
  6913  0035F2  5183               	movf	lcdInst@data& (0+255),w,b
  6914  0035F4  ECD4  F01A         	call	_send_byte
  6915  0035F8  0012               	return		;funcret
  6916  0035FA                     __end_of_lcdInst:
  6917                           	opt callstack 0
  6918                           
  6919 ;; *************** function _TIMER_INIT *****************
  6920 ;; Defined at:
  6921 ;;		line 11 in file "../timer.X/timer_main.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    3
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_timer_main
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text22
  6950  003568                     __ptext22:
  6951                           	opt callstack 0
  6952  003568                     _TIMER_INIT:
  6953                           	opt callstack 25
  6954                           
  6955                           ;../timer.X/timer_main.c: 12:     TRISD = 0x00;
  6956                           
  6957                           ;incstack = 0
  6958  003568  0E00               	movlw	0
  6959  00356A  6E95               	movwf	3989,c	;volatile
  6960                           
  6961                           ;../timer.X/timer_main.c: 13:     LATD = 0x00;
  6962  00356C  0E00               	movlw	0
  6963  00356E  6E8C               	movwf	3980,c	;volatile
  6964                           
  6965                           ;../timer.X/timer_main.c: 14:     T0CONbits.TMR0ON = 0;
  6966  003570  9ED5               	bcf	4053,7,c	;volatile
  6967                           
  6968                           ;../timer.X/timer_main.c: 15:     T0CONbits.T08BIT = 0;
  6969  003572  9CD5               	bcf	4053,6,c	;volatile
  6970                           
  6971                           ;../timer.X/timer_main.c: 16:     T0CONbits.T0CS = 0;
  6972  003574  9AD5               	bcf	4053,5,c	;volatile
  6973                           
  6974                           ;../timer.X/timer_main.c: 17:     T0CONbits.PSA = 0;
  6975  003576  96D5               	bcf	4053,3,c	;volatile
  6976                           
  6977                           ;../timer.X/timer_main.c: 18:     T0CONbits.T0PS = 0b000;
  6978  003578  0EF8               	movlw	-8
  6979  00357A  16D5               	andwf	4053,f,c	;volatile
  6980                           
  6981                           ;../timer.X/timer_main.c: 19:     TMR0H = (65536ul - (((10000000 / (4ul))/(2ul))/1000)) 
      +                          >> 8;
  6982  00357C  0EFB               	movlw	251
  6983  00357E  6ED7               	movwf	4055,c	;volatile
  6984                           
  6985                           ;../timer.X/timer_main.c: 20:     TMR0L = (65536ul - (((10000000 / (4ul))/(2ul))/1000));
  6986  003580  0E1E               	movlw	30
  6987  003582  6ED6               	movwf	4054,c	;volatile
  6988                           
  6989                           ;../timer.X/timer_main.c: 21:     T0CONbits.TMR0ON = 1;
  6990  003584  8ED5               	bsf	4053,7,c	;volatile
  6991                           
  6992                           ;../timer.X/timer_main.c: 22:     INTCONbits.TMR0IE = 1;
  6993  003586  8AF2               	bsf	4082,5,c	;volatile
  6994                           
  6995                           ;../timer.X/timer_main.c: 24:     INTCONbits.GIE = 1;
  6996  003588  8EF2               	bsf	4082,7,c	;volatile
  6997                           
  6998                           ;../timer.X/timer_main.c: 25:     INTCONbits.PEIE = 1;
  6999  00358A  8CF2               	bsf	4082,6,c	;volatile
  7000  00358C  0012               	return		;funcret
  7001  00358E                     __end_of_TIMER_INIT:
  7002                           	opt callstack 0
  7003                           
  7004 ;; *************** function _printf *****************
  7005 ;; Defined at:
  7006 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  7009 ;;		 -> STR_48(5), STR_47(10), STR_46(10), STR_45(10), 
  7010 ;;		 -> STR_44(11), STR_43(11), STR_42(12), STR_41(8), 
  7011 ;;		 -> STR_40(8), STR_39(17), STR_38(15), STR_37(15), 
  7012 ;;		 -> STR_36(12), STR_35(17), STR_34(12), STR_33(15), 
  7013 ;;		 -> STR_32(18), STR_31(17), STR_30(12), STR_29(15), 
  7014 ;;		 -> STR_28(18), STR_27(17), STR_26(14), STR_25(14), 
  7015 ;;		 -> STR_24(17), STR_23(3), STR_22(9), STR_21(16), 
  7016 ;;		 -> STR_20(3), STR_19(9), STR_18(17), STR_17(15), 
  7017 ;;		 -> STR_16(15), STR_15(12), STR_14(10), STR_13(15), 
  7018 ;;		 -> STR_12(12), STR_11(10), STR_10(16), STR_9(3), 
  7019 ;;		 -> STR_8(10), STR_7(17), STR_6(10), STR_5(16), 
  7020 ;;		 -> STR_4(10), STR_3(16), STR_2(10), STR_1(17), 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  ap              2  119[BANK0 ] PTR void [1]
  7023 ;;		 -> ?_printf(2), 
  7024 ;;  ret             2    0        int 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  2  109[BANK0 ] int 
  7027 ;; Registers used:
  7028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7034 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;Total ram usage:       12 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:   13
  7041 ;; This function calls:
  7042 ;;		_vfprintf
  7043 ;; This function is called by:
  7044 ;;		_print_echo
  7045 ;;		_ultrasonic_main
  7046 ;;		_number_deploy
  7047 ;;		_UI_main
  7048 ;;		_main
  7049 ;;		_actuators_main
  7050 ;;		_stepper2
  7051 ;;		_full_drive
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text23
  7056  0034CC                     __ptext23:
  7057                           	opt callstack 0
  7058  0034CC                     _printf:
  7059                           	opt callstack 16
  7060                           
  7061                           ;incstack = 0
  7062  0034CC  0EEF               	movlw	low (?_printf+2)
  7063  0034CE  0100               	movlb	0	; () banked
  7064  0034D0  6FF7               	movwf	printf@ap& (0+255),b
  7065  0034D2  0E00               	movlw	high (?_printf+2)
  7066  0034D4  6FF8               	movwf	(printf@ap+1)& (0+255),b
  7067                           
  7068                           ; BSR set to: 0
  7069  0034D6  0E00               	movlw	0
  7070  0034D8  6FE5               	movwf	vfprintf@fp& (0+255),b
  7071  0034DA  0E00               	movlw	0
  7072  0034DC  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  7073  0034DE  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  7074  0034E2  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  7075  0034E6  0EF7               	movlw	low printf@ap
  7076  0034E8  6FE9               	movwf	vfprintf@ap& (0+255),b
  7077  0034EA  0E00               	movlw	high printf@ap
  7078  0034EC  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  7079  0034EE  EC42  F018         	call	_vfprintf	;wreg free
  7080  0034F2  0012               	return		;funcret
  7081  0034F4                     __end_of_printf:
  7082                           	opt callstack 0
  7083                           
  7084 ;; *************** function _vfprintf *****************
  7085 ;; Defined at:
  7086 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  7089 ;;		 -> NULL(0), 
  7090 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  7091 ;;		 -> STR_48(5), STR_47(10), STR_46(10), STR_45(10), 
  7092 ;;		 -> STR_44(11), STR_43(11), STR_42(12), STR_41(8), 
  7093 ;;		 -> STR_40(8), STR_39(17), STR_38(15), STR_37(15), 
  7094 ;;		 -> STR_36(12), STR_35(17), STR_34(12), STR_33(15), 
  7095 ;;		 -> STR_32(18), STR_31(17), STR_30(12), STR_29(15), 
  7096 ;;		 -> STR_28(18), STR_27(17), STR_26(14), STR_25(14), 
  7097 ;;		 -> STR_24(17), STR_23(3), STR_22(9), STR_21(16), 
  7098 ;;		 -> STR_20(3), STR_19(9), STR_18(17), STR_17(15), 
  7099 ;;		 -> STR_16(15), STR_15(12), STR_14(10), STR_13(15), 
  7100 ;;		 -> STR_12(12), STR_11(10), STR_10(16), STR_9(3), 
  7101 ;;		 -> STR_8(10), STR_7(17), STR_6(10), STR_5(16), 
  7102 ;;		 -> STR_4(10), STR_3(16), STR_2(10), STR_1(17), 
  7103 ;;  ap              2  105[BANK0 ] PTR PTR void 
  7104 ;;		 -> printf@ap(2), 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  7107 ;;		 -> STR_48(5), STR_47(10), STR_46(10), STR_45(10), 
  7108 ;;		 -> STR_44(11), STR_43(11), STR_42(12), STR_41(8), 
  7109 ;;		 -> STR_40(8), STR_39(17), STR_38(15), STR_37(15), 
  7110 ;;		 -> STR_36(12), STR_35(17), STR_34(12), STR_33(15), 
  7111 ;;		 -> STR_32(18), STR_31(17), STR_30(12), STR_29(15), 
  7112 ;;		 -> STR_28(18), STR_27(17), STR_26(14), STR_25(14), 
  7113 ;;		 -> STR_24(17), STR_23(3), STR_22(9), STR_21(16), 
  7114 ;;		 -> STR_20(3), STR_19(9), STR_18(17), STR_17(15), 
  7115 ;;		 -> STR_16(15), STR_15(12), STR_14(10), STR_13(15), 
  7116 ;;		 -> STR_12(12), STR_11(10), STR_10(16), STR_9(3), 
  7117 ;;		 -> STR_8(10), STR_7(17), STR_6(10), STR_5(16), 
  7118 ;;		 -> STR_4(10), STR_3(16), STR_2(10), STR_1(17), 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  2  101[BANK0 ] int 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7128 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;Total ram usage:        8 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:   12
  7135 ;; This function calls:
  7136 ;;		_vfpfcnvrt
  7137 ;; This function is called by:
  7138 ;;		_printf
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text24
  7143  003084                     __ptext24:
  7144                           	opt callstack 0
  7145  003084                     _vfprintf:
  7146                           	opt callstack 16
  7147                           
  7148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7149                           
  7150                           ;incstack = 0
  7151  003084  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  7152  003088  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7153                           
  7154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7155  00308C  0E00               	movlw	0
  7156  00308E  6E51               	movwf	_nout+1,c
  7157  003090  0E00               	movlw	0
  7158  003092  6E50               	movwf	_nout,c
  7159                           
  7160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7161  003094  D014               	goto	l6245
  7162  003096                     l6243:
  7163                           
  7164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7165  003096  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  7166  00309A  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7167  00309E  0EEB               	movlw	low vfprintf@cfmt
  7168  0030A0  0100               	movlb	0	; () banked
  7169  0030A2  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  7170  0030A4  0E00               	movlw	high vfprintf@cfmt
  7171  0030A6  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7172  0030A8  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  7173  0030AC  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7174  0030B0  ECA5  F006         	call	_vfpfcnvrt	;wreg free
  7175  0030B4  0100               	movlb	0	; () banked
  7176  0030B6  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  7177  0030B8  2650               	addwf	_nout,f,c
  7178  0030BA  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7179  0030BC  2251               	addwfc	_nout+1,f,c
  7180  0030BE                     l6245:
  7181                           
  7182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7183  0030BE  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  7184  0030C2  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7185  0030C6                     	if	0	;tblptru may be non-zero
  7186  0030C6                     	endif
  7187  0030C6                     	if	0	;tblptru may be non-zero
  7188  0030C6                     	endif
  7189  0030C6  0008               	tblrd		*
  7190  0030C8  50F5               	movf	tablat,w,c
  7191  0030CA  0900               	iorlw	0
  7192  0030CC  A4D8               	btfss	status,2,c
  7193  0030CE  D7E3               	goto	l6243
  7194                           
  7195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7196  0030D0  C050  F0E5         	movff	_nout,?_vfprintf
  7197  0030D4  C051  F0E6         	movff	_nout+1,?_vfprintf+1
  7198  0030D8  0012               	return		;funcret
  7199  0030DA                     __end_of_vfprintf:
  7200                           	opt callstack 0
  7201                           
  7202 ;; *************** function _vfpfcnvrt *****************
  7203 ;; Defined at:
  7204 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  7207 ;;		 -> NULL(0), 
  7208 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  7209 ;;		 -> vfprintf@cfmt(2), 
  7210 ;;  ap              2   74[BANK0 ] PTR PTR void 
  7211 ;;		 -> printf@ap(2), 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;  llu             8   88[BANK0 ] unsigned long long 
  7214 ;;  ll              8   80[BANK0 ] long long 
  7215 ;;  f               4    0        long long 
  7216 ;;  vp              3    0        PTR void 
  7217 ;;  ct              3    0        unsigned char [3]
  7218 ;;  cp              3    0        PTR unsigned char 
  7219 ;;  done            2   97[BANK0 ] int 
  7220 ;;  i               2    0        int 
  7221 ;;  c               1   96[BANK0 ] unsigned char 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  2   70[BANK0 ] int 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7231 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;Total ram usage:       31 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:   11
  7238 ;; This function calls:
  7239 ;;		_atoi
  7240 ;;		_dtoa
  7241 ;;		_fputc
  7242 ;;		_isdigit
  7243 ;;		_xtoa
  7244 ;; This function is called by:
  7245 ;;		_vfprintf
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text25
  7250  000D4A                     __ptext25:
  7251                           	opt callstack 0
  7252  000D4A                     _vfpfcnvrt:
  7253                           	opt callstack 16
  7254                           
  7255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7256                           
  7257                           ;incstack = 0
  7258  000D4A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7259  000D4E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7260  000D52  CFDE FFF6          	movff	postinc2,tblptrl
  7261  000D56  CFDD FFF7          	movff	postdec2,tblptrh
  7262  000D5A                     	if	0	;tblptru may be non-zero
  7263  000D5A                     	endif
  7264  000D5A                     	if	0	;tblptru may be non-zero
  7265  000D5A                     	endif
  7266  000D5A  0008               	tblrd		*
  7267  000D5C  50F5               	movf	tablat,w,c
  7268  000D5E  0A25               	xorlw	37
  7269  000D60  A4D8               	btfss	status,2,c
  7270  000D62  D1AD               	goto	l6219
  7271                           
  7272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7273  000D64  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7274  000D68  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7275  000D6C  2ADE               	incf	postinc2,f,c
  7276  000D6E  0E00               	movlw	0
  7277  000D70  22DD               	addwfc	postdec2,f,c
  7278                           
  7279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7280  000D72  0E00               	movlw	0
  7281  000D74  6E53               	movwf	_width+1,c
  7282  000D76  0E00               	movlw	0
  7283  000D78  6E52               	movwf	_width,c
  7284  000D7A  C052  F056         	movff	_width,_flags
  7285  000D7E  C053  F057         	movff	_width+1,_flags+1
  7286                           
  7287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7288  000D82  6854               	setf	_prec,c
  7289  000D84  6855               	setf	_prec+1,c
  7290                           
  7291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  7292  000D86  0E00               	movlw	0
  7293  000D88  0100               	movlb	0	; () banked
  7294  000D8A  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7295  000D8C  0E00               	movlw	0
  7296  000D8E  D014               	goto	L4
  7297  000D90                     l6131:
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  7301  000D90  8056               	bsf	_flags,0,c
  7302  000D92                     l6133:
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  7306  000D92  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7307  000D96  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7308  000D9A  2ADE               	incf	postinc2,f,c
  7309  000D9C  0E00               	movlw	0
  7310  000D9E  22DD               	addwfc	postdec2,f,c
  7311                           
  7312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  7313  000DA0  D02E               	goto	l6157
  7314  000DA2                     l6135:
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  7318  000DA2  8256               	bsf	_flags,1,c
  7319  000DA4  D7F6               	goto	l6133
  7320  000DA6                     l6139:
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  7324  000DA6  8456               	bsf	_flags,2,c
  7325  000DA8  D7F4               	goto	l6133
  7326  000DAA                     l6143:
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  7330  000DAA  8656               	bsf	_flags,3,c
  7331  000DAC  D7F2               	goto	l6133
  7332  000DAE                     l6147:
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  7336  000DAE  8856               	bsf	_flags,4,c
  7337  000DB0  D7F0               	goto	l6133
  7338  000DB2                     l6151:
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  7342  000DB2  0E00               	movlw	0
  7343  000DB4  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7344  000DB6  0E01               	movlw	1
  7345  000DB8                     L4:
  7346  000DB8  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  7347                           
  7348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  7349  000DBA  D021               	goto	l6157
  7350  000DBC                     l6155:
  7351                           
  7352                           ; BSR set to: 0
  7353  000DBC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7354  000DC0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7355  000DC4  CFDE FFF6          	movff	postinc2,tblptrl
  7356  000DC8  CFDD FFF7          	movff	postdec2,tblptrh
  7357  000DCC                     	if	0	;tblptru may be non-zero
  7358  000DCC                     	endif
  7359  000DCC                     	if	0	;tblptru may be non-zero
  7360  000DCC                     	endif
  7361  000DCC  0008               	tblrd		*
  7362  000DCE  50F5               	movf	tablat,w,c
  7363  000DD0  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  7364  000DD2  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7365                           
  7366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7367                           ; Switch size 1, requested type "simple"
  7368                           ; Number of cases is 1, Range of values is 0 to 0
  7369                           ; switch strategies available:
  7370                           ; Name         Instructions Cycles
  7371                           ; simple_byte            4     3 (average)
  7372                           ;	Chosen strategy is simple_byte
  7373  000DD4  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7374  000DD6  0A00               	xorlw	0	; case 0
  7375  000DD8  A4D8               	btfss	status,2,c
  7376  000DDA  D7EB               	goto	l6151
  7377                           
  7378                           ; BSR set to: 0
  7379                           ; Switch size 1, requested type "simple"
  7380                           ; Number of cases is 5, Range of values is 32 to 48
  7381                           ; switch strategies available:
  7382                           ; Name         Instructions Cycles
  7383                           ; simple_byte           16     9 (average)
  7384                           ;	Chosen strategy is simple_byte
  7385  000DDC  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  7386  000DDE  0A20               	xorlw	32	; case 32
  7387  000DE0  B4D8               	btfsc	status,2,c
  7388  000DE2  D7E3               	goto	l6143
  7389  000DE4  0A03               	xorlw	3	; case 35
  7390  000DE6  B4D8               	btfsc	status,2,c
  7391  000DE8  D7E2               	goto	l6147
  7392  000DEA  0A08               	xorlw	8	; case 43
  7393  000DEC  B4D8               	btfsc	status,2,c
  7394  000DEE  D7DB               	goto	l6139
  7395  000DF0  0A06               	xorlw	6	; case 45
  7396  000DF2  B4D8               	btfsc	status,2,c
  7397  000DF4  D7CD               	goto	l6131
  7398  000DF6  0A1D               	xorlw	29	; case 48
  7399  000DF8  B4D8               	btfsc	status,2,c
  7400  000DFA  D7D3               	goto	l6135
  7401  000DFC  D7DA               	goto	l6151
  7402  000DFE                     l6157:
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7406  000DFE  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  7407  000E00  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  7408  000E02  B4D8               	btfsc	status,2,c
  7409  000E04  D7DB               	goto	l6155
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  7413  000E06  B056               	btfsc	_flags,0,c
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  7417  000E08  9256               	bcf	_flags,1,c
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7421  000E0A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7422  000E0E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7423  000E12  CFDE FFF6          	movff	postinc2,tblptrl
  7424  000E16  CFDD FFF7          	movff	postdec2,tblptrh
  7425  000E1A                     	if	0	;tblptru may be non-zero
  7426  000E1A                     	endif
  7427  000E1A                     	if	0	;tblptru may be non-zero
  7428  000E1A                     	endif
  7429  000E1A  0008               	tblrd		*
  7430  000E1C  50F5               	movf	tablat,w,c
  7431  000E1E  0A2A               	xorlw	42
  7432  000E20  A4D8               	btfss	status,2,c
  7433  000E22  D023               	goto	l6169
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7437  000E24  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7438  000E28  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7439  000E2C  2ADE               	incf	postinc2,f,c
  7440  000E2E  0E00               	movlw	0
  7441  000E30  22DD               	addwfc	postdec2,f,c
  7442                           
  7443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7444  000E32  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7445  000E36  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7446  000E3A  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  7447  000E3E  0E02               	movlw	2
  7448  000E40  26DE               	addwf	postinc2,f,c
  7449  000E42  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  7450  000E46  0E00               	movlw	0
  7451  000E48  22DD               	addwfc	postdec2,f,c
  7452  000E4A  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7453  000E4E  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7454  000E52  CFDE F052          	movff	postinc2,_width
  7455  000E56  CFDD F053          	movff	postdec2,_width+1
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7459  000E5A  AE53               	btfss	_width+1,7,c
  7460  000E5C  D040               	goto	u6870
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7464  000E5E  8056               	bsf	_flags,0,c
  7465                           
  7466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7467  000E60  6C52               	negf	_width,c
  7468  000E62  1E53               	comf	_width+1,f,c
  7469  000E64  B0D8               	btfsc	status,0,c
  7470  000E66  2A53               	incf	_width+1,f,c
  7471  000E68  D03A               	goto	u6870
  7472  000E6A                     l6169:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7476  000E6A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7477  000E6E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7478  000E72  CFDE F087          	movff	postinc2,atoi@s
  7479  000E76  CFDD F088          	movff	postdec2,atoi@s+1
  7480  000E7A  EC11  F012         	call	_atoi	;wreg free
  7481  000E7E  C087  F052         	movff	?_atoi,_width
  7482  000E82  C088  F053         	movff	?_atoi+1,_width+1
  7483                           
  7484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7485  000E86  D007               	goto	l6173
  7486  000E88                     l6171:
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7490  000E88  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7491  000E8C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7492  000E90  2ADE               	incf	postinc2,f,c
  7493  000E92  0E00               	movlw	0
  7494  000E94  22DD               	addwfc	postdec2,f,c
  7495  000E96                     l6173:
  7496  000E96  0ED0               	movlw	208
  7497  000E98  0100               	movlb	0	; () banked
  7498  000E9A  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  7499  000E9C  0EFF               	movlw	255
  7500  000E9E  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7501  000EA0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7502  000EA4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7503  000EA8  CFDE FFF6          	movff	postinc2,tblptrl
  7504  000EAC  CFDD FFF7          	movff	postdec2,tblptrh
  7505  000EB0                     	if	0	;tblptru may be non-zero
  7506  000EB0                     	endif
  7507  000EB0                     	if	0	;tblptru may be non-zero
  7508  000EB0                     	endif
  7509  000EB0  0008               	tblrd		*
  7510  000EB2  50F5               	movf	tablat,w,c
  7511  000EB4  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7512  000EB6  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7513  000EB8  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  7514  000EBA  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7515  000EBC  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7516  000EBE  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7517  000EC0  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7518  000EC2  E106               	bnz	u6850
  7519  000EC4  0E0A               	movlw	10
  7520  000EC6  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7521  000EC8  B0D8               	btfsc	status,0,c
  7522  000ECA  D002               	goto	u6850
  7523  000ECC  0E01               	movlw	1
  7524  000ECE  D001               	goto	u6860
  7525  000ED0                     u6850:
  7526  000ED0  0E00               	movlw	0
  7527  000ED2                     u6860:
  7528  000ED2  6FE3               	movwf	_vfpfcnvrt$1059& (0+255),b
  7529  000ED4  6BE4               	clrf	(_vfpfcnvrt$1059+1)& (0+255),b
  7530                           
  7531                           ; BSR set to: 0
  7532  000ED6  51E3               	movf	_vfpfcnvrt$1059& (0+255),w,b
  7533  000ED8  11E4               	iorwf	(_vfpfcnvrt$1059+1)& (0+255),w,b
  7534  000EDA  A4D8               	btfss	status,2,c
  7535  000EDC  D7D5               	goto	l6171
  7536  000EDE                     u6870:
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7540  000EDE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7541  000EE2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7542  000EE6  CFDE FFF6          	movff	postinc2,tblptrl
  7543  000EEA  CFDD FFF7          	movff	postdec2,tblptrh
  7544  000EEE                     	if	0	;tblptru may be non-zero
  7545  000EEE                     	endif
  7546  000EEE                     	if	0	;tblptru may be non-zero
  7547  000EEE                     	endif
  7548  000EEE  0008               	tblrd		*
  7549  000EF0  50F5               	movf	tablat,w,c
  7550  000EF2  0A64               	xorlw	100
  7551  000EF4  B4D8               	btfsc	status,2,c
  7552  000EF6  D00D               	goto	u6890
  7553                           
  7554                           ; BSR set to: 0
  7555  000EF8  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7556  000EFC  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7557  000F00  CFDE FFF6          	movff	postinc2,tblptrl
  7558  000F04  CFDD FFF7          	movff	postdec2,tblptrh
  7559  000F08                     	if	0	;tblptru may be non-zero
  7560  000F08                     	endif
  7561  000F08                     	if	0	;tblptru may be non-zero
  7562  000F08                     	endif
  7563  000F08  0008               	tblrd		*
  7564  000F0A  50F5               	movf	tablat,w,c
  7565  000F0C  0A69               	xorlw	105
  7566  000F0E  A4D8               	btfss	status,2,c
  7567  000F10  D03F               	goto	l6189
  7568  000F12                     u6890:
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  7572  000F12  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7573  000F16  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7574  000F1A  2ADE               	incf	postinc2,f,c
  7575  000F1C  0E00               	movlw	0
  7576  000F1E  22DD               	addwfc	postdec2,f,c
  7577                           
  7578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7579  000F20  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7580  000F24  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7581  000F28  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  7582  000F2C  0E02               	movlw	2
  7583  000F2E  26DE               	addwf	postinc2,f,c
  7584  000F30  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  7585  000F34  0E00               	movlw	0
  7586  000F36  22DD               	addwfc	postdec2,f,c
  7587  000F38  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7588  000F3C  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7589  000F40  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  7590  000F44  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  7591  000F48  0E00               	movlw	0
  7592  000F4A  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7593  000F4C  0EFF               	movlw	-1
  7594  000F4E  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7595  000F50  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7596  000F52  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7597  000F54  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7598  000F56  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7599  000F58  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  7603  000F5A  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  7604  000F5E  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7605  000F62  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  7606  000F66  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7607  000F6A  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7608  000F6E  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7609  000F72  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7610  000F76  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7611  000F7A  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7612  000F7E  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7613  000F82  EC24  F00D         	call	_dtoa	;wreg free
  7614  000F86  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  7615  000F8A  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7616  000F8E  0012               	return	
  7617  000F90                     l6189:
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  7621  000F90  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7622  000F94  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7623  000F98  CFDE FFF6          	movff	postinc2,tblptrl
  7624  000F9C  CFDD FFF7          	movff	postdec2,tblptrh
  7625  000FA0                     	if	0	;tblptru may be non-zero
  7626  000FA0                     	endif
  7627  000FA0                     	if	0	;tblptru may be non-zero
  7628  000FA0                     	endif
  7629  000FA0  0008               	tblrd		*
  7630  000FA2  50F5               	movf	tablat,w,c
  7631  000FA4  0A78               	xorlw	120
  7632  000FA6  B4D8               	btfsc	status,2,c
  7633  000FA8  D00D               	goto	u6910
  7634                           
  7635                           ; BSR set to: 0
  7636  000FAA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7637  000FAE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7638  000FB2  CFDE FFF6          	movff	postinc2,tblptrl
  7639  000FB6  CFDD FFF7          	movff	postdec2,tblptrh
  7640  000FBA                     	if	0	;tblptru may be non-zero
  7641  000FBA                     	endif
  7642  000FBA                     	if	0	;tblptru may be non-zero
  7643  000FBA                     	endif
  7644  000FBA  0008               	tblrd		*
  7645  000FBC  50F5               	movf	tablat,w,c
  7646  000FBE  0A58               	xorlw	88
  7647  000FC0  A4D8               	btfss	status,2,c
  7648  000FC2  D04D               	goto	l6203
  7649  000FC4                     u6910:
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  7653  000FC4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7654  000FC8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7655  000FCC  CFDE FFF6          	movff	postinc2,tblptrl
  7656  000FD0  CFDD FFF7          	movff	postdec2,tblptrh
  7657  000FD4                     	if	0	;tblptru may be non-zero
  7658  000FD4                     	endif
  7659  000FD4                     	if	0	;tblptru may be non-zero
  7660  000FD4                     	endif
  7661  000FD4  0008               	tblrd		*
  7662  000FD6  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  7666  000FDA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7667  000FDE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7668  000FE2  2ADE               	incf	postinc2,f,c
  7669  000FE4  0E00               	movlw	0
  7670  000FE6  22DD               	addwfc	postdec2,f,c
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  7674  000FE8  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7675  000FEC  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7676  000FF0  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  7677  000FF4  0E02               	movlw	2
  7678  000FF6  26DE               	addwf	postinc2,f,c
  7679  000FF8  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  7680  000FFC  0E00               	movlw	0
  7681  000FFE  22DD               	addwfc	postdec2,f,c
  7682  001000  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7683  001004  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7684  001008  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  7685  00100C  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  7686  001010  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  7687  001014  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  7688  001018  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  7689  00101A  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  7690  00101C  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  7691  00101E  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  7692  001020  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  7693  001022  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  7697  001024  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  7698  001028  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  7699  00102C  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  7700  001030  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  7701  001034  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  7702  001038  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  7703  00103C  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  7704  001040  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  7705  001044  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  7706  001048  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  7707  00104C  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  7708  001050  EC48  F00E         	call	_xtoa	;wreg free
  7709  001054  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  7710  001058  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  7711  00105C  0012               	return	
  7712  00105E                     l6203:
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7716  00105E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7717  001062  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7718  001066  CFDE FFF6          	movff	postinc2,tblptrl
  7719  00106A  CFDD FFF7          	movff	postdec2,tblptrh
  7720  00106E                     	if	0	;tblptru may be non-zero
  7721  00106E                     	endif
  7722  00106E                     	if	0	;tblptru may be non-zero
  7723  00106E                     	endif
  7724  00106E  0008               	tblrd		*
  7725  001070  50F5               	movf	tablat,w,c
  7726  001072  0A25               	xorlw	37
  7727  001074  A4D8               	btfss	status,2,c
  7728  001076  D017               	goto	l6213
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7732  001078  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7733  00107C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7734  001080  2ADE               	incf	postinc2,f,c
  7735  001082  0E00               	movlw	0
  7736  001084  22DD               	addwfc	postdec2,f,c
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7740  001086  0E00               	movlw	0
  7741  001088  6F85               	movwf	(fputc@c+1)& (0+255),b
  7742  00108A  0E25               	movlw	37
  7743  00108C  6F84               	movwf	fputc@c& (0+255),b
  7744  00108E  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  7745  001092  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7746  001096  EC4C  F017         	call	_fputc	;wreg free
  7747  00109A                     l6209:
  7748                           
  7749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7750  00109A  0E00               	movlw	0
  7751  00109C  0100               	movlb	0	; () banked
  7752  00109E  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7753  0010A0  0E01               	movlw	1
  7754  0010A2  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  7755  0010A4  0012               	return	
  7756  0010A6                     l6213:
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7760  0010A6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7761  0010AA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7762  0010AE  2ADE               	incf	postinc2,f,c
  7763  0010B0  0E00               	movlw	0
  7764  0010B2  22DD               	addwfc	postdec2,f,c
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  7768  0010B4  0E00               	movlw	0
  7769  0010B6  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7770  0010B8  0E00               	movlw	0
  7771  0010BA  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  7772  0010BC  0012               	return	
  7773  0010BE                     l6219:
  7774                           
  7775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7776  0010BE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7777  0010C2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7778  0010C6  CFDE FFF6          	movff	postinc2,tblptrl
  7779  0010CA  CFDD FFF7          	movff	postdec2,tblptrh
  7780  0010CE                     	if	0	;tblptru may be non-zero
  7781  0010CE                     	endif
  7782  0010CE                     	if	0	;tblptru may be non-zero
  7783  0010CE                     	endif
  7784  0010CE  0008               	tblrd		*
  7785  0010D0  50F5               	movf	tablat,w,c
  7786  0010D2  0100               	movlb	0	; () banked
  7787  0010D4  6F84               	movwf	fputc@c& (0+255),b
  7788  0010D6  6B85               	clrf	(fputc@c+1)& (0+255),b
  7789  0010D8  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  7790  0010DC  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7791  0010E0  EC4C  F017         	call	_fputc	;wreg free
  7792                           
  7793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7794  0010E4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7795  0010E8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7796  0010EC  2ADE               	incf	postinc2,f,c
  7797  0010EE  0E00               	movlw	0
  7798  0010F0  22DD               	addwfc	postdec2,f,c
  7799  0010F2  D7D3               	goto	l6209
  7800  0010F4                     __end_of_vfpfcnvrt:
  7801                           	opt callstack 0
  7802                           
  7803 ;; *************** function _xtoa *****************
  7804 ;; Defined at:
  7805 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  7808 ;;		 -> NULL(0), 
  7809 ;;  d               8   33[BANK0 ] unsigned long long 
  7810 ;;  x               1   41[BANK0 ] unsigned char 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  n               8   58[BANK0 ] unsigned long long 
  7813 ;;  c               2   68[BANK0 ] int 
  7814 ;;  i               2   66[BANK0 ] int 
  7815 ;;  w               2   56[BANK0 ] int 
  7816 ;;  p               2   54[BANK0 ] int 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  2   31[BANK0 ] int 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7826 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7828 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7829 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;Total ram usage:       39 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:   10
  7833 ;; This function calls:
  7834 ;;		_isalpha
  7835 ;;		_isupper
  7836 ;;		_pad
  7837 ;;		_toupper
  7838 ;; This function is called by:
  7839 ;;		_vfpfcnvrt
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text26
  7844  001C90                     __ptext26:
  7845                           	opt callstack 0
  7846  001C90                     _xtoa:
  7847                           	opt callstack 16
  7848                           
  7849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7850                           
  7851                           ;incstack = 0
  7852  001C90  AE55               	btfss	_prec+1,7,c
  7853                           
  7854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7855  001C92  9256               	bcf	_flags,1,c
  7856                           
  7857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7858  001C94  BE55               	btfsc	_prec+1,7,c
  7859  001C96  D005               	goto	u6570
  7860  001C98  5055               	movf	_prec+1,w,c
  7861  001C9A  E109               	bnz	l613
  7862  001C9C  0454               	decf	_prec,w,c
  7863  001C9E  B0D8               	btfsc	status,0,c
  7864  001CA0  D006               	goto	l613
  7865  001CA2                     u6570:
  7866  001CA2  0E00               	movlw	0
  7867  001CA4  0100               	movlb	0	; () banked
  7868  001CA6  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  7869  001CA8  0E01               	movlw	1
  7870  001CAA  6FB6               	movwf	xtoa@p& (0+255),b
  7871  001CAC  D004               	goto	l615
  7872  001CAE                     l613:
  7873  001CAE  C054  F0B6         	movff	_prec,xtoa@p
  7874  001CB2  C055  F0B7         	movff	_prec+1,xtoa@p+1
  7875  001CB6                     l615:
  7876                           
  7877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7878  001CB6  C052  F0B8         	movff	_width,xtoa@w
  7879  001CBA  C053  F0B9         	movff	_width+1,xtoa@w+1
  7880                           
  7881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7882  001CBE  A856               	btfss	_flags,4,c
  7883  001CC0  D005               	goto	l6023
  7884                           
  7885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7886  001CC2  0100               	movlb	0	; () banked
  7887  001CC4  0EFE               	movlw	254
  7888  001CC6  27B8               	addwf	xtoa@w& (0+255),f,b
  7889  001CC8  0EFF               	movlw	255
  7890  001CCA  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  7891  001CCC                     l6023:
  7892                           
  7893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7894  001CCC  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  7895  001CD0  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  7896  001CD4  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  7897  001CD8  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  7898  001CDC  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  7899  001CE0  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  7900  001CE4  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  7901  001CE8  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  7902                           
  7903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7904  001CEC  0E00               	movlw	0
  7905  001CEE  0100               	movlb	0	; () banked
  7906  001CF0  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  7907  001CF2  0E1F               	movlw	31
  7908  001CF4  6FC2               	movwf	xtoa@i& (0+255),b
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7912  001CF6  0E00               	movlw	0
  7913  001CF8  0102               	movlb	2	; () banked
  7914  001CFA  6F77               	movwf	(_dbuf+31)& (0+255),b
  7915                           
  7916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7917  001CFC  D094               	goto	l6059
  7918  001CFE                     l6029:
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7922  001CFE  07C2               	decf	xtoa@i& (0+255),f,b
  7923  001D00  A0D8               	btfss	status,0,c
  7924  001D02  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7928  001D04  0E0F               	movlw	15
  7929  001D06  15BA               	andwf	xtoa@n& (0+255),w,b
  7930  001D08  6FC4               	movwf	xtoa@c& (0+255),b
  7931  001D0A  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7935  001D0C  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  7936  001D0E  D008               	goto	l6037
  7937  001D10  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  7938  001D12  E104               	bnz	u6590
  7939  001D14  0E0A               	movlw	10
  7940  001D16  5DC4               	subwf	xtoa@c& (0+255),w,b
  7941  001D18  A0D8               	btfss	status,0,c
  7942  001D1A  D002               	goto	l6037
  7943  001D1C                     u6590:
  7944                           
  7945                           ; BSR set to: 0
  7946  001D1C  0E57               	movlw	87
  7947  001D1E  D001               	goto	L5
  7948  001D20                     l6037:
  7949                           
  7950                           ; BSR set to: 0
  7951  001D20  0E30               	movlw	48
  7952  001D22                     L5:
  7953  001D22  25C4               	addwf	xtoa@c& (0+255),w,b
  7954  001D24  6FC4               	movwf	xtoa@c& (0+255),b
  7955  001D26  0E00               	movlw	0
  7956  001D28  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  7957  001D2A  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  7958                           
  7959                           ; BSR set to: 0
  7960                           
  7961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  7962  001D2C  0EBF               	movlw	191
  7963  001D2E  6FAA               	movwf	??_xtoa& (0+255),b
  7964  001D30  0EFF               	movlw	255
  7965  001D32  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  7966  001D34  51A9               	movf	xtoa@x& (0+255),w,b
  7967  001D36  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  7968  001D38  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  7969  001D3A  51AA               	movf	??_xtoa& (0+255),w,b
  7970  001D3C  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  7971  001D3E  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  7972  001D40  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  7973  001D42  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  7974  001D44  E106               	bnz	u6600
  7975  001D46  0E1A               	movlw	26
  7976  001D48  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  7977  001D4A  B0D8               	btfsc	status,0,c
  7978  001D4C  D002               	goto	u6600
  7979  001D4E  0E01               	movlw	1
  7980  001D50  D001               	goto	u6610
  7981  001D52                     u6600:
  7982  001D52  0E00               	movlw	0
  7983  001D54                     u6610:
  7984  001D54  6FB2               	movwf	_xtoa$1044& (0+255),b
  7985  001D56  6BB3               	clrf	(_xtoa$1044+1)& (0+255),b
  7986                           
  7987                           ; BSR set to: 0
  7988  001D58  51B2               	movf	_xtoa$1044& (0+255),w,b
  7989  001D5A  11B3               	iorwf	(_xtoa$1044+1)& (0+255),w,b
  7990  001D5C  B4D8               	btfsc	status,2,c
  7991  001D5E  D027               	goto	l6051
  7992                           
  7993                           ; BSR set to: 0
  7994  001D60  0E9F               	movlw	159
  7995  001D62  6FAA               	movwf	??_xtoa& (0+255),b
  7996  001D64  0EFF               	movlw	255
  7997  001D66  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  7998  001D68  0E20               	movlw	32
  7999  001D6A  11C4               	iorwf	xtoa@c& (0+255),w,b
  8000  001D6C  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8001  001D6E  0E00               	movlw	0
  8002  001D70  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  8003  001D72  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  8004  001D74  51AA               	movf	??_xtoa& (0+255),w,b
  8005  001D76  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8006  001D78  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8007  001D7A  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8008  001D7C  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8009  001D7E  E106               	bnz	u6630
  8010  001D80  0E1A               	movlw	26
  8011  001D82  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8012  001D84  B0D8               	btfsc	status,0,c
  8013  001D86  D002               	goto	u6630
  8014  001D88  0E01               	movlw	1
  8015  001D8A  D001               	goto	u6640
  8016  001D8C                     u6630:
  8017  001D8C  0E00               	movlw	0
  8018  001D8E                     u6640:
  8019  001D8E  6FB4               	movwf	_xtoa$1045& (0+255),b
  8020  001D90  6BB5               	clrf	(_xtoa$1045+1)& (0+255),b
  8021                           
  8022                           ; BSR set to: 0
  8023  001D92  51B4               	movf	_xtoa$1045& (0+255),w,b
  8024  001D94  11B5               	iorwf	(_xtoa$1045+1)& (0+255),w,b
  8025  001D96  B4D8               	btfsc	status,2,c
  8026  001D98  D00A               	goto	l6051
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  8030  001D9A  C0C4  F086         	movff	xtoa@c,toupper@c
  8031  001D9E  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  8032  001DA2  EC12  F019         	call	_toupper	;wreg free
  8033  001DA6  C086  F0C4         	movff	?_toupper,xtoa@c
  8034  001DAA  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  8035  001DAE                     l6051:
  8036                           
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  8038  001DAE  0E58               	movlw	low _dbuf
  8039  001DB0  0100               	movlb	0	; () banked
  8040  001DB2  25C2               	addwf	xtoa@i& (0+255),w,b
  8041  001DB4  6ED9               	movwf	fsr2l,c
  8042  001DB6  0E02               	movlw	high _dbuf
  8043  001DB8  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8044  001DBA  6EDA               	movwf	fsr2h,c
  8045  001DBC  C0C4  FFDF         	movff	xtoa@c,indf2
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  8049  001DC0  07B6               	decf	xtoa@p& (0+255),f,b
  8050  001DC2  A0D8               	btfss	status,0,c
  8051  001DC4  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  8055  001DC6  07B8               	decf	xtoa@w& (0+255),f,b
  8056  001DC8  A0D8               	btfss	status,0,c
  8057  001DCA  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  8061  001DCC  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  8062  001DD0  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  8063  001DD4  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  8064  001DD8  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  8065  001DDC  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  8066  001DE0  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  8067  001DE4  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  8068  001DE8  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  8069  001DEC  0E05               	movlw	5
  8070  001DEE  D009               	goto	u6660
  8071  001DF0                     u6665:
  8072  001DF0  90D8               	bcf	status,0,c
  8073  001DF2  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  8074  001DF4  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  8075  001DF6  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  8076  001DF8  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  8077  001DFA  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  8078  001DFC  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  8079  001DFE  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  8080  001E00  33AA               	rrcf	??_xtoa& (0+255),f,b
  8081  001E02                     u6660:
  8082  001E02  2EE8               	decfsz	wreg,f,c
  8083  001E04  D7F5               	goto	u6665
  8084  001E06  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  8085  001E0A  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  8086  001E0E  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  8087  001E12  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  8088  001E16  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  8089  001E1A  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  8090  001E1E  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  8091  001E22  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  8092  001E26                     l6059:
  8093                           
  8094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8095  001E26  0100               	movlb	0	; () banked
  8096  001E28  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  8097  001E2A  D020               	goto	u6710
  8098  001E2C  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  8099  001E2E  E104               	bnz	u6670
  8100  001E30  0E02               	movlw	2
  8101  001E32  5DC2               	subwf	xtoa@i& (0+255),w,b
  8102  001E34  A0D8               	btfss	status,0,c
  8103  001E36  D01A               	goto	u6710
  8104  001E38                     u6670:
  8105                           
  8106                           ; BSR set to: 0
  8107  001E38  51BA               	movf	xtoa@n& (0+255),w,b
  8108  001E3A  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  8109  001E3C  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  8110  001E3E  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  8111  001E40  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  8112  001E42  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  8113  001E44  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  8114  001E46  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  8115  001E48  A4D8               	btfss	status,2,c
  8116  001E4A  D759               	goto	l6029
  8117                           
  8118                           ; BSR set to: 0
  8119  001E4C  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  8120  001E4E  D005               	goto	u6690
  8121  001E50  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  8122  001E52  E102               	bnz	u6691
  8123  001E54  05B6               	decf	xtoa@p& (0+255),w,b
  8124  001E56  B0D8               	btfsc	status,0,c
  8125  001E58                     u6691:
  8126  001E58  D752               	goto	l6029
  8127  001E5A                     u6690:
  8128                           
  8129                           ; BSR set to: 0
  8130  001E5A  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  8131  001E5C  D007               	goto	u6710
  8132  001E5E  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  8133  001E60  E103               	bnz	u6700
  8134  001E62  05B8               	decf	xtoa@w& (0+255),w,b
  8135  001E64  A0D8               	btfss	status,0,c
  8136  001E66  D002               	goto	u6710
  8137  001E68                     u6700:
  8138                           
  8139                           ; BSR set to: 0
  8140  001E68  B256               	btfsc	_flags,1,c
  8141  001E6A  D749               	goto	l6029
  8142  001E6C                     u6710:
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  8146  001E6C  A856               	btfss	_flags,4,c
  8147  001E6E  D016               	goto	l6075
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  8151  001E70  07C2               	decf	xtoa@i& (0+255),f,b
  8152  001E72  A0D8               	btfss	status,0,c
  8153  001E74  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  8157  001E76  0E58               	movlw	low _dbuf
  8158  001E78  25C2               	addwf	xtoa@i& (0+255),w,b
  8159  001E7A  6ED9               	movwf	fsr2l,c
  8160  001E7C  0E02               	movlw	high _dbuf
  8161  001E7E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8162  001E80  6EDA               	movwf	fsr2h,c
  8163  001E82  C0A9  FFDF         	movff	xtoa@x,indf2
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  8167  001E86  07C2               	decf	xtoa@i& (0+255),f,b
  8168  001E88  A0D8               	btfss	status,0,c
  8169  001E8A  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8170                           
  8171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  8172  001E8C  0E58               	movlw	low _dbuf
  8173  001E8E  25C2               	addwf	xtoa@i& (0+255),w,b
  8174  001E90  6ED9               	movwf	fsr2l,c
  8175  001E92  0E02               	movlw	high _dbuf
  8176  001E94  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8177  001E96  6EDA               	movwf	fsr2h,c
  8178  001E98  0E30               	movlw	48
  8179  001E9A  6EDF               	movwf	indf2,c
  8180  001E9C                     l6075:
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  8184  001E9C  C09F  F094         	movff	xtoa@fp,pad@fp
  8185  001EA0  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  8186  001EA4  0E58               	movlw	low _dbuf
  8187  001EA6  25C2               	addwf	xtoa@i& (0+255),w,b
  8188  001EA8  6F96               	movwf	pad@buf& (0+255),b
  8189  001EAA  0E02               	movlw	high _dbuf
  8190  001EAC  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8191  001EAE  6F97               	movwf	(pad@buf+1)& (0+255),b
  8192  001EB0  C0B8  F098         	movff	xtoa@w,pad@p
  8193  001EB4  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  8194  001EB8  EC32  F015         	call	_pad	;wreg free
  8195  001EBC  C094  F09F         	movff	?_pad,?_xtoa
  8196  001EC0  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  8197  001EC4  0012               	return		;funcret
  8198  001EC6                     __end_of_xtoa:
  8199                           	opt callstack 0
  8200                           
  8201 ;; *************** function _toupper *****************
  8202 ;; Defined at:
  8203 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;  c               2    6[BANK0 ] int 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;		None
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  2    6[BANK0 ] int 
  8210 ;; Registers used:
  8211 ;;		wreg, status,2, status,0
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8221 ;;Total ram usage:        8 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:    4
  8224 ;; This function calls:
  8225 ;;		_islower
  8226 ;; This function is called by:
  8227 ;;		_xtoa
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           	psect	text27
  8232  003224                     __ptext27:
  8233                           	opt callstack 0
  8234  003224                     _toupper:
  8235                           	opt callstack 21
  8236                           
  8237                           ;incstack = 0
  8238  003224  0E9F               	movlw	159
  8239  003226  0100               	movlb	0	; () banked
  8240  003228  6F88               	movwf	??_toupper& (0+255),b
  8241  00322A  0EFF               	movlw	255
  8242  00322C  6F89               	movwf	(??_toupper+1)& (0+255),b
  8243  00322E  C086  F08A         	movff	toupper@c,??_toupper+2
  8244  003232  C087  F08B         	movff	toupper@c+1,??_toupper+3
  8245  003236  5188               	movf	??_toupper& (0+255),w,b
  8246  003238  278A               	addwf	(??_toupper+2)& (0+255),f,b
  8247  00323A  5189               	movf	(??_toupper+1)& (0+255),w,b
  8248  00323C  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  8249  00323E  518B               	movf	(??_toupper+3)& (0+255),w,b
  8250  003240  E106               	bnz	u6210
  8251  003242  0E1A               	movlw	26
  8252  003244  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  8253  003246  B0D8               	btfsc	status,0,c
  8254  003248  D002               	goto	u6210
  8255  00324A  0E01               	movlw	1
  8256  00324C  D001               	goto	u6220
  8257  00324E                     u6210:
  8258  00324E  0E00               	movlw	0
  8259  003250                     u6220:
  8260  003250  6F8C               	movwf	_toupper$1609& (0+255),b
  8261  003252  6B8D               	clrf	(_toupper$1609+1)& (0+255),b
  8262                           
  8263                           ; BSR set to: 0
  8264  003254  518C               	movf	_toupper$1609& (0+255),w,b
  8265  003256  118D               	iorwf	(_toupper$1609+1)& (0+255),w,b
  8266  003258  B4D8               	btfsc	status,2,c
  8267  00325A  D005               	goto	l1453
  8268                           
  8269                           ; BSR set to: 0
  8270  00325C  0E5F               	movlw	95
  8271  00325E  1586               	andwf	toupper@c& (0+255),w,b
  8272  003260  6F86               	movwf	?_toupper& (0+255),b
  8273  003262  6B87               	clrf	(?_toupper+1)& (0+255),b
  8274  003264  0012               	return	
  8275  003266                     l1453:
  8276                           
  8277                           ; BSR set to: 0
  8278  003266  C086  F086         	movff	toupper@c,?_toupper
  8279  00326A  C087  F087         	movff	toupper@c+1,?_toupper+1
  8280                           
  8281                           ; BSR set to: 0
  8282  00326E  0012               	return		;funcret
  8283  003270                     __end_of_toupper:
  8284                           	opt callstack 0
  8285                           
  8286 ;; *************** function _islower *****************
  8287 ;; Defined at:
  8288 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  c               2    0[BANK0 ] int 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;		None
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  2    0[BANK0 ] int 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8302 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8305 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8306 ;;Total ram usage:        6 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:    3
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		_toupper
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text28
  8317  003388                     __ptext28:
  8318                           	opt callstack 0
  8319  003388                     _islower:
  8320                           	opt callstack 21
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;incstack = 0
  8324  003388  0E9F               	movlw	159
  8325  00338A  0100               	movlb	0	; () banked
  8326  00338C  6F82               	movwf	??_islower& (0+255),b
  8327  00338E  0EFF               	movlw	255
  8328  003390  6F83               	movwf	(??_islower+1)& (0+255),b
  8329  003392  C080  F084         	movff	islower@c,??_islower+2
  8330  003396  C081  F085         	movff	islower@c+1,??_islower+3
  8331  00339A  5182               	movf	??_islower& (0+255),w,b
  8332  00339C  2784               	addwf	(??_islower+2)& (0+255),f,b
  8333  00339E  5183               	movf	(??_islower+1)& (0+255),w,b
  8334  0033A0  2385               	addwfc	(??_islower+3)& (0+255),f,b
  8335  0033A2  5185               	movf	(??_islower+3)& (0+255),w,b
  8336  0033A4  E106               	bnz	u6100
  8337  0033A6  0E1A               	movlw	26
  8338  0033A8  5D84               	subwf	(??_islower+2)& (0+255),w,b
  8339  0033AA  B0D8               	btfsc	status,0,c
  8340  0033AC  D002               	goto	u6100
  8341  0033AE  0E01               	movlw	1
  8342  0033B0  D001               	goto	u6110
  8343  0033B2                     u6100:
  8344  0033B2  0E00               	movlw	0
  8345  0033B4                     u6110:
  8346  0033B4  6F80               	movwf	?_islower& (0+255),b
  8347  0033B6  6B81               	clrf	(?_islower+1)& (0+255),b
  8348                           
  8349                           ; BSR set to: 0
  8350  0033B8  0012               	return		;funcret
  8351  0033BA                     __end_of_islower:
  8352                           	opt callstack 0
  8353                           
  8354 ;; *************** function _isupper *****************
  8355 ;; Defined at:
  8356 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  c               2    0[BANK0 ] int 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;		None
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  2    0[BANK0 ] int 
  8363 ;; Registers used:
  8364 ;;		wreg, status,2, status,0
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8372 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;Total ram usage:        6 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    3
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_xtoa
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text29
  8385  0033BA                     __ptext29:
  8386                           	opt callstack 0
  8387  0033BA                     _isupper:
  8388                           	opt callstack 22
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;incstack = 0
  8392  0033BA  0EBF               	movlw	191
  8393  0033BC  0100               	movlb	0	; () banked
  8394  0033BE  6F82               	movwf	??_isupper& (0+255),b
  8395  0033C0  0EFF               	movlw	255
  8396  0033C2  6F83               	movwf	(??_isupper+1)& (0+255),b
  8397  0033C4  C080  F084         	movff	isupper@c,??_isupper+2
  8398  0033C8  C081  F085         	movff	isupper@c+1,??_isupper+3
  8399  0033CC  5182               	movf	??_isupper& (0+255),w,b
  8400  0033CE  2784               	addwf	(??_isupper+2)& (0+255),f,b
  8401  0033D0  5183               	movf	(??_isupper+1)& (0+255),w,b
  8402  0033D2  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  8403  0033D4  5185               	movf	(??_isupper+3)& (0+255),w,b
  8404  0033D6  E106               	bnz	u6170
  8405  0033D8  0E1A               	movlw	26
  8406  0033DA  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  8407  0033DC  B0D8               	btfsc	status,0,c
  8408  0033DE  D002               	goto	u6170
  8409  0033E0  0E01               	movlw	1
  8410  0033E2  D001               	goto	u6180
  8411  0033E4                     u6170:
  8412  0033E4  0E00               	movlw	0
  8413  0033E6                     u6180:
  8414  0033E6  6F80               	movwf	?_isupper& (0+255),b
  8415  0033E8  6B81               	clrf	(?_isupper+1)& (0+255),b
  8416                           
  8417                           ; BSR set to: 0
  8418  0033EA  0012               	return		;funcret
  8419  0033EC                     __end_of_isupper:
  8420                           	opt callstack 0
  8421                           
  8422 ;; *************** function _isalpha *****************
  8423 ;; Defined at:
  8424 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  8425 ;; Parameters:    Size  Location     Type
  8426 ;;  c               2    0[BANK0 ] int 
  8427 ;; Auto vars:     Size  Location     Type
  8428 ;;		None
  8429 ;; Return value:  Size  Location     Type
  8430 ;;                  2    0[BANK0 ] int 
  8431 ;; Registers used:
  8432 ;;		wreg, status,2, status,0
  8433 ;; Tracked objects:
  8434 ;;		On entry : 0/0
  8435 ;;		On exit  : 0/0
  8436 ;;		Unchanged: 0/0
  8437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8438 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;Total ram usage:        6 bytes
  8443 ;; Hardware stack levels used:    1
  8444 ;; Hardware stack levels required when called:    3
  8445 ;; This function calls:
  8446 ;;		Nothing
  8447 ;; This function is called by:
  8448 ;;		_xtoa
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text30
  8453  0032EC                     __ptext30:
  8454                           	opt callstack 0
  8455  0032EC                     _isalpha:
  8456                           	opt callstack 22
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;incstack = 0
  8460  0032EC  0E9F               	movlw	159
  8461  0032EE  0100               	movlb	0	; () banked
  8462  0032F0  6F82               	movwf	??_isalpha& (0+255),b
  8463  0032F2  0EFF               	movlw	255
  8464  0032F4  6F83               	movwf	(??_isalpha+1)& (0+255),b
  8465  0032F6  0E20               	movlw	32
  8466  0032F8  1180               	iorwf	isalpha@c& (0+255),w,b
  8467  0032FA  6F84               	movwf	(??_isalpha+2)& (0+255),b
  8468  0032FC  0E00               	movlw	0
  8469  0032FE  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
  8470  003300  6F85               	movwf	(??_isalpha+3)& (0+255),b
  8471  003302  5182               	movf	??_isalpha& (0+255),w,b
  8472  003304  2784               	addwf	(??_isalpha+2)& (0+255),f,b
  8473  003306  5183               	movf	(??_isalpha+1)& (0+255),w,b
  8474  003308  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
  8475  00330A  5185               	movf	(??_isalpha+3)& (0+255),w,b
  8476  00330C  E106               	bnz	u6190
  8477  00330E  0E1A               	movlw	26
  8478  003310  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
  8479  003312  B0D8               	btfsc	status,0,c
  8480  003314  D002               	goto	u6190
  8481  003316  0E01               	movlw	1
  8482  003318  D001               	goto	u6200
  8483  00331A                     u6190:
  8484  00331A  0E00               	movlw	0
  8485  00331C                     u6200:
  8486  00331C  6F80               	movwf	?_isalpha& (0+255),b
  8487  00331E  6B81               	clrf	(?_isalpha+1)& (0+255),b
  8488                           
  8489                           ; BSR set to: 0
  8490  003320  0012               	return		;funcret
  8491  003322                     __end_of_isalpha:
  8492                           	opt callstack 0
  8493                           
  8494 ;; *************** function _dtoa *****************
  8495 ;; Defined at:
  8496 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  8499 ;;		 -> NULL(0), 
  8500 ;;  d               8   33[BANK0 ] long long 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;  n               8   57[BANK0 ] long long 
  8503 ;;  i               2   65[BANK0 ] int 
  8504 ;;  s               2   55[BANK0 ] int 
  8505 ;;  w               2   53[BANK0 ] int 
  8506 ;;  p               2   51[BANK0 ] int 
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  2   31[BANK0 ] int 
  8509 ;; Registers used:
  8510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8516 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8518 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8520 ;;Total ram usage:       36 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:   10
  8523 ;; This function calls:
  8524 ;;		___aodiv
  8525 ;;		___aomod
  8526 ;;		_abs
  8527 ;;		_pad
  8528 ;; This function is called by:
  8529 ;;		_vfpfcnvrt
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text31
  8534  001A48                     __ptext31:
  8535                           	opt callstack 0
  8536  001A48                     _dtoa:
  8537                           	opt callstack 16
  8538                           
  8539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;incstack = 0
  8543  001A48  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  8544  001A4C  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  8545  001A50  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  8546  001A54  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  8547  001A58  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  8548  001A5C  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  8549  001A60  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  8550  001A64  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  8551                           
  8552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8553  001A68  0100               	movlb	0	; () banked
  8554  001A6A  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  8555  001A6C  D002               	goto	u6410
  8556  001A6E  0E01               	movlw	1
  8557  001A70  D001               	goto	u6420
  8558  001A72                     u6410:
  8559  001A72  0E00               	movlw	0
  8560  001A74                     u6420:
  8561  001A74  6FB7               	movwf	dtoa@s& (0+255),b
  8562  001A76  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  8563                           
  8564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8565  001A78  51B7               	movf	dtoa@s& (0+255),w,b
  8566  001A7A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  8567  001A7C  B4D8               	btfsc	status,2,c
  8568  001A7E  D010               	goto	l5957
  8569                           
  8570                           ; BSR set to: 0
  8571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8572  001A80  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  8573  001A82  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  8574  001A84  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  8575  001A86  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  8576  001A88  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  8577  001A8A  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  8578  001A8C  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  8579  001A8E  6DB9               	negf	dtoa@n& (0+255),b
  8580  001A90  0E00               	movlw	0
  8581  001A92  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  8582  001A94  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  8583  001A96  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  8584  001A98  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  8585  001A9A  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  8586  001A9C  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  8587  001A9E  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  8588  001AA0                     l5957:
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8592  001AA0  AE55               	btfss	_prec+1,7,c
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8596  001AA2  9256               	bcf	_flags,1,c
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8600  001AA4  BE55               	btfsc	_prec+1,7,c
  8601  001AA6  D005               	goto	u6450
  8602  001AA8  5055               	movf	_prec+1,w,c
  8603  001AAA  E108               	bnz	l588
  8604  001AAC  0454               	decf	_prec,w,c
  8605  001AAE  B0D8               	btfsc	status,0,c
  8606  001AB0  D005               	goto	l588
  8607  001AB2                     u6450:
  8608                           
  8609                           ; BSR set to: 0
  8610  001AB2  0E00               	movlw	0
  8611  001AB4  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  8612  001AB6  0E01               	movlw	1
  8613  001AB8  6FB3               	movwf	dtoa@p& (0+255),b
  8614  001ABA  D004               	goto	l590
  8615  001ABC                     l588:
  8616                           
  8617                           ; BSR set to: 0
  8618  001ABC  C054  F0B3         	movff	_prec,dtoa@p
  8619  001AC0  C055  F0B4         	movff	_prec+1,dtoa@p+1
  8620  001AC4                     l590:
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8624  001AC4  C052  F0B5         	movff	_width,dtoa@w
  8625  001AC8  C053  F0B6         	movff	_width+1,dtoa@w+1
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8629  001ACC  51B7               	movf	dtoa@s& (0+255),w,b
  8630  001ACE  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  8631  001AD0  A4D8               	btfss	status,2,c
  8632  001AD2  D002               	goto	u6470
  8633                           
  8634                           ; BSR set to: 0
  8635  001AD4  A456               	btfss	_flags,2,c
  8636  001AD6  D003               	goto	l5971
  8637  001AD8                     u6470:
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8641  001AD8  07B5               	decf	dtoa@w& (0+255),f,b
  8642  001ADA  A0D8               	btfss	status,0,c
  8643  001ADC  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  8644  001ADE                     l5971:
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8648  001ADE  0E00               	movlw	0
  8649  001AE0  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  8650  001AE2  0E1F               	movlw	31
  8651  001AE4  6FC1               	movwf	dtoa@i& (0+255),b
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8655  001AE6  0E00               	movlw	0
  8656  001AE8  0102               	movlb	2	; () banked
  8657  001AEA  6F77               	movwf	(_dbuf+31)& (0+255),b
  8658                           
  8659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8660  001AEC  D07D               	goto	l5985
  8661  001AEE                     l5975:
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8665  001AEE  07C1               	decf	dtoa@i& (0+255),f,b
  8666  001AF0  A0D8               	btfss	status,0,c
  8667  001AF2  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8671  001AF4  0E58               	movlw	low _dbuf
  8672  001AF6  25C1               	addwf	dtoa@i& (0+255),w,b
  8673  001AF8  6ED9               	movwf	fsr2l,c
  8674  001AFA  0E02               	movlw	high _dbuf
  8675  001AFC  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  8676  001AFE  6EDA               	movwf	fsr2h,c
  8677  001B00  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  8678  001B04  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  8679  001B08  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  8680  001B0C  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  8681  001B10  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  8682  001B14  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  8683  001B18  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  8684  001B1C  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  8685  001B20  0E0A               	movlw	10
  8686  001B22  6F88               	movwf	___aomod@divisor& (0+255),b
  8687  001B24  0E00               	movlw	0
  8688  001B26  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  8689  001B28  0E00               	movlw	0
  8690  001B2A  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  8691  001B2C  0E00               	movlw	0
  8692  001B2E  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  8693  001B30  0E00               	movlw	0
  8694  001B32  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  8695  001B34  0E00               	movlw	0
  8696  001B36  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  8697  001B38  0E00               	movlw	0
  8698  001B3A  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  8699  001B3C  0E00               	movlw	0
  8700  001B3E  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  8701  001B40  EC53  F013         	call	___aomod	;wreg free
  8702  001B44  C080  F0A9         	movff	?___aomod,??_dtoa
  8703  001B48  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  8704  001B4C  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  8705  001B50  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  8706  001B54  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  8707  001B58  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  8708  001B5C  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  8709  001B60  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  8710  001B64  C0A9  F092         	movff	??_dtoa,abs@a
  8711  001B68  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  8712  001B6C  EC91  F019         	call	_abs	;wreg free
  8713  001B70  0100               	movlb	0	; () banked
  8714  001B72  5192               	movf	?_abs& (0+255),w,b
  8715  001B74  0F30               	addlw	48
  8716  001B76  6EDF               	movwf	indf2,c
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8720  001B78  07B3               	decf	dtoa@p& (0+255),f,b
  8721  001B7A  A0D8               	btfss	status,0,c
  8722  001B7C  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8726  001B7E  07B5               	decf	dtoa@w& (0+255),f,b
  8727  001B80  A0D8               	btfss	status,0,c
  8728  001B82  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8732  001B84  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  8733  001B88  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  8734  001B8C  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  8735  001B90  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  8736  001B94  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  8737  001B98  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  8738  001B9C  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  8739  001BA0  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  8740  001BA4  0E0A               	movlw	10
  8741  001BA6  6F88               	movwf	___aodiv@divisor& (0+255),b
  8742  001BA8  0E00               	movlw	0
  8743  001BAA  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  8744  001BAC  0E00               	movlw	0
  8745  001BAE  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  8746  001BB0  0E00               	movlw	0
  8747  001BB2  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  8748  001BB4  0E00               	movlw	0
  8749  001BB6  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  8750  001BB8  0E00               	movlw	0
  8751  001BBA  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  8752  001BBC  0E00               	movlw	0
  8753  001BBE  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  8754  001BC0  0E00               	movlw	0
  8755  001BC2  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  8756  001BC4  EC6C  F011         	call	___aodiv	;wreg free
  8757  001BC8  C080  F0B9         	movff	?___aodiv,dtoa@n
  8758  001BCC  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  8759  001BD0  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  8760  001BD4  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  8761  001BD8  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  8762  001BDC  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  8763  001BE0  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  8764  001BE4  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  8765  001BE8                     l5985:
  8766                           
  8767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8768  001BE8  0100               	movlb	0	; () banked
  8769  001BEA  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  8770  001BEC  D01F               	goto	u6520
  8771  001BEE  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  8772  001BF0  E103               	bnz	u6480
  8773  001BF2  05C1               	decf	dtoa@i& (0+255),w,b
  8774  001BF4  A0D8               	btfss	status,0,c
  8775  001BF6  D01A               	goto	u6520
  8776  001BF8                     u6480:
  8777                           
  8778                           ; BSR set to: 0
  8779  001BF8  51B9               	movf	dtoa@n& (0+255),w,b
  8780  001BFA  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  8781  001BFC  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  8782  001BFE  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  8783  001C00  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  8784  001C02  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  8785  001C04  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  8786  001C06  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  8787  001C08  A4D8               	btfss	status,2,c
  8788  001C0A  D771               	goto	l5975
  8789                           
  8790                           ; BSR set to: 0
  8791  001C0C  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  8792  001C0E  D005               	goto	u6500
  8793  001C10  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  8794  001C12  E102               	bnz	u6501
  8795  001C14  05B3               	decf	dtoa@p& (0+255),w,b
  8796  001C16  B0D8               	btfsc	status,0,c
  8797  001C18                     u6501:
  8798  001C18  D76A               	goto	l5975
  8799  001C1A                     u6500:
  8800                           
  8801                           ; BSR set to: 0
  8802  001C1A  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  8803  001C1C  D007               	goto	u6520
  8804  001C1E  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  8805  001C20  E103               	bnz	u6510
  8806  001C22  05B5               	decf	dtoa@w& (0+255),w,b
  8807  001C24  A0D8               	btfss	status,0,c
  8808  001C26  D002               	goto	u6520
  8809  001C28                     u6510:
  8810                           
  8811                           ; BSR set to: 0
  8812  001C28  B256               	btfsc	_flags,1,c
  8813  001C2A  D761               	goto	l5975
  8814  001C2C                     u6520:
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8818  001C2C  51B7               	movf	dtoa@s& (0+255),w,b
  8819  001C2E  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  8820  001C30  A4D8               	btfss	status,2,c
  8821  001C32  D002               	goto	u6540
  8822                           
  8823                           ; BSR set to: 0
  8824  001C34  A456               	btfss	_flags,2,c
  8825  001C36  D017               	goto	l6009
  8826  001C38                     u6540:
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8830  001C38  07C1               	decf	dtoa@i& (0+255),f,b
  8831  001C3A  A0D8               	btfss	status,0,c
  8832  001C3C  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8836  001C3E  51B7               	movf	dtoa@s& (0+255),w,b
  8837  001C40  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  8838  001C42  A4D8               	btfss	status,2,c
  8839  001C44  D004               	goto	l6005
  8840                           
  8841                           ; BSR set to: 0
  8842  001C46  0E00               	movlw	0
  8843  001C48  6FB2               	movwf	(_dtoa$1033+1)& (0+255),b
  8844  001C4A  0E2B               	movlw	43
  8845  001C4C  D003               	goto	L6
  8846  001C4E                     l6005:
  8847                           
  8848                           ; BSR set to: 0
  8849  001C4E  0E00               	movlw	0
  8850  001C50  6FB2               	movwf	(_dtoa$1033+1)& (0+255),b
  8851  001C52  0E2D               	movlw	45
  8852  001C54                     L6:
  8853  001C54  6FB1               	movwf	_dtoa$1033& (0+255),b
  8854                           
  8855                           ; BSR set to: 0
  8856  001C56  0E58               	movlw	low _dbuf
  8857  001C58  25C1               	addwf	dtoa@i& (0+255),w,b
  8858  001C5A  6ED9               	movwf	fsr2l,c
  8859  001C5C  0E02               	movlw	high _dbuf
  8860  001C5E  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  8861  001C60  6EDA               	movwf	fsr2h,c
  8862  001C62  C0B1  FFDF         	movff	_dtoa$1033,indf2
  8863  001C66                     l6009:
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8867  001C66  C09F  F094         	movff	dtoa@fp,pad@fp
  8868  001C6A  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  8869  001C6E  0E58               	movlw	low _dbuf
  8870  001C70  25C1               	addwf	dtoa@i& (0+255),w,b
  8871  001C72  6F96               	movwf	pad@buf& (0+255),b
  8872  001C74  0E02               	movlw	high _dbuf
  8873  001C76  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  8874  001C78  6F97               	movwf	(pad@buf+1)& (0+255),b
  8875  001C7A  C0B5  F098         	movff	dtoa@w,pad@p
  8876  001C7E  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  8877  001C82  EC32  F015         	call	_pad	;wreg free
  8878  001C86  C094  F09F         	movff	?_pad,?_dtoa
  8879  001C8A  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  8880  001C8E  0012               	return		;funcret
  8881  001C90                     __end_of_dtoa:
  8882                           	opt callstack 0
  8883                           
  8884 ;; *************** function _pad *****************
  8885 ;; Defined at:
  8886 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  8889 ;;		 -> NULL(0), 
  8890 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  8891 ;;		 -> dbuf(32), 
  8892 ;;  p               2   24[BANK0 ] int 
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  w               2   29[BANK0 ] int 
  8895 ;;  i               2   27[BANK0 ] int 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  2   20[BANK0 ] int 
  8898 ;; Registers used:
  8899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8905 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8906 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;Total ram usage:       11 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; Hardware stack levels required when called:    9
  8912 ;; This function calls:
  8913 ;;		_fputc
  8914 ;;		_fputs
  8915 ;;		_strlen
  8916 ;; This function is called by:
  8917 ;;		_dtoa
  8918 ;;		_xtoa
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text32
  8923  002A64                     __ptext32:
  8924                           	opt callstack 0
  8925  002A64                     _pad:
  8926                           	opt callstack 16
  8927                           
  8928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8929                           
  8930                           ;incstack = 0
  8931  002A64  A056               	btfss	_flags,0,c
  8932  002A66  D00A               	goto	l5809
  8933                           
  8934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8935  002A68  C096  F08D         	movff	pad@buf,fputs@s
  8936  002A6C  C097  F08E         	movff	pad@buf+1,fputs@s+1
  8937  002A70  C094  F08F         	movff	pad@fp,fputs@fp
  8938  002A74  C095  F090         	movff	pad@fp+1,fputs@fp+1
  8939  002A78  EC58  F019         	call	_fputs	;wreg free
  8940  002A7C                     l5809:
  8941                           
  8942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8943  002A7C  0100               	movlb	0	; () banked
  8944  002A7E  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  8945  002A80  D005               	goto	l5813
  8946                           
  8947                           ; BSR set to: 0
  8948  002A82  C098  F09D         	movff	pad@p,pad@w
  8949  002A86  C099  F09E         	movff	pad@p+1,pad@w+1
  8950  002A8A  D004               	goto	l577
  8951  002A8C                     l5813:
  8952                           
  8953                           ; BSR set to: 0
  8954  002A8C  0E00               	movlw	0
  8955  002A8E  6F9E               	movwf	(pad@w+1)& (0+255),b
  8956  002A90  0E00               	movlw	0
  8957  002A92  6F9D               	movwf	pad@w& (0+255),b
  8958  002A94                     l577:
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8962  002A94  0E00               	movlw	0
  8963  002A96  6F9C               	movwf	(pad@i+1)& (0+255),b
  8964  002A98  0E00               	movlw	0
  8965  002A9A  6F9B               	movwf	pad@i& (0+255),b
  8966                           
  8967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8968  002A9C  D00D               	goto	l5819
  8969  002A9E                     l5815:
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8973  002A9E  0E00               	movlw	0
  8974  002AA0  6F85               	movwf	(fputc@c+1)& (0+255),b
  8975  002AA2  0E20               	movlw	32
  8976  002AA4  6F84               	movwf	fputc@c& (0+255),b
  8977  002AA6  C094  F086         	movff	pad@fp,fputc@fp
  8978  002AAA  C095  F087         	movff	pad@fp+1,fputc@fp+1
  8979  002AAE  EC4C  F017         	call	_fputc	;wreg free
  8980                           
  8981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8982  002AB2  0100               	movlb	0	; () banked
  8983  002AB4  4B9B               	infsnz	pad@i& (0+255),f,b
  8984  002AB6  2B9C               	incf	(pad@i+1)& (0+255),f,b
  8985  002AB8                     l5819:
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8989  002AB8  519D               	movf	pad@w& (0+255),w,b
  8990  002ABA  5D9B               	subwf	pad@i& (0+255),w,b
  8991  002ABC  519C               	movf	(pad@i+1)& (0+255),w,b
  8992  002ABE  0A80               	xorlw	128
  8993  002AC0  6F9A               	movwf	??_pad& (0+255),b
  8994  002AC2  519E               	movf	(pad@w+1)& (0+255),w,b
  8995  002AC4  0A80               	xorlw	128
  8996  002AC6  599A               	subwfb	??_pad& (0+255),w,b
  8997  002AC8  A0D8               	btfss	status,0,c
  8998  002ACA  D7E9               	goto	l5815
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9002  002ACC  B056               	btfsc	_flags,0,c
  9003  002ACE  D00A               	goto	l5823
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9007  002AD0  C096  F08D         	movff	pad@buf,fputs@s
  9008  002AD4  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9009  002AD8  C094  F08F         	movff	pad@fp,fputs@fp
  9010  002ADC  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9011  002AE0  EC58  F019         	call	_fputs	;wreg free
  9012  002AE4                     l5823:
  9013                           
  9014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9015  002AE4  C096  F080         	movff	pad@buf,strlen@s
  9016  002AE8  C097  F081         	movff	pad@buf+1,strlen@s+1
  9017  002AEC  EC0F  F01A         	call	_strlen	;wreg free
  9018  002AF0  0100               	movlb	0	; () banked
  9019  002AF2  519D               	movf	pad@w& (0+255),w,b
  9020  002AF4  2580               	addwf	?_strlen& (0+255),w,b
  9021  002AF6  6F94               	movwf	?_pad& (0+255),b
  9022  002AF8  519E               	movf	(pad@w+1)& (0+255),w,b
  9023  002AFA  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  9024  002AFC  6F95               	movwf	(?_pad+1)& (0+255),b
  9025                           
  9026                           ; BSR set to: 0
  9027  002AFE  0012               	return		;funcret
  9028  002B00                     __end_of_pad:
  9029                           	opt callstack 0
  9030                           
  9031 ;; *************** function _strlen *****************
  9032 ;; Defined at:
  9033 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  9036 ;;		 -> dbuf(32), 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  9039 ;;		 -> dbuf(32), 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  2    0[BANK0 ] unsigned int 
  9042 ;; Registers used:
  9043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9053 ;;Total ram usage:        4 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    3
  9056 ;; This function calls:
  9057 ;;		Nothing
  9058 ;; This function is called by:
  9059 ;;		_pad
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text33
  9064  00341E                     __ptext33:
  9065                           	opt callstack 0
  9066  00341E                     _strlen:
  9067                           	opt callstack 21
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;incstack = 0
  9071  00341E  C080  F082         	movff	strlen@s,strlen@a
  9072  003422  C081  F083         	movff	strlen@s+1,strlen@a+1
  9073  003426  D003               	goto	l5795
  9074  003428                     l5793:
  9075  003428  0100               	movlb	0	; () banked
  9076  00342A  4B80               	infsnz	strlen@s& (0+255),f,b
  9077  00342C  2B81               	incf	(strlen@s+1)& (0+255),f,b
  9078  00342E                     l5795:
  9079  00342E  C080  FFD9         	movff	strlen@s,fsr2l
  9080  003432  C081  FFDA         	movff	strlen@s+1,fsr2h
  9081  003436  50DF               	movf	indf2,w,c
  9082  003438  A4D8               	btfss	status,2,c
  9083  00343A  D7F6               	goto	l5793
  9084  00343C  0100               	movlb	0	; () banked
  9085  00343E  5182               	movf	strlen@a& (0+255),w,b
  9086  003440  5D80               	subwf	strlen@s& (0+255),w,b
  9087  003442  6F80               	movwf	?_strlen& (0+255),b
  9088  003444  5183               	movf	(strlen@a+1)& (0+255),w,b
  9089  003446  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  9090  003448  6F81               	movwf	(?_strlen+1)& (0+255),b
  9091                           
  9092                           ; BSR set to: 0
  9093  00344A  0012               	return		;funcret
  9094  00344C                     __end_of_strlen:
  9095                           	opt callstack 0
  9096                           
  9097 ;; *************** function _fputs *****************
  9098 ;; Defined at:
  9099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  9102 ;;		 -> dbuf(32), 
  9103 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  9104 ;;		 -> NULL(0), 
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;  i               2   18[BANK0 ] int 
  9107 ;;  c               1   17[BANK0 ] unsigned char 
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  2   13[BANK0 ] int 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9117 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9118 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;Total ram usage:        7 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:    8
  9124 ;; This function calls:
  9125 ;;		_fputc
  9126 ;; This function is called by:
  9127 ;;		_pad
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           	psect	text34
  9132  0032B0                     __ptext34:
  9133                           	opt callstack 0
  9134  0032B0                     _fputs:
  9135                           	opt callstack 16
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;incstack = 0
  9139  0032B0  0E00               	movlw	0
  9140  0032B2  0100               	movlb	0	; () banked
  9141  0032B4  6F93               	movwf	(fputs@i+1)& (0+255),b
  9142  0032B6  0E00               	movlw	0
  9143  0032B8  6F92               	movwf	fputs@i& (0+255),b
  9144  0032BA  D00C               	goto	l5789
  9145  0032BC                     l5785:
  9146                           
  9147                           ; BSR set to: 0
  9148  0032BC  C091  F084         	movff	fputs@c,fputc@c
  9149  0032C0  6B85               	clrf	(fputc@c+1)& (0+255),b
  9150  0032C2  C08F  F086         	movff	fputs@fp,fputc@fp
  9151  0032C6  C090  F087         	movff	fputs@fp+1,fputc@fp+1
  9152  0032CA  EC4C  F017         	call	_fputc	;wreg free
  9153  0032CE  0100               	movlb	0	; () banked
  9154  0032D0  4B92               	infsnz	fputs@i& (0+255),f,b
  9155  0032D2  2B93               	incf	(fputs@i+1)& (0+255),f,b
  9156  0032D4                     l5789:
  9157                           
  9158                           ; BSR set to: 0
  9159  0032D4  5192               	movf	fputs@i& (0+255),w,b
  9160  0032D6  258D               	addwf	fputs@s& (0+255),w,b
  9161  0032D8  6ED9               	movwf	fsr2l,c
  9162  0032DA  5193               	movf	(fputs@i+1)& (0+255),w,b
  9163  0032DC  218E               	addwfc	(fputs@s+1)& (0+255),w,b
  9164  0032DE  6EDA               	movwf	fsr2h,c
  9165  0032E0  50DF               	movf	indf2,w,c
  9166  0032E2  6F91               	movwf	fputs@c& (0+255),b
  9167  0032E4  5191               	movf	fputs@c& (0+255),w,b
  9168  0032E6  B4D8               	btfsc	status,2,c
  9169  0032E8  0012               	return	
  9170  0032EA  D7E8               	goto	l5785
  9171  0032EC                     __end_of_fputs:
  9172                           	opt callstack 0
  9173                           
  9174 ;; *************** function _fputc *****************
  9175 ;; Defined at:
  9176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  c               2    4[BANK0 ] int 
  9179 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9180 ;;		 -> NULL(0), 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  2    4[BANK0 ] int 
  9185 ;; Registers used:
  9186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9192 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;Total ram usage:        9 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    7
  9199 ;; This function calls:
  9200 ;;		_putch
  9201 ;; This function is called by:
  9202 ;;		_pad
  9203 ;;		_vfpfcnvrt
  9204 ;;		_fputs
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           	psect	text35
  9209  002E98                     __ptext35:
  9210                           	opt callstack 0
  9211  002E98                     _fputc:
  9212                           	opt callstack 16
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;incstack = 0
  9216  002E98  0100               	movlb	0	; () banked
  9217  002E9A  5186               	movf	fputc@fp& (0+255),w,b
  9218  002E9C  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  9219  002E9E  B4D8               	btfsc	status,2,c
  9220  002EA0  D004               	goto	u6050
  9221                           
  9222                           ; BSR set to: 0
  9223  002EA2  5186               	movf	fputc@fp& (0+255),w,b
  9224  002EA4  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  9225  002EA6  A4D8               	btfss	status,2,c
  9226  002EA8  D004               	goto	l5775
  9227  002EAA                     u6050:
  9228                           
  9229                           ; BSR set to: 0
  9230  002EAA  5184               	movf	fputc@c& (0+255),w,b
  9231  002EAC  ECFD  F01A         	call	_putch
  9232  002EB0  0012               	return	
  9233  002EB2                     l5775:
  9234                           
  9235                           ; BSR set to: 0
  9236  002EB2  EE20 F004          	lfsr	2,4
  9237  002EB6  5186               	movf	fputc@fp& (0+255),w,b
  9238  002EB8  26D9               	addwf	fsr2l,f,c
  9239  002EBA  5187               	movf	(fputc@fp+1)& (0+255),w,b
  9240  002EBC  22DA               	addwfc	fsr2h,f,c
  9241  002EBE  50DE               	movf	postinc2,w,c
  9242  002EC0  10DE               	iorwf	postinc2,w,c
  9243  002EC2  B4D8               	btfsc	status,2,c
  9244  002EC4  D016               	goto	u6070
  9245                           
  9246                           ; BSR set to: 0
  9247  002EC6  EE20 F004          	lfsr	2,4
  9248  002ECA  5186               	movf	fputc@fp& (0+255),w,b
  9249  002ECC  26D9               	addwf	fsr2l,f,c
  9250  002ECE  5187               	movf	(fputc@fp+1)& (0+255),w,b
  9251  002ED0  22DA               	addwfc	fsr2h,f,c
  9252  002ED2  EE10 F002          	lfsr	1,2
  9253  002ED6  5186               	movf	fputc@fp& (0+255),w,b
  9254  002ED8  26E1               	addwf	fsr1l,f,c
  9255  002EDA  5187               	movf	(fputc@fp+1)& (0+255),w,b
  9256  002EDC  22E2               	addwfc	fsr1h,f,c
  9257  002EDE  50DE               	movf	postinc2,w,c
  9258  002EE0  5CE6               	subwf	postinc1,w,c
  9259  002EE2  50E6               	movf	postinc1,w,c
  9260  002EE4  0A80               	xorlw	128
  9261  002EE6  6F8C               	movwf	(??_fputc+4)& (0+255),b
  9262  002EE8  50DE               	movf	postinc2,w,c
  9263  002EEA  0A80               	xorlw	128
  9264  002EEC  598C               	subwfb	(??_fputc+4)& (0+255),w,b
  9265  002EEE  B0D8               	btfsc	status,0,c
  9266  002EF0  0012               	return	
  9267  002EF2                     u6070:
  9268                           
  9269                           ; BSR set to: 0
  9270  002EF2  EE20 F002          	lfsr	2,2
  9271  002EF6  5186               	movf	fputc@fp& (0+255),w,b
  9272  002EF8  26D9               	addwf	fsr2l,f,c
  9273  002EFA  5187               	movf	(fputc@fp+1)& (0+255),w,b
  9274  002EFC  22DA               	addwfc	fsr2h,f,c
  9275  002EFE  2ADE               	incf	postinc2,f,c
  9276  002F00  0E00               	movlw	0
  9277  002F02  22DD               	addwfc	postdec2,f,c
  9278  002F04  0012               	return		;funcret
  9279  002F06                     __end_of_fputc:
  9280                           	opt callstack 0
  9281                           
  9282 ;; *************** function _putch *****************
  9283 ;; Defined at:
  9284 ;;		line 102 in file "lcd.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;  data            1    wreg     unsigned char 
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;  data            1    3[BANK0 ] unsigned char 
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  1    wreg      void 
  9291 ;; Registers used:
  9292 ;;		wreg, status,2, status,0, cstack
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9301 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9302 ;;Total ram usage:        1 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:    6
  9305 ;; This function calls:
  9306 ;;		_send_byte
  9307 ;; This function is called by:
  9308 ;;		_fputc
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text36
  9313  0035FA                     __ptext36:
  9314                           	opt callstack 0
  9315  0035FA                     _putch:
  9316                           	opt callstack 16
  9317                           
  9318                           ;incstack = 0
  9319                           ;putch@data stored from wreg
  9320  0035FA  0100               	movlb	0	; () banked
  9321  0035FC  6F83               	movwf	putch@data& (0+255),b
  9322                           
  9323                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  9324  0035FE  848C               	bsf	3980,2,c	;volatile
  9325                           
  9326                           ;lcd.c: 104:     send_byte((unsigned char)data);
  9327  003600  0100               	movlb	0	; () banked
  9328  003602  5183               	movf	putch@data& (0+255),w,b
  9329  003604  ECD4  F01A         	call	_send_byte
  9330  003608  0012               	return		;funcret
  9331  00360A                     __end_of_putch:
  9332                           	opt callstack 0
  9333                           
  9334 ;; *************** function _send_byte *****************
  9335 ;; Defined at:
  9336 ;;		line 55 in file "lcd.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  data            1    wreg     unsigned char 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  data            1    2[BANK0 ] unsigned char 
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  1    wreg      void 
  9343 ;; Registers used:
  9344 ;;		wreg, status,2, status,0, cstack
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9353 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;Total ram usage:        1 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:    5
  9357 ;; This function calls:
  9358 ;;		_send_nibble
  9359 ;; This function is called by:
  9360 ;;		_lcdInst
  9361 ;;		_initLCD
  9362 ;;		_putch
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           	psect	text37
  9367  0035A8                     __ptext37:
  9368                           	opt callstack 0
  9369  0035A8                     _send_byte:
  9370                           	opt callstack 16
  9371                           
  9372                           ;incstack = 0
  9373                           ;send_byte@data stored from wreg
  9374  0035A8  0100               	movlb	0	; () banked
  9375  0035AA  6F82               	movwf	send_byte@data& (0+255),b
  9376                           
  9377                           ;lcd.c: 57:     send_nibble(data >> 4);
  9378  0035AC  0100               	movlb	0	; () banked
  9379  0035AE  3982               	swapf	send_byte@data& (0+255),w,b
  9380  0035B0  0B0F               	andlw	15
  9381  0035B2  ECC7  F01A         	call	_send_nibble
  9382                           
  9383                           ;lcd.c: 60:     send_nibble(data);
  9384  0035B6  0100               	movlb	0	; () banked
  9385  0035B8  5182               	movf	send_byte@data& (0+255),w,b
  9386  0035BA  ECC7  F01A         	call	_send_nibble
  9387  0035BE  0012               	return		;funcret
  9388  0035C0                     __end_of_send_byte:
  9389                           	opt callstack 0
  9390                           
  9391 ;; *************** function _send_nibble *****************
  9392 ;; Defined at:
  9393 ;;		line 44 in file "lcd.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  data            1    wreg     unsigned char 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  data            1    1[BANK0 ] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg, status,2, status,0, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9410 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9411 ;;Total ram usage:        1 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    4
  9414 ;; This function calls:
  9415 ;;		_pulse_e
  9416 ;; This function is called by:
  9417 ;;		_send_byte
  9418 ;;		_initLCD
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text38
  9423  00358E                     __ptext38:
  9424                           	opt callstack 0
  9425  00358E                     _send_nibble:
  9426                           	opt callstack 16
  9427                           
  9428                           ;incstack = 0
  9429                           ;send_nibble@data stored from wreg
  9430  00358E  0100               	movlb	0	; () banked
  9431  003590  6F81               	movwf	send_nibble@data& (0+255),b
  9432                           
  9433                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  9434  003592  508C               	movf	3980,w,c	;volatile
  9435  003594  0B0F               	andlw	15
  9436  003596  6E8C               	movwf	3980,c	;volatile
  9437                           
  9438                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  9439  003598  0100               	movlb	0	; () banked
  9440  00359A  3981               	swapf	send_nibble@data& (0+255),w,b
  9441  00359C  0BF0               	andlw	240
  9442  00359E  108C               	iorwf	3980,w,c	;volatile
  9443  0035A0  6E8C               	movwf	3980,c	;volatile
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;lcd.c: 48:     pulse_e();
  9447  0035A2  EC26  F01A         	call	_pulse_e	;wreg free
  9448  0035A6  0012               	return		;funcret
  9449  0035A8                     __end_of_send_nibble:
  9450                           	opt callstack 0
  9451                           
  9452 ;; *************** function _pulse_e *****************
  9453 ;; Defined at:
  9454 ;;		line 28 in file "lcd.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;		None
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  interruptSta    1    0[BANK0 ] unsigned char 
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;Total ram usage:        1 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; Hardware stack levels required when called:    3
  9475 ;; This function calls:
  9476 ;;		Nothing
  9477 ;; This function is called by:
  9478 ;;		_send_nibble
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text39
  9483  00344C                     __ptext39:
  9484                           	opt callstack 0
  9485  00344C                     _pulse_e:
  9486                           	opt callstack 16
  9487                           
  9488                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  9489                           
  9490                           ;incstack = 0
  9491  00344C  0E00               	movlw	0
  9492  00344E  BEF2               	btfsc	4082,7,c	;volatile
  9493  003450  0E01               	movlw	1
  9494  003452  0100               	movlb	0	; () banked
  9495  003454  6F80               	movwf	pulse_e@interruptState& (0+255),b
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  9499  003456  9EF2               	bcf	4082,7,c	;volatile
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  9503  003458  868C               	bsf	3980,3,c	;volatile
  9504                           
  9505                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  9506  00345A  0E14               	movlw	20
  9507  00345C                     u8867:
  9508  00345C  2EE8               	decfsz	wreg,f,c
  9509  00345E  D7FE               	bra	u8867
  9510  003460  D000               	nop2	
  9511                           
  9512                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  9513  003462  968C               	bcf	3980,3,c	;volatile
  9514                           
  9515                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  9516  003464  0E53               	movlw	83
  9517  003466                     u8877:
  9518  003466  2EE8               	decfsz	wreg,f,c
  9519  003468  D7FE               	bra	u8877
  9520  00346A  F000               	nop	
  9521                           
  9522                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  9523  00346C  0100               	movlb	0	; () banked
  9524  00346E  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
  9525  003470  D002               	bra	u6035
  9526  003472  9EF2               	bcf	4082,7,c	;volatile
  9527  003474  D001               	bra	u6036
  9528  003476                     u6035:
  9529  003476  8EF2               	bsf	4082,7,c	;volatile
  9530  003478                     u6036:
  9531  003478  0012               	return		;funcret
  9532  00347A                     __end_of_pulse_e:
  9533                           	opt callstack 0
  9534                           
  9535 ;; *************** function _abs *****************
  9536 ;; Defined at:
  9537 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  a               2   18[BANK0 ] int 
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;		None
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  2   18[BANK0 ] int 
  9544 ;; Registers used:
  9545 ;;		wreg, status,2, status,0
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;Total ram usage:        4 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    3
  9558 ;; This function calls:
  9559 ;;		Nothing
  9560 ;; This function is called by:
  9561 ;;		_dtoa
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           	psect	text40
  9566  003322                     __ptext40:
  9567                           	opt callstack 0
  9568  003322                     _abs:
  9569                           	opt callstack 22
  9570                           
  9571                           ;incstack = 0
  9572  003322  0100               	movlb	0	; () banked
  9573  003324  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  9574  003326  D005               	goto	u6160
  9575  003328  5193               	movf	(abs@a+1)& (0+255),w,b
  9576  00332A  E110               	bnz	l1355
  9577  00332C  0592               	decf	abs@a& (0+255),w,b
  9578  00332E  B0D8               	btfsc	status,0,c
  9579  003330  D00D               	goto	l1355
  9580  003332                     u6160:
  9581                           
  9582                           ; BSR set to: 0
  9583  003332  C092  F094         	movff	abs@a,??_abs
  9584  003336  C093  F095         	movff	abs@a+1,??_abs+1
  9585  00333A  1F94               	comf	??_abs& (0+255),f,b
  9586  00333C  1F95               	comf	(??_abs+1)& (0+255),f,b
  9587  00333E  4B94               	infsnz	??_abs& (0+255),f,b
  9588  003340  2B95               	incf	(??_abs+1)& (0+255),f,b
  9589  003342  C094  F092         	movff	??_abs,?_abs
  9590  003346  C095  F093         	movff	??_abs+1,?_abs+1
  9591  00334A  0012               	return	
  9592  00334C                     l1355:
  9593                           
  9594                           ; BSR set to: 0
  9595  00334C  C092  F092         	movff	abs@a,?_abs
  9596  003350  C093  F093         	movff	abs@a+1,?_abs+1
  9597                           
  9598                           ; BSR set to: 0
  9599  003354  0012               	return		;funcret
  9600  003356                     __end_of_abs:
  9601                           	opt callstack 0
  9602                           
  9603 ;; *************** function ___aomod *****************
  9604 ;; Defined at:
  9605 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  dividend        8    0[BANK0 ] long long 
  9608 ;;  divisor         8    8[BANK0 ] long long 
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  sign            1   17[BANK0 ] unsigned char 
  9611 ;;  counter         1   16[BANK0 ] unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  8    0[BANK0 ] long long 
  9614 ;; Registers used:
  9615 ;;		wreg, status,2, status,0
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9621 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;Total ram usage:       18 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    3
  9628 ;; This function calls:
  9629 ;;		Nothing
  9630 ;; This function is called by:
  9631 ;;		_dtoa
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	text41
  9636  0026A6                     __ptext41:
  9637                           	opt callstack 0
  9638  0026A6                     ___aomod:
  9639                           	opt callstack 22
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;incstack = 0
  9643  0026A6  0E00               	movlw	0
  9644  0026A8  0100               	movlb	0	; () banked
  9645  0026AA  6F91               	movwf	___aomod@sign& (0+255),b
  9646                           
  9647                           ; BSR set to: 0
  9648  0026AC  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  9649  0026AE  D012               	goto	l5911
  9650                           
  9651                           ; BSR set to: 0
  9652  0026B0  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  9653  0026B2  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  9654  0026B4  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  9655  0026B6  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  9656  0026B8  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  9657  0026BA  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  9658  0026BC  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  9659  0026BE  6D80               	negf	___aomod@dividend& (0+255),b
  9660  0026C0  0E00               	movlw	0
  9661  0026C2  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  9662  0026C4  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  9663  0026C6  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  9664  0026C8  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  9665  0026CA  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  9666  0026CC  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  9667  0026CE  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  9668                           
  9669                           ; BSR set to: 0
  9670  0026D0  0E01               	movlw	1
  9671  0026D2  6F91               	movwf	___aomod@sign& (0+255),b
  9672  0026D4                     l5911:
  9673                           
  9674                           ; BSR set to: 0
  9675  0026D4  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  9676  0026D6  D010               	goto	l5915
  9677                           
  9678                           ; BSR set to: 0
  9679  0026D8  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  9680  0026DA  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  9681  0026DC  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  9682  0026DE  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  9683  0026E0  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  9684  0026E2  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  9685  0026E4  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  9686  0026E6  6D88               	negf	___aomod@divisor& (0+255),b
  9687  0026E8  0E00               	movlw	0
  9688  0026EA  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  9689  0026EC  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  9690  0026EE  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  9691  0026F0  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  9692  0026F2  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  9693  0026F4  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  9694  0026F6  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  9695  0026F8                     l5915:
  9696                           
  9697                           ; BSR set to: 0
  9698  0026F8  5188               	movf	___aomod@divisor& (0+255),w,b
  9699  0026FA  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  9700  0026FC  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  9701  0026FE  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  9702  002700  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  9703  002702  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  9704  002704  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  9705  002706  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  9706  002708  B4D8               	btfsc	status,2,c
  9707  00270A  D03C               	goto	l5931
  9708                           
  9709                           ; BSR set to: 0
  9710  00270C  0E01               	movlw	1
  9711  00270E  6F90               	movwf	___aomod@counter& (0+255),b
  9712  002710  D00A               	goto	l5921
  9713  002712                     l5919:
  9714                           
  9715                           ; BSR set to: 0
  9716  002712  90D8               	bcf	status,0,c
  9717  002714  3788               	rlcf	___aomod@divisor& (0+255),f,b
  9718  002716  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  9719  002718  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  9720  00271A  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  9721  00271C  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  9722  00271E  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  9723  002720  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  9724  002722  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  9725  002724  2B90               	incf	___aomod@counter& (0+255),f,b
  9726  002726                     l5921:
  9727                           
  9728                           ; BSR set to: 0
  9729  002726  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  9730  002728  D7F4               	goto	l5919
  9731  00272A                     u6360:
  9732                           
  9733                           ; BSR set to: 0
  9734  00272A  5188               	movf	___aomod@divisor& (0+255),w,b
  9735  00272C  5D80               	subwf	___aomod@dividend& (0+255),w,b
  9736  00272E  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  9737  002730  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  9738  002732  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  9739  002734  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  9740  002736  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  9741  002738  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  9742  00273A  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  9743  00273C  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  9744  00273E  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  9745  002740  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  9746  002742  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  9747  002744  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  9748  002746  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  9749  002748  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  9750  00274A  A0D8               	btfss	status,0,c
  9751  00274C  D010               	goto	l5927
  9752                           
  9753                           ; BSR set to: 0
  9754  00274E  5188               	movf	___aomod@divisor& (0+255),w,b
  9755  002750  5F80               	subwf	___aomod@dividend& (0+255),f,b
  9756  002752  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  9757  002754  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  9758  002756  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  9759  002758  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  9760  00275A  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  9761  00275C  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  9762  00275E  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  9763  002760  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  9764  002762  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  9765  002764  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  9766  002766  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  9767  002768  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  9768  00276A  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  9769  00276C  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  9770  00276E                     l5927:
  9771                           
  9772                           ; BSR set to: 0
  9773  00276E  90D8               	bcf	status,0,c
  9774  002770  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  9775  002772  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  9776  002774  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  9777  002776  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  9778  002778  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  9779  00277A  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  9780  00277C  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  9781  00277E  3388               	rrcf	___aomod@divisor& (0+255),f,b
  9782                           
  9783                           ; BSR set to: 0
  9784  002780  2F90               	decfsz	___aomod@counter& (0+255),f,b
  9785  002782  D7D3               	goto	u6360
  9786  002784                     l5931:
  9787                           
  9788                           ; BSR set to: 0
  9789  002784  5191               	movf	___aomod@sign& (0+255),w,b
  9790  002786  B4D8               	btfsc	status,2,c
  9791  002788  D010               	goto	l5935
  9792                           
  9793                           ; BSR set to: 0
  9794  00278A  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  9795  00278C  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  9796  00278E  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  9797  002790  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  9798  002792  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  9799  002794  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  9800  002796  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  9801  002798  6D80               	negf	___aomod@dividend& (0+255),b
  9802  00279A  0E00               	movlw	0
  9803  00279C  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  9804  00279E  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  9805  0027A0  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  9806  0027A2  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  9807  0027A4  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  9808  0027A6  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  9809  0027A8  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  9810  0027AA                     l5935:
  9811                           
  9812                           ; BSR set to: 0
  9813  0027AA  C080  F080         	movff	___aomod@dividend,?___aomod
  9814  0027AE  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  9815  0027B2  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  9816  0027B6  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  9817  0027BA  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  9818  0027BE  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  9819  0027C2  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  9820  0027C6  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  9821                           
  9822                           ; BSR set to: 0
  9823  0027CA  0012               	return		;funcret
  9824  0027CC                     __end_of___aomod:
  9825                           	opt callstack 0
  9826                           
  9827 ;; *************** function ___aodiv *****************
  9828 ;; Defined at:
  9829 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  dividend        8    0[BANK0 ] long long 
  9832 ;;  divisor         8    8[BANK0 ] long long 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  quotient        8   18[BANK0 ] long long 
  9835 ;;  sign            1   17[BANK0 ] unsigned char 
  9836 ;;  counter         1   16[BANK0 ] unsigned char 
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  8    0[BANK0 ] long long 
  9839 ;; Registers used:
  9840 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9846 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9849 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9850 ;;Total ram usage:       26 bytes
  9851 ;; Hardware stack levels used:    1
  9852 ;; Hardware stack levels required when called:    3
  9853 ;; This function calls:
  9854 ;;		Nothing
  9855 ;; This function is called by:
  9856 ;;		_dtoa
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text42
  9861  0022D8                     __ptext42:
  9862                           	opt callstack 0
  9863  0022D8                     ___aodiv:
  9864                           	opt callstack 22
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;incstack = 0
  9868  0022D8  0E00               	movlw	0
  9869  0022DA  0100               	movlb	0	; () banked
  9870  0022DC  6F91               	movwf	___aodiv@sign& (0+255),b
  9871                           
  9872                           ; BSR set to: 0
  9873  0022DE  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  9874  0022E0  D012               	goto	l5867
  9875                           
  9876                           ; BSR set to: 0
  9877  0022E2  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  9878  0022E4  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  9879  0022E6  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  9880  0022E8  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  9881  0022EA  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  9882  0022EC  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  9883  0022EE  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  9884  0022F0  6D88               	negf	___aodiv@divisor& (0+255),b
  9885  0022F2  0E00               	movlw	0
  9886  0022F4  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  9887  0022F6  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  9888  0022F8  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  9889  0022FA  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  9890  0022FC  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  9891  0022FE  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  9892  002300  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  9893                           
  9894                           ; BSR set to: 0
  9895  002302  0E01               	movlw	1
  9896  002304  6F91               	movwf	___aodiv@sign& (0+255),b
  9897  002306                     l5867:
  9898                           
  9899                           ; BSR set to: 0
  9900  002306  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  9901  002308  D012               	goto	l5873
  9902                           
  9903                           ; BSR set to: 0
  9904  00230A  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  9905  00230C  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  9906  00230E  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  9907  002310  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  9908  002312  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  9909  002314  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  9910  002316  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  9911  002318  6D80               	negf	___aodiv@dividend& (0+255),b
  9912  00231A  0E00               	movlw	0
  9913  00231C  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  9914  00231E  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  9915  002320  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  9916  002322  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  9917  002324  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  9918  002326  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  9919  002328  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  9920                           
  9921                           ; BSR set to: 0
  9922  00232A  0E01               	movlw	1
  9923  00232C  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  9924  00232E                     l5873:
  9925                           
  9926                           ; BSR set to: 0
  9927  00232E  EE20  F092         	lfsr	2,___aodiv@quotient
  9928  002332  0E07               	movlw	7
  9929  002334                     u6281:
  9930  002334  6ADE               	clrf	postinc2,c
  9931  002336  06E8               	decf	wreg,f,c
  9932  002338  E2FD               	bc	u6281
  9933                           
  9934                           ; BSR set to: 0
  9935  00233A  5188               	movf	___aodiv@divisor& (0+255),w,b
  9936  00233C  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  9937  00233E  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  9938  002340  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  9939  002342  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  9940  002344  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  9941  002346  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  9942  002348  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  9943  00234A  B4D8               	btfsc	status,2,c
  9944  00234C  D046               	goto	l5895
  9945                           
  9946                           ; BSR set to: 0
  9947  00234E  0E01               	movlw	1
  9948  002350  6F90               	movwf	___aodiv@counter& (0+255),b
  9949  002352  D00A               	goto	l5881
  9950  002354                     l5879:
  9951                           
  9952                           ; BSR set to: 0
  9953  002354  90D8               	bcf	status,0,c
  9954  002356  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  9955  002358  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  9956  00235A  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  9957  00235C  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  9958  00235E  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  9959  002360  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  9960  002362  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  9961  002364  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  9962  002366  2B90               	incf	___aodiv@counter& (0+255),f,b
  9963  002368                     l5881:
  9964                           
  9965                           ; BSR set to: 0
  9966  002368  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  9967  00236A  D7F4               	goto	l5879
  9968  00236C                     u6300:
  9969                           
  9970                           ; BSR set to: 0
  9971  00236C  90D8               	bcf	status,0,c
  9972  00236E  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  9973  002370  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  9974  002372  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  9975  002374  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  9976  002376  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  9977  002378  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  9978  00237A  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  9979  00237C  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  9980                           
  9981                           ; BSR set to: 0
  9982  00237E  5188               	movf	___aodiv@divisor& (0+255),w,b
  9983  002380  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  9984  002382  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  9985  002384  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  9986  002386  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  9987  002388  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  9988  00238A  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  9989  00238C  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  9990  00238E  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  9991  002390  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  9992  002392  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  9993  002394  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  9994  002396  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  9995  002398  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  9996  00239A  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  9997  00239C  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  9998  00239E  A0D8               	btfss	status,0,c
  9999  0023A0  D011               	goto	l5891
 10000                           
 10001                           ; BSR set to: 0
 10002  0023A2  5188               	movf	___aodiv@divisor& (0+255),w,b
 10003  0023A4  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 10004  0023A6  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10005  0023A8  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10006  0023AA  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10007  0023AC  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10008  0023AE  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10009  0023B0  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10010  0023B2  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10011  0023B4  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10012  0023B6  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10013  0023B8  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10014  0023BA  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10015  0023BC  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10016  0023BE  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10017  0023C0  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10018                           
 10019                           ; BSR set to: 0
 10020  0023C2  8192               	bsf	___aodiv@quotient& (0+255),0,b
 10021  0023C4                     l5891:
 10022                           
 10023                           ; BSR set to: 0
 10024  0023C4  90D8               	bcf	status,0,c
 10025  0023C6  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10026  0023C8  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10027  0023CA  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10028  0023CC  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10029  0023CE  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10030  0023D0  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10031  0023D2  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10032  0023D4  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 10033                           
 10034                           ; BSR set to: 0
 10035  0023D6  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 10036  0023D8  D7C9               	goto	u6300
 10037  0023DA                     l5895:
 10038                           
 10039                           ; BSR set to: 0
 10040  0023DA  5191               	movf	___aodiv@sign& (0+255),w,b
 10041  0023DC  B4D8               	btfsc	status,2,c
 10042  0023DE  D010               	goto	l5899
 10043                           
 10044                           ; BSR set to: 0
 10045  0023E0  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10046  0023E2  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10047  0023E4  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10048  0023E6  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10049  0023E8  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10050  0023EA  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10051  0023EC  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10052  0023EE  6D92               	negf	___aodiv@quotient& (0+255),b
 10053  0023F0  0E00               	movlw	0
 10054  0023F2  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10055  0023F4  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10056  0023F6  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10057  0023F8  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10058  0023FA  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10059  0023FC  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10060  0023FE  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10061  002400                     l5899:
 10062                           
 10063                           ; BSR set to: 0
 10064  002400  C092  F080         	movff	___aodiv@quotient,?___aodiv
 10065  002404  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 10066  002408  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 10067  00240C  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 10068  002410  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 10069  002414  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 10070  002418  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 10071  00241C  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 10072                           
 10073                           ; BSR set to: 0
 10074  002420  0012               	return		;funcret
 10075  002422                     __end_of___aodiv:
 10076                           	opt callstack 0
 10077                           
 10078 ;; *************** function _atoi *****************
 10079 ;; Defined at:
 10080 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 10083 ;;		 -> STR_48(5), STR_47(10), STR_46(10), STR_45(10), 
 10084 ;;		 -> STR_44(11), STR_43(11), STR_42(12), STR_41(8), 
 10085 ;;		 -> STR_40(8), STR_39(17), STR_38(15), STR_37(15), 
 10086 ;;		 -> STR_36(12), STR_35(17), STR_34(12), STR_33(15), 
 10087 ;;		 -> STR_32(18), STR_31(17), STR_30(12), STR_29(15), 
 10088 ;;		 -> STR_28(18), STR_27(17), STR_26(14), STR_25(14), 
 10089 ;;		 -> STR_24(17), STR_23(3), STR_22(9), STR_21(16), 
 10090 ;;		 -> STR_20(3), STR_19(9), STR_18(17), STR_17(15), 
 10091 ;;		 -> STR_16(15), STR_15(12), STR_14(10), STR_13(15), 
 10092 ;;		 -> STR_12(12), STR_11(10), STR_10(16), STR_9(3), 
 10093 ;;		 -> STR_8(10), STR_7(17), STR_6(10), STR_5(16), 
 10094 ;;		 -> STR_4(10), STR_3(16), STR_2(10), STR_1(17), 
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;  n               2   20[BANK0 ] int 
 10097 ;;  neg             2   13[BANK0 ] int 
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  2    7[BANK0 ] int 
 10100 ;; Registers used:
 10101 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10108 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10109 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10110 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10111 ;;Total ram usage:       15 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:    4
 10114 ;; This function calls:
 10115 ;;		___wmul
 10116 ;;		_isdigit
 10117 ;;		_isspace
 10118 ;; This function is called by:
 10119 ;;		_vfpfcnvrt
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           	psect	text43
 10124  002422                     __ptext43:
 10125                           	opt callstack 0
 10126  002422                     _atoi:
 10127                           	opt callstack 22
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;incstack = 0
 10131  002422  0E00               	movlw	0
 10132  002424  0100               	movlb	0	; () banked
 10133  002426  6F95               	movwf	(atoi@n+1)& (0+255),b
 10134  002428  0E00               	movlw	0
 10135  00242A  6F94               	movwf	atoi@n& (0+255),b
 10136  00242C  0E00               	movlw	0
 10137  00242E  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10138  002430  0E00               	movlw	0
 10139  002432  6F8D               	movwf	atoi@neg& (0+255),b
 10140  002434  D002               	goto	l6083
 10141  002436                     l6081:
 10142                           
 10143                           ; BSR set to: 0
 10144  002436  4B87               	infsnz	atoi@s& (0+255),f,b
 10145  002438  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10146  00243A                     l6083:
 10147                           
 10148                           ; BSR set to: 0
 10149  00243A  0E01               	movlw	1
 10150  00243C  6F93               	movwf	_atoi$1518& (0+255),b
 10151                           
 10152                           ; BSR set to: 0
 10153  00243E  C087  FFF6         	movff	atoi@s,tblptrl
 10154  002442  C088  FFF7         	movff	atoi@s+1,tblptrh
 10155  002446                     	if	0	;tblptru may be non-zero
 10156  002446                     	endif
 10157  002446                     	if	0	;tblptru may be non-zero
 10158  002446                     	endif
 10159  002446  0008               	tblrd		*
 10160  002448  50F5               	movf	tablat,w,c
 10161  00244A  0A20               	xorlw	32
 10162  00244C  B4D8               	btfsc	status,2,c
 10163  00244E  D018               	goto	l6091
 10164                           
 10165                           ; BSR set to: 0
 10166  002450  0EF7               	movlw	247
 10167  002452  6F89               	movwf	??_atoi& (0+255),b
 10168  002454  0EFF               	movlw	255
 10169  002456  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10170  002458  C087  FFF6         	movff	atoi@s,tblptrl
 10171  00245C  C088  FFF7         	movff	atoi@s+1,tblptrh
 10172  002460                     	if	0	;tblptru may be non-zero
 10173  002460                     	endif
 10174  002460                     	if	0	;tblptru may be non-zero
 10175  002460                     	endif
 10176  002460  0008               	tblrd		*
 10177  002462  50F5               	movf	tablat,w,c
 10178  002464  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10179  002466  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10180  002468  5189               	movf	??_atoi& (0+255),w,b
 10181  00246A  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10182  00246C  518A               	movf	(??_atoi+1)& (0+255),w,b
 10183  00246E  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10184  002470  518C               	movf	(??_atoi+3)& (0+255),w,b
 10185  002472  E104               	bnz	u6740
 10186  002474  0E05               	movlw	5
 10187  002476  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10188  002478  A0D8               	btfss	status,0,c
 10189  00247A  D002               	goto	l6091
 10190  00247C                     u6740:
 10191                           
 10192                           ; BSR set to: 0
 10193  00247C  0E00               	movlw	0
 10194  00247E  6F93               	movwf	_atoi$1518& (0+255),b
 10195  002480                     l6091:
 10196                           
 10197                           ; BSR set to: 0
 10198  002480  C093  F08F         	movff	_atoi$1518,_atoi$1517
 10199  002484  6B90               	clrf	(_atoi$1517+1)& (0+255),b
 10200                           
 10201                           ; BSR set to: 0
 10202  002486  518F               	movf	_atoi$1517& (0+255),w,b
 10203  002488  1190               	iorwf	(_atoi$1517+1)& (0+255),w,b
 10204  00248A  B4D8               	btfsc	status,2,c
 10205  00248C  D008               	goto	l6101
 10206  00248E  D7D3               	goto	l6081
 10207  002490                     l6097:
 10208                           
 10209                           ; BSR set to: 0
 10210  002490  0E00               	movlw	0
 10211  002492  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10212  002494  0E01               	movlw	1
 10213  002496  6F8D               	movwf	atoi@neg& (0+255),b
 10214  002498                     l6099:
 10215                           
 10216                           ; BSR set to: 0
 10217  002498  4B87               	infsnz	atoi@s& (0+255),f,b
 10218  00249A  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10219  00249C  D02F               	goto	l6107
 10220  00249E                     l6101:
 10221                           
 10222                           ; BSR set to: 0
 10223  00249E  C087  FFF6         	movff	atoi@s,tblptrl
 10224  0024A2  C088  FFF7         	movff	atoi@s+1,tblptrh
 10225  0024A6                     	if	0	;tblptru may be non-zero
 10226  0024A6                     	endif
 10227  0024A6                     	if	0	;tblptru may be non-zero
 10228  0024A6                     	endif
 10229  0024A6  0008               	tblrd		*
 10230  0024A8  50F5               	movf	tablat,w,c
 10231  0024AA  6F89               	movwf	??_atoi& (0+255),b
 10232  0024AC  6B8A               	clrf	(??_atoi+1)& (0+255),b
 10233                           
 10234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10235                           ; Switch size 1, requested type "simple"
 10236                           ; Number of cases is 1, Range of values is 0 to 0
 10237                           ; switch strategies available:
 10238                           ; Name         Instructions Cycles
 10239                           ; simple_byte            4     3 (average)
 10240                           ;	Chosen strategy is simple_byte
 10241  0024AE  518A               	movf	(??_atoi+1)& (0+255),w,b
 10242  0024B0  0A00               	xorlw	0	; case 0
 10243  0024B2  A4D8               	btfss	status,2,c
 10244  0024B4  D023               	goto	l6107
 10245                           
 10246                           ; BSR set to: 0
 10247                           ; Switch size 1, requested type "simple"
 10248                           ; Number of cases is 2, Range of values is 43 to 45
 10249                           ; switch strategies available:
 10250                           ; Name         Instructions Cycles
 10251                           ; simple_byte            7     4 (average)
 10252                           ;	Chosen strategy is simple_byte
 10253  0024B6  5189               	movf	??_atoi& (0+255),w,b
 10254  0024B8  0A2B               	xorlw	43	; case 43
 10255  0024BA  B4D8               	btfsc	status,2,c
 10256  0024BC  D7ED               	goto	l6099
 10257  0024BE  0A06               	xorlw	6	; case 45
 10258  0024C0  B4D8               	btfsc	status,2,c
 10259  0024C2  D7E6               	goto	l6097
 10260  0024C4  D01B               	goto	l6107
 10261  0024C6                     l6103:
 10262                           
 10263                           ; BSR set to: 0
 10264  0024C6  C094  F080         	movff	atoi@n,___wmul@multiplier
 10265  0024CA  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 10266  0024CE  0E00               	movlw	0
 10267  0024D0  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10268  0024D2  0E0A               	movlw	10
 10269  0024D4  6F82               	movwf	___wmul@multiplicand& (0+255),b
 10270  0024D6  EC7A  F01A         	call	___wmul	;wreg free
 10271  0024DA  C087  FFF6         	movff	atoi@s,tblptrl
 10272  0024DE  C088  FFF7         	movff	atoi@s+1,tblptrh
 10273  0024E2                     	if	0	;tblptru may be non-zero
 10274  0024E2                     	endif
 10275  0024E2                     	if	0	;tblptru may be non-zero
 10276  0024E2                     	endif
 10277  0024E2  0008               	tblrd		*
 10278  0024E4  50F5               	movf	tablat,w,c
 10279  0024E6  0100               	movlb	0	; () banked
 10280  0024E8  5F80               	subwf	?___wmul& (0+255),f,b
 10281  0024EA  0E00               	movlw	0
 10282  0024EC  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 10283  0024EE  0E30               	movlw	48
 10284  0024F0  2580               	addwf	?___wmul& (0+255),w,b
 10285  0024F2  6F94               	movwf	atoi@n& (0+255),b
 10286  0024F4  0E00               	movlw	0
 10287  0024F6  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 10288  0024F8  6F95               	movwf	(atoi@n+1)& (0+255),b
 10289  0024FA  D7CE               	goto	l6099
 10290  0024FC                     l6107:
 10291                           
 10292                           ; BSR set to: 0
 10293  0024FC  0ED0               	movlw	208
 10294  0024FE  6F89               	movwf	??_atoi& (0+255),b
 10295  002500  0EFF               	movlw	255
 10296  002502  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10297  002504  C087  FFF6         	movff	atoi@s,tblptrl
 10298  002508  C088  FFF7         	movff	atoi@s+1,tblptrh
 10299  00250C                     	if	0	;tblptru may be non-zero
 10300  00250C                     	endif
 10301  00250C                     	if	0	;tblptru may be non-zero
 10302  00250C                     	endif
 10303  00250C  0008               	tblrd		*
 10304  00250E  50F5               	movf	tablat,w,c
 10305  002510  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10306  002512  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10307  002514  5189               	movf	??_atoi& (0+255),w,b
 10308  002516  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10309  002518  518A               	movf	(??_atoi+1)& (0+255),w,b
 10310  00251A  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10311  00251C  518C               	movf	(??_atoi+3)& (0+255),w,b
 10312  00251E  E106               	bnz	u6760
 10313  002520  0E0A               	movlw	10
 10314  002522  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10315  002524  B0D8               	btfsc	status,0,c
 10316  002526  D002               	goto	u6760
 10317  002528  0E01               	movlw	1
 10318  00252A  D001               	goto	u6770
 10319  00252C                     u6760:
 10320  00252C  0E00               	movlw	0
 10321  00252E                     u6770:
 10322  00252E  6F91               	movwf	_atoi$1519& (0+255),b
 10323  002530  6B92               	clrf	(_atoi$1519+1)& (0+255),b
 10324                           
 10325                           ; BSR set to: 0
 10326  002532  5191               	movf	_atoi$1519& (0+255),w,b
 10327  002534  1192               	iorwf	(_atoi$1519+1)& (0+255),w,b
 10328  002536  A4D8               	btfss	status,2,c
 10329  002538  D7C6               	goto	l6103
 10330                           
 10331                           ; BSR set to: 0
 10332  00253A  518D               	movf	atoi@neg& (0+255),w,b
 10333  00253C  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 10334  00253E  A4D8               	btfss	status,2,c
 10335  002540  D00D               	goto	l1386
 10336                           
 10337                           ; BSR set to: 0
 10338  002542  C094  F089         	movff	atoi@n,??_atoi
 10339  002546  C095  F08A         	movff	atoi@n+1,??_atoi+1
 10340  00254A  1F89               	comf	??_atoi& (0+255),f,b
 10341  00254C  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 10342  00254E  4B89               	infsnz	??_atoi& (0+255),f,b
 10343  002550  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 10344  002552  C089  F087         	movff	??_atoi,?_atoi
 10345  002556  C08A  F088         	movff	??_atoi+1,?_atoi+1
 10346  00255A  0012               	return	
 10347  00255C                     l1386:
 10348                           
 10349                           ; BSR set to: 0
 10350  00255C  C094  F087         	movff	atoi@n,?_atoi
 10351  002560  C095  F088         	movff	atoi@n+1,?_atoi+1
 10352                           
 10353                           ; BSR set to: 0
 10354  002564  0012               	return		;funcret
 10355  002566                     __end_of_atoi:
 10356                           	opt callstack 0
 10357                           
 10358 ;; *************** function _isspace *****************
 10359 ;; Defined at:
 10360 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;  c               2    0[BANK0 ] int 
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;		None
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  2    0[BANK0 ] int 
 10367 ;; Registers used:
 10368 ;;		wreg, status,2, status,0
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10376 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10377 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10378 ;;Total ram usage:        7 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:    3
 10381 ;; This function calls:
 10382 ;;		Nothing
 10383 ;; This function is called by:
 10384 ;;		_atoi
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388                           	psect	text44
 10389  003270                     __ptext44:
 10390                           	opt callstack 0
 10391  003270                     _isspace:
 10392                           	opt callstack 22
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;incstack = 0
 10396  003270  0E01               	movlw	1
 10397  003272  0100               	movlb	0	; () banked
 10398  003274  6F86               	movwf	_isspace$1544& (0+255),b
 10399                           
 10400                           ; BSR set to: 0
 10401  003276  0E20               	movlw	32
 10402  003278  1980               	xorwf	isspace@c& (0+255),w,b
 10403  00327A  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 10404  00327C  B4D8               	btfsc	status,2,c
 10405  00327E  D014               	goto	l5947
 10406                           
 10407                           ; BSR set to: 0
 10408  003280  0EF7               	movlw	247
 10409  003282  6F82               	movwf	??_isspace& (0+255),b
 10410  003284  0EFF               	movlw	255
 10411  003286  6F83               	movwf	(??_isspace+1)& (0+255),b
 10412  003288  C080  F084         	movff	isspace@c,??_isspace+2
 10413  00328C  C081  F085         	movff	isspace@c+1,??_isspace+3
 10414  003290  5182               	movf	??_isspace& (0+255),w,b
 10415  003292  2784               	addwf	(??_isspace+2)& (0+255),f,b
 10416  003294  5183               	movf	(??_isspace+1)& (0+255),w,b
 10417  003296  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 10418  003298  5185               	movf	(??_isspace+3)& (0+255),w,b
 10419  00329A  E104               	bnz	u6400
 10420  00329C  0E05               	movlw	5
 10421  00329E  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 10422  0032A0  A0D8               	btfss	status,0,c
 10423  0032A2  D002               	goto	l5947
 10424  0032A4                     u6400:
 10425                           
 10426                           ; BSR set to: 0
 10427  0032A4  0E00               	movlw	0
 10428  0032A6  6F86               	movwf	_isspace$1544& (0+255),b
 10429  0032A8                     l5947:
 10430                           
 10431                           ; BSR set to: 0
 10432  0032A8  C086  F080         	movff	_isspace$1544,?_isspace
 10433  0032AC  6B81               	clrf	(?_isspace+1)& (0+255),b
 10434                           
 10435                           ; BSR set to: 0
 10436  0032AE  0012               	return		;funcret
 10437  0032B0                     __end_of_isspace:
 10438                           	opt callstack 0
 10439                           
 10440 ;; *************** function _isdigit *****************
 10441 ;; Defined at:
 10442 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;  c               2    0[BANK0 ] int 
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;		None
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  2    0[BANK0 ] int 
 10449 ;; Registers used:
 10450 ;;		wreg, status,2, status,0
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10458 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10459 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;Total ram usage:        6 bytes
 10461 ;; Hardware stack levels used:    1
 10462 ;; Hardware stack levels required when called:    3
 10463 ;; This function calls:
 10464 ;;		Nothing
 10465 ;; This function is called by:
 10466 ;;		_vfpfcnvrt
 10467 ;;		_atoi
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           	psect	text45
 10472  0033EC                     __ptext45:
 10473                           	opt callstack 0
 10474  0033EC                     _isdigit:
 10475                           	opt callstack 23
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;incstack = 0
 10479  0033EC  0ED0               	movlw	208
 10480  0033EE  0100               	movlb	0	; () banked
 10481  0033F0  6F82               	movwf	??_isdigit& (0+255),b
 10482  0033F2  0EFF               	movlw	255
 10483  0033F4  6F83               	movwf	(??_isdigit+1)& (0+255),b
 10484  0033F6  C080  F084         	movff	isdigit@c,??_isdigit+2
 10485  0033FA  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 10486  0033FE  5182               	movf	??_isdigit& (0+255),w,b
 10487  003400  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 10488  003402  5183               	movf	(??_isdigit+1)& (0+255),w,b
 10489  003404  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 10490  003406  5185               	movf	(??_isdigit+3)& (0+255),w,b
 10491  003408  E106               	bnz	u6240
 10492  00340A  0E0A               	movlw	10
 10493  00340C  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 10494  00340E  B0D8               	btfsc	status,0,c
 10495  003410  D002               	goto	u6240
 10496  003412  0E01               	movlw	1
 10497  003414  D001               	goto	u6250
 10498  003416                     u6240:
 10499  003416  0E00               	movlw	0
 10500  003418                     u6250:
 10501  003418  6F80               	movwf	?_isdigit& (0+255),b
 10502  00341A  6B81               	clrf	(?_isdigit+1)& (0+255),b
 10503                           
 10504                           ; BSR set to: 0
 10505  00341C  0012               	return		;funcret
 10506  00341E                     __end_of_isdigit:
 10507                           	opt callstack 0
 10508                           
 10509 ;; *************** function ___wmul *****************
 10510 ;; Defined at:
 10511 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 10512 ;; Parameters:    Size  Location     Type
 10513 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10514 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;  product         2    4[BANK0 ] unsigned int 
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  2    0[BANK0 ] unsigned int 
 10519 ;; Registers used:
 10520 ;;		wreg, status,2, status,0, prodl, prodh
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;Total ram usage:        6 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:    3
 10533 ;; This function calls:
 10534 ;;		Nothing
 10535 ;; This function is called by:
 10536 ;;		_atoi
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text46
 10541  0034F4                     __ptext46:
 10542                           	opt callstack 0
 10543  0034F4                     ___wmul:
 10544                           	opt callstack 22
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;incstack = 0
 10548  0034F4  0100               	movlb	0	; () banked
 10549  0034F6  5180               	movf	___wmul@multiplier& (0+255),w,b
 10550  0034F8  0382               	mulwf	___wmul@multiplicand& (0+255),b
 10551  0034FA  CFF3 F084          	movff	prodl,___wmul@product
 10552  0034FE  CFF4 F085          	movff	prodh,___wmul@product+1
 10553  003502  5180               	movf	___wmul@multiplier& (0+255),w,b
 10554  003504  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10555  003506  50F3               	movf	prodl,w,c
 10556  003508  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 10557  00350A  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10558  00350C  0382               	mulwf	___wmul@multiplicand& (0+255),b
 10559  00350E  50F3               	movf	prodl,w,c
 10560  003510  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 10561                           
 10562                           ; BSR set to: 0
 10563  003512  C084  F080         	movff	___wmul@product,?___wmul
 10564  003516  C085  F081         	movff	___wmul@product+1,?___wmul+1
 10565                           
 10566                           ; BSR set to: 0
 10567  00351A  0012               	return		;funcret
 10568  00351C                     __end_of___wmul:
 10569                           	opt callstack 0
 10570                           
 10571 ;; *************** function ___llmod *****************
 10572 ;; Defined at:
 10573 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;  dividend        4    0[BANK0 ] unsigned long 
 10576 ;;  divisor         4    4[BANK0 ] unsigned long 
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;  counter         1    8[BANK0 ] unsigned char 
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  4    0[BANK0 ] unsigned long 
 10581 ;; Registers used:
 10582 ;;		wreg, status,2, status,0
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10588 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10592 ;;Total ram usage:        9 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:    3
 10595 ;; This function calls:
 10596 ;;		Nothing
 10597 ;; This function is called by:
 10598 ;;		_UI_main
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text47
 10603  002F06                     __ptext47:
 10604                           	opt callstack 0
 10605  002F06                     ___llmod:
 10606                           	opt callstack 26
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;incstack = 0
 10610  002F06  0100               	movlb	0	; () banked
 10611  002F08  5184               	movf	___llmod@divisor& (0+255),w,b
 10612  002F0A  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10613  002F0C  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10614  002F0E  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10615  002F10  B4D8               	btfsc	status,2,c
 10616  002F12  D024               	goto	l1100
 10617                           
 10618                           ; BSR set to: 0
 10619  002F14  0E01               	movlw	1
 10620  002F16  6F88               	movwf	___llmod@counter& (0+255),b
 10621  002F18  D006               	goto	l6835
 10622  002F1A                     l6833:
 10623                           
 10624                           ; BSR set to: 0
 10625  002F1A  90D8               	bcf	status,0,c
 10626  002F1C  3784               	rlcf	___llmod@divisor& (0+255),f,b
 10627  002F1E  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10628  002F20  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10629  002F22  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10630  002F24  2B88               	incf	___llmod@counter& (0+255),f,b
 10631  002F26                     l6835:
 10632                           
 10633                           ; BSR set to: 0
 10634  002F26  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10635  002F28  D7F8               	goto	l6833
 10636  002F2A                     u7540:
 10637                           
 10638                           ; BSR set to: 0
 10639  002F2A  5184               	movf	___llmod@divisor& (0+255),w,b
 10640  002F2C  5D80               	subwf	___llmod@dividend& (0+255),w,b
 10641  002F2E  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 10642  002F30  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10643  002F32  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 10644  002F34  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10645  002F36  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 10646  002F38  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10647  002F3A  A0D8               	btfss	status,0,c
 10648  002F3C  D008               	goto	l6841
 10649                           
 10650                           ; BSR set to: 0
 10651  002F3E  5184               	movf	___llmod@divisor& (0+255),w,b
 10652  002F40  5F80               	subwf	___llmod@dividend& (0+255),f,b
 10653  002F42  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 10654  002F44  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10655  002F46  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 10656  002F48  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10657  002F4A  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 10658  002F4C  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10659  002F4E                     l6841:
 10660                           
 10661                           ; BSR set to: 0
 10662  002F4E  90D8               	bcf	status,0,c
 10663  002F50  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10664  002F52  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10665  002F54  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10666  002F56  3384               	rrcf	___llmod@divisor& (0+255),f,b
 10667                           
 10668                           ; BSR set to: 0
 10669  002F58  2F88               	decfsz	___llmod@counter& (0+255),f,b
 10670  002F5A  D7E7               	goto	u7540
 10671  002F5C                     l1100:
 10672                           
 10673                           ; BSR set to: 0
 10674  002F5C  C080  F080         	movff	___llmod@dividend,?___llmod
 10675  002F60  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 10676  002F64  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 10677  002F68  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 10678                           
 10679                           ; BSR set to: 0
 10680  002F6C  0012               	return		;funcret
 10681  002F6E                     __end_of___llmod:
 10682                           	opt callstack 0
 10683                           
 10684 ;; *************** function _I2C_Master_Write *****************
 10685 ;; Defined at:
 10686 ;;		line 70 in file "I2C.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;		None
 10691 ;; Return value:  Size  Location     Type
 10692 ;;                  1    wreg      void 
 10693 ;; Registers used:
 10694 ;;		wreg, status,2, status,0, cstack
 10695 ;; Tracked objects:
 10696 ;;		On entry : 0/0
 10697 ;;		On exit  : 0/0
 10698 ;;		Unchanged: 0/0
 10699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10703 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10704 ;;Total ram usage:        2 bytes
 10705 ;; Hardware stack levels used:    1
 10706 ;; Hardware stack levels required when called:    4
 10707 ;; This function calls:
 10708 ;;		_I2C_Master_Wait
 10709 ;; This function is called by:
 10710 ;;		_ultrasonic_main
 10711 ;;		_UI_main
 10712 ;;		_brake
 10713 ;;		_start
 10714 ;;		_backwards
 10715 ;;		_main
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text48
 10720  00360A                     __ptext48:
 10721                           	opt callstack 0
 10722  00360A                     _I2C_Master_Write:
 10723                           	opt callstack 23
 10724                           
 10725                           ;I2C.c: 71:     I2C_Master_Wait();
 10726                           
 10727                           ; BSR set to: 0
 10728                           ;incstack = 0
 10729  00360A  ECEB  F01A         	call	_I2C_Master_Wait	;wreg free
 10730                           
 10731                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 10732  00360E  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 10733  003612  0012               	return		;funcret
 10734  003614                     __end_of_I2C_Master_Write:
 10735                           	opt callstack 0
 10736                           
 10737 ;; *************** function _I2C_Master_Stop *****************
 10738 ;; Defined at:
 10739 ;;		line 65 in file "I2C.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;		None
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;		None
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      void 
 10746 ;; Registers used:
 10747 ;;		wreg, status,2, status,0, cstack
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10757 ;;Total ram usage:        0 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; Hardware stack levels required when called:    4
 10760 ;; This function calls:
 10761 ;;		_I2C_Master_Wait
 10762 ;; This function is called by:
 10763 ;;		_ultrasonic_main
 10764 ;;		_UI_main
 10765 ;;		_brake
 10766 ;;		_start
 10767 ;;		_backwards
 10768 ;;		_main
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772                           	psect	text49
 10773  003614                     __ptext49:
 10774                           	opt callstack 0
 10775  003614                     _I2C_Master_Stop:
 10776                           	opt callstack 23
 10777                           
 10778                           ;I2C.c: 66:     I2C_Master_Wait();
 10779                           
 10780                           ;incstack = 0
 10781  003614  ECEB  F01A         	call	_I2C_Master_Wait	;wreg free
 10782                           
 10783                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 10784  003618  84C5               	bsf	4037,2,c	;volatile
 10785  00361A  0012               	return		;funcret
 10786  00361C                     __end_of_I2C_Master_Stop:
 10787                           	opt callstack 0
 10788                           
 10789 ;; *************** function _I2C_Master_Start *****************
 10790 ;; Defined at:
 10791 ;;		line 55 in file "I2C.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;		None
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;		None
 10796 ;; Return value:  Size  Location     Type
 10797 ;;                  1    wreg      void 
 10798 ;; Registers used:
 10799 ;;		wreg, status,2, status,0, cstack
 10800 ;; Tracked objects:
 10801 ;;		On entry : 0/0
 10802 ;;		On exit  : 0/0
 10803 ;;		Unchanged: 0/0
 10804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10809 ;;Total ram usage:        0 bytes
 10810 ;; Hardware stack levels used:    1
 10811 ;; Hardware stack levels required when called:    4
 10812 ;; This function calls:
 10813 ;;		_I2C_Master_Wait
 10814 ;; This function is called by:
 10815 ;;		_ultrasonic_main
 10816 ;;		_UI_main
 10817 ;;		_brake
 10818 ;;		_start
 10819 ;;		_backwards
 10820 ;;		_main
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           	psect	text50
 10825  00361C                     __ptext50:
 10826                           	opt callstack 0
 10827  00361C                     _I2C_Master_Start:
 10828                           	opt callstack 23
 10829                           
 10830                           ;I2C.c: 56:     I2C_Master_Wait();
 10831                           
 10832                           ;incstack = 0
 10833  00361C  ECEB  F01A         	call	_I2C_Master_Wait	;wreg free
 10834                           
 10835                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 10836  003620  80C5               	bsf	4037,0,c	;volatile
 10837  003622  0012               	return		;funcret
 10838  003624                     __end_of_I2C_Master_Start:
 10839                           	opt callstack 0
 10840                           
 10841 ;; *************** function _I2C_Master_Read *****************
 10842 ;; Defined at:
 10843 ;;		line 77 in file "I2C.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;  ackBit          1    wreg     unsigned char 
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;  ackBit          1    1[BANK0 ] unsigned char 
 10848 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      unsigned char 
 10851 ;; Registers used:
 10852 ;;		wreg, status,2, status,0, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10859 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10862 ;;Total ram usage:        2 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; Hardware stack levels required when called:    4
 10865 ;; This function calls:
 10866 ;;		_I2C_Master_Wait
 10867 ;; This function is called by:
 10868 ;;		_ultrasonic_main
 10869 ;;		_UI_main
 10870 ;;		_main
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           	psect	text51
 10875  00347A                     __ptext51:
 10876                           	opt callstack 0
 10877  00347A                     _I2C_Master_Read:
 10878                           	opt callstack 25
 10879                           
 10880                           ;incstack = 0
 10881                           ;I2C_Master_Read@ackBit stored from wreg
 10882  00347A  0100               	movlb	0	; () banked
 10883  00347C  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 10884                           
 10885                           ;I2C.c: 78:     I2C_Master_Wait();
 10886  00347E  ECEB  F01A         	call	_I2C_Master_Wait	;wreg free
 10887                           
 10888                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 10889  003482  86C5               	bsf	4037,3,c	;volatile
 10890                           
 10891                           ;I2C.c: 81:     I2C_Master_Wait();
 10892  003484  ECEB  F01A         	call	_I2C_Master_Wait	;wreg free
 10893                           
 10894                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 10895  003488  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 10896                           
 10897                           ;I2C.c: 86:     I2C_Master_Wait();
 10898  00348C  ECEB  F01A         	call	_I2C_Master_Wait	;wreg free
 10899                           
 10900                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 10901  003490  0100               	movlb	0	; () banked
 10902  003492  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 10903  003494  D002               	bra	u7405
 10904  003496  9AC5               	bcf	4037,5,c	;volatile
 10905  003498  D001               	bra	u7406
 10906  00349A                     u7405:
 10907  00349A  8AC5               	bsf	4037,5,c	;volatile
 10908  00349C                     u7406:
 10909                           
 10910                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 10911  00349C  88C5               	bsf	4037,4,c	;volatile
 10912                           
 10913                           ;I2C.c: 90:     return receivedByte;
 10914  00349E  0100               	movlb	0	; () banked
 10915  0034A0  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 10916                           
 10917                           ; BSR set to: 0
 10918  0034A2  0012               	return		;funcret
 10919  0034A4                     __end_of_I2C_Master_Read:
 10920                           	opt callstack 0
 10921                           
 10922 ;; *************** function _I2C_Master_Wait *****************
 10923 ;; Defined at:
 10924 ;;		line 21 in file "I2C.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;		None
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;		None
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  1    wreg      void 
 10931 ;; Registers used:
 10932 ;;		wreg, status,2, status,0
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10942 ;;Total ram usage:        1 bytes
 10943 ;; Hardware stack levels used:    1
 10944 ;; Hardware stack levels required when called:    3
 10945 ;; This function calls:
 10946 ;;		Nothing
 10947 ;; This function is called by:
 10948 ;;		_I2C_Master_Start
 10949 ;;		_I2C_Master_Stop
 10950 ;;		_I2C_Master_Write
 10951 ;;		_I2C_Master_Read
 10952 ;;		_I2C_Master_RepeatedStart
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           	psect	text52
 10957  0035D6                     __ptext52:
 10958                           	opt callstack 0
 10959  0035D6                     _I2C_Master_Wait:
 10960                           	opt callstack 23
 10961                           
 10962                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 10963                           
 10964                           ;I2C.c: 28:     }
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;incstack = 0
 10968  0035D6  B4C7               	btfsc	4039,2,c	;volatile
 10969  0035D8  D7FE               	goto	_I2C_Master_Wait
 10970  0035DA  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 10971  0035DE  0E1F               	movlw	31
 10972  0035E0  0100               	movlb	0	; () banked
 10973  0035E2  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 10974  0035E4  B4D8               	btfsc	status,2,c
 10975  0035E6  0012               	return	
 10976  0035E8  D7F6               	goto	_I2C_Master_Wait
 10977  0035EA                     __end_of_I2C_Master_Wait:
 10978                           	opt callstack 0
 10979                           
 10980 ;; *************** function _I2C_Master_Init *****************
 10981 ;; Defined at:
 10982 ;;		line 32 in file "I2C.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 10985 ;; Auto vars:     Size  Location     Type
 10986 ;;		None
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  1    wreg      void 
 10989 ;; Registers used:
 10990 ;;		wreg, status,2, status,0, cstack
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10996 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10998 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10999 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11000 ;;Total ram usage:        8 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    4
 11003 ;; This function calls:
 11004 ;;		___lldiv
 11005 ;; This function is called by:
 11006 ;;		_UI_main
 11007 ;;		_start
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text53
 11012  002F6E                     __ptext53:
 11013                           	opt callstack 0
 11014  002F6E                     _I2C_Master_Init:
 11015                           	opt callstack 25
 11016                           
 11017                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 11018                           
 11019                           ; BSR set to: 0
 11020                           ;incstack = 0
 11021  002F6E  9AC6               	bcf	4038,5,c	;volatile
 11022                           
 11023                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 11024  002F70  8694               	bsf	3988,3,c	;volatile
 11025                           
 11026                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 11027  002F72  8894               	bsf	3988,4,c	;volatile
 11028                           
 11029                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 11030  002F74  0E80               	movlw	128
 11031  002F76  0100               	movlb	0	; () banked
 11032  002F78  6F80               	movwf	___lldiv@dividend& (0+255),b
 11033  002F7A  0E96               	movlw	150
 11034  002F7C  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 11035  002F7E  0E98               	movlw	152
 11036  002F80  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 11037  002F82  0E00               	movlw	0
 11038  002F84  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 11039  002F86  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 11040  002F8A  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 11041  002F8E  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 11042  002F92  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 11043  002F96  0E02               	movlw	2
 11044  002F98                     u7415:
 11045  002F98  90D8               	bcf	status,0,c
 11046  002F9A  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 11047  002F9C  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 11048  002F9E  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 11049  002FA0  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 11050  002FA2  2EE8               	decfsz	wreg,f,c
 11051  002FA4  D7F9               	goto	u7415
 11052  002FA6  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 11053  002FAA  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 11054  002FAE  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 11055  002FB2  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 11056  002FB6  EC51  F016         	call	___lldiv	;wreg free
 11057  002FBA  0100               	movlb	0	; () banked
 11058  002FBC  0580               	decf	?___lldiv& (0+255),w,b
 11059  002FBE  6EC8               	movwf	4040,c	;volatile
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 11063  002FC0  0E80               	movlw	128
 11064  002FC2  6EC7               	movwf	4039,c	;volatile
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 11068  002FC4  0E28               	movlw	40
 11069  002FC6  6EC6               	movwf	4038,c	;volatile
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 11073  002FC8  0E00               	movlw	0
 11074  002FCA  6EC5               	movwf	4037,c	;volatile
 11075                           
 11076                           ; BSR set to: 0
 11077  002FCC  0012               	return		;funcret
 11078  002FCE                     __end_of_I2C_Master_Init:
 11079                           	opt callstack 0
 11080                           
 11081 ;; *************** function ___lldiv *****************
 11082 ;; Defined at:
 11083 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;  dividend        4    0[BANK0 ] unsigned long 
 11086 ;;  divisor         4    4[BANK0 ] unsigned long 
 11087 ;; Auto vars:     Size  Location     Type
 11088 ;;  quotient        4    8[BANK0 ] unsigned long 
 11089 ;;  counter         1   12[BANK0 ] unsigned char 
 11090 ;; Return value:  Size  Location     Type
 11091 ;;                  4    0[BANK0 ] unsigned long 
 11092 ;; Registers used:
 11093 ;;		wreg, status,2, status,0
 11094 ;; Tracked objects:
 11095 ;;		On entry : 0/0
 11096 ;;		On exit  : 0/0
 11097 ;;		Unchanged: 0/0
 11098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11099 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11100 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11102 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11103 ;;Total ram usage:       13 bytes
 11104 ;; Hardware stack levels used:    1
 11105 ;; Hardware stack levels required when called:    3
 11106 ;; This function calls:
 11107 ;;		Nothing
 11108 ;; This function is called by:
 11109 ;;		_I2C_Master_Init
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text54
 11114  002CA2                     __ptext54:
 11115                           	opt callstack 0
 11116  002CA2                     ___lldiv:
 11117                           	opt callstack 25
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;incstack = 0
 11121  002CA2  0E00               	movlw	0
 11122  002CA4  0100               	movlb	0	; () banked
 11123  002CA6  6F88               	movwf	___lldiv@quotient& (0+255),b
 11124  002CA8  0E00               	movlw	0
 11125  002CAA  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 11126  002CAC  0E00               	movlw	0
 11127  002CAE  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11128  002CB0  0E00               	movlw	0
 11129  002CB2  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11130                           
 11131                           ; BSR set to: 0
 11132  002CB4  5184               	movf	___lldiv@divisor& (0+255),w,b
 11133  002CB6  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11134  002CB8  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11135  002CBA  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11136  002CBC  B4D8               	btfsc	status,2,c
 11137  002CBE  D02A               	goto	l707
 11138                           
 11139                           ; BSR set to: 0
 11140  002CC0  0E01               	movlw	1
 11141  002CC2  6F8C               	movwf	___lldiv@counter& (0+255),b
 11142  002CC4  D006               	goto	l6537
 11143  002CC6                     l6535:
 11144                           
 11145                           ; BSR set to: 0
 11146  002CC6  90D8               	bcf	status,0,c
 11147  002CC8  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 11148  002CCA  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11149  002CCC  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11150  002CCE  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11151  002CD0  2B8C               	incf	___lldiv@counter& (0+255),f,b
 11152  002CD2                     l6537:
 11153                           
 11154                           ; BSR set to: 0
 11155  002CD2  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11156  002CD4  D7F8               	goto	l6535
 11157  002CD6                     u7080:
 11158                           
 11159                           ; BSR set to: 0
 11160  002CD6  90D8               	bcf	status,0,c
 11161  002CD8  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 11162  002CDA  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11163  002CDC  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11164  002CDE  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11165                           
 11166                           ; BSR set to: 0
 11167  002CE0  5184               	movf	___lldiv@divisor& (0+255),w,b
 11168  002CE2  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 11169  002CE4  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11170  002CE6  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11171  002CE8  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11172  002CEA  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11173  002CEC  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11174  002CEE  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11175  002CF0  A0D8               	btfss	status,0,c
 11176  002CF2  D009               	goto	l6547
 11177                           
 11178                           ; BSR set to: 0
 11179  002CF4  5184               	movf	___lldiv@divisor& (0+255),w,b
 11180  002CF6  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 11181  002CF8  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11182  002CFA  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11183  002CFC  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11184  002CFE  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11185  002D00  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11186  002D02  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11187                           
 11188                           ; BSR set to: 0
 11189  002D04  8188               	bsf	___lldiv@quotient& (0+255),0,b
 11190  002D06                     l6547:
 11191                           
 11192                           ; BSR set to: 0
 11193  002D06  90D8               	bcf	status,0,c
 11194  002D08  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11195  002D0A  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11196  002D0C  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11197  002D0E  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 11198                           
 11199                           ; BSR set to: 0
 11200  002D10  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 11201  002D12  D7E1               	goto	u7080
 11202  002D14                     l707:
 11203                           
 11204                           ; BSR set to: 0
 11205  002D14  C088  F080         	movff	___lldiv@quotient,?___lldiv
 11206  002D18  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 11207  002D1C  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 11208  002D20  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 11209                           
 11210                           ; BSR set to: 0
 11211  002D24  0012               	return		;funcret
 11212  002D26                     __end_of___lldiv:
 11213                           	opt callstack 0
 11214                           
 11215 ;; *************** function _ISR *****************
 11216 ;; Defined at:
 11217 ;;		line 72 in file "main.c"
 11218 ;; Parameters:    Size  Location     Type
 11219 ;;		None
 11220 ;; Auto vars:     Size  Location     Type
 11221 ;;		None
 11222 ;; Return value:  Size  Location     Type
 11223 ;;                  1    wreg      void 
 11224 ;; Registers used:
 11225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11235 ;;Total ram usage:        2 bytes
 11236 ;; Hardware stack levels used:    1
 11237 ;; Hardware stack levels required when called:    2
 11238 ;; This function calls:
 11239 ;;		_echo
 11240 ;; This function is called by:
 11241 ;;		Interrupt level 2
 11242 ;; This function uses a non-reentrant model
 11243 ;;
 11244                           
 11245                           	psect	intcode
 11246  000008                     __pintcode:
 11247                           	opt callstack 0
 11248  000008                     _ISR:
 11249                           	opt callstack 14
 11250                           
 11251                           ; BSR set to: 0
 11252                           ;incstack = 0
 11253  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11254  00000A  ED97  F018         	call	int_func,f	;refresh shadow registers
 11255                           
 11256                           	psect	intcode_body
 11257  00312E                     __pintcode_body:
 11258                           	opt callstack 14
 11259  00312E                     int_func:
 11260                           	opt callstack 14
 11261  00312E  0006               	pop		; remove dummy address from shadow register refresh
 11262  003130  CFD9 F036          	movff	fsr2l,??_ISR
 11263  003134  CFDA F037          	movff	fsr2h,??_ISR+1
 11264                           
 11265                           ;main.c: 73:  if(RBIF == 1){
 11266  003138  A0F2               	btfss	4082,0,c	;volatile
 11267  00313A  D012               	goto	i2l5535
 11268                           
 11269                           ;main.c: 74:         if (sens){
 11270  00313C  5060               	movf	_sens,w,c	;volatile
 11271  00313E  1061               	iorwf	_sens+1,w,c	;volatile
 11272  003140  B4D8               	btfsc	status,2,c
 11273  003142  D005               	goto	i2l5529
 11274                           
 11275                           ;main.c: 75:             RBIE = 0;
 11276  003144  96F2               	bcf	4082,3,c	;volatile
 11277                           
 11278                           ;main.c: 76:             echo();
 11279  003146  EC03  F004         	call	_echo	;wreg free
 11280                           
 11281                           ;main.c: 77:             RBIF = 0;
 11282  00314A  90F2               	bcf	4082,0,c	;volatile
 11283                           
 11284                           ;main.c: 78:             RBIE = 1;
 11285  00314C  86F2               	bsf	4082,3,c	;volatile
 11286  00314E                     i2l5529:
 11287                           
 11288                           ;main.c: 80:         if (~sens){
 11289  00314E  2860               	incf	_sens,w,c	;volatile
 11290  003150  E103               	bnz	i2u589_40
 11291  003152  2861               	incf	_sens+1,w,c	;volatile
 11292  003154  B4D8               	btfsc	status,2,c
 11293  003156  D004               	goto	i2l5535
 11294  003158                     i2u589_40:
 11295                           
 11296                           ;main.c: 81:             key_was_pressed = 1;
 11297  003158  0E01               	movlw	1
 11298  00315A  0101               	movlb	1	; () banked
 11299  00315C  6F9D               	movwf	_key_was_pressed& (0+255),b	;volatile
 11300                           
 11301                           ; BSR set to: 1
 11302                           ;main.c: 82:             INT1IF = 0;
 11303  00315E  90F0               	bcf	4080,0,c	;volatile
 11304  003160                     i2l5535:
 11305                           
 11306                           ;main.c: 85:     if (TMR0IF){
 11307  003160  A4F2               	btfss	4082,2,c	;volatile
 11308  003162  D009               	goto	i2l159
 11309                           
 11310                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
 11311  003164  94F2               	bcf	4082,2,c	;volatile
 11312                           
 11313                           ;main.c: 87:         TMR0H = (65536ul - (((10000000 / (4ul))/(64ul))/2ul)) >> 8;
 11314  003166  0EB3               	movlw	179
 11315  003168  6ED7               	movwf	4055,c	;volatile
 11316                           
 11317                           ;main.c: 88:         TMR0L = (65536ul - (((10000000 / (4ul))/(64ul))/2ul));
 11318  00316A  0EB5               	movlw	181
 11319  00316C  6ED6               	movwf	4054,c	;volatile
 11320                           
 11321                           ;main.c: 89:         cnt++;
 11322  00316E  0101               	movlb	1	; () banked
 11323  003170  4B9B               	infsnz	_cnt& (0+255),f,b
 11324  003172  2B9C               	incf	(_cnt+1)& (0+255),f,b
 11325                           
 11326                           ; BSR set to: 1
 11327                           ;main.c: 90:         LATDbits.LATD7 ^= 1u;
 11328  003174  7E8C               	btg	3980,7,c	;volatile
 11329  003176                     i2l159:
 11330  003176  C037  FFDA         	movff	??_ISR+1,fsr2h
 11331  00317A  C036  FFD9         	movff	??_ISR,fsr2l
 11332  00317E  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11333  003180  0011               	retfie		f
 11334  003182                     __end_of_ISR:
 11335                           	opt callstack 0
 11336                           
 11337 ;; *************** function _echo *****************
 11338 ;; Defined at:
 11339 ;;		line 100 in file "main.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;		None
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;		None
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      void 
 11346 ;; Registers used:
 11347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11356 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11357 ;;Total ram usage:        4 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; Hardware stack levels required when called:    1
 11360 ;; This function calls:
 11361 ;;		___fldiv
 11362 ;;		___fltol
 11363 ;;		___xxtofl
 11364 ;;		i2___awdiv
 11365 ;; This function is called by:
 11366 ;;		_ISR
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           
 11370                           	psect	text56
 11371  000806                     __ptext56:
 11372                           	opt callstack 0
 11373  000806                     _echo:
 11374                           	opt callstack 14
 11375                           
 11376                           ;main.c: 101:     if (b==1){
 11377                           
 11378                           ;incstack = 0
 11379  000806  0462               	decf	_b,w,c
 11380  000808  1063               	iorwf	_b+1,w,c
 11381  00080A  A4D8               	btfss	status,2,c
 11382  00080C  D0A2               	goto	i2l5013
 11383                           
 11384                           ;main.c: 102:         if (RB7 == 1){
 11385  00080E  BE81               	btfsc	3969,7,c	;volatile
 11386                           
 11387                           ;main.c: 103:             TMR1ON = 1;
 11388  000810  80CD               	bsf	4045,0,c	;volatile
 11389                           
 11390                           ;main.c: 105:         if (RB7 == 0){
 11391                           
 11392                           ;main.c: 104:         }
 11393  000812  BE81               	btfsc	3969,7,c	;volatile
 11394  000814  D037               	goto	i2l4989
 11395                           
 11396                           ;main.c: 106:             TMR1ON = 0;
 11397  000816  90CD               	bcf	4045,0,c	;volatile
 11398                           
 11399                           ;main.c: 107:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 11400  000818  0EAE               	movlw	174
 11401  00081A  6E13               	movwf	___fldiv@a,c
 11402  00081C  0E47               	movlw	71
 11403  00081E  6E14               	movwf	___fldiv@a+1,c
 11404  000820  0E6B               	movlw	107
 11405  000822  6E15               	movwf	___fldiv@a+2,c
 11406  000824  0E42               	movlw	66
 11407  000826  6E16               	movwf	___fldiv@a+3,c
 11408  000828  50CF               	movf	4047,w,c	;volatile
 11409  00082A  6E33               	movwf	(??_echo+1)& (0+255),c
 11410  00082C  6A32               	clrf	??_echo& (0+255),c
 11411  00082E  50CE               	movf	4046,w,c	;volatile
 11412  000830  6E34               	movwf	(??_echo+2)& (0+255),c
 11413  000832  6A35               	clrf	(??_echo+3)& (0+255),c
 11414  000834  5032               	movf	??_echo,w,c
 11415  000836  1234               	iorwf	??_echo+2,f,c
 11416  000838  5033               	movf	??_echo+1,w,c
 11417  00083A  1235               	iorwf	??_echo+3,f,c
 11418  00083C  C034  F001         	movff	??_echo+2,___xxtofl@val
 11419  000840  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 11420  000844  0E00               	movlw	0
 11421  000846  BE02               	btfsc	___xxtofl@val+1,7,c
 11422  000848  0EFF               	movlw	-1
 11423  00084A  6E03               	movwf	___xxtofl@val+2,c
 11424  00084C  6E04               	movwf	___xxtofl@val+3,c
 11425  00084E  0E01               	movlw	1
 11426  000850  ECB3  F012         	call	___xxtofl
 11427  000854  C001  F00F         	movff	?___xxtofl,___fldiv@b
 11428  000858  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 11429  00085C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 11430  000860  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 11431  000864  ECE0  F00B         	call	___fldiv	;wreg free
 11432  000868  C00F  F028         	movff	?___fldiv,___fltol@f1
 11433  00086C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 11434  000870  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 11435  000874  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 11436  000878  ECD5  F014         	call	___fltol	;wreg free
 11437  00087C  C028  F040         	movff	?___fltol,_a
 11438  000880  C029  F041         	movff	?___fltol+1,_a+1
 11439  000884                     i2l4989:
 11440                           
 11441                           ;main.c: 111:         if (a[0]>=2 && a[0]<=200){
 11442  000884  BE41               	btfsc	_a+1,7,c
 11443  000886  D065               	goto	i2l5013
 11444  000888  5041               	movf	_a+1,w,c
 11445  00088A  E104               	bnz	i2u504_40
 11446  00088C  0E02               	movlw	2
 11447  00088E  5C40               	subwf	_a,w,c
 11448  000890  A0D8               	btfss	status,0,c
 11449  000892  D05F               	goto	i2l5013
 11450  000894                     i2u504_40:
 11451  000894  BE41               	btfsc	_a+1,7,c
 11452  000896  D006               	goto	i2u505_40
 11453  000898  5041               	movf	_a+1,w,c
 11454  00089A  E15B               	bnz	i2l5013
 11455  00089C  0EC9               	movlw	201
 11456  00089E  5C40               	subwf	_a,w,c
 11457  0008A0  B0D8               	btfsc	status,0,c
 11458  0008A2  D057               	goto	i2l5013
 11459  0008A4                     i2u505_40:
 11460                           
 11461                           ;main.c: 112:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 11462  0008A4  0448               	decf	_sumf,w,c
 11463  0008A6  B4D8               	btfsc	status,2,c
 11464  0008A8  D01B               	goto	i2l5005
 11465  0008AA  0101               	movlb	1	; () banked
 11466  0008AC  515C               	movf	_dist_final& (0+255),w,b
 11467  0008AE  115D               	iorwf	(_dist_final+1)& (0+255),w,b
 11468  0008B0  B4D8               	btfsc	status,2,c
 11469  0008B2  D016               	goto	i2l5005
 11470                           
 11471                           ; BSR set to: 1
 11472  0008B4  515E               	movf	(_dist_final+2)& (0+255),w,b
 11473  0008B6  115F               	iorwf	(_dist_final+3)& (0+255),w,b
 11474  0008B8  B4D8               	btfsc	status,2,c
 11475  0008BA  D012               	goto	i2l5005
 11476                           
 11477                           ; BSR set to: 1
 11478  0008BC  5160               	movf	(_dist_final+4)& (0+255),w,b
 11479  0008BE  1161               	iorwf	(_dist_final+5)& (0+255),w,b
 11480  0008C0  B4D8               	btfsc	status,2,c
 11481  0008C2  D00E               	goto	i2l5005
 11482                           
 11483                           ; BSR set to: 1
 11484                           ;main.c: 113:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 11485  0008C4  5160               	movf	(_dist_final+4)& (0+255),w,b
 11486  0008C6  255E               	addwf	(_dist_final+2)& (0+255),w,b
 11487  0008C8  6E32               	movwf	??_echo& (0+255),c
 11488  0008CA  5161               	movf	(_dist_final+5)& (0+255),w,b
 11489  0008CC  215F               	addwfc	(_dist_final+3)& (0+255),w,b
 11490  0008CE  6E33               	movwf	(??_echo+1)& (0+255),c
 11491  0008D0  515C               	movf	_dist_final& (0+255),w,b
 11492  0008D2  2432               	addwf	??_echo,w,c
 11493  0008D4  6E38               	movwf	_sum,c
 11494  0008D6  515D               	movf	(_dist_final+1)& (0+255),w,b
 11495  0008D8  2033               	addwfc	??_echo+1,w,c
 11496  0008DA  6E39               	movwf	_sum+1,c
 11497                           
 11498                           ; BSR set to: 1
 11499                           ;main.c: 114:                 sumf[0] = 1;
 11500  0008DC  0E01               	movlw	1
 11501  0008DE  6E48               	movwf	_sumf,c
 11502  0008E0                     i2l5005:
 11503                           
 11504                           ;main.c: 116:             if (sumf[0]){
 11505  0008E0  5048               	movf	_sumf,w,c
 11506  0008E2  B4D8               	btfsc	status,2,c
 11507  0008E4  D029               	goto	i2l5011
 11508                           
 11509                           ;main.c: 117:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 11510  0008E6  90D8               	bcf	status,0,c
 11511  0008E8  3458               	rlcf	_meas,w,c	;volatile
 11512  0008EA  6ED9               	movwf	fsr2l,c
 11513  0008EC  3459               	rlcf	_meas+1,w,c	;volatile
 11514  0008EE  6EDA               	movwf	fsr2h,c
 11515  0008F0  0E5C               	movlw	low _dist_final
 11516  0008F2  26D9               	addwf	fsr2l,f,c
 11517  0008F4  0E01               	movlw	high _dist_final
 11518  0008F6  22DA               	addwfc	fsr2h,f,c
 11519  0008F8  CFDE F032          	movff	postinc2,??_echo
 11520  0008FC  CFDD F033          	movff	postdec2,??_echo+1
 11521  000900  C038  F034         	movff	_sum,??_echo+2
 11522  000904  C039  F035         	movff	_sum+1,??_echo+3
 11523  000908  5032               	movf	??_echo,w,c
 11524  00090A  5E34               	subwf	??_echo+2,f,c
 11525  00090C  5033               	movf	??_echo+1,w,c
 11526  00090E  5A35               	subwfb	??_echo+3,f,c
 11527  000910  5040               	movf	_a,w,c
 11528  000912  2434               	addwf	??_echo+2,w,c
 11529  000914  6E38               	movwf	_sum,c
 11530  000916  5041               	movf	_a+1,w,c
 11531  000918  2035               	addwfc	??_echo+3,w,c
 11532  00091A  6E39               	movwf	_sum+1,c
 11533                           
 11534                           ;main.c: 118:                 dist_final[0][5] = (sum[0]/5);
 11535  00091C  C038  F001         	movff	_sum,i2___awdiv@dividend
 11536  000920  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 11537  000924  0E00               	movlw	0
 11538  000926  6E04               	movwf	i2___awdiv@divisor+1,c
 11539  000928  0E05               	movlw	5
 11540  00092A  6E03               	movwf	i2___awdiv@divisor,c
 11541  00092C  EC93  F016         	call	i2___awdiv	;wreg free
 11542  000930  C001  F166         	movff	?i2___awdiv,_dist_final+10
 11543  000934  C002  F167         	movff	?i2___awdiv+1,_dist_final+11
 11544  000938                     i2l5011:
 11545                           
 11546                           ;main.c: 120:             dist_final[0][meas] = a[0];
 11547  000938  90D8               	bcf	status,0,c
 11548  00093A  3458               	rlcf	_meas,w,c	;volatile
 11549  00093C  6ED9               	movwf	fsr2l,c
 11550  00093E  3459               	rlcf	_meas+1,w,c	;volatile
 11551  000940  6EDA               	movwf	fsr2h,c
 11552  000942  0E5C               	movlw	low _dist_final
 11553  000944  26D9               	addwf	fsr2l,f,c
 11554  000946  0E01               	movlw	high _dist_final
 11555  000948  22DA               	addwfc	fsr2h,f,c
 11556  00094A  C040  FFDE         	movff	_a,postinc2
 11557  00094E  C041  FFDD         	movff	_a+1,postdec2
 11558  000952                     i2l5013:
 11559                           
 11560                           ;main.c: 123:     if (b==2){
 11561  000952  0E02               	movlw	2
 11562  000954  1862               	xorwf	_b,w,c
 11563  000956  1063               	iorwf	_b+1,w,c
 11564  000958  A4D8               	btfss	status,2,c
 11565  00095A  D0A4               	goto	i2l5047
 11566                           
 11567                           ;main.c: 124:         if (RB6 == 1){
 11568  00095C  BC81               	btfsc	3969,6,c	;volatile
 11569                           
 11570                           ;main.c: 125:             TMR1ON = 1;
 11571  00095E  80CD               	bsf	4045,0,c	;volatile
 11572                           
 11573                           ;main.c: 127:         if (RB6 == 0){
 11574                           
 11575                           ;main.c: 126:         }
 11576  000960  BC81               	btfsc	3969,6,c	;volatile
 11577  000962  D037               	goto	i2l5023
 11578                           
 11579                           ;main.c: 128:             TMR1ON = 0;
 11580  000964  90CD               	bcf	4045,0,c	;volatile
 11581                           
 11582                           ;main.c: 129:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 11583  000966  0EAE               	movlw	174
 11584  000968  6E13               	movwf	___fldiv@a,c
 11585  00096A  0E47               	movlw	71
 11586  00096C  6E14               	movwf	___fldiv@a+1,c
 11587  00096E  0E6B               	movlw	107
 11588  000970  6E15               	movwf	___fldiv@a+2,c
 11589  000972  0E42               	movlw	66
 11590  000974  6E16               	movwf	___fldiv@a+3,c
 11591  000976  50CF               	movf	4047,w,c	;volatile
 11592  000978  6E33               	movwf	(??_echo+1)& (0+255),c
 11593  00097A  6A32               	clrf	??_echo& (0+255),c
 11594  00097C  50CE               	movf	4046,w,c	;volatile
 11595  00097E  6E34               	movwf	(??_echo+2)& (0+255),c
 11596  000980  6A35               	clrf	(??_echo+3)& (0+255),c
 11597  000982  5032               	movf	??_echo,w,c
 11598  000984  1234               	iorwf	??_echo+2,f,c
 11599  000986  5033               	movf	??_echo+1,w,c
 11600  000988  1235               	iorwf	??_echo+3,f,c
 11601  00098A  C034  F001         	movff	??_echo+2,___xxtofl@val
 11602  00098E  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 11603  000992  0E00               	movlw	0
 11604  000994  BE02               	btfsc	___xxtofl@val+1,7,c
 11605  000996  0EFF               	movlw	-1
 11606  000998  6E03               	movwf	___xxtofl@val+2,c
 11607  00099A  6E04               	movwf	___xxtofl@val+3,c
 11608  00099C  0E01               	movlw	1
 11609  00099E  ECB3  F012         	call	___xxtofl
 11610  0009A2  C001  F00F         	movff	?___xxtofl,___fldiv@b
 11611  0009A6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 11612  0009AA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 11613  0009AE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 11614  0009B2  ECE0  F00B         	call	___fldiv	;wreg free
 11615  0009B6  C00F  F028         	movff	?___fldiv,___fltol@f1
 11616  0009BA  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 11617  0009BE  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 11618  0009C2  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 11619  0009C6  ECD5  F014         	call	___fltol	;wreg free
 11620  0009CA  C028  F042         	movff	?___fltol,_a+2
 11621  0009CE  C029  F043         	movff	?___fltol+1,_a+3
 11622  0009D2                     i2l5023:
 11623                           
 11624                           ;main.c: 132:                 if (a[1]>=2 && a[1]<=200){
 11625  0009D2  BE43               	btfsc	_a+3,7,c
 11626  0009D4  D067               	goto	i2l5047
 11627  0009D6  5043               	movf	_a+3,w,c
 11628  0009D8  E104               	bnz	i2u514_40
 11629  0009DA  0E02               	movlw	2
 11630  0009DC  5C42               	subwf	_a+2,w,c
 11631  0009DE  A0D8               	btfss	status,0,c
 11632  0009E0  D061               	goto	i2l5047
 11633  0009E2                     i2u514_40:
 11634  0009E2  BE43               	btfsc	_a+3,7,c
 11635  0009E4  D006               	goto	i2u515_40
 11636  0009E6  5043               	movf	_a+3,w,c
 11637  0009E8  E15D               	bnz	i2l5047
 11638  0009EA  0EC9               	movlw	201
 11639  0009EC  5C42               	subwf	_a+2,w,c
 11640  0009EE  B0D8               	btfsc	status,0,c
 11641  0009F0  D059               	goto	i2l5047
 11642  0009F2                     i2u515_40:
 11643                           
 11644                           ;main.c: 134:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 11645  0009F2  0449               	decf	_sumf+1,w,c
 11646  0009F4  B4D8               	btfsc	status,2,c
 11647  0009F6  D01B               	goto	i2l5039
 11648  0009F8  0101               	movlb	1	; () banked
 11649  0009FA  5168               	movf	(_dist_final+12)& (0+255),w,b
 11650  0009FC  1169               	iorwf	(_dist_final+13)& (0+255),w,b
 11651  0009FE  B4D8               	btfsc	status,2,c
 11652  000A00  D016               	goto	i2l5039
 11653                           
 11654                           ; BSR set to: 1
 11655  000A02  516A               	movf	(_dist_final+14)& (0+255),w,b
 11656  000A04  116B               	iorwf	(_dist_final+15)& (0+255),w,b
 11657  000A06  B4D8               	btfsc	status,2,c
 11658  000A08  D012               	goto	i2l5039
 11659                           
 11660                           ; BSR set to: 1
 11661  000A0A  516C               	movf	(_dist_final+16)& (0+255),w,b
 11662  000A0C  116D               	iorwf	(_dist_final+17)& (0+255),w,b
 11663  000A0E  B4D8               	btfsc	status,2,c
 11664  000A10  D00E               	goto	i2l5039
 11665                           
 11666                           ; BSR set to: 1
 11667                           ;main.c: 135:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 11668  000A12  516A               	movf	(_dist_final+14)& (0+255),w,b
 11669  000A14  2568               	addwf	(_dist_final+12)& (0+255),w,b
 11670  000A16  6E32               	movwf	??_echo& (0+255),c
 11671  000A18  516B               	movf	(_dist_final+15)& (0+255),w,b
 11672  000A1A  2169               	addwfc	(_dist_final+13)& (0+255),w,b
 11673  000A1C  6E33               	movwf	(??_echo+1)& (0+255),c
 11674  000A1E  516C               	movf	(_dist_final+16)& (0+255),w,b
 11675  000A20  2432               	addwf	??_echo,w,c
 11676  000A22  6E3A               	movwf	_sum+2,c
 11677  000A24  516D               	movf	(_dist_final+17)& (0+255),w,b
 11678  000A26  2033               	addwfc	??_echo+1,w,c
 11679  000A28  6E3B               	movwf	_sum+3,c
 11680                           
 11681                           ; BSR set to: 1
 11682                           ;main.c: 136:             sumf[1] = 1;
 11683  000A2A  0E01               	movlw	1
 11684  000A2C  6E49               	movwf	_sumf+1,c
 11685  000A2E                     i2l5039:
 11686                           
 11687                           ;main.c: 138:         if (sumf[1]){
 11688  000A2E  5049               	movf	_sumf+1,w,c
 11689  000A30  B4D8               	btfsc	status,2,c
 11690  000A32  D02B               	goto	i2l5045
 11691                           
 11692                           ;main.c: 139:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 11693  000A34  90D8               	bcf	status,0,c
 11694  000A36  3458               	rlcf	_meas,w,c	;volatile
 11695  000A38  6ED9               	movwf	fsr2l,c
 11696  000A3A  3459               	rlcf	_meas+1,w,c	;volatile
 11697  000A3C  6EDA               	movwf	fsr2h,c
 11698  000A3E  0E68               	movlw	low (_dist_final+12)
 11699  000A40  26D9               	addwf	fsr2l,f,c
 11700  000A42  0E01               	movlw	high (_dist_final+12)
 11701  000A44  22DA               	addwfc	fsr2h,f,c
 11702  000A46  CFDE F032          	movff	postinc2,??_echo
 11703  000A4A  CFDD F033          	movff	postdec2,??_echo+1
 11704  000A4E  EE20  F03A         	lfsr	2,_sum+2
 11705  000A52  CFDE F034          	movff	postinc2,??_echo+2
 11706  000A56  CFDD F035          	movff	postdec2,??_echo+3
 11707  000A5A  5032               	movf	??_echo,w,c
 11708  000A5C  5E34               	subwf	??_echo+2,f,c
 11709  000A5E  5033               	movf	??_echo+1,w,c
 11710  000A60  5A35               	subwfb	??_echo+3,f,c
 11711  000A62  5042               	movf	_a+2,w,c
 11712  000A64  2434               	addwf	??_echo+2,w,c
 11713  000A66  6E3A               	movwf	_sum+2,c
 11714  000A68  5043               	movf	_a+3,w,c
 11715  000A6A  2035               	addwfc	??_echo+3,w,c
 11716  000A6C  6E3B               	movwf	_sum+3,c
 11717                           
 11718                           ;main.c: 140:             dist_final[1][5] = (sum[1]/5);
 11719  000A6E  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 11720  000A72  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 11721  000A76  0E00               	movlw	0
 11722  000A78  6E04               	movwf	i2___awdiv@divisor+1,c
 11723  000A7A  0E05               	movlw	5
 11724  000A7C  6E03               	movwf	i2___awdiv@divisor,c
 11725  000A7E  EC93  F016         	call	i2___awdiv	;wreg free
 11726  000A82  C001  F172         	movff	?i2___awdiv,_dist_final+22
 11727  000A86  C002  F173         	movff	?i2___awdiv+1,_dist_final+23
 11728  000A8A                     i2l5045:
 11729                           
 11730                           ;main.c: 142:         dist_final[1][meas] = a[1];
 11731  000A8A  90D8               	bcf	status,0,c
 11732  000A8C  3458               	rlcf	_meas,w,c	;volatile
 11733  000A8E  6ED9               	movwf	fsr2l,c
 11734  000A90  3459               	rlcf	_meas+1,w,c	;volatile
 11735  000A92  6EDA               	movwf	fsr2h,c
 11736  000A94  0E68               	movlw	low (_dist_final+12)
 11737  000A96  26D9               	addwf	fsr2l,f,c
 11738  000A98  0E01               	movlw	high (_dist_final+12)
 11739  000A9A  22DA               	addwfc	fsr2h,f,c
 11740  000A9C  C042  FFDE         	movff	_a+2,postinc2
 11741  000AA0  C043  FFDD         	movff	_a+3,postdec2
 11742  000AA4                     i2l5047:
 11743                           
 11744                           ;main.c: 145:     if (b==3){
 11745  000AA4  0E03               	movlw	3
 11746  000AA6  1862               	xorwf	_b,w,c
 11747  000AA8  1063               	iorwf	_b+1,w,c
 11748  000AAA  A4D8               	btfss	status,2,c
 11749  000AAC  D0A4               	goto	i2l5081
 11750                           
 11751                           ;main.c: 146:         if (RB5 == 1){
 11752  000AAE  BA81               	btfsc	3969,5,c	;volatile
 11753                           
 11754                           ;main.c: 147:             TMR1ON = 1;
 11755  000AB0  80CD               	bsf	4045,0,c	;volatile
 11756                           
 11757                           ;main.c: 149:         if (RB5 == 0){
 11758                           
 11759                           ;main.c: 148:         }
 11760  000AB2  BA81               	btfsc	3969,5,c	;volatile
 11761  000AB4  D037               	goto	i2l5057
 11762                           
 11763                           ;main.c: 150:             TMR1ON = 0;
 11764  000AB6  90CD               	bcf	4045,0,c	;volatile
 11765                           
 11766                           ;main.c: 151:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 11767  000AB8  0EAE               	movlw	174
 11768  000ABA  6E13               	movwf	___fldiv@a,c
 11769  000ABC  0E47               	movlw	71
 11770  000ABE  6E14               	movwf	___fldiv@a+1,c
 11771  000AC0  0E6B               	movlw	107
 11772  000AC2  6E15               	movwf	___fldiv@a+2,c
 11773  000AC4  0E42               	movlw	66
 11774  000AC6  6E16               	movwf	___fldiv@a+3,c
 11775  000AC8  50CF               	movf	4047,w,c	;volatile
 11776  000ACA  6E33               	movwf	(??_echo+1)& (0+255),c
 11777  000ACC  6A32               	clrf	??_echo& (0+255),c
 11778  000ACE  50CE               	movf	4046,w,c	;volatile
 11779  000AD0  6E34               	movwf	(??_echo+2)& (0+255),c
 11780  000AD2  6A35               	clrf	(??_echo+3)& (0+255),c
 11781  000AD4  5032               	movf	??_echo,w,c
 11782  000AD6  1234               	iorwf	??_echo+2,f,c
 11783  000AD8  5033               	movf	??_echo+1,w,c
 11784  000ADA  1235               	iorwf	??_echo+3,f,c
 11785  000ADC  C034  F001         	movff	??_echo+2,___xxtofl@val
 11786  000AE0  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 11787  000AE4  0E00               	movlw	0
 11788  000AE6  BE02               	btfsc	___xxtofl@val+1,7,c
 11789  000AE8  0EFF               	movlw	-1
 11790  000AEA  6E03               	movwf	___xxtofl@val+2,c
 11791  000AEC  6E04               	movwf	___xxtofl@val+3,c
 11792  000AEE  0E01               	movlw	1
 11793  000AF0  ECB3  F012         	call	___xxtofl
 11794  000AF4  C001  F00F         	movff	?___xxtofl,___fldiv@b
 11795  000AF8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 11796  000AFC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 11797  000B00  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 11798  000B04  ECE0  F00B         	call	___fldiv	;wreg free
 11799  000B08  C00F  F028         	movff	?___fldiv,___fltol@f1
 11800  000B0C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 11801  000B10  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 11802  000B14  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 11803  000B18  ECD5  F014         	call	___fltol	;wreg free
 11804  000B1C  C028  F044         	movff	?___fltol,_a+4
 11805  000B20  C029  F045         	movff	?___fltol+1,_a+5
 11806  000B24                     i2l5057:
 11807                           
 11808                           ;main.c: 154:                 if (a[2]>=2 && a[2]<=200){
 11809  000B24  BE45               	btfsc	_a+5,7,c
 11810  000B26  D067               	goto	i2l5081
 11811  000B28  5045               	movf	_a+5,w,c
 11812  000B2A  E104               	bnz	i2u524_40
 11813  000B2C  0E02               	movlw	2
 11814  000B2E  5C44               	subwf	_a+4,w,c
 11815  000B30  A0D8               	btfss	status,0,c
 11816  000B32  D061               	goto	i2l5081
 11817  000B34                     i2u524_40:
 11818  000B34  BE45               	btfsc	_a+5,7,c
 11819  000B36  D006               	goto	i2u525_40
 11820  000B38  5045               	movf	_a+5,w,c
 11821  000B3A  E15D               	bnz	i2l5081
 11822  000B3C  0EC9               	movlw	201
 11823  000B3E  5C44               	subwf	_a+4,w,c
 11824  000B40  B0D8               	btfsc	status,0,c
 11825  000B42  D059               	goto	i2l5081
 11826  000B44                     i2u525_40:
 11827                           
 11828                           ;main.c: 156:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 11829  000B44  044A               	decf	_sumf+2,w,c
 11830  000B46  B4D8               	btfsc	status,2,c
 11831  000B48  D01B               	goto	i2l5073
 11832  000B4A  0101               	movlb	1	; () banked
 11833  000B4C  5174               	movf	(_dist_final+24)& (0+255),w,b
 11834  000B4E  1175               	iorwf	(_dist_final+25)& (0+255),w,b
 11835  000B50  B4D8               	btfsc	status,2,c
 11836  000B52  D016               	goto	i2l5073
 11837                           
 11838                           ; BSR set to: 1
 11839  000B54  5176               	movf	(_dist_final+26)& (0+255),w,b
 11840  000B56  1177               	iorwf	(_dist_final+27)& (0+255),w,b
 11841  000B58  B4D8               	btfsc	status,2,c
 11842  000B5A  D012               	goto	i2l5073
 11843                           
 11844                           ; BSR set to: 1
 11845  000B5C  5178               	movf	(_dist_final+28)& (0+255),w,b
 11846  000B5E  1179               	iorwf	(_dist_final+29)& (0+255),w,b
 11847  000B60  B4D8               	btfsc	status,2,c
 11848  000B62  D00E               	goto	i2l5073
 11849                           
 11850                           ; BSR set to: 1
 11851                           ;main.c: 157:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 11852  000B64  5176               	movf	(_dist_final+26)& (0+255),w,b
 11853  000B66  2574               	addwf	(_dist_final+24)& (0+255),w,b
 11854  000B68  6E32               	movwf	??_echo& (0+255),c
 11855  000B6A  5177               	movf	(_dist_final+27)& (0+255),w,b
 11856  000B6C  2175               	addwfc	(_dist_final+25)& (0+255),w,b
 11857  000B6E  6E33               	movwf	(??_echo+1)& (0+255),c
 11858  000B70  5178               	movf	(_dist_final+28)& (0+255),w,b
 11859  000B72  2432               	addwf	??_echo,w,c
 11860  000B74  6E3C               	movwf	_sum+4,c
 11861  000B76  5179               	movf	(_dist_final+29)& (0+255),w,b
 11862  000B78  2033               	addwfc	??_echo+1,w,c
 11863  000B7A  6E3D               	movwf	_sum+5,c
 11864                           
 11865                           ; BSR set to: 1
 11866                           ;main.c: 158:             sumf[2] = 1;
 11867  000B7C  0E01               	movlw	1
 11868  000B7E  6E4A               	movwf	_sumf+2,c
 11869  000B80                     i2l5073:
 11870                           
 11871                           ;main.c: 160:         if (sumf[2]){
 11872  000B80  504A               	movf	_sumf+2,w,c
 11873  000B82  B4D8               	btfsc	status,2,c
 11874  000B84  D02B               	goto	i2l5079
 11875                           
 11876                           ;main.c: 161:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 11877  000B86  90D8               	bcf	status,0,c
 11878  000B88  3458               	rlcf	_meas,w,c	;volatile
 11879  000B8A  6ED9               	movwf	fsr2l,c
 11880  000B8C  3459               	rlcf	_meas+1,w,c	;volatile
 11881  000B8E  6EDA               	movwf	fsr2h,c
 11882  000B90  0E74               	movlw	low (_dist_final+24)
 11883  000B92  26D9               	addwf	fsr2l,f,c
 11884  000B94  0E01               	movlw	high (_dist_final+24)
 11885  000B96  22DA               	addwfc	fsr2h,f,c
 11886  000B98  CFDE F032          	movff	postinc2,??_echo
 11887  000B9C  CFDD F033          	movff	postdec2,??_echo+1
 11888  000BA0  EE20  F03C         	lfsr	2,_sum+4
 11889  000BA4  CFDE F034          	movff	postinc2,??_echo+2
 11890  000BA8  CFDD F035          	movff	postdec2,??_echo+3
 11891  000BAC  5032               	movf	??_echo,w,c
 11892  000BAE  5E34               	subwf	??_echo+2,f,c
 11893  000BB0  5033               	movf	??_echo+1,w,c
 11894  000BB2  5A35               	subwfb	??_echo+3,f,c
 11895  000BB4  5044               	movf	_a+4,w,c
 11896  000BB6  2434               	addwf	??_echo+2,w,c
 11897  000BB8  6E3C               	movwf	_sum+4,c
 11898  000BBA  5045               	movf	_a+5,w,c
 11899  000BBC  2035               	addwfc	??_echo+3,w,c
 11900  000BBE  6E3D               	movwf	_sum+5,c
 11901                           
 11902                           ;main.c: 162:             dist_final[2][5] = (sum[2]/5);
 11903  000BC0  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 11904  000BC4  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 11905  000BC8  0E00               	movlw	0
 11906  000BCA  6E04               	movwf	i2___awdiv@divisor+1,c
 11907  000BCC  0E05               	movlw	5
 11908  000BCE  6E03               	movwf	i2___awdiv@divisor,c
 11909  000BD0  EC93  F016         	call	i2___awdiv	;wreg free
 11910  000BD4  C001  F17E         	movff	?i2___awdiv,_dist_final+34
 11911  000BD8  C002  F17F         	movff	?i2___awdiv+1,_dist_final+35
 11912  000BDC                     i2l5079:
 11913                           
 11914                           ;main.c: 164:         dist_final[2][meas] = a[2];
 11915  000BDC  90D8               	bcf	status,0,c
 11916  000BDE  3458               	rlcf	_meas,w,c	;volatile
 11917  000BE0  6ED9               	movwf	fsr2l,c
 11918  000BE2  3459               	rlcf	_meas+1,w,c	;volatile
 11919  000BE4  6EDA               	movwf	fsr2h,c
 11920  000BE6  0E74               	movlw	low (_dist_final+24)
 11921  000BE8  26D9               	addwf	fsr2l,f,c
 11922  000BEA  0E01               	movlw	high (_dist_final+24)
 11923  000BEC  22DA               	addwfc	fsr2h,f,c
 11924  000BEE  C044  FFDE         	movff	_a+4,postinc2
 11925  000BF2  C045  FFDD         	movff	_a+5,postdec2
 11926  000BF6                     i2l5081:
 11927                           
 11928                           ;main.c: 167:     if (b==4){
 11929  000BF6  0E04               	movlw	4
 11930  000BF8  1862               	xorwf	_b,w,c
 11931  000BFA  1063               	iorwf	_b+1,w,c
 11932  000BFC  A4D8               	btfss	status,2,c
 11933  000BFE  0012               	return	
 11934                           
 11935                           ;main.c: 168:         if (RB4 == 1){
 11936  000C00  B881               	btfsc	3969,4,c	;volatile
 11937                           
 11938                           ;main.c: 169:             TMR1ON = 1;
 11939  000C02  80CD               	bsf	4045,0,c	;volatile
 11940                           
 11941                           ;main.c: 171:         if (RB4 == 0){
 11942                           
 11943                           ;main.c: 170:         }
 11944  000C04  B881               	btfsc	3969,4,c	;volatile
 11945  000C06  D037               	goto	i2l5091
 11946                           
 11947                           ;main.c: 172:             TMR1ON = 0;
 11948  000C08  90CD               	bcf	4045,0,c	;volatile
 11949                           
 11950                           ;main.c: 173:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 11951  000C0A  0EAE               	movlw	174
 11952  000C0C  6E13               	movwf	___fldiv@a,c
 11953  000C0E  0E47               	movlw	71
 11954  000C10  6E14               	movwf	___fldiv@a+1,c
 11955  000C12  0E6B               	movlw	107
 11956  000C14  6E15               	movwf	___fldiv@a+2,c
 11957  000C16  0E42               	movlw	66
 11958  000C18  6E16               	movwf	___fldiv@a+3,c
 11959  000C1A  50CF               	movf	4047,w,c	;volatile
 11960  000C1C  6E33               	movwf	(??_echo+1)& (0+255),c
 11961  000C1E  6A32               	clrf	??_echo& (0+255),c
 11962  000C20  50CE               	movf	4046,w,c	;volatile
 11963  000C22  6E34               	movwf	(??_echo+2)& (0+255),c
 11964  000C24  6A35               	clrf	(??_echo+3)& (0+255),c
 11965  000C26  5032               	movf	??_echo,w,c
 11966  000C28  1234               	iorwf	??_echo+2,f,c
 11967  000C2A  5033               	movf	??_echo+1,w,c
 11968  000C2C  1235               	iorwf	??_echo+3,f,c
 11969  000C2E  C034  F001         	movff	??_echo+2,___xxtofl@val
 11970  000C32  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 11971  000C36  0E00               	movlw	0
 11972  000C38  BE02               	btfsc	___xxtofl@val+1,7,c
 11973  000C3A  0EFF               	movlw	-1
 11974  000C3C  6E03               	movwf	___xxtofl@val+2,c
 11975  000C3E  6E04               	movwf	___xxtofl@val+3,c
 11976  000C40  0E01               	movlw	1
 11977  000C42  ECB3  F012         	call	___xxtofl
 11978  000C46  C001  F00F         	movff	?___xxtofl,___fldiv@b
 11979  000C4A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 11980  000C4E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 11981  000C52  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 11982  000C56  ECE0  F00B         	call	___fldiv	;wreg free
 11983  000C5A  C00F  F028         	movff	?___fldiv,___fltol@f1
 11984  000C5E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 11985  000C62  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 11986  000C66  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 11987  000C6A  ECD5  F014         	call	___fltol	;wreg free
 11988  000C6E  C028  F046         	movff	?___fltol,_a+6
 11989  000C72  C029  F047         	movff	?___fltol+1,_a+7
 11990  000C76                     i2l5091:
 11991                           
 11992                           ;main.c: 176:                 if (a[3]>=2 && a[3]<=200){
 11993  000C76  BE47               	btfsc	_a+7,7,c
 11994  000C78  0012               	return	
 11995  000C7A  5047               	movf	_a+7,w,c
 11996  000C7C  E104               	bnz	i2u534_40
 11997  000C7E  0E02               	movlw	2
 11998  000C80  5C46               	subwf	_a+6,w,c
 11999  000C82  A0D8               	btfss	status,0,c
 12000  000C84  0012               	return	
 12001  000C86                     i2u534_40:
 12002  000C86  BE47               	btfsc	_a+7,7,c
 12003  000C88  D006               	goto	i2u535_40
 12004  000C8A  5047               	movf	_a+7,w,c
 12005  000C8C  E15D               	bnz	i2l186
 12006  000C8E  0EC9               	movlw	201
 12007  000C90  5C46               	subwf	_a+6,w,c
 12008  000C92  B0D8               	btfsc	status,0,c
 12009  000C94  0012               	return	
 12010  000C96                     i2u535_40:
 12011                           
 12012                           ;main.c: 178:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 12013  000C96  044B               	decf	_sumf+3,w,c
 12014  000C98  B4D8               	btfsc	status,2,c
 12015  000C9A  D01B               	goto	i2l5107
 12016  000C9C  0101               	movlb	1	; () banked
 12017  000C9E  5180               	movf	(_dist_final+36)& (0+255),w,b
 12018  000CA0  1181               	iorwf	(_dist_final+37)& (0+255),w,b
 12019  000CA2  B4D8               	btfsc	status,2,c
 12020  000CA4  D016               	goto	i2l5107
 12021                           
 12022                           ; BSR set to: 1
 12023  000CA6  5182               	movf	(_dist_final+38)& (0+255),w,b
 12024  000CA8  1183               	iorwf	(_dist_final+39)& (0+255),w,b
 12025  000CAA  B4D8               	btfsc	status,2,c
 12026  000CAC  D012               	goto	i2l5107
 12027                           
 12028                           ; BSR set to: 1
 12029  000CAE  5184               	movf	(_dist_final+40)& (0+255),w,b
 12030  000CB0  1185               	iorwf	(_dist_final+41)& (0+255),w,b
 12031  000CB2  B4D8               	btfsc	status,2,c
 12032  000CB4  D00E               	goto	i2l5107
 12033                           
 12034                           ; BSR set to: 1
 12035                           ;main.c: 179:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 12036  000CB6  5182               	movf	(_dist_final+38)& (0+255),w,b
 12037  000CB8  2580               	addwf	(_dist_final+36)& (0+255),w,b
 12038  000CBA  6E32               	movwf	??_echo& (0+255),c
 12039  000CBC  5183               	movf	(_dist_final+39)& (0+255),w,b
 12040  000CBE  2181               	addwfc	(_dist_final+37)& (0+255),w,b
 12041  000CC0  6E33               	movwf	(??_echo+1)& (0+255),c
 12042  000CC2  5184               	movf	(_dist_final+40)& (0+255),w,b
 12043  000CC4  2432               	addwf	??_echo,w,c
 12044  000CC6  6E3E               	movwf	_sum+6,c
 12045  000CC8  5185               	movf	(_dist_final+41)& (0+255),w,b
 12046  000CCA  2033               	addwfc	??_echo+1,w,c
 12047  000CCC  6E3F               	movwf	_sum+7,c
 12048                           
 12049                           ; BSR set to: 1
 12050                           ;main.c: 180:             sumf[3] = 1;
 12051  000CCE  0E01               	movlw	1
 12052  000CD0  6E4B               	movwf	_sumf+3,c
 12053  000CD2                     i2l5107:
 12054                           
 12055                           ;main.c: 182:         if (sumf[3]){
 12056  000CD2  504B               	movf	_sumf+3,w,c
 12057  000CD4  B4D8               	btfsc	status,2,c
 12058  000CD6  D02B               	goto	i2l5113
 12059                           
 12060                           ;main.c: 183:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 12061  000CD8  90D8               	bcf	status,0,c
 12062  000CDA  3458               	rlcf	_meas,w,c	;volatile
 12063  000CDC  6ED9               	movwf	fsr2l,c
 12064  000CDE  3459               	rlcf	_meas+1,w,c	;volatile
 12065  000CE0  6EDA               	movwf	fsr2h,c
 12066  000CE2  0E80               	movlw	low (_dist_final+36)
 12067  000CE4  26D9               	addwf	fsr2l,f,c
 12068  000CE6  0E01               	movlw	high (_dist_final+36)
 12069  000CE8  22DA               	addwfc	fsr2h,f,c
 12070  000CEA  CFDE F032          	movff	postinc2,??_echo
 12071  000CEE  CFDD F033          	movff	postdec2,??_echo+1
 12072  000CF2  EE20  F03E         	lfsr	2,_sum+6
 12073  000CF6  CFDE F034          	movff	postinc2,??_echo+2
 12074  000CFA  CFDD F035          	movff	postdec2,??_echo+3
 12075  000CFE  5032               	movf	??_echo,w,c
 12076  000D00  5E34               	subwf	??_echo+2,f,c
 12077  000D02  5033               	movf	??_echo+1,w,c
 12078  000D04  5A35               	subwfb	??_echo+3,f,c
 12079  000D06  5046               	movf	_a+6,w,c
 12080  000D08  2434               	addwf	??_echo+2,w,c
 12081  000D0A  6E3E               	movwf	_sum+6,c
 12082  000D0C  5047               	movf	_a+7,w,c
 12083  000D0E  2035               	addwfc	??_echo+3,w,c
 12084  000D10  6E3F               	movwf	_sum+7,c
 12085                           
 12086                           ;main.c: 184:             dist_final[3][5] = (sum[3]/5);
 12087  000D12  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 12088  000D16  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 12089  000D1A  0E00               	movlw	0
 12090  000D1C  6E04               	movwf	i2___awdiv@divisor+1,c
 12091  000D1E  0E05               	movlw	5
 12092  000D20  6E03               	movwf	i2___awdiv@divisor,c
 12093  000D22  EC93  F016         	call	i2___awdiv	;wreg free
 12094  000D26  C001  F18A         	movff	?i2___awdiv,_dist_final+46
 12095  000D2A  C002  F18B         	movff	?i2___awdiv+1,_dist_final+47
 12096  000D2E                     i2l5113:
 12097                           
 12098                           ;main.c: 186:         dist_final[3][meas] = a[3];
 12099  000D2E  90D8               	bcf	status,0,c
 12100  000D30  3458               	rlcf	_meas,w,c	;volatile
 12101  000D32  6ED9               	movwf	fsr2l,c
 12102  000D34  3459               	rlcf	_meas+1,w,c	;volatile
 12103  000D36  6EDA               	movwf	fsr2h,c
 12104  000D38  0E80               	movlw	low (_dist_final+36)
 12105  000D3A  26D9               	addwf	fsr2l,f,c
 12106  000D3C  0E01               	movlw	high (_dist_final+36)
 12107  000D3E  22DA               	addwfc	fsr2h,f,c
 12108  000D40  C046  FFDE         	movff	_a+6,postinc2
 12109  000D44  C047  FFDD         	movff	_a+7,postdec2
 12110  000D48                     i2l186:
 12111  000D48  0012               	return		;funcret
 12112  000D4A                     __end_of_echo:
 12113                           	opt callstack 0
 12114                           
 12115 ;; *************** function i2___awdiv *****************
 12116 ;; Defined at:
 12117 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  dividend        2    0[COMRAM] int 
 12120 ;;  divisor         2    2[COMRAM] int 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  __awdiv         2    6[COMRAM] int 
 12123 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12124 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  2    0[COMRAM] int 
 12127 ;; Registers used:
 12128 ;;		wreg, status,2, status,0
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12137 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;Total ram usage:        8 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; This function calls:
 12141 ;;		Nothing
 12142 ;; This function is called by:
 12143 ;;		_echo
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           	psect	text57
 12148  002D26                     __ptext57:
 12149                           	opt callstack 0
 12150  002D26                     i2___awdiv:
 12151                           	opt callstack 14
 12152                           
 12153                           ;incstack = 0
 12154  002D26  0E00               	movlw	0
 12155  002D28  6E06               	movwf	i2___awdiv@sign,c
 12156  002D2A  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12157  002D2C  D006               	goto	i2l4943
 12158  002D2E  6C03               	negf	i2___awdiv@divisor,c
 12159  002D30  1E04               	comf	i2___awdiv@divisor+1,f,c
 12160  002D32  B0D8               	btfsc	status,0,c
 12161  002D34  2A04               	incf	i2___awdiv@divisor+1,f,c
 12162  002D36  0E01               	movlw	1
 12163  002D38  6E06               	movwf	i2___awdiv@sign,c
 12164  002D3A                     i2l4943:
 12165  002D3A  AE02               	btfss	i2___awdiv@dividend+1,7,c
 12166  002D3C  D006               	goto	i2l4949
 12167  002D3E  6C01               	negf	i2___awdiv@dividend,c
 12168  002D40  1E02               	comf	i2___awdiv@dividend+1,f,c
 12169  002D42  B0D8               	btfsc	status,0,c
 12170  002D44  2A02               	incf	i2___awdiv@dividend+1,f,c
 12171  002D46  0E01               	movlw	1
 12172  002D48  1A06               	xorwf	i2___awdiv@sign,f,c
 12173  002D4A                     i2l4949:
 12174  002D4A  0E00               	movlw	0
 12175  002D4C  6E08               	movwf	i2___awdiv@quotient+1,c
 12176  002D4E  0E00               	movlw	0
 12177  002D50  6E07               	movwf	i2___awdiv@quotient,c
 12178  002D52  5003               	movf	i2___awdiv@divisor,w,c
 12179  002D54  1004               	iorwf	i2___awdiv@divisor+1,w,c
 12180  002D56  B4D8               	btfsc	status,2,c
 12181  002D58  D01C               	goto	i2l4971
 12182  002D5A  0E01               	movlw	1
 12183  002D5C  6E05               	movwf	i2___awdiv@counter,c
 12184  002D5E  D004               	goto	i2l4957
 12185  002D60                     i2l4955:
 12186  002D60  90D8               	bcf	status,0,c
 12187  002D62  3603               	rlcf	i2___awdiv@divisor,f,c
 12188  002D64  3604               	rlcf	i2___awdiv@divisor+1,f,c
 12189  002D66  2A05               	incf	i2___awdiv@counter,f,c
 12190  002D68                     i2l4957:
 12191  002D68  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12192  002D6A  D7FA               	goto	i2l4955
 12193  002D6C                     i2u498_40:
 12194  002D6C  90D8               	bcf	status,0,c
 12195  002D6E  3607               	rlcf	i2___awdiv@quotient,f,c
 12196  002D70  3608               	rlcf	i2___awdiv@quotient+1,f,c
 12197  002D72  5003               	movf	i2___awdiv@divisor,w,c
 12198  002D74  5C01               	subwf	i2___awdiv@dividend,w,c
 12199  002D76  5004               	movf	i2___awdiv@divisor+1,w,c
 12200  002D78  5802               	subwfb	i2___awdiv@dividend+1,w,c
 12201  002D7A  A0D8               	btfss	status,0,c
 12202  002D7C  D005               	goto	i2l4967
 12203  002D7E  5003               	movf	i2___awdiv@divisor,w,c
 12204  002D80  5E01               	subwf	i2___awdiv@dividend,f,c
 12205  002D82  5004               	movf	i2___awdiv@divisor+1,w,c
 12206  002D84  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 12207  002D86  8007               	bsf	i2___awdiv@quotient,0,c
 12208  002D88                     i2l4967:
 12209  002D88  90D8               	bcf	status,0,c
 12210  002D8A  3204               	rrcf	i2___awdiv@divisor+1,f,c
 12211  002D8C  3203               	rrcf	i2___awdiv@divisor,f,c
 12212  002D8E  2E05               	decfsz	i2___awdiv@counter,f,c
 12213  002D90  D7ED               	goto	i2u498_40
 12214  002D92                     i2l4971:
 12215  002D92  5006               	movf	i2___awdiv@sign,w,c
 12216  002D94  B4D8               	btfsc	status,2,c
 12217  002D96  D004               	goto	i2l4975
 12218  002D98  6C07               	negf	i2___awdiv@quotient,c
 12219  002D9A  1E08               	comf	i2___awdiv@quotient+1,f,c
 12220  002D9C  B0D8               	btfsc	status,0,c
 12221  002D9E  2A08               	incf	i2___awdiv@quotient+1,f,c
 12222  002DA0                     i2l4975:
 12223  002DA0  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 12224  002DA4  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 12225  002DA8  0012               	return		;funcret
 12226  002DAA                     __end_ofi2___awdiv:
 12227                           	opt callstack 0
 12228                           
 12229 ;; *************** function ___xxtofl *****************
 12230 ;; Defined at:
 12231 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;  sign            1    wreg     unsigned char 
 12234 ;;  val             4    0[COMRAM] long 
 12235 ;; Auto vars:     Size  Location     Type
 12236 ;;  sign            1    8[COMRAM] unsigned char 
 12237 ;;  arg             4   10[COMRAM] unsigned long 
 12238 ;;  exp             1    9[COMRAM] unsigned char 
 12239 ;; Return value:  Size  Location     Type
 12240 ;;                  4    0[COMRAM] unsigned char 
 12241 ;; Registers used:
 12242 ;;		wreg, status,2, status,0
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12249 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12251 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;Total ram usage:       14 bytes
 12253 ;; Hardware stack levels used:    1
 12254 ;; This function calls:
 12255 ;;		Nothing
 12256 ;; This function is called by:
 12257 ;;		_echo
 12258 ;; This function uses a non-reentrant model
 12259 ;;
 12260                           
 12261                           	psect	text58
 12262  002566                     __ptext58:
 12263                           	opt callstack 0
 12264  002566                     ___xxtofl:
 12265                           	opt callstack 14
 12266                           
 12267                           ;incstack = 0
 12268                           ;___xxtofl@sign stored from wreg
 12269  002566  6E09               	movwf	___xxtofl@sign,c
 12270  002568  5009               	movf	___xxtofl@sign,w,c
 12271  00256A  A4D8               	btfss	status,2,c
 12272  00256C  AE04               	btfss	___xxtofl@val+3,7,c
 12273  00256E  D01A               	goto	i2l1335
 12274  002570  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12275  002574  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12276  002578  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12277  00257C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12278  002580  1E05               	comf	??___xxtofl,f,c
 12279  002582  1E06               	comf	??___xxtofl+1,f,c
 12280  002584  1E07               	comf	??___xxtofl+2,f,c
 12281  002586  1E08               	comf	??___xxtofl+3,f,c
 12282  002588  2A05               	incf	??___xxtofl,f,c
 12283  00258A  0E00               	movlw	0
 12284  00258C  2206               	addwfc	??___xxtofl+1,f,c
 12285  00258E  2207               	addwfc	??___xxtofl+2,f,c
 12286  002590  2208               	addwfc	??___xxtofl+3,f,c
 12287  002592  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12288  002596  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12289  00259A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12290  00259E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12291  0025A2  D008               	goto	i2l4895
 12292  0025A4                     i2l1335:
 12293  0025A4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12294  0025A8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12295  0025AC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12296  0025B0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12297  0025B4                     i2l4895:
 12298  0025B4  5001               	movf	___xxtofl@val,w,c
 12299  0025B6  1002               	iorwf	___xxtofl@val+1,w,c
 12300  0025B8  1003               	iorwf	___xxtofl@val+2,w,c
 12301  0025BA  1004               	iorwf	___xxtofl@val+3,w,c
 12302  0025BC  A4D8               	btfss	status,2,c
 12303  0025BE  D009               	goto	i2l4901
 12304  0025C0  0E00               	movlw	0
 12305  0025C2  6E01               	movwf	?___xxtofl,c
 12306  0025C4  0E00               	movlw	0
 12307  0025C6  6E02               	movwf	?___xxtofl+1,c
 12308  0025C8  0E00               	movlw	0
 12309  0025CA  6E03               	movwf	?___xxtofl+2,c
 12310  0025CC  0E00               	movlw	0
 12311  0025CE  6E04               	movwf	?___xxtofl+3,c
 12312  0025D0  0012               	return	
 12313  0025D2                     i2l4901:
 12314  0025D2  0E96               	movlw	150
 12315  0025D4  6E0A               	movwf	___xxtofl@exp,c
 12316  0025D6  D006               	goto	i2l4905
 12317  0025D8                     i2l4903:
 12318  0025D8  2A0A               	incf	___xxtofl@exp,f,c
 12319  0025DA  90D8               	bcf	status,0,c
 12320  0025DC  320E               	rrcf	___xxtofl@arg+3,f,c
 12321  0025DE  320D               	rrcf	___xxtofl@arg+2,f,c
 12322  0025E0  320C               	rrcf	___xxtofl@arg+1,f,c
 12323  0025E2  320B               	rrcf	___xxtofl@arg,f,c
 12324  0025E4                     i2l4905:
 12325  0025E4  0E00               	movlw	0
 12326  0025E6  140B               	andwf	___xxtofl@arg,w,c
 12327  0025E8  6E05               	movwf	??___xxtofl& (0+255),c
 12328  0025EA  0E00               	movlw	0
 12329  0025EC  140C               	andwf	___xxtofl@arg+1,w,c
 12330  0025EE  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 12331  0025F0  0E00               	movlw	0
 12332  0025F2  140D               	andwf	___xxtofl@arg+2,w,c
 12333  0025F4  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 12334  0025F6  0EFE               	movlw	254
 12335  0025F8  140E               	andwf	___xxtofl@arg+3,w,c
 12336  0025FA  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 12337  0025FC  5005               	movf	??___xxtofl,w,c
 12338  0025FE  1006               	iorwf	??___xxtofl+1,w,c
 12339  002600  1007               	iorwf	??___xxtofl+2,w,c
 12340  002602  1008               	iorwf	??___xxtofl+3,w,c
 12341  002604  B4D8               	btfsc	status,2,c
 12342  002606  D00D               	goto	i2l1342
 12343  002608  D7E7               	goto	i2l4903
 12344  00260A                     i2l4907:
 12345  00260A  2A0A               	incf	___xxtofl@exp,f,c
 12346  00260C  0E01               	movlw	1
 12347  00260E  260B               	addwf	___xxtofl@arg,f,c
 12348  002610  0E00               	movlw	0
 12349  002612  220C               	addwfc	___xxtofl@arg+1,f,c
 12350  002614  220D               	addwfc	___xxtofl@arg+2,f,c
 12351  002616  220E               	addwfc	___xxtofl@arg+3,f,c
 12352  002618  90D8               	bcf	status,0,c
 12353  00261A  320E               	rrcf	___xxtofl@arg+3,f,c
 12354  00261C  320D               	rrcf	___xxtofl@arg+2,f,c
 12355  00261E  320C               	rrcf	___xxtofl@arg+1,f,c
 12356  002620  320B               	rrcf	___xxtofl@arg,f,c
 12357  002622                     i2l1342:
 12358  002622  0E00               	movlw	0
 12359  002624  140B               	andwf	___xxtofl@arg,w,c
 12360  002626  6E05               	movwf	??___xxtofl& (0+255),c
 12361  002628  0E00               	movlw	0
 12362  00262A  140C               	andwf	___xxtofl@arg+1,w,c
 12363  00262C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 12364  00262E  0E00               	movlw	0
 12365  002630  140D               	andwf	___xxtofl@arg+2,w,c
 12366  002632  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 12367  002634  0EFF               	movlw	255
 12368  002636  140E               	andwf	___xxtofl@arg+3,w,c
 12369  002638  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 12370  00263A  5005               	movf	??___xxtofl,w,c
 12371  00263C  1006               	iorwf	??___xxtofl+1,w,c
 12372  00263E  1007               	iorwf	??___xxtofl+2,w,c
 12373  002640  1008               	iorwf	??___xxtofl+3,w,c
 12374  002642  B4D8               	btfsc	status,2,c
 12375  002644  D007               	goto	i2l4915
 12376  002646  D7E1               	goto	i2l4907
 12377  002648                     i2l4913:
 12378  002648  060A               	decf	___xxtofl@exp,f,c
 12379  00264A  90D8               	bcf	status,0,c
 12380  00264C  360B               	rlcf	___xxtofl@arg,f,c
 12381  00264E  360C               	rlcf	___xxtofl@arg+1,f,c
 12382  002650  360D               	rlcf	___xxtofl@arg+2,f,c
 12383  002652  360E               	rlcf	___xxtofl@arg+3,f,c
 12384  002654                     i2l4915:
 12385  002654  BE0D               	btfsc	___xxtofl@arg+2,7,c
 12386  002656  D003               	goto	i2u491_40
 12387  002658  0E02               	movlw	2
 12388  00265A  600A               	cpfslt	___xxtofl@exp,c
 12389  00265C  D7F5               	goto	i2l4913
 12390  00265E                     i2u491_40:
 12391  00265E  A00A               	btfss	___xxtofl@exp,0,c
 12392  002660  9E0D               	bcf	___xxtofl@arg+2,7,c
 12393  002662  90D8               	bcf	status,0,c
 12394  002664  320A               	rrcf	___xxtofl@exp,f,c
 12395  002666  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12396  00266A  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 12397  00266C  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 12398  00266E  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 12399  002670  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12400  002674  6A07               	clrf	??___xxtofl+2,c
 12401  002676  6A06               	clrf	??___xxtofl+1,c
 12402  002678  6A05               	clrf	??___xxtofl,c
 12403  00267A  5005               	movf	??___xxtofl,w,c
 12404  00267C  120B               	iorwf	___xxtofl@arg,f,c
 12405  00267E  5006               	movf	??___xxtofl+1,w,c
 12406  002680  120C               	iorwf	___xxtofl@arg+1,f,c
 12407  002682  5007               	movf	??___xxtofl+2,w,c
 12408  002684  120D               	iorwf	___xxtofl@arg+2,f,c
 12409  002686  5008               	movf	??___xxtofl+3,w,c
 12410  002688  120E               	iorwf	___xxtofl@arg+3,f,c
 12411  00268A  5009               	movf	___xxtofl@sign,w,c
 12412  00268C  A4D8               	btfss	status,2,c
 12413  00268E  AE04               	btfss	___xxtofl@val+3,7,c
 12414  002690  D001               	goto	i2l4931
 12415  002692  8E0E               	bsf	___xxtofl@arg+3,7,c
 12416  002694                     i2l4931:
 12417  002694  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12418  002698  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12419  00269C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12420  0026A0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12421  0026A4  0012               	return		;funcret
 12422  0026A6                     __end_of___xxtofl:
 12423                           	opt callstack 0
 12424                           
 12425 ;; *************** function ___fltol *****************
 12426 ;; Defined at:
 12427 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  f1              4   39[COMRAM] unsigned char 
 12430 ;; Auto vars:     Size  Location     Type
 12431 ;;  exp1            1   48[COMRAM] unsigned char 
 12432 ;;  sign1           1   47[COMRAM] unsigned char 
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  4   39[COMRAM] long 
 12435 ;; Registers used:
 12436 ;;		wreg, status,2, status,0
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12444 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12445 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12446 ;;Total ram usage:       10 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; This function calls:
 12449 ;;		Nothing
 12450 ;; This function is called by:
 12451 ;;		_echo
 12452 ;; This function uses a non-reentrant model
 12453 ;;
 12454                           
 12455                           	psect	text59
 12456  0029AA                     __ptext59:
 12457                           	opt callstack 0
 12458  0029AA                     ___fltol:
 12459                           	opt callstack 14
 12460                           
 12461                           ;incstack = 0
 12462  0029AA  342A               	rlcf	___fltol@f1+2,w,c
 12463  0029AC  342B               	rlcf	___fltol@f1+3,w,c
 12464  0029AE  6E31               	movwf	___fltol@exp1,c
 12465  0029B0  5031               	movf	___fltol@exp1,w,c
 12466  0029B2  A4D8               	btfss	status,2,c
 12467  0029B4  D009               	goto	i2l4835
 12468  0029B6                     i2u475_40:
 12469  0029B6  0E00               	movlw	0
 12470  0029B8  6E28               	movwf	?___fltol,c
 12471  0029BA  0E00               	movlw	0
 12472  0029BC  6E29               	movwf	?___fltol+1,c
 12473  0029BE  0E00               	movlw	0
 12474  0029C0  6E2A               	movwf	?___fltol+2,c
 12475  0029C2  0E00               	movlw	0
 12476  0029C4  6E2B               	movwf	?___fltol+3,c
 12477  0029C6  0012               	return	
 12478  0029C8                     i2l4835:
 12479  0029C8  C028  F02C         	movff	___fltol@f1,??___fltol
 12480  0029CC  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 12481  0029D0  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 12482  0029D4  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 12483  0029D8  0E20               	movlw	32
 12484  0029DA  D005               	goto	i2u476_40
 12485  0029DC                     i2u476_45:
 12486  0029DC  90D8               	bcf	status,0,c
 12487  0029DE  322F               	rrcf	??___fltol+3,f,c
 12488  0029E0  322E               	rrcf	??___fltol+2,f,c
 12489  0029E2  322D               	rrcf	??___fltol+1,f,c
 12490  0029E4  322C               	rrcf	??___fltol,f,c
 12491  0029E6                     i2u476_40:
 12492  0029E6  2EE8               	decfsz	wreg,f,c
 12493  0029E8  D7F9               	goto	i2u476_45
 12494  0029EA  502C               	movf	??___fltol,w,c
 12495  0029EC  6E30               	movwf	___fltol@sign1,c
 12496  0029EE  8E2A               	bsf	___fltol@f1+2,7,c
 12497  0029F0  0EFF               	movlw	255
 12498  0029F2  1628               	andwf	___fltol@f1,f,c
 12499  0029F4  0EFF               	movlw	255
 12500  0029F6  1629               	andwf	___fltol@f1+1,f,c
 12501  0029F8  0EFF               	movlw	255
 12502  0029FA  162A               	andwf	___fltol@f1+2,f,c
 12503  0029FC  0E00               	movlw	0
 12504  0029FE  162B               	andwf	___fltol@f1+3,f,c
 12505  002A00  0E96               	movlw	150
 12506  002A02  5E31               	subwf	___fltol@exp1,f,c
 12507  002A04  AE31               	btfss	___fltol@exp1,7,c
 12508  002A06  D00D               	goto	i2l4855
 12509  002A08  5031               	movf	___fltol@exp1,w,c
 12510  002A0A  0A80               	xorlw	128
 12511  002A0C  0F97               	addlw	151
 12512  002A0E  A0D8               	btfss	status,0,c
 12513  002A10  D7D2               	goto	i2u475_40
 12514  002A12                     i2l4851:
 12515  002A12  90D8               	bcf	status,0,c
 12516  002A14  322B               	rrcf	___fltol@f1+3,f,c
 12517  002A16  322A               	rrcf	___fltol@f1+2,f,c
 12518  002A18  3229               	rrcf	___fltol@f1+1,f,c
 12519  002A1A  3228               	rrcf	___fltol@f1,f,c
 12520  002A1C  3E31               	incfsz	___fltol@exp1,f,c
 12521  002A1E  D7F9               	goto	i2l4851
 12522  002A20  D00D               	goto	i2u480_40
 12523  002A22                     i2l4855:
 12524  002A22  0E1F               	movlw	31
 12525  002A24  6431               	cpfsgt	___fltol@exp1,c
 12526  002A26  D007               	goto	i2l4863
 12527  002A28  D7C6               	goto	i2u475_40
 12528  002A2A                     i2l4861:
 12529  002A2A  90D8               	bcf	status,0,c
 12530  002A2C  3628               	rlcf	___fltol@f1,f,c
 12531  002A2E  3629               	rlcf	___fltol@f1+1,f,c
 12532  002A30  362A               	rlcf	___fltol@f1+2,f,c
 12533  002A32  362B               	rlcf	___fltol@f1+3,f,c
 12534  002A34  0631               	decf	___fltol@exp1,f,c
 12535  002A36                     i2l4863:
 12536  002A36  5031               	movf	___fltol@exp1,w,c
 12537  002A38  A4D8               	btfss	status,2,c
 12538  002A3A  D7F7               	goto	i2l4861
 12539  002A3C                     i2u480_40:
 12540  002A3C  5030               	movf	___fltol@sign1,w,c
 12541  002A3E  B4D8               	btfsc	status,2,c
 12542  002A40  D008               	goto	i2l4869
 12543  002A42  1E2B               	comf	___fltol@f1+3,f,c
 12544  002A44  1E2A               	comf	___fltol@f1+2,f,c
 12545  002A46  1E29               	comf	___fltol@f1+1,f,c
 12546  002A48  6C28               	negf	___fltol@f1,c
 12547  002A4A  0E00               	movlw	0
 12548  002A4C  2229               	addwfc	___fltol@f1+1,f,c
 12549  002A4E  222A               	addwfc	___fltol@f1+2,f,c
 12550  002A50  222B               	addwfc	___fltol@f1+3,f,c
 12551  002A52                     i2l4869:
 12552  002A52  C028  F028         	movff	___fltol@f1,?___fltol
 12553  002A56  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 12554  002A5A  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 12555  002A5E  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 12556  002A62  0012               	return		;funcret
 12557  002A64                     __end_of___fltol:
 12558                           	opt callstack 0
 12559                           
 12560 ;; *************** function ___fldiv *****************
 12561 ;; Defined at:
 12562 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 12563 ;; Parameters:    Size  Location     Type
 12564 ;;  b               4   14[COMRAM] long 
 12565 ;;  a               4   18[COMRAM] long 
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;  grs             4   33[COMRAM] unsigned long 
 12568 ;;  rem             4   26[COMRAM] unsigned long 
 12569 ;;  new_exp         2   31[COMRAM] short 
 12570 ;;  aexp            1   38[COMRAM] unsigned char 
 12571 ;;  bexp            1   37[COMRAM] unsigned char 
 12572 ;;  sign            1   30[COMRAM] unsigned char 
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  4   14[COMRAM] unsigned char 
 12575 ;; Registers used:
 12576 ;;		wreg, status,2, status,0
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12582 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12583 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12586 ;;Total ram usage:       25 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; This function calls:
 12589 ;;		Nothing
 12590 ;; This function is called by:
 12591 ;;		_echo
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           	psect	text60
 12596  0017C0                     __ptext60:
 12597                           	opt callstack 0
 12598  0017C0                     ___fldiv:
 12599                           	opt callstack 14
 12600                           
 12601                           ;incstack = 0
 12602  0017C0  5012               	movf	___fldiv@b+3,w,c
 12603  0017C2  0B80               	andlw	128
 12604  0017C4  6E1F               	movwf	___fldiv@sign,c
 12605  0017C6  5012               	movf	___fldiv@b+3,w,c
 12606  0017C8  2412               	addwf	___fldiv@b+3,w,c
 12607  0017CA  6E26               	movwf	___fldiv@bexp,c
 12608  0017CC  BE11               	btfsc	___fldiv@b+2,7,c
 12609  0017CE  8026               	bsf	___fldiv@bexp,0,c
 12610  0017D0  5026               	movf	___fldiv@bexp,w,c
 12611  0017D2  B4D8               	btfsc	status,2,c
 12612  0017D4  D00D               	goto	i2l4663
 12613  0017D6  2826               	incf	___fldiv@bexp,w,c
 12614  0017D8  A4D8               	btfss	status,2,c
 12615  0017DA  D008               	goto	i2l4659
 12616  0017DC  0E00               	movlw	0
 12617  0017DE  6E0F               	movwf	___fldiv@b,c
 12618  0017E0  0E00               	movlw	0
 12619  0017E2  6E10               	movwf	___fldiv@b+1,c
 12620  0017E4  0E00               	movlw	0
 12621  0017E6  6E11               	movwf	___fldiv@b+2,c
 12622  0017E8  0E00               	movlw	0
 12623  0017EA  6E12               	movwf	___fldiv@b+3,c
 12624  0017EC                     i2l4659:
 12625  0017EC  8E11               	bsf	___fldiv@b+2,7,c
 12626  0017EE  D006               	goto	L7
 12627  0017F0                     i2l4663:
 12628  0017F0  0E00               	movlw	0
 12629  0017F2  6E0F               	movwf	___fldiv@b,c
 12630  0017F4  0E00               	movlw	0
 12631  0017F6  6E10               	movwf	___fldiv@b+1,c
 12632  0017F8  0E00               	movlw	0
 12633  0017FA  6E11               	movwf	___fldiv@b+2,c
 12634  0017FC                     L7:
 12635  0017FC  0E00               	movlw	0
 12636  0017FE  6E12               	movwf	___fldiv@b+3,c
 12637  001800  5016               	movf	___fldiv@a+3,w,c
 12638  001802  0B80               	andlw	128
 12639  001804  1A1F               	xorwf	___fldiv@sign,f,c
 12640  001806  5016               	movf	___fldiv@a+3,w,c
 12641  001808  2416               	addwf	___fldiv@a+3,w,c
 12642  00180A  6E27               	movwf	___fldiv@aexp,c
 12643  00180C  BE15               	btfsc	___fldiv@a+2,7,c
 12644  00180E  8027               	bsf	___fldiv@aexp,0,c
 12645  001810  5027               	movf	___fldiv@aexp,w,c
 12646  001812  B4D8               	btfsc	status,2,c
 12647  001814  D00D               	goto	i2l4683
 12648  001816  2827               	incf	___fldiv@aexp,w,c
 12649  001818  A4D8               	btfss	status,2,c
 12650  00181A  D008               	goto	i2l4679
 12651  00181C  0E00               	movlw	0
 12652  00181E  6E13               	movwf	___fldiv@a,c
 12653  001820  0E00               	movlw	0
 12654  001822  6E14               	movwf	___fldiv@a+1,c
 12655  001824  0E00               	movlw	0
 12656  001826  6E15               	movwf	___fldiv@a+2,c
 12657  001828  0E00               	movlw	0
 12658  00182A  6E16               	movwf	___fldiv@a+3,c
 12659  00182C                     i2l4679:
 12660  00182C  8E15               	bsf	___fldiv@a+2,7,c
 12661  00182E  D006               	goto	L8
 12662  001830                     i2l4683:
 12663  001830  0E00               	movlw	0
 12664  001832  6E13               	movwf	___fldiv@a,c
 12665  001834  0E00               	movlw	0
 12666  001836  6E14               	movwf	___fldiv@a+1,c
 12667  001838  0E00               	movlw	0
 12668  00183A  6E15               	movwf	___fldiv@a+2,c
 12669  00183C                     L8:
 12670  00183C  0E00               	movlw	0
 12671  00183E  6E16               	movwf	___fldiv@a+3,c
 12672  001840  5013               	movf	___fldiv@a,w,c
 12673  001842  1014               	iorwf	___fldiv@a+1,w,c
 12674  001844  1015               	iorwf	___fldiv@a+2,w,c
 12675  001846  1016               	iorwf	___fldiv@a+3,w,c
 12676  001848  A4D8               	btfss	status,2,c
 12677  00184A  D017               	goto	i2l4697
 12678  00184C  0E00               	movlw	0
 12679  00184E  6E0F               	movwf	___fldiv@b,c
 12680  001850  0E00               	movlw	0
 12681  001852  6E10               	movwf	___fldiv@b+1,c
 12682  001854  0E00               	movlw	0
 12683  001856  6E11               	movwf	___fldiv@b+2,c
 12684  001858  0E00               	movlw	0
 12685  00185A  6E12               	movwf	___fldiv@b+3,c
 12686  00185C  0E80               	movlw	128
 12687  00185E  1211               	iorwf	___fldiv@b+2,f,c
 12688  001860  0E7F               	movlw	127
 12689  001862  1212               	iorwf	___fldiv@b+3,f,c
 12690  001864                     i2l4691:
 12691  001864  501F               	movf	___fldiv@sign,w,c
 12692  001866  1212               	iorwf	___fldiv@b+3,f,c
 12693  001868  C00F  F00F         	movff	___fldiv@b,?___fldiv
 12694  00186C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 12695  001870  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 12696  001874  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 12697  001878  0012               	return	
 12698  00187A                     i2l4697:
 12699  00187A  5026               	movf	___fldiv@bexp,w,c
 12700  00187C  A4D8               	btfss	status,2,c
 12701  00187E  D009               	goto	i2l4705
 12702  001880  0E00               	movlw	0
 12703  001882  6E0F               	movwf	?___fldiv,c
 12704  001884  0E00               	movlw	0
 12705  001886  6E10               	movwf	?___fldiv+1,c
 12706  001888  0E00               	movlw	0
 12707  00188A  6E11               	movwf	?___fldiv+2,c
 12708  00188C  0E00               	movlw	0
 12709  00188E  6E12               	movwf	?___fldiv+3,c
 12710  001890  0012               	return	
 12711  001892                     i2l4705:
 12712  001892  5027               	movf	___fldiv@aexp,w,c
 12713  001894  C026  F017         	movff	___fldiv@bexp,??___fldiv
 12714  001898  6A18               	clrf	(??___fldiv+1)& (0+255),c
 12715  00189A  5E17               	subwf	??___fldiv,f,c
 12716  00189C  0E00               	movlw	0
 12717  00189E  5A18               	subwfb	??___fldiv+1,f,c
 12718  0018A0  0E7F               	movlw	127
 12719  0018A2  2417               	addwf	??___fldiv,w,c
 12720  0018A4  6E20               	movwf	___fldiv@new_exp,c
 12721  0018A6  0E00               	movlw	0
 12722  0018A8  2018               	addwfc	??___fldiv+1,w,c
 12723  0018AA  6E21               	movwf	___fldiv@new_exp+1,c
 12724  0018AC  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 12725  0018B0  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 12726  0018B4  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 12727  0018B8  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 12728  0018BC  0E00               	movlw	0
 12729  0018BE  6E0F               	movwf	___fldiv@b,c
 12730  0018C0  0E00               	movlw	0
 12731  0018C2  6E10               	movwf	___fldiv@b+1,c
 12732  0018C4  0E00               	movlw	0
 12733  0018C6  6E11               	movwf	___fldiv@b+2,c
 12734  0018C8  0E00               	movlw	0
 12735  0018CA  6E12               	movwf	___fldiv@b+3,c
 12736  0018CC  0E00               	movlw	0
 12737  0018CE  6E22               	movwf	___fldiv@grs,c
 12738  0018D0  0E00               	movlw	0
 12739  0018D2  6E23               	movwf	___fldiv@grs+1,c
 12740  0018D4  0E00               	movlw	0
 12741  0018D6  6E24               	movwf	___fldiv@grs+2,c
 12742  0018D8  0E00               	movlw	0
 12743  0018DA  6E25               	movwf	___fldiv@grs+3,c
 12744  0018DC  0E00               	movlw	0
 12745  0018DE  6E27               	movwf	___fldiv@aexp,c
 12746  0018E0  D028               	goto	i2l1264
 12747  0018E2                     i2l4715:
 12748  0018E2  5027               	movf	___fldiv@aexp,w,c
 12749  0018E4  B4D8               	btfsc	status,2,c
 12750  0018E6  D011               	goto	i2l4723
 12751  0018E8  90D8               	bcf	status,0,c
 12752  0018EA  361B               	rlcf	___fldiv@rem,f,c
 12753  0018EC  361C               	rlcf	___fldiv@rem+1,f,c
 12754  0018EE  361D               	rlcf	___fldiv@rem+2,f,c
 12755  0018F0  361E               	rlcf	___fldiv@rem+3,f,c
 12756  0018F2  90D8               	bcf	status,0,c
 12757  0018F4  360F               	rlcf	___fldiv@b,f,c
 12758  0018F6  3610               	rlcf	___fldiv@b+1,f,c
 12759  0018F8  3611               	rlcf	___fldiv@b+2,f,c
 12760  0018FA  3612               	rlcf	___fldiv@b+3,f,c
 12761  0018FC  BE25               	btfsc	___fldiv@grs+3,7,c
 12762  0018FE  800F               	bsf	___fldiv@b,0,c
 12763  001900  90D8               	bcf	status,0,c
 12764  001902  3622               	rlcf	___fldiv@grs,f,c
 12765  001904  3623               	rlcf	___fldiv@grs+1,f,c
 12766  001906  3624               	rlcf	___fldiv@grs+2,f,c
 12767  001908  3625               	rlcf	___fldiv@grs+3,f,c
 12768  00190A                     i2l4723:
 12769  00190A  5013               	movf	___fldiv@a,w,c
 12770  00190C  5C1B               	subwf	___fldiv@rem,w,c
 12771  00190E  5014               	movf	___fldiv@a+1,w,c
 12772  001910  581C               	subwfb	___fldiv@rem+1,w,c
 12773  001912  5015               	movf	___fldiv@a+2,w,c
 12774  001914  581D               	subwfb	___fldiv@rem+2,w,c
 12775  001916  5016               	movf	___fldiv@a+3,w,c
 12776  001918  581E               	subwfb	___fldiv@rem+3,w,c
 12777  00191A  A0D8               	btfss	status,0,c
 12778  00191C  D009               	goto	i2l4729
 12779  00191E  8C25               	bsf	___fldiv@grs+3,6,c
 12780  001920  5013               	movf	___fldiv@a,w,c
 12781  001922  5E1B               	subwf	___fldiv@rem,f,c
 12782  001924  5014               	movf	___fldiv@a+1,w,c
 12783  001926  5A1C               	subwfb	___fldiv@rem+1,f,c
 12784  001928  5015               	movf	___fldiv@a+2,w,c
 12785  00192A  5A1D               	subwfb	___fldiv@rem+2,f,c
 12786  00192C  5016               	movf	___fldiv@a+3,w,c
 12787  00192E  5A1E               	subwfb	___fldiv@rem+3,f,c
 12788  001930                     i2l4729:
 12789  001930  2A27               	incf	___fldiv@aexp,f,c
 12790  001932                     i2l1264:
 12791  001932  0E19               	movlw	25
 12792  001934  6427               	cpfsgt	___fldiv@aexp,c
 12793  001936  D7D5               	goto	i2l4715
 12794  001938  501B               	movf	___fldiv@rem,w,c
 12795  00193A  101C               	iorwf	___fldiv@rem+1,w,c
 12796  00193C  101D               	iorwf	___fldiv@rem+2,w,c
 12797  00193E  101E               	iorwf	___fldiv@rem+3,w,c
 12798  001940  B4D8               	btfsc	status,2,c
 12799  001942  D011               	goto	i2l4741
 12800  001944  8022               	bsf	___fldiv@grs,0,c
 12801  001946  D00F               	goto	i2l4741
 12802  001948                     i2l4735:
 12803  001948  90D8               	bcf	status,0,c
 12804  00194A  360F               	rlcf	___fldiv@b,f,c
 12805  00194C  3610               	rlcf	___fldiv@b+1,f,c
 12806  00194E  3611               	rlcf	___fldiv@b+2,f,c
 12807  001950  3612               	rlcf	___fldiv@b+3,f,c
 12808  001952  BE25               	btfsc	___fldiv@grs+3,7,c
 12809  001954  800F               	bsf	___fldiv@b,0,c
 12810  001956  90D8               	bcf	status,0,c
 12811  001958  3622               	rlcf	___fldiv@grs,f,c
 12812  00195A  3623               	rlcf	___fldiv@grs+1,f,c
 12813  00195C  3624               	rlcf	___fldiv@grs+2,f,c
 12814  00195E  3625               	rlcf	___fldiv@grs+3,f,c
 12815  001960  0620               	decf	___fldiv@new_exp,f,c
 12816  001962  A0D8               	btfss	status,0,c
 12817  001964  0621               	decf	___fldiv@new_exp+1,f,c
 12818  001966                     i2l4741:
 12819  001966  AE11               	btfss	___fldiv@b+2,7,c
 12820  001968  D7EF               	goto	i2l4735
 12821  00196A  0E00               	movlw	0
 12822  00196C  6E27               	movwf	___fldiv@aexp,c
 12823  00196E  AE25               	btfss	___fldiv@grs+3,7,c
 12824  001970  D017               	goto	i2l1275
 12825  001972  0EFF               	movlw	255
 12826  001974  1422               	andwf	___fldiv@grs,w,c
 12827  001976  6E17               	movwf	??___fldiv& (0+255),c
 12828  001978  0EFF               	movlw	255
 12829  00197A  1423               	andwf	___fldiv@grs+1,w,c
 12830  00197C  6E18               	movwf	(??___fldiv+1)& (0+255),c
 12831  00197E  0EFF               	movlw	255
 12832  001980  1424               	andwf	___fldiv@grs+2,w,c
 12833  001982  6E19               	movwf	(??___fldiv+2)& (0+255),c
 12834  001984  0E7F               	movlw	127
 12835  001986  1425               	andwf	___fldiv@grs+3,w,c
 12836  001988  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 12837  00198A  5017               	movf	??___fldiv,w,c
 12838  00198C  1018               	iorwf	??___fldiv+1,w,c
 12839  00198E  1019               	iorwf	??___fldiv+2,w,c
 12840  001990  101A               	iorwf	??___fldiv+3,w,c
 12841  001992  B4D8               	btfsc	status,2,c
 12842  001994  D003               	goto	i2l1276
 12843  001996                     i2u462_40:
 12844  001996  0E01               	movlw	1
 12845  001998  6E27               	movwf	___fldiv@aexp,c
 12846  00199A  D002               	goto	i2l1275
 12847  00199C                     i2l1276:
 12848  00199C  B00F               	btfsc	___fldiv@b,0,c
 12849  00199E  D7FB               	goto	i2u462_40
 12850  0019A0                     i2l1275:
 12851  0019A0  5027               	movf	___fldiv@aexp,w,c
 12852  0019A2  B4D8               	btfsc	status,2,c
 12853  0019A4  D01F               	goto	i2l4761
 12854  0019A6  0E01               	movlw	1
 12855  0019A8  260F               	addwf	___fldiv@b,f,c
 12856  0019AA  0E00               	movlw	0
 12857  0019AC  2210               	addwfc	___fldiv@b+1,f,c
 12858  0019AE  2211               	addwfc	___fldiv@b+2,f,c
 12859  0019B0  2212               	addwfc	___fldiv@b+3,f,c
 12860  0019B2  A012               	btfss	___fldiv@b+3,0,c
 12861  0019B4  D017               	goto	i2l4761
 12862  0019B6  C00F  F017         	movff	___fldiv@b,??___fldiv
 12863  0019BA  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 12864  0019BE  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 12865  0019C2  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 12866  0019C6  341A               	rlcf	??___fldiv+3,w,c
 12867  0019C8  321A               	rrcf	??___fldiv+3,f,c
 12868  0019CA  3219               	rrcf	??___fldiv+2,f,c
 12869  0019CC  3218               	rrcf	??___fldiv+1,f,c
 12870  0019CE  3217               	rrcf	??___fldiv,f,c
 12871  0019D0  C017  F00F         	movff	??___fldiv,___fldiv@b
 12872  0019D4  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 12873  0019D8  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 12874  0019DC  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 12875  0019E0  4A20               	infsnz	___fldiv@new_exp,f,c
 12876  0019E2  2A21               	incf	___fldiv@new_exp+1,f,c
 12877  0019E4                     i2l4761:
 12878  0019E4  BE21               	btfsc	___fldiv@new_exp+1,7,c
 12879  0019E6  D010               	goto	i2l4765
 12880  0019E8  5021               	movf	___fldiv@new_exp+1,w,c
 12881  0019EA  E103               	bnz	i2u466_40
 12882  0019EC  2820               	incf	___fldiv@new_exp,w,c
 12883  0019EE  A0D8               	btfss	status,0,c
 12884  0019F0  D00B               	goto	i2l4765
 12885  0019F2                     i2u466_40:
 12886  0019F2  0E00               	movlw	0
 12887  0019F4  6E21               	movwf	___fldiv@new_exp+1,c
 12888  0019F6  6820               	setf	___fldiv@new_exp,c
 12889  0019F8  0E00               	movlw	0
 12890  0019FA  6E0F               	movwf	___fldiv@b,c
 12891  0019FC  0E00               	movlw	0
 12892  0019FE  6E10               	movwf	___fldiv@b+1,c
 12893  001A00  0E00               	movlw	0
 12894  001A02  6E11               	movwf	___fldiv@b+2,c
 12895  001A04  0E00               	movlw	0
 12896  001A06  6E12               	movwf	___fldiv@b+3,c
 12897  001A08                     i2l4765:
 12898  001A08  BE21               	btfsc	___fldiv@new_exp+1,7,c
 12899  001A0A  D005               	goto	i2u467_40
 12900  001A0C  5021               	movf	___fldiv@new_exp+1,w,c
 12901  001A0E  E111               	bnz	i2l4769
 12902  001A10  0420               	decf	___fldiv@new_exp,w,c
 12903  001A12  B0D8               	btfsc	status,0,c
 12904  001A14  D00E               	goto	i2l4769
 12905  001A16                     i2u467_40:
 12906  001A16  0E00               	movlw	0
 12907  001A18  6E21               	movwf	___fldiv@new_exp+1,c
 12908  001A1A  0E00               	movlw	0
 12909  001A1C  6E20               	movwf	___fldiv@new_exp,c
 12910  001A1E  0E00               	movlw	0
 12911  001A20  6E0F               	movwf	___fldiv@b,c
 12912  001A22  0E00               	movlw	0
 12913  001A24  6E10               	movwf	___fldiv@b+1,c
 12914  001A26  0E00               	movlw	0
 12915  001A28  6E11               	movwf	___fldiv@b+2,c
 12916  001A2A  0E00               	movlw	0
 12917  001A2C  6E12               	movwf	___fldiv@b+3,c
 12918  001A2E  0E00               	movlw	0
 12919  001A30  6E1F               	movwf	___fldiv@sign,c
 12920  001A32                     i2l4769:
 12921  001A32  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 12922  001A36  A026               	btfss	___fldiv@bexp,0,c
 12923  001A38  D002               	goto	i2l4775
 12924  001A3A  8E11               	bsf	___fldiv@b+2,7,c
 12925  001A3C  D001               	goto	i2l4777
 12926  001A3E                     i2l4775:
 12927  001A3E  9E11               	bcf	___fldiv@b+2,7,c
 12928  001A40                     i2l4777:
 12929  001A40  90D8               	bcf	status,0,c
 12930  001A42  3026               	rrcf	___fldiv@bexp,w,c
 12931  001A44  6E12               	movwf	___fldiv@b+3,c
 12932  001A46  D70E               	goto	i2l4691
 12933  001A48                     __end_of___fldiv:
 12934                           	opt callstack 0
 12935                           
 12936                           	psect	rparam
 12937  0000                     
 12938                           	psect	temp
 12939  00006E                     btemp:
 12940                           	opt callstack 0
 12941  00006E                     	ds	1
 12942  0000                     int$flags	set	btemp
 12943  0000                     wtemp8	set	btemp+1
 12944  0000                     ttemp5	set	btemp+1
 12945  0000                     ttemp6	set	btemp+4
 12946  0000                     ttemp7	set	btemp+8
 12947                           tosu	equ	0xFFF
 12948                           tosh	equ	0xFFE
 12949                           tosl	equ	0xFFD
 12950                           stkptr	equ	0xFFC
 12951                           pclatu	equ	0xFFB
 12952                           pclath	equ	0xFFA
 12953                           pcl	equ	0xFF9
 12954                           tblptru	equ	0xFF8
 12955                           tblptrh	equ	0xFF7
 12956                           tblptrl	equ	0xFF6
 12957                           tablat	equ	0xFF5
 12958                           prodh	equ	0xFF4
 12959                           prodl	equ	0xFF3
 12960                           indf0	equ	0xFEF
 12961                           postinc0	equ	0xFEE
 12962                           postdec0	equ	0xFED
 12963                           preinc0	equ	0xFEC
 12964                           plusw0	equ	0xFEB
 12965                           fsr0h	equ	0xFEA
 12966                           fsr0l	equ	0xFE9
 12967                           wreg	equ	0xFE8
 12968                           indf1	equ	0xFE7
 12969                           postinc1	equ	0xFE6
 12970                           postdec1	equ	0xFE5
 12971                           preinc1	equ	0xFE4
 12972                           plusw1	equ	0xFE3
 12973                           fsr1h	equ	0xFE2
 12974                           fsr1l	equ	0xFE1
 12975                           bsr	equ	0xFE0
 12976                           indf2	equ	0xFDF
 12977                           postinc2	equ	0xFDE
 12978                           postdec2	equ	0xFDD
 12979                           preinc2	equ	0xFDC
 12980                           plusw2	equ	0xFDB
 12981                           fsr2h	equ	0xFDA
 12982                           fsr2l	equ	0xFD9
 12983                           status	equ	0xFD8


Data Sizes:
    Strings     433
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    125     128
    BANK1           256     92     158
    BANK2           256    100     220
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_48(CODE[5]), STR_47(CODE[10]), STR_46(CODE[10]), STR_45(CODE[10]), 
		 -> STR_44(CODE[11]), STR_43(CODE[11]), STR_42(CODE[12]), STR_41(CODE[8]), 
		 -> STR_40(CODE[8]), STR_39(CODE[17]), STR_38(CODE[15]), STR_37(CODE[15]), 
		 -> STR_36(CODE[12]), STR_35(CODE[17]), STR_34(CODE[12]), STR_33(CODE[15]), 
		 -> STR_32(CODE[18]), STR_31(CODE[17]), STR_30(CODE[12]), STR_29(CODE[15]), 
		 -> STR_28(CODE[18]), STR_27(CODE[17]), STR_26(CODE[14]), STR_25(CODE[14]), 
		 -> STR_24(CODE[17]), STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[16]), 
		 -> STR_20(CODE[3]), STR_19(CODE[9]), STR_18(CODE[17]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[12]), STR_14(CODE[10]), STR_13(CODE[15]), 
		 -> STR_12(CODE[12]), STR_11(CODE[10]), STR_10(CODE[16]), STR_9(CODE[3]), 
		 -> STR_8(CODE[10]), STR_7(CODE[17]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[10]), STR_3(CODE[16]), STR_2(CODE[10]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1557_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_48(CODE[5]), STR_47(CODE[10]), STR_46(CODE[10]), STR_45(CODE[10]), 
		 -> STR_44(CODE[11]), STR_43(CODE[11]), STR_42(CODE[12]), STR_41(CODE[8]), 
		 -> STR_40(CODE[8]), STR_39(CODE[17]), STR_38(CODE[15]), STR_37(CODE[15]), 
		 -> STR_36(CODE[12]), STR_35(CODE[17]), STR_34(CODE[12]), STR_33(CODE[15]), 
		 -> STR_32(CODE[18]), STR_31(CODE[17]), STR_30(CODE[12]), STR_29(CODE[15]), 
		 -> STR_28(CODE[18]), STR_27(CODE[17]), STR_26(CODE[14]), STR_25(CODE[14]), 
		 -> STR_24(CODE[17]), STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[16]), 
		 -> STR_20(CODE[3]), STR_19(CODE[9]), STR_18(CODE[17]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[12]), STR_14(CODE[10]), STR_13(CODE[15]), 
		 -> STR_12(CODE[12]), STR_11(CODE[10]), STR_10(CODE[16]), STR_9(CODE[3]), 
		 -> STR_8(CODE[10]), STR_7(CODE[17]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[10]), STR_3(CODE[16]), STR_2(CODE[10]), STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_48(CODE[5]), STR_47(CODE[10]), STR_46(CODE[10]), STR_45(CODE[10]), 
		 -> STR_44(CODE[11]), STR_43(CODE[11]), STR_42(CODE[12]), STR_41(CODE[8]), 
		 -> STR_40(CODE[8]), STR_39(CODE[17]), STR_38(CODE[15]), STR_37(CODE[15]), 
		 -> STR_36(CODE[12]), STR_35(CODE[17]), STR_34(CODE[12]), STR_33(CODE[15]), 
		 -> STR_32(CODE[18]), STR_31(CODE[17]), STR_30(CODE[12]), STR_29(CODE[15]), 
		 -> STR_28(CODE[18]), STR_27(CODE[17]), STR_26(CODE[14]), STR_25(CODE[14]), 
		 -> STR_24(CODE[17]), STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[16]), 
		 -> STR_20(CODE[3]), STR_19(CODE[9]), STR_18(CODE[17]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[12]), STR_14(CODE[10]), STR_13(CODE[15]), 
		 -> STR_12(CODE[12]), STR_11(CODE[10]), STR_10(CODE[16]), STR_9(CODE[3]), 
		 -> STR_8(CODE[10]), STR_7(CODE[17]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[10]), STR_3(CODE[16]), STR_2(CODE[10]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_48(CODE[5]), STR_47(CODE[10]), STR_46(CODE[10]), STR_45(CODE[10]), 
		 -> STR_44(CODE[11]), STR_43(CODE[11]), STR_42(CODE[12]), STR_41(CODE[8]), 
		 -> STR_40(CODE[8]), STR_39(CODE[17]), STR_38(CODE[15]), STR_37(CODE[15]), 
		 -> STR_36(CODE[12]), STR_35(CODE[17]), STR_34(CODE[12]), STR_33(CODE[15]), 
		 -> STR_32(CODE[18]), STR_31(CODE[17]), STR_30(CODE[12]), STR_29(CODE[15]), 
		 -> STR_28(CODE[18]), STR_27(CODE[17]), STR_26(CODE[14]), STR_25(CODE[14]), 
		 -> STR_24(CODE[17]), STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[16]), 
		 -> STR_20(CODE[3]), STR_19(CODE[9]), STR_18(CODE[17]), STR_17(CODE[15]), 
		 -> STR_16(CODE[15]), STR_15(CODE[12]), STR_14(CODE[10]), STR_13(CODE[15]), 
		 -> STR_12(CODE[12]), STR_11(CODE[10]), STR_10(CODE[16]), STR_9(CODE[3]), 
		 -> STR_8(CODE[10]), STR_7(CODE[17]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[10]), STR_3(CODE[16]), STR_2(CODE[10]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_UI_main
    _main->_number_deploy
    _main->_ultrasonic_main
    _ultrasonic_main->_print_echo
    _brake->_I2C_Master_Write
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _backwards->_I2C_Master_Write
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _timer_main->_initLCD
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _abs->___aomod
    _atoi->_isspace
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               102   102      0  213014
                                             90 BANK1      2     2      0
                                              0 BANK2    100   100      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _UI_main
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                      3     3      0   46211
                                            122 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                         _print_echo
                             _printf
                        _sense_tires
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sense_tires                                          2     0      2    1502
                                              3 BANK0      2     0      2
                              _brake
 ---------------------------------------------------------------------------------
 (3) _brake                                                0     0      0    1381
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   21613
                                            121 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2103
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   23564
                                            121 BANK0      4     0      4
                                              0 BANK1      8     8      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1381
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       6     4      2   88364
                                              8 BANK1      6     4      2
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2                                             5     5      0   43626
                                              0 BANK1      5     5      0
                         _full_drive
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   22329
                                              0 BANK1      8     6      2
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   22004
                                            121 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0     136
                                              3 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   25760
                                            121 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
                         _timer_main
 ---------------------------------------------------------------------------------
 (2) _timer_main                                           0     0      0     350
                         _TIMER_INIT
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (3) _TIMER_INIT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   21455
                                            109 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17042
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16497
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6083
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1715
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     612
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     2     0      2    1381
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _timer_main
       _TIMER_INIT
       _initLCD
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _send_byte
           _send_nibble
             _pulse_e
         _send_nibble
           _pulse_e
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _sense_tires
       _brake
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     64      DC      10       85.9%
BITBANK1           100      0       0       7        0.0%
BANK1              100     5C      9E       8       61.7%
BITBANK14           F4      0       0      33        0.0%
BANK14              F4      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7D      80       5      100.0%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     267       6        0.0%
DATA                 0      0     267       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 02 00:11:56 2019

               ___fldiv@aexp 0027                 ___fldiv@bexp 0026                            _a 0040  
                          _b 0062                            _i 00FD                 ___fldiv@sign 001F  
                __CFG_CPD$ON 000000                 ___awdiv@sign 0085          ___wmul@multiplicand 0082  
                __CFG_BORV$3 000000              ??_number_deploy 0100            stepper2@direction 0100  
              servoRotate0@i 0081                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000  
        __end_of_system_init 3388              _ultrasonic_main 28CE                          l244 2C1A  
                        l274 0294                          l613 1CAE                          l615 1CB6  
                        l482 30E4                          l707 2D14                          l477 31DE  
                        l590 1AC4                          l577 2A94                          l588 1ABC  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                          _RB2 007C0A  
                        _RB3 007C0B                          _RC1 007C11                          _RB4 007C0C  
                        _RD0 007C18                          _RC2 007C12                          _RB5 007C0D  
                        _RD1 007C19                          _RB6 007C0E                          _RB7 007C0F  
                        _ISR 0008                          _abs 3322                          _cnt 019B  
                        _pad 2A64                          _sum 0038                          wreg 000FE8  
               __CFG_LVP$OFF 000000                         ?_ISR 0001                 ___fltol@exp1 0031  
               __CFG_WDT$OFF 000000                         l1100 2F5C                         ?_abs 0092  
                       l1355 334C                         l1453 3266                         l1386 255C  
                       l6101 249E                         l6005 1C4E                         l6103 24C6  
                       l6023 1CCC                         l6009 1C66                         l6107 24FC  
                       l6051 1DAE                         l6203 105E                         l6131 0D90  
                       l6037 1D20                         l6029 1CFE                         l6213 10A6  
                       l6133 0D92                         l7021 015E                         ?_pad 0094  
                       l6151 0DB2                         l6143 0DAA                         l6135 0DA2  
                       l6081 2436                         l6209 109A                         l6091 2480  
                       l6083 243A                         l6075 1E9C                         l6059 1E26  
                       l6171 0E88                         l6155 0DBC                         l6147 0DAE  
                       l6139 0DA6                         l6219 10BE                         l6243 3096  
                       l7211 07F6                         l7115 037C                         l7051 01EE  
                       l6173 0E96                         l6157 0DFE                         l6245 30BE  
                       l6431 1692                         l7311 12C0                         l6097 2490  
                       l6169 0E6A                         l7209 07E8                         l7073 0274  
                       l7161 0686                         l6337 14FE                         l6353 1574  
                       l7233 2B5A                         l7305 1282                         l6099 2498  
                       l7139 050C                         l7083 02B4                         l7243 2B86  
                       l6611 2140                         l7307 129C                         l5813 2A8C  
                       l6189 0F90                         l7165 06AC                         l7317 12D6  
                       l6535 2CC6                         l5911 26D4                         l5823 2AE4  
                       l5815 2A9E                         l7319 12F0                         l7271 1174  
                       l6537 2CD2                         l5921 2726                         l5809 2A7C  
                       l7193 0760                         l6473 1734                         l6393 1608  
                       l6641 222A                         l6633 21E6                         l6625 21B2  
                       l6617 216E                         l7337 13DE                         l7265 114A  
                       l6547 2D06                         l5931 2784                         l5915 26F8  
                       l5819 2AB8                         l7099 0314                         l7189 0758  
                       l6805 2C58                         l6821 2C8A                         l6901 1F1C  
                       l6557 27E0                         l7277 11A8                         l5935 27AA  
                       l5927 276E                         l5919 2712                         l5775 2EB2  
                       l7199 077A                         l6751 2DFC                         l6807 2C60  
                       l6841 2F4E                         l6833 2F1A                         l5881 2368  
                       l5873 232E                         l5785 32BC                         l5793 3428  
                       l6737 2DC4                         l6825 2C98                         l6817 2C80  
                       l6921 1FB6                         l6905 1F4E                         l6657 22A2  
                       l6649 225E                         l6569 281A                         l6835 2F26  
                       l5947 32A8                         l5891 23C4                         l5867 2306  
                       l5795 342E                         l5971 1ADE                         l6579 284E  
                       l7299 126C                         l5789 32D4                         l5957 1AA0  
                       l6933 2002                         l6909 1F62                         l6589 2882  
                       l6853 28E6                         l5879 2354                         l5895 23DA  
                       l5975 1AEE                         l6919 1FAC                         l6599 28B6  
                       l6855 28EE                         l5985 1BE8                         l6769 2FE4  
                       l6793 2C32                         l6953 20D6                         l5899 2400  
                       l6891 29A2                         l6859 28FE                         l6875 2922  
                       l6877 292A                         l6991 00BC                         l6799 2C42  
                       l6895 1EE2                         l6889 299C                         STR_1 FBB2  
                       STR_2 FCDD                         STR_3 FC06                         STR_4 FCE7  
                       STR_5 FC16                         STR_6 FCF1                         STR_7 FBC3  
                       STR_8 FCFB                         STR_9 FC7C                         _LATA 000F89  
                       _LATB 000F8A                         _LATC 000F8B                         _LATD 000F8C  
                       _LATE 000F8D                         u6100 33B2                         u6110 33B4  
                       u6200 331C                         u6050 2EAA                         u6210 324E  
                       u6035 3476                         u6300 236C                         u6036 3478  
                       u6220 3250                         u7100 27DE                         u6070 2EF2  
                       _RBIE 007F93                         u6240 3416                         u6400 32A4  
                       u6160 3332                         u7200 217E                         _RBIF 007F90  
                       u6250 3418                         u6410 1A72                         u6170 33E4  
                       u7210 218E                         u6500 1C1A                         u6420 1A74  
                       u6180 33E6                         u7300 22B2                         u7220 21C2  
                       u8100 12AE                         u8020 1134                         u6501 1C18  
                       u6510 1C28                         u6190 331A                         u7310 22C2  
                       u7230 21D2                         u7150 28CC                         u8110 12F0  
                       u8030 115C                         u8031 115A                         u7080 2CD6  
                       u6360 272A                         u6520 1C2C                         u6600 1D52  
                       u7240 21F6                         u7160 2112                         u7320 2BA2  
                       u6281 2334                         u8041 1172                         u6450 1AB2  
                       u6610 1D54                         u7250 2206                         u7170 2122  
                       u7330 2BB2                         u6540 1C38                         u6700 1E68  
                       u7500 2C64                         u7260 223A                         u7180 2150  
                       u7340 2BC2                         u7405 349A                         u7406 349C  
                       u6470 1AD8                         u6710 1E6C                         u6630 1D8C  
                       u7430 2DEA                         u7270 224A                         u7190 2160  
                       u7350 2BD2                         u8070 124A                         u7415 2F98  
                       u8207 1448                         u6480 1BF8                         u6640 1D8E  
                       u7280 226E                         u7360 2BE2                         u8080 125A  
                       u8217 146C                         u6570 1CA2                         u7450 2E22  
                       u7610 1F12                         u7290 227E                         u7370 2BF2  
                       u8090 129C                         u8307 28A8                         u8227 296E  
                       u8147 11E8                         u7540 2F2A                         u6740 247C  
                       u6660 1E02                         u7460 300C                         u7700 1FDE  
                       u7620 1F44                         u7380 2C02                         u8317 20F8  
                       u8237 27F6                         u8157 122A                         u6670 1E38  
                       u6590 1D1C                         u6910 0FC4                         u7710 1FEE  
                       u7390 2C12                         u8407 14F4                         u8327 2078  
                       u8247 280C                         u8167 1386                         u6760 252C  
                       u7720 1FFE                         u7640 1F72                         u6665 1DF0  
                       u8417 1512                         u8337 20AC                         u8257 282A  
                       u8177 13D0                         u6770 252E                         u6690 1E5A  
                       u6850 0ED0                         u7730 20CC                         u7650 1F82  
                       u6691 1E58                         u8507 15FE                         u8427 1528  
                       u8347 2B20                         u8267 2840                         u8187 13F0  
                       u6860 0ED2                         u7740 20E8                         u7660 1F92  
                       u8517 1620                         u8437 153E                         u8357 2B4C  
                       u8277 285E                         u8197 1414                         u6870 0EDE  
                       u7670 1FA2                         u8607 172A                         u8527 163A  
                       u8447 1554                         u8367 149C                         u8287 2874  
                       u7920 038E                         u7840 0204                         u6960 3222  
                       u8617 174C                         u8537 1654                         u8457 156A  
                       u8377 14B2                         u8297 2892                         u6890 0F12  
                       u7930 039E                         u6970 312C                         u7690 1FCE  
                       u7931 039C                         u8707 31EA                         u8627 1766  
                       u8547 166E                         u8467 1596                         u8387 14C8  
                       u8717 31F6                         u8637 1780                         u8557 1688  
                       u8477 15B0                         u8397 14DE                         u8807 0538  
                       u8727 3204                         u8647 179A                         u8567 16C2  
                       u8487 15CA                         u8817 06EE                         u8737 007A  
                       u8657 17B4                         u8577 16DC                         u8497 15E4  
                       u7890 02B0                         u8827 2E30                         u8747 011E  
                       u8667 34B8                         u8587 16F6                         u7980 07FC  
                       u8837 2E4A                         u8757 0192                         u8677 30EA  
                       u8597 1710                         u8847 2E5C                         u8767 022C  
                       u8687 30FA                         u8857 2E80                         u8777 02CC  
                       u8697 310E                         u8867 345C                         u8787 032C  
                       u8877 3466                         u8797 03BE                         _Pole 0200  
         main@poles_detected 02D6                  main@t_count 02D2                         abs@a 0092  
                       _data 0066                         _echo 0806                         _dbuf 0258  
                       _disp 0195                         _atoi 2422                         _main 10F4  
                       _dtoa 1A48                         _meas 0058                         _keys FB67  
                       _send 006D                         _tick 005E                         _prec 0054  
                       _sens 0060                         _temp 00FF                         _time 018C  
                       _nout 0050                         pad@i 009B                         pad@p 0098  
                       fsr1h 000FE2                         fsr2h 000FDA                         indf2 000FDF  
                       fsr1l 000FE1                         pad@w 009D                         fsr2l 000FD9  
                       _trig 27CC                         _sumf 0048                         btemp 006E  
                       _xtoa 1C90                         prodh 000FF4                         prodl 000FF3  
                       start 000E      __size_of_actuators_main 0090                __CFG_IESO$OFF 000000  
            ___fldiv@new_exp 0020              __end_of_UI_main 0806              servoRotate180@i 0081  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000                        ??_ISR 0036  
                      ??_abs 0094                        ??_pad 009A        actuators_main@act_cnt 010C  
      I2C_Master_Read@ackBit 0081             ?_I2C_Master_Init 008D             ?_I2C_Master_Read 0001  
           ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001                        ?_echo 0001  
              ___fltol@sign1 0030                  ?_TIMER_INIT 0001              __end_of___aodiv 2422  
                      ?_atoi 0087                        ?_main 0001                        ?_dtoa 009F  
            __end_of___aomod 27CC              __end_of___fldiv 1A48              __end_of___awdiv 2CA2  
                      STR_10 FBF6                        STR_11 FD0F                        STR_20 FC7C  
                      STR_12 FCB1                        STR_21 FBD5                        STR_13 FC26  
                      STR_22 FD19                        STR_14 FD0F                        STR_30 FCA5  
                      STR_31 FBE5                        STR_23 FC7C                        STR_15 FCB1  
                      STR_16 FC26                        STR_40 FBFE                        STR_32 FB7E  
                      STR_24 FBD4                        STR_33 FC35                        STR_41 FD22  
                      STR_25 FC7F                        STR_17 FC44                        STR_34 FCA5  
                      STR_42 FC99                        STR_26 FC71                        STR_18 FB90  
                      STR_19 FD19                        STR_43 FCBD                        STR_27 FBE5  
                      STR_35 FBA1                        STR_44 FCC8                        STR_36 FC8D  
                      STR_28 FB7E                        STR_45 FD05                        STR_37 FC53  
                      STR_29 FC35                        STR_46 FCD3                        STR_38 FC62  
                      STR_39 FB90                        STR_47 FCD3                        STR_48 FD2A  
            __end_of___fltol 2A64                        ?_trig 0001              __end_of___lldiv 2D26  
            ___awdiv@divisor 0082                        ?_xtoa 009F                        _T1CON 000FCD  
            __end_of___llmod 2F6E                        i2l159 3176                        i2l186 0D48  
            ___awdiv@counter 0084                 vfpfcnvrt@fmt 00C8                        _TMR0H 000FD7  
               vfpfcnvrt@llu 00D8                        _TMR1H 000FCF                        _TMR0L 000FD6  
                      _TMR1L 000FCE                        _PORTB 000F81                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
            __end_of_lcdInst 35FA               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
            __end_of_initLCD 2E98               __CFG_EBTRB$OFF 000000                        _brake 351C  
                      _flags 0056                        _dists 0069                        _fputc 2E98  
            __end_of_isalpha 3322                        _fputs 32B0              __end_of_isdigit 341E  
                      _servo 34A4                        atoi@n 0094                        pad@fp 0094  
                      atoi@s 0087                        _width 0052                        _state 0197  
                      _putch 35FA                        _start 3182                        main@i 02CC  
                      dtoa@d 00A1                        dtoa@i 00C1                        dtoa@n 00B9  
                      dtoa@p 00B3                        dtoa@s 00B7                        dtoa@w 00B5  
            __end_of_islower 33BA              __end_of_isspace 32B0              __end_of_isupper 33EC  
                      tablat 000FF5              send_nibble@data 0081              __end_of_pulse_e 347A  
                      ttemp5 006F                        ttemp6 0072                        ttemp7 0076  
                      status 000FD8  I2C_Master_Read@receivedByte 0082              __end_of_stepper 2E28  
                      wtemp8 006F                        xtoa@c 00C4                        xtoa@d 00A1  
                      xtoa@i 00C2                        xtoa@n 00BA                        xtoa@p 00B6  
                      xtoa@w 00B8                        xtoa@x 00A9              __end_of_toupper 3270  
           ??_servoRotate180 0080           __size_ofi2___awdiv 0084               __CFG_PBADEN$ON 000000  
               _toupper$1609 008C              __initialization 302A                 __end_of_echo 0D4A  
                _system_init 3356                 __end_of_atoi 2566                 __end_of_main 147C  
               __end_of_dtoa 1C90                 __end_of_keys FB78      __end_of_ultrasonic_main 29AA  
               __end_of_trig 28CE                 __end_of_xtoa 1EC6                       ??_echo 0032  
                     ??_atoi 0089                       ??_main 015A                       ??_dtoa 00A9  
                     ??_trig 0080                       ??_xtoa 00AA                __activetblptr 000002  
       number_deploy@t_count 0106            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0081  
       number_deploy@tires_t 0102           ??_I2C_Master_Start 0081                       ?_brake 0001  
                     _ADCON1 000FC1           ??_I2C_Master_Write 0083                 ?_send_nibble 0001  
                     ?_fputc 0084             ___llmod@dividend 0080                       ?_fputs 008D  
           ___awdiv@dividend 0080                       ?_servo 0001                       ?_putch 0001  
                     ?_start 0001                       _INT1IE 007F83                       _INT1IF 007F80  
                     i2l1342 2622                       i2l1335 25A4                       i2l1264 1932  
                     i2l1275 19A0                       i2l1276 199C                       i2l5011 0938  
                     i2l5005 08E0                       i2l5013 0952                       i2l5023 09D2  
                     i2l5113 0D2E                       i2l5107 0CD2                       i2l5045 0A8A  
                     i2l5039 0A2E                       i2l5047 0AA4                       i2l5073 0B80  
                     i2l5057 0B24                       i2l5081 0BF6                       i2l5091 0C76  
                     i2l5079 0BDC                       i2l4705 1892                       i2l4723 190A  
                     i2l4715 18E2                       i2l4741 1966                       i2l4901 25D2  
                     i2l4735 1948                       i2l4663 17F0                       i2l4903 25D8  
                     i2l5535 3160                       i2l4761 19E4                       i2l4729 1930  
                     i2l4913 2648                       i2l4905 25E4                       i2l5529 314E  
                     i2l4691 1864                       i2l4683 1830                       i2l4659 17EC  
                     i2l4851 2A12                       i2l4835 29C8                       i2l4931 2694  
                     i2l4915 2654                       i2l4907 260A                       i2l4765 1A08  
                     i2l4861 2A2A                       i2l4775 1A3E                       i2l4679 182C  
                     i2l4863 2A36                       i2l4855 2A22                       i2l4943 2D3A  
                     i2l4777 1A40                       i2l4769 1A32                       i2l4697 187A  
                     i2l4955 2D60                       i2l4971 2D92                       i2l4869 2A52  
                     i2l4957 2D68                       i2l4949 2D4A                       i2l4895 25B4  
                     i2l4975 2DA0                       i2l4967 2D88                       i2l4989 0884  
                  ??_UI_main 0100                vfpfcnvrt@done 00E1                       _TMR0IF 007F92  
                     _TMR1ON 007E68                       _SSPADD 000FC8                       _SSPBUF 000FC9  
           __end_of___xxtofl 26A6          __size_of_TIMER_INIT 0026  number_deploy@poles_detected 00FB  
             __CFG_XINST$OFF 000000                 vfprintf@cfmt 00EB                    ??___aodiv 0090  
                  ??___aomod 0090                       ___wmul 34F4                    ??___fldiv 0017  
                  ??___awdiv 0084               __CFG_STVREN$ON 000000                    ??___fltol 002C  
                  ??___lldiv 0088                 ?_sense_tires 0083                    ??___llmod 0088  
                     clear_0 3050                       clear_1 305C                       clear_2 3070  
           ___awdiv@quotient 0086                    ??_lcdInst 0083                       _printf 34CC  
                     pad@buf 0096                       dtoa@fp 009F                       _strlen 341E  
             i2___awdiv@sign 0006                    ??_initLCD 0084                       fputc@c 0084  
                     fputs@c 0091                       fputs@i 0092                 __pdataCOMRAM 0069  
                     fputs@s 008D                    ??_isalpha 0082                    ??_isdigit 0082  
          __end_ofi2___awdiv 2DAA                    ??_islower 0082                 __mediumconst FB66  
                  ??_isspace 0082                       tblptrh 000FF7                    ??_isupper 0082  
                     tblptrl 000FF6                       tblptru 000FF8             __end_of_vfprintf 30DA  
                  ??_pulse_e 0080             __end_of_stepper2 302A                    ??_stepper 00FD  
                     xtoa@fp 009F                    ??_toupper 0088                 ___xxtofl@arg 000B  
      pulse_e@interruptState 0080                 ___xxtofl@exp 000A                 ___xxtofl@val 0001  
                 __accesstop 0080      __end_of__initialization 3076               _actuators_main 2B00  
              ___rparam_used 000001                   ___fltol@f1 0028                 stepper@i_859 0106  
         __size_of_backwards 0026          full_drive@direction 00FC               __pcstackCOMRAM 0001  
               stepper@stack 0100             ?_ultrasonic_main 0001                __end_of_brake 3542  
              __end_of_fputc 2F06                __end_of_fputs 32EC                __end_of_servo 34CC  
              __end_of_putch 360A                __end_of_start 31D4              _key_was_pressed 019D  
      number_deploy@avg_dist 00F9                      ??_brake 0083                      ??_fputc 0088  
                    ??_fputs 0091                      ??_servo 0083                      ??_putch 0083  
                    ??_start 0095                   __pbssBANK0 00FD                   __pbssBANK1 015C  
                 __pbssBANK2 0200       __end_of_actuators_main 2B90                      ?___wmul 0080  
         __size_of_send_byte 0018                 ??_TIMER_INIT 0080                      ?_printf 00ED  
                    ?_strlen 0080        __end_of_number_deploy 20EA                    ?___xxtofl 0001  
          __end_of_backwards 3568           __size_of_vfpfcnvrt 03AA                   _dist_final 015C  
                    _SSPCON1 000FC6                      _SSPCON2 000FC5                      _SSPSTAT 000FC7  
                    _UI_main 0012         __size_of_send_nibble 001A              ?_actuators_main 0108  
         __end_of_TIMER_INIT 358E                      __Hparam 0000                      __Lparam 0000  
               ?_system_init 0001                      ___aodiv 22D8                      ___aomod 26A6  
                    ___fldiv 17C0                      ___awdiv 2C1C                      ___fltol 29AA  
                    ___lldiv 2CA2              __size_of___wmul 0028                      ___llmod 2F06  
                  ?_vfprintf 00E5                    ?_stepper2 0001                      __pcinit 302A  
                 _full_drive 147C                      __ramtop 1000         __size_of_sense_tires 008C  
                    _lcdInst 35EA                      __ptext0 10F4                      __ptext1 28CE  
                    __ptext2 27CC                      __ptext3 2B90                      __ptext4 351C  
                    __ptext5 20EA                      __ptext6 3182                      __ptext7 1EC6  
                    __ptext8 2C1C                      __ptext9 3542              __size_of_printf 0028  
                  _T0CONbits 000FD5              __size_of_strlen 002E                      _initLCD 2E28  
               __size_of_ISR 317A                      _counter 0068                 __size_of_abs 0034  
               __size_of_pad 009C                      _isalpha 32EC                      _isdigit 33EC  
                 ??___xxtofl 0005                      _islower 3388                      _isspace 3270  
                    _isupper 33BA     __size_of_I2C_Master_Init 0060     __size_of_I2C_Master_Read 002A  
   __size_of_I2C_Master_Wait 0014     __size_of_I2C_Master_Stop 0008              _prev_dist_final 0250  
                    _pressed 0193                      atoi@neg 008D                      _pulse_e 344C  
                    _stepper 2DAA               __pintcode_body 312E                      _toupper 3224  
       end_of_initialization 3076        __end_of_LCD_SIZE_HORZ FB7B            __end_of_send_byte 35C0  
      __end_of_LCD_SIZE_VERT FB7A                      fputc@fp 0086                __Lmediumconst FB66  
                    int_func 312E                      fputs@fp 008F    __size_of_I2C_Master_Start 0008  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0084              ___lldiv@counter 008C  
          __end_of_vfpfcnvrt 10F4                ?_servoRotate0 0001                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_vfprintf 00EB                   ??_stepper2 00FD  
                    strlen@a 0082                      strlen@s 0080                   _timer_main 35C0  
                 _print_echo 20EA                ___xxtofl@sign 0009                    _TRISBbits 000F93  
                  _TRISCbits 000F94                  ___fldiv@grs 0022                  ___fldiv@rem 001B  
                  i2___awdiv 2D26                send_byte@data 0082           i2___awdiv@dividend 0001  
      UI_main@poles_detected 00FB               ??_servoRotate0 0080  number_deploy@tires_detected 0104  
                vfpfcnvrt@ap 00CA                  vfpfcnvrt@fp 00C6                  vfpfcnvrt@ll 00D0  
             __end_of___wmul 351C                  ?_full_drive 00F9      __size_of_servoRotate180 0054  
              __pidataCOMRAM 3624               __end_of_printf 34F4               __end_of_strlen 344C  
        start_initialization 302A           i2___awdiv@quotient 0007                  __end_of_ISR 3182  
                __end_of_abs 3356                  __end_of_pad 2B00        stepper2@count_stepper 0101  
                 ?i2___awdiv 0001            ??_I2C_Master_Init 0091            ??_I2C_Master_Read 0081  
          ??_I2C_Master_Wait 0080            ??_I2C_Master_Stop 0081            main@prev_avg_dist 02D8  
             _poles_detected 005A              ___llmod@divisor 0084              ___llmod@counter 0088  
               UI_main@t_dep 00F9                  vfprintf@fmt 00E7                     ??___wmul 0084  
   I2C_Master_Init@clockFreq 008D             __CFG_LPT1OSC$OFF 000000         __size_of_system_init 0032  
                ?_timer_main 0001                     ??_printf 00F5                     ??_strlen 0082  
                ?_print_echo 0001                    ___fldiv@a 0013                    ___fldiv@b 000F  
   __size_of_ultrasonic_main 00DC                  __pbssCOMRAM 0038                __pcstackBANK0 0080  
              __pcstackBANK1 0100                __pcstackBANK2 0278             ___aodiv@dividend 0080  
           ??_actuators_main 010A            __size_of___xxtofl 0140                    _backwards 3542  
                   ?_UI_main 00F9          __size_of_full_drive 0344                    _atoi$1517 008F  
                  _atoi$1518 0093                    _atoi$1519 0091             _I2C_Master_Start 361C  
           _I2C_Master_Write 360A                    _dtoa$1033 00B1            __CFG_CCP2MX$PORTC 000000  
                  __pintcode 0008                __pmediumconst FB66                     ?___aodiv 0080  
                   ?___aomod 0080                     ?___fldiv 000F                     ?___awdiv 0080  
           ___aodiv@quotient 0092                     ?___fltol 0028                     ?___lldiv 0080  
                   ?___llmod 0080                     ?_lcdInst 0001            __size_of_vfprintf 0056  
          __size_of_stepper2 005C         full_drive@stepper_no 00F9                     ?_initLCD 0001  
                   ?_isalpha 0080                     ?_isdigit 0080                     ?_islower 0080  
                   ?_isspace 0080                     ?_isupper 0080         __end_of_servoRotate0 3224  
              ??_send_nibble 0081                     ?_pulse_e 0001               __size_of_brake 0026  
                ??i2___awdiv 0005                     ?_stepper 0100               __size_of_fputc 006E  
             __size_of_fputs 003C                     ?_toupper 0086               __size_of_servo 0028  
                 ?_backwards 0001               __size_of_putch 0010               __size_of_start 0052  
             ___wmul@product 0084                     _LATAbits 000F89                     _LATBbits 000F8A  
                   _LATCbits 000F8B                     _LATDbits 000F8C                     _LATEbits 000F8D  
        __size_of_timer_main 0016                     UI_main@i 0159             main@pole_cl_dist 02C8  
                  _send_byte 35A8          __size_of_print_echo 01EE       __size_of_number_deploy 0224  
             _LCD_LINE1_ADDR FB78               _LCD_LINE2_ADDR FB7D               _LCD_LINE3_ADDR FB7C  
             _LCD_LINE4_ADDR FB7B                     i2u504_40 0894                     i2u505_40 08A4  
                   i2u514_40 09E2                     i2u515_40 09F2                     i2u524_40 0B34  
                   i2u525_40 0B44                     i2u462_40 1996                     i2u534_40 0C86  
                   i2u535_40 0C96                     i2u480_40 2A3C                     i2u466_40 19F2  
                   i2u467_40 1A16                     i2u475_40 29B6                     i2u491_40 265E  
                   i2u476_40 29E6                     i2u476_45 29DC                     i2u498_40 2D6C  
                   i2u589_40 3158             __CFG_WDTPS$32768 000000                ??_sense_tires 0085  
             _servoRotate180 30DA                    _vfpfcnvrt 0D4A                    _xtoa$1044 00B2  
                  _xtoa$1045 00B4                    main@i_457 02CE            ___wmul@multiplier 0080  
                  main@t_dep 02D4            i2___awdiv@divisor 0003                    main@stack 02D0  
          i2___awdiv@counter 0005                 _isspace$1544 0086                   vfpfcnvrt@c 00E0  
        actuators_main@stack 0108                    copy_data0 303E            ??_ultrasonic_main 00FA  
            UI_main@keypress 0154       __end_of_LCD_LINE1_ADDR FB79             __size_of_UI_main 07F4  
     __end_of_LCD_LINE2_ADDR FB7E       __end_of_LCD_LINE3_ADDR FB7D       __end_of_LCD_LINE4_ADDR FB7C  
        __end_of_send_nibble 35A8                   ?_send_byte 0001                  UI_main@Pole 0104  
                   __Hrparam 0000                  UI_main@tick 0155                   vfprintf@ap 00E9  
                   __Lrparam 0000                   vfprintf@fp 00E5           __CFG_BOREN$SBORDIS 000000  
     __end_of_servoRotate180 312E             __size_of___aodiv 014A             __size_of___aomod 0126  
           __size_of___fldiv 0288             __size_of___awdiv 0086             __size_of___fltol 00BA  
           __size_of___lldiv 0084             __size_of___llmod 0068                 ??_full_drive 00FB  
                 ?_vfpfcnvrt 00C6              ___aodiv@divisor 0088              ___aodiv@counter 0090  
           __size_of_lcdInst 0010          __end_of_sense_tires 2C1C                _number_deploy 1EC6  
            _I2C_Master_Init 2F6E              _I2C_Master_Read 347A             __size_of_initLCD 0070  
                   ___xxtofl 2566              _I2C_Master_Wait 35D6              _I2C_Master_Stop 3614  
           __size_of_isalpha 0036             __size_of_isdigit 0032             __size_of_islower 0032  
           __size_of_isspace 0040                     __ptext10 2B00                     __ptext11 3356  
                   __ptext20 2E28                     __ptext12 2FCE                     __ptext21 35EA  
                   __ptext13 2DAA                     __ptext30 32EC                     __ptext22 3568  
                   __ptext14 147C                     __ptext31 1A48                     __ptext23 34CC  
                   __ptext15 34A4                     __ptext40 3322                     __ptext32 2A64  
                   __ptext24 3084                     __ptext16 30DA                     __ptext41 26A6  
                   __ptext33 341E                     __ptext25 0D4A                     __ptext17 31D4  
                   __ptext50 361C                     __ptext42 22D8                     __ptext34 32B0  
                   __ptext26 1C90                     __ptext18 0012                     __ptext51 347A  
                   __ptext43 2422                     __ptext35 2E98                     __ptext27 3224  
                   __ptext19 35C0                     __ptext60 17C0                     __ptext52 35D6  
                   __ptext44 3270                     __ptext36 35FA                     __ptext28 3388  
                   __ptext53 2F6E                     __ptext45 33EC                     __ptext37 35A8  
                   __ptext29 33BA                     __ptext54 2CA2                     __ptext46 34F4  
                   __ptext38 358E                     __ptext47 2F06                     __ptext39 344C  
                   __ptext56 0806                     __ptext48 360A                     __ptext57 2D26  
                   __ptext49 3614                     __ptext58 2566                     __ptext59 29AA  
           __size_of_isupper 0032                     _avg_dist 004C             __size_of_pulse_e 002E  
                ??_backwards 0083             __size_of_stepper 007E             __size_of_toupper 004C  
              __size_of_echo 0544                __size_of_atoi 0144                __size_of_main 0388  
              __size_of_dtoa 0248                __size_of_trig 0102                __size_of_xtoa 0236  
         __end_of_full_drive 17C0                     _keypress 0067                     _temp_int 0199  
            ?_servoRotate180 0001                     int$flags 006E                     _vfprintf 3084  
                   main@Pole 0278                     _stepper2 2FCE                    printf@fmt 00ED  
                   main@read 02CA                 ??_timer_main 0085  I2C_Master_Write@byteToWrite 0081  
           ___aomod@dividend 0080        __size_of_servoRotate0 0050                 ??_print_echo 00F9  
             ?_number_deploy 00F9                    putch@data 0083               _vfpfcnvrt$1059 00E3  
   __end_of_I2C_Master_Start 3624     __end_of_I2C_Master_Write 3614                   _INTCONbits 000FF2  
      ultrasonic_main@sensed 00FB                     isalpha@c 0080                     isdigit@c 0080  
                  stepper2@i 0103                  _send_nibble 358E                     intlevel2 0000  
              _LCD_SIZE_HORZ FB7A                     islower@c 0080                _LCD_SIZE_VERT FB79  
                   isspace@c 0080             ___lldiv@dividend 0080           __end_of_timer_main 35D6  
                ??_send_byte 0082                     isupper@c 0080               _tires_deployed 005C  
         __end_of_print_echo 22D8                ??_system_init 0080                 _servoRotate0 31D4  
                   printf@ap 00F7                  _sense_tires 2B90      __end_of_I2C_Master_Init 2FCE  
            ___aomod@divisor 0088      __end_of_I2C_Master_Read 34A4      __end_of_I2C_Master_Wait 35EA  
    __end_of_I2C_Master_Stop 361C                  ??_vfpfcnvrt 00CC                  lcdInst@data 0083  
            ___aomod@counter 0090                   _TIMER_INIT 3568                     stepper@i 0104  
          sense_tires@sensed 0083             ___lldiv@quotient 0088                     toupper@c 0086  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5                  _timer_count 0064  
               ___aodiv@sign 0091                 ___aomod@sign 0091         stepper@count_stepper 0102  
