

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 05 22:46:10 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4620 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _TRISC	set	3988
    48  0000                     _RC2	set	31762
    49  0000                     _RC1	set	31761
    50                           
    51                           ; #config settings
    52  0000                     
    53                           	psect	cinit
    54  00FE76                     __pcinit:
    55                           	opt callstack 0
    56  00FE76                     start_initialization:
    57                           	opt callstack 0
    58  00FE76                     __initialization:
    59                           	opt callstack 0
    60  00FE76                     end_of_initialization:
    61                           	opt callstack 0
    62  00FE76                     __end_of__initialization:
    63                           	opt callstack 0
    64  00FE76  0100               	movlb	0
    65  00FE78  EF3E  F07F         	goto	_main	;jump to C main() function
    66                           
    67                           	psect	cstackCOMRAM
    68  000001                     __pcstackCOMRAM:
    69                           	opt callstack 0
    70  000001                     servoRotate0@servo:
    71                           	opt callstack 0
    72  000001                     servoRotate180@servo:
    73                           	opt callstack 0
    74                           
    75                           ; 2 bytes @ 0x0
    76  000001                     	ds	2
    77  000003                     ??_servoRotate0:
    78  000003                     ??_servoRotate180:
    79                           
    80                           ; 1 bytes @ 0x2
    81  000003                     	ds	1
    82  000004                     servoRotate0@i:
    83                           	opt callstack 0
    84  000004                     servoRotate180@i:
    85                           	opt callstack 0
    86                           
    87                           ; 2 bytes @ 0x3
    88  000004                     	ds	2
    89  000006                     ??_main:
    90                           
    91                           ; 1 bytes @ 0x5
    92  000006                     	ds	2
    93                           
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 80 in file "main.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, status,0, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   117 ;;Total ram usage:        2 bytes
   118 ;; Hardware stack levels required when called:    1
   119 ;; This function calls:
   120 ;;		_servoRotate0
   121 ;;		_servoRotate180
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128  00FE7C                     __ptext0:
   129                           	opt callstack 0
   130  00FE7C                     _main:
   131                           	opt callstack 30
   132                           
   133                           ;main.c: 82:   TRISC = 0;
   134                           
   135                           ;incstack = 0
   136  00FE7C  0E00               	movlw	0
   137  00FE7E  6E94               	movwf	3988,c	;volatile
   138                           
   139                           ;main.c: 83:   {;main.c: 85:     servoRotate0(1);
   140  00FE80  0E00               	movlw	0
   141  00FE82  6E02               	movwf	servoRotate0@servo+1,c
   142  00FE84  0E01               	movlw	1
   143  00FE86  6E01               	movwf	servoRotate0@servo,c
   144  00FE88  EC6B  F07F         	call	_servoRotate0	;wreg free
   145                           
   146                           ;main.c: 86:     _delay((unsigned long)((2500)*(10000000/4000.0)));
   147  00FE8C  0E20               	movlw	32
   148  00FE8E  6E07               	movwf	(??_main+1)& (0+255),c
   149  00FE90  0EB5               	movlw	181
   150  00FE92  6E06               	movwf	??_main& (0+255),c
   151  00FE94  0ECB               	movlw	203
   152  00FE96                     u187:
   153  00FE96  2EE8               	decfsz	wreg,f,c
   154  00FE98  D7FE               	bra	u187
   155  00FE9A  2E06               	decfsz	??_main& (0+255),f,c
   156  00FE9C  D7FC               	bra	u187
   157  00FE9E  2E07               	decfsz	(??_main+1)& (0+255),f,c
   158  00FEA0  D7FA               	bra	u187
   159  00FEA2  F000               	nop	
   160                           
   161                           ;main.c: 89:     servoRotate180(1);
   162  00FEA4  0E00               	movlw	0
   163  00FEA6  6E02               	movwf	servoRotate180@servo+1,c
   164  00FEA8  0E01               	movlw	1
   165  00FEAA  6E01               	movwf	servoRotate180@servo,c
   166  00FEAC  ECB3  F07F         	call	_servoRotate180	;wreg free
   167                           
   168                           ;main.c: 90:         _delay((unsigned long)((500)*(10000000/4000.0)));
   169  00FEB0  0E07               	movlw	7
   170  00FEB2  6E07               	movwf	(??_main+1)& (0+255),c
   171  00FEB4  0E58               	movlw	88
   172  00FEB6  6E06               	movwf	??_main& (0+255),c
   173  00FEB8  0E5A               	movlw	90
   174  00FEBA                     u197:
   175  00FEBA  2EE8               	decfsz	wreg,f,c
   176  00FEBC  D7FE               	bra	u197
   177  00FEBE  2E06               	decfsz	??_main& (0+255),f,c
   178  00FEC0  D7FC               	bra	u197
   179  00FEC2  2E07               	decfsz	(??_main+1)& (0+255),f,c
   180  00FEC4  D7FA               	bra	u197
   181                           
   182                           ;main.c: 92:     servoRotate0(1);
   183  00FEC6  0E00               	movlw	0
   184  00FEC8  6E02               	movwf	servoRotate0@servo+1,c
   185  00FECA  0E01               	movlw	1
   186  00FECC  6E01               	movwf	servoRotate0@servo,c
   187  00FECE  EC6B  F07F         	call	_servoRotate0	;wreg free
   188  00FED2  EF00  F000         	goto	start
   189  00FED6                     __end_of_main:
   190                           	opt callstack 0
   191                           
   192 ;; *************** function _servoRotate180 *****************
   193 ;; Defined at:
   194 ;;		line 53 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;  servo           2    0[COMRAM] int 
   197 ;; Auto vars:     Size  Location     Type
   198 ;;  i               2    3[COMRAM] unsigned int 
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, status,2, status,0
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   211 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   212 ;;Total ram usage:        5 bytes
   213 ;; Hardware stack levels used:    1
   214 ;; This function calls:
   215 ;;		Nothing
   216 ;; This function is called by:
   217 ;;		_main
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text1
   222  00FF66                     __ptext1:
   223                           	opt callstack 0
   224  00FF66                     _servoRotate180:
   225                           	opt callstack 30
   226                           
   227                           ;main.c: 53: void servoRotate180(int servo);main.c: 54: {;main.c: 55:   unsigned int i;;
      +                          main.c: 56:     if (servo==1){
   228                           
   229                           ;incstack = 0
   230  00FF66  0401               	decf	servoRotate180@servo,w,c
   231  00FF68  1002               	iorwf	servoRotate180@servo+1,w,c
   232  00FF6A  A4D8               	btfss	status,2,c
   233  00FF6C  D025               	goto	u150
   234                           
   235                           ;main.c: 57:     for(i=0;i<15;i++)
   236  00FF6E  0E00               	movlw	0
   237  00FF70  6E05               	movwf	servoRotate180@i+1,c
   238  00FF72  0E00               	movlw	0
   239  00FF74  6E04               	movwf	servoRotate180@i,c
   240  00FF76                     l26:
   241                           
   242                           ;main.c: 59:         {;main.c: 60:           RC2 = 1;
   243  00FF76  8482               	bsf	3970,2,c	;volatile
   244                           
   245                           ;main.c: 61:           RC1 = 1;
   246  00FF78  8282               	bsf	3970,1,c	;volatile
   247                           
   248                           ;main.c: 63:           _delay((unsigned long)((475)*(10000000/4000000.0)));
   249  00FF7A  0EED               	movlw	237
   250  00FF7C                     u207:
   251  00FF7C  D000               	nop2	
   252  00FF7E  2EE8               	decfsz	wreg,f,c
   253  00FF80  D7FD               	bra	u207
   254  00FF82  D000               	nop2	
   255                           
   256                           ;main.c: 64:           RC2 =0;
   257  00FF84  9482               	bcf	3970,2,c	;volatile
   258                           
   259                           ;main.c: 65:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
   260  00FF86  0E07               	movlw	7
   261  00FF88  6E03               	movwf	??_servoRotate180& (0+255),c
   262  00FF8A  0ED0               	movlw	208
   263  00FF8C                     u217:
   264  00FF8C  2EE8               	decfsz	wreg,f,c
   265  00FF8E  D7FE               	bra	u217
   266  00FF90  2E03               	decfsz	??_servoRotate180& (0+255),f,c
   267  00FF92  D7FC               	bra	u217
   268  00FF94  D000               	nop2	
   269                           
   270                           ;main.c: 66:           RC1 = 0;
   271  00FF96  9282               	bcf	3970,1,c	;volatile
   272                           
   273                           ;main.c: 67:           _delay((unsigned long)((13525)*(10000000/4000000.0)));
   274  00FF98  0E2C               	movlw	44
   275  00FF9A  6E03               	movwf	??_servoRotate180& (0+255),c
   276  00FF9C  0EE8               	movlw	232
   277  00FF9E                     u227:
   278  00FF9E  2EE8               	decfsz	wreg,f,c
   279  00FFA0  D7FE               	bra	u227
   280  00FFA2  2E03               	decfsz	??_servoRotate180& (0+255),f,c
   281  00FFA4  D7FC               	bra	u227
   282  00FFA6  D000               	nop2	
   283                           
   284                           ;main.c: 68:         }
   285  00FFA8  4A04               	infsnz	servoRotate180@i,f,c
   286  00FFAA  2A05               	incf	servoRotate180@i+1,f,c
   287  00FFAC  5005               	movf	servoRotate180@i+1,w,c
   288  00FFAE  E104               	bnz	u150
   289  00FFB0  0E0F               	movlw	15
   290  00FFB2  5C04               	subwf	servoRotate180@i,w,c
   291  00FFB4  A0D8               	btfss	status,0,c
   292  00FFB6  D7DF               	goto	l26
   293  00FFB8                     u150:
   294                           
   295                           ;main.c: 70:   if (servo==2){
   296  00FFB8  0E02               	movlw	2
   297  00FFBA  1801               	xorwf	servoRotate180@servo,w,c
   298  00FFBC  1002               	iorwf	servoRotate180@servo+1,w,c
   299  00FFBE  A4D8               	btfss	status,2,c
   300  00FFC0  0012               	return	
   301                           
   302                           ;main.c: 71:     for(i=0;i<40;i++)
   303  00FFC2  0E00               	movlw	0
   304  00FFC4  6E05               	movwf	servoRotate180@i+1,c
   305  00FFC6  0E00               	movlw	0
   306  00FFC8  6E04               	movwf	servoRotate180@i,c
   307  00FFCA                     l29:
   308                           
   309                           ;main.c: 72:           {;main.c: 73:             RC2 = 1;
   310  00FFCA  8482               	bsf	3970,2,c	;volatile
   311                           
   312                           ;main.c: 74:             _delay((unsigned long)((2200)*(10000000/4000000.0)));
   313  00FFCC  0E08               	movlw	8
   314  00FFCE  6E03               	movwf	??_servoRotate180& (0+255),c
   315  00FFD0  0E23               	movlw	35
   316  00FFD2                     u237:
   317  00FFD2  2EE8               	decfsz	wreg,f,c
   318  00FFD4  D7FE               	bra	u237
   319  00FFD6  2E03               	decfsz	??_servoRotate180& (0+255),f,c
   320  00FFD8  D7FC               	bra	u237
   321  00FFDA  F000               	nop	
   322                           
   323                           ;main.c: 75:             RC2 = 0;
   324  00FFDC  9482               	bcf	3970,2,c	;volatile
   325                           
   326                           ;main.c: 76:             _delay((unsigned long)((17800)*(10000000/4000000.0)));
   327  00FFDE  0E3A               	movlw	58
   328  00FFE0  6E03               	movwf	??_servoRotate180& (0+255),c
   329  00FFE2  0ECA               	movlw	202
   330  00FFE4                     u247:
   331  00FFE4  2EE8               	decfsz	wreg,f,c
   332  00FFE6  D7FE               	bra	u247
   333  00FFE8  2E03               	decfsz	??_servoRotate180& (0+255),f,c
   334  00FFEA  D7FC               	bra	u247
   335                           
   336                           ;main.c: 77:           }
   337  00FFEC  4A04               	infsnz	servoRotate180@i,f,c
   338  00FFEE  2A05               	incf	servoRotate180@i+1,f,c
   339  00FFF0  5005               	movf	servoRotate180@i+1,w,c
   340  00FFF2  E105               	bnz	u170
   341  00FFF4  0E28               	movlw	40
   342  00FFF6  5C04               	subwf	servoRotate180@i,w,c
   343  00FFF8  B0D8               	btfsc	status,0,c
   344  00FFFA  0012               	return	
   345  00FFFC  D7E6               	goto	l29
   346  00FFFE                     u170:
   347  00FFFE  0012               	return		;funcret
   348  010000                     __end_of_servoRotate180:
   349                           	opt callstack 0
   350                           
   351 ;; *************** function _servoRotate0 *****************
   352 ;; Defined at:
   353 ;;		line 21 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;  servo           2    0[COMRAM] int 
   356 ;; Auto vars:     Size  Location     Type
   357 ;;  i               2    3[COMRAM] unsigned int 
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;Total ram usage:        5 bytes
   372 ;; Hardware stack levels used:    1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text2
   381  00FED6                     __ptext2:
   382                           	opt callstack 0
   383  00FED6                     _servoRotate0:
   384                           	opt callstack 30
   385                           
   386                           ;main.c: 21: void servoRotate0(int servo);main.c: 22: {;main.c: 23:     unsigned int i;;
      +                          main.c: 24:     if (servo==1){
   387                           
   388                           ;incstack = 0
   389  00FED6  0401               	decf	servoRotate0@servo,w,c
   390  00FED8  1002               	iorwf	servoRotate0@servo+1,w,c
   391  00FEDA  A4D8               	btfss	status,2,c
   392  00FEDC  D023               	goto	u110
   393                           
   394                           ;main.c: 25:       for(i=0;i<15;i++)
   395  00FEDE  0E00               	movlw	0
   396  00FEE0  6E05               	movwf	servoRotate0@i+1,c
   397  00FEE2  0E00               	movlw	0
   398  00FEE4  6E04               	movwf	servoRotate0@i,c
   399  00FEE6                     l17:
   400                           
   401                           ;main.c: 28:           {;main.c: 29:             RC2 = 1;
   402  00FEE6  8482               	bsf	3970,2,c	;volatile
   403                           
   404                           ;main.c: 30:             RC1 = 1;
   405  00FEE8  8282               	bsf	3970,1,c	;volatile
   406                           
   407                           ;main.c: 33:             _delay((unsigned long)((1100)*(10000000/4000000.0)));
   408  00FEEA  0E04               	movlw	4
   409  00FEEC  6E03               	movwf	??_servoRotate0& (0+255),c
   410  00FEEE  0E91               	movlw	145
   411  00FEF0                     u257:
   412  00FEF0  2EE8               	decfsz	wreg,f,c
   413  00FEF2  D7FE               	bra	u257
   414  00FEF4  2E03               	decfsz	??_servoRotate0& (0+255),f,c
   415  00FEF6  D7FC               	bra	u257
   416  00FEF8  F000               	nop	
   417                           
   418                           ;main.c: 34:             RC2 = 0;
   419  00FEFA  9482               	bcf	3970,2,c	;volatile
   420                           
   421                           ;main.c: 37:             _delay((unsigned long)((300)*(10000000/4000000.0)));
   422  00FEFC  0EFA               	movlw	250
   423  00FEFE                     u267:
   424  00FEFE  2EE8               	decfsz	wreg,f,c
   425  00FF00  D7FE               	bra	u267
   426                           
   427                           ;main.c: 38:             RC1 = 0;
   428  00FF02  9282               	bcf	3970,1,c	;volatile
   429                           
   430                           ;main.c: 40:             _delay((unsigned long)((18600)*(10000000/4000000.0)));
   431  00FF04  0E3D               	movlw	61
   432  00FF06  6E03               	movwf	??_servoRotate0& (0+255),c
   433  00FF08  0E62               	movlw	98
   434  00FF0A                     u277:
   435  00FF0A  2EE8               	decfsz	wreg,f,c
   436  00FF0C  D7FE               	bra	u277
   437  00FF0E  2E03               	decfsz	??_servoRotate0& (0+255),f,c
   438  00FF10  D7FC               	bra	u277
   439  00FF12  D000               	nop2	
   440                           
   441                           ;main.c: 41:           }
   442  00FF14  4A04               	infsnz	servoRotate0@i,f,c
   443  00FF16  2A05               	incf	servoRotate0@i+1,f,c
   444  00FF18  5005               	movf	servoRotate0@i+1,w,c
   445  00FF1A  E104               	bnz	u110
   446  00FF1C  0E0F               	movlw	15
   447  00FF1E  5C04               	subwf	servoRotate0@i,w,c
   448  00FF20  A0D8               	btfss	status,0,c
   449  00FF22  D7E1               	goto	l17
   450  00FF24                     u110:
   451                           
   452                           ;main.c: 43:     if (servo==2){
   453  00FF24  0E02               	movlw	2
   454  00FF26  1801               	xorwf	servoRotate0@servo,w,c
   455  00FF28  1002               	iorwf	servoRotate0@servo+1,w,c
   456  00FF2A  A4D8               	btfss	status,2,c
   457  00FF2C  0012               	return	
   458                           
   459                           ;main.c: 44:       for(i=0;i<40;i++)
   460  00FF2E  0E00               	movlw	0
   461  00FF30  6E05               	movwf	servoRotate0@i+1,c
   462  00FF32  0E00               	movlw	0
   463  00FF34  6E04               	movwf	servoRotate0@i,c
   464  00FF36                     l20:
   465                           
   466                           ;main.c: 45:         {;main.c: 46:           RC2 = 1;
   467  00FF36  8482               	bsf	3970,2,c	;volatile
   468                           
   469                           ;main.c: 47:           _delay((unsigned long)((449)*(10000000/4000000.0)));
   470  00FF38  0EE0               	movlw	224
   471  00FF3A                     u287:
   472  00FF3A  D000               	nop2	
   473  00FF3C  2EE8               	decfsz	wreg,f,c
   474  00FF3E  D7FD               	bra	u287
   475  00FF40  D000               	nop2	
   476                           
   477                           ;main.c: 48:           RC2 = 0;
   478  00FF42  9482               	bcf	3970,2,c	;volatile
   479                           
   480                           ;main.c: 49:           _delay((unsigned long)((27300)*(10000000/4000000.0)));
   481  00FF44  0E59               	movlw	89
   482  00FF46  6E03               	movwf	??_servoRotate0& (0+255),c
   483  00FF48  0EA2               	movlw	162
   484  00FF4A                     u297:
   485  00FF4A  2EE8               	decfsz	wreg,f,c
   486  00FF4C  D7FE               	bra	u297
   487  00FF4E  2E03               	decfsz	??_servoRotate0& (0+255),f,c
   488  00FF50  D7FC               	bra	u297
   489                           
   490                           ;main.c: 50:         }
   491  00FF52  4A04               	infsnz	servoRotate0@i,f,c
   492  00FF54  2A05               	incf	servoRotate0@i+1,f,c
   493  00FF56  5005               	movf	servoRotate0@i+1,w,c
   494  00FF58  E105               	bnz	u130
   495  00FF5A  0E28               	movlw	40
   496  00FF5C  5C04               	subwf	servoRotate0@i,w,c
   497  00FF5E  B0D8               	btfsc	status,0,c
   498  00FF60  0012               	return	
   499  00FF62  D7E9               	goto	l20
   500  00FF64                     u130:
   501  00FF64  0012               	return		;funcret
   502  00FF66                     __end_of_servoRotate0:
   503                           	opt callstack 0
   504  0000                     
   505                           	psect	rparam
   506  0000                     tosu	equ	0xFFF
   507                           tosh	equ	0xFFE
   508                           tosl	equ	0xFFD
   509                           stkptr	equ	0xFFC
   510                           pclatu	equ	0xFFB
   511                           pclath	equ	0xFFA
   512                           pcl	equ	0xFF9
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           prodh	equ	0xFF4
   518                           prodl	equ	0xFF3
   519                           indf0	equ	0xFEF
   520                           postinc0	equ	0xFEE
   521                           postdec0	equ	0xFED
   522                           preinc0	equ	0xFEC
   523                           plusw0	equ	0xFEB
   524                           fsr0h	equ	0xFEA
   525                           fsr0l	equ	0xFE9
   526                           wreg	equ	0xFE8
   527                           indf1	equ	0xFE7
   528                           postinc1	equ	0xFE6
   529                           postdec1	equ	0xFE5
   530                           preinc1	equ	0xFE4
   531                           plusw1	equ	0xFE3
   532                           fsr1h	equ	0xFE2
   533                           fsr1l	equ	0xFE1
   534                           bsr	equ	0xFE0
   535                           indf2	equ	0xFDF
   536                           postinc2	equ	0xFDE
   537                           postdec2	equ	0xFDD
   538                           preinc2	equ	0xFDC
   539                           plusw2	equ	0xFDB
   540                           fsr2h	equ	0xFDA
   541                           fsr2l	equ	0xFD9
   542                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      7       7
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_servoRotate0
    _main->_servoRotate180

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     500
                                              5 COMRAM     2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (1) _servoRotate180                                       5     3      2     212
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         5     3      2     288
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servoRotate0
   _servoRotate180

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      7       7       1        5.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 05 22:46:10 2019

                     l20 FF36                       l17 FEE6                       l26 FF76  
                     l29 FFCA              __CFG_CPD$ON 000000      servoRotate180@servo 0001  
            __CFG_BORV$3 000000            servoRotate0@i 0004             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000             __CFG_CPB$OFF 000000                      _RC1 007C11  
                    _RC2 007C12                      u110 FF24                      u130 FF64  
                    u150 FFB8                      u207 FF7C                      u217 FF8C  
                    u170 FFFE                      u227 FF9E                      u237 FFD2  
                    u247 FFE4                      u257 FEF0                      u267 FEFE  
                    u187 FE96                      u277 FF0A                      u197 FEBA  
                    u287 FF3A                      u297 FF4A                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _main FE7C  
                   start 0000            __CFG_IESO$OFF 000000          servoRotate180@i 0004  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
                  _TRISC 000F94            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  status 000FD8         ??_servoRotate180 0003           __CFG_PBADEN$ON 000000  
        __initialization FE76             __end_of_main FED6                   ??_main 0006  
          __activetblptr 000000           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
             __accesstop 0080  __end_of__initialization FE76            ___rparam_used 000001  
         __pcstackCOMRAM 0001        servoRotate0@servo 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit FE76                  __ramtop 1000  
                __ptext0 FE7C                  __ptext1 FF66                  __ptext2 FED6  
   end_of_initialization FE76            ?_servoRotate0 0001           ??_servoRotate0 0003  
__size_of_servoRotate180 009A      start_initialization FE76         __CFG_LPT1OSC$OFF 000000  
      __CFG_CCP2MX$PORTC 000000     __end_of_servoRotate0 FF66         __CFG_WDTPS$32768 000000  
         _servoRotate180 FF66                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000   __end_of_servoRotate180 0000            __size_of_main 005A  
        ?_servoRotate180 0001    __size_of_servoRotate0 0090             _servoRotate0 FED6  
