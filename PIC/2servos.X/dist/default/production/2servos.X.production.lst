

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 02:33:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4620 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _LATBbits	set	3978
    48  0000                     _TRISBbits	set	3987
    49  0000                     _TRISD	set	3989
    50  0000                     _TRISC	set	3988
    51  0000                     _TRISB	set	3987
    52  0000                     _RD0	set	31768
    53                           
    54                           ; #config settings
    55  0000                     
    56                           	psect	cinit
    57  00FF32                     __pcinit:
    58                           	opt callstack 0
    59  00FF32                     start_initialization:
    60                           	opt callstack 0
    61  00FF32                     __initialization:
    62                           	opt callstack 0
    63  00FF32                     end_of_initialization:
    64                           	opt callstack 0
    65  00FF32                     __end_of__initialization:
    66                           	opt callstack 0
    67  00FF32  0100               	movlb	0
    68  00FF34  EFDA  F07F         	goto	_main	;jump to C main() function
    69                           
    70                           	psect	cstackCOMRAM
    71  000001                     __pcstackCOMRAM:
    72                           	opt callstack 0
    73  000001                     ??_servoRotate0:
    74  000001                     ??_servoRotate180:
    75  000001                     
    76                           ; 1 bytes @ 0x0
    77  000001                     	ds	1
    78  000002                     servoRotate0@i:
    79                           	opt callstack 0
    80  000002                     servoRotate180@i:
    81                           	opt callstack 0
    82                           
    83                           ; 2 bytes @ 0x1
    84  000002                     	ds	2
    85  000004                     ??_main:
    86                           
    87                           ; 1 bytes @ 0x3
    88  000004                     	ds	2
    89                           
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 60 in file "main.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      void 
   102 ;; Registers used:
   103 ;;		wreg, status,2, status,0, cstack
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   111 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   113 ;;Total ram usage:        2 bytes
   114 ;; Hardware stack levels required when called:    1
   115 ;; This function calls:
   116 ;;		_servoRotate0
   117 ;;		_servoRotate180
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           	psect	text0
   124  00FFB4                     __ptext0:
   125                           	opt callstack 0
   126  00FFB4                     _main:
   127                           	opt callstack 30
   128                           
   129                           ;main.c: 62:   TRISB = 0;
   130                           
   131                           ;incstack = 0
   132  00FFB4  0E00               	movlw	0
   133  00FFB6  6E93               	movwf	3987,c	;volatile
   134                           
   135                           ;main.c: 63:     TRISC = 0;
   136  00FFB8  0E00               	movlw	0
   137  00FFBA  6E94               	movwf	3988,c	;volatile
   138                           
   139                           ;main.c: 64:     TRISD = 0;
   140  00FFBC  0E00               	movlw	0
   141  00FFBE  6E95               	movwf	3989,c	;volatile
   142                           
   143                           ;main.c: 66:       TRISBbits.RB0 = 0;
   144  00FFC0  9093               	bcf	3987,0,c	;volatile
   145                           
   146                           ;main.c: 67:     LATBbits.LATB0 = 1;
   147  00FFC2  808A               	bsf	3978,0,c	;volatile
   148                           
   149                           ;main.c: 69:   {;main.c: 70:     servoRotate0();
   150  00FFC4  EC9C  F07F         	call	_servoRotate0	;wreg free
   151                           
   152                           ;main.c: 71:     _delay((unsigned long)((2000)*(10000000/4000.0)));
   153  00FFC8  0E1A               	movlw	26
   154  00FFCA  6E05               	movwf	(??_main+1)& (0+255),c
   155  00FFCC  0E5E               	movlw	94
   156  00FFCE  6E04               	movwf	??_main& (0+255),c
   157  00FFD0  0E6E               	movlw	110
   158  00FFD2                     u47:
   159  00FFD2  2EE8               	decfsz	wreg,f,c
   160  00FFD4  D7FE               	bra	u47
   161  00FFD6  2E04               	decfsz	??_main& (0+255),f,c
   162  00FFD8  D7FC               	bra	u47
   163  00FFDA  2E05               	decfsz	(??_main+1)& (0+255),f,c
   164  00FFDC  D7FA               	bra	u47
   165  00FFDE  D000               	nop2	
   166                           
   167                           ;main.c: 74:     servoRotate180();
   168  00FFE0  ECBB  F07F         	call	_servoRotate180	;wreg free
   169                           
   170                           ;main.c: 75:         _delay((unsigned long)((2000)*(10000000/4000.0)));
   171  00FFE4  0E1A               	movlw	26
   172  00FFE6  6E05               	movwf	(??_main+1)& (0+255),c
   173  00FFE8  0E5E               	movlw	94
   174  00FFEA  6E04               	movwf	??_main& (0+255),c
   175  00FFEC  0E6E               	movlw	110
   176  00FFEE                     u57:
   177  00FFEE  2EE8               	decfsz	wreg,f,c
   178  00FFF0  D7FE               	bra	u57
   179  00FFF2  2E04               	decfsz	??_main& (0+255),f,c
   180  00FFF4  D7FC               	bra	u57
   181  00FFF6  2E05               	decfsz	(??_main+1)& (0+255),f,c
   182  00FFF8  D7FA               	bra	u57
   183  00FFFA  D000               	nop2	
   184  00FFFC  EF00  F000         	goto	start
   185  010000                     __end_of_main:
   186                           	opt callstack 0
   187                           
   188 ;; *************** function _servoRotate180 *****************
   189 ;; Defined at:
   190 ;;		line 42 in file "main.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;		None
   193 ;; Auto vars:     Size  Location     Type
   194 ;;  i               2    1[COMRAM] unsigned int 
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, status,2, status,0
   199 ;; Tracked objects:
   200 ;;		On entry : 0/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   208 ;;Total ram usage:        3 bytes
   209 ;; Hardware stack levels used:    1
   210 ;; This function calls:
   211 ;;		Nothing
   212 ;; This function is called by:
   213 ;;		_main
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	text1
   218  00FF76                     __ptext1:
   219                           	opt callstack 0
   220  00FF76                     _servoRotate180:
   221                           	opt callstack 30
   222                           
   223                           ;main.c: 44:   unsigned int i;;main.c: 45:   for(i=0;i<50;i++)
   224                           
   225                           ;incstack = 0
   226  00FF76  0E00               	movlw	0
   227  00FF78  6E03               	movwf	servoRotate180@i+1,c
   228  00FF7A  0E00               	movlw	0
   229  00FF7C  6E02               	movwf	servoRotate180@i,c
   230  00FF7E                     l27:
   231                           
   232                           ;main.c: 46:   {;main.c: 49:     RD0 = 1;
   233  00FF7E  8083               	bsf	3971,0,c	;volatile
   234                           
   235                           ;main.c: 51:     _delay((unsigned long)((2500)*(10000000/4000000.0)));
   236  00FF80  0E09               	movlw	9
   237  00FF82  6E01               	movwf	??_servoRotate180& (0+255),c
   238  00FF84  0E1C               	movlw	28
   239  00FF86                     u67:
   240  00FF86  2EE8               	decfsz	wreg,f,c
   241  00FF88  D7FE               	bra	u67
   242  00FF8A  2E01               	decfsz	??_servoRotate180& (0+255),f,c
   243  00FF8C  D7FC               	bra	u67
   244  00FF8E  D000               	nop2	
   245                           
   246                           ;main.c: 54:         RD0 = 0;
   247  00FF90  9083               	bcf	3971,0,c	;volatile
   248                           
   249                           ;main.c: 56:     _delay((unsigned long)((10500)*(10000000/4000000.0)));
   250  00FF92  0E23               	movlw	35
   251  00FF94  6E01               	movwf	??_servoRotate180& (0+255),c
   252  00FF96  0E16               	movlw	22
   253  00FF98                     u77:
   254  00FF98  2EE8               	decfsz	wreg,f,c
   255  00FF9A  D7FE               	bra	u77
   256  00FF9C  2E01               	decfsz	??_servoRotate180& (0+255),f,c
   257  00FF9E  D7FC               	bra	u77
   258                           
   259                           ;main.c: 57:   }
   260  00FFA0  4A02               	infsnz	servoRotate180@i,f,c
   261  00FFA2  2A03               	incf	servoRotate180@i+1,f,c
   262  00FFA4  5003               	movf	servoRotate180@i+1,w,c
   263  00FFA6  E105               	bnz	u20
   264  00FFA8  0E32               	movlw	50
   265  00FFAA  5C02               	subwf	servoRotate180@i,w,c
   266  00FFAC  B0D8               	btfsc	status,0,c
   267  00FFAE  0012               	return	
   268  00FFB0  D7E6               	goto	l27
   269  00FFB2                     u20:
   270  00FFB2  0012               	return		;funcret
   271  00FFB4                     __end_of_servoRotate180:
   272                           	opt callstack 0
   273                           
   274 ;; *************** function _servoRotate0 *****************
   275 ;; Defined at:
   276 ;;		line 8 in file "main.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  i               2    1[COMRAM] unsigned int 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   293 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   294 ;;Total ram usage:        3 bytes
   295 ;; Hardware stack levels used:    1
   296 ;; This function calls:
   297 ;;		Nothing
   298 ;; This function is called by:
   299 ;;		_main
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text2
   304  00FF38                     __ptext2:
   305                           	opt callstack 0
   306  00FF38                     _servoRotate0:
   307                           	opt callstack 30
   308                           
   309                           ;main.c: 10:   unsigned int i;;main.c: 11:   for(i=0;i<50;i++)
   310                           
   311                           ;incstack = 0
   312  00FF38  0E00               	movlw	0
   313  00FF3A  6E03               	movwf	servoRotate0@i+1,c
   314  00FF3C  0E00               	movlw	0
   315  00FF3E  6E02               	movwf	servoRotate0@i,c
   316  00FF40                     l17:
   317                           
   318                           ;main.c: 12:   {;main.c: 15:     RD0 = 1;
   319  00FF40  8083               	bsf	3971,0,c	;volatile
   320                           
   321                           ;main.c: 17:       _delay((unsigned long)((2000)*(10000000/4000000.0)));
   322  00FF42  0E07               	movlw	7
   323  00FF44  6E01               	movwf	??_servoRotate0& (0+255),c
   324  00FF46  0E7D               	movlw	125
   325  00FF48                     u87:
   326  00FF48  2EE8               	decfsz	wreg,f,c
   327  00FF4A  D7FE               	bra	u87
   328  00FF4C  2E01               	decfsz	??_servoRotate0& (0+255),f,c
   329  00FF4E  D7FC               	bra	u87
   330  00FF50  F000               	nop	
   331                           
   332                           ;main.c: 20:     RD0 = 0;
   333  00FF52  9083               	bcf	3971,0,c	;volatile
   334                           
   335                           ;main.c: 22:       _delay((unsigned long)((11000)*(10000000/4000000.0)));
   336  00FF54  0E24               	movlw	36
   337  00FF56  6E01               	movwf	??_servoRotate0& (0+255),c
   338  00FF58  0EB6               	movlw	182
   339  00FF5A                     u97:
   340  00FF5A  2EE8               	decfsz	wreg,f,c
   341  00FF5C  D7FE               	bra	u97
   342  00FF5E  2E01               	decfsz	??_servoRotate0& (0+255),f,c
   343  00FF60  D7FC               	bra	u97
   344                           
   345                           ;main.c: 23:   }
   346  00FF62  4A02               	infsnz	servoRotate0@i,f,c
   347  00FF64  2A03               	incf	servoRotate0@i+1,f,c
   348  00FF66  5003               	movf	servoRotate0@i+1,w,c
   349  00FF68  E105               	bnz	u10
   350  00FF6A  0E32               	movlw	50
   351  00FF6C  5C02               	subwf	servoRotate0@i,w,c
   352  00FF6E  B0D8               	btfsc	status,0,c
   353  00FF70  0012               	return	
   354  00FF72  D7E6               	goto	l17
   355  00FF74                     u10:
   356  00FF74  0012               	return		;funcret
   357  00FF76                     __end_of_servoRotate0:
   358                           	opt callstack 0
   359  0000                     
   360                           	psect	rparam
   361  0000                     tosu	equ	0xFFF
   362                           tosh	equ	0xFFE
   363                           tosl	equ	0xFFD
   364                           stkptr	equ	0xFFC
   365                           pclatu	equ	0xFFB
   366                           pclath	equ	0xFFA
   367                           pcl	equ	0xFF9
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           prodh	equ	0xFF4
   373                           prodl	equ	0xFF3
   374                           indf0	equ	0xFEF
   375                           postinc0	equ	0xFEE
   376                           postdec0	equ	0xFED
   377                           preinc0	equ	0xFEC
   378                           plusw0	equ	0xFEB
   379                           fsr0h	equ	0xFEA
   380                           fsr0l	equ	0xFE9
   381                           wreg	equ	0xFE8
   382                           indf1	equ	0xFE7
   383                           postinc1	equ	0xFE6
   384                           postdec1	equ	0xFE5
   385                           preinc1	equ	0xFE4
   386                           plusw1	equ	0xFE3
   387                           fsr1h	equ	0xFE2
   388                           fsr1l	equ	0xFE1
   389                           bsr	equ	0xFE0
   390                           indf2	equ	0xFDF
   391                           postinc2	equ	0xFDE
   392                           postdec2	equ	0xFDD
   393                           preinc2	equ	0xFDC
   394                           plusw2	equ	0xFDB
   395                           fsr2h	equ	0xFDA
   396                           fsr2l	equ	0xFD9
   397                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      5       5
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_servoRotate0
    _main->_servoRotate180

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              3 COMRAM     2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (1) _servoRotate180                                       3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servoRotate0
   _servoRotate180

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      5       5       1        3.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 02:33:47 2019

                     l17 FF40                       l27 FF7E                       u10 FF74  
                     u20 FFB2              __CFG_CPD$ON 000000                       u47 FFD2  
                     u57 FFEE                       u67 FF86                       u77 FF98  
                     u87 FF48                       u97 FF5A              __CFG_BORV$3 000000  
          servoRotate0@i 0002             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
           __CFG_CPB$OFF 000000                      _RD0 007C18                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _main FFB4  
                   start 0000            __CFG_IESO$OFF 000000          servoRotate180@i 0002  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
       ??_servoRotate180 0001           __CFG_PBADEN$ON 000000          __initialization FF32  
           __end_of_main 0000                   ??_main 0004            __activetblptr 000000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000               __accesstop 0080  
__end_of__initialization FF32            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit FF32  
                __ramtop 1000                  __ptext0 FFB4                  __ptext1 FF76  
                __ptext2 FF38     end_of_initialization FF32            ?_servoRotate0 0001  
              _TRISBbits 000F93           ??_servoRotate0 0001  __size_of_servoRotate180 003E  
    start_initialization FF32         __CFG_LPT1OSC$OFF 000000        __CFG_CCP2MX$PORTC 000000  
   __end_of_servoRotate0 FF76                 _LATBbits 000F8A         __CFG_WDTPS$32768 000000  
         _servoRotate180 FF76                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000   __end_of_servoRotate180 FFB4            __size_of_main 004C  
        ?_servoRotate180 0001    __size_of_servoRotate0 003E             _servoRotate0 FF38  
