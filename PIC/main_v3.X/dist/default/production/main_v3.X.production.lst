

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 04:55:48 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4620 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  003DEA                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for _dists
   121  003DEA  0000               	dw	0
   122  003DEC  FFFF               	dw	65535
   123                           
   124                           ;initializer for _send
   125  003DEE  01                 	db	1
   126                           
   127                           	psect	mediumconst
   128  00FD9C                     __pmediumconst:
   129                           	opt callstack 0
   130  00FD9C  00                 	db	0
   131  00FD9D                     _keys:
   132                           	opt callstack 0
   133  00FD9D  31                 	db	49
   134  00FD9E  32                 	db	50
   135  00FD9F  33                 	db	51
   136  00FDA0  41                 	db	65
   137  00FDA1  34                 	db	52
   138  00FDA2  35                 	db	53
   139  00FDA3  36                 	db	54
   140  00FDA4  42                 	db	66
   141  00FDA5  37                 	db	55
   142  00FDA6  38                 	db	56
   143  00FDA7  39                 	db	57
   144  00FDA8  43                 	db	67
   145  00FDA9  2A                 	db	42
   146  00FDAA  30                 	db	48
   147  00FDAB  23                 	db	35
   148  00FDAC  44                 	db	68
   149  00FDAD  00                 	db	0
   150  00FDAE                     __end_of_keys:
   151                           	opt callstack 0
   152  00FDAE  50                 	db	80
   153  00FDAF                     __end_of_LCD_LINE4_ADDR:
   154                           	opt callstack 0
   155  00FDAF  10                 	db	16
   156  00FDB0                     __end_of_LCD_LINE3_ADDR:
   157                           	opt callstack 0
   158  00FDB0                     _LCD_LINE1_ADDR:
   159                           	opt callstack 0
   160  00FDB0  00                 	db	0
   161  00FDB1                     __end_of_LCD_LINE1_ADDR:
   162                           	opt callstack 0
   163  00FDB1                     _LCD_SIZE_VERT:
   164                           	opt callstack 0
   165  00FDB1  04                 	db	4
   166  00FDB2                     __end_of_LCD_SIZE_VERT:
   167                           	opt callstack 0
   168  00FDB2                     _LCD_SIZE_HORZ:
   169                           	opt callstack 0
   170  00FDB2  10                 	db	16
   171  00FDB3                     __end_of_LCD_SIZE_HORZ:
   172                           	opt callstack 0
   173  00FDB3  40                 	db	64
   174  00FDB4                     __end_of_LCD_LINE2_ADDR:
   175                           	opt callstack 0
   176  0000                     _PORTAbits	set	3968
   177  0000                     _TRISAbits	set	3986
   178  0000                     _T1CON	set	4045
   179  0000                     _PORTB	set	3969
   180  0000                     _LATBbits	set	3978
   181  0000                     _TRISBbits	set	3987
   182  0000                     _TMR1H	set	4047
   183  0000                     _TMR1L	set	4046
   184  0000                     _LATDbits	set	3980
   185  0000                     _INTCONbits	set	4082
   186  0000                     _LATE	set	3981
   187  0000                     _TRISE	set	3990
   188  0000                     _LATC	set	3979
   189  0000                     _TRISC	set	3988
   190  0000                     _ADCON1	set	4033
   191  0000                     _TRISD	set	3989
   192  0000                     _LATD	set	3980
   193  0000                     _TRISA	set	3986
   194  0000                     _LATB	set	3978
   195  0000                     _TRISB	set	3987
   196  0000                     _LATAbits	set	3977
   197  0000                     _LATEbits	set	3981
   198  0000                     _LATCbits	set	3979
   199  0000                     _LATA	set	3977
   200  0000                     _SSPBUF	set	4041
   201  0000                     _SSPCON2bits	set	4037
   202  0000                     _SSPCON1	set	4038
   203  0000                     _SSPADD	set	4040
   204  0000                     _TRISCbits	set	3988
   205  0000                     _SSPCON1bits	set	4038
   206  0000                     _SSPCON2	set	4037
   207  0000                     _SSPSTAT	set	4039
   208  0000                     _GIE	set	32663
   209  0000                     _INT1IE	set	32643
   210  0000                     _RB2	set	31754
   211  0000                     _RB3	set	31755
   212  0000                     _RB4	set	31756
   213  0000                     _RB5	set	31757
   214  0000                     _RB6	set	31758
   215  0000                     _TMR1ON	set	32360
   216  0000                     _RB7	set	31759
   217  0000                     _INT1IF	set	32640
   218  0000                     _RBIE	set	32659
   219  0000                     _RBIF	set	32656
   220  0000                     _RD0	set	31768
   221  0000                     _RD1	set	31769
   222  0000                     _RC2	set	31762
   223  0000                     _RC1	set	31761
   224  00FDB4                     STR_40:
   225  00FDB4  50                 	db	80	;'P'
   226  00FDB5  25                 	db	37
   227  00FDB6  64                 	db	100	;'d'
   228  00FDB7  20                 	db	32
   229  00FDB8  44                 	db	68	;'D'
   230  00FDB9  65                 	db	101	;'e'
   231  00FDBA  70                 	db	112	;'p'
   232  00FDBB  3A                 	db	58	;':'
   233  00FDBC  25                 	db	37
   234  00FDBD  64                 	db	100	;'d'
   235  00FDBE  2C                 	db	44
   236  00FDBF  54                 	db	84	;'T'
   237  00FDC0  6F                 	db	111	;'o'
   238  00FDC1  74                 	db	116	;'t'
   239  00FDC2  3A                 	db	58	;':'
   240  00FDC3  25                 	db	37
   241  00FDC4  64                 	db	100	;'d'
   242  00FDC5  00                 	db	0
   243  00FDC6                     STR_30:
   244  00FDC6  20                 	db	32
   245  00FDC7  20                 	db	32
   246  00FDC8  20                 	db	32
   247  00FDC9  20                 	db	32
   248  00FDCA  20                 	db	32
   249  00FDCB  30                 	db	48	;'0'
   250  00FDCC  2D                 	db	45
   251  00FDCD  4D                 	db	77	;'M'
   252  00FDCE  65                 	db	101	;'e'
   253  00FDCF  6E                 	db	110	;'n'
   254  00FDD0  75                 	db	117	;'u'
   255  00FDD1  20                 	db	32
   256  00FDD2  20                 	db	32
   257  00FDD3  20                 	db	32
   258  00FDD4  20                 	db	32
   259  00FDD5  20                 	db	32
   260  00FDD6  00                 	db	0
   261  00FDD7                     STR_47:
   262  00FDD7  3C                 	db	60	;'<'
   263  00FDD8  2A                 	db	42
   264  00FDD9  20                 	db	32
   265  00FDDA  20                 	db	32
   266  00FDDB  20                 	db	32
   267  00FDDC  30                 	db	48	;'0'
   268  00FDDD  2D                 	db	45
   269  00FDDE  4D                 	db	77	;'M'
   270  00FDDF  65                 	db	101	;'e'
   271  00FDE0  6E                 	db	110	;'n'
   272  00FDE1  75                 	db	117	;'u'
   273  00FDE2  20                 	db	32
   274  00FDE3  20                 	db	32
   275  00FDE4  20                 	db	32
   276  00FDE5  20                 	db	32
   277  00FDE6  20                 	db	32
   278  00FDE7  00                 	db	0
   279  00FDE8                     STR_10:
   280  00FDE8  44                 	db	68	;'D'
   281  00FDE9  69                 	db	105	;'i'
   282  00FDEA  73                 	db	115	;'s'
   283  00FDEB  74                 	db	116	;'t'
   284  00FDEC  31                 	db	49	;'1'
   285  00FDED  3D                 	db	61	;'='
   286  00FDEE  25                 	db	37
   287  00FDEF  64                 	db	100	;'d'
   288  00FDF0  2C                 	db	44
   289  00FDF1  41                 	db	65	;'A'
   290  00FDF2  76                 	db	118	;'v'
   291  00FDF3  67                 	db	103	;'g'
   292  00FDF4  3D                 	db	61	;'='
   293  00FDF5  25                 	db	37
   294  00FDF6  64                 	db	100	;'d'
   295  00FDF7  20                 	db	32
   296  00FDF8  00                 	db	0
   297  00FDF9                     STR_16:
   298  00FDF9  44                 	db	68	;'D'
   299  00FDFA  69                 	db	105	;'i'
   300  00FDFB  73                 	db	115	;'s'
   301  00FDFC  74                 	db	116	;'t'
   302  00FDFD  34                 	db	52	;'4'
   303  00FDFE  3D                 	db	61	;'='
   304  00FDFF  25                 	db	37
   305  00FE00  64                 	db	100	;'d'
   306  00FE01  2C                 	db	44
   307  00FE02  41                 	db	65	;'A'
   308  00FE03  76                 	db	118	;'v'
   309  00FE04  67                 	db	103	;'g'
   310  00FE05  3D                 	db	61	;'='
   311  00FE06  25                 	db	37
   312  00FE07  64                 	db	100	;'d'
   313  00FE08  20                 	db	32
   314  00FE09  00                 	db	0
   315  00FE0A                     STR_36:
   316  00FE0A  20                 	db	32
   317  00FE0B  20                 	db	32
   318  00FE0C  20                 	db	32
   319  00FE0D  20                 	db	32
   320  00FE0E  20                 	db	32
   321  00FE0F  30                 	db	48	;'0'
   322  00FE10  2D                 	db	45
   323  00FE11  4D                 	db	77	;'M'
   324  00FE12  65                 	db	101	;'e'
   325  00FE13  6E                 	db	110	;'n'
   326  00FE14  75                 	db	117	;'u'
   327  00FE15  20                 	db	32
   328  00FE16  20                 	db	32
   329  00FE17  20                 	db	32
   330  00FE18  23                 	db	35
   331  00FE19  3E                 	db	62	;'>'
   332  00FE1A  00                 	db	0
   333  00FE1B                     STR_39:
   334  00FE1B  3C                 	db	60	;'<'
   335  00FE1C  2A                 	db	42
   336  00FE1D  20                 	db	32
   337  00FE1E  20                 	db	32
   338  00FE1F  20                 	db	32
   339  00FE20  30                 	db	48	;'0'
   340  00FE21  2D                 	db	45
   341  00FE22  4D                 	db	77	;'M'
   342  00FE23  65                 	db	101	;'e'
   343  00FE24  6E                 	db	110	;'n'
   344  00FE25  75                 	db	117	;'u'
   345  00FE26  20                 	db	32
   346  00FE27  20                 	db	32
   347  00FE28  20                 	db	32
   348  00FE29  23                 	db	35
   349  00FE2A  3E                 	db	62	;'>'
   350  00FE2B  00                 	db	0
   351  00FE2C                     STR_58:
   352  00FE2C  64                 	db	100	;'d'
   353  00FE2D  69                 	db	105	;'i'
   354  00FE2E  73                 	db	115	;'s'
   355  00FE2F  74                 	db	116	;'t'
   356  00FE30  20                 	db	32
   357  00FE31  70                 	db	112	;'p'
   358  00FE32  5B                 	db	91	;'['
   359  00FE33  25                 	db	37
   360  00FE34  64                 	db	100	;'d'
   361  00FE35  5D                 	db	93	;']'
   362  00FE36  3A                 	db	58	;':'
   363  00FE37  25                 	db	37
   364  00FE38  64                 	db	100	;'d'
   365  00FE39  2C                 	db	44
   366  00FE3A  25                 	db	37
   367  00FE3B  64                 	db	100	;'d'
   368  00FE3C  00                 	db	0
   369  00FE3D                     STR_22:
   370  00FE3D  64                 	db	100	;'d'
   371  00FE3E  65                 	db	101	;'e'
   372  00FE3F  74                 	db	116	;'t'
   373  00FE40  2C                 	db	44
   374  00FE41  25                 	db	37
   375  00FE42  64                 	db	100	;'d'
   376  00FE43  2C                 	db	44
   377  00FE44  20                 	db	32
   378  00FE45  74                 	db	116	;'t'
   379  00FE46  63                 	db	99	;'c'
   380  00FE47  6E                 	db	110	;'n'
   381  00FE48  74                 	db	116	;'t'
   382  00FE49  20                 	db	32
   383  00FE4A  25                 	db	37
   384  00FE4B  64                 	db	100	;'d'
   385  00FE4C  00                 	db	0
   386  00FE4D                     STR_12:
   387  00FE4D  44                 	db	68	;'D'
   388  00FE4E  69                 	db	105	;'i'
   389  00FE4F  73                 	db	115	;'s'
   390  00FE50  74                 	db	116	;'t'
   391  00FE51  32                 	db	50	;'2'
   392  00FE52  3D                 	db	61	;'='
   393  00FE53  25                 	db	37
   394  00FE54  64                 	db	100	;'d'
   395  00FE55  2C                 	db	44
   396  00FE56  41                 	db	65	;'A'
   397  00FE57  76                 	db	118	;'v'
   398  00FE58  67                 	db	103	;'g'
   399  00FE59  3D                 	db	61	;'='
   400  00FE5A  25                 	db	37
   401  00FE5B  64                 	db	100	;'d'
   402  00FE5C  00                 	db	0
   403  00FE5D                     STR_14:
   404  00FE5D  44                 	db	68	;'D'
   405  00FE5E  69                 	db	105	;'i'
   406  00FE5F  73                 	db	115	;'s'
   407  00FE60  74                 	db	116	;'t'
   408  00FE61  33                 	db	51	;'3'
   409  00FE62  3D                 	db	61	;'='
   410  00FE63  25                 	db	37
   411  00FE64  64                 	db	100	;'d'
   412  00FE65  2C                 	db	44
   413  00FE66  41                 	db	65	;'A'
   414  00FE67  76                 	db	118	;'v'
   415  00FE68  67                 	db	103	;'g'
   416  00FE69  3D                 	db	61	;'='
   417  00FE6A  25                 	db	37
   418  00FE6B  64                 	db	100	;'d'
   419  00FE6C  00                 	db	0
   420  00FE6D                     STR_25:
   421  00FE6D  33                 	db	51	;'3'
   422  00FE6E  20                 	db	32
   423  00FE6F  2D                 	db	45
   424  00FE70  20                 	db	32
   425  00FE71  44                 	db	68	;'D'
   426  00FE72  61                 	db	97	;'a'
   427  00FE73  74                 	db	116	;'t'
   428  00FE74  65                 	db	101	;'e'
   429  00FE75  26                 	db	38
   430  00FE76  54                 	db	84	;'T'
   431  00FE77  69                 	db	105	;'i'
   432  00FE78  6D                 	db	109	;'m'
   433  00FE79  65                 	db	101	;'e'
   434  00FE7A  20                 	db	32
   435  00FE7B  00                 	db	0
   436  00FE7C                     STR_41:
   437  00FE7C  44                 	db	68	;'D'
   438  00FE7D  69                 	db	105	;'i'
   439  00FE7E  73                 	db	115	;'s'
   440  00FE7F  74                 	db	116	;'t'
   441  00FE80  54                 	db	84	;'T'
   442  00FE81  6F                 	db	111	;'o'
   443  00FE82  53                 	db	83	;'S'
   444  00FE83  74                 	db	116	;'t'
   445  00FE84  61                 	db	97	;'a'
   446  00FE85  72                 	db	114	;'r'
   447  00FE86  74                 	db	116	;'t'
   448  00FE87  3A                 	db	58	;':'
   449  00FE88  25                 	db	37
   450  00FE89  64                 	db	100	;'d'
   451  00FE8A  00                 	db	0
   452  00FE8B                     STR_29:
   453  00FE8B  4D                 	db	77	;'M'
   454  00FE8C  61                 	db	97	;'a'
   455  00FE8D  63                 	db	99	;'c'
   456  00FE8E  68                 	db	104	;'h'
   457  00FE8F  69                 	db	105	;'i'
   458  00FE90  6E                 	db	110	;'n'
   459  00FE91  65                 	db	101	;'e'
   460  00FE92  20                 	db	32
   461  00FE93  49                 	db	73	;'I'
   462  00FE94  6E                 	db	110	;'n'
   463  00FE95  20                 	db	32
   464  00FE96  55                 	db	85	;'U'
   465  00FE97  73                 	db	115	;'s'
   466  00FE98  65                 	db	101	;'e'
   467  00FE99  00                 	db	0
   468  00FE9A                     STR_49:
   469  00FE9A  25                 	db	37
   470  00FE9B  30                 	db	48	;'0'
   471  00FE9C  32                 	db	50	;'2'
   472  00FE9D  78                 	db	120	;'x'
   473  00FE9E  2F                 	db	47
   474  00FE9F  25                 	db	37
   475  00FEA0  30                 	db	48	;'0'
   476  00FEA1  32                 	db	50	;'2'
   477  00FEA2  78                 	db	120	;'x'
   478  00FEA3  2F                 	db	47
   479  00FEA4  25                 	db	37
   480  00FEA5  30                 	db	48	;'0'
   481  00FEA6  32                 	db	50	;'2'
   482  00FEA7  78                 	db	120	;'x'
   483  00FEA8  00                 	db	0
   484  00FEA9                     STR_50:
   485  00FEA9  25                 	db	37
   486  00FEAA  30                 	db	48	;'0'
   487  00FEAB  32                 	db	50	;'2'
   488  00FEAC  78                 	db	120	;'x'
   489  00FEAD  3A                 	db	58	;':'
   490  00FEAE  25                 	db	37
   491  00FEAF  30                 	db	48	;'0'
   492  00FEB0  32                 	db	50	;'2'
   493  00FEB1  78                 	db	120	;'x'
   494  00FEB2  3A                 	db	58	;':'
   495  00FEB3  25                 	db	37
   496  00FEB4  30                 	db	48	;'0'
   497  00FEB5  32                 	db	50	;'2'
   498  00FEB6  78                 	db	120	;'x'
   499  00FEB7  00                 	db	0
   500  00FEB8                     STR_59:
   501  00FEB8  70                 	db	112	;'p'
   502  00FEB9  5B                 	db	91	;'['
   503  00FEBA  25                 	db	37
   504  00FEBB  64                 	db	100	;'d'
   505  00FEBC  5D                 	db	93	;']'
   506  00FEBD  20                 	db	32
   507  00FEBE  66                 	db	102	;'f'
   508  00FEBF  73                 	db	115	;'s'
   509  00FEC0  20                 	db	32
   510  00FEC1  3A                 	db	58	;':'
   511  00FEC2  20                 	db	32
   512  00FEC3  25                 	db	37
   513  00FEC4  64                 	db	100	;'d'
   514  00FEC5  00                 	db	0
   515  00FEC6                     STR_38:
   516  00FEC6  4E                 	db	78	;'N'
   517  00FEC7  6F                 	db	111	;'o'
   518  00FEC8  2E                 	db	46
   519  00FEC9  20                 	db	32
   520  00FECA  50                 	db	80	;'P'
   521  00FECB  6F                 	db	111	;'o'
   522  00FECC  6C                 	db	108	;'l'
   523  00FECD  65                 	db	101	;'e'
   524  00FECE  73                 	db	115	;'s'
   525  00FECF  3A                 	db	58	;':'
   526  00FED0  20                 	db	32
   527  00FED1  25                 	db	37
   528  00FED2  64                 	db	100	;'d'
   529  00FED3  00                 	db	0
   530  00FED4                     STR_37:
   531  00FED4  4E                 	db	78	;'N'
   532  00FED5  6F                 	db	111	;'o'
   533  00FED6  2E                 	db	46
   534  00FED7  20                 	db	32
   535  00FED8  54                 	db	84	;'T'
   536  00FED9  69                 	db	105	;'i'
   537  00FEDA  72                 	db	114	;'r'
   538  00FEDB  65                 	db	101	;'e'
   539  00FEDC  73                 	db	115	;'s'
   540  00FEDD  3A                 	db	58	;':'
   541  00FEDE  20                 	db	32
   542  00FEDF  25                 	db	37
   543  00FEE0  64                 	db	100	;'d'
   544  00FEE1  00                 	db	0
   545  00FEE2                     STR_7:
   546  00FEE2  53                 	db	83	;'S'
   547  00FEE3  74                 	db	116	;'t'
   548  00FEE4  65                 	db	101	;'e'
   549  00FEE5  70                 	db	112	;'p'
   550  00FEE6  20                 	db	32
   551  00FEE7  73                 	db	115	;'s'
   552  00FEE8  70                 	db	112	;'p'
   553  00FEE9  65                 	db	101	;'e'
   554  00FEEA  65                 	db	101	;'e'
   555  00FEEB  64                 	db	100	;'d'
   556  00FEEC  20                 	db	32
   557  00FEED  25                 	db	37
   558  00FEEE  64                 	db	100	;'d'
   559  00FEEF  00                 	db	0
   560  00FEF0                     STR_19:
   561  00FEF0  62                 	db	98	;'b'
   562  00FEF1  72                 	db	114	;'r'
   563  00FEF2  65                 	db	101	;'e'
   564  00FEF3  61                 	db	97	;'a'
   565  00FEF4  6B                 	db	107	;'k'
   566  00FEF5  20                 	db	32
   567  00FEF6  68                 	db	104	;'h'
   568  00FEF7  65                 	db	101	;'e'
   569  00FEF8  72                 	db	114	;'r'
   570  00FEF9  65                 	db	101	;'e'
   571  00FEFA  65                 	db	101	;'e'
   572  00FEFB  3F                 	db	63	;'?'
   573  00FEFC  00                 	db	0
   574  00FEFD                     STR_54:
   575  00FEFD  6D                 	db	109	;'m'
   576  00FEFE  6F                 	db	111	;'o'
   577  00FEFF  72                 	db	114	;'r'
   578  00FF00  65                 	db	101	;'e'
   579  00FF01  20                 	db	32
   580  00FF02  77                 	db	119	;'w'
   581  00FF03  61                 	db	97	;'a'
   582  00FF04  69                 	db	105	;'i'
   583  00FF05  74                 	db	116	;'t'
   584  00FF06  69                 	db	105	;'i'
   585  00FF07  6E                 	db	110	;'n'
   586  00FF08  67                 	db	103	;'g'
   587  00FF09  00                 	db	0
   588  00FF0A                     STR_2:
   589  00FF0A  53                 	db	83	;'S'
   590  00FF0B  74                 	db	116	;'t'
   591  00FF0C  65                 	db	101	;'e'
   592  00FF0D  70                 	db	112	;'p'
   593  00FF0E  70                 	db	112	;'p'
   594  00FF0F  65                 	db	101	;'e'
   595  00FF10  72                 	db	114	;'r'
   596  00FF11  20                 	db	32
   597  00FF12  64                 	db	100	;'d'
   598  00FF13  6F                 	db	111	;'o'
   599  00FF14  6E                 	db	110	;'n'
   600  00FF15  65                 	db	101	;'e'
   601  00FF16  00                 	db	0
   602  00FF17                     STR_48:
   603  00FF17  44                 	db	68	;'D'
   604  00FF18  41                 	db	65	;'A'
   605  00FF19  54                 	db	84	;'T'
   606  00FF1A  45                 	db	69	;'E'
   607  00FF1B  20                 	db	32
   608  00FF1C  26                 	db	38
   609  00FF1D  20                 	db	32
   610  00FF1E  54                 	db	84	;'T'
   611  00FF1F  49                 	db	73	;'I'
   612  00FF20  4D                 	db	77	;'M'
   613  00FF21  45                 	db	69	;'E'
   614  00FF22  00                 	db	0
   615  00FF23                     STR_21:
   616  00FF23  73                 	db	115	;'s'
   617  00FF24  74                 	db	116	;'t'
   618  00FF25  65                 	db	101	;'e'
   619  00FF26  70                 	db	112	;'p'
   620  00FF27  73                 	db	115	;'s'
   621  00FF28  61                 	db	97	;'a'
   622  00FF29  64                 	db	100	;'d'
   623  00FF2A  6A                 	db	106	;'j'
   624  00FF2B  20                 	db	32
   625  00FF2C  25                 	db	37
   626  00FF2D  64                 	db	100	;'d'
   627  00FF2E  00                 	db	0
   628  00FF2F                     STR_60:
   629  00FF2F  61                 	db	97	;'a'
   630  00FF30  76                 	db	118	;'v'
   631  00FF31  67                 	db	103	;'g'
   632  00FF32  20                 	db	32
   633  00FF33  64                 	db	100	;'d'
   634  00FF34  69                 	db	105	;'i'
   635  00FF35  73                 	db	115	;'s'
   636  00FF36  74                 	db	116	;'t'
   637  00FF37  20                 	db	32
   638  00FF38  25                 	db	37
   639  00FF39  64                 	db	100	;'d'
   640  00FF3A  00                 	db	0
   641  00FF3B                     STR_42:
   642  00FF3B  44                 	db	68	;'D'
   643  00FF3C  69                 	db	105	;'i'
   644  00FF3D  73                 	db	115	;'s'
   645  00FF3E  74                 	db	116	;'t'
   646  00FF3F  54                 	db	84	;'T'
   647  00FF40  6F                 	db	111	;'o'
   648  00FF41  43                 	db	67	;'C'
   649  00FF42  4C                 	db	76	;'L'
   650  00FF43  3A                 	db	58	;':'
   651  00FF44  25                 	db	37
   652  00FF45  64                 	db	100	;'d'
   653  00FF46  00                 	db	0
   654  00FF47                     STR_24:
   655  00FF47  32                 	db	50	;'2'
   656  00FF48  20                 	db	32
   657  00FF49  2D                 	db	45
   658  00FF4A  20                 	db	32
   659  00FF4B  53                 	db	83	;'S'
   660  00FF4C  75                 	db	117	;'u'
   661  00FF4D  6D                 	db	109	;'m'
   662  00FF4E  6D                 	db	109	;'m'
   663  00FF4F  61                 	db	97	;'a'
   664  00FF50  72                 	db	114	;'r'
   665  00FF51  79                 	db	121	;'y'
   666  00FF52  00                 	db	0
   667  00FF53                     STR_61:
   668  00FF53  70                 	db	112	;'p'
   669  00FF54  6F                 	db	111	;'o'
   670  00FF55  6C                 	db	108	;'l'
   671  00FF56  65                 	db	101	;'e'
   672  00FF57  73                 	db	115	;'s'
   673  00FF58  20                 	db	32
   674  00FF59  64                 	db	100	;'d'
   675  00FF5A  20                 	db	32
   676  00FF5B  25                 	db	37
   677  00FF5C  64                 	db	100	;'d'
   678  00FF5D  00                 	db	0
   679  00FF5E                     STR_20:
   680  00FF5E  6D                 	db	109	;'m'
   681  00FF5F  69                 	db	105	;'i'
   682  00FF60  6E                 	db	110	;'n'
   683  00FF61  69                 	db	105	;'i'
   684  00FF62  6D                 	db	109	;'m'
   685  00FF63  75                 	db	117	;'u'
   686  00FF64  6D                 	db	109	;'m'
   687  00FF65  20                 	db	32
   688  00FF66  25                 	db	37
   689  00FF67  64                 	db	100	;'d'
   690  00FF68  00                 	db	0
   691  00FF69                     STR_62:
   692  00FF69  70                 	db	112	;'p'
   693  00FF6A  6F                 	db	111	;'o'
   694  00FF6B  6C                 	db	108	;'l'
   695  00FF6C  65                 	db	101	;'e'
   696  00FF6D  73                 	db	115	;'s'
   697  00FF6E  20                 	db	32
   698  00FF6F  64                 	db	100	;'d'
   699  00FF70  6F                 	db	111	;'o'
   700  00FF71  6E                 	db	110	;'n'
   701  00FF72  65                 	db	101	;'e'
   702  00FF73  00                 	db	0
   703  00FF74                     STR_3:
   704  00FF74  53                 	db	83	;'S'
   705  00FF75  65                 	db	101	;'e'
   706  00FF76  72                 	db	114	;'r'
   707  00FF77  76                 	db	118	;'v'
   708  00FF78  6F                 	db	111	;'o'
   709  00FF79  20                 	db	32
   710  00FF7A  64                 	db	100	;'d'
   711  00FF7B  6F                 	db	111	;'o'
   712  00FF7C  6E                 	db	110	;'n'
   713  00FF7D  65                 	db	101	;'e'
   714  00FF7E  00                 	db	0
   715  00FF7F                     STR_11:
   716  00FF7F  44                 	db	68	;'D'
   717  00FF80  69                 	db	105	;'i'
   718  00FF81  73                 	db	115	;'s'
   719  00FF82  74                 	db	116	;'t'
   720  00FF83  31                 	db	49	;'1'
   721  00FF84  20                 	db	32
   722  00FF85  3D                 	db	61	;'='
   723  00FF86  20                 	db	32
   724  00FF87  58                 	db	88	;'X'
   725  00FF88  00                 	db	0
   726  00FF89                     STR_13:
   727  00FF89  44                 	db	68	;'D'
   728  00FF8A  69                 	db	105	;'i'
   729  00FF8B  73                 	db	115	;'s'
   730  00FF8C  74                 	db	116	;'t'
   731  00FF8D  32                 	db	50	;'2'
   732  00FF8E  20                 	db	32
   733  00FF8F  3D                 	db	61	;'='
   734  00FF90  20                 	db	32
   735  00FF91  58                 	db	88	;'X'
   736  00FF92  00                 	db	0
   737  00FF93                     STR_15:
   738  00FF93  44                 	db	68	;'D'
   739  00FF94  69                 	db	105	;'i'
   740  00FF95  73                 	db	115	;'s'
   741  00FF96  74                 	db	116	;'t'
   742  00FF97  33                 	db	51	;'3'
   743  00FF98  20                 	db	32
   744  00FF99  3D                 	db	61	;'='
   745  00FF9A  20                 	db	32
   746  00FF9B  58                 	db	88	;'X'
   747  00FF9C  00                 	db	0
   748  00FF9D                     STR_17:
   749  00FF9D  44                 	db	68	;'D'
   750  00FF9E  69                 	db	105	;'i'
   751  00FF9F  73                 	db	115	;'s'
   752  00FFA0  74                 	db	116	;'t'
   753  00FFA1  34                 	db	52	;'4'
   754  00FFA2  20                 	db	32
   755  00FFA3  3D                 	db	61	;'='
   756  00FFA4  20                 	db	32
   757  00FFA5  58                 	db	88	;'X'
   758  00FFA6  00                 	db	0
   759  00FFA7                     STR_56:
   760  00FFA7  64                 	db	100	;'d'
   761  00FFA8  75                 	db	117	;'u'
   762  00FFA9  6E                 	db	110	;'n'
   763  00FFAA  20                 	db	32
   764  00FFAB  62                 	db	98	;'b'
   765  00FFAC  72                 	db	114	;'r'
   766  00FFAD  65                 	db	101	;'e'
   767  00FFAE  61                 	db	97	;'a'
   768  00FFAF  6B                 	db	107	;'k'
   769  00FFB0  00                 	db	0
   770  00FFB1                     STR_63:
   771  00FFB1  62                 	db	98	;'b'
   772  00FFB2  61                 	db	97	;'a'
   773  00FFB3  63                 	db	99	;'c'
   774  00FFB4  6B                 	db	107	;'k'
   775  00FFB5  77                 	db	119	;'w'
   776  00FFB6  61                 	db	97	;'a'
   777  00FFB7  72                 	db	114	;'r'
   778  00FFB8  64                 	db	100	;'d'
   779  00FFB9  73                 	db	115	;'s'
   780  00FFBA  00                 	db	0
   781  00FFBB                     STR_55:
   782  00FFBB  64                 	db	100	;'d'
   783  00FFBC  6F                 	db	111	;'o'
   784  00FFBD  6E                 	db	110	;'n'
   785  00FFBE  65                 	db	101	;'e'
   786  00FFBF  20                 	db	32
   787  00FFC0  77                 	db	119	;'w'
   788  00FFC1  61                 	db	97	;'a'
   789  00FFC2  69                 	db	105	;'i'
   790  00FFC3  74                 	db	116	;'t'
   791  00FFC4  00                 	db	0
   792  00FFC5                     STR_23:
   793  00FFC5  31                 	db	49	;'1'
   794  00FFC6  20                 	db	32
   795  00FFC7  2D                 	db	45
   796  00FFC8  20                 	db	32
   797  00FFC9  53                 	db	83	;'S'
   798  00FFCA  74                 	db	116	;'t'
   799  00FFCB  61                 	db	97	;'a'
   800  00FFCC  72                 	db	114	;'r'
   801  00FFCD  74                 	db	116	;'t'
   802  00FFCE  00                 	db	0
   803  00FFCF                     STR_5:
   804  00FFCF  73                 	db	115	;'s'
   805  00FFD0  74                 	db	116	;'t'
   806  00FFD1  65                 	db	101	;'e'
   807  00FFD2  70                 	db	112	;'p'
   808  00FFD3  70                 	db	112	;'p'
   809  00FFD4  70                 	db	112	;'p'
   810  00FFD5  20                 	db	32
   811  00FFD6  25                 	db	37
   812  00FFD7  64                 	db	100	;'d'
   813  00FFD8  00                 	db	0
   814  00FFD9                     STR_1:
   815  00FFD9  63                 	db	99	;'c'
   816  00FFDA  6E                 	db	110	;'n'
   817  00FFDB  74                 	db	116	;'t'
   818  00FFDC  20                 	db	32
   819  00FFDD  69                 	db	105	;'i'
   820  00FFDE  73                 	db	115	;'s'
   821  00FFDF  20                 	db	32
   822  00FFE0  25                 	db	37
   823  00FFE1  64                 	db	100	;'d'
   824  00FFE2  00                 	db	0
   825  00FFE3                     STR_31:
   826  00FFE3  4F                 	db	79	;'O'
   827  00FFE4  70                 	db	112	;'p'
   828  00FFE5  20                 	db	32
   829  00FFE6  54                 	db	84	;'T'
   830  00FFE7  69                 	db	105	;'i'
   831  00FFE8  6D                 	db	109	;'m'
   832  00FFE9  65                 	db	101	;'e'
   833  00FFEA  3A                 	db	58	;':'
   834  00FFEB  00                 	db	0
   835  00FFEC                     STR_18:
   836  00FFEC  6F                 	db	111	;'o'
   837  00FFED  72                 	db	114	;'r'
   838  00FFEE  20                 	db	32
   839  00FFEF  68                 	db	104	;'h'
   840  00FFF0  65                 	db	101	;'e'
   841  00FFF1  72                 	db	114	;'r'
   842  00FFF2  65                 	db	101	;'e'
   843  00FFF3  00                 	db	0
   844  00FFF4                     STR_6:
   845  00FFF4  73                 	db	115	;'s'
   846  00FFF5  74                 	db	116	;'t'
   847  00FFF6  65                 	db	101	;'e'
   848  00FFF7  70                 	db	112	;'p'
   849  00FFF8  31                 	db	49	;'1'
   850  00FFF9  00                 	db	0
   851  00FFFA                     STR_9:
   852  00FFFA  77                 	db	119	;'w'
   853  00FFFB  68                 	db	104	;'h'
   854  00FFFC  61                 	db	97	;'a'
   855  00FFFD  74                 	db	116	;'t'
   856  00FFFE  00                 	db	0
   857  0000                     
   858                           ; #config settings
   859  00FFFF  00                 	db	0	; dummy byte at the end
   860  0000                     
   861                           	psect	cinit
   862  003938                     __pcinit:
   863                           	opt callstack 0
   864  003938                     start_initialization:
   865                           	opt callstack 0
   866  003938                     __initialization:
   867                           	opt callstack 0
   868                           
   869                           ; Initialize objects allocated to COMRAM (5 bytes)
   870                           ; load TBLPTR registers with __pidataCOMRAM
   871  003938  0EEA               	movlw	low __pidataCOMRAM
   872  00393A  6EF6               	movwf	tblptrl,c
   873  00393C  0E3D               	movlw	high __pidataCOMRAM
   874  00393E  6EF7               	movwf	tblptrh,c
   875  003940  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   876  003942  6EF8               	movwf	tblptru,c
   877  003944  EE00  F069         	lfsr	0,__pdataCOMRAM
   878  003948  EE10 F005          	lfsr	1,5
   879  00394C                     copy_data0:
   880  00394C  0009               	tblrd		*+
   881  00394E  CFF5 FFEE          	movff	tablat,postinc0
   882  003952  50E5               	movf	postdec1,w,c
   883  003954  50E1               	movf	fsr1l,w,c
   884  003956  E1FA               	bnz	copy_data0
   885                           
   886                           ; Clear objects allocated to BANK2 (160 bytes)
   887  003958  EE02  F000         	lfsr	0,__pbssBANK2
   888  00395C  0EA0               	movlw	160
   889  00395E                     clear_0:
   890  00395E  6AEE               	clrf	postinc0,c
   891  003960  06E8               	decf	wreg,f,c
   892  003962  E1FD               	bnz	clear_0
   893                           
   894                           ; Clear objects allocated to BANK1 (28 bytes)
   895  003964  EE01  F0CA         	lfsr	0,__pbssBANK1
   896  003968  0E1C               	movlw	28
   897  00396A                     clear_1:
   898  00396A  6AEE               	clrf	postinc0,c
   899  00396C  06E8               	decf	wreg,f,c
   900  00396E  E1FD               	bnz	clear_1
   901                           
   902                           ; Clear objects allocated to BANK0 (1 bytes)
   903  003970  0100               	movlb	0
   904  003972  6BFF               	clrf	__pbssBANK0& (0+255),b
   905                           
   906                           ; Clear objects allocated to COMRAM (49 bytes)
   907  003974  EE00  F038         	lfsr	0,__pbssCOMRAM
   908  003978  0E31               	movlw	49
   909  00397A                     clear_2:
   910  00397A  6AEE               	clrf	postinc0,c
   911  00397C  06E8               	decf	wreg,f,c
   912  00397E  E1FD               	bnz	clear_2
   913  003980                     end_of_initialization:
   914                           	opt callstack 0
   915  003980                     __end_of__initialization:
   916                           	opt callstack 0
   917  003980  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   918  003982  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   919  003984  0E00               	movlw	low (__Lmediumconst shr (0+16))
   920  003986  6EF8               	movwf	tblptru,c
   921  003988  0100               	movlb	0
   922  00398A  EF13  F004         	goto	_main	;jump to C main() function
   923                           
   924                           	psect	bssCOMRAM
   925  000038                     __pbssCOMRAM:
   926                           	opt callstack 0
   927  000038                     _sum:
   928                           	opt callstack 0
   929  000038                     	ds	8
   930  000040                     _sumf:
   931                           	opt callstack 0
   932  000040                     	ds	4
   933  000044                     _avg_dist:
   934                           	opt callstack 0
   935  000044                     	ds	4
   936  000048                     _nout:
   937                           	opt callstack 0
   938  000048                     	ds	2
   939  00004A                     _width:
   940                           	opt callstack 0
   941  00004A                     	ds	2
   942  00004C                     _prec:
   943                           	opt callstack 0
   944  00004C                     	ds	2
   945  00004E                     _flags:
   946                           	opt callstack 0
   947  00004E                     	ds	2
   948  000050                     _meas:
   949                           	opt callstack 0
   950  000050                     	ds	2
   951  000052                     _poles_detected:
   952                           	opt callstack 0
   953  000052                     	ds	2
   954  000054                     _tires_deployed:
   955                           	opt callstack 0
   956  000054                     	ds	2
   957  000056                     _tick:
   958                           	opt callstack 0
   959  000056                     	ds	2
   960  000058                     _sens:
   961                           	opt callstack 0
   962  000058                     	ds	2
   963  00005A                     _b:
   964                           	opt callstack 0
   965  00005A                     	ds	2
   966  00005C                     _timer_count:
   967                           	opt callstack 0
   968  00005C                     	ds	2
   969  00005E                     _data:
   970                           	opt callstack 0
   971  00005E                     	ds	1
   972  00005F                     _keypress:
   973                           	opt callstack 0
   974  00005F                     	ds	1
   975  000060                     _counter:
   976                           	opt callstack 0
   977  000060                     	ds	1
   978  000061                     _a:
   979                           	opt callstack 0
   980  000061                     	ds	8
   981                           
   982                           	psect	dataCOMRAM
   983  000069                     __pdataCOMRAM:
   984                           	opt callstack 0
   985  000069                     _dists:
   986                           	opt callstack 0
   987  000069                     	ds	4
   988  00006D                     _send:
   989                           	opt callstack 0
   990  00006D                     	ds	1
   991                           
   992                           	psect	bssBANK0
   993  0000FF                     __pbssBANK0:
   994                           	opt callstack 0
   995  0000FF                     _temp:
   996                           	opt callstack 0
   997  0000FF                     	ds	1
   998                           
   999                           	psect	bssBANK1
  1000  0001CA                     __pbssBANK1:
  1001                           	opt callstack 0
  1002  0001CA                     _prev_dist_final:
  1003                           	opt callstack 0
  1004  0001CA                     	ds	8
  1005  0001D2                     _time:
  1006                           	opt callstack 0
  1007  0001D2                     	ds	7
  1008  0001D9                     _pressed:
  1009                           	opt callstack 0
  1010  0001D9                     	ds	2
  1011  0001DB                     _i:
  1012                           	opt callstack 0
  1013  0001DB                     	ds	2
  1014  0001DD                     _disp:
  1015                           	opt callstack 0
  1016  0001DD                     	ds	2
  1017  0001DF                     _state:
  1018                           	opt callstack 0
  1019  0001DF                     	ds	2
  1020  0001E1                     _temp_int:
  1021                           	opt callstack 0
  1022  0001E1                     	ds	2
  1023  0001E3                     _cnt:
  1024                           	opt callstack 0
  1025  0001E3                     	ds	2
  1026  0001E5                     _key_was_pressed:
  1027                           	opt callstack 0
  1028  0001E5                     	ds	1
  1029                           
  1030                           	psect	bssBANK2
  1031  000200                     __pbssBANK2:
  1032                           	opt callstack 0
  1033  000200                     _Pole:
  1034                           	opt callstack 0
  1035  000200                     	ds	80
  1036  000250                     _dist_final:
  1037                           	opt callstack 0
  1038  000250                     	ds	48
  1039  000280                     _dbuf:
  1040                           	opt callstack 0
  1041  000280                     	ds	32
  1042                           
  1043                           	psect	cstackBANK1
  1044  000100                     __pcstackBANK1:
  1045                           	opt callstack 0
  1046  000100                     ??_ultrasonic_main:
  1047  000100                     ??_number_deploy:
  1048  000100                     ??_UI_main:
  1049  000100                     stepper@stack:
  1050                           	opt callstack 0
  1051  000100                     stepper2@steps2_adj:
  1052                           	opt callstack 0
  1053  000100                     stepper2_back@steps2_adj:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x0
  1057  000100                     	ds	2
  1058  000102                     ??_stepper2:
  1059  000102                     ??_stepper2_back:
  1060  000102                     stepper@count_stepper:
  1061                           	opt callstack 0
  1062  000102                     number_deploy@tires_t:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x2
  1066  000102                     	ds	1
  1067  000103                     stepper2_back@direction:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x3
  1071  000103                     	ds	1
  1072  000104                     stepper@i:
  1073                           	opt callstack 0
  1074  000104                     stepper2_back@count_stepper:
  1075                           	opt callstack 0
  1076  000104                     ultrasonic_main@sensed:
  1077                           	opt callstack 0
  1078  000104                     number_deploy@tires_detected:
  1079                           	opt callstack 0
  1080  000104                     UI_main@Pole:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 80 bytes @ 0x4
  1084  000104                     	ds	2
  1085  000106                     stepper@i_380:
  1086                           	opt callstack 0
  1087  000106                     stepper2_back@i:
  1088                           	opt callstack 0
  1089  000106                     ultrasonic_main@step2_offset:
  1090                           	opt callstack 0
  1091  000106                     number_deploy@t_count:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x6
  1095  000106                     	ds	1
  1096  000107                     stepper2@i:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x7
  1100  000107                     	ds	1
  1101  000108                     ultrasonic_main@steps2_adj:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x8
  1105  000108                     	ds	1
  1106  000109                     stepper2@i_388:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x9
  1110  000109                     	ds	1
  1111  00010A                     ultrasonic_main@min_us_dist_918:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 2 bytes @ 0xA
  1115  00010A                     	ds	1
  1116  00010B                     stepper2@count_stepper:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xB
  1120  00010B                     	ds	2
  1121  00010D                     stepper2@direction:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 1 bytes @ 0xD
  1125  00010D                     	ds	1
  1126  00010E                     actuators_main@stack:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0xE
  1130  00010E                     	ds	2
  1131  000110                     actuators_main@steps2_adj:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x10
  1135  000110                     	ds	2
  1136  000112                     ??_actuators_main:
  1137                           
  1138                           ; 1 bytes @ 0x12
  1139  000112                     	ds	2
  1140  000114                     actuators_main@act_cnt:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x14
  1144  000114                     	ds	64
  1145  000154                     UI_main@keypress:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x54
  1149  000154                     	ds	1
  1150  000155                     UI_main@tick:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x55
  1154  000155                     	ds	4
  1155  000159                     UI_main@i:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x59
  1159  000159                     	ds	1
  1160  00015A                     ??_main:
  1161                           
  1162                           ; 1 bytes @ 0x5A
  1163  00015A                     	ds	8
  1164  000162                     main@Pole:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 80 bytes @ 0x62
  1168  000162                     	ds	80
  1169  0001B2                     main@steps2_adj:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 2 bytes @ 0xB2
  1173  0001B2                     	ds	2
  1174  0001B4                     main@i:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 2 bytes @ 0xB4
  1178  0001B4                     	ds	2
  1179  0001B6                     main@i_1026:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 2 bytes @ 0xB6
  1183  0001B6                     	ds	2
  1184  0001B8                     main@act_done:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 1 bytes @ 0xB8
  1188  0001B8                     	ds	1
  1189  0001B9                     main@arduino_stopped:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 1 bytes @ 0xB9
  1193  0001B9                     	ds	1
  1194  0001BA                     main@stack:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0xBA
  1198  0001BA                     	ds	2
  1199  0001BC                     main@k:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0xBC
  1203  0001BC                     	ds	2
  1204  0001BE                     main@t_count:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 2 bytes @ 0xBE
  1208  0001BE                     	ds	2
  1209  0001C0                     main@t_dep:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 2 bytes @ 0xC0
  1213  0001C0                     	ds	2
  1214  0001C2                     main@i_1032:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 2 bytes @ 0xC2
  1218  0001C2                     	ds	2
  1219  0001C4                     main@poles_detected:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 2 bytes @ 0xC4
  1223  0001C4                     	ds	2
  1224  0001C6                     main@prev_avg_dist:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 4 bytes @ 0xC6
  1228  0001C6                     	ds	4
  1229                           
  1230                           	psect	cstackBANK0
  1231  000080                     __pcstackBANK0:
  1232                           	opt callstack 0
  1233  000080                     ??_I2C_Master_Wait:
  1234  000080                     ??_trig:
  1235  000080                     ?_strlen:
  1236                           	opt callstack 0
  1237  000080                     ?_isupper:
  1238                           	opt callstack 0
  1239  000080                     ?_isalpha:
  1240                           	opt callstack 0
  1241  000080                     ?_isdigit:
  1242                           	opt callstack 0
  1243  000080                     ?_isspace:
  1244                           	opt callstack 0
  1245  000080                     ?_islower:
  1246                           	opt callstack 0
  1247  000080                     ?_min:
  1248                           	opt callstack 0
  1249  000080                     ?___wmul:
  1250                           	opt callstack 0
  1251  000080                     ?___awdiv:
  1252                           	opt callstack 0
  1253  000080                     ?___lldiv:
  1254                           	opt callstack 0
  1255  000080                     ?___llmod:
  1256                           	opt callstack 0
  1257  000080                     ?___aodiv:
  1258                           	opt callstack 0
  1259  000080                     ?___aomod:
  1260                           	opt callstack 0
  1261  000080                     pulse_e@interruptState:
  1262                           	opt callstack 0
  1263  000080                     servoRotate0@servo:
  1264                           	opt callstack 0
  1265  000080                     servoRotate180@servo:
  1266                           	opt callstack 0
  1267  000080                     min@array:
  1268                           	opt callstack 0
  1269  000080                     ___wmul@multiplier:
  1270                           	opt callstack 0
  1271  000080                     ___awdiv@dividend:
  1272                           	opt callstack 0
  1273  000080                     isalpha@c:
  1274                           	opt callstack 0
  1275  000080                     isdigit@c:
  1276                           	opt callstack 0
  1277  000080                     isspace@c:
  1278                           	opt callstack 0
  1279  000080                     isupper@c:
  1280                           	opt callstack 0
  1281  000080                     strlen@s:
  1282                           	opt callstack 0
  1283  000080                     islower@c:
  1284                           	opt callstack 0
  1285  000080                     ___lldiv@dividend:
  1286                           	opt callstack 0
  1287  000080                     ___llmod@dividend:
  1288                           	opt callstack 0
  1289  000080                     ___aodiv@dividend:
  1290                           	opt callstack 0
  1291  000080                     ___aomod@dividend:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 8 bytes @ 0x0
  1295  000080                     	ds	1
  1296  000081                     I2C_Master_Read@ackBit:
  1297                           	opt callstack 0
  1298  000081                     send_nibble@data:
  1299                           	opt callstack 0
  1300  000081                     I2C_Master_Write@byteToWrite:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x1
  1304  000081                     	ds	1
  1305  000082                     ??_isupper:
  1306  000082                     ??_isalpha:
  1307  000082                     ??_isdigit:
  1308  000082                     ??_isspace:
  1309  000082                     ??_islower:
  1310  000082                     ??_servoRotate0:
  1311  000082                     ??_servoRotate180:
  1312  000082                     I2C_Master_Read@receivedByte:
  1313                           	opt callstack 0
  1314  000082                     send_byte@data:
  1315                           	opt callstack 0
  1316  000082                     min@size:
  1317                           	opt callstack 0
  1318  000082                     ___wmul@multiplicand:
  1319                           	opt callstack 0
  1320  000082                     ___awdiv@divisor:
  1321                           	opt callstack 0
  1322  000082                     strlen@a:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x2
  1326  000082                     	ds	1
  1327  000083                     lcdInst@data:
  1328                           	opt callstack 0
  1329  000083                     putch@data:
  1330                           	opt callstack 0
  1331  000083                     servoRotate0@i:
  1332                           	opt callstack 0
  1333  000083                     servoRotate180@i:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x3
  1337  000083                     	ds	1
  1338  000084                     ??_initLCD:
  1339  000084                     ??_min:
  1340  000084                     ___awdiv@counter:
  1341                           	opt callstack 0
  1342  000084                     ___wmul@product:
  1343                           	opt callstack 0
  1344  000084                     fputc@c:
  1345                           	opt callstack 0
  1346  000084                     ___lldiv@divisor:
  1347                           	opt callstack 0
  1348  000084                     ___llmod@divisor:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 4 bytes @ 0x4
  1352  000084                     	ds	1
  1353  000085                     ??_servo:
  1354  000085                     ___awdiv@sign:
  1355                           	opt callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x5
  1358  000085                     	ds	1
  1359  000086                     ?_toupper:
  1360                           	opt callstack 0
  1361  000086                     _isspace$1616:
  1362                           	opt callstack 0
  1363  000086                     ___awdiv@quotient:
  1364                           	opt callstack 0
  1365  000086                     fputc@fp:
  1366                           	opt callstack 0
  1367  000086                     toupper@c:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x6
  1371  000086                     	ds	1
  1372  000087                     ?_atoi:
  1373                           	opt callstack 0
  1374  000087                     min@minimum:
  1375                           	opt callstack 0
  1376  000087                     atoi@s:
  1377                           	opt callstack 0
  1378                           
  1379                           ; 2 bytes @ 0x7
  1380  000087                     	ds	1
  1381  000088                     ??_fputc:
  1382  000088                     ??_toupper:
  1383  000088                     ___llmod@counter:
  1384                           	opt callstack 0
  1385  000088                     ___lldiv@quotient:
  1386                           	opt callstack 0
  1387  000088                     ___aodiv@divisor:
  1388                           	opt callstack 0
  1389  000088                     ___aomod@divisor:
  1390                           	opt callstack 0
  1391                           
  1392                           ; 8 bytes @ 0x8
  1393  000088                     	ds	1
  1394  000089                     ??_atoi:
  1395  000089                     min@i:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x9
  1399  000089                     	ds	3
  1400  00008C                     ___lldiv@counter:
  1401                           	opt callstack 0
  1402  00008C                     _toupper$1681:
  1403                           	opt callstack 0
  1404                           
  1405                           ; 2 bytes @ 0xC
  1406  00008C                     	ds	1
  1407  00008D                     atoi@neg:
  1408                           	opt callstack 0
  1409  00008D                     fputs@s:
  1410                           	opt callstack 0
  1411  00008D                     I2C_Master_Init@clockFreq:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 4 bytes @ 0xD
  1415  00008D                     	ds	2
  1416  00008F                     _atoi$1589:
  1417                           	opt callstack 0
  1418  00008F                     fputs@fp:
  1419                           	opt callstack 0
  1420                           
  1421                           ; 2 bytes @ 0xF
  1422  00008F                     	ds	1
  1423  000090                     ___aodiv@counter:
  1424                           	opt callstack 0
  1425  000090                     ___aomod@counter:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 1 bytes @ 0x10
  1429  000090                     	ds	1
  1430  000091                     ??_I2C_Master_Init:
  1431  000091                     ___aodiv@sign:
  1432                           	opt callstack 0
  1433  000091                     ___aomod@sign:
  1434                           	opt callstack 0
  1435  000091                     fputs@c:
  1436                           	opt callstack 0
  1437  000091                     _atoi$1591:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x11
  1441  000091                     	ds	1
  1442  000092                     ?_abs:
  1443                           	opt callstack 0
  1444  000092                     abs@a:
  1445                           	opt callstack 0
  1446  000092                     fputs@i:
  1447                           	opt callstack 0
  1448  000092                     ___aodiv@quotient:
  1449                           	opt callstack 0
  1450                           
  1451                           ; 8 bytes @ 0x12
  1452  000092                     	ds	1
  1453  000093                     _atoi$1590:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 1 bytes @ 0x13
  1457  000093                     	ds	1
  1458  000094                     ??_abs:
  1459  000094                     ?_pad:
  1460                           	opt callstack 0
  1461  000094                     pad@fp:
  1462                           	opt callstack 0
  1463  000094                     atoi@n:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x14
  1467  000094                     	ds	1
  1468  000095                     
  1469                           ; 1 bytes @ 0x15
  1470  000095                     	ds	1
  1471  000096                     pad@buf:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 2 bytes @ 0x16
  1475  000096                     	ds	2
  1476  000098                     pad@p:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x18
  1480  000098                     	ds	2
  1481  00009A                     ??_pad:
  1482                           
  1483                           ; 1 bytes @ 0x1A
  1484  00009A                     	ds	1
  1485  00009B                     pad@i:
  1486                           	opt callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x1B
  1489  00009B                     	ds	2
  1490  00009D                     pad@w:
  1491                           	opt callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x1D
  1494  00009D                     	ds	2
  1495  00009F                     ?_dtoa:
  1496                           	opt callstack 0
  1497  00009F                     ?_xtoa:
  1498                           	opt callstack 0
  1499  00009F                     dtoa@fp:
  1500                           	opt callstack 0
  1501  00009F                     xtoa@fp:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x1F
  1505  00009F                     	ds	2
  1506  0000A1                     dtoa@d:
  1507                           	opt callstack 0
  1508  0000A1                     xtoa@d:
  1509                           	opt callstack 0
  1510                           
  1511                           ; 8 bytes @ 0x21
  1512  0000A1                     	ds	8
  1513  0000A9                     ??_dtoa:
  1514  0000A9                     xtoa@x:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 1 bytes @ 0x29
  1518  0000A9                     	ds	1
  1519  0000AA                     ??_xtoa:
  1520                           
  1521                           ; 1 bytes @ 0x2A
  1522  0000AA                     	ds	7
  1523  0000B1                     _dtoa$1105:
  1524                           	opt callstack 0
  1525                           
  1526                           ; 2 bytes @ 0x31
  1527  0000B1                     	ds	1
  1528  0000B2                     _xtoa$1116:
  1529                           	opt callstack 0
  1530                           
  1531                           ; 2 bytes @ 0x32
  1532  0000B2                     	ds	1
  1533  0000B3                     dtoa@p:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 2 bytes @ 0x33
  1537  0000B3                     	ds	1
  1538  0000B4                     _xtoa$1117:
  1539                           	opt callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x34
  1542  0000B4                     	ds	1
  1543  0000B5                     dtoa@w:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x35
  1547  0000B5                     	ds	1
  1548  0000B6                     xtoa@p:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x36
  1552  0000B6                     	ds	1
  1553  0000B7                     dtoa@s:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x37
  1557  0000B7                     	ds	1
  1558  0000B8                     xtoa@w:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x38
  1562  0000B8                     	ds	1
  1563  0000B9                     dtoa@n:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 8 bytes @ 0x39
  1567  0000B9                     	ds	1
  1568  0000BA                     xtoa@n:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 8 bytes @ 0x3A
  1572  0000BA                     	ds	7
  1573  0000C1                     dtoa@i:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x41
  1577  0000C1                     	ds	1
  1578  0000C2                     xtoa@i:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x42
  1582  0000C2                     	ds	2
  1583  0000C4                     xtoa@c:
  1584                           	opt callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x44
  1587  0000C4                     	ds	2
  1588  0000C6                     ?_vfpfcnvrt:
  1589                           	opt callstack 0
  1590  0000C6                     vfpfcnvrt@fp:
  1591                           	opt callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x46
  1594  0000C6                     	ds	2
  1595  0000C8                     vfpfcnvrt@fmt:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x48
  1599  0000C8                     	ds	2
  1600  0000CA                     vfpfcnvrt@ap:
  1601                           	opt callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x4A
  1604  0000CA                     	ds	2
  1605  0000CC                     ??_vfpfcnvrt:
  1606                           
  1607                           ; 1 bytes @ 0x4C
  1608  0000CC                     	ds	4
  1609  0000D0                     vfpfcnvrt@ll:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 8 bytes @ 0x50
  1613  0000D0                     	ds	8
  1614  0000D8                     vfpfcnvrt@llu:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 8 bytes @ 0x58
  1618  0000D8                     	ds	8
  1619  0000E0                     vfpfcnvrt@c:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 1 bytes @ 0x60
  1623  0000E0                     	ds	1
  1624  0000E1                     vfpfcnvrt@done:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x61
  1628  0000E1                     	ds	2
  1629  0000E3                     _vfpfcnvrt$1131:
  1630                           	opt callstack 0
  1631                           
  1632                           ; 2 bytes @ 0x63
  1633  0000E3                     	ds	2
  1634  0000E5                     ?_vfprintf:
  1635                           	opt callstack 0
  1636  0000E5                     vfprintf@fp:
  1637                           	opt callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x65
  1640  0000E5                     	ds	2
  1641  0000E7                     vfprintf@fmt:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x67
  1645  0000E7                     	ds	2
  1646  0000E9                     vfprintf@ap:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x69
  1650  0000E9                     	ds	2
  1651  0000EB                     vfprintf@cfmt:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x6B
  1655  0000EB                     	ds	2
  1656  0000ED                     ?_printf:
  1657                           	opt callstack 0
  1658  0000ED                     printf@fmt:
  1659                           	opt callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x6D
  1662  0000ED                     	ds	10
  1663  0000F7                     
  1664                           ; 1 bytes @ 0x77
  1665  0000F7                     	ds	2
  1666  0000F9                     printf@ap:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x79
  1670  0000F9                     	ds	2
  1671  0000FB                     ??_brake:
  1672  0000FB                     ??_print_echo:
  1673  0000FB                     ?_number_deploy:
  1674                           	opt callstack 0
  1675  0000FB                     full_drive@stepper_no:
  1676                           	opt callstack 0
  1677  0000FB                     number_deploy@avg_dist:
  1678                           	opt callstack 0
  1679  0000FB                     UI_main@t_dep:
  1680                           	opt callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x7B
  1683  0000FB                     	ds	1
  1684  0000FC                     ?_ultrasonic_main:
  1685                           	opt callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x7C
  1688  0000FC                     	ds	1
  1689  0000FD                     ??_full_drive:
  1690  0000FD                     number_deploy@poles_detected:
  1691                           	opt callstack 0
  1692  0000FD                     UI_main@poles_detected:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x7D
  1696  0000FD                     	ds	1
  1697  0000FE                     full_drive@direction:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x7E
  1701  0000FE                     	ds	1
  1702  0000FF                     
  1703                           ; 1 bytes @ 0x7F
  1704                           
  1705                           	psect	cstackCOMRAM
  1706  000001                     __pcstackCOMRAM:
  1707                           	opt callstack 0
  1708  000001                     ?i2___awdiv:
  1709                           	opt callstack 0
  1710  000001                     ?___xxtofl:
  1711                           	opt callstack 0
  1712  000001                     i2___awdiv@dividend:
  1713                           	opt callstack 0
  1714  000001                     ___xxtofl@val:
  1715                           	opt callstack 0
  1716                           
  1717                           ; 4 bytes @ 0x0
  1718  000001                     	ds	2
  1719  000003                     i2___awdiv@divisor:
  1720                           	opt callstack 0
  1721                           
  1722                           ; 2 bytes @ 0x2
  1723  000003                     	ds	2
  1724  000005                     ??___xxtofl:
  1725  000005                     i2___awdiv@counter:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 1 bytes @ 0x4
  1729  000005                     	ds	1
  1730  000006                     i2___awdiv@sign:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 1 bytes @ 0x5
  1734  000006                     	ds	1
  1735  000007                     i2___awdiv@quotient:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x6
  1739  000007                     	ds	2
  1740  000009                     ___xxtofl@sign:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 1 bytes @ 0x8
  1744  000009                     	ds	1
  1745  00000A                     ___xxtofl@exp:
  1746                           	opt callstack 0
  1747                           
  1748                           ; 1 bytes @ 0x9
  1749  00000A                     	ds	1
  1750  00000B                     ___xxtofl@arg:
  1751                           	opt callstack 0
  1752                           
  1753                           ; 4 bytes @ 0xA
  1754  00000B                     	ds	4
  1755  00000F                     ?___fldiv:
  1756                           	opt callstack 0
  1757  00000F                     ___fldiv@b:
  1758                           	opt callstack 0
  1759                           
  1760                           ; 4 bytes @ 0xE
  1761  00000F                     	ds	4
  1762  000013                     ___fldiv@a:
  1763                           	opt callstack 0
  1764                           
  1765                           ; 4 bytes @ 0x12
  1766  000013                     	ds	4
  1767  000017                     ??___fldiv:
  1768                           
  1769                           ; 1 bytes @ 0x16
  1770  000017                     	ds	4
  1771  00001B                     ___fldiv@rem:
  1772                           	opt callstack 0
  1773                           
  1774                           ; 4 bytes @ 0x1A
  1775  00001B                     	ds	4
  1776  00001F                     ___fldiv@sign:
  1777                           	opt callstack 0
  1778                           
  1779                           ; 1 bytes @ 0x1E
  1780  00001F                     	ds	1
  1781  000020                     ___fldiv@new_exp:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 2 bytes @ 0x1F
  1785  000020                     	ds	2
  1786  000022                     ___fldiv@grs:
  1787                           	opt callstack 0
  1788                           
  1789                           ; 4 bytes @ 0x21
  1790  000022                     	ds	4
  1791  000026                     ___fldiv@bexp:
  1792                           	opt callstack 0
  1793                           
  1794                           ; 1 bytes @ 0x25
  1795  000026                     	ds	1
  1796  000027                     ___fldiv@aexp:
  1797                           	opt callstack 0
  1798                           
  1799                           ; 1 bytes @ 0x26
  1800  000027                     	ds	1
  1801  000028                     ?___fltol:
  1802                           	opt callstack 0
  1803  000028                     ___fltol@f1:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 4 bytes @ 0x27
  1807  000028                     	ds	4
  1808  00002C                     ??___fltol:
  1809                           
  1810                           ; 1 bytes @ 0x2B
  1811  00002C                     	ds	4
  1812  000030                     ___fltol@sign1:
  1813                           	opt callstack 0
  1814                           
  1815                           ; 1 bytes @ 0x2F
  1816  000030                     	ds	1
  1817  000031                     ___fltol@exp1:
  1818                           	opt callstack 0
  1819                           
  1820                           ; 1 bytes @ 0x30
  1821  000031                     	ds	1
  1822  000032                     ??_echo:
  1823                           
  1824                           ; 1 bytes @ 0x31
  1825  000032                     	ds	4
  1826  000036                     ??_ISR:
  1827                           
  1828                           ; 1 bytes @ 0x35
  1829  000036                     	ds	2
  1830                           
  1831 ;;
  1832 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1833 ;;
  1834 ;; *************** function _main *****************
  1835 ;; Defined at:
  1836 ;;		line 715 in file "main.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  k               2  188[BANK1 ] int 
  1841 ;;  i               2  182[BANK1 ] int 
  1842 ;;  i               2  180[BANK1 ] int 
  1843 ;;  i               2  194[BANK1 ] int 
  1844 ;;  pole_cl_dist    2    0        int 
  1845 ;;  Pole           80   98[BANK1 ] struct Poles[10]
  1846 ;;  prev_avg_dis    4  198[BANK1 ] volatile long 
  1847 ;;  poles_detect    2  196[BANK1 ] int 
  1848 ;;  t_dep           2  192[BANK1 ] int 
  1849 ;;  t_count         2  190[BANK1 ] int 
  1850 ;;  stack           2  186[BANK1 ] int 
  1851 ;;  steps2_adj      2  178[BANK1 ] int 
  1852 ;;  read            2    0        int 
  1853 ;;  arduino_stop    1  185[BANK1 ] _Bool 
  1854 ;;  act_done        1  184[BANK1 ] _Bool 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Totals:         0       0     112       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;Total ram usage:      112 bytes
  1869 ;; Hardware stack levels required when called:   17
  1870 ;; This function calls:
  1871 ;;		_UI_main
  1872 ;;		___wmul
  1873 ;;		_actuators_main
  1874 ;;		_backwards
  1875 ;;		_brake
  1876 ;;		_initLCD
  1877 ;;		_lcdInst
  1878 ;;		_number_deploy
  1879 ;;		_printf
  1880 ;;		_start
  1881 ;;		_ultrasonic_main
  1882 ;; This function is called by:
  1883 ;;		Startup code after reset
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text0
  1888  000826                     __ptext0:
  1889                           	opt callstack 0
  1890  000826                     _main:
  1891                           	opt callstack 14
  1892                           
  1893                           ;main.c: 717:     int t_dep=0;
  1894                           
  1895                           ;incstack = 0
  1896  000826  0E00               	movlw	0
  1897  000828  0101               	movlb	1	; () banked
  1898  00082A  6FC1               	movwf	(main@t_dep+1)& (0+255),b
  1899  00082C  0E00               	movlw	0
  1900  00082E  6FC0               	movwf	main@t_dep& (0+255),b
  1901                           
  1902                           ;main.c: 718:     int t_count;;main.c: 719:  TRISD = 0x00;
  1903  000830  0E00               	movlw	0
  1904  000832  6E95               	movwf	3989,c	;volatile
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;main.c: 720:  GIE = 1;
  1908  000834  8EF2               	bsf	4082,7,c	;volatile
  1909                           
  1910                           ;main.c: 722:     ADCON1=0x0F;
  1911  000836  0E0F               	movlw	15
  1912  000838  6EC1               	movwf	4033,c	;volatile
  1913                           
  1914                           ; BSR set to: 1
  1915                           ;main.c: 724:  initLCD();
  1916  00083A  ECC9  F01B         	call	_initLCD	;wreg free
  1917                           
  1918                           ;main.c: 726:  T1CON = 0x10;
  1919  00083E  0E10               	movlw	16
  1920  000840  6ECD               	movwf	4045,c	;volatile
  1921                           
  1922                           ;main.c: 727:     int poles_detected=0;
  1923  000842  0E00               	movlw	0
  1924  000844  0101               	movlb	1	; () banked
  1925  000846  6FC5               	movwf	(main@poles_detected+1)& (0+255),b
  1926  000848  0E00               	movlw	0
  1927  00084A  6FC4               	movwf	main@poles_detected& (0+255),b
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;main.c: 729:     volatile long prev_avg_dist=0;
  1931                           
  1932                           ; BSR set to: 1
  1933  00084C  0E00               	movlw	0
  1934  00084E  6FC6               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1935  000850  0E00               	movlw	0
  1936  000852  6FC7               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1937  000854  0E00               	movlw	0
  1938  000856  6FC8               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1939  000858  0E00               	movlw	0
  1940  00085A  6FC9               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1941                           
  1942                           ; BSR set to: 1
  1943                           ;main.c: 731:     TRISAbits.RA4 = 0;
  1944  00085C  9892               	bcf	3986,4,c	;volatile
  1945                           
  1946                           ; BSR set to: 1
  1947                           ;main.c: 732:     PORTAbits.RA4 = LATAbits.LATA4;
  1948  00085E  A889               	btfss	3977,4,c	;volatile
  1949  000860  D002               	bra	u8855
  1950  000862  8880               	bsf	3968,4,c	;volatile
  1951  000864  D001               	bra	u8857
  1952  000866                     u8855:
  1953  000866  9880               	bcf	3968,4,c	;volatile
  1954  000868                     u8857:
  1955                           
  1956                           ;main.c: 735:     _Bool arduino_stopped = 0;
  1957  000868  0E00               	movlw	0
  1958  00086A  0101               	movlb	1	; () banked
  1959  00086C  6FB9               	movwf	main@arduino_stopped& (0+255),b
  1960                           
  1961                           ; BSR set to: 1
  1962                           ;main.c: 737:     Poles Pole[10];;main.c: 745:     if (~sens){
  1963  00086E  2858               	incf	_sens,w,c	;volatile
  1964  000870  E103               	bnz	u8860
  1965  000872  2859               	incf	_sens+1,w,c	;volatile
  1966  000874  B4D8               	btfsc	status,2,c
  1967  000876  D00B               	goto	l8212
  1968  000878                     u8860:
  1969                           
  1970                           ; BSR set to: 1
  1971                           ;main.c: 746:         UI_main( t_dep, poles_detected);
  1972  000878  0E00               	movlw	0
  1973  00087A  0100               	movlb	0	; () banked
  1974  00087C  6FFC               	movwf	(UI_main@t_dep+1)& (0+255),b
  1975  00087E  0E00               	movlw	0
  1976  000880  6FFB               	movwf	UI_main@t_dep& (0+255),b
  1977  000882  0E00               	movlw	0
  1978  000884  6FFE               	movwf	(UI_main@poles_detected+1)& (0+255),b
  1979  000886  0E00               	movlw	0
  1980  000888  6FFD               	movwf	UI_main@poles_detected& (0+255),b
  1981  00088A  EC09  F000         	call	_UI_main	;wreg free
  1982  00088E                     l8212:
  1983                           
  1984                           ;main.c: 749:         PORTAbits.RA4 = LATAbits.LATA4;
  1985  00088E  A889               	btfss	3977,4,c	;volatile
  1986  000890  D002               	bra	u8875
  1987  000892  8880               	bsf	3968,4,c	;volatile
  1988  000894  D001               	bra	u8877
  1989  000896                     u8875:
  1990  000896  9880               	bcf	3968,4,c	;volatile
  1991  000898                     u8877:
  1992                           
  1993                           ;main.c: 754:         if ((poles_detected <10)&&((Pole[poles_detected].dist_from_start )
      +                          <4000)){
  1994  000898  0101               	movlb	1	; () banked
  1995  00089A  BFC5               	btfsc	(main@poles_detected+1)& (0+255),7,b
  1996  00089C  D006               	goto	u8880
  1997  00089E  51C5               	movf	(main@poles_detected+1)& (0+255),w,b
  1998  0008A0  E103               	bnz	u8881
  1999  0008A2  0E0A               	movlw	10
  2000  0008A4  5DC4               	subwf	main@poles_detected& (0+255),w,b
  2001  0008A6  B0D8               	btfsc	status,0,c
  2002  0008A8                     u8881:
  2003  0008A8  D273               	goto	l8360
  2004  0008AA                     u8880:
  2005                           
  2006                           ; BSR set to: 1
  2007  0008AA  C1C4  F15A         	movff	main@poles_detected,??_main
  2008  0008AE  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2009  0008B2  90D8               	bcf	status,0,c
  2010  0008B4  375A               	rlcf	??_main& (0+255),f,b
  2011  0008B6  375B               	rlcf	(??_main+1)& (0+255),f,b
  2012  0008B8  90D8               	bcf	status,0,c
  2013  0008BA  375A               	rlcf	??_main& (0+255),f,b
  2014  0008BC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2015  0008BE  90D8               	bcf	status,0,c
  2016  0008C0  375A               	rlcf	??_main& (0+255),f,b
  2017  0008C2  375B               	rlcf	(??_main+1)& (0+255),f,b
  2018  0008C4  0E04               	movlw	4
  2019  0008C6  275A               	addwf	??_main& (0+255),f,b
  2020  0008C8  0E00               	movlw	0
  2021  0008CA  235B               	addwfc	(??_main+1)& (0+255),f,b
  2022  0008CC  0E62               	movlw	low main@Pole
  2023  0008CE  255A               	addwf	??_main& (0+255),w,b
  2024  0008D0  6ED9               	movwf	fsr2l,c
  2025  0008D2  0E01               	movlw	high main@Pole
  2026  0008D4  215B               	addwfc	(??_main+1)& (0+255),w,b
  2027  0008D6  6EDA               	movwf	fsr2h,c
  2028  0008D8  0E01               	movlw	1
  2029  0008DA  BEDB               	btfsc	plusw2,7,c
  2030  0008DC  D092               	goto	l8264
  2031  0008DE  0EA0               	movlw	160
  2032  0008E0  5CDE               	subwf	postinc2,w,c
  2033  0008E2  0E0F               	movlw	15
  2034  0008E4  58DE               	subwfb	postinc2,w,c
  2035  0008E6  A0D8               	btfss	status,0,c
  2036  0008E8  D08C               	goto	l8264
  2037  0008EA  D252               	goto	l8360
  2038  0008EC                     l8220:
  2039                           
  2040                           ;main.c: 765:                 t_count = 5;
  2041  0008EC  0E00               	movlw	0
  2042  0008EE  0101               	movlb	1	; () banked
  2043  0008F0  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2044  0008F2  0E05               	movlw	5
  2045  0008F4  6FBE               	movwf	main@t_count& (0+255),b
  2046                           
  2047                           ; BSR set to: 1
  2048                           ;main.c: 766:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2049  0008F6  0E01               	movlw	1
  2050  0008F8  ECE0  F01E         	call	_lcdInst
  2051  0008FC  0E11               	movlw	17
  2052  0008FE  0101               	movlb	1	; () banked
  2053  000900  6F5A               	movwf	??_main& (0+255),b
  2054  000902  0E3A               	movlw	58
  2055  000904                     u9027:
  2056  000904  2EE8               	decfsz	wreg,f,c
  2057  000906  D7FE               	bra	u9027
  2058  000908  2F5A               	decfsz	??_main& (0+255),f,b
  2059  00090A  D7FC               	bra	u9027
  2060  00090C  F000               	nop	
  2061                           
  2062                           ;main.c: 767:                     printf("waiting");
  2063  00090E  0E02               	movlw	low (STR_54+5)
  2064  000910  0100               	movlb	0	; () banked
  2065  000912  6FED               	movwf	printf@fmt& (0+255),b
  2066  000914  0EFF               	movlw	high (STR_54+5)
  2067  000916  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2068  000918  EC7A  F01E         	call	_printf	;wreg free
  2069                           
  2070                           ;main.c: 769:                     if (!PORTAbits.RA4){
  2071  00091C  B880               	btfsc	3968,4,c	;volatile
  2072  00091E  D013               	goto	l8236
  2073                           
  2074                           ;main.c: 770:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2075  000920  0E01               	movlw	1
  2076  000922  ECE0  F01E         	call	_lcdInst
  2077  000926  0E11               	movlw	17
  2078  000928  0101               	movlb	1	; () banked
  2079  00092A  6F5A               	movwf	??_main& (0+255),b
  2080  00092C  0E3A               	movlw	58
  2081  00092E                     u9037:
  2082  00092E  2EE8               	decfsz	wreg,f,c
  2083  000930  D7FE               	bra	u9037
  2084  000932  2F5A               	decfsz	??_main& (0+255),f,b
  2085  000934  D7FC               	bra	u9037
  2086  000936  F000               	nop	
  2087                           
  2088                           ;main.c: 771:                         printf("more waiting");
  2089  000938  0EFD               	movlw	low STR_54
  2090  00093A  0100               	movlb	0	; () banked
  2091  00093C  6FED               	movwf	printf@fmt& (0+255),b
  2092  00093E  0EFE               	movlw	high STR_54
  2093  000940  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2094  000942  EC7A  F01E         	call	_printf	;wreg free
  2095  000946                     l8236:
  2096                           
  2097                           ;main.c: 773:                     if (PORTAbits.RA4){
  2098  000946  A880               	btfss	3968,4,c	;volatile
  2099  000948  D016               	goto	l8246
  2100                           
  2101                           ;main.c: 775:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2102  00094A  0E01               	movlw	1
  2103  00094C  ECE0  F01E         	call	_lcdInst
  2104  000950  0E11               	movlw	17
  2105  000952  0101               	movlb	1	; () banked
  2106  000954  6F5A               	movwf	??_main& (0+255),b
  2107  000956  0E3A               	movlw	58
  2108  000958                     u9047:
  2109  000958  2EE8               	decfsz	wreg,f,c
  2110  00095A  D7FE               	bra	u9047
  2111  00095C  2F5A               	decfsz	??_main& (0+255),f,b
  2112  00095E  D7FC               	bra	u9047
  2113  000960  F000               	nop	
  2114                           
  2115                           ;main.c: 776:                         printf("done wait");
  2116  000962  0EBB               	movlw	low STR_55
  2117  000964  0100               	movlb	0	; () banked
  2118  000966  6FED               	movwf	printf@fmt& (0+255),b
  2119  000968  0EFF               	movlw	high STR_55
  2120  00096A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2121  00096C  EC7A  F01E         	call	_printf	;wreg free
  2122                           
  2123                           ;main.c: 777:                         arduino_stopped = 1;
  2124  000970  0E01               	movlw	1
  2125  000972  0101               	movlb	1	; () banked
  2126  000974  6FB9               	movwf	main@arduino_stopped& (0+255),b
  2127  000976                     l8246:
  2128                           
  2129                           ;main.c: 779:                     if (arduino_stopped){
  2130  000976  0101               	movlb	1	; () banked
  2131  000978  51B9               	movf	main@arduino_stopped& (0+255),w,b
  2132  00097A  B4D8               	btfsc	status,2,c
  2133  00097C  D042               	goto	l8264
  2134                           
  2135                           ; BSR set to: 1
  2136                           ;main.c: 780:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2137  00097E  0E01               	movlw	1
  2138  000980  ECE0  F01E         	call	_lcdInst
  2139  000984  0E11               	movlw	17
  2140  000986  0101               	movlb	1	; () banked
  2141  000988  6F5A               	movwf	??_main& (0+255),b
  2142  00098A  0E3A               	movlw	58
  2143  00098C                     u9057:
  2144  00098C  2EE8               	decfsz	wreg,f,c
  2145  00098E  D7FE               	bra	u9057
  2146  000990  2F5A               	decfsz	??_main& (0+255),f,b
  2147  000992  D7FC               	bra	u9057
  2148  000994  F000               	nop	
  2149                           
  2150                           ;main.c: 781:                         printf("dun break");
  2151  000996  0EA7               	movlw	low STR_56
  2152  000998  0100               	movlb	0	; () banked
  2153  00099A  6FED               	movwf	printf@fmt& (0+255),b
  2154  00099C  0EFF               	movlw	high STR_56
  2155  00099E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2156  0009A0  EC7A  F01E         	call	_printf	;wreg free
  2157                           
  2158                           ;main.c: 782:                         steps2_adj=ultrasonic_main();
  2159  0009A4  ECB5  F012         	call	_ultrasonic_main	;wreg free
  2160  0009A8  C0FC  F1B2         	movff	?_ultrasonic_main,main@steps2_adj
  2161  0009AC  C0FD  F1B3         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2162                           
  2163                           ;main.c: 783:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2164  0009B0  0E01               	movlw	1
  2165  0009B2  ECE0  F01E         	call	_lcdInst
  2166  0009B6  0E11               	movlw	17
  2167  0009B8  0101               	movlb	1	; () banked
  2168  0009BA  6F5A               	movwf	??_main& (0+255),b
  2169  0009BC  0E3A               	movlw	58
  2170  0009BE                     u9067:
  2171  0009BE  2EE8               	decfsz	wreg,f,c
  2172  0009C0  D7FE               	bra	u9067
  2173  0009C2  2F5A               	decfsz	??_main& (0+255),f,b
  2174  0009C4  D7FC               	bra	u9067
  2175  0009C6  F000               	nop	
  2176                           
  2177                           ;main.c: 784:                         printf("stepsadj %d", steps2_adj);
  2178  0009C8  0E23               	movlw	low STR_21
  2179  0009CA  0100               	movlb	0	; () banked
  2180  0009CC  6FED               	movwf	printf@fmt& (0+255),b
  2181  0009CE  0EFF               	movlw	high STR_21
  2182  0009D0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2183  0009D2  C1B2  F0EF         	movff	main@steps2_adj,?_printf+2
  2184  0009D6  C1B3  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2185  0009DA  EC7A  F01E         	call	_printf	;wreg free
  2186                           
  2187                           ;main.c: 785:                         t_count = number_deploy(avg_dist, poles_detected);
  2188  0009DE  C044  F0FB         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2189  0009E2  C045  F0FC         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2190  0009E6  C1C4  F0FD         	movff	main@poles_detected,number_deploy@poles_detected
  2191  0009EA  C1C5  F0FE         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2192  0009EE  ECAE  F010         	call	_number_deploy	;wreg free
  2193  0009F2  C0FB  F1BE         	movff	?_number_deploy,main@t_count
  2194  0009F6  C0FC  F1BF         	movff	?_number_deploy+1,main@t_count+1
  2195                           
  2196                           ;main.c: 786:                         sens = 0;
  2197  0009FA  0E00               	movlw	0
  2198  0009FC  6E59               	movwf	_sens+1,c	;volatile
  2199  0009FE  0E00               	movlw	0
  2200  000A00  6E58               	movwf	_sens,c	;volatile
  2201  000A02                     l8264:
  2202                           
  2203                           ;main.c: 762:             while (sens){
  2204  000A02  5058               	movf	_sens,w,c	;volatile
  2205  000A04  1059               	iorwf	_sens+1,w,c	;volatile
  2206  000A06  A4D8               	btfss	status,2,c
  2207  000A08  D771               	goto	l8220
  2208                           
  2209                           ;main.c: 795:             act_done = 0;
  2210  000A0A  0E00               	movlw	0
  2211  000A0C  0101               	movlb	1	; () banked
  2212  000A0E  6FB8               	movwf	main@act_done& (0+255),b
  2213                           
  2214                           ; BSR set to: 1
  2215                           ;main.c: 796:             if (t_count<=2){
  2216  000A10  BFBF               	btfsc	(main@t_count+1)& (0+255),7,b
  2217  000A12  D006               	goto	u8940
  2218  000A14  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2219  000A16  E15D               	bnz	l544
  2220  000A18  0E03               	movlw	3
  2221  000A1A  5DBE               	subwf	main@t_count& (0+255),w,b
  2222  000A1C  B0D8               	btfsc	status,0,c
  2223  000A1E  D059               	goto	l544
  2224  000A20                     u8940:
  2225                           
  2226                           ; BSR set to: 1
  2227                           ;main.c: 797:                 if (t_dep <8){
  2228  000A20  BFC1               	btfsc	(main@t_dep+1)& (0+255),7,b
  2229  000A22  D006               	goto	u8950
  2230  000A24  51C1               	movf	(main@t_dep+1)& (0+255),w,b
  2231  000A26  E129               	bnz	l8288
  2232  000A28  0E08               	movlw	8
  2233  000A2A  5DC0               	subwf	main@t_dep& (0+255),w,b
  2234  000A2C  B0D8               	btfsc	status,0,c
  2235  000A2E  D025               	goto	u8960
  2236  000A30                     u8950:
  2237                           
  2238                           ; BSR set to: 1
  2239                           ;main.c: 800:                     stack = 1;
  2240  000A30  0E00               	movlw	0
  2241  000A32  6FBB               	movwf	(main@stack+1)& (0+255),b
  2242  000A34  0E01               	movlw	1
  2243  000A36  6FBA               	movwf	main@stack& (0+255),b
  2244                           
  2245                           ; BSR set to: 1
  2246                           ;main.c: 801:                                     brake();
  2247  000A38  ECCD  F019         	call	_brake	;wreg free
  2248                           
  2249                           ;main.c: 803:                     for(int i=0; i<(t_count); i++){
  2250  000A3C  0E00               	movlw	0
  2251  000A3E  0101               	movlb	1	; () banked
  2252  000A40  6FB5               	movwf	(main@i+1)& (0+255),b
  2253  000A42  0E00               	movlw	0
  2254  000A44  6FB4               	movwf	main@i& (0+255),b
  2255  000A46  D00F               	goto	l8286
  2256  000A48                     l8280:
  2257                           
  2258                           ; BSR set to: 1
  2259                           ;main.c: 805:                         actuators_main(stack, 110);
  2260  000A48  C1BA  F10E         	movff	main@stack,actuators_main@stack
  2261  000A4C  C1BB  F10F         	movff	main@stack+1,actuators_main@stack+1
  2262  000A50  0E00               	movlw	0
  2263  000A52  6F11               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2264  000A54  0E6E               	movlw	110
  2265  000A56  6F10               	movwf	actuators_main@steps2_adj& (0+255),b
  2266  000A58  EC72  F015         	call	_actuators_main	;wreg free
  2267                           
  2268                           ;main.c: 806:                         t_dep++;
  2269  000A5C  0101               	movlb	1	; () banked
  2270  000A5E  4BC0               	infsnz	main@t_dep& (0+255),f,b
  2271  000A60  2BC1               	incf	(main@t_dep+1)& (0+255),f,b
  2272                           
  2273                           ; BSR set to: 1
  2274                           ;main.c: 807:                     }
  2275  000A62  4BB4               	infsnz	main@i& (0+255),f,b
  2276  000A64  2BB5               	incf	(main@i+1)& (0+255),f,b
  2277  000A66                     l8286:
  2278                           
  2279                           ; BSR set to: 1
  2280  000A66  51BE               	movf	main@t_count& (0+255),w,b
  2281  000A68  5DB4               	subwf	main@i& (0+255),w,b
  2282  000A6A  51B5               	movf	(main@i+1)& (0+255),w,b
  2283  000A6C  0A80               	xorlw	128
  2284  000A6E  6F5A               	movwf	??_main& (0+255),b
  2285  000A70  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2286  000A72  0A80               	xorlw	128
  2287  000A74  595A               	subwfb	??_main& (0+255),w,b
  2288  000A76  A0D8               	btfss	status,0,c
  2289  000A78  D7E7               	goto	l8280
  2290  000A7A                     u8960:
  2291  000A7A                     l8288:
  2292                           
  2293                           ; BSR set to: 1
  2294                           ;main.c: 809:                 if (t_dep >= 8){
  2295  000A7A  BFC1               	btfsc	(main@t_dep+1)& (0+255),7,b
  2296  000A7C  D028               	goto	u8980
  2297  000A7E  51C1               	movf	(main@t_dep+1)& (0+255),w,b
  2298  000A80  E104               	bnz	u8970
  2299  000A82  0E08               	movlw	8
  2300  000A84  5DC0               	subwf	main@t_dep& (0+255),w,b
  2301  000A86  A0D8               	btfss	status,0,c
  2302  000A88  D022               	goto	u8980
  2303  000A8A                     u8970:
  2304                           
  2305                           ; BSR set to: 1
  2306                           ;main.c: 810:                     stack = 2;
  2307  000A8A  0E00               	movlw	0
  2308  000A8C  6FBB               	movwf	(main@stack+1)& (0+255),b
  2309  000A8E  0E02               	movlw	2
  2310  000A90  6FBA               	movwf	main@stack& (0+255),b
  2311                           
  2312                           ;main.c: 811:                     for(int i=0; i<(t_count); i++){
  2313  000A92  0E00               	movlw	0
  2314  000A94  6FB7               	movwf	(main@i_1026+1)& (0+255),b
  2315  000A96  0E00               	movlw	0
  2316  000A98  6FB6               	movwf	main@i_1026& (0+255),b
  2317  000A9A  D00F               	goto	l8298
  2318  000A9C                     l8292:
  2319                           
  2320                           ; BSR set to: 1
  2321                           ;main.c: 813:                         actuators_main(stack, 110);
  2322  000A9C  C1BA  F10E         	movff	main@stack,actuators_main@stack
  2323  000AA0  C1BB  F10F         	movff	main@stack+1,actuators_main@stack+1
  2324  000AA4  0E00               	movlw	0
  2325  000AA6  6F11               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2326  000AA8  0E6E               	movlw	110
  2327  000AAA  6F10               	movwf	actuators_main@steps2_adj& (0+255),b
  2328  000AAC  EC72  F015         	call	_actuators_main	;wreg free
  2329                           
  2330                           ;main.c: 814:                         t_dep++;
  2331  000AB0  0101               	movlb	1	; () banked
  2332  000AB2  4BC0               	infsnz	main@t_dep& (0+255),f,b
  2333  000AB4  2BC1               	incf	(main@t_dep+1)& (0+255),f,b
  2334                           
  2335                           ; BSR set to: 1
  2336                           ;main.c: 815:                     }
  2337  000AB6  4BB6               	infsnz	main@i_1026& (0+255),f,b
  2338  000AB8  2BB7               	incf	(main@i_1026+1)& (0+255),f,b
  2339  000ABA                     l8298:
  2340                           
  2341                           ; BSR set to: 1
  2342  000ABA  51BE               	movf	main@t_count& (0+255),w,b
  2343  000ABC  5DB6               	subwf	main@i_1026& (0+255),w,b
  2344  000ABE  51B7               	movf	(main@i_1026+1)& (0+255),w,b
  2345  000AC0  0A80               	xorlw	128
  2346  000AC2  6F5A               	movwf	??_main& (0+255),b
  2347  000AC4  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2348  000AC6  0A80               	xorlw	128
  2349  000AC8  595A               	subwfb	??_main& (0+255),w,b
  2350  000ACA  A0D8               	btfss	status,0,c
  2351  000ACC  D7E7               	goto	l8292
  2352  000ACE                     u8980:
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;main.c: 817:                 act_done = 1;
  2356  000ACE  0E01               	movlw	1
  2357  000AD0  6FB8               	movwf	main@act_done& (0+255),b
  2358  000AD2                     l544:
  2359                           
  2360                           ; BSR set to: 1
  2361                           ;main.c: 819:             if (act_done){
  2362  000AD2  51B8               	movf	main@act_done& (0+255),w,b
  2363  000AD4  B4D8               	btfsc	status,2,c
  2364  000AD6  D1AA               	goto	l8382
  2365                           
  2366                           ; BSR set to: 1
  2367                           ;main.c: 820:             Pole[poles_detected].dist_from_cl = avg_dist;
  2368  000AD8  C1C4  F15A         	movff	main@poles_detected,??_main
  2369  000ADC  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2370  000AE0  90D8               	bcf	status,0,c
  2371  000AE2  375A               	rlcf	??_main& (0+255),f,b
  2372  000AE4  375B               	rlcf	(??_main+1)& (0+255),f,b
  2373  000AE6  90D8               	bcf	status,0,c
  2374  000AE8  375A               	rlcf	??_main& (0+255),f,b
  2375  000AEA  375B               	rlcf	(??_main+1)& (0+255),f,b
  2376  000AEC  90D8               	bcf	status,0,c
  2377  000AEE  375A               	rlcf	??_main& (0+255),f,b
  2378  000AF0  375B               	rlcf	(??_main+1)& (0+255),f,b
  2379  000AF2  0E06               	movlw	6
  2380  000AF4  275A               	addwf	??_main& (0+255),f,b
  2381  000AF6  0E00               	movlw	0
  2382  000AF8  235B               	addwfc	(??_main+1)& (0+255),f,b
  2383  000AFA  0E62               	movlw	low main@Pole
  2384  000AFC  255A               	addwf	??_main& (0+255),w,b
  2385  000AFE  6ED9               	movwf	fsr2l,c
  2386  000B00  0E01               	movlw	high main@Pole
  2387  000B02  215B               	addwfc	(??_main+1)& (0+255),w,b
  2388  000B04  6EDA               	movwf	fsr2h,c
  2389  000B06  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2390  000B0A  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2391                           
  2392                           ;main.c: 821:             Pole[poles_detected].dist_from_start = avg_dist+prev_avg_dist;
  2393  000B0E  51C6               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2394  000B10  2444               	addwf	_avg_dist,w,c	;volatile
  2395  000B12  6F5A               	movwf	??_main& (0+255),b
  2396  000B14  51C7               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2397  000B16  2045               	addwfc	_avg_dist+1,w,c	;volatile
  2398  000B18  6F5B               	movwf	(??_main+1)& (0+255),b
  2399  000B1A  C1C4  F15C         	movff	main@poles_detected,??_main+2
  2400  000B1E  C1C5  F15D         	movff	main@poles_detected+1,??_main+3
  2401  000B22  90D8               	bcf	status,0,c
  2402  000B24  375C               	rlcf	(??_main+2)& (0+255),f,b
  2403  000B26  375D               	rlcf	(??_main+3)& (0+255),f,b
  2404  000B28  90D8               	bcf	status,0,c
  2405  000B2A  375C               	rlcf	(??_main+2)& (0+255),f,b
  2406  000B2C  375D               	rlcf	(??_main+3)& (0+255),f,b
  2407  000B2E  90D8               	bcf	status,0,c
  2408  000B30  375C               	rlcf	(??_main+2)& (0+255),f,b
  2409  000B32  375D               	rlcf	(??_main+3)& (0+255),f,b
  2410  000B34  0E04               	movlw	4
  2411  000B36  275C               	addwf	(??_main+2)& (0+255),f,b
  2412  000B38  0E00               	movlw	0
  2413  000B3A  235D               	addwfc	(??_main+3)& (0+255),f,b
  2414  000B3C  0E62               	movlw	low main@Pole
  2415  000B3E  255C               	addwf	(??_main+2)& (0+255),w,b
  2416  000B40  6ED9               	movwf	fsr2l,c
  2417  000B42  0E01               	movlw	high main@Pole
  2418  000B44  215D               	addwfc	(??_main+3)& (0+255),w,b
  2419  000B46  6EDA               	movwf	fsr2h,c
  2420  000B48  C15A  FFDE         	movff	??_main,postinc2
  2421  000B4C  C15B  FFDD         	movff	??_main+1,postdec2
  2422                           
  2423                           ; BSR set to: 1
  2424                           ;main.c: 822:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2425  000B50  0E01               	movlw	1
  2426  000B52  ECE0  F01E         	call	_lcdInst
  2427  000B56  0E11               	movlw	17
  2428  000B58  0101               	movlb	1	; () banked
  2429  000B5A  6F5A               	movwf	??_main& (0+255),b
  2430  000B5C  0E3A               	movlw	58
  2431  000B5E                     u9077:
  2432  000B5E  2EE8               	decfsz	wreg,f,c
  2433  000B60  D7FE               	bra	u9077
  2434  000B62  2F5A               	decfsz	??_main& (0+255),f,b
  2435  000B64  D7FC               	bra	u9077
  2436  000B66  F000               	nop	
  2437                           
  2438                           ;main.c: 823:             printf("dist p[%d]:%d,%d", poles_detected,Pole[poles_detected]
      +                          .dist_from_cl, avg_dist);
  2439  000B68  0E2C               	movlw	low STR_58
  2440  000B6A  0100               	movlb	0	; () banked
  2441  000B6C  6FED               	movwf	printf@fmt& (0+255),b
  2442  000B6E  0EFE               	movlw	high STR_58
  2443  000B70  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2444  000B72  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2445  000B76  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2446  000B7A  C1C4  F15A         	movff	main@poles_detected,??_main
  2447  000B7E  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2448  000B82  0101               	movlb	1	; () banked
  2449  000B84  90D8               	bcf	status,0,c
  2450  000B86  375A               	rlcf	??_main& (0+255),f,b
  2451  000B88  375B               	rlcf	(??_main+1)& (0+255),f,b
  2452  000B8A  90D8               	bcf	status,0,c
  2453  000B8C  375A               	rlcf	??_main& (0+255),f,b
  2454  000B8E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2455  000B90  90D8               	bcf	status,0,c
  2456  000B92  375A               	rlcf	??_main& (0+255),f,b
  2457  000B94  375B               	rlcf	(??_main+1)& (0+255),f,b
  2458  000B96  0E06               	movlw	6
  2459  000B98  275A               	addwf	??_main& (0+255),f,b
  2460  000B9A  0E00               	movlw	0
  2461  000B9C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2462  000B9E  0E62               	movlw	low main@Pole
  2463  000BA0  255A               	addwf	??_main& (0+255),w,b
  2464  000BA2  6ED9               	movwf	fsr2l,c
  2465  000BA4  0E01               	movlw	high main@Pole
  2466  000BA6  215B               	addwfc	(??_main+1)& (0+255),w,b
  2467  000BA8  6EDA               	movwf	fsr2h,c
  2468  000BAA  CFDE F0F1          	movff	postinc2,?_printf+4
  2469  000BAE  CFDD F0F2          	movff	postdec2,?_printf+5
  2470  000BB2  C044  F0F3         	movff	_avg_dist,?_printf+6	;volatile
  2471  000BB6  C045  F0F4         	movff	_avg_dist+1,?_printf+7	;volatile
  2472  000BBA  C046  F0F5         	movff	_avg_dist+2,?_printf+8	;volatile
  2473  000BBE  C047  F0F6         	movff	_avg_dist+3,?_printf+9	;volatile
  2474  000BC2  EC7A  F01E         	call	_printf	;wreg free
  2475  000BC6  0EC0               	movlw	192
  2476  000BC8  ECE0  F01E         	call	_lcdInst
  2477                           
  2478                           ;main.c: 825:             printf("p[%d] fs : %d",poles_detected, Pole[poles_detected].di
      +                          st_from_start);
  2479  000BCC  0EB8               	movlw	low STR_59
  2480  000BCE  0100               	movlb	0	; () banked
  2481  000BD0  6FED               	movwf	printf@fmt& (0+255),b
  2482  000BD2  0EFE               	movlw	high STR_59
  2483  000BD4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2484  000BD6  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2485  000BDA  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2486  000BDE  C1C4  F15A         	movff	main@poles_detected,??_main
  2487  000BE2  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2488  000BE6  0101               	movlb	1	; () banked
  2489  000BE8  90D8               	bcf	status,0,c
  2490  000BEA  375A               	rlcf	??_main& (0+255),f,b
  2491  000BEC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2492  000BEE  90D8               	bcf	status,0,c
  2493  000BF0  375A               	rlcf	??_main& (0+255),f,b
  2494  000BF2  375B               	rlcf	(??_main+1)& (0+255),f,b
  2495  000BF4  90D8               	bcf	status,0,c
  2496  000BF6  375A               	rlcf	??_main& (0+255),f,b
  2497  000BF8  375B               	rlcf	(??_main+1)& (0+255),f,b
  2498  000BFA  0E04               	movlw	4
  2499  000BFC  275A               	addwf	??_main& (0+255),f,b
  2500  000BFE  0E00               	movlw	0
  2501  000C00  235B               	addwfc	(??_main+1)& (0+255),f,b
  2502  000C02  0E62               	movlw	low main@Pole
  2503  000C04  255A               	addwf	??_main& (0+255),w,b
  2504  000C06  6ED9               	movwf	fsr2l,c
  2505  000C08  0E01               	movlw	high main@Pole
  2506  000C0A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2507  000C0C  6EDA               	movwf	fsr2h,c
  2508  000C0E  CFDE F0F1          	movff	postinc2,?_printf+4
  2509  000C12  CFDD F0F2          	movff	postdec2,?_printf+5
  2510  000C16  EC7A  F01E         	call	_printf	;wreg free
  2511                           
  2512                           ;main.c: 826:             _delay((unsigned long)((3000)*(10000000/4000.0)));
  2513  000C1A  0E27               	movlw	39
  2514  000C1C  0101               	movlb	1	; () banked
  2515  000C1E  6F5B               	movwf	(??_main+1)& (0+255),b
  2516  000C20  0E0D               	movlw	13
  2517  000C22  6F5A               	movwf	??_main& (0+255),b
  2518  000C24  0E26               	movlw	38
  2519  000C26                     u9087:
  2520  000C26  2EE8               	decfsz	wreg,f,c
  2521  000C28  D7FE               	bra	u9087
  2522  000C2A  2F5A               	decfsz	??_main& (0+255),f,b
  2523  000C2C  D7FC               	bra	u9087
  2524  000C2E  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2525  000C30  D7FA               	bra	u9087
  2526  000C32  F000               	nop	
  2527                           
  2528                           ;main.c: 828:             prev_avg_dist = avg_dist ;
  2529  000C34  C044  F1C6         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2530  000C38  C045  F1C7         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2531  000C3C  C046  F1C8         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2532  000C40  C047  F1C9         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2533                           
  2534                           ;main.c: 829:             poles_detected++;
  2535  000C44  0101               	movlb	1	; () banked
  2536  000C46  4BC4               	infsnz	main@poles_detected& (0+255),f,b
  2537  000C48  2BC5               	incf	(main@poles_detected+1)& (0+255),f,b
  2538                           
  2539                           ; BSR set to: 1
  2540                           ;main.c: 830:             start();
  2541  000C4A  ECF2  F01C         	call	_start	;wreg free
  2542                           
  2543                           ;main.c: 831:             arduino_stopped = 0;
  2544  000C4E  0E00               	movlw	0
  2545  000C50  0101               	movlb	1	; () banked
  2546  000C52  6FB9               	movwf	main@arduino_stopped& (0+255),b
  2547                           
  2548                           ; BSR set to: 1
  2549                           ;main.c: 833:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2550  000C54  0E01               	movlw	1
  2551  000C56  ECE0  F01E         	call	_lcdInst
  2552  000C5A  0E11               	movlw	17
  2553  000C5C  0101               	movlb	1	; () banked
  2554  000C5E  6F5A               	movwf	??_main& (0+255),b
  2555  000C60  0E3A               	movlw	58
  2556  000C62                     u9097:
  2557  000C62  2EE8               	decfsz	wreg,f,c
  2558  000C64  D7FE               	bra	u9097
  2559  000C66  2F5A               	decfsz	??_main& (0+255),f,b
  2560  000C68  D7FC               	bra	u9097
  2561  000C6A  F000               	nop	
  2562                           
  2563                           ;main.c: 834:             printf("avg dist %d", avg_dist);
  2564  000C6C  0E2F               	movlw	low STR_60
  2565  000C6E  0100               	movlb	0	; () banked
  2566  000C70  6FED               	movwf	printf@fmt& (0+255),b
  2567  000C72  0EFF               	movlw	high STR_60
  2568  000C74  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2569  000C76  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2570  000C7A  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2571  000C7E  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2572  000C82  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2573  000C86  EC7A  F01E         	call	_printf	;wreg free
  2574                           
  2575                           ;main.c: 835:             printf("poles d %d", poles_detected);
  2576  000C8A  0E53               	movlw	low STR_61
  2577  000C8C  0100               	movlb	0	; () banked
  2578  000C8E  6FED               	movwf	printf@fmt& (0+255),b
  2579  000C90  0EFF               	movlw	high STR_61
  2580  000C92  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2581  000C94  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2582  000C98  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2583  000C9C  EC7A  F01E         	call	_printf	;wreg free
  2584                           
  2585                           ;main.c: 836:             for (int i=0;i<4;i++){
  2586  000CA0  0E00               	movlw	0
  2587  000CA2  0101               	movlb	1	; () banked
  2588  000CA4  6FC3               	movwf	(main@i_1032+1)& (0+255),b
  2589  000CA6  0E00               	movlw	0
  2590  000CA8  6FC2               	movwf	main@i_1032& (0+255),b
  2591  000CAA                     l8334:
  2592                           
  2593                           ; BSR set to: 1
  2594  000CAA  BFC3               	btfsc	(main@i_1032+1)& (0+255),7,b
  2595  000CAC  D006               	goto	l8338
  2596  000CAE  51C3               	movf	(main@i_1032+1)& (0+255),w,b
  2597  000CB0  E15D               	bnz	l8356
  2598  000CB2  0E04               	movlw	4
  2599  000CB4  5DC2               	subwf	main@i_1032& (0+255),w,b
  2600  000CB6  B0D8               	btfsc	status,0,c
  2601  000CB8  D059               	goto	l8356
  2602  000CBA                     l8338:
  2603                           
  2604                           ; BSR set to: 1
  2605                           ;main.c: 837:                 sum[i] = 0 ;
  2606  000CBA  90D8               	bcf	status,0,c
  2607  000CBC  35C2               	rlcf	main@i_1032& (0+255),w,b
  2608  000CBE  6ED9               	movwf	fsr2l,c
  2609  000CC0  35C3               	rlcf	(main@i_1032+1)& (0+255),w,b
  2610  000CC2  6EDA               	movwf	fsr2h,c
  2611  000CC4  0E38               	movlw	low _sum
  2612  000CC6  26D9               	addwf	fsr2l,f,c
  2613  000CC8  0E00               	movlw	high _sum
  2614  000CCA  22DA               	addwfc	fsr2h,f,c
  2615  000CCC  0E00               	movlw	0
  2616  000CCE  6EDE               	movwf	postinc2,c
  2617  000CD0  0E00               	movlw	0
  2618  000CD2  6EDD               	movwf	postdec2,c
  2619                           
  2620                           ;main.c: 838:                 a[i] =0 ;
  2621  000CD4  90D8               	bcf	status,0,c
  2622  000CD6  35C2               	rlcf	main@i_1032& (0+255),w,b
  2623  000CD8  6ED9               	movwf	fsr2l,c
  2624  000CDA  35C3               	rlcf	(main@i_1032+1)& (0+255),w,b
  2625  000CDC  6EDA               	movwf	fsr2h,c
  2626  000CDE  0E61               	movlw	low _a
  2627  000CE0  26D9               	addwf	fsr2l,f,c
  2628  000CE2  0E00               	movlw	high _a
  2629  000CE4  22DA               	addwfc	fsr2h,f,c
  2630  000CE6  0E00               	movlw	0
  2631  000CE8  6EDE               	movwf	postinc2,c
  2632  000CEA  0E00               	movlw	0
  2633  000CEC  6EDD               	movwf	postdec2,c
  2634                           
  2635                           ;main.c: 839:                 sumf[i] = 0 ;
  2636  000CEE  0E40               	movlw	low _sumf
  2637  000CF0  25C2               	addwf	main@i_1032& (0+255),w,b
  2638  000CF2  6ED9               	movwf	fsr2l,c
  2639  000CF4  0E00               	movlw	high _sumf
  2640  000CF6  21C3               	addwfc	(main@i_1032+1)& (0+255),w,b
  2641  000CF8  6EDA               	movwf	fsr2h,c
  2642  000CFA  0E00               	movlw	0
  2643  000CFC  6EDF               	movwf	indf2,c
  2644                           
  2645                           ; BSR set to: 1
  2646                           ;main.c: 840:                 for (int k=0;k<6;k++){
  2647  000CFE  0E00               	movlw	0
  2648  000D00  6FBD               	movwf	(main@k+1)& (0+255),b
  2649  000D02  0E00               	movlw	0
  2650  000D04  6FBC               	movwf	main@k& (0+255),b
  2651  000D06                     l8342:
  2652                           
  2653                           ; BSR set to: 1
  2654  000D06  BFBD               	btfsc	(main@k+1)& (0+255),7,b
  2655  000D08  D006               	goto	l8346
  2656  000D0A  51BD               	movf	(main@k+1)& (0+255),w,b
  2657  000D0C  E12C               	bnz	l8352
  2658  000D0E  0E06               	movlw	6
  2659  000D10  5DBC               	subwf	main@k& (0+255),w,b
  2660  000D12  B0D8               	btfsc	status,0,c
  2661  000D14  D028               	goto	l8352
  2662  000D16                     l8346:
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;main.c: 841:                     dist_final[i][k] = 0;
  2666  000D16  C1C2  F080         	movff	main@i_1032,___wmul@multiplier
  2667  000D1A  C1C3  F081         	movff	main@i_1032+1,___wmul@multiplier+1
  2668  000D1E  0E00               	movlw	0
  2669  000D20  0100               	movlb	0	; () banked
  2670  000D22  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2671  000D24  0E0C               	movlw	12
  2672  000D26  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2673  000D28  EC8E  F01E         	call	___wmul	;wreg free
  2674  000D2C  0E50               	movlw	low _dist_final
  2675  000D2E  0101               	movlb	1	; () banked
  2676  000D30  6F5A               	movwf	??_main& (0+255),b
  2677  000D32  0E02               	movlw	high _dist_final
  2678  000D34  6F5B               	movwf	(??_main+1)& (0+255),b
  2679  000D36  0100               	movlb	0	; () banked
  2680  000D38  5180               	movf	?___wmul& (0+255),w,b
  2681  000D3A  0101               	movlb	1	; () banked
  2682  000D3C  275A               	addwf	??_main& (0+255),f,b
  2683  000D3E  0100               	movlb	0	; () banked
  2684  000D40  5181               	movf	(?___wmul+1)& (0+255),w,b
  2685  000D42  0101               	movlb	1	; () banked
  2686  000D44  235B               	addwfc	(??_main+1)& (0+255),f,b
  2687  000D46  90D8               	bcf	status,0,c
  2688  000D48  35BC               	rlcf	main@k& (0+255),w,b
  2689  000D4A  6ED9               	movwf	fsr2l,c
  2690  000D4C  35BD               	rlcf	(main@k+1)& (0+255),w,b
  2691  000D4E  6EDA               	movwf	fsr2h,c
  2692  000D50  515A               	movf	??_main& (0+255),w,b
  2693  000D52  26D9               	addwf	fsr2l,f,c
  2694  000D54  515B               	movf	(??_main+1)& (0+255),w,b
  2695  000D56  22DA               	addwfc	fsr2h,f,c
  2696  000D58  0E00               	movlw	0
  2697  000D5A  6EDE               	movwf	postinc2,c
  2698  000D5C  0E00               	movlw	0
  2699  000D5E  6EDD               	movwf	postdec2,c
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;main.c: 842:                     }
  2703  000D60  4BBC               	infsnz	main@k& (0+255),f,b
  2704  000D62  2BBD               	incf	(main@k+1)& (0+255),f,b
  2705  000D64  D7D0               	goto	l8342
  2706  000D66                     l8352:
  2707                           
  2708                           ; BSR set to: 1
  2709                           ;main.c: 843:                 }
  2710  000D66  4BC2               	infsnz	main@i_1032& (0+255),f,b
  2711  000D68  2BC3               	incf	(main@i_1032+1)& (0+255),f,b
  2712  000D6A  D79F               	goto	l8334
  2713  000D6C                     l8356:
  2714                           
  2715                           ; BSR set to: 1
  2716                           ;main.c: 844:                 _delay((unsigned long)((1000)*(10000000/4000.0)));
  2717  000D6C  0E0D               	movlw	13
  2718  000D6E  0101               	movlb	1	; () banked
  2719  000D70  6F5B               	movwf	(??_main+1)& (0+255),b
  2720  000D72  0EAF               	movlw	175
  2721  000D74  6F5A               	movwf	??_main& (0+255),b
  2722  000D76  0EB6               	movlw	182
  2723  000D78                     u9107:
  2724  000D78  2EE8               	decfsz	wreg,f,c
  2725  000D7A  D7FE               	bra	u9107
  2726  000D7C  2F5A               	decfsz	??_main& (0+255),f,b
  2727  000D7E  D7FC               	bra	u9107
  2728  000D80  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2729  000D82  D7FA               	bra	u9107
  2730  000D84  F000               	nop	
  2731                           
  2732                           ;main.c: 845:                 sens = 1;
  2733  000D86  0E00               	movlw	0
  2734  000D88  6E59               	movwf	_sens+1,c	;volatile
  2735  000D8A  0E01               	movlw	1
  2736  000D8C  6E58               	movwf	_sens,c	;volatile
  2737  000D8E  D04E               	goto	l8382
  2738  000D90                     l8360:
  2739                           
  2740                           ; BSR set to: 1
  2741                           ;main.c: 849:             brake();
  2742  000D90  ECCD  F019         	call	_brake	;wreg free
  2743                           
  2744                           ;main.c: 850:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2745  000D94  0E01               	movlw	1
  2746  000D96  ECE0  F01E         	call	_lcdInst
  2747  000D9A  0E11               	movlw	17
  2748  000D9C  0101               	movlb	1	; () banked
  2749  000D9E  6F5A               	movwf	??_main& (0+255),b
  2750  000DA0  0E3A               	movlw	58
  2751  000DA2                     u9117:
  2752  000DA2  2EE8               	decfsz	wreg,f,c
  2753  000DA4  D7FE               	bra	u9117
  2754  000DA6  2F5A               	decfsz	??_main& (0+255),f,b
  2755  000DA8  D7FC               	bra	u9117
  2756  000DAA  F000               	nop	
  2757                           
  2758                           ;main.c: 851:             printf("poles done");
  2759  000DAC  0E69               	movlw	low STR_62
  2760  000DAE  0100               	movlb	0	; () banked
  2761  000DB0  6FED               	movwf	printf@fmt& (0+255),b
  2762  000DB2  0EFF               	movlw	high STR_62
  2763  000DB4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2764  000DB6  EC7A  F01E         	call	_printf	;wreg free
  2765                           
  2766                           ;main.c: 852:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2767  000DBA  0E0D               	movlw	13
  2768  000DBC  0101               	movlb	1	; () banked
  2769  000DBE  6F5B               	movwf	(??_main+1)& (0+255),b
  2770  000DC0  0EAF               	movlw	175
  2771  000DC2  6F5A               	movwf	??_main& (0+255),b
  2772  000DC4  0EB6               	movlw	182
  2773  000DC6                     u9127:
  2774  000DC6  2EE8               	decfsz	wreg,f,c
  2775  000DC8  D7FE               	bra	u9127
  2776  000DCA  2F5A               	decfsz	??_main& (0+255),f,b
  2777  000DCC  D7FC               	bra	u9127
  2778  000DCE  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2779  000DD0  D7FA               	bra	u9127
  2780  000DD2  F000               	nop	
  2781                           
  2782                           ;main.c: 853:             UI_main(t_dep, poles_detected);
  2783  000DD4  C1C0  F0FB         	movff	main@t_dep,UI_main@t_dep
  2784  000DD8  C1C1  F0FC         	movff	main@t_dep+1,UI_main@t_dep+1
  2785  000DDC  C1C4  F0FD         	movff	main@poles_detected,UI_main@poles_detected
  2786  000DE0  C1C5  F0FE         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2787  000DE4  EC09  F000         	call	_UI_main	;wreg free
  2788                           
  2789                           ;main.c: 854:             backwards();
  2790  000DE8  ECA2  F01E         	call	_backwards	;wreg free
  2791                           
  2792                           ;main.c: 855:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2793  000DEC  0E01               	movlw	1
  2794  000DEE  ECE0  F01E         	call	_lcdInst
  2795  000DF2  0E11               	movlw	17
  2796  000DF4  0101               	movlb	1	; () banked
  2797  000DF6  6F5A               	movwf	??_main& (0+255),b
  2798  000DF8  0E3A               	movlw	58
  2799  000DFA                     u9137:
  2800  000DFA  2EE8               	decfsz	wreg,f,c
  2801  000DFC  D7FE               	bra	u9137
  2802  000DFE  2F5A               	decfsz	??_main& (0+255),f,b
  2803  000E00  D7FC               	bra	u9137
  2804  000E02  F000               	nop	
  2805                           
  2806                           ;main.c: 856:             printf("backwards");
  2807  000E04  0EB1               	movlw	low STR_63
  2808  000E06  0100               	movlb	0	; () banked
  2809  000E08  6FED               	movwf	printf@fmt& (0+255),b
  2810  000E0A  0EFF               	movlw	high STR_63
  2811  000E0C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2812  000E0E  EC7A  F01E         	call	_printf	;wreg free
  2813                           
  2814                           ;main.c: 857:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2815  000E12  0E0D               	movlw	13
  2816  000E14  0101               	movlb	1	; () banked
  2817  000E16  6F5B               	movwf	(??_main+1)& (0+255),b
  2818  000E18  0EAF               	movlw	175
  2819  000E1A  6F5A               	movwf	??_main& (0+255),b
  2820  000E1C  0EB6               	movlw	182
  2821  000E1E                     u9147:
  2822  000E1E  2EE8               	decfsz	wreg,f,c
  2823  000E20  D7FE               	bra	u9147
  2824  000E22  2F5A               	decfsz	??_main& (0+255),f,b
  2825  000E24  D7FC               	bra	u9147
  2826  000E26  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2827  000E28  D7FA               	bra	u9147
  2828  000E2A  F000               	nop	
  2829  000E2C                     l8382:
  2830                           
  2831                           ;main.c: 859:         t_count = 5;
  2832  000E2C  0E00               	movlw	0
  2833  000E2E  0101               	movlb	1	; () banked
  2834  000E30  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2835  000E32  0E05               	movlw	5
  2836  000E34  6FBE               	movwf	main@t_count& (0+255),b
  2837  000E36  D52B               	goto	l8212
  2838  000E38                     __end_of_main:
  2839                           	opt callstack 0
  2840                           
  2841 ;; *************** function _ultrasonic_main *****************
  2842 ;; Defined at:
  2843 ;;		line 291 in file "main.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  min_us_dist     2   10[BANK1 ] int 
  2848 ;;  steps2_adj      2    8[BANK1 ] int 
  2849 ;;  step2_offset    2    6[BANK1 ] int 
  2850 ;;  sensed          2    4[BANK1 ] int 
  2851 ;;  min_us_dist     2    0        int 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2  124[BANK0 ] int 
  2854 ;; Registers used:
  2855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:       14 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:   15
  2868 ;; This function calls:
  2869 ;;		_abs
  2870 ;;		_lcdInst
  2871 ;;		_min
  2872 ;;		_print_echo
  2873 ;;		_printf
  2874 ;;		_trig
  2875 ;; This function is called by:
  2876 ;;		_main
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text1
  2881  00256A                     __ptext1:
  2882                           	opt callstack 0
  2883  00256A                     _ultrasonic_main:
  2884                           	opt callstack 15
  2885                           
  2886                           ;main.c: 292:     TRISBbits.RB0 = 0;
  2887                           
  2888                           ; BSR set to: 1
  2889                           ;incstack = 0
  2890  00256A  9093               	bcf	3987,0,c	;volatile
  2891                           
  2892                           ;main.c: 293:     LATBbits.LATB0 = 1;
  2893  00256C  808A               	bsf	3978,0,c	;volatile
  2894                           
  2895                           ;main.c: 295:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2896  00256E  0E01               	movlw	1
  2897  002570  ECE0  F01E         	call	_lcdInst
  2898  002574  0E11               	movlw	17
  2899  002576  0101               	movlb	1	; () banked
  2900  002578  6F00               	movwf	??_ultrasonic_main& (0+255),b
  2901  00257A  0E3A               	movlw	58
  2902  00257C                     u9157:
  2903  00257C  2EE8               	decfsz	wreg,f,c
  2904  00257E  D7FE               	bra	u9157
  2905  002580  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  2906  002582  D7FC               	bra	u9157
  2907  002584  F000               	nop	
  2908                           
  2909                           ;main.c: 296:     printf("or here");
  2910  002586  0EEC               	movlw	low STR_18
  2911  002588  0100               	movlb	0	; () banked
  2912  00258A  6FED               	movwf	printf@fmt& (0+255),b
  2913  00258C  0EFF               	movlw	high STR_18
  2914  00258E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2915  002590  EC7A  F01E         	call	_printf	;wreg free
  2916                           
  2917                           ;main.c: 297:  TRISB = 0b11110000;
  2918  002594  0EF0               	movlw	240
  2919  002596  6E93               	movwf	3987,c	;volatile
  2920                           
  2921                           ;main.c: 298:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2922  002598  0E01               	movlw	1
  2923  00259A  ECE0  F01E         	call	_lcdInst
  2924  00259E  0E11               	movlw	17
  2925  0025A0  0101               	movlb	1	; () banked
  2926  0025A2  6F00               	movwf	??_ultrasonic_main& (0+255),b
  2927  0025A4  0E3A               	movlw	58
  2928  0025A6                     u9167:
  2929  0025A6  2EE8               	decfsz	wreg,f,c
  2930  0025A8  D7FE               	bra	u9167
  2931  0025AA  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  2932  0025AC  D7FC               	bra	u9167
  2933  0025AE  F000               	nop	
  2934                           
  2935                           ;main.c: 299:     printf("break heree?");
  2936  0025B0  0EF0               	movlw	low STR_19
  2937  0025B2  0100               	movlb	0	; () banked
  2938  0025B4  6FED               	movwf	printf@fmt& (0+255),b
  2939  0025B6  0EFE               	movlw	high STR_19
  2940  0025B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2941  0025BA  EC7A  F01E         	call	_printf	;wreg free
  2942                           
  2943                           ;main.c: 300:     RBIF = 0;
  2944  0025BE  90F2               	bcf	4082,0,c	;volatile
  2945                           
  2946                           ;main.c: 301:  RBIE = 1;
  2947  0025C0  86F2               	bsf	4082,3,c	;volatile
  2948                           
  2949                           ;main.c: 303:     int sensed = 0;
  2950  0025C2  0E00               	movlw	0
  2951  0025C4  0101               	movlb	1	; () banked
  2952  0025C6  6F05               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2953  0025C8  0E00               	movlw	0
  2954  0025CA  6F04               	movwf	ultrasonic_main@sensed& (0+255),b
  2955                           
  2956                           ;main.c: 305:     int steps2_adj=0;
  2957  0025CC  0E00               	movlw	0
  2958  0025CE  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2959  0025D0  0E00               	movlw	0
  2960  0025D2  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2961                           
  2962                           ;main.c: 306:     int step2_offset=0;
  2963  0025D4  0E00               	movlw	0
  2964  0025D6  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2965  0025D8  0E00               	movlw	0
  2966  0025DA  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2967                           
  2968                           ;main.c: 307:     while(send){
  2969  0025DC  D070               	goto	l451
  2970  0025DE                     l7744:
  2971                           
  2972                           ; BSR set to: 1
  2973                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  2974  0025DE  0E00               	movlw	0
  2975  0025E0  6E51               	movwf	_meas+1,c	;volatile
  2976  0025E2  0E00               	movlw	0
  2977  0025E4  6E50               	movwf	_meas,c	;volatile
  2978  0025E6                     l7746:
  2979                           
  2980                           ; BSR set to: 1
  2981  0025E6  BE51               	btfsc	_meas+1,7,c	;volatile
  2982  0025E8  D006               	goto	l7750
  2983  0025EA  5051               	movf	_meas+1,w,c	;volatile
  2984  0025EC  E160               	bnz	l7782
  2985  0025EE  0E03               	movlw	3
  2986  0025F0  5C50               	subwf	_meas,w,c	;volatile
  2987  0025F2  B0D8               	btfsc	status,0,c
  2988  0025F4  D05C               	goto	l7782
  2989  0025F6                     l7750:
  2990                           
  2991                           ; BSR set to: 1
  2992                           ;main.c: 309:         trig();
  2993  0025F6  EC28  F017         	call	_trig	;wreg free
  2994                           
  2995                           ;main.c: 310:         RBIE = 0;
  2996  0025FA  96F2               	bcf	4082,3,c	;volatile
  2997                           
  2998                           ;main.c: 311:         print_echo();
  2999  0025FC  ECBE  F011         	call	_print_echo	;wreg free
  3000                           
  3001                           ;main.c: 312:         RBIE = 1;
  3002  002600  86F2               	bsf	4082,3,c	;volatile
  3003                           
  3004                           ;main.c: 313:         int min_us_dist = min(a, 4);
  3005  002602  0E61               	movlw	low _a
  3006  002604  0100               	movlb	0	; () banked
  3007  002606  6F80               	movwf	min@array& (0+255),b
  3008  002608  0E00               	movlw	high _a
  3009  00260A  6F81               	movwf	(min@array+1)& (0+255),b
  3010  00260C  0E00               	movlw	0
  3011  00260E  6F83               	movwf	(min@size+1)& (0+255),b
  3012  002610  0E04               	movlw	4
  3013  002612  6F82               	movwf	min@size& (0+255),b
  3014  002614  ECA0  F016         	call	_min	;wreg free
  3015  002618  C080  F10A         	movff	?_min,ultrasonic_main@min_us_dist_918
  3016  00261C  C081  F10B         	movff	?_min+1,ultrasonic_main@min_us_dist_918+1
  3017                           
  3018                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3019  002620  0E01               	movlw	1
  3020  002622  ECE0  F01E         	call	_lcdInst
  3021  002626  0E11               	movlw	17
  3022  002628  0101               	movlb	1	; () banked
  3023  00262A  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3024  00262C  0E3A               	movlw	58
  3025  00262E                     u9177:
  3026  00262E  2EE8               	decfsz	wreg,f,c
  3027  002630  D7FE               	bra	u9177
  3028  002632  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3029  002634  D7FC               	bra	u9177
  3030  002636  F000               	nop	
  3031                           
  3032                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  3033  002638  0E5E               	movlw	low STR_20
  3034  00263A  0100               	movlb	0	; () banked
  3035  00263C  6FED               	movwf	printf@fmt& (0+255),b
  3036  00263E  0EFF               	movlw	high STR_20
  3037  002640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3038  002642  C10A  F0EF         	movff	ultrasonic_main@min_us_dist_918,?_printf+2
  3039  002646  C10B  F0F0         	movff	ultrasonic_main@min_us_dist_918+1,?_printf+3
  3040  00264A  EC7A  F01E         	call	_printf	;wreg free
  3041                           
  3042                           ;main.c: 317:         if (min_us_dist<14){
  3043  00264E  0101               	movlb	1	; () banked
  3044  002650  BF0B               	btfsc	(ultrasonic_main@min_us_dist_918+1)& (0+255),7,b
  3045  002652  D006               	goto	u8300
  3046  002654  510B               	movf	(ultrasonic_main@min_us_dist_918+1)& (0+255),w,b
  3047  002656  E108               	bnz	l7770
  3048  002658  0E0E               	movlw	14
  3049  00265A  5D0A               	subwf	ultrasonic_main@min_us_dist_918& (0+255),w,b
  3050  00265C  B0D8               	btfsc	status,0,c
  3051  00265E  D004               	goto	l7770
  3052  002660                     u8300:
  3053                           
  3054                           ; BSR set to: 1
  3055                           ;main.c: 318:             step2_offset = 0;
  3056  002660  0E00               	movlw	0
  3057  002662  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3058  002664  0E00               	movlw	0
  3059  002666  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3060  002668                     l7770:
  3061                           
  3062                           ; BSR set to: 1
  3063                           ;main.c: 320:         if (min_us_dist>=14){
  3064  002668  BF0B               	btfsc	(ultrasonic_main@min_us_dist_918+1)& (0+255),7,b
  3065  00266A  D015               	goto	l7774
  3066  00266C  510B               	movf	(ultrasonic_main@min_us_dist_918+1)& (0+255),w,b
  3067  00266E  E104               	bnz	u8310
  3068  002670  0E0E               	movlw	14
  3069  002672  5D0A               	subwf	ultrasonic_main@min_us_dist_918& (0+255),w,b
  3070  002674  A0D8               	btfss	status,0,c
  3071  002676  D00F               	goto	l7774
  3072  002678                     u8310:
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  3076  002678  0EF2               	movlw	242
  3077  00267A  250A               	addwf	ultrasonic_main@min_us_dist_918& (0+255),w,b
  3078  00267C  0100               	movlb	0	; () banked
  3079  00267E  6F92               	movwf	abs@a& (0+255),b
  3080  002680  0EFF               	movlw	255
  3081  002682  0101               	movlb	1	; () banked
  3082  002684  210B               	addwfc	(ultrasonic_main@min_us_dist_918+1)& (0+255),w,b
  3083  002686  0100               	movlb	0	; () banked
  3084  002688  6F93               	movwf	(abs@a+1)& (0+255),b
  3085  00268A  ECB9  F01D         	call	_abs	;wreg free
  3086  00268E  C092  F106         	movff	?_abs,ultrasonic_main@step2_offset
  3087  002692  C093  F107         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  3088  002696                     l7774:
  3089                           
  3090                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  3091  002696  0E6E               	movlw	110
  3092  002698  0101               	movlb	1	; () banked
  3093  00269A  2506               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  3094  00269C  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3095  00269E  0E00               	movlw	0
  3096  0026A0  2107               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  3097  0026A2  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3098                           
  3099                           ; BSR set to: 1
  3100                           ;main.c: 324:         sensed++;
  3101  0026A4  4B04               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  3102  0026A6  2B05               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;main.c: 327:         }
  3106  0026A8  4A50               	infsnz	_meas,f,c	;volatile
  3107  0026AA  2A51               	incf	_meas+1,f,c	;volatile
  3108  0026AC  D79C               	goto	l7746
  3109  0026AE                     l7782:
  3110                           
  3111                           ; BSR set to: 1
  3112                           ;main.c: 328:         if (sensed>2){
  3113  0026AE  BF05               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  3114  0026B0  D006               	goto	l451
  3115  0026B2  5105               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  3116  0026B4  E107               	bnz	l7788
  3117  0026B6  0E03               	movlw	3
  3118  0026B8  5D04               	subwf	ultrasonic_main@sensed& (0+255),w,b
  3119  0026BA  B0D8               	btfsc	status,0,c
  3120  0026BC  D003               	goto	u8330
  3121  0026BE                     l451:
  3122                           
  3123                           ; BSR set to: 1
  3124                           ;main.c: 307:     while(send){
  3125  0026BE  506D               	movf	_send,w,c
  3126  0026C0  A4D8               	btfss	status,2,c
  3127  0026C2  D78D               	goto	l7744
  3128  0026C4                     u8330:
  3129  0026C4                     l7788:
  3130                           
  3131                           ; BSR set to: 1
  3132                           ;main.c: 375:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3133  0026C4  0E01               	movlw	1
  3134  0026C6  ECE0  F01E         	call	_lcdInst
  3135  0026CA  0E11               	movlw	17
  3136  0026CC  0101               	movlb	1	; () banked
  3137  0026CE  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3138  0026D0  0E3A               	movlw	58
  3139  0026D2                     u9187:
  3140  0026D2  2EE8               	decfsz	wreg,f,c
  3141  0026D4  D7FE               	bra	u9187
  3142  0026D6  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3143  0026D8  D7FC               	bra	u9187
  3144  0026DA  F000               	nop	
  3145                           
  3146                           ;main.c: 376:     printf("stepsadj %d", steps2_adj);
  3147  0026DC  0E23               	movlw	low STR_21
  3148  0026DE  0100               	movlb	0	; () banked
  3149  0026E0  6FED               	movwf	printf@fmt& (0+255),b
  3150  0026E2  0EFF               	movlw	high STR_21
  3151  0026E4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3152  0026E6  C108  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3153  0026EA  C109  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3154  0026EE  EC7A  F01E         	call	_printf	;wreg free
  3155                           
  3156                           ;main.c: 377:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3157  0026F2  0E0D               	movlw	13
  3158  0026F4  0101               	movlb	1	; () banked
  3159  0026F6  6F01               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3160  0026F8  0EAF               	movlw	175
  3161  0026FA  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3162  0026FC  0EB6               	movlw	182
  3163  0026FE                     u9197:
  3164  0026FE  2EE8               	decfsz	wreg,f,c
  3165  002700  D7FE               	bra	u9197
  3166  002702  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3167  002704  D7FC               	bra	u9197
  3168  002706  2F01               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3169  002708  D7FA               	bra	u9197
  3170  00270A  F000               	nop	
  3171                           
  3172                           ;main.c: 378:     return steps2_adj;
  3173  00270C  C108  F0FC         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3174  002710  C109  F0FD         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3175  002714  0012               	return		;funcret
  3176  002716                     __end_of_ultrasonic_main:
  3177                           	opt callstack 0
  3178                           
  3179 ;; *************** function _trig *****************
  3180 ;; Defined at:
  3181 ;;		line 190 in file "main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;Total ram usage:        2 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    3
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_ultrasonic_main
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text2
  3210  002E50                     __ptext2:
  3211                           	opt callstack 0
  3212  002E50                     _trig:
  3213                           	opt callstack 26
  3214                           
  3215                           ;main.c: 191:     for(b=1; b<5; b++){
  3216                           
  3217                           ;incstack = 0
  3218  002E50  0E00               	movlw	0
  3219  002E52  6E5B               	movwf	_b+1,c
  3220  002E54  0E01               	movlw	1
  3221  002E56  6E5A               	movwf	_b,c
  3222  002E58  BE5B               	btfsc	_b+1,7,c
  3223  002E5A  D004               	goto	l7438
  3224  002E5C  505B               	movf	_b+1,w,c
  3225  002E5E  E101               	bnz	u7890
  3226  002E60  D072               	goto	L1
  3227  002E62                     u7890:
  3228  002E62  0012               	return	
  3229  002E64                     l7438:
  3230                           
  3231                           ;main.c: 192:         TMR1H = 0;
  3232  002E64  0E00               	movlw	0
  3233  002E66  6ECF               	movwf	4047,c	;volatile
  3234                           
  3235                           ;main.c: 193:         TMR1L = 0;
  3236  002E68  0E00               	movlw	0
  3237  002E6A  6ECE               	movwf	4046,c	;volatile
  3238                           
  3239                           ;main.c: 194:         if(b==1){
  3240  002E6C  045A               	decf	_b,w,c
  3241  002E6E  105B               	iorwf	_b+1,w,c
  3242  002E70  A4D8               	btfss	status,2,c
  3243  002E72  D015               	goto	l7450
  3244                           
  3245                           ;main.c: 195:             RBIE = 0;
  3246  002E74  96F2               	bcf	4082,3,c	;volatile
  3247                           
  3248                           ;main.c: 196:             RD1 = 1;
  3249  002E76  8283               	bsf	3971,1,c	;volatile
  3250                           
  3251                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3252  002E78  0E08               	movlw	8
  3253  002E7A                     u9207:
  3254  002E7A  2EE8               	decfsz	wreg,f,c
  3255  002E7C  D7FE               	bra	u9207
  3256  002E7E  F000               	nop	
  3257                           
  3258                           ;main.c: 198:             RD1 = 0;
  3259  002E80  9283               	bcf	3971,1,c	;volatile
  3260                           
  3261                           ;main.c: 200:             RBIE = 1;
  3262  002E82  86F2               	bsf	4082,3,c	;volatile
  3263                           
  3264                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3265  002E84  0E02               	movlw	2
  3266  002E86  0100               	movlb	0	; () banked
  3267  002E88  6F81               	movwf	(??_trig+1)& (0+255),b
  3268  002E8A  0EB7               	movlw	183
  3269  002E8C  6F80               	movwf	??_trig& (0+255),b
  3270  002E8E  0E4C               	movlw	76
  3271  002E90                     u9217:
  3272  002E90  2EE8               	decfsz	wreg,f,c
  3273  002E92  D7FE               	bra	u9217
  3274  002E94  2F80               	decfsz	??_trig& (0+255),f,b
  3275  002E96  D7FC               	bra	u9217
  3276  002E98  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3277  002E9A  D7FA               	bra	u9217
  3278  002E9C  F000               	nop	
  3279  002E9E                     l7450:
  3280                           
  3281                           ;main.c: 203:         if(b==2){
  3282  002E9E  0E02               	movlw	2
  3283  002EA0  185A               	xorwf	_b,w,c
  3284  002EA2  105B               	iorwf	_b+1,w,c
  3285  002EA4  A4D8               	btfss	status,2,c
  3286  002EA6  D015               	goto	l7460
  3287                           
  3288                           ;main.c: 204:             RBIE = 0;
  3289  002EA8  96F2               	bcf	4082,3,c	;volatile
  3290                           
  3291                           ;main.c: 205:             RD0 = 1;
  3292  002EAA  8083               	bsf	3971,0,c	;volatile
  3293                           
  3294                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3295  002EAC  0E08               	movlw	8
  3296  002EAE                     u9227:
  3297  002EAE  2EE8               	decfsz	wreg,f,c
  3298  002EB0  D7FE               	bra	u9227
  3299  002EB2  F000               	nop	
  3300                           
  3301                           ;main.c: 207:             RD0 = 0;
  3302  002EB4  9083               	bcf	3971,0,c	;volatile
  3303                           
  3304                           ;main.c: 209:             RBIE = 1;
  3305  002EB6  86F2               	bsf	4082,3,c	;volatile
  3306                           
  3307                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3308  002EB8  0E02               	movlw	2
  3309  002EBA  0100               	movlb	0	; () banked
  3310  002EBC  6F81               	movwf	(??_trig+1)& (0+255),b
  3311  002EBE  0EB7               	movlw	183
  3312  002EC0  6F80               	movwf	??_trig& (0+255),b
  3313  002EC2  0E4C               	movlw	76
  3314  002EC4                     u9237:
  3315  002EC4  2EE8               	decfsz	wreg,f,c
  3316  002EC6  D7FE               	bra	u9237
  3317  002EC8  2F80               	decfsz	??_trig& (0+255),f,b
  3318  002ECA  D7FC               	bra	u9237
  3319  002ECC  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3320  002ECE  D7FA               	bra	u9237
  3321  002ED0  F000               	nop	
  3322  002ED2                     l7460:
  3323                           
  3324                           ;main.c: 212:         if(b==3){
  3325  002ED2  0E03               	movlw	3
  3326  002ED4  185A               	xorwf	_b,w,c
  3327  002ED6  105B               	iorwf	_b+1,w,c
  3328  002ED8  A4D8               	btfss	status,2,c
  3329  002EDA  D015               	goto	l7470
  3330                           
  3331                           ;main.c: 213:             RBIE = 0;
  3332  002EDC  96F2               	bcf	4082,3,c	;volatile
  3333                           
  3334                           ;main.c: 214:             RB3 = 1;
  3335  002EDE  8681               	bsf	3969,3,c	;volatile
  3336                           
  3337                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3338  002EE0  0E08               	movlw	8
  3339  002EE2                     u9247:
  3340  002EE2  2EE8               	decfsz	wreg,f,c
  3341  002EE4  D7FE               	bra	u9247
  3342  002EE6  F000               	nop	
  3343                           
  3344                           ;main.c: 216:             RB3 = 0;
  3345  002EE8  9681               	bcf	3969,3,c	;volatile
  3346                           
  3347                           ;main.c: 218:             RBIE = 1;
  3348  002EEA  86F2               	bsf	4082,3,c	;volatile
  3349                           
  3350                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3351  002EEC  0E02               	movlw	2
  3352  002EEE  0100               	movlb	0	; () banked
  3353  002EF0  6F81               	movwf	(??_trig+1)& (0+255),b
  3354  002EF2  0EB7               	movlw	183
  3355  002EF4  6F80               	movwf	??_trig& (0+255),b
  3356  002EF6  0E4C               	movlw	76
  3357  002EF8                     u9257:
  3358  002EF8  2EE8               	decfsz	wreg,f,c
  3359  002EFA  D7FE               	bra	u9257
  3360  002EFC  2F80               	decfsz	??_trig& (0+255),f,b
  3361  002EFE  D7FC               	bra	u9257
  3362  002F00  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3363  002F02  D7FA               	bra	u9257
  3364  002F04  F000               	nop	
  3365  002F06                     l7470:
  3366                           
  3367                           ;main.c: 221:         if(b==4){
  3368  002F06  0E04               	movlw	4
  3369  002F08  185A               	xorwf	_b,w,c
  3370  002F0A  105B               	iorwf	_b+1,w,c
  3371  002F0C  A4D8               	btfss	status,2,c
  3372  002F0E  D015               	goto	l7480
  3373                           
  3374                           ;main.c: 222:             RBIE = 0;
  3375  002F10  96F2               	bcf	4082,3,c	;volatile
  3376                           
  3377                           ;main.c: 223:             RB2 = 1;
  3378  002F12  8481               	bsf	3969,2,c	;volatile
  3379                           
  3380                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3381  002F14  0E08               	movlw	8
  3382  002F16                     u9267:
  3383  002F16  2EE8               	decfsz	wreg,f,c
  3384  002F18  D7FE               	bra	u9267
  3385  002F1A  F000               	nop	
  3386                           
  3387                           ;main.c: 225:             RB2 = 0;
  3388  002F1C  9481               	bcf	3969,2,c	;volatile
  3389                           
  3390                           ;main.c: 227:             RBIE = 1;
  3391  002F1E  86F2               	bsf	4082,3,c	;volatile
  3392                           
  3393                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3394  002F20  0E02               	movlw	2
  3395  002F22  0100               	movlb	0	; () banked
  3396  002F24  6F81               	movwf	(??_trig+1)& (0+255),b
  3397  002F26  0EB7               	movlw	183
  3398  002F28  6F80               	movwf	??_trig& (0+255),b
  3399  002F2A  0E4C               	movlw	76
  3400  002F2C                     u9277:
  3401  002F2C  2EE8               	decfsz	wreg,f,c
  3402  002F2E  D7FE               	bra	u9277
  3403  002F30  2F80               	decfsz	??_trig& (0+255),f,b
  3404  002F32  D7FC               	bra	u9277
  3405  002F34  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3406  002F36  D7FA               	bra	u9277
  3407  002F38  F000               	nop	
  3408  002F3A                     l7480:
  3409                           
  3410                           ;main.c: 230:     }
  3411  002F3A  4A5A               	infsnz	_b,f,c
  3412  002F3C  2A5B               	incf	_b+1,f,c
  3413  002F3E  BE5B               	btfsc	_b+1,7,c
  3414  002F40  D791               	goto	l7438
  3415  002F42  505B               	movf	_b+1,w,c
  3416  002F44  E105               	bnz	u7940
  3417  002F46                     L1:
  3418  002F46  0E05               	movlw	5
  3419  002F48  5C5A               	subwf	_b,w,c
  3420  002F4A  B0D8               	btfsc	status,0,c
  3421  002F4C  0012               	return	
  3422  002F4E  D78A               	goto	l7438
  3423  002F50                     u7940:
  3424  002F50  0012               	return		;funcret
  3425  002F52                     __end_of_trig:
  3426                           	opt callstack 0
  3427                           
  3428 ;; *************** function _print_echo *****************
  3429 ;; Defined at:
  3430 ;;		line 233 in file "main.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;Total ram usage:        1 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:   14
  3451 ;; This function calls:
  3452 ;;		_lcdInst
  3453 ;;		_printf
  3454 ;; This function is called by:
  3455 ;;		_ultrasonic_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text3
  3460  00237C                     __ptext3:
  3461                           	opt callstack 0
  3462  00237C                     _print_echo:
  3463                           	opt callstack 15
  3464                           
  3465                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3466                           
  3467                           ;incstack = 0
  3468  00237C  0E01               	movlw	1
  3469  00237E  ECE0  F01E         	call	_lcdInst
  3470  002382  0E11               	movlw	17
  3471  002384  0100               	movlb	0	; () banked
  3472  002386  6FFB               	movwf	??_print_echo& (0+255),b
  3473  002388  0E3A               	movlw	58
  3474  00238A                     u9287:
  3475  00238A  2EE8               	decfsz	wreg,f,c
  3476  00238C  D7FE               	bra	u9287
  3477  00238E  2FFB               	decfsz	??_print_echo& (0+255),f,b
  3478  002390  D7FC               	bra	u9287
  3479  002392  F000               	nop	
  3480                           
  3481                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3482  002394  BE62               	btfsc	_a+1,7,c
  3483  002396  D01D               	goto	l7492
  3484  002398  5062               	movf	_a+1,w,c
  3485  00239A  E104               	bnz	u7950
  3486  00239C  0E02               	movlw	2
  3487  00239E  5C61               	subwf	_a,w,c
  3488  0023A0  A0D8               	btfss	status,0,c
  3489  0023A2  D017               	goto	l7492
  3490  0023A4                     u7950:
  3491  0023A4  BE62               	btfsc	_a+1,7,c
  3492  0023A6  D006               	goto	u7960
  3493  0023A8  0E91               	movlw	145
  3494  0023AA  5C61               	subwf	_a,w,c
  3495  0023AC  0E01               	movlw	1
  3496  0023AE  5862               	subwfb	_a+1,w,c
  3497  0023B0  B0D8               	btfsc	status,0,c
  3498  0023B2  D00F               	goto	l7492
  3499  0023B4                     u7960:
  3500                           
  3501                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3502  0023B4  0EE8               	movlw	low STR_10
  3503  0023B6  0100               	movlb	0	; () banked
  3504  0023B8  6FED               	movwf	printf@fmt& (0+255),b
  3505  0023BA  0EFD               	movlw	high STR_10
  3506  0023BC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3507  0023BE  C061  F0EF         	movff	_a,?_printf+2
  3508  0023C2  C062  F0F0         	movff	_a+1,?_printf+3
  3509  0023C6  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3510  0023CA  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3511  0023CE  EC7A  F01E         	call	_printf	;wreg free
  3512  0023D2                     l7492:
  3513                           
  3514                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3515  0023D2  BE62               	btfsc	_a+1,7,c
  3516  0023D4  D00E               	goto	u7980
  3517  0023D6  5062               	movf	_a+1,w,c
  3518  0023D8  E104               	bnz	u7970
  3519  0023DA  0E02               	movlw	2
  3520  0023DC  5C61               	subwf	_a,w,c
  3521  0023DE  A0D8               	btfss	status,0,c
  3522  0023E0  D008               	goto	u7980
  3523  0023E2                     u7970:
  3524  0023E2  BE62               	btfsc	_a+1,7,c
  3525  0023E4  D00D               	goto	l7498
  3526  0023E6  0E91               	movlw	145
  3527  0023E8  5C61               	subwf	_a,w,c
  3528  0023EA  0E01               	movlw	1
  3529  0023EC  5862               	subwfb	_a+1,w,c
  3530  0023EE  A0D8               	btfss	status,0,c
  3531  0023F0  D007               	goto	l7498
  3532  0023F2                     u7980:
  3533                           
  3534                           ;main.c: 239:         printf("Dist1 = X");
  3535  0023F2  0E7F               	movlw	low STR_11
  3536  0023F4  0100               	movlb	0	; () banked
  3537  0023F6  6FED               	movwf	printf@fmt& (0+255),b
  3538  0023F8  0EFF               	movlw	high STR_11
  3539  0023FA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3540  0023FC  EC7A  F01E         	call	_printf	;wreg free
  3541  002400                     l7498:
  3542                           
  3543                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3544  002400  BE64               	btfsc	_a+3,7,c
  3545  002402  D020               	goto	l7506
  3546  002404  5064               	movf	_a+3,w,c
  3547  002406  E104               	bnz	u7990
  3548  002408  0E02               	movlw	2
  3549  00240A  5C63               	subwf	_a+2,w,c
  3550  00240C  A0D8               	btfss	status,0,c
  3551  00240E  D01A               	goto	l7506
  3552  002410                     u7990:
  3553  002410  BE64               	btfsc	_a+3,7,c
  3554  002412  D006               	goto	u8000
  3555  002414  0E91               	movlw	145
  3556  002416  5C63               	subwf	_a+2,w,c
  3557  002418  0E01               	movlw	1
  3558  00241A  5864               	subwfb	_a+3,w,c
  3559  00241C  B0D8               	btfsc	status,0,c
  3560  00241E  D012               	goto	l7506
  3561  002420                     u8000:
  3562  002420  0EC0               	movlw	192
  3563  002422  ECE0  F01E         	call	_lcdInst
  3564                           
  3565                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3566  002426  0E4D               	movlw	low STR_12
  3567  002428  0100               	movlb	0	; () banked
  3568  00242A  6FED               	movwf	printf@fmt& (0+255),b
  3569  00242C  0EFE               	movlw	high STR_12
  3570  00242E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3571  002430  C063  F0EF         	movff	_a+2,?_printf+2
  3572  002434  C064  F0F0         	movff	_a+3,?_printf+3
  3573  002438  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3574  00243C  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3575  002440  EC7A  F01E         	call	_printf	;wreg free
  3576  002444                     l7506:
  3577                           
  3578                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3579  002444  BE64               	btfsc	_a+3,7,c
  3580  002446  D00E               	goto	u8020
  3581  002448  5064               	movf	_a+3,w,c
  3582  00244A  E104               	bnz	u8010
  3583  00244C  0E02               	movlw	2
  3584  00244E  5C63               	subwf	_a+2,w,c
  3585  002450  A0D8               	btfss	status,0,c
  3586  002452  D008               	goto	u8020
  3587  002454                     u8010:
  3588  002454  BE64               	btfsc	_a+3,7,c
  3589  002456  D010               	goto	l7514
  3590  002458  0E91               	movlw	145
  3591  00245A  5C63               	subwf	_a+2,w,c
  3592  00245C  0E01               	movlw	1
  3593  00245E  5864               	subwfb	_a+3,w,c
  3594  002460  A0D8               	btfss	status,0,c
  3595  002462  D00A               	goto	l7514
  3596  002464                     u8020:
  3597  002464  0EC0               	movlw	192
  3598  002466  ECE0  F01E         	call	_lcdInst
  3599                           
  3600                           ;main.c: 247:         printf("Dist2 = X");
  3601  00246A  0E89               	movlw	low STR_13
  3602  00246C  0100               	movlb	0	; () banked
  3603  00246E  6FED               	movwf	printf@fmt& (0+255),b
  3604  002470  0EFF               	movlw	high STR_13
  3605  002472  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3606  002474  EC7A  F01E         	call	_printf	;wreg free
  3607  002478                     l7514:
  3608                           
  3609                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3610  002478  BE66               	btfsc	_a+5,7,c
  3611  00247A  D020               	goto	l7522
  3612  00247C  5066               	movf	_a+5,w,c
  3613  00247E  E104               	bnz	u8030
  3614  002480  0E02               	movlw	2
  3615  002482  5C65               	subwf	_a+4,w,c
  3616  002484  A0D8               	btfss	status,0,c
  3617  002486  D01A               	goto	l7522
  3618  002488                     u8030:
  3619  002488  BE66               	btfsc	_a+5,7,c
  3620  00248A  D006               	goto	u8040
  3621  00248C  0E91               	movlw	145
  3622  00248E  5C65               	subwf	_a+4,w,c
  3623  002490  0E01               	movlw	1
  3624  002492  5866               	subwfb	_a+5,w,c
  3625  002494  B0D8               	btfsc	status,0,c
  3626  002496  D012               	goto	l7522
  3627  002498                     u8040:
  3628  002498  0E90               	movlw	144
  3629  00249A  ECE0  F01E         	call	_lcdInst
  3630                           
  3631                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3632  00249E  0E5D               	movlw	low STR_14
  3633  0024A0  0100               	movlb	0	; () banked
  3634  0024A2  6FED               	movwf	printf@fmt& (0+255),b
  3635  0024A4  0EFE               	movlw	high STR_14
  3636  0024A6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3637  0024A8  C065  F0EF         	movff	_a+4,?_printf+2
  3638  0024AC  C066  F0F0         	movff	_a+5,?_printf+3
  3639  0024B0  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3640  0024B4  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3641  0024B8  EC7A  F01E         	call	_printf	;wreg free
  3642  0024BC                     l7522:
  3643                           
  3644                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3645  0024BC  BE66               	btfsc	_a+5,7,c
  3646  0024BE  D00E               	goto	u8060
  3647  0024C0  5066               	movf	_a+5,w,c
  3648  0024C2  E104               	bnz	u8050
  3649  0024C4  0E02               	movlw	2
  3650  0024C6  5C65               	subwf	_a+4,w,c
  3651  0024C8  A0D8               	btfss	status,0,c
  3652  0024CA  D008               	goto	u8060
  3653  0024CC                     u8050:
  3654  0024CC  BE66               	btfsc	_a+5,7,c
  3655  0024CE  D010               	goto	l7530
  3656  0024D0  0E91               	movlw	145
  3657  0024D2  5C65               	subwf	_a+4,w,c
  3658  0024D4  0E01               	movlw	1
  3659  0024D6  5866               	subwfb	_a+5,w,c
  3660  0024D8  A0D8               	btfss	status,0,c
  3661  0024DA  D00A               	goto	l7530
  3662  0024DC                     u8060:
  3663  0024DC  0E90               	movlw	144
  3664  0024DE  ECE0  F01E         	call	_lcdInst
  3665                           
  3666                           ;main.c: 255:         printf("Dist3 = X");
  3667  0024E2  0E93               	movlw	low STR_15
  3668  0024E4  0100               	movlb	0	; () banked
  3669  0024E6  6FED               	movwf	printf@fmt& (0+255),b
  3670  0024E8  0EFF               	movlw	high STR_15
  3671  0024EA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3672  0024EC  EC7A  F01E         	call	_printf	;wreg free
  3673  0024F0                     l7530:
  3674                           
  3675                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3676  0024F0  BE68               	btfsc	_a+7,7,c
  3677  0024F2  D020               	goto	l7538
  3678  0024F4  5068               	movf	_a+7,w,c
  3679  0024F6  E104               	bnz	u8070
  3680  0024F8  0E02               	movlw	2
  3681  0024FA  5C67               	subwf	_a+6,w,c
  3682  0024FC  A0D8               	btfss	status,0,c
  3683  0024FE  D01A               	goto	l7538
  3684  002500                     u8070:
  3685  002500  BE68               	btfsc	_a+7,7,c
  3686  002502  D006               	goto	u8080
  3687  002504  0E91               	movlw	145
  3688  002506  5C67               	subwf	_a+6,w,c
  3689  002508  0E01               	movlw	1
  3690  00250A  5868               	subwfb	_a+7,w,c
  3691  00250C  B0D8               	btfsc	status,0,c
  3692  00250E  D012               	goto	l7538
  3693  002510                     u8080:
  3694  002510  0ED0               	movlw	208
  3695  002512  ECE0  F01E         	call	_lcdInst
  3696                           
  3697                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3698  002516  0EF9               	movlw	low STR_16
  3699  002518  0100               	movlb	0	; () banked
  3700  00251A  6FED               	movwf	printf@fmt& (0+255),b
  3701  00251C  0EFD               	movlw	high STR_16
  3702  00251E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3703  002520  C067  F0EF         	movff	_a+6,?_printf+2
  3704  002524  C068  F0F0         	movff	_a+7,?_printf+3
  3705  002528  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3706  00252C  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3707  002530  EC7A  F01E         	call	_printf	;wreg free
  3708  002534                     l7538:
  3709                           
  3710                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3711  002534  BE68               	btfsc	_a+7,7,c
  3712  002536  D00E               	goto	u8100
  3713  002538  5068               	movf	_a+7,w,c
  3714  00253A  E104               	bnz	u8090
  3715  00253C  0E02               	movlw	2
  3716  00253E  5C67               	subwf	_a+6,w,c
  3717  002540  A0D8               	btfss	status,0,c
  3718  002542  D008               	goto	u8100
  3719  002544                     u8090:
  3720  002544  BE68               	btfsc	_a+7,7,c
  3721  002546  0012               	return	
  3722  002548  0E91               	movlw	145
  3723  00254A  5C67               	subwf	_a+6,w,c
  3724  00254C  0E01               	movlw	1
  3725  00254E  5868               	subwfb	_a+7,w,c
  3726  002550  A0D8               	btfss	status,0,c
  3727  002552  0012               	return	
  3728  002554                     u8100:
  3729  002554  0ED0               	movlw	208
  3730  002556  ECE0  F01E         	call	_lcdInst
  3731                           
  3732                           ;main.c: 264:         printf("Dist4 = X");
  3733  00255A  0E9D               	movlw	low STR_17
  3734  00255C  0100               	movlb	0	; () banked
  3735  00255E  6FED               	movwf	printf@fmt& (0+255),b
  3736  002560  0EFF               	movlw	high STR_17
  3737  002562  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3738  002564  EC7A  F01E         	call	_printf	;wreg free
  3739  002568  0012               	return		;funcret
  3740  00256A                     __end_of_print_echo:
  3741                           	opt callstack 0
  3742                           
  3743 ;; *************** function _min *****************
  3744 ;; Defined at:
  3745 ;;		line 267 in file "main.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  array           2    0[BANK0 ] PTR int 
  3748 ;;		 -> a(8), 
  3749 ;;  size            2    2[BANK0 ] int 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  i               2    9[BANK0 ] int 
  3752 ;;  minimum         2    7[BANK0 ] int 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2    0[BANK0 ] int 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;Total ram usage:       11 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    3
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_ultrasonic_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text4
  3777  002D40                     __ptext4:
  3778                           	opt callstack 0
  3779  002D40                     _min:
  3780                           	opt callstack 26
  3781                           
  3782                           ;main.c: 268:     int minimum =0 ;
  3783                           
  3784                           ;incstack = 0
  3785  002D40  0E00               	movlw	0
  3786  002D42  0100               	movlb	0	; () banked
  3787  002D44  6F88               	movwf	(min@minimum+1)& (0+255),b
  3788  002D46  0E00               	movlw	0
  3789  002D48  6F87               	movwf	min@minimum& (0+255),b
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;main.c: 269:     if (array[0]<=23){
  3793  002D4A  C080  FFD9         	movff	min@array,fsr2l
  3794  002D4E  C081  FFDA         	movff	min@array+1,fsr2h
  3795  002D52  0E01               	movlw	1
  3796  002D54  BEDB               	btfsc	plusw2,7,c
  3797  002D56  D007               	goto	u8110
  3798  002D58  0E01               	movlw	1
  3799  002D5A  50DB               	movf	plusw2,w,c
  3800  002D5C  E10C               	bnz	l7552
  3801  002D5E  0E18               	movlw	24
  3802  002D60  5CDE               	subwf	postinc2,w,c
  3803  002D62  B0D8               	btfsc	status,0,c
  3804  002D64  D008               	goto	l7552
  3805  002D66                     u8110:
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;main.c: 270:          minimum = array[0];}
  3809  002D66  C080  FFD9         	movff	min@array,fsr2l
  3810  002D6A  C081  FFDA         	movff	min@array+1,fsr2h
  3811  002D6E  CFDE F087          	movff	postinc2,min@minimum
  3812  002D72  CFDD F088          	movff	postdec2,min@minimum+1
  3813  002D76                     l7552:
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3817  002D76  0E00               	movlw	0
  3818  002D78  6F8A               	movwf	(min@i+1)& (0+255),b
  3819  002D7A  0E00               	movlw	0
  3820  002D7C  6F89               	movwf	min@i& (0+255),b
  3821  002D7E  D059               	goto	l7568
  3822  002D80                     l7554:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3826  002D80  5187               	movf	min@minimum& (0+255),w,b
  3827  002D82  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3828  002D84  B4D8               	btfsc	status,2,c
  3829  002D86  D046               	goto	u8160
  3830                           
  3831                           ; BSR set to: 0
  3832  002D88  90D8               	bcf	status,0,c
  3833  002D8A  3589               	rlcf	min@i& (0+255),w,b
  3834  002D8C  6ED9               	movwf	fsr2l,c
  3835  002D8E  358A               	rlcf	(min@i+1)& (0+255),w,b
  3836  002D90  6EDA               	movwf	fsr2h,c
  3837  002D92  5180               	movf	min@array& (0+255),w,b
  3838  002D94  26D9               	addwf	fsr2l,f,c
  3839  002D96  5181               	movf	(min@array+1)& (0+255),w,b
  3840  002D98  22DA               	addwfc	fsr2h,f,c
  3841  002D9A  50DE               	movf	postinc2,w,c
  3842  002D9C  5D87               	subwf	min@minimum& (0+255),w,b
  3843  002D9E  5188               	movf	(min@minimum+1)& (0+255),w,b
  3844  002DA0  0A80               	xorlw	128
  3845  002DA2  6F86               	movwf	(??_min+2)& (0+255),b
  3846  002DA4  50DE               	movf	postinc2,w,c
  3847  002DA6  0A80               	xorlw	128
  3848  002DA8  5986               	subwfb	(??_min+2)& (0+255),w,b
  3849  002DAA  A0D8               	btfss	status,0,c
  3850  002DAC  D040               	goto	l7566
  3851                           
  3852                           ; BSR set to: 0
  3853  002DAE  90D8               	bcf	status,0,c
  3854  002DB0  3589               	rlcf	min@i& (0+255),w,b
  3855  002DB2  6ED9               	movwf	fsr2l,c
  3856  002DB4  358A               	rlcf	(min@i+1)& (0+255),w,b
  3857  002DB6  6EDA               	movwf	fsr2h,c
  3858  002DB8  5180               	movf	min@array& (0+255),w,b
  3859  002DBA  26D9               	addwf	fsr2l,f,c
  3860  002DBC  5181               	movf	(min@array+1)& (0+255),w,b
  3861  002DBE  22DA               	addwfc	fsr2h,f,c
  3862  002DC0  50DE               	movf	postinc2,w,c
  3863  002DC2  10DE               	iorwf	postinc2,w,c
  3864  002DC4  B4D8               	btfsc	status,2,c
  3865  002DC6  D033               	goto	l7566
  3866                           
  3867                           ; BSR set to: 0
  3868  002DC8  90D8               	bcf	status,0,c
  3869  002DCA  3589               	rlcf	min@i& (0+255),w,b
  3870  002DCC  6ED9               	movwf	fsr2l,c
  3871  002DCE  358A               	rlcf	(min@i+1)& (0+255),w,b
  3872  002DD0  6EDA               	movwf	fsr2h,c
  3873  002DD2  5180               	movf	min@array& (0+255),w,b
  3874  002DD4  26D9               	addwf	fsr2l,f,c
  3875  002DD6  5181               	movf	(min@array+1)& (0+255),w,b
  3876  002DD8  22DA               	addwfc	fsr2h,f,c
  3877  002DDA  0E01               	movlw	1
  3878  002DDC  BEDB               	btfsc	plusw2,7,c
  3879  002DDE  D027               	goto	l7566
  3880  002DE0  0E01               	movlw	1
  3881  002DE2  50DB               	movf	plusw2,w,c
  3882  002DE4  E104               	bnz	u8150
  3883  002DE6  0E0E               	movlw	14
  3884  002DE8  5CDE               	subwf	postinc2,w,c
  3885  002DEA  A0D8               	btfss	status,0,c
  3886  002DEC  D020               	goto	l7566
  3887  002DEE                     u8150:
  3888                           
  3889                           ; BSR set to: 0
  3890  002DEE  90D8               	bcf	status,0,c
  3891  002DF0  3589               	rlcf	min@i& (0+255),w,b
  3892  002DF2  6ED9               	movwf	fsr2l,c
  3893  002DF4  358A               	rlcf	(min@i+1)& (0+255),w,b
  3894  002DF6  6EDA               	movwf	fsr2h,c
  3895  002DF8  5180               	movf	min@array& (0+255),w,b
  3896  002DFA  26D9               	addwf	fsr2l,f,c
  3897  002DFC  5181               	movf	(min@array+1)& (0+255),w,b
  3898  002DFE  22DA               	addwfc	fsr2h,f,c
  3899  002E00  0E01               	movlw	1
  3900  002E02  BEDB               	btfsc	plusw2,7,c
  3901  002E04  D007               	goto	u8160
  3902  002E06  0E01               	movlw	1
  3903  002E08  50DB               	movf	plusw2,w,c
  3904  002E0A  E111               	bnz	l7566
  3905  002E0C  0E18               	movlw	24
  3906  002E0E  5CDE               	subwf	postinc2,w,c
  3907  002E10  B0D8               	btfsc	status,0,c
  3908  002E12  D00D               	goto	l7566
  3909  002E14                     u8160:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;main.c: 282:             minimum = array[i];
  3913  002E14  90D8               	bcf	status,0,c
  3914  002E16  3589               	rlcf	min@i& (0+255),w,b
  3915  002E18  6ED9               	movwf	fsr2l,c
  3916  002E1A  358A               	rlcf	(min@i+1)& (0+255),w,b
  3917  002E1C  6EDA               	movwf	fsr2h,c
  3918  002E1E  5180               	movf	min@array& (0+255),w,b
  3919  002E20  26D9               	addwf	fsr2l,f,c
  3920  002E22  5181               	movf	(min@array+1)& (0+255),w,b
  3921  002E24  22DA               	addwfc	fsr2h,f,c
  3922  002E26  CFDE F087          	movff	postinc2,min@minimum
  3923  002E2A  CFDD F088          	movff	postdec2,min@minimum+1
  3924  002E2E                     l7566:
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;main.c: 287:     }
  3928  002E2E  4B89               	infsnz	min@i& (0+255),f,b
  3929  002E30  2B8A               	incf	(min@i+1)& (0+255),f,b
  3930  002E32                     l7568:
  3931                           
  3932                           ; BSR set to: 0
  3933  002E32  5182               	movf	min@size& (0+255),w,b
  3934  002E34  5D89               	subwf	min@i& (0+255),w,b
  3935  002E36  518A               	movf	(min@i+1)& (0+255),w,b
  3936  002E38  0A80               	xorlw	128
  3937  002E3A  6F84               	movwf	??_min& (0+255),b
  3938  002E3C  5183               	movf	(min@size+1)& (0+255),w,b
  3939  002E3E  0A80               	xorlw	128
  3940  002E40  5984               	subwfb	??_min& (0+255),w,b
  3941  002E42  A0D8               	btfss	status,0,c
  3942  002E44  D79D               	goto	l7554
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;main.c: 288:     return minimum;
  3946  002E46  C087  F080         	movff	min@minimum,?_min
  3947  002E4A  C088  F081         	movff	min@minimum+1,?_min+1
  3948                           
  3949                           ; BSR set to: 0
  3950  002E4E  0012               	return		;funcret
  3951  002E50                     __end_of_min:
  3952                           	opt callstack 0
  3953                           
  3954 ;; *************** function _start *****************
  3955 ;; Defined at:
  3956 ;;		line 697 in file "main.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;		None
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;Total ram usage:        0 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    5
  3977 ;; This function calls:
  3978 ;;		_I2C_Master_Init
  3979 ;;		_I2C_Master_Start
  3980 ;;		_I2C_Master_Stop
  3981 ;;		_I2C_Master_Write
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text5
  3988  0039E4                     __ptext5:
  3989                           	opt callstack 0
  3990  0039E4                     _start:
  3991                           	opt callstack 25
  3992                           
  3993                           ;main.c: 698:     I2C_Master_Init(100000);
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;incstack = 0
  3997  0039E4  0EA0               	movlw	160
  3998  0039E6  0100               	movlb	0	; () banked
  3999  0039E8  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  4000  0039EA  0E86               	movlw	134
  4001  0039EC  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  4002  0039EE  0E01               	movlw	1
  4003  0039F0  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  4004  0039F2  0E00               	movlw	0
  4005  0039F4  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  4006  0039F6  EC6C  F01C         	call	_I2C_Master_Init	;wreg free
  4007                           
  4008                           ;main.c: 699:     I2C_Master_Start();
  4009  0039FA  ECF1  F01E         	call	_I2C_Master_Start	;wreg free
  4010                           
  4011                           ;main.c: 700:     I2C_Master_Write(0b00010000);
  4012  0039FE  0E00               	movlw	0
  4013  003A00  0100               	movlb	0	; () banked
  4014  003A02  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4015  003A04  0E10               	movlw	16
  4016  003A06  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4017  003A08  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  4018                           
  4019                           ;main.c: 701:     I2C_Master_Stop();
  4020  003A0C  ECED  F01E         	call	_I2C_Master_Stop	;wreg free
  4021                           
  4022                           ;main.c: 703:     I2C_Master_Start();
  4023  003A10  ECF1  F01E         	call	_I2C_Master_Start	;wreg free
  4024                           
  4025                           ;main.c: 704:     I2C_Master_Write(0b00010000);
  4026  003A14  0E00               	movlw	0
  4027  003A16  0100               	movlb	0	; () banked
  4028  003A18  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4029  003A1A  0E10               	movlw	16
  4030  003A1C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4031  003A1E  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  4032                           
  4033                           ;main.c: 705:     I2C_Master_Write('2');
  4034  003A22  0E00               	movlw	0
  4035  003A24  0100               	movlb	0	; () banked
  4036  003A26  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4037  003A28  0E32               	movlw	50
  4038  003A2A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4039  003A2C  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  4040                           
  4041                           ;main.c: 706:     I2C_Master_Stop();
  4042  003A30  ECED  F01E         	call	_I2C_Master_Stop	;wreg free
  4043  003A34  0012               	return		;funcret
  4044  003A36                     __end_of_start:
  4045                           	opt callstack 0
  4046                           
  4047 ;; *************** function _number_deploy *****************
  4048 ;; Defined at:
  4049 ;;		line 416 in file "main.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  avg_dist        2  123[BANK0 ] int 
  4052 ;;  poles_detect    2  125[BANK0 ] int 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  t_count         2    6[BANK1 ] int 
  4055 ;;  tires_detect    2    4[BANK1 ] int 
  4056 ;;  tires_t         2    2[BANK1 ] int 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  2  123[BANK0 ] int 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;Total ram usage:       12 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:   14
  4073 ;; This function calls:
  4074 ;;		___awdiv
  4075 ;;		_lcdInst
  4076 ;;		_printf
  4077 ;; This function is called by:
  4078 ;;		_main
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text6
  4083  00215C                     __ptext6:
  4084                           	opt callstack 0
  4085  00215C                     _number_deploy:
  4086                           	opt callstack 16
  4087                           
  4088                           ;main.c: 417:     int tires_t=0;
  4089                           
  4090                           ;incstack = 0
  4091  00215C  0E00               	movlw	0
  4092  00215E  0101               	movlb	1	; () banked
  4093  002160  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4094  002162  0E00               	movlw	0
  4095  002164  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4096                           
  4097                           ;main.c: 418:     int tires_detected=0;
  4098  002166  0E00               	movlw	0
  4099  002168  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4100  00216A  0E00               	movlw	0
  4101  00216C  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4102                           
  4103                           ;main.c: 419:     int t_count = 0;
  4104  00216E  0E00               	movlw	0
  4105  002170  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4106  002172  0E00               	movlw	0
  4107  002174  6F06               	movwf	number_deploy@t_count& (0+255),b
  4108                           
  4109                           ;main.c: 422:     while (t_count<3){
  4110  002176  D0F5               	goto	l7872
  4111  002178                     l7816:
  4112                           
  4113                           ; BSR set to: 1
  4114                           ;main.c: 423:   if (poles_detected != 0){
  4115  002178  0100               	movlb	0	; () banked
  4116  00217A  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4117  00217C  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4118  00217E  B4D8               	btfsc	status,2,c
  4119  002180  D031               	goto	l7826
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;main.c: 424:    if ((avg_dist/1000)<30){
  4123  002182  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4124  002186  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4125  00218A  0E03               	movlw	3
  4126  00218C  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4127  00218E  0EE8               	movlw	232
  4128  002190  6F82               	movwf	___awdiv@divisor& (0+255),b
  4129  002192  ECC3  F01A         	call	___awdiv	;wreg free
  4130  002196  0100               	movlb	0	; () banked
  4131  002198  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4132  00219A  D006               	goto	u8360
  4133  00219C  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4134  00219E  E109               	bnz	l7822
  4135  0021A0  0E1E               	movlw	30
  4136  0021A2  5D80               	subwf	?___awdiv& (0+255),w,b
  4137  0021A4  B0D8               	btfsc	status,0,c
  4138  0021A6  D005               	goto	l7822
  4139  0021A8                     u8360:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;main.c: 426:     tires_t = 1;
  4143  0021A8  0E00               	movlw	0
  4144  0021AA  0101               	movlb	1	; () banked
  4145  0021AC  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4146  0021AE  0E01               	movlw	1
  4147  0021B0  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4148  0021B2                     l7822:
  4149                           
  4150                           ;main.c: 428:    if ((avg_dist/1000)>30){
  4151  0021B2  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4152  0021B6  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4153  0021BA  0E03               	movlw	3
  4154  0021BC  0100               	movlb	0	; () banked
  4155  0021BE  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4156  0021C0  0EE8               	movlw	232
  4157  0021C2  6F82               	movwf	___awdiv@divisor& (0+255),b
  4158  0021C4  ECC3  F01A         	call	___awdiv	;wreg free
  4159  0021C8  0100               	movlb	0	; () banked
  4160  0021CA  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4161  0021CC  D00B               	goto	l7826
  4162  0021CE  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4163  0021D0  E104               	bnz	u8370
  4164  0021D2  0E1F               	movlw	31
  4165  0021D4  5D80               	subwf	?___awdiv& (0+255),w,b
  4166  0021D6  A0D8               	btfss	status,0,c
  4167  0021D8  D005               	goto	l7826
  4168  0021DA                     u8370:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;main.c: 429:     tires_t = 2;
  4172  0021DA  0E00               	movlw	0
  4173  0021DC  0101               	movlb	1	; () banked
  4174  0021DE  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4175  0021E0  0E02               	movlw	2
  4176  0021E2  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4177  0021E4                     l7826:
  4178                           
  4179                           ;main.c: 433:   if (poles_detected == 0){
  4180  0021E4  0100               	movlb	0	; () banked
  4181  0021E6  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4182  0021E8  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4183  0021EA  A4D8               	btfss	status,2,c
  4184  0021EC  D005               	goto	l7830
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;main.c: 434:    tires_t = 2;
  4188  0021EE  0E00               	movlw	0
  4189  0021F0  0101               	movlb	1	; () banked
  4190  0021F2  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4191  0021F4  0E02               	movlw	2
  4192  0021F6  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4193  0021F8                     l7830:
  4194                           
  4195                           ;main.c: 437:   if ((a[0]>=2 && a[0] <= 15)){
  4196  0021F8  BE62               	btfsc	_a+1,7,c
  4197  0021FA  D028               	goto	l7842
  4198  0021FC  5062               	movf	_a+1,w,c
  4199  0021FE  E104               	bnz	u8390
  4200  002200  0E02               	movlw	2
  4201  002202  5C61               	subwf	_a,w,c
  4202  002204  A0D8               	btfss	status,0,c
  4203  002206  D022               	goto	l7842
  4204  002208                     u8390:
  4205  002208  BE62               	btfsc	_a+1,7,c
  4206  00220A  D006               	goto	u8400
  4207  00220C  5062               	movf	_a+1,w,c
  4208  00220E  E11E               	bnz	l7842
  4209  002210  0E10               	movlw	16
  4210  002212  5C61               	subwf	_a,w,c
  4211  002214  B0D8               	btfsc	status,0,c
  4212  002216  D01A               	goto	l7842
  4213  002218                     u8400:
  4214                           
  4215                           ;main.c: 439:             if ((a[1]>=2 && a[1] <= 15)){
  4216  002218  BE64               	btfsc	_a+3,7,c
  4217  00221A  D013               	goto	l7840
  4218  00221C  5064               	movf	_a+3,w,c
  4219  00221E  E104               	bnz	u8410
  4220  002220  0E02               	movlw	2
  4221  002222  5C63               	subwf	_a+2,w,c
  4222  002224  A0D8               	btfss	status,0,c
  4223  002226  D00D               	goto	l7840
  4224  002228                     u8410:
  4225  002228  BE64               	btfsc	_a+3,7,c
  4226  00222A  D006               	goto	u8420
  4227  00222C  5064               	movf	_a+3,w,c
  4228  00222E  E109               	bnz	l7840
  4229  002230  0E10               	movlw	16
  4230  002232  5C63               	subwf	_a+2,w,c
  4231  002234  B0D8               	btfsc	status,0,c
  4232  002236  D005               	goto	l7840
  4233  002238                     u8420:
  4234                           
  4235                           ;main.c: 441:                 tires_detected = 1;
  4236  002238  0E00               	movlw	0
  4237  00223A  0101               	movlb	1	; () banked
  4238  00223C  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4239  00223E  0E01               	movlw	1
  4240  002240  D004               	goto	L2
  4241  002242                     l7840:
  4242                           
  4243                           ;main.c: 444:                 tires_detected = 0;
  4244  002242  0E00               	movlw	0
  4245  002244  0101               	movlb	1	; () banked
  4246  002246  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4247  002248  0E00               	movlw	0
  4248  00224A                     L2:
  4249  00224A  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4250  00224C                     l7842:
  4251                           
  4252                           ;main.c: 447:         if ((tires_detected==1)){
  4253  00224C  0101               	movlb	1	; () banked
  4254  00224E  0504               	decf	number_deploy@tires_detected& (0+255),w,b
  4255  002250  1105               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4256  002252  B4D8               	btfsc	status,2,c
  4257                           
  4258                           ; BSR set to: 1
  4259                           ;main.c: 448:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4260  002254  BE66               	btfsc	_a+5,7,c
  4261  002256  D020               	goto	l7854
  4262  002258  5066               	movf	_a+5,w,c
  4263  00225A  E104               	bnz	u8440
  4264  00225C  0E02               	movlw	2
  4265  00225E  5C65               	subwf	_a+4,w,c
  4266  002260  A0D8               	btfss	status,0,c
  4267  002262  D01A               	goto	l7854
  4268  002264                     u8440:
  4269                           
  4270                           ; BSR set to: 1
  4271  002264  BE66               	btfsc	_a+5,7,c
  4272  002266  D006               	goto	u8450
  4273  002268  5066               	movf	_a+5,w,c
  4274  00226A  E116               	bnz	l7854
  4275  00226C  0E10               	movlw	16
  4276  00226E  5C65               	subwf	_a+4,w,c
  4277  002270  B0D8               	btfsc	status,0,c
  4278  002272  D012               	goto	l7854
  4279  002274                     u8450:
  4280                           
  4281                           ; BSR set to: 1
  4282  002274  BE68               	btfsc	_a+7,7,c
  4283  002276  D010               	goto	l7854
  4284  002278  5068               	movf	_a+7,w,c
  4285  00227A  E104               	bnz	u8460
  4286  00227C  0E02               	movlw	2
  4287  00227E  5C67               	subwf	_a+6,w,c
  4288  002280  A0D8               	btfss	status,0,c
  4289  002282  D00A               	goto	l7854
  4290  002284                     u8460:
  4291                           
  4292                           ; BSR set to: 1
  4293  002284  BE68               	btfsc	_a+7,7,c
  4294  002286  D006               	goto	u8470
  4295  002288  5068               	movf	_a+7,w,c
  4296  00228A  E106               	bnz	l7854
  4297  00228C  0E10               	movlw	16
  4298  00228E  5C67               	subwf	_a+6,w,c
  4299  002290  B0D8               	btfsc	status,0,c
  4300  002292  D002               	goto	l7854
  4301  002294                     u8470:
  4302                           
  4303                           ; BSR set to: 1
  4304                           ;main.c: 449:                 tires_detected++;
  4305  002294  4B04               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4306  002296  2B05               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4307  002298                     l7854:
  4308                           
  4309                           ; BSR set to: 1
  4310                           ;main.c: 453:         t_count = tires_t - tires_detected;
  4311  002298  5104               	movf	number_deploy@tires_detected& (0+255),w,b
  4312  00229A  5D02               	subwf	number_deploy@tires_t& (0+255),w,b
  4313  00229C  6F06               	movwf	number_deploy@t_count& (0+255),b
  4314  00229E  5105               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4315  0022A0  5903               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4316  0022A2  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4317                           
  4318                           ; BSR set to: 1
  4319                           ;main.c: 454:         Pole[poles_detected].tires_deployed = t_count;
  4320  0022A4  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4321  0022A8  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4322  0022AC  90D8               	bcf	status,0,c
  4323  0022AE  3700               	rlcf	??_number_deploy& (0+255),f,b
  4324  0022B0  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4325  0022B2  90D8               	bcf	status,0,c
  4326  0022B4  3700               	rlcf	??_number_deploy& (0+255),f,b
  4327  0022B6  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4328  0022B8  90D8               	bcf	status,0,c
  4329  0022BA  3700               	rlcf	??_number_deploy& (0+255),f,b
  4330  0022BC  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4331  0022BE  0E00               	movlw	low _Pole
  4332  0022C0  2500               	addwf	??_number_deploy& (0+255),w,b
  4333  0022C2  6ED9               	movwf	fsr2l,c
  4334  0022C4  0E02               	movlw	high _Pole
  4335  0022C6  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4336  0022C8  6EDA               	movwf	fsr2h,c
  4337  0022CA  C106  FFDE         	movff	number_deploy@t_count,postinc2
  4338  0022CE  C107  FFDD         	movff	number_deploy@t_count+1,postdec2
  4339                           
  4340                           ; BSR set to: 1
  4341                           ;main.c: 455:         Pole[poles_detected].tires_final = tires_t;
  4342  0022D2  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4343  0022D6  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4344  0022DA  90D8               	bcf	status,0,c
  4345  0022DC  3700               	rlcf	??_number_deploy& (0+255),f,b
  4346  0022DE  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4347  0022E0  90D8               	bcf	status,0,c
  4348  0022E2  3700               	rlcf	??_number_deploy& (0+255),f,b
  4349  0022E4  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4350  0022E6  90D8               	bcf	status,0,c
  4351  0022E8  3700               	rlcf	??_number_deploy& (0+255),f,b
  4352  0022EA  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4353  0022EC  0E02               	movlw	low (_Pole+2)
  4354  0022EE  2500               	addwf	??_number_deploy& (0+255),w,b
  4355  0022F0  6ED9               	movwf	fsr2l,c
  4356  0022F2  0E02               	movlw	high (_Pole+2)
  4357  0022F4  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4358  0022F6  6EDA               	movwf	fsr2h,c
  4359  0022F8  C102  FFDE         	movff	number_deploy@tires_t,postinc2
  4360  0022FC  C103  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;main.c: 456:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4364  002300  0E01               	movlw	1
  4365  002302  ECE0  F01E         	call	_lcdInst
  4366  002306  0E11               	movlw	17
  4367  002308  0101               	movlb	1	; () banked
  4368  00230A  6F00               	movwf	??_number_deploy& (0+255),b
  4369  00230C  0E3A               	movlw	58
  4370  00230E                     u9297:
  4371  00230E  2EE8               	decfsz	wreg,f,c
  4372  002310  D7FE               	bra	u9297
  4373  002312  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4374  002314  D7FC               	bra	u9297
  4375  002316  F000               	nop	
  4376                           
  4377                           ;main.c: 457:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4378  002318  0E3D               	movlw	low STR_22
  4379  00231A  0100               	movlb	0	; () banked
  4380  00231C  6FED               	movwf	printf@fmt& (0+255),b
  4381  00231E  0EFE               	movlw	high STR_22
  4382  002320  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4383  002322  C104  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4384  002326  C105  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4385  00232A  C106  F0F1         	movff	number_deploy@t_count,?_printf+4
  4386  00232E  C107  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4387  002332  EC7A  F01E         	call	_printf	;wreg free
  4388                           
  4389                           ;main.c: 458:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4390  002336  0E0D               	movlw	13
  4391  002338  0101               	movlb	1	; () banked
  4392  00233A  6F01               	movwf	(??_number_deploy+1)& (0+255),b
  4393  00233C  0EAF               	movlw	175
  4394  00233E  6F00               	movwf	??_number_deploy& (0+255),b
  4395  002340  0EB6               	movlw	182
  4396  002342                     u9307:
  4397  002342  2EE8               	decfsz	wreg,f,c
  4398  002344  D7FE               	bra	u9307
  4399  002346  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4400  002348  D7FC               	bra	u9307
  4401  00234A  2F01               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4402  00234C  D7FA               	bra	u9307
  4403  00234E  F000               	nop	
  4404                           
  4405                           ;main.c: 460:         if (t_count<=2){
  4406  002350  0101               	movlb	1	; () banked
  4407  002352  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4408  002354  D00E               	goto	u8490
  4409  002356  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4410  002358  E104               	bnz	l7872
  4411  00235A  0E03               	movlw	3
  4412  00235C  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4413  00235E  A0D8               	btfss	status,0,c
  4414  002360  D008               	goto	u8490
  4415  002362                     l7872:
  4416                           
  4417                           ; BSR set to: 1
  4418                           ;main.c: 422:     while (t_count<3){
  4419  002362  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4420  002364  D709               	goto	l7816
  4421  002366  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4422  002368  E104               	bnz	u8490
  4423  00236A  0E03               	movlw	3
  4424  00236C  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4425  00236E  A0D8               	btfss	status,0,c
  4426  002370  D703               	goto	l7816
  4427  002372                     u8490:
  4428                           
  4429                           ; BSR set to: 1
  4430                           ;main.c: 468:     return (int) t_count;
  4431  002372  C106  F0FB         	movff	number_deploy@t_count,?_number_deploy
  4432  002376  C107  F0FC         	movff	number_deploy@t_count+1,?_number_deploy+1
  4433                           
  4434                           ; BSR set to: 1
  4435  00237A  0012               	return		;funcret
  4436  00237C                     __end_of_number_deploy:
  4437                           	opt callstack 0
  4438                           
  4439 ;; *************** function ___awdiv *****************
  4440 ;; Defined at:
  4441 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  dividend        2    0[BANK0 ] int 
  4444 ;;  divisor         2    2[BANK0 ] int 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  quotient        2    6[BANK0 ] int 
  4447 ;;  sign            1    5[BANK0 ] unsigned char 
  4448 ;;  counter         1    4[BANK0 ] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2    0[BANK0 ] int 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;Total ram usage:        8 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    3
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_number_deploy
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text7
  4473  003586                     __ptext7:
  4474                           	opt callstack 0
  4475  003586                     ___awdiv:
  4476                           	opt callstack 26
  4477                           
  4478                           ; BSR set to: 1
  4479                           ;incstack = 0
  4480  003586  0E00               	movlw	0
  4481  003588  0100               	movlb	0	; () banked
  4482  00358A  6F85               	movwf	___awdiv@sign& (0+255),b
  4483                           
  4484                           ; BSR set to: 0
  4485  00358C  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4486  00358E  D006               	goto	l7578
  4487                           
  4488                           ; BSR set to: 0
  4489  003590  6D82               	negf	___awdiv@divisor& (0+255),b
  4490  003592  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4491  003594  B0D8               	btfsc	status,0,c
  4492  003596  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4493                           
  4494                           ; BSR set to: 0
  4495  003598  0E01               	movlw	1
  4496  00359A  6F85               	movwf	___awdiv@sign& (0+255),b
  4497  00359C                     l7578:
  4498                           
  4499                           ; BSR set to: 0
  4500  00359C  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4501  00359E  D006               	goto	l7584
  4502                           
  4503                           ; BSR set to: 0
  4504  0035A0  6D80               	negf	___awdiv@dividend& (0+255),b
  4505  0035A2  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4506  0035A4  B0D8               	btfsc	status,0,c
  4507  0035A6  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4508                           
  4509                           ; BSR set to: 0
  4510  0035A8  0E01               	movlw	1
  4511  0035AA  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4512  0035AC                     l7584:
  4513                           
  4514                           ; BSR set to: 0
  4515  0035AC  0E00               	movlw	0
  4516  0035AE  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4517  0035B0  0E00               	movlw	0
  4518  0035B2  6F86               	movwf	___awdiv@quotient& (0+255),b
  4519                           
  4520                           ; BSR set to: 0
  4521  0035B4  5182               	movf	___awdiv@divisor& (0+255),w,b
  4522  0035B6  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4523  0035B8  B4D8               	btfsc	status,2,c
  4524  0035BA  D01C               	goto	l7606
  4525                           
  4526                           ; BSR set to: 0
  4527  0035BC  0E01               	movlw	1
  4528  0035BE  6F84               	movwf	___awdiv@counter& (0+255),b
  4529  0035C0  D004               	goto	l7592
  4530  0035C2                     l7590:
  4531                           
  4532                           ; BSR set to: 0
  4533  0035C2  90D8               	bcf	status,0,c
  4534  0035C4  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4535  0035C6  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4536  0035C8  2B84               	incf	___awdiv@counter& (0+255),f,b
  4537  0035CA                     l7592:
  4538                           
  4539                           ; BSR set to: 0
  4540  0035CA  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4541  0035CC  D7FA               	goto	l7590
  4542  0035CE                     u8210:
  4543                           
  4544                           ; BSR set to: 0
  4545  0035CE  90D8               	bcf	status,0,c
  4546  0035D0  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4547  0035D2  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4548                           
  4549                           ; BSR set to: 0
  4550  0035D4  5182               	movf	___awdiv@divisor& (0+255),w,b
  4551  0035D6  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4552  0035D8  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4553  0035DA  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4554  0035DC  A0D8               	btfss	status,0,c
  4555  0035DE  D005               	goto	l7602
  4556                           
  4557                           ; BSR set to: 0
  4558  0035E0  5182               	movf	___awdiv@divisor& (0+255),w,b
  4559  0035E2  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4560  0035E4  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4561  0035E6  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4562                           
  4563                           ; BSR set to: 0
  4564  0035E8  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4565  0035EA                     l7602:
  4566                           
  4567                           ; BSR set to: 0
  4568  0035EA  90D8               	bcf	status,0,c
  4569  0035EC  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4570  0035EE  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4571                           
  4572                           ; BSR set to: 0
  4573  0035F0  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4574  0035F2  D7ED               	goto	u8210
  4575  0035F4                     l7606:
  4576                           
  4577                           ; BSR set to: 0
  4578  0035F4  5185               	movf	___awdiv@sign& (0+255),w,b
  4579  0035F6  B4D8               	btfsc	status,2,c
  4580  0035F8  D004               	goto	l7610
  4581                           
  4582                           ; BSR set to: 0
  4583  0035FA  6D86               	negf	___awdiv@quotient& (0+255),b
  4584  0035FC  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4585  0035FE  B0D8               	btfsc	status,0,c
  4586  003600  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4587  003602                     l7610:
  4588                           
  4589                           ; BSR set to: 0
  4590  003602  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4591  003606  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4592                           
  4593                           ; BSR set to: 0
  4594  00360A  0012               	return		;funcret
  4595  00360C                     __end_of___awdiv:
  4596                           	opt callstack 0
  4597                           
  4598 ;; *************** function _brake *****************
  4599 ;; Defined at:
  4600 ;;		line 666 in file "main.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;Total ram usage:        2 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:   14
  4621 ;; This function calls:
  4622 ;;		_I2C_Master_Read
  4623 ;;		_I2C_Master_Start
  4624 ;;		_I2C_Master_Stop
  4625 ;;		_I2C_Master_Write
  4626 ;;		_lcdInst
  4627 ;;		_printf
  4628 ;; This function is called by:
  4629 ;;		_main
  4630 ;;		_sense_tires
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text8
  4635  00339A                     __ptext8:
  4636                           	opt callstack 0
  4637  00339A                     _brake:
  4638                           	opt callstack 16
  4639                           
  4640                           ;main.c: 667:     I2C_Master_Start();
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;incstack = 0
  4644  00339A  ECF1  F01E         	call	_I2C_Master_Start	;wreg free
  4645                           
  4646                           ;main.c: 668:     I2C_Master_Write(0b00010000);
  4647  00339E  0E00               	movlw	0
  4648  0033A0  0100               	movlb	0	; () banked
  4649  0033A2  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4650  0033A4  0E10               	movlw	16
  4651  0033A6  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4652  0033A8  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  4653                           
  4654                           ;main.c: 669:     I2C_Master_Write('9');
  4655  0033AC  0E00               	movlw	0
  4656  0033AE  0100               	movlb	0	; () banked
  4657  0033B0  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4658  0033B2  0E39               	movlw	57
  4659  0033B4  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4660  0033B6  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  4661                           
  4662                           ;main.c: 670:     I2C_Master_Stop();
  4663  0033BA  ECED  F01E         	call	_I2C_Master_Stop	;wreg free
  4664                           
  4665                           ;main.c: 671:     I2C_Master_Start();
  4666  0033BE  ECF1  F01E         	call	_I2C_Master_Start	;wreg free
  4667                           
  4668                           ;main.c: 672:     I2C_Master_Write(0b00010001);
  4669  0033C2  0E00               	movlw	0
  4670  0033C4  0100               	movlb	0	; () banked
  4671  0033C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4672  0033C8  0E11               	movlw	17
  4673  0033CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4674  0033CC  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  4675                           
  4676                           ;main.c: 673:     avg_dist = I2C_Master_Read(1);
  4677  0033D0  0E01               	movlw	1
  4678  0033D2  EC65  F01E         	call	_I2C_Master_Read
  4679  0033D6  0100               	movlb	0	; () banked
  4680  0033D8  6FFB               	movwf	??_brake& (0+255),b
  4681  0033DA  51FB               	movf	??_brake& (0+255),w,b
  4682  0033DC  6E44               	movwf	_avg_dist,c	;volatile
  4683  0033DE  6A45               	clrf	_avg_dist+1,c	;volatile
  4684  0033E0  6A46               	clrf	_avg_dist+2,c	;volatile
  4685  0033E2  6A47               	clrf	_avg_dist+3,c	;volatile
  4686                           
  4687                           ;main.c: 674:     I2C_Master_Stop();
  4688  0033E4  ECED  F01E         	call	_I2C_Master_Stop	;wreg free
  4689                           
  4690                           ;main.c: 675:     if(avg_dist){
  4691  0033E8  5044               	movf	_avg_dist,w,c	;volatile
  4692  0033EA  1045               	iorwf	_avg_dist+1,w,c	;volatile
  4693  0033EC  1046               	iorwf	_avg_dist+2,w,c	;volatile
  4694  0033EE  1047               	iorwf	_avg_dist+3,w,c	;volatile
  4695  0033F0  B4D8               	btfsc	status,2,c
  4696  0033F2  0012               	return	
  4697                           
  4698                           ;main.c: 678:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4699  0033F4  0E01               	movlw	1
  4700  0033F6  ECE0  F01E         	call	_lcdInst
  4701  0033FA  0E11               	movlw	17
  4702  0033FC  0100               	movlb	0	; () banked
  4703  0033FE  6FFB               	movwf	??_brake& (0+255),b
  4704  003400  0E3A               	movlw	58
  4705  003402                     u9317:
  4706  003402  2EE8               	decfsz	wreg,f,c
  4707  003404  D7FE               	bra	u9317
  4708  003406  2FFB               	decfsz	??_brake& (0+255),f,b
  4709  003408  D7FC               	bra	u9317
  4710  00340A  F000               	nop	
  4711                           
  4712                           ;main.c: 686:         printf("%d",avg_dist);
  4713  00340C  0EC3               	movlw	low (STR_59+11)
  4714  00340E  0100               	movlb	0	; () banked
  4715  003410  6FED               	movwf	printf@fmt& (0+255),b
  4716  003412  0EFE               	movlw	high (STR_59+11)
  4717  003414  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4718  003416  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  4719  00341A  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  4720  00341E  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  4721  003422  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  4722  003426  EC7A  F01E         	call	_printf	;wreg free
  4723                           
  4724                           ;main.c: 691:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4725  00342A  0E0D               	movlw	13
  4726  00342C  0100               	movlb	0	; () banked
  4727  00342E  6FFC               	movwf	(??_brake+1)& (0+255),b
  4728  003430  0EAF               	movlw	175
  4729  003432  6FFB               	movwf	??_brake& (0+255),b
  4730  003434  0EB6               	movlw	182
  4731  003436                     u9327:
  4732  003436  2EE8               	decfsz	wreg,f,c
  4733  003438  D7FE               	bra	u9327
  4734  00343A  2FFB               	decfsz	??_brake& (0+255),f,b
  4735  00343C  D7FC               	bra	u9327
  4736  00343E  2FFC               	decfsz	(??_brake+1)& (0+255),f,b
  4737  003440  D7FA               	bra	u9327
  4738  003442  F000               	nop	
  4739                           
  4740                           ;main.c: 693:     send = 1;
  4741  003444  0E01               	movlw	1
  4742  003446  6E6D               	movwf	_send,c
  4743  003448  0012               	return		;funcret
  4744  00344A                     __end_of_brake:
  4745                           	opt callstack 0
  4746                           
  4747 ;; *************** function _backwards *****************
  4748 ;; Defined at:
  4749 ;;		line 708 in file "main.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0, cstack
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    5
  4770 ;; This function calls:
  4771 ;;		_I2C_Master_Start
  4772 ;;		_I2C_Master_Stop
  4773 ;;		_I2C_Master_Write
  4774 ;; This function is called by:
  4775 ;;		_main
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text9
  4780  003D44                     __ptext9:
  4781                           	opt callstack 0
  4782  003D44                     _backwards:
  4783                           	opt callstack 25
  4784                           
  4785                           ;main.c: 709:     I2C_Master_Start();
  4786                           
  4787                           ;incstack = 0
  4788  003D44  ECF1  F01E         	call	_I2C_Master_Start	;wreg free
  4789                           
  4790                           ;main.c: 710:     I2C_Master_Write(0b00010000);
  4791  003D48  0E00               	movlw	0
  4792  003D4A  0100               	movlb	0	; () banked
  4793  003D4C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4794  003D4E  0E10               	movlw	16
  4795  003D50  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4796  003D52  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  4797                           
  4798                           ;main.c: 711:     I2C_Master_Write('5');
  4799  003D56  0E00               	movlw	0
  4800  003D58  0100               	movlb	0	; () banked
  4801  003D5A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4802  003D5C  0E35               	movlw	53
  4803  003D5E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4804  003D60  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  4805                           
  4806                           ;main.c: 712:     I2C_Master_Stop();
  4807  003D64  ECED  F01E         	call	_I2C_Master_Stop	;wreg free
  4808  003D68  0012               	return		;funcret
  4809  003D6A                     __end_of_backwards:
  4810                           	opt callstack 0
  4811                           
  4812 ;; *************** function _actuators_main *****************
  4813 ;; Defined at:
  4814 ;;		line 3 in file "actuators_main.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  stack           2   14[BANK1 ] int 
  4817 ;;  steps2_adj      2   16[BANK1 ] int 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  act_cnt         2   20[BANK1 ] int 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4829 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;Total ram usage:        8 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:   16
  4836 ;; This function calls:
  4837 ;;		_initLCD
  4838 ;;		_lcdInst
  4839 ;;		_printf
  4840 ;;		_servo
  4841 ;;		_stepper
  4842 ;;		_stepper2
  4843 ;;		_stepper2_back
  4844 ;;		_system_init
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text10
  4851  002AE4                     __ptext10:
  4852                           	opt callstack 0
  4853  002AE4                     _actuators_main:
  4854                           	opt callstack 14
  4855                           
  4856                           ;actuators_main.c: 4:     int act_cnt = 0;
  4857                           
  4858                           ;incstack = 0
  4859  002AE4  0E00               	movlw	0
  4860  002AE6  0101               	movlb	1	; () banked
  4861  002AE8  6F15               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4862  002AEA  0E00               	movlw	0
  4863  002AEC  6F14               	movwf	actuators_main@act_cnt& (0+255),b
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;actuators_main.c: 5:     system_init();
  4867  002AEE  ECD3  F01D         	call	_system_init	;wreg free
  4868                           
  4869                           ;actuators_main.c: 6:     initLCD();
  4870  002AF2  ECC9  F01B         	call	_initLCD	;wreg free
  4871                           
  4872                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4873  002AF6  0E01               	movlw	1
  4874  002AF8  ECE0  F01E         	call	_lcdInst
  4875  002AFC  0E11               	movlw	17
  4876  002AFE  0101               	movlb	1	; () banked
  4877  002B00  6F12               	movwf	??_actuators_main& (0+255),b
  4878  002B02  0E3A               	movlw	58
  4879  002B04                     u9337:
  4880  002B04  2EE8               	decfsz	wreg,f,c
  4881  002B06  D7FE               	bra	u9337
  4882  002B08  2F12               	decfsz	??_actuators_main& (0+255),f,b
  4883  002B0A  D7FC               	bra	u9337
  4884  002B0C  F000               	nop	
  4885                           
  4886                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4887  002B0E  0ED9               	movlw	low STR_1
  4888  002B10  0100               	movlb	0	; () banked
  4889  002B12  6FED               	movwf	printf@fmt& (0+255),b
  4890  002B14  0EFF               	movlw	high STR_1
  4891  002B16  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4892  002B18  0E00               	movlw	0
  4893  002B1A  6FF0               	movwf	(?_printf+3)& (0+255),b
  4894  002B1C  0E00               	movlw	0
  4895  002B1E  6FEF               	movwf	(?_printf+2)& (0+255),b
  4896  002B20  EC7A  F01E         	call	_printf	;wreg free
  4897                           
  4898                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4899  002B24  0E03               	movlw	3
  4900  002B26  0101               	movlb	1	; () banked
  4901  002B28  6F13               	movwf	(??_actuators_main+1)& (0+255),b
  4902  002B2A  0E8A               	movlw	138
  4903  002B2C  6F12               	movwf	??_actuators_main& (0+255),b
  4904  002B2E  0E55               	movlw	85
  4905  002B30                     u9347:
  4906  002B30  2EE8               	decfsz	wreg,f,c
  4907  002B32  D7FE               	bra	u9347
  4908  002B34  2F12               	decfsz	??_actuators_main& (0+255),f,b
  4909  002B36  D7FC               	bra	u9347
  4910  002B38  2F13               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4911  002B3A  D7FA               	bra	u9347
  4912  002B3C  D000               	nop2	
  4913  002B3E                     l7644:
  4914                           
  4915                           ;actuators_main.c: 11:     if (act_cnt==0){
  4916  002B3E  0101               	movlb	1	; () banked
  4917  002B40  5114               	movf	actuators_main@act_cnt& (0+255),w,b
  4918  002B42  1115               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4919  002B44  A4D8               	btfss	status,2,c
  4920  002B46  D064               	goto	l7720
  4921                           
  4922                           ; BSR set to: 1
  4923                           ;actuators_main.c: 15:         stepper(stack);
  4924  002B48  C10E  F100         	movff	actuators_main@stack,stepper@stack
  4925  002B4C  C10F  F101         	movff	actuators_main@stack+1,stepper@stack+1
  4926  002B50  EC8A  F01B         	call	_stepper	;wreg free
  4927                           
  4928                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4929  002B54  C110  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4930  002B58  C111  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4931  002B5C  0E00               	movlw	0
  4932  002B5E  ECA9  F017         	call	_stepper2
  4933                           
  4934                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4935  002B62  C110  F100         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4936  002B66  C111  F101         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4937  002B6A  0E01               	movlw	1
  4938  002B6C  EC25  F01A         	call	_stepper2_back
  4939                           
  4940                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4941  002B70  0E00               	movlw	0
  4942  002B72  6E89               	movwf	3977,c	;volatile
  4943                           
  4944                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4945  002B74  908B               	bcf	3979,0,c	;volatile
  4946                           
  4947                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4948  002B76  908D               	bcf	3981,0,c	;volatile
  4949                           
  4950                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4951  002B78  928D               	bcf	3981,1,c	;volatile
  4952                           
  4953                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  4954  002B7A  948D               	bcf	3981,2,c	;volatile
  4955                           
  4956                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  4957  002B7C  9A8B               	bcf	3979,5,c	;volatile
  4958                           
  4959                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  4960  002B7E  9C8B               	bcf	3979,6,c	;volatile
  4961                           
  4962                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  4963  002B80  9E8B               	bcf	3979,7,c	;volatile
  4964                           
  4965                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  4966  002B82  9A89               	bcf	3977,5,c	;volatile
  4967                           
  4968                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4969  002B84  0E01               	movlw	1
  4970  002B86  ECE0  F01E         	call	_lcdInst
  4971  002B8A  0E11               	movlw	17
  4972  002B8C  0101               	movlb	1	; () banked
  4973  002B8E  6F12               	movwf	??_actuators_main& (0+255),b
  4974  002B90  0E3A               	movlw	58
  4975  002B92                     u9357:
  4976  002B92  2EE8               	decfsz	wreg,f,c
  4977  002B94  D7FE               	bra	u9357
  4978  002B96  2F12               	decfsz	??_actuators_main& (0+255),f,b
  4979  002B98  D7FC               	bra	u9357
  4980  002B9A  F000               	nop	
  4981                           
  4982                           ;actuators_main.c: 31:         printf("Stepper done");
  4983  002B9C  0E0A               	movlw	low STR_2
  4984  002B9E  0100               	movlb	0	; () banked
  4985  002BA0  6FED               	movwf	printf@fmt& (0+255),b
  4986  002BA2  0EFF               	movlw	high STR_2
  4987  002BA4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4988  002BA6  EC7A  F01E         	call	_printf	;wreg free
  4989                           
  4990                           ;actuators_main.c: 33:         servo();
  4991  002BAA  EC71  F019         	call	_servo	;wreg free
  4992                           
  4993                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4994  002BAE  0E01               	movlw	1
  4995  002BB0  ECE0  F01E         	call	_lcdInst
  4996  002BB4  0E11               	movlw	17
  4997  002BB6  0101               	movlb	1	; () banked
  4998  002BB8  6F12               	movwf	??_actuators_main& (0+255),b
  4999  002BBA  0E3A               	movlw	58
  5000  002BBC                     u9367:
  5001  002BBC  2EE8               	decfsz	wreg,f,c
  5002  002BBE  D7FE               	bra	u9367
  5003  002BC0  2F12               	decfsz	??_actuators_main& (0+255),f,b
  5004  002BC2  D7FC               	bra	u9367
  5005  002BC4  F000               	nop	
  5006                           
  5007                           ;actuators_main.c: 35:         printf("Servo done");
  5008  002BC6  0E74               	movlw	low STR_3
  5009  002BC8  0100               	movlb	0	; () banked
  5010  002BCA  6FED               	movwf	printf@fmt& (0+255),b
  5011  002BCC  0EFF               	movlw	high STR_3
  5012  002BCE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5013  002BD0  EC7A  F01E         	call	_printf	;wreg free
  5014                           
  5015                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  5016  002BD4  0E00               	movlw	0
  5017  002BD6  6E89               	movwf	3977,c	;volatile
  5018                           
  5019                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  5020  002BD8  908B               	bcf	3979,0,c	;volatile
  5021                           
  5022                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  5023  002BDA  908D               	bcf	3981,0,c	;volatile
  5024                           
  5025                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  5026  002BDC  928D               	bcf	3981,1,c	;volatile
  5027                           
  5028                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  5029  002BDE  948D               	bcf	3981,2,c	;volatile
  5030                           
  5031                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  5032  002BE0  9A8B               	bcf	3979,5,c	;volatile
  5033                           
  5034                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  5035  002BE2  9C8B               	bcf	3979,6,c	;volatile
  5036                           
  5037                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  5038  002BE4  9E8B               	bcf	3979,7,c	;volatile
  5039                           
  5040                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  5041  002BE6  9A89               	bcf	3977,5,c	;volatile
  5042                           
  5043                           ;actuators_main.c: 49:         stepper2(1, steps2_adj);
  5044  002BE8  C110  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5045  002BEC  C111  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5046  002BF0  0E01               	movlw	1
  5047  002BF2  ECA9  F017         	call	_stepper2
  5048                           
  5049                           ;actuators_main.c: 50:                         LATA = 0b00000000;
  5050  002BF6  0E00               	movlw	0
  5051  002BF8  6E89               	movwf	3977,c	;volatile
  5052                           
  5053                           ;actuators_main.c: 51:         LATCbits.LATC0 = 0;
  5054  002BFA  908B               	bcf	3979,0,c	;volatile
  5055                           
  5056                           ;actuators_main.c: 52:         LATEbits.LATE0 = 0;
  5057  002BFC  908D               	bcf	3981,0,c	;volatile
  5058                           
  5059                           ;actuators_main.c: 53:         LATEbits.LATE1 = 0;
  5060  002BFE  928D               	bcf	3981,1,c	;volatile
  5061                           
  5062                           ;actuators_main.c: 54:         LATEbits.LATE2 = 0;
  5063  002C00  948D               	bcf	3981,2,c	;volatile
  5064                           
  5065                           ;actuators_main.c: 55:         LATCbits.LATC5 = 0;
  5066  002C02  9A8B               	bcf	3979,5,c	;volatile
  5067                           
  5068                           ;actuators_main.c: 56:         LATCbits.LATC6 = 0;
  5069  002C04  9C8B               	bcf	3979,6,c	;volatile
  5070                           
  5071                           ;actuators_main.c: 57:         LATCbits.LATC7 = 0;
  5072  002C06  9E8B               	bcf	3979,7,c	;volatile
  5073                           
  5074                           ;actuators_main.c: 58:         LATAbits.LATA5 = 0;
  5075  002C08  9A89               	bcf	3977,5,c	;volatile
  5076                           
  5077                           ;actuators_main.c: 59:         act_cnt++;
  5078  002C0A  0101               	movlb	1	; () banked
  5079  002C0C  4B14               	infsnz	actuators_main@act_cnt& (0+255),f,b
  5080  002C0E  2B15               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  5081  002C10                     l7720:
  5082                           
  5083                           ; BSR set to: 1
  5084                           ;actuators_main.c: 62:     if(act_cnt){
  5085  002C10  5114               	movf	actuators_main@act_cnt& (0+255),w,b
  5086  002C12  1115               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5087  002C14  A4D8               	btfss	status,2,c
  5088  002C16  0012               	return	
  5089  002C18  D792               	goto	l7644
  5090  002C1A                     __end_of_actuators_main:
  5091                           	opt callstack 0
  5092                           
  5093 ;; *************** function _system_init *****************
  5094 ;; Defined at:
  5095 ;;		line 72 in file "actuators_main.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		wreg, status,2
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;Total ram usage:        0 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    3
  5116 ;; This function calls:
  5117 ;;		Nothing
  5118 ;; This function is called by:
  5119 ;;		_actuators_main
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text11
  5124  003BA6                     __ptext11:
  5125                           	opt callstack 0
  5126  003BA6                     _system_init:
  5127                           	opt callstack 26
  5128                           
  5129                           ;actuators_main.c: 73:     TRISB = 0x00;
  5130                           
  5131                           ; BSR set to: 1
  5132                           ;incstack = 0
  5133  003BA6  0E00               	movlw	0
  5134  003BA8  6E93               	movwf	3987,c	;volatile
  5135                           
  5136                           ;actuators_main.c: 75:     LATB = 0x0F;
  5137  003BAA  0E0F               	movlw	15
  5138  003BAC  6E8A               	movwf	3978,c	;volatile
  5139                           
  5140                           ;actuators_main.c: 76:     TRISA = 0x00;
  5141  003BAE  0E00               	movlw	0
  5142  003BB0  6E92               	movwf	3986,c	;volatile
  5143                           
  5144                           ;actuators_main.c: 77:     LATA = 0x0F;
  5145  003BB2  0E0F               	movlw	15
  5146  003BB4  6E89               	movwf	3977,c	;volatile
  5147                           
  5148                           ;actuators_main.c: 79:     TRISCbits.TRISC1 = 0;
  5149  003BB6  9294               	bcf	3988,1,c	;volatile
  5150                           
  5151                           ;actuators_main.c: 82:     TRISCbits.TRISC2 = 0;
  5152  003BB8  9494               	bcf	3988,2,c	;volatile
  5153                           
  5154                           ;actuators_main.c: 85:     LATD = 0x00;
  5155  003BBA  0E00               	movlw	0
  5156  003BBC  6E8C               	movwf	3980,c	;volatile
  5157                           
  5158                           ;actuators_main.c: 86:     TRISD = 0x00;
  5159  003BBE  0E00               	movlw	0
  5160  003BC0  6E95               	movwf	3989,c	;volatile
  5161                           
  5162                           ;actuators_main.c: 88:     ADCON1 = 0b00001111;
  5163  003BC2  0E0F               	movlw	15
  5164  003BC4  6EC1               	movwf	4033,c	;volatile
  5165                           
  5166                           ;actuators_main.c: 90:     TRISC = 0x00;
  5167  003BC6  0E00               	movlw	0
  5168  003BC8  6E94               	movwf	3988,c	;volatile
  5169                           
  5170                           ;actuators_main.c: 91:     LATC = 0x00;
  5171  003BCA  0E00               	movlw	0
  5172  003BCC  6E8B               	movwf	3979,c	;volatile
  5173                           
  5174                           ;actuators_main.c: 92:     TRISE = 0x00;
  5175  003BCE  0E00               	movlw	0
  5176  003BD0  6E96               	movwf	3990,c	;volatile
  5177                           
  5178                           ;actuators_main.c: 93:     LATE = 0x00;
  5179  003BD2  0E00               	movlw	0
  5180  003BD4  6E8D               	movwf	3981,c	;volatile
  5181  003BD6  0012               	return		;funcret
  5182  003BD8                     __end_of_system_init:
  5183                           	opt callstack 0
  5184                           
  5185 ;; *************** function _stepper2_back *****************
  5186 ;; Defined at:
  5187 ;;		line 428 in file "actuators_main.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  direction       1    wreg     unsigned char 
  5190 ;;  steps2_adj      2    0[BANK1 ] int 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  direction       1    3[BANK1 ] unsigned char 
  5193 ;;  i               2    6[BANK1 ] int 
  5194 ;;  count_steppe    2    4[BANK1 ] int 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      void 
  5197 ;; Registers used:
  5198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5204 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;Total ram usage:        8 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:   15
  5211 ;; This function calls:
  5212 ;;		_full_drive
  5213 ;;		_lcdInst
  5214 ;;		_printf
  5215 ;; This function is called by:
  5216 ;;		_actuators_main
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text12
  5221  00344A                     __ptext12:
  5222                           	opt callstack 0
  5223  00344A                     _stepper2_back:
  5224                           	opt callstack 14
  5225                           
  5226                           ;incstack = 0
  5227                           ;stepper2_back@direction stored from wreg
  5228  00344A  0101               	movlb	1	; () banked
  5229  00344C  6F03               	movwf	stepper2_back@direction& (0+255),b
  5230                           
  5231                           ;actuators_main.c: 446:     int count_stepper = 0;
  5232  00344E  0E00               	movlw	0
  5233  003450  0101               	movlb	1	; () banked
  5234  003452  6F05               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5235  003454  0E00               	movlw	0
  5236  003456  6F04               	movwf	stepper2_back@count_stepper& (0+255),b
  5237                           
  5238                           ; BSR set to: 1
  5239                           ;actuators_main.c: 449:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5240                           
  5241                           ; BSR set to: 1
  5242                           ;actuators_main.c: 448:         if (count_stepper<1){
  5243  003458  0E01               	movlw	1
  5244  00345A  ECE0  F01E         	call	_lcdInst
  5245  00345E  0E11               	movlw	17
  5246  003460  0101               	movlb	1	; () banked
  5247  003462  6F02               	movwf	??_stepper2_back& (0+255),b
  5248  003464  0E3A               	movlw	58
  5249  003466                     u9377:
  5250  003466  2EE8               	decfsz	wreg,f,c
  5251  003468  D7FE               	bra	u9377
  5252  00346A  2F02               	decfsz	??_stepper2_back& (0+255),f,b
  5253  00346C  D7FC               	bra	u9377
  5254  00346E  F000               	nop	
  5255                           
  5256                           ;actuators_main.c: 450:             printf("step1");
  5257  003470  0EF4               	movlw	low STR_6
  5258  003472  0100               	movlb	0	; () banked
  5259  003474  6FED               	movwf	printf@fmt& (0+255),b
  5260  003476  0EFF               	movlw	high STR_6
  5261  003478  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5262  00347A  EC7A  F01E         	call	_printf	;wreg free
  5263  00347E  0EC0               	movlw	192
  5264  003480  ECE0  F01E         	call	_lcdInst
  5265                           
  5266                           ;actuators_main.c: 452:             printf("Step speed %d",4);
  5267  003484  0EE2               	movlw	low STR_7
  5268  003486  0100               	movlb	0	; () banked
  5269  003488  6FED               	movwf	printf@fmt& (0+255),b
  5270  00348A  0EFE               	movlw	high STR_7
  5271  00348C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5272  00348E  0E00               	movlw	0
  5273  003490  6FF0               	movwf	(?_printf+3)& (0+255),b
  5274  003492  0E04               	movlw	4
  5275  003494  6FEF               	movwf	(?_printf+2)& (0+255),b
  5276  003496  EC7A  F01E         	call	_printf	;wreg free
  5277                           
  5278                           ;actuators_main.c: 453:             for(int i=0;i<5;i++){
  5279  00349A  0E00               	movlw	0
  5280  00349C  0101               	movlb	1	; () banked
  5281  00349E  6F07               	movwf	(stepper2_back@i+1)& (0+255),b
  5282  0034A0  0E00               	movlw	0
  5283  0034A2  6F06               	movwf	stepper2_back@i& (0+255),b
  5284  0034A4                     l7398:
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;actuators_main.c: 455:                 full_drive(direction, 2);
  5288  0034A4  0E00               	movlw	0
  5289  0034A6  0100               	movlb	0	; () banked
  5290  0034A8  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5291  0034AA  0E02               	movlw	2
  5292  0034AC  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5293  0034AE  0101               	movlb	1	; () banked
  5294  0034B0  5103               	movf	stepper2_back@direction& (0+255),w,b
  5295  0034B2  EC93  F00B         	call	_full_drive
  5296                           
  5297                           ;actuators_main.c: 457:             }
  5298  0034B6  0101               	movlb	1	; () banked
  5299  0034B8  4B06               	infsnz	stepper2_back@i& (0+255),f,b
  5300  0034BA  2B07               	incf	(stepper2_back@i+1)& (0+255),f,b
  5301                           
  5302                           ; BSR set to: 1
  5303  0034BC  BF07               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5304  0034BE  D7F2               	goto	l7398
  5305  0034C0  5107               	movf	(stepper2_back@i+1)& (0+255),w,b
  5306  0034C2  E104               	bnz	u7880
  5307  0034C4  0E05               	movlw	5
  5308  0034C6  5D06               	subwf	stepper2_back@i& (0+255),w,b
  5309  0034C8  A0D8               	btfss	status,0,c
  5310  0034CA  D7EC               	goto	l7398
  5311  0034CC                     u7880:
  5312                           
  5313                           ; BSR set to: 1
  5314                           ;actuators_main.c: 458:             printf("cnt is %d", count_stepper);
  5315  0034CC  0ED9               	movlw	low STR_1
  5316  0034CE  0100               	movlb	0	; () banked
  5317  0034D0  6FED               	movwf	printf@fmt& (0+255),b
  5318  0034D2  0EFF               	movlw	high STR_1
  5319  0034D4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5320  0034D6  C104  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5321  0034DA  C105  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5322  0034DE  EC7A  F01E         	call	_printf	;wreg free
  5323                           
  5324                           ;actuators_main.c: 459:             count_stepper++;
  5325  0034E2  0101               	movlb	1	; () banked
  5326  0034E4  4B04               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5327  0034E6  2B05               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5328                           
  5329                           ; BSR set to: 1
  5330  0034E8  0012               	return		;funcret
  5331  0034EA                     __end_of_stepper2_back:
  5332                           	opt callstack 0
  5333                           
  5334 ;; *************** function _stepper2 *****************
  5335 ;; Defined at:
  5336 ;;		line 343 in file "actuators_main.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  direction       1    wreg     unsigned char 
  5339 ;;  steps2_adj      2    0[BANK1 ] int 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  direction       1   13[BANK1 ] unsigned char 
  5342 ;;  i               2    9[BANK1 ] int 
  5343 ;;  i               2    7[BANK1 ] int 
  5344 ;;  count_steppe    2   11[BANK1 ] int 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5354 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;Total ram usage:       14 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:   15
  5361 ;; This function calls:
  5362 ;;		_full_drive
  5363 ;;		_lcdInst
  5364 ;;		_printf
  5365 ;; This function is called by:
  5366 ;;		_actuators_main
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text13
  5371  002F52                     __ptext13:
  5372                           	opt callstack 0
  5373  002F52                     _stepper2:
  5374                           	opt callstack 14
  5375                           
  5376                           ; BSR set to: 1
  5377                           ;incstack = 0
  5378                           ;stepper2@direction stored from wreg
  5379  002F52  0101               	movlb	1	; () banked
  5380  002F54  6F0D               	movwf	stepper2@direction& (0+255),b
  5381                           
  5382                           ;actuators_main.c: 361:     int count_stepper = 0;
  5383  002F56  0E00               	movlw	0
  5384  002F58  0101               	movlb	1	; () banked
  5385  002F5A  6F0C               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5386  002F5C  0E00               	movlw	0
  5387  002F5E  6F0B               	movwf	stepper2@count_stepper& (0+255),b
  5388                           
  5389                           ; BSR set to: 1
  5390                           ;actuators_main.c: 364:     if (direction == 0){
  5391                           
  5392                           ; BSR set to: 1
  5393                           ;actuators_main.c: 363:         if (count_stepper<1){
  5394  002F60  510D               	movf	stepper2@direction& (0+255),w,b
  5395  002F62  A4D8               	btfss	status,2,c
  5396  002F64  D029               	goto	l7360
  5397                           
  5398                           ; BSR set to: 1
  5399                           ;actuators_main.c: 369:             for(int i=0;i<steps2_adj;i++){
  5400  002F66  0E00               	movlw	0
  5401  002F68  6F08               	movwf	(stepper2@i+1)& (0+255),b
  5402  002F6A  0E00               	movlw	0
  5403  002F6C  6F07               	movwf	stepper2@i& (0+255),b
  5404  002F6E  D00C               	goto	l7354
  5405  002F70                     l7350:
  5406                           
  5407                           ; BSR set to: 1
  5408                           ;actuators_main.c: 371:                 full_drive(direction, 2);
  5409  002F70  0E00               	movlw	0
  5410  002F72  0100               	movlb	0	; () banked
  5411  002F74  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5412  002F76  0E02               	movlw	2
  5413  002F78  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5414  002F7A  0101               	movlb	1	; () banked
  5415  002F7C  510D               	movf	stepper2@direction& (0+255),w,b
  5416  002F7E  EC93  F00B         	call	_full_drive
  5417                           
  5418                           ;actuators_main.c: 373:             }
  5419  002F82  0101               	movlb	1	; () banked
  5420  002F84  4B07               	infsnz	stepper2@i& (0+255),f,b
  5421  002F86  2B08               	incf	(stepper2@i+1)& (0+255),f,b
  5422  002F88                     l7354:
  5423                           
  5424                           ; BSR set to: 1
  5425  002F88  5100               	movf	stepper2@steps2_adj& (0+255),w,b
  5426  002F8A  5D07               	subwf	stepper2@i& (0+255),w,b
  5427  002F8C  5108               	movf	(stepper2@i+1)& (0+255),w,b
  5428  002F8E  0A80               	xorlw	128
  5429  002F90  6F02               	movwf	??_stepper2& (0+255),b
  5430  002F92  5101               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5431  002F94  0A80               	xorlw	128
  5432  002F96  5902               	subwfb	??_stepper2& (0+255),w,b
  5433  002F98  A0D8               	btfss	status,0,c
  5434  002F9A  D7EA               	goto	l7350
  5435                           
  5436                           ; BSR set to: 1
  5437                           ;actuators_main.c: 374:             printf("cnt is %d", count_stepper);
  5438  002F9C  0ED9               	movlw	low STR_1
  5439  002F9E  0100               	movlb	0	; () banked
  5440  002FA0  6FED               	movwf	printf@fmt& (0+255),b
  5441  002FA2  0EFF               	movlw	high STR_1
  5442  002FA4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5443  002FA6  C10B  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5444  002FAA  C10C  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5445  002FAE  EC7A  F01E         	call	_printf	;wreg free
  5446                           
  5447                           ;actuators_main.c: 375:             count_stepper++;
  5448  002FB2  0101               	movlb	1	; () banked
  5449  002FB4  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5450  002FB6  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5451  002FB8                     l7360:
  5452                           
  5453                           ; BSR set to: 1
  5454                           ;actuators_main.c: 377:     if (direction == 1){
  5455  002FB8  050D               	decf	stepper2@direction& (0+255),w,b
  5456  002FBA  A4D8               	btfss	status,2,c
  5457  002FBC  0012               	return	
  5458                           
  5459                           ; BSR set to: 1
  5460                           ;actuators_main.c: 378:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5461  002FBE  0E01               	movlw	1
  5462  002FC0  ECE0  F01E         	call	_lcdInst
  5463  002FC4  0E11               	movlw	17
  5464  002FC6  0101               	movlb	1	; () banked
  5465  002FC8  6F02               	movwf	??_stepper2& (0+255),b
  5466  002FCA  0E3A               	movlw	58
  5467  002FCC                     u9387:
  5468  002FCC  2EE8               	decfsz	wreg,f,c
  5469  002FCE  D7FE               	bra	u9387
  5470  002FD0  2F02               	decfsz	??_stepper2& (0+255),f,b
  5471  002FD2  D7FC               	bra	u9387
  5472  002FD4  F000               	nop	
  5473                           
  5474                           ;actuators_main.c: 379:                         printf("steppp %d", steps2_adj-(5));
  5475  002FD6  0ECF               	movlw	low STR_5
  5476  002FD8  0100               	movlb	0	; () banked
  5477  002FDA  6FED               	movwf	printf@fmt& (0+255),b
  5478  002FDC  0EFF               	movlw	high STR_5
  5479  002FDE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5480  002FE0  0EFB               	movlw	251
  5481  002FE2  0101               	movlb	1	; () banked
  5482  002FE4  2500               	addwf	stepper2@steps2_adj& (0+255),w,b
  5483  002FE6  0100               	movlb	0	; () banked
  5484  002FE8  6FEF               	movwf	(?_printf+2)& (0+255),b
  5485  002FEA  0EFF               	movlw	255
  5486  002FEC  0101               	movlb	1	; () banked
  5487  002FEE  2101               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5488  002FF0  0100               	movlb	0	; () banked
  5489  002FF2  6FF0               	movwf	(?_printf+3)& (0+255),b
  5490  002FF4  EC7A  F01E         	call	_printf	;wreg free
  5491                           
  5492                           ;actuators_main.c: 381:                 for(int i=0;i<(steps2_adj-(5));i++){
  5493  002FF8  0E00               	movlw	0
  5494  002FFA  0101               	movlb	1	; () banked
  5495  002FFC  6F0A               	movwf	(stepper2@i_388+1)& (0+255),b
  5496  002FFE  0E00               	movlw	0
  5497  003000  6F09               	movwf	stepper2@i_388& (0+255),b
  5498  003002  D00C               	goto	l7374
  5499  003004                     l7370:
  5500                           
  5501                           ; BSR set to: 1
  5502                           ;actuators_main.c: 383:                     full_drive(direction, 2);
  5503  003004  0E00               	movlw	0
  5504  003006  0100               	movlb	0	; () banked
  5505  003008  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5506  00300A  0E02               	movlw	2
  5507  00300C  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5508  00300E  0101               	movlb	1	; () banked
  5509  003010  510D               	movf	stepper2@direction& (0+255),w,b
  5510  003012  EC93  F00B         	call	_full_drive
  5511                           
  5512                           ;actuators_main.c: 385:                 }
  5513  003016  0101               	movlb	1	; () banked
  5514  003018  4B09               	infsnz	stepper2@i_388& (0+255),f,b
  5515  00301A  2B0A               	incf	(stepper2@i_388+1)& (0+255),f,b
  5516  00301C                     l7374:
  5517                           
  5518                           ; BSR set to: 1
  5519  00301C  0EFB               	movlw	251
  5520  00301E  6F02               	movwf	??_stepper2& (0+255),b
  5521  003020  0EFF               	movlw	255
  5522  003022  6F03               	movwf	(??_stepper2+1)& (0+255),b
  5523  003024  C100  F104         	movff	stepper2@steps2_adj,??_stepper2+2
  5524  003028  C101  F105         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5525  00302C  5102               	movf	??_stepper2& (0+255),w,b
  5526  00302E  2704               	addwf	(??_stepper2+2)& (0+255),f,b
  5527  003030  5103               	movf	(??_stepper2+1)& (0+255),w,b
  5528  003032  2305               	addwfc	(??_stepper2+3)& (0+255),f,b
  5529  003034  5104               	movf	(??_stepper2+2)& (0+255),w,b
  5530  003036  5D09               	subwf	stepper2@i_388& (0+255),w,b
  5531  003038  510A               	movf	(stepper2@i_388+1)& (0+255),w,b
  5532  00303A  0A80               	xorlw	128
  5533  00303C  6F06               	movwf	(??_stepper2+4)& (0+255),b
  5534  00303E  5105               	movf	(??_stepper2+3)& (0+255),w,b
  5535  003040  0A80               	xorlw	128
  5536  003042  5906               	subwfb	(??_stepper2+4)& (0+255),w,b
  5537  003044  A0D8               	btfss	status,0,c
  5538  003046  D7DE               	goto	l7370
  5539                           
  5540                           ; BSR set to: 1
  5541                           ;actuators_main.c: 386:                 count_stepper++;
  5542  003048  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5543  00304A  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5544                           
  5545                           ; BSR set to: 1
  5546  00304C  0012               	return		;funcret
  5547  00304E                     __end_of_stepper2:
  5548                           	opt callstack 0
  5549                           
  5550 ;; *************** function _stepper *****************
  5551 ;; Defined at:
  5552 ;;		line 296 in file "actuators_main.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  stack           2    0[BANK1 ] int 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  i               2    6[BANK1 ] int 
  5557 ;;  i               2    4[BANK1 ] int 
  5558 ;;  count_steppe    2    2[BANK1 ] int 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      void 
  5561 ;; Registers used:
  5562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5568 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;Total ram usage:        8 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:   15
  5575 ;; This function calls:
  5576 ;;		_full_drive
  5577 ;; This function is called by:
  5578 ;;		_actuators_main
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text14
  5583  003714                     __ptext14:
  5584                           	opt callstack 0
  5585  003714                     _stepper:
  5586                           	opt callstack 14
  5587                           
  5588                           ;actuators_main.c: 297:     int count_stepper = 0;
  5589                           
  5590                           ; BSR set to: 1
  5591                           ;incstack = 0
  5592  003714  0E00               	movlw	0
  5593  003716  0101               	movlb	1	; () banked
  5594  003718  6F03               	movwf	(stepper@count_stepper+1)& (0+255),b
  5595  00371A  0E00               	movlw	0
  5596  00371C  6F02               	movwf	stepper@count_stepper& (0+255),b
  5597                           
  5598                           ; BSR set to: 1
  5599                           ;actuators_main.c: 306:             if (stack == 1){
  5600                           
  5601                           ; BSR set to: 1
  5602                           ;actuators_main.c: 300:         if (count_stepper<1){
  5603  00371E  0500               	decf	stepper@stack& (0+255),w,b
  5604  003720  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5605  003722  A4D8               	btfss	status,2,c
  5606  003724  D017               	goto	u7810
  5607                           
  5608                           ; BSR set to: 1
  5609                           ;actuators_main.c: 307:                 for(int i=0;i<14;i++){
  5610  003726  0E00               	movlw	0
  5611  003728  6F05               	movwf	(stepper@i+1)& (0+255),b
  5612  00372A  0E00               	movlw	0
  5613  00372C  6F04               	movwf	stepper@i& (0+255),b
  5614  00372E                     l7320:
  5615                           
  5616                           ; BSR set to: 1
  5617                           ;actuators_main.c: 309:                     full_drive(0, 1);
  5618  00372E  0E00               	movlw	0
  5619  003730  0100               	movlb	0	; () banked
  5620  003732  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5621  003734  0E01               	movlw	1
  5622  003736  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5623  003738  0E00               	movlw	0
  5624  00373A  EC93  F00B         	call	_full_drive
  5625                           
  5626                           ;actuators_main.c: 311:                 }
  5627  00373E  0101               	movlb	1	; () banked
  5628  003740  4B04               	infsnz	stepper@i& (0+255),f,b
  5629  003742  2B05               	incf	(stepper@i+1)& (0+255),f,b
  5630                           
  5631                           ; BSR set to: 1
  5632  003744  BF05               	btfsc	(stepper@i+1)& (0+255),7,b
  5633  003746  D7F3               	goto	l7320
  5634  003748  5105               	movf	(stepper@i+1)& (0+255),w,b
  5635  00374A  E104               	bnz	u7810
  5636  00374C  0E0E               	movlw	14
  5637  00374E  5D04               	subwf	stepper@i& (0+255),w,b
  5638  003750  A0D8               	btfss	status,0,c
  5639  003752  D7ED               	goto	l7320
  5640  003754                     u7810:
  5641                           
  5642                           ; BSR set to: 1
  5643                           ;actuators_main.c: 313:             if (stack == 2){
  5644  003754  0E02               	movlw	2
  5645  003756  1900               	xorwf	stepper@stack& (0+255),w,b
  5646  003758  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5647  00375A  A4D8               	btfss	status,2,c
  5648  00375C  D017               	goto	u7830
  5649                           
  5650                           ; BSR set to: 1
  5651                           ;actuators_main.c: 314:                 for(int i=0;i<14;i++){
  5652  00375E  0E00               	movlw	0
  5653  003760  6F07               	movwf	(stepper@i_380+1)& (0+255),b
  5654  003762  0E00               	movlw	0
  5655  003764  6F06               	movwf	stepper@i_380& (0+255),b
  5656  003766                     l7334:
  5657                           
  5658                           ; BSR set to: 1
  5659                           ;actuators_main.c: 315:                     full_drive(0, 3);
  5660  003766  0E00               	movlw	0
  5661  003768  0100               	movlb	0	; () banked
  5662  00376A  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5663  00376C  0E03               	movlw	3
  5664  00376E  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5665  003770  0E00               	movlw	0
  5666  003772  EC93  F00B         	call	_full_drive
  5667                           
  5668                           ;actuators_main.c: 318:                 }
  5669  003776  0101               	movlb	1	; () banked
  5670  003778  4B06               	infsnz	stepper@i_380& (0+255),f,b
  5671  00377A  2B07               	incf	(stepper@i_380+1)& (0+255),f,b
  5672                           
  5673                           ; BSR set to: 1
  5674  00377C  BF07               	btfsc	(stepper@i_380+1)& (0+255),7,b
  5675  00377E  D7F3               	goto	l7334
  5676  003780  5107               	movf	(stepper@i_380+1)& (0+255),w,b
  5677  003782  E104               	bnz	u7830
  5678  003784  0E0E               	movlw	14
  5679  003786  5D06               	subwf	stepper@i_380& (0+255),w,b
  5680  003788  A0D8               	btfss	status,0,c
  5681  00378A  D7ED               	goto	l7334
  5682  00378C                     u7830:
  5683                           
  5684                           ; BSR set to: 1
  5685                           ;actuators_main.c: 321:             count_stepper++;
  5686  00378C  4B02               	infsnz	stepper@count_stepper& (0+255),f,b
  5687  00378E  2B03               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5688                           
  5689                           ; BSR set to: 1
  5690                           
  5691                           ;actuators_main.c: 322:         }
  5692  003790  0012               	return		;funcret
  5693  003792                     __end_of_stepper:
  5694                           	opt callstack 0
  5695                           
  5696 ;; *************** function _full_drive *****************
  5697 ;; Defined at:
  5698 ;;		line 477 in file "actuators_main.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  direction       1    wreg     unsigned char 
  5701 ;;  stepper_no      2  123[BANK0 ] int 
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;  direction       1  126[BANK0 ] unsigned char 
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      void 
  5706 ;; Registers used:
  5707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;Total ram usage:        4 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:   14
  5720 ;; This function calls:
  5721 ;;		_printf
  5722 ;; This function is called by:
  5723 ;;		_stepper
  5724 ;;		_stepper2
  5725 ;;		_stepper2_back
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text15
  5730  001726                     __ptext15:
  5731                           	opt callstack 0
  5732  001726                     _full_drive:
  5733                           	opt callstack 14
  5734                           
  5735                           ; BSR set to: 1
  5736                           ;incstack = 0
  5737                           ;full_drive@direction stored from wreg
  5738  001726  0100               	movlb	0	; () banked
  5739  001728  6FFE               	movwf	full_drive@direction& (0+255),b
  5740                           
  5741                           ;actuators_main.c: 478:     if (stepper_no == 1){
  5742  00172A  0100               	movlb	0	; () banked
  5743  00172C  05FB               	decf	full_drive@stepper_no& (0+255),w,b
  5744  00172E  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5745  001730  A4D8               	btfss	status,2,c
  5746  001732  D06B               	goto	l7048
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;actuators_main.c: 479:         if (direction == 1){
  5750  001734  05FE               	decf	full_drive@direction& (0+255),w,b
  5751  001736  A4D8               	btfss	status,2,c
  5752  001738  D032               	goto	l7032
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;actuators_main.c: 480:             LATA = 0b00000011;
  5756  00173A  0E03               	movlw	3
  5757  00173C  6E89               	movwf	3977,c	;volatile
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;actuators_main.c: 481:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5761  00173E  0E1E               	movlw	30
  5762  001740  0100               	movlb	0	; () banked
  5763  001742  6FFD               	movwf	??_full_drive& (0+255),b
  5764  001744  0E37               	movlw	55
  5765  001746                     u9397:
  5766  001746  2EE8               	decfsz	wreg,f,c
  5767  001748  D7FE               	bra	u9397
  5768  00174A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5769  00174C  D7FC               	bra	u9397
  5770                           
  5771                           ;actuators_main.c: 482:             LATA = 0b00000110;
  5772  00174E  0E06               	movlw	6
  5773  001750  6E89               	movwf	3977,c	;volatile
  5774                           
  5775                           ;actuators_main.c: 483:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5776  001752  0E1E               	movlw	30
  5777  001754  0100               	movlb	0	; () banked
  5778  001756  6FFD               	movwf	??_full_drive& (0+255),b
  5779  001758  0E37               	movlw	55
  5780  00175A                     u9407:
  5781  00175A  2EE8               	decfsz	wreg,f,c
  5782  00175C  D7FE               	bra	u9407
  5783  00175E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5784  001760  D7FC               	bra	u9407
  5785                           
  5786                           ;actuators_main.c: 484:             LATA = 0b00001100;
  5787  001762  0E0C               	movlw	12
  5788  001764  6E89               	movwf	3977,c	;volatile
  5789                           
  5790                           ;actuators_main.c: 485:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5791  001766  0E1E               	movlw	30
  5792  001768  0100               	movlb	0	; () banked
  5793  00176A  6FFD               	movwf	??_full_drive& (0+255),b
  5794  00176C  0E37               	movlw	55
  5795  00176E                     u9417:
  5796  00176E  2EE8               	decfsz	wreg,f,c
  5797  001770  D7FE               	bra	u9417
  5798  001772  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5799  001774  D7FC               	bra	u9417
  5800                           
  5801                           ;actuators_main.c: 486:             LATA = 0b00001001;
  5802  001776  0E09               	movlw	9
  5803  001778  6E89               	movwf	3977,c	;volatile
  5804                           
  5805                           ;actuators_main.c: 487:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5806  00177A  0E1E               	movlw	30
  5807  00177C  0100               	movlb	0	; () banked
  5808  00177E  6FFD               	movwf	??_full_drive& (0+255),b
  5809  001780  0E37               	movlw	55
  5810  001782                     u9427:
  5811  001782  2EE8               	decfsz	wreg,f,c
  5812  001784  D7FE               	bra	u9427
  5813  001786  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5814  001788  D7FC               	bra	u9427
  5815                           
  5816                           ;actuators_main.c: 488:             LATA = 0b00000011;
  5817  00178A  0E03               	movlw	3
  5818  00178C  6E89               	movwf	3977,c	;volatile
  5819                           
  5820                           ;actuators_main.c: 489:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5821  00178E  0E1E               	movlw	30
  5822  001790  0100               	movlb	0	; () banked
  5823  001792  6FFD               	movwf	??_full_drive& (0+255),b
  5824  001794  0E37               	movlw	55
  5825  001796                     u9437:
  5826  001796  2EE8               	decfsz	wreg,f,c
  5827  001798  D7FE               	bra	u9437
  5828  00179A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5829  00179C  D7FC               	bra	u9437
  5830  00179E                     l7032:
  5831                           
  5832                           ;actuators_main.c: 491:         if (direction == 0){
  5833  00179E  0100               	movlb	0	; () banked
  5834  0017A0  51FE               	movf	full_drive@direction& (0+255),w,b
  5835  0017A2  A4D8               	btfss	status,2,c
  5836  0017A4  D032               	goto	l7048
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;actuators_main.c: 492:             LATA = 0b00001001;
  5840  0017A6  0E09               	movlw	9
  5841  0017A8  6E89               	movwf	3977,c	;volatile
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;actuators_main.c: 493:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5845  0017AA  0E1E               	movlw	30
  5846  0017AC  0100               	movlb	0	; () banked
  5847  0017AE  6FFD               	movwf	??_full_drive& (0+255),b
  5848  0017B0  0E37               	movlw	55
  5849  0017B2                     u9447:
  5850  0017B2  2EE8               	decfsz	wreg,f,c
  5851  0017B4  D7FE               	bra	u9447
  5852  0017B6  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5853  0017B8  D7FC               	bra	u9447
  5854                           
  5855                           ;actuators_main.c: 494:             LATA = 0b00001100;
  5856  0017BA  0E0C               	movlw	12
  5857  0017BC  6E89               	movwf	3977,c	;volatile
  5858                           
  5859                           ;actuators_main.c: 495:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5860  0017BE  0E1E               	movlw	30
  5861  0017C0  0100               	movlb	0	; () banked
  5862  0017C2  6FFD               	movwf	??_full_drive& (0+255),b
  5863  0017C4  0E37               	movlw	55
  5864  0017C6                     u9457:
  5865  0017C6  2EE8               	decfsz	wreg,f,c
  5866  0017C8  D7FE               	bra	u9457
  5867  0017CA  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5868  0017CC  D7FC               	bra	u9457
  5869                           
  5870                           ;actuators_main.c: 496:             LATA = 0b00000110;
  5871  0017CE  0E06               	movlw	6
  5872  0017D0  6E89               	movwf	3977,c	;volatile
  5873                           
  5874                           ;actuators_main.c: 497:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5875  0017D2  0E1E               	movlw	30
  5876  0017D4  0100               	movlb	0	; () banked
  5877  0017D6  6FFD               	movwf	??_full_drive& (0+255),b
  5878  0017D8  0E37               	movlw	55
  5879  0017DA                     u9467:
  5880  0017DA  2EE8               	decfsz	wreg,f,c
  5881  0017DC  D7FE               	bra	u9467
  5882  0017DE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5883  0017E0  D7FC               	bra	u9467
  5884                           
  5885                           ;actuators_main.c: 498:             LATA = 0b00000011;
  5886  0017E2  0E03               	movlw	3
  5887  0017E4  6E89               	movwf	3977,c	;volatile
  5888                           
  5889                           ;actuators_main.c: 499:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5890  0017E6  0E1E               	movlw	30
  5891  0017E8  0100               	movlb	0	; () banked
  5892  0017EA  6FFD               	movwf	??_full_drive& (0+255),b
  5893  0017EC  0E37               	movlw	55
  5894  0017EE                     u9477:
  5895  0017EE  2EE8               	decfsz	wreg,f,c
  5896  0017F0  D7FE               	bra	u9477
  5897  0017F2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5898  0017F4  D7FC               	bra	u9477
  5899                           
  5900                           ;actuators_main.c: 500:             LATA = 0b00001001;
  5901  0017F6  0E09               	movlw	9
  5902  0017F8  6E89               	movwf	3977,c	;volatile
  5903                           
  5904                           ;actuators_main.c: 501:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5905  0017FA  0E1E               	movlw	30
  5906  0017FC  0100               	movlb	0	; () banked
  5907  0017FE  6FFD               	movwf	??_full_drive& (0+255),b
  5908  001800  0E37               	movlw	55
  5909  001802                     u9487:
  5910  001802  2EE8               	decfsz	wreg,f,c
  5911  001804  D7FE               	bra	u9487
  5912  001806  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5913  001808  D7FC               	bra	u9487
  5914  00180A                     l7048:
  5915                           
  5916                           ;actuators_main.c: 504:     if (stepper_no == 2){
  5917  00180A  0E02               	movlw	2
  5918  00180C  0100               	movlb	0	; () banked
  5919  00180E  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  5920  001810  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5921  001812  A4D8               	btfss	status,2,c
  5922  001814  D089               	goto	l7126
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;actuators_main.c: 505:         if (direction == 1){
  5926  001816  05FE               	decf	full_drive@direction& (0+255),w,b
  5927  001818  A4D8               	btfss	status,2,c
  5928  00181A  D041               	goto	l7088
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;actuators_main.c: 506:             LATCbits.LATC0 = 1;
  5932  00181C  808B               	bsf	3979,0,c	;volatile
  5933                           
  5934                           ;actuators_main.c: 507:             LATEbits.LATE0 = 1;
  5935  00181E  808D               	bsf	3981,0,c	;volatile
  5936                           
  5937                           ;actuators_main.c: 508:             LATEbits.LATE1 = 0;
  5938  001820  928D               	bcf	3981,1,c	;volatile
  5939                           
  5940                           ;actuators_main.c: 509:             LATEbits.LATE2 = 0;
  5941  001822  948D               	bcf	3981,2,c	;volatile
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;actuators_main.c: 510:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5945  001824  0E0D               	movlw	13
  5946  001826  0100               	movlb	0	; () banked
  5947  001828  6FFD               	movwf	??_full_drive& (0+255),b
  5948  00182A  0EFB               	movlw	251
  5949  00182C                     u9497:
  5950  00182C  2EE8               	decfsz	wreg,f,c
  5951  00182E  D7FE               	bra	u9497
  5952  001830  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5953  001832  D7FC               	bra	u9497
  5954  001834  D000               	nop2	
  5955                           
  5956                           ;actuators_main.c: 511:             LATCbits.LATC0 = 0;
  5957  001836  908B               	bcf	3979,0,c	;volatile
  5958                           
  5959                           ;actuators_main.c: 512:             LATEbits.LATE0 = 1;
  5960  001838  808D               	bsf	3981,0,c	;volatile
  5961                           
  5962                           ;actuators_main.c: 513:             LATEbits.LATE1 = 1;
  5963  00183A  828D               	bsf	3981,1,c	;volatile
  5964                           
  5965                           ;actuators_main.c: 514:             LATEbits.LATE2 = 0;
  5966  00183C  948D               	bcf	3981,2,c	;volatile
  5967                           
  5968                           ;actuators_main.c: 515:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5969  00183E  0E0D               	movlw	13
  5970  001840  0100               	movlb	0	; () banked
  5971  001842  6FFD               	movwf	??_full_drive& (0+255),b
  5972  001844  0EFB               	movlw	251
  5973  001846                     u9507:
  5974  001846  2EE8               	decfsz	wreg,f,c
  5975  001848  D7FE               	bra	u9507
  5976  00184A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5977  00184C  D7FC               	bra	u9507
  5978  00184E  D000               	nop2	
  5979                           
  5980                           ;actuators_main.c: 516:             LATCbits.LATC0 = 0;
  5981  001850  908B               	bcf	3979,0,c	;volatile
  5982                           
  5983                           ;actuators_main.c: 517:             LATEbits.LATE0 = 0;
  5984  001852  908D               	bcf	3981,0,c	;volatile
  5985                           
  5986                           ;actuators_main.c: 518:             LATEbits.LATE1 = 1;
  5987  001854  828D               	bsf	3981,1,c	;volatile
  5988                           
  5989                           ;actuators_main.c: 519:             LATEbits.LATE2 = 1;
  5990  001856  848D               	bsf	3981,2,c	;volatile
  5991                           
  5992                           ;actuators_main.c: 520:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5993  001858  0E0D               	movlw	13
  5994  00185A  0100               	movlb	0	; () banked
  5995  00185C  6FFD               	movwf	??_full_drive& (0+255),b
  5996  00185E  0EFB               	movlw	251
  5997  001860                     u9517:
  5998  001860  2EE8               	decfsz	wreg,f,c
  5999  001862  D7FE               	bra	u9517
  6000  001864  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6001  001866  D7FC               	bra	u9517
  6002  001868  D000               	nop2	
  6003                           
  6004                           ;actuators_main.c: 521:             LATCbits.LATC0 = 1;
  6005  00186A  808B               	bsf	3979,0,c	;volatile
  6006                           
  6007                           ;actuators_main.c: 522:             LATEbits.LATE0 = 0;
  6008  00186C  908D               	bcf	3981,0,c	;volatile
  6009                           
  6010                           ;actuators_main.c: 523:             LATEbits.LATE1 = 0;
  6011  00186E  928D               	bcf	3981,1,c	;volatile
  6012                           
  6013                           ;actuators_main.c: 524:             LATEbits.LATE2 = 1;
  6014  001870  848D               	bsf	3981,2,c	;volatile
  6015                           
  6016                           ;actuators_main.c: 525:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6017  001872  0E0D               	movlw	13
  6018  001874  0100               	movlb	0	; () banked
  6019  001876  6FFD               	movwf	??_full_drive& (0+255),b
  6020  001878  0EFB               	movlw	251
  6021  00187A                     u9527:
  6022  00187A  2EE8               	decfsz	wreg,f,c
  6023  00187C  D7FE               	bra	u9527
  6024  00187E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6025  001880  D7FC               	bra	u9527
  6026  001882  D000               	nop2	
  6027                           
  6028                           ;actuators_main.c: 526:             LATCbits.LATC0 = 1;
  6029  001884  808B               	bsf	3979,0,c	;volatile
  6030                           
  6031                           ;actuators_main.c: 527:             LATEbits.LATE0 = 1;
  6032  001886  808D               	bsf	3981,0,c	;volatile
  6033                           
  6034                           ;actuators_main.c: 528:             LATEbits.LATE1 = 0;
  6035  001888  928D               	bcf	3981,1,c	;volatile
  6036                           
  6037                           ;actuators_main.c: 529:             LATEbits.LATE2 = 0;
  6038  00188A  948D               	bcf	3981,2,c	;volatile
  6039                           
  6040                           ;actuators_main.c: 530:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6041  00188C  0E0D               	movlw	13
  6042  00188E  0100               	movlb	0	; () banked
  6043  001890  6FFD               	movwf	??_full_drive& (0+255),b
  6044  001892  0EFB               	movlw	251
  6045  001894                     u9537:
  6046  001894  2EE8               	decfsz	wreg,f,c
  6047  001896  D7FE               	bra	u9537
  6048  001898  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6049  00189A  D7FC               	bra	u9537
  6050  00189C  D000               	nop2	
  6051  00189E                     l7088:
  6052                           
  6053                           ;actuators_main.c: 532:         if (direction == 0){
  6054  00189E  0100               	movlb	0	; () banked
  6055  0018A0  51FE               	movf	full_drive@direction& (0+255),w,b
  6056  0018A2  A4D8               	btfss	status,2,c
  6057  0018A4  D041               	goto	l7126
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;actuators_main.c: 533:             LATCbits.LATC0 = 1;
  6061  0018A6  808B               	bsf	3979,0,c	;volatile
  6062                           
  6063                           ;actuators_main.c: 534:             LATEbits.LATE0 = 0;
  6064  0018A8  908D               	bcf	3981,0,c	;volatile
  6065                           
  6066                           ;actuators_main.c: 535:             LATEbits.LATE1 = 0;
  6067  0018AA  928D               	bcf	3981,1,c	;volatile
  6068                           
  6069                           ;actuators_main.c: 536:             LATEbits.LATE2 = 1;
  6070  0018AC  848D               	bsf	3981,2,c	;volatile
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;actuators_main.c: 537:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6074  0018AE  0E0D               	movlw	13
  6075  0018B0  0100               	movlb	0	; () banked
  6076  0018B2  6FFD               	movwf	??_full_drive& (0+255),b
  6077  0018B4  0EFB               	movlw	251
  6078  0018B6                     u9547:
  6079  0018B6  2EE8               	decfsz	wreg,f,c
  6080  0018B8  D7FE               	bra	u9547
  6081  0018BA  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6082  0018BC  D7FC               	bra	u9547
  6083  0018BE  D000               	nop2	
  6084                           
  6085                           ;actuators_main.c: 538:             LATCbits.LATC0 = 0;
  6086  0018C0  908B               	bcf	3979,0,c	;volatile
  6087                           
  6088                           ;actuators_main.c: 539:             LATEbits.LATE0 = 0;
  6089  0018C2  908D               	bcf	3981,0,c	;volatile
  6090                           
  6091                           ;actuators_main.c: 540:             LATEbits.LATE1 = 1;
  6092  0018C4  828D               	bsf	3981,1,c	;volatile
  6093                           
  6094                           ;actuators_main.c: 541:             LATEbits.LATE2 = 1;
  6095  0018C6  848D               	bsf	3981,2,c	;volatile
  6096                           
  6097                           ;actuators_main.c: 542:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6098  0018C8  0E0D               	movlw	13
  6099  0018CA  0100               	movlb	0	; () banked
  6100  0018CC  6FFD               	movwf	??_full_drive& (0+255),b
  6101  0018CE  0EFB               	movlw	251
  6102  0018D0                     u9557:
  6103  0018D0  2EE8               	decfsz	wreg,f,c
  6104  0018D2  D7FE               	bra	u9557
  6105  0018D4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6106  0018D6  D7FC               	bra	u9557
  6107  0018D8  D000               	nop2	
  6108                           
  6109                           ;actuators_main.c: 543:             LATCbits.LATC0 = 0;
  6110  0018DA  908B               	bcf	3979,0,c	;volatile
  6111                           
  6112                           ;actuators_main.c: 544:             LATEbits.LATE0 = 1;
  6113  0018DC  808D               	bsf	3981,0,c	;volatile
  6114                           
  6115                           ;actuators_main.c: 545:             LATEbits.LATE1 = 1;
  6116  0018DE  828D               	bsf	3981,1,c	;volatile
  6117                           
  6118                           ;actuators_main.c: 546:             LATEbits.LATE2 = 0;
  6119  0018E0  948D               	bcf	3981,2,c	;volatile
  6120                           
  6121                           ;actuators_main.c: 547:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6122  0018E2  0E0D               	movlw	13
  6123  0018E4  0100               	movlb	0	; () banked
  6124  0018E6  6FFD               	movwf	??_full_drive& (0+255),b
  6125  0018E8  0EFB               	movlw	251
  6126  0018EA                     u9567:
  6127  0018EA  2EE8               	decfsz	wreg,f,c
  6128  0018EC  D7FE               	bra	u9567
  6129  0018EE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6130  0018F0  D7FC               	bra	u9567
  6131  0018F2  D000               	nop2	
  6132                           
  6133                           ;actuators_main.c: 548:             LATCbits.LATC0 = 1;
  6134  0018F4  808B               	bsf	3979,0,c	;volatile
  6135                           
  6136                           ;actuators_main.c: 549:             LATEbits.LATE0 = 1;
  6137  0018F6  808D               	bsf	3981,0,c	;volatile
  6138                           
  6139                           ;actuators_main.c: 550:             LATEbits.LATE1 = 0;
  6140  0018F8  928D               	bcf	3981,1,c	;volatile
  6141                           
  6142                           ;actuators_main.c: 551:             LATEbits.LATE2 = 0;
  6143  0018FA  948D               	bcf	3981,2,c	;volatile
  6144                           
  6145                           ;actuators_main.c: 552:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6146  0018FC  0E0D               	movlw	13
  6147  0018FE  0100               	movlb	0	; () banked
  6148  001900  6FFD               	movwf	??_full_drive& (0+255),b
  6149  001902  0EFB               	movlw	251
  6150  001904                     u9577:
  6151  001904  2EE8               	decfsz	wreg,f,c
  6152  001906  D7FE               	bra	u9577
  6153  001908  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6154  00190A  D7FC               	bra	u9577
  6155  00190C  D000               	nop2	
  6156                           
  6157                           ;actuators_main.c: 553:             LATCbits.LATC0 = 1;
  6158  00190E  808B               	bsf	3979,0,c	;volatile
  6159                           
  6160                           ;actuators_main.c: 554:             LATEbits.LATE0 = 0;
  6161  001910  908D               	bcf	3981,0,c	;volatile
  6162                           
  6163                           ;actuators_main.c: 555:             LATEbits.LATE1 = 0;
  6164  001912  928D               	bcf	3981,1,c	;volatile
  6165                           
  6166                           ;actuators_main.c: 556:             LATEbits.LATE2 = 1;
  6167  001914  848D               	bsf	3981,2,c	;volatile
  6168                           
  6169                           ;actuators_main.c: 557:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6170  001916  0E0D               	movlw	13
  6171  001918  0100               	movlb	0	; () banked
  6172  00191A  6FFD               	movwf	??_full_drive& (0+255),b
  6173  00191C  0EFB               	movlw	251
  6174  00191E                     u9587:
  6175  00191E  2EE8               	decfsz	wreg,f,c
  6176  001920  D7FE               	bra	u9587
  6177  001922  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6178  001924  D7FC               	bra	u9587
  6179  001926  D000               	nop2	
  6180  001928                     l7126:
  6181                           
  6182                           ;actuators_main.c: 560:     if (stepper_no == 3){
  6183  001928  0E03               	movlw	3
  6184  00192A  0100               	movlb	0	; () banked
  6185  00192C  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6186  00192E  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6187  001930  A4D8               	btfss	status,2,c
  6188  001932  D086               	goto	l7206
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;actuators_main.c: 561:         printf("what");
  6192  001934  0EFA               	movlw	low STR_9
  6193  001936  6FED               	movwf	printf@fmt& (0+255),b
  6194  001938  0EFF               	movlw	high STR_9
  6195  00193A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6196  00193C  EC7A  F01E         	call	_printf	;wreg free
  6197                           
  6198                           ;actuators_main.c: 562:         if (direction == 0){
  6199  001940  0100               	movlb	0	; () banked
  6200  001942  51FE               	movf	full_drive@direction& (0+255),w,b
  6201  001944  A4D8               	btfss	status,2,c
  6202  001946  D03C               	goto	l7168
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;actuators_main.c: 563:             LATCbits.LATC5 = 1;
  6206  001948  8A8B               	bsf	3979,5,c	;volatile
  6207                           
  6208                           ;actuators_main.c: 564:             LATCbits.LATC6 = 0;
  6209  00194A  9C8B               	bcf	3979,6,c	;volatile
  6210                           
  6211                           ;actuators_main.c: 565:             LATCbits.LATC7 = 0;
  6212  00194C  9E8B               	bcf	3979,7,c	;volatile
  6213                           
  6214                           ;actuators_main.c: 566:             LATAbits.LATA5 = 1;
  6215  00194E  8A89               	bsf	3977,5,c	;volatile
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;actuators_main.c: 567:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6219  001950  0E1E               	movlw	30
  6220  001952  0100               	movlb	0	; () banked
  6221  001954  6FFD               	movwf	??_full_drive& (0+255),b
  6222  001956  0E37               	movlw	55
  6223  001958                     u9597:
  6224  001958  2EE8               	decfsz	wreg,f,c
  6225  00195A  D7FE               	bra	u9597
  6226  00195C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6227  00195E  D7FC               	bra	u9597
  6228                           
  6229                           ;actuators_main.c: 568:             LATCbits.LATC5 = 1;
  6230  001960  8A8B               	bsf	3979,5,c	;volatile
  6231                           
  6232                           ;actuators_main.c: 569:             LATCbits.LATC6 = 1;
  6233  001962  8C8B               	bsf	3979,6,c	;volatile
  6234                           
  6235                           ;actuators_main.c: 570:             LATCbits.LATC7 = 0;
  6236  001964  9E8B               	bcf	3979,7,c	;volatile
  6237                           
  6238                           ;actuators_main.c: 571:             LATAbits.LATA5 = 0;
  6239  001966  9A89               	bcf	3977,5,c	;volatile
  6240                           
  6241                           ;actuators_main.c: 572:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6242  001968  0E1E               	movlw	30
  6243  00196A  0100               	movlb	0	; () banked
  6244  00196C  6FFD               	movwf	??_full_drive& (0+255),b
  6245  00196E  0E37               	movlw	55
  6246  001970                     u9607:
  6247  001970  2EE8               	decfsz	wreg,f,c
  6248  001972  D7FE               	bra	u9607
  6249  001974  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6250  001976  D7FC               	bra	u9607
  6251                           
  6252                           ;actuators_main.c: 573:             LATCbits.LATC5 = 0;
  6253  001978  9A8B               	bcf	3979,5,c	;volatile
  6254                           
  6255                           ;actuators_main.c: 574:             LATCbits.LATC6 = 1;
  6256  00197A  8C8B               	bsf	3979,6,c	;volatile
  6257                           
  6258                           ;actuators_main.c: 575:             LATCbits.LATC7 = 1;
  6259  00197C  8E8B               	bsf	3979,7,c	;volatile
  6260                           
  6261                           ;actuators_main.c: 576:             LATAbits.LATA5 = 0;
  6262  00197E  9A89               	bcf	3977,5,c	;volatile
  6263                           
  6264                           ;actuators_main.c: 577:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6265  001980  0E1E               	movlw	30
  6266  001982  0100               	movlb	0	; () banked
  6267  001984  6FFD               	movwf	??_full_drive& (0+255),b
  6268  001986  0E37               	movlw	55
  6269  001988                     u9617:
  6270  001988  2EE8               	decfsz	wreg,f,c
  6271  00198A  D7FE               	bra	u9617
  6272  00198C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6273  00198E  D7FC               	bra	u9617
  6274                           
  6275                           ;actuators_main.c: 578:             LATCbits.LATC5 = 0;
  6276  001990  9A8B               	bcf	3979,5,c	;volatile
  6277                           
  6278                           ;actuators_main.c: 579:             LATCbits.LATC6 = 0;
  6279  001992  9C8B               	bcf	3979,6,c	;volatile
  6280                           
  6281                           ;actuators_main.c: 580:             LATCbits.LATC7 = 1;
  6282  001994  8E8B               	bsf	3979,7,c	;volatile
  6283                           
  6284                           ;actuators_main.c: 581:             LATAbits.LATA5 = 1;
  6285  001996  8A89               	bsf	3977,5,c	;volatile
  6286                           
  6287                           ;actuators_main.c: 582:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6288  001998  0E1E               	movlw	30
  6289  00199A  0100               	movlb	0	; () banked
  6290  00199C  6FFD               	movwf	??_full_drive& (0+255),b
  6291  00199E  0E37               	movlw	55
  6292  0019A0                     u9627:
  6293  0019A0  2EE8               	decfsz	wreg,f,c
  6294  0019A2  D7FE               	bra	u9627
  6295  0019A4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6296  0019A6  D7FC               	bra	u9627
  6297                           
  6298                           ;actuators_main.c: 583:             LATCbits.LATC5 = 1;
  6299  0019A8  8A8B               	bsf	3979,5,c	;volatile
  6300                           
  6301                           ;actuators_main.c: 584:             LATCbits.LATC6 = 0;
  6302  0019AA  9C8B               	bcf	3979,6,c	;volatile
  6303                           
  6304                           ;actuators_main.c: 585:             LATCbits.LATC7 = 0;
  6305  0019AC  9E8B               	bcf	3979,7,c	;volatile
  6306                           
  6307                           ;actuators_main.c: 586:             LATAbits.LATA5 = 1;
  6308  0019AE  8A89               	bsf	3977,5,c	;volatile
  6309                           
  6310                           ;actuators_main.c: 587:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6311  0019B0  0E1E               	movlw	30
  6312  0019B2  0100               	movlb	0	; () banked
  6313  0019B4  6FFD               	movwf	??_full_drive& (0+255),b
  6314  0019B6  0E37               	movlw	55
  6315  0019B8                     u9637:
  6316  0019B8  2EE8               	decfsz	wreg,f,c
  6317  0019BA  D7FE               	bra	u9637
  6318  0019BC  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6319  0019BE  D7FC               	bra	u9637
  6320  0019C0                     l7168:
  6321                           
  6322                           ;actuators_main.c: 589:         if (direction == 1){
  6323  0019C0  0100               	movlb	0	; () banked
  6324  0019C2  05FE               	decf	full_drive@direction& (0+255),w,b
  6325  0019C4  A4D8               	btfss	status,2,c
  6326  0019C6  D03C               	goto	l7206
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;actuators_main.c: 590:             LATCbits.LATC5 = 1;
  6330  0019C8  8A8B               	bsf	3979,5,c	;volatile
  6331                           
  6332                           ;actuators_main.c: 591:             LATCbits.LATC6 = 1;
  6333  0019CA  8C8B               	bsf	3979,6,c	;volatile
  6334                           
  6335                           ;actuators_main.c: 592:             LATCbits.LATC7 = 0;
  6336  0019CC  9E8B               	bcf	3979,7,c	;volatile
  6337                           
  6338                           ;actuators_main.c: 593:             LATAbits.LATA5 = 0;
  6339  0019CE  9A89               	bcf	3977,5,c	;volatile
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;actuators_main.c: 594:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6343  0019D0  0E1E               	movlw	30
  6344  0019D2  0100               	movlb	0	; () banked
  6345  0019D4  6FFD               	movwf	??_full_drive& (0+255),b
  6346  0019D6  0E37               	movlw	55
  6347  0019D8                     u9647:
  6348  0019D8  2EE8               	decfsz	wreg,f,c
  6349  0019DA  D7FE               	bra	u9647
  6350  0019DC  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6351  0019DE  D7FC               	bra	u9647
  6352                           
  6353                           ;actuators_main.c: 595:             LATCbits.LATC5 = 0;
  6354  0019E0  9A8B               	bcf	3979,5,c	;volatile
  6355                           
  6356                           ;actuators_main.c: 596:             LATCbits.LATC6 = 1;
  6357  0019E2  8C8B               	bsf	3979,6,c	;volatile
  6358                           
  6359                           ;actuators_main.c: 597:             LATCbits.LATC7 = 1;
  6360  0019E4  8E8B               	bsf	3979,7,c	;volatile
  6361                           
  6362                           ;actuators_main.c: 598:             LATAbits.LATA5 = 0;
  6363  0019E6  9A89               	bcf	3977,5,c	;volatile
  6364                           
  6365                           ;actuators_main.c: 599:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6366  0019E8  0E1E               	movlw	30
  6367  0019EA  0100               	movlb	0	; () banked
  6368  0019EC  6FFD               	movwf	??_full_drive& (0+255),b
  6369  0019EE  0E37               	movlw	55
  6370  0019F0                     u9657:
  6371  0019F0  2EE8               	decfsz	wreg,f,c
  6372  0019F2  D7FE               	bra	u9657
  6373  0019F4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6374  0019F6  D7FC               	bra	u9657
  6375                           
  6376                           ;actuators_main.c: 600:             LATCbits.LATC5 = 0;
  6377  0019F8  9A8B               	bcf	3979,5,c	;volatile
  6378                           
  6379                           ;actuators_main.c: 601:             LATCbits.LATC6 = 0;
  6380  0019FA  9C8B               	bcf	3979,6,c	;volatile
  6381                           
  6382                           ;actuators_main.c: 602:             LATCbits.LATC7 = 1;
  6383  0019FC  8E8B               	bsf	3979,7,c	;volatile
  6384                           
  6385                           ;actuators_main.c: 603:             LATAbits.LATA5 = 1;
  6386  0019FE  8A89               	bsf	3977,5,c	;volatile
  6387                           
  6388                           ;actuators_main.c: 604:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6389  001A00  0E1E               	movlw	30
  6390  001A02  0100               	movlb	0	; () banked
  6391  001A04  6FFD               	movwf	??_full_drive& (0+255),b
  6392  001A06  0E37               	movlw	55
  6393  001A08                     u9667:
  6394  001A08  2EE8               	decfsz	wreg,f,c
  6395  001A0A  D7FE               	bra	u9667
  6396  001A0C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6397  001A0E  D7FC               	bra	u9667
  6398                           
  6399                           ;actuators_main.c: 605:             LATCbits.LATC5 = 1;
  6400  001A10  8A8B               	bsf	3979,5,c	;volatile
  6401                           
  6402                           ;actuators_main.c: 606:             LATCbits.LATC6 = 0;
  6403  001A12  9C8B               	bcf	3979,6,c	;volatile
  6404                           
  6405                           ;actuators_main.c: 607:             LATCbits.LATC7 = 0;
  6406  001A14  9E8B               	bcf	3979,7,c	;volatile
  6407                           
  6408                           ;actuators_main.c: 608:             LATAbits.LATA5 = 1;
  6409  001A16  8A89               	bsf	3977,5,c	;volatile
  6410                           
  6411                           ;actuators_main.c: 609:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6412  001A18  0E1E               	movlw	30
  6413  001A1A  0100               	movlb	0	; () banked
  6414  001A1C  6FFD               	movwf	??_full_drive& (0+255),b
  6415  001A1E  0E37               	movlw	55
  6416  001A20                     u9677:
  6417  001A20  2EE8               	decfsz	wreg,f,c
  6418  001A22  D7FE               	bra	u9677
  6419  001A24  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6420  001A26  D7FC               	bra	u9677
  6421                           
  6422                           ;actuators_main.c: 610:             LATCbits.LATC5 = 1;
  6423  001A28  8A8B               	bsf	3979,5,c	;volatile
  6424                           
  6425                           ;actuators_main.c: 611:             LATCbits.LATC6 = 1;
  6426  001A2A  8C8B               	bsf	3979,6,c	;volatile
  6427                           
  6428                           ;actuators_main.c: 612:             LATCbits.LATC7 = 0;
  6429  001A2C  9E8B               	bcf	3979,7,c	;volatile
  6430                           
  6431                           ;actuators_main.c: 613:             LATAbits.LATA5 = 0;
  6432  001A2E  9A89               	bcf	3977,5,c	;volatile
  6433                           
  6434                           ;actuators_main.c: 614:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6435  001A30  0E1E               	movlw	30
  6436  001A32  0100               	movlb	0	; () banked
  6437  001A34  6FFD               	movwf	??_full_drive& (0+255),b
  6438  001A36  0E37               	movlw	55
  6439  001A38                     u9687:
  6440  001A38  2EE8               	decfsz	wreg,f,c
  6441  001A3A  D7FE               	bra	u9687
  6442  001A3C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6443  001A3E  D7FC               	bra	u9687
  6444  001A40                     l7206:
  6445                           
  6446                           ;actuators_main.c: 617:                     LATA = 0b00000000;
  6447  001A40  0E00               	movlw	0
  6448  001A42  6E89               	movwf	3977,c	;volatile
  6449                           
  6450                           ;actuators_main.c: 618:         LATCbits.LATC0 = 0;
  6451  001A44  908B               	bcf	3979,0,c	;volatile
  6452                           
  6453                           ;actuators_main.c: 619:         LATEbits.LATE0 = 0;
  6454  001A46  908D               	bcf	3981,0,c	;volatile
  6455                           
  6456                           ;actuators_main.c: 620:         LATEbits.LATE1 = 0;
  6457  001A48  928D               	bcf	3981,1,c	;volatile
  6458                           
  6459                           ;actuators_main.c: 621:         LATEbits.LATE2 = 0;
  6460  001A4A  948D               	bcf	3981,2,c	;volatile
  6461                           
  6462                           ;actuators_main.c: 622:         LATCbits.LATC5 = 0;
  6463  001A4C  9A8B               	bcf	3979,5,c	;volatile
  6464                           
  6465                           ;actuators_main.c: 623:         LATCbits.LATC6 = 0;
  6466  001A4E  9C8B               	bcf	3979,6,c	;volatile
  6467                           
  6468                           ;actuators_main.c: 624:         LATCbits.LATC7 = 0;
  6469  001A50  9E8B               	bcf	3979,7,c	;volatile
  6470                           
  6471                           ;actuators_main.c: 625:         LATAbits.LATA5 = 0;
  6472  001A52  9A89               	bcf	3977,5,c	;volatile
  6473  001A54  0012               	return		;funcret
  6474  001A56                     __end_of_full_drive:
  6475                           	opt callstack 0
  6476                           
  6477 ;; *************** function _servo *****************
  6478 ;; Defined at:
  6479 ;;		line 186 in file "actuators_main.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1    wreg      void 
  6486 ;; Registers used:
  6487 ;;		wreg, status,2, status,0, cstack
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;Total ram usage:        2 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:    4
  6500 ;; This function calls:
  6501 ;;		_servoRotate0
  6502 ;;		_servoRotate180
  6503 ;; This function is called by:
  6504 ;;		_actuators_main
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text16
  6509  0032E2                     __ptext16:
  6510                           	opt callstack 0
  6511  0032E2                     _servo:
  6512                           	opt callstack 25
  6513                           
  6514                           ;actuators_main.c: 188:   TRISC = 0;
  6515                           
  6516                           ;incstack = 0
  6517  0032E2  0E00               	movlw	0
  6518  0032E4  6E94               	movwf	3988,c	;volatile
  6519                           
  6520                           ;actuators_main.c: 189:   {;actuators_main.c: 191:     servoRotate0(1);
  6521  0032E6  0E00               	movlw	0
  6522  0032E8  0100               	movlb	0	; () banked
  6523  0032EA  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6524  0032EC  0E01               	movlw	1
  6525  0032EE  6F80               	movwf	servoRotate0@servo& (0+255),b
  6526  0032F0  EC9E  F018         	call	_servoRotate0	;wreg free
  6527                           
  6528                           ;actuators_main.c: 195:     servoRotate180(1);
  6529  0032F4  0E00               	movlw	0
  6530  0032F6  0100               	movlb	0	; () banked
  6531  0032F8  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6532  0032FA  0E01               	movlw	1
  6533  0032FC  6F80               	movwf	servoRotate180@servo& (0+255),b
  6534  0032FE  EC27  F018         	call	_servoRotate180	;wreg free
  6535                           
  6536                           ;actuators_main.c: 196:     _delay((unsigned long)((450)*(10000000/4000.0)));
  6537  003302  0E06               	movlw	6
  6538  003304  0100               	movlb	0	; () banked
  6539  003306  6F86               	movwf	(??_servo+1)& (0+255),b
  6540  003308  0EB6               	movlw	182
  6541  00330A  6F85               	movwf	??_servo& (0+255),b
  6542  00330C  0E03               	movlw	3
  6543  00330E                     u9697:
  6544  00330E  2EE8               	decfsz	wreg,f,c
  6545  003310  D7FE               	bra	u9697
  6546  003312  2F85               	decfsz	??_servo& (0+255),f,b
  6547  003314  D7FC               	bra	u9697
  6548  003316  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  6549  003318  D7FA               	bra	u9697
  6550  00331A  D000               	nop2	
  6551                           
  6552                           ;actuators_main.c: 197:     servoRotate0(1);
  6553  00331C  0E00               	movlw	0
  6554  00331E  0100               	movlb	0	; () banked
  6555  003320  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6556  003322  0E01               	movlw	1
  6557  003324  6F80               	movwf	servoRotate0@servo& (0+255),b
  6558  003326  EC9E  F018         	call	_servoRotate0	;wreg free
  6559                           
  6560                           ;actuators_main.c: 199:     servoRotate180(2);
  6561  00332A  0E00               	movlw	0
  6562  00332C  0100               	movlb	0	; () banked
  6563  00332E  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6564  003330  0E02               	movlw	2
  6565  003332  6F80               	movwf	servoRotate180@servo& (0+255),b
  6566  003334  EC27  F018         	call	_servoRotate180	;wreg free
  6567                           
  6568                           ;actuators_main.c: 200:     servoRotate0(2);
  6569  003338  0E00               	movlw	0
  6570  00333A  0100               	movlb	0	; () banked
  6571  00333C  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6572  00333E  0E02               	movlw	2
  6573  003340  6F80               	movwf	servoRotate0@servo& (0+255),b
  6574  003342  EC9E  F018         	call	_servoRotate0	;wreg free
  6575                           
  6576                           ;actuators_main.c: 201:     servoRotate180(2);
  6577  003346  0E00               	movlw	0
  6578  003348  0100               	movlb	0	; () banked
  6579  00334A  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6580  00334C  0E02               	movlw	2
  6581  00334E  6F80               	movwf	servoRotate180@servo& (0+255),b
  6582  003350  EC27  F018         	call	_servoRotate180	;wreg free
  6583                           
  6584                           ;actuators_main.c: 203:     _delay((unsigned long)((100)*(10000000/4000.0)));
  6585  003354  0E02               	movlw	2
  6586  003356  0100               	movlb	0	; () banked
  6587  003358  6F86               	movwf	(??_servo+1)& (0+255),b
  6588  00335A  0E45               	movlw	69
  6589  00335C  6F85               	movwf	??_servo& (0+255),b
  6590  00335E  0EA9               	movlw	169
  6591  003360                     u9707:
  6592  003360  2EE8               	decfsz	wreg,f,c
  6593  003362  D7FE               	bra	u9707
  6594  003364  2F85               	decfsz	??_servo& (0+255),f,b
  6595  003366  D7FC               	bra	u9707
  6596  003368  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  6597  00336A  D7FA               	bra	u9707
  6598  00336C  D000               	nop2	
  6599                           
  6600                           ;actuators_main.c: 204:         servoRotate0(3);
  6601  00336E  0E00               	movlw	0
  6602  003370  0100               	movlb	0	; () banked
  6603  003372  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6604  003374  0E03               	movlw	3
  6605  003376  6F80               	movwf	servoRotate0@servo& (0+255),b
  6606  003378  EC9E  F018         	call	_servoRotate0	;wreg free
  6607                           
  6608                           ;actuators_main.c: 205:     servoRotate0(3);
  6609  00337C  0E00               	movlw	0
  6610  00337E  0100               	movlb	0	; () banked
  6611  003380  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6612  003382  0E03               	movlw	3
  6613  003384  6F80               	movwf	servoRotate0@servo& (0+255),b
  6614  003386  EC9E  F018         	call	_servoRotate0	;wreg free
  6615                           
  6616                           ;actuators_main.c: 206:     servoRotate180(3);
  6617  00338A  0E00               	movlw	0
  6618  00338C  0100               	movlb	0	; () banked
  6619  00338E  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6620  003390  0E03               	movlw	3
  6621  003392  6F80               	movwf	servoRotate180@servo& (0+255),b
  6622  003394  EC27  F018         	call	_servoRotate180	;wreg free
  6623  003398  0012               	return		;funcret
  6624  00339A                     __end_of_servo:
  6625                           	opt callstack 0
  6626                           
  6627 ;; *************** function _servoRotate180 *****************
  6628 ;; Defined at:
  6629 ;;		line 140 in file "actuators_main.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  servo           2    0[BANK0 ] int 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  i               2    3[BANK0 ] unsigned int 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      void 
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;Total ram usage:        5 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    3
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_servo
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text17
  6658  00304E                     __ptext17:
  6659                           	opt callstack 0
  6660  00304E                     _servoRotate180:
  6661                           	opt callstack 25
  6662                           
  6663                           ;actuators_main.c: 140: void servoRotate180(int servo);actuators_main.c: 141: {;actuator
      +                          s_main.c: 142:   unsigned int i;;actuators_main.c: 143:     if (servo==1){
  6664                           
  6665                           ;incstack = 0
  6666  00304E  0100               	movlb	0	; () banked
  6667  003050  0580               	decf	servoRotate180@servo& (0+255),w,b
  6668  003052  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6669  003054  A4D8               	btfss	status,2,c
  6670  003056  D027               	goto	u7610
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;actuators_main.c: 144:     for(i=0;i<40;i++)
  6674  003058  0E00               	movlw	0
  6675  00305A  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6676  00305C  0E00               	movlw	0
  6677  00305E  6F83               	movwf	servoRotate180@i& (0+255),b
  6678  003060                     l129:
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;actuators_main.c: 145:         {;actuators_main.c: 146:           RC1 = 1;
  6682  003060  8282               	bsf	3970,1,c	;volatile
  6683                           
  6684                           ;actuators_main.c: 147:             RC2 = 1;
  6685  003062  8482               	bsf	3970,2,c	;volatile
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;actuators_main.c: 148:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  6689  003064  0EE1               	movlw	225
  6690  003066                     u9717:
  6691  003066  D000               	nop2	
  6692  003068  2EE8               	decfsz	wreg,f,c
  6693  00306A  D7FD               	bra	u9717
  6694                           
  6695                           ;actuators_main.c: 150:           RC2 =0;
  6696  00306C  9482               	bcf	3970,2,c	;volatile
  6697                           
  6698                           ;actuators_main.c: 151:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6699  00306E  0E07               	movlw	7
  6700  003070  0100               	movlb	0	; () banked
  6701  003072  6F82               	movwf	??_servoRotate180& (0+255),b
  6702  003074  0ED0               	movlw	208
  6703  003076                     u9727:
  6704  003076  2EE8               	decfsz	wreg,f,c
  6705  003078  D7FE               	bra	u9727
  6706  00307A  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6707  00307C  D7FC               	bra	u9727
  6708  00307E  F000               	nop	
  6709                           
  6710                           ;actuators_main.c: 153:           RC1 = 0;
  6711  003080  9282               	bcf	3970,1,c	;volatile
  6712                           
  6713                           ;actuators_main.c: 154:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  6714  003082  0E2C               	movlw	44
  6715  003084  0100               	movlb	0	; () banked
  6716  003086  6F82               	movwf	??_servoRotate180& (0+255),b
  6717  003088  0EFD               	movlw	253
  6718  00308A                     u9737:
  6719  00308A  2EE8               	decfsz	wreg,f,c
  6720  00308C  D7FE               	bra	u9737
  6721  00308E  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6722  003090  D7FC               	bra	u9737
  6723  003092  F000               	nop	
  6724                           
  6725                           ;actuators_main.c: 155:         }
  6726  003094  0100               	movlb	0	; () banked
  6727  003096  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6728  003098  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6729  00309A  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6730  00309C  E104               	bnz	u7610
  6731  00309E  0E28               	movlw	40
  6732  0030A0  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6733  0030A2  A0D8               	btfss	status,0,c
  6734  0030A4  D7DD               	goto	l129
  6735  0030A6                     u7610:
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;actuators_main.c: 157:   if (servo==2){
  6739  0030A6  0E02               	movlw	2
  6740  0030A8  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  6741  0030AA  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6742  0030AC  A4D8               	btfss	status,2,c
  6743  0030AE  D01E               	goto	u7630
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;actuators_main.c: 158:     for(i=0;i<40;i++)
  6747  0030B0  0E00               	movlw	0
  6748  0030B2  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6749  0030B4  0E00               	movlw	0
  6750  0030B6  6F83               	movwf	servoRotate180@i& (0+255),b
  6751  0030B8                     l132:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;actuators_main.c: 159:           {;actuators_main.c: 161:     RD1 = 1;
  6755  0030B8  8283               	bsf	3971,1,c	;volatile
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;actuators_main.c: 164:     _delay((unsigned long)((550)*(10000000/4000000.0)));
  6759  0030BA  0EC4               	movlw	196
  6760  0030BC                     u9747:
  6761  0030BC  D000               	nop2	
  6762  0030BE  D000               	nop2	
  6763  0030C0  2EE8               	decfsz	wreg,f,c
  6764  0030C2  D7FC               	bra	u9747
  6765  0030C4  D000               	nop2	
  6766  0030C6  F000               	nop	
  6767                           
  6768                           ;actuators_main.c: 166:     RD1 = 0;
  6769  0030C8  9283               	bcf	3971,1,c	;volatile
  6770                           
  6771                           ;actuators_main.c: 169:     _delay((unsigned long)((27050)*(10000000/4000000.0)));
  6772  0030CA  0E58               	movlw	88
  6773  0030CC  0100               	movlb	0	; () banked
  6774  0030CE  6F82               	movwf	??_servoRotate180& (0+255),b
  6775  0030D0  0ED2               	movlw	210
  6776  0030D2                     u9757:
  6777  0030D2  2EE8               	decfsz	wreg,f,c
  6778  0030D4  D7FE               	bra	u9757
  6779  0030D6  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6780  0030D8  D7FC               	bra	u9757
  6781                           
  6782                           ;actuators_main.c: 170:           }
  6783  0030DA  0100               	movlb	0	; () banked
  6784  0030DC  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6785  0030DE  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6786  0030E0  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6787  0030E2  E104               	bnz	u7630
  6788  0030E4  0E28               	movlw	40
  6789  0030E6  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6790  0030E8  A0D8               	btfss	status,0,c
  6791  0030EA  D7E6               	goto	l132
  6792  0030EC                     u7630:
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;actuators_main.c: 172:     if (servo==3){
  6796  0030EC  0E03               	movlw	3
  6797  0030EE  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  6798  0030F0  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6799  0030F2  A4D8               	btfss	status,2,c
  6800  0030F4  0012               	return	
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;actuators_main.c: 173:       for(i=0;i<40;i++)
  6804  0030F6  0E00               	movlw	0
  6805  0030F8  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6806  0030FA  0E00               	movlw	0
  6807  0030FC  6F83               	movwf	servoRotate180@i& (0+255),b
  6808  0030FE                     l135:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;actuators_main.c: 174:         {;actuators_main.c: 175:         RD0 = 1;
  6812  0030FE  8083               	bsf	3971,0,c	;volatile
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;actuators_main.c: 177:         _delay((unsigned long)((2500)*(10000000/4000000.0)));
  6816  003100  0E09               	movlw	9
  6817  003102  0100               	movlb	0	; () banked
  6818  003104  6F82               	movwf	??_servoRotate180& (0+255),b
  6819  003106  0E1C               	movlw	28
  6820  003108                     u9767:
  6821  003108  2EE8               	decfsz	wreg,f,c
  6822  00310A  D7FE               	bra	u9767
  6823  00310C  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6824  00310E  D7FC               	bra	u9767
  6825  003110  F000               	nop	
  6826                           
  6827                           ;actuators_main.c: 180:             RD0 = 0;
  6828  003112  9083               	bcf	3971,0,c	;volatile
  6829                           
  6830                           ;actuators_main.c: 182:         _delay((unsigned long)((10500)*(10000000/4000000.0)));
  6831  003114  0E23               	movlw	35
  6832  003116  0100               	movlb	0	; () banked
  6833  003118  6F82               	movwf	??_servoRotate180& (0+255),b
  6834  00311A  0E15               	movlw	21
  6835  00311C                     u9777:
  6836  00311C  2EE8               	decfsz	wreg,f,c
  6837  00311E  D7FE               	bra	u9777
  6838  003120  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6839  003122  D7FC               	bra	u9777
  6840  003124  D000               	nop2	
  6841                           
  6842                           ;actuators_main.c: 183:         }
  6843  003126  0100               	movlb	0	; () banked
  6844  003128  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6845  00312A  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6846  00312C  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6847  00312E  E105               	bnz	u7650
  6848  003130  0E28               	movlw	40
  6849  003132  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6850  003134  B0D8               	btfsc	status,0,c
  6851  003136  0012               	return	
  6852  003138  D7E2               	goto	l135
  6853  00313A                     u7650:
  6854                           
  6855                           ; BSR set to: 0
  6856  00313A  0012               	return		;funcret
  6857  00313C                     __end_of_servoRotate180:
  6858                           	opt callstack 0
  6859                           
  6860 ;; *************** function _servoRotate0 *****************
  6861 ;; Defined at:
  6862 ;;		line 96 in file "actuators_main.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  servo           2    0[BANK0 ] int 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  i               2    3[BANK0 ] unsigned int 
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      void 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;Total ram usage:        5 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    3
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_servo
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text18
  6891  00313C                     __ptext18:
  6892                           	opt callstack 0
  6893  00313C                     _servoRotate0:
  6894                           	opt callstack 25
  6895                           
  6896                           ;actuators_main.c: 97:     unsigned int i;;actuators_main.c: 98:     if (servo==1){
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;incstack = 0
  6900  00313C  0100               	movlb	0	; () banked
  6901  00313E  0580               	decf	servoRotate0@servo& (0+255),w,b
  6902  003140  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  6903  003142  A4D8               	btfss	status,2,c
  6904  003144  D025               	goto	u7550
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;actuators_main.c: 99:       for(i=0;i<40;i++)
  6908  003146  0E00               	movlw	0
  6909  003148  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  6910  00314A  0E00               	movlw	0
  6911  00314C  6F83               	movwf	servoRotate0@i& (0+255),b
  6912  00314E                     l117:
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;actuators_main.c: 100:           {;actuators_main.c: 101:             RC1 = 1;
  6916  00314E  8282               	bsf	3970,1,c	;volatile
  6917                           
  6918                           ;actuators_main.c: 102:             RC2 = 1;
  6919  003150  8482               	bsf	3970,2,c	;volatile
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;actuators_main.c: 103:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  6923  003152  0E04               	movlw	4
  6924  003154  0100               	movlb	0	; () banked
  6925  003156  6F82               	movwf	??_servoRotate0& (0+255),b
  6926  003158  0E91               	movlw	145
  6927  00315A                     u9787:
  6928  00315A  2EE8               	decfsz	wreg,f,c
  6929  00315C  D7FE               	bra	u9787
  6930  00315E  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  6931  003160  D7FC               	bra	u9787
  6932                           
  6933                           ;actuators_main.c: 104:             RC2 = 0;
  6934  003162  9482               	bcf	3970,2,c	;volatile
  6935                           
  6936                           ;actuators_main.c: 105:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  6937  003164  0EFA               	movlw	250
  6938  003166                     u9797:
  6939  003166  2EE8               	decfsz	wreg,f,c
  6940  003168  D7FE               	bra	u9797
  6941                           
  6942                           ;actuators_main.c: 106:             RC1 = 0;
  6943  00316A  9282               	bcf	3970,1,c	;volatile
  6944                           
  6945                           ;actuators_main.c: 110:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  6946  00316C  0E3D               	movlw	61
  6947  00316E  0100               	movlb	0	; () banked
  6948  003170  6F82               	movwf	??_servoRotate0& (0+255),b
  6949  003172  0E62               	movlw	98
  6950  003174                     u9807:
  6951  003174  2EE8               	decfsz	wreg,f,c
  6952  003176  D7FE               	bra	u9807
  6953  003178  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  6954  00317A  D7FC               	bra	u9807
  6955  00317C  F000               	nop	
  6956                           
  6957                           ;actuators_main.c: 111:           }
  6958  00317E  0100               	movlb	0	; () banked
  6959  003180  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  6960  003182  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  6961  003184  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  6962  003186  E104               	bnz	u7550
  6963  003188  0E28               	movlw	40
  6964  00318A  5D83               	subwf	servoRotate0@i& (0+255),w,b
  6965  00318C  A0D8               	btfss	status,0,c
  6966  00318E  D7DF               	goto	l117
  6967  003190                     u7550:
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;actuators_main.c: 113:     if (servo==2){
  6971  003190  0E02               	movlw	2
  6972  003192  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  6973  003194  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  6974  003196  A4D8               	btfss	status,2,c
  6975  003198  D020               	goto	u7570
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;actuators_main.c: 114:       for(i=0;i<40;i++)
  6979  00319A  0E00               	movlw	0
  6980  00319C  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  6981  00319E  0E00               	movlw	0
  6982  0031A0  6F83               	movwf	servoRotate0@i& (0+255),b
  6983  0031A2                     l120:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;actuators_main.c: 115:         {;actuators_main.c: 117:         RD1 = 1;
  6987  0031A2  8283               	bsf	3971,1,c	;volatile
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;actuators_main.c: 120:           _delay((unsigned long)((1000)*(10000000/4000000.0)));
  6991  0031A4  0E04               	movlw	4
  6992  0031A6  0100               	movlb	0	; () banked
  6993  0031A8  6F82               	movwf	??_servoRotate0& (0+255),b
  6994  0031AA  0E3D               	movlw	61
  6995  0031AC                     u9817:
  6996  0031AC  2EE8               	decfsz	wreg,f,c
  6997  0031AE  D7FE               	bra	u9817
  6998  0031B0  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  6999  0031B2  D7FC               	bra	u9817
  7000  0031B4  D000               	nop2	
  7001                           
  7002                           ;actuators_main.c: 122:         RD1 = 0;
  7003  0031B6  9283               	bcf	3971,1,c	;volatile
  7004                           
  7005                           ;actuators_main.c: 125:           _delay((unsigned long)((19000)*(10000000/4000000.0)));
  7006  0031B8  0E3E               	movlw	62
  7007  0031BA  0100               	movlb	0	; () banked
  7008  0031BC  6F82               	movwf	??_servoRotate0& (0+255),b
  7009  0031BE  0EAF               	movlw	175
  7010  0031C0                     u9827:
  7011  0031C0  2EE8               	decfsz	wreg,f,c
  7012  0031C2  D7FE               	bra	u9827
  7013  0031C4  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7014  0031C6  D7FC               	bra	u9827
  7015                           
  7016                           ;actuators_main.c: 126:         }
  7017  0031C8  0100               	movlb	0	; () banked
  7018  0031CA  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7019  0031CC  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7020  0031CE  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7021  0031D0  E104               	bnz	u7570
  7022  0031D2  0E28               	movlw	40
  7023  0031D4  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7024  0031D6  A0D8               	btfss	status,0,c
  7025  0031D8  D7E4               	goto	l120
  7026  0031DA                     u7570:
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;actuators_main.c: 128:     if (servo==3){
  7030  0031DA  0E03               	movlw	3
  7031  0031DC  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7032  0031DE  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7033  0031E0  A4D8               	btfss	status,2,c
  7034  0031E2  0012               	return	
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;actuators_main.c: 129:       for(i=0;i<40;i++)
  7038  0031E4  0E00               	movlw	0
  7039  0031E6  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7040  0031E8  0E00               	movlw	0
  7041  0031EA  6F83               	movwf	servoRotate0@i& (0+255),b
  7042  0031EC                     l123:
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;actuators_main.c: 130:         {;actuators_main.c: 131:         RD0 = 1;
  7046  0031EC  8083               	bsf	3971,0,c	;volatile
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;actuators_main.c: 132:         _delay((unsigned long)((2000)*(10000000/4000000.0)));
  7050  0031EE  0E07               	movlw	7
  7051  0031F0  0100               	movlb	0	; () banked
  7052  0031F2  6F82               	movwf	??_servoRotate0& (0+255),b
  7053  0031F4  0E7D               	movlw	125
  7054  0031F6                     u9837:
  7055  0031F6  2EE8               	decfsz	wreg,f,c
  7056  0031F8  D7FE               	bra	u9837
  7057  0031FA  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7058  0031FC  D7FC               	bra	u9837
  7059                           
  7060                           ;actuators_main.c: 135:         RD0 = 0;
  7061  0031FE  9083               	bcf	3971,0,c	;volatile
  7062                           
  7063                           ;actuators_main.c: 136:         _delay((unsigned long)((11000)*(10000000/4000000.0)));
  7064  003200  0E24               	movlw	36
  7065  003202  0100               	movlb	0	; () banked
  7066  003204  6F82               	movwf	??_servoRotate0& (0+255),b
  7067  003206  0EB5               	movlw	181
  7068  003208                     u9847:
  7069  003208  2EE8               	decfsz	wreg,f,c
  7070  00320A  D7FE               	bra	u9847
  7071  00320C  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7072  00320E  D7FC               	bra	u9847
  7073  003210  D000               	nop2	
  7074                           
  7075                           ;actuators_main.c: 137:         }
  7076  003212  0100               	movlb	0	; () banked
  7077  003214  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7078  003216  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7079  003218  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7080  00321A  E105               	bnz	u7590
  7081  00321C  0E28               	movlw	40
  7082  00321E  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7083  003220  B0D8               	btfsc	status,0,c
  7084  003222  0012               	return	
  7085  003224  D7E3               	goto	l123
  7086  003226                     u7590:
  7087                           
  7088                           ; BSR set to: 0
  7089  003226  0012               	return		;funcret
  7090  003228                     __end_of_servoRotate0:
  7091                           	opt callstack 0
  7092                           
  7093 ;; *************** function _UI_main *****************
  7094 ;; Defined at:
  7095 ;;		line 482 in file "main.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  t_dep           2  123[BANK0 ] int 
  7098 ;;  poles_detect    2  125[BANK0 ] int 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  i               1   89[BANK1 ] unsigned char 
  7101 ;;  keypress        1   84[BANK1 ] unsigned char 
  7102 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  7103 ;;  tick            4   85[BANK1 ] unsigned long 
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      void 
  7106 ;; Registers used:
  7107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;Total ram usage:       94 bytes
  7118 ;; Hardware stack levels used:    1
  7119 ;; Hardware stack levels required when called:   14
  7120 ;; This function calls:
  7121 ;;		_I2C_Master_Init
  7122 ;;		_I2C_Master_Read
  7123 ;;		_I2C_Master_Start
  7124 ;;		_I2C_Master_Stop
  7125 ;;		_I2C_Master_Write
  7126 ;;		___llmod
  7127 ;;		_initLCD
  7128 ;;		_lcdInst
  7129 ;;		_printf
  7130 ;; This function is called by:
  7131 ;;		_main
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text19
  7136  000012                     __ptext19:
  7137                           	opt callstack 0
  7138  000012                     _UI_main:
  7139                           	opt callstack 16
  7140                           
  7141                           ;main.c: 483:     sens = 0;
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;incstack = 0
  7145  000012  0E00               	movlw	0
  7146  000014  6E59               	movwf	_sens+1,c	;volatile
  7147  000016  0E00               	movlw	0
  7148  000018  6E58               	movwf	_sens,c	;volatile
  7149                           
  7150                           ;main.c: 488:     LATD = 0x00;
  7151  00001A  0E00               	movlw	0
  7152  00001C  6E8C               	movwf	3980,c	;volatile
  7153                           
  7154                           ;main.c: 489:     TRISD = 0x00;
  7155  00001E  0E00               	movlw	0
  7156  000020  6E95               	movwf	3989,c	;volatile
  7157                           
  7158                           ;main.c: 492:     TRISD = 0x00;
  7159  000022  0E00               	movlw	0
  7160  000024  6E95               	movwf	3989,c	;volatile
  7161                           
  7162                           ;main.c: 495:     INT1IE = 1;
  7163  000026  86F0               	bsf	4080,3,c	;volatile
  7164                           
  7165                           ;main.c: 498:     initLCD();
  7166  000028  ECC9  F01B         	call	_initLCD	;wreg free
  7167                           
  7168                           ;main.c: 501:     (INTCONbits.GIE = 1);
  7169  00002C  8EF2               	bsf	4082,7,c	;volatile
  7170                           
  7171                           ;main.c: 503:     I2C_Master_Init(100000);
  7172  00002E  0EA0               	movlw	160
  7173  000030  0100               	movlb	0	; () banked
  7174  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7175  000034  0E86               	movlw	134
  7176  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7177  000038  0E01               	movlw	1
  7178  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7179  00003C  0E00               	movlw	0
  7180  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7181  000040  EC6C  F01C         	call	_I2C_Master_Init	;wreg free
  7182                           
  7183                           ;main.c: 504:     I2C_Master_Start();
  7184  000044  ECF1  F01E         	call	_I2C_Master_Start	;wreg free
  7185                           
  7186                           ;main.c: 505:     I2C_Master_Write(0b00010000);
  7187  000048  0E00               	movlw	0
  7188  00004A  0100               	movlb	0	; () banked
  7189  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7190  00004E  0E10               	movlw	16
  7191  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7192  000052  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  7193                           
  7194                           ;main.c: 506:     I2C_Master_Stop();
  7195  000056  ECED  F01E         	call	_I2C_Master_Stop	;wreg free
  7196                           
  7197                           ;main.c: 516:     if((pressed == 0)&&(sens==0)){
  7198  00005A  0101               	movlb	1	; () banked
  7199  00005C  51D9               	movf	_pressed& (0+255),w,b
  7200  00005E  11DA               	iorwf	(_pressed+1)& (0+255),w,b
  7201  000060  A4D8               	btfss	status,2,c
  7202  000062  D3DC               	goto	u8730
  7203                           
  7204                           ; BSR set to: 1
  7205  000064  5058               	movf	_sens,w,c	;volatile
  7206  000066  1059               	iorwf	_sens+1,w,c	;volatile
  7207  000068  A4D8               	btfss	status,2,c
  7208  00006A  D3D8               	goto	u8730
  7209                           
  7210                           ; BSR set to: 1
  7211                           ;main.c: 517:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7212  00006C  0E01               	movlw	1
  7213  00006E  ECE0  F01E         	call	_lcdInst
  7214  000072  0E11               	movlw	17
  7215  000074  0101               	movlb	1	; () banked
  7216  000076  6F00               	movwf	??_UI_main& (0+255),b
  7217  000078  0E3A               	movlw	58
  7218  00007A                     u9857:
  7219  00007A  2EE8               	decfsz	wreg,f,c
  7220  00007C  D7FE               	bra	u9857
  7221  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  7222  000080  D7FC               	bra	u9857
  7223  000082  F000               	nop	
  7224                           
  7225                           ;main.c: 518:         printf("1 - Start");
  7226  000084  0EC5               	movlw	low STR_23
  7227  000086  0100               	movlb	0	; () banked
  7228  000088  6FED               	movwf	printf@fmt& (0+255),b
  7229  00008A  0EFF               	movlw	high STR_23
  7230  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7231  00008E  EC7A  F01E         	call	_printf	;wreg free
  7232  000092  0EC0               	movlw	192
  7233  000094  ECE0  F01E         	call	_lcdInst
  7234                           
  7235                           ;main.c: 520:         printf("2 - Summary");
  7236  000098  0E47               	movlw	low STR_24
  7237  00009A  0100               	movlb	0	; () banked
  7238  00009C  6FED               	movwf	printf@fmt& (0+255),b
  7239  00009E  0EFF               	movlw	high STR_24
  7240  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7241  0000A2  EC7A  F01E         	call	_printf	;wreg free
  7242  0000A6  0E90               	movlw	144
  7243  0000A8  ECE0  F01E         	call	_lcdInst
  7244                           
  7245                           ;main.c: 522:         printf("3 - Date&Time ");
  7246  0000AC  0E6D               	movlw	low STR_25
  7247  0000AE  0100               	movlb	0	; () banked
  7248  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  7249  0000B2  0EFE               	movlw	high STR_25
  7250  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7251  0000B6  EC7A  F01E         	call	_printf	;wreg free
  7252  0000BA  D3B0               	goto	u8730
  7253  0000BC                     l7910:
  7254                           
  7255                           ;main.c: 533:         if (send){
  7256  0000BC  506D               	movf	_send,w,c
  7257  0000BE  B4D8               	btfsc	status,2,c
  7258  0000C0  D3AD               	goto	u8730
  7259                           
  7260                           ;main.c: 534:         if(key_was_pressed){
  7261  0000C2  0101               	movlb	1	; () banked
  7262  0000C4  51E5               	movf	_key_was_pressed& (0+255),w,b	;volatile
  7263  0000C6  B4D8               	btfsc	status,2,c
  7264  0000C8  D3A9               	goto	u8730
  7265                           
  7266                           ; BSR set to: 1
  7267                           ;main.c: 535:             pressed = 1;
  7268  0000CA  0E00               	movlw	0
  7269  0000CC  6FDA               	movwf	(_pressed+1)& (0+255),b
  7270  0000CE  0E01               	movlw	1
  7271  0000D0  6FD9               	movwf	_pressed& (0+255),b
  7272                           
  7273                           ;main.c: 536:             key_was_pressed = 0;
  7274  0000D2  0E00               	movlw	0
  7275  0000D4  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
  7276                           
  7277                           ; BSR set to: 1
  7278                           ;main.c: 537:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  7279  0000D6  3881               	swapf	3969,w,c	;volatile
  7280  0000D8  0B0F               	andlw	15
  7281  0000DA  0B0F               	andlw	15
  7282  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  7283                           
  7284                           ; BSR set to: 1
  7285                           ;main.c: 538:             temp = keys[keypress];
  7286  0000DE  0E9D               	movlw	low _keys
  7287  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  7288  0000E2  6EF6               	movwf	tblptrl,c
  7289  0000E4  6AF7               	clrf	tblptrh,c
  7290  0000E6  0EFD               	movlw	high _keys
  7291  0000E8  22F7               	addwfc	tblptrh,f,c
  7292  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  7293  0000EA                     	endif
  7294  0000EA  0008               	tblrd		*
  7295  0000EC  CFF5 F0FF          	movff	tablat,_temp
  7296                           
  7297                           ; BSR set to: 1
  7298                           ;main.c: 539:             temp_int = (temp-'0');
  7299  0000F0  0ED0               	movlw	208
  7300  0000F2  0100               	movlb	0	; () banked
  7301  0000F4  25FF               	addwf	_temp& (0+255),w,b
  7302  0000F6  0101               	movlb	1	; () banked
  7303  0000F8  6FE1               	movwf	_temp_int& (0+255),b
  7304  0000FA  6BE2               	clrf	(_temp_int+1)& (0+255),b
  7305  0000FC  0EFF               	movlw	255
  7306  0000FE  23E2               	addwfc	(_temp_int+1)& (0+255),f,b
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;main.c: 541:             if (temp_int == 0){
  7310  000100  51E1               	movf	_temp_int& (0+255),w,b
  7311  000102  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7312  000104  A4D8               	btfss	status,2,c
  7313  000106  D02B               	goto	l7940
  7314                           
  7315                           ; BSR set to: 1
  7316                           ;main.c: 542:                 state = 0;
  7317  000108  0E00               	movlw	0
  7318  00010A  6FE0               	movwf	(_state+1)& (0+255),b
  7319  00010C  0E00               	movlw	0
  7320  00010E  6FDF               	movwf	_state& (0+255),b
  7321                           
  7322                           ; BSR set to: 1
  7323                           ;main.c: 543:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7324  000110  0E01               	movlw	1
  7325  000112  ECE0  F01E         	call	_lcdInst
  7326  000116  0E11               	movlw	17
  7327  000118  0101               	movlb	1	; () banked
  7328  00011A  6F00               	movwf	??_UI_main& (0+255),b
  7329  00011C  0E3A               	movlw	58
  7330  00011E                     u9867:
  7331  00011E  2EE8               	decfsz	wreg,f,c
  7332  000120  D7FE               	bra	u9867
  7333  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  7334  000124  D7FC               	bra	u9867
  7335  000126  F000               	nop	
  7336                           
  7337                           ;main.c: 544:                 printf("1 - Start");
  7338  000128  0EC5               	movlw	low STR_23
  7339  00012A  0100               	movlb	0	; () banked
  7340  00012C  6FED               	movwf	printf@fmt& (0+255),b
  7341  00012E  0EFF               	movlw	high STR_23
  7342  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7343  000132  EC7A  F01E         	call	_printf	;wreg free
  7344  000136  0EC0               	movlw	192
  7345  000138  ECE0  F01E         	call	_lcdInst
  7346                           
  7347                           ;main.c: 546:                 printf("2 - Summary");
  7348  00013C  0E47               	movlw	low STR_24
  7349  00013E  0100               	movlb	0	; () banked
  7350  000140  6FED               	movwf	printf@fmt& (0+255),b
  7351  000142  0EFF               	movlw	high STR_24
  7352  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7353  000146  EC7A  F01E         	call	_printf	;wreg free
  7354  00014A  0E90               	movlw	144
  7355  00014C  ECE0  F01E         	call	_lcdInst
  7356                           
  7357                           ;main.c: 548:                 printf("3 - Date&Time ");
  7358  000150  0E6D               	movlw	low STR_25
  7359  000152  0100               	movlb	0	; () banked
  7360  000154  6FED               	movwf	printf@fmt& (0+255),b
  7361  000156  0EFE               	movlw	high STR_25
  7362  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7363  00015A  EC7A  F01E         	call	_printf	;wreg free
  7364  00015E                     l7940:
  7365                           
  7366                           ;main.c: 551:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  7367  00015E  0101               	movlb	1	; () banked
  7368  000160  05E1               	decf	_temp_int& (0+255),w,b
  7369  000162  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7370  000164  A4D8               	btfss	status,2,c
  7371  000166  D041               	goto	l7968
  7372                           
  7373                           ; BSR set to: 1
  7374  000168  0E2A               	movlw	42
  7375  00016A  0100               	movlb	0	; () banked
  7376  00016C  19FF               	xorwf	_temp& (0+255),w,b
  7377  00016E  B4D8               	btfsc	status,2,c
  7378  000170  D03C               	goto	l7968
  7379                           
  7380                           ; BSR set to: 0
  7381  000172  0E23               	movlw	35
  7382  000174  19FF               	xorwf	_temp& (0+255),w,b
  7383  000176  B4D8               	btfsc	status,2,c
  7384  000178  D038               	goto	l7968
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;main.c: 552:                 state = 0;
  7388  00017A  0E00               	movlw	0
  7389  00017C  0101               	movlb	1	; () banked
  7390  00017E  6FE0               	movwf	(_state+1)& (0+255),b
  7391  000180  0E00               	movlw	0
  7392  000182  6FDF               	movwf	_state& (0+255),b
  7393                           
  7394                           ; BSR set to: 1
  7395                           ;main.c: 553:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7396  000184  0E01               	movlw	1
  7397  000186  ECE0  F01E         	call	_lcdInst
  7398  00018A  0E11               	movlw	17
  7399  00018C  0101               	movlb	1	; () banked
  7400  00018E  6F00               	movwf	??_UI_main& (0+255),b
  7401  000190  0E3A               	movlw	58
  7402  000192                     u9877:
  7403  000192  2EE8               	decfsz	wreg,f,c
  7404  000194  D7FE               	bra	u9877
  7405  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  7406  000198  D7FC               	bra	u9877
  7407  00019A  F000               	nop	
  7408                           
  7409                           ;main.c: 554:                 printf("Machine In Use");
  7410  00019C  0E8B               	movlw	low STR_29
  7411  00019E  0100               	movlb	0	; () banked
  7412  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  7413  0001A2  0EFE               	movlw	high STR_29
  7414  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7415  0001A6  EC7A  F01E         	call	_printf	;wreg free
  7416  0001AA  0ED0               	movlw	208
  7417  0001AC  ECE0  F01E         	call	_lcdInst
  7418                           
  7419                           ;main.c: 556:                 printf("     0-Menu     ");
  7420  0001B0  0EC6               	movlw	low STR_30
  7421  0001B2  0100               	movlb	0	; () banked
  7422  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  7423  0001B6  0EFD               	movlw	high STR_30
  7424  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7425  0001BA  EC7A  F01E         	call	_printf	;wreg free
  7426                           
  7427                           ;main.c: 560:                 I2C_Master_Start();
  7428  0001BE  ECF1  F01E         	call	_I2C_Master_Start	;wreg free
  7429                           
  7430                           ;main.c: 561:                 I2C_Master_Write(0b00010000);
  7431  0001C2  0E00               	movlw	0
  7432  0001C4  0100               	movlb	0	; () banked
  7433  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7434  0001C8  0E10               	movlw	16
  7435  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7436  0001CC  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  7437                           
  7438                           ;main.c: 562:                 I2C_Master_Write('1');
  7439  0001D0  0E00               	movlw	0
  7440  0001D2  0100               	movlb	0	; () banked
  7441  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7442  0001D6  0E31               	movlw	49
  7443  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7444  0001DA  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  7445                           
  7446                           ;main.c: 563:                 I2C_Master_Stop();
  7447  0001DE  ECED  F01E         	call	_I2C_Master_Stop	;wreg free
  7448                           
  7449                           ;main.c: 565:                 sens = 1;
  7450  0001E2  0E00               	movlw	0
  7451  0001E4  6E59               	movwf	_sens+1,c	;volatile
  7452  0001E6  0E01               	movlw	1
  7453  0001E8  6E58               	movwf	_sens,c	;volatile
  7454  0001EA                     l7968:
  7455                           
  7456                           ;main.c: 568:                 if ((temp_int == 2)||(state == 2)){
  7457  0001EA  0E02               	movlw	2
  7458  0001EC  0101               	movlb	1	; () banked
  7459  0001EE  19E1               	xorwf	_temp_int& (0+255),w,b
  7460  0001F0  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7461  0001F2  B4D8               	btfsc	status,2,c
  7462  0001F4  D005               	goto	u8590
  7463                           
  7464                           ; BSR set to: 1
  7465  0001F6  0E02               	movlw	2
  7466  0001F8  19DF               	xorwf	_state& (0+255),w,b
  7467  0001FA  11E0               	iorwf	(_state+1)& (0+255),w,b
  7468  0001FC  A4D8               	btfss	status,2,c
  7469  0001FE  D253               	goto	l8078
  7470  000200                     u8590:
  7471                           
  7472                           ; BSR set to: 1
  7473                           ;main.c: 569:                     if ((temp_int == 2)){
  7474  000200  0E02               	movlw	2
  7475  000202  19E1               	xorwf	_temp_int& (0+255),w,b
  7476  000204  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7477  000206  A4D8               	btfss	status,2,c
  7478  000208  D033               	goto	l7990
  7479                           
  7480                           ; BSR set to: 1
  7481                           ;main.c: 570:                         state = 2;
  7482  00020A  0E00               	movlw	0
  7483  00020C  6FE0               	movwf	(_state+1)& (0+255),b
  7484  00020E  0E02               	movlw	2
  7485  000210  6FDF               	movwf	_state& (0+255),b
  7486                           
  7487                           ;main.c: 571:                         disp = 0;
  7488  000212  0E00               	movlw	0
  7489  000214  6FDE               	movwf	(_disp+1)& (0+255),b
  7490  000216  0E00               	movlw	0
  7491  000218  6FDD               	movwf	_disp& (0+255),b
  7492                           
  7493                           ; BSR set to: 1
  7494                           ;main.c: 572:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7495  00021A  0E01               	movlw	1
  7496  00021C  ECE0  F01E         	call	_lcdInst
  7497  000220  0E11               	movlw	17
  7498  000222  0101               	movlb	1	; () banked
  7499  000224  6F00               	movwf	??_UI_main& (0+255),b
  7500  000226  0E3A               	movlw	58
  7501  000228                     u9887:
  7502  000228  2EE8               	decfsz	wreg,f,c
  7503  00022A  D7FE               	bra	u9887
  7504  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7505  00022E  D7FC               	bra	u9887
  7506  000230  F000               	nop	
  7507                           
  7508                           ;main.c: 573:                         printf("Op Time:");
  7509  000232  0EE3               	movlw	low STR_31
  7510  000234  0100               	movlb	0	; () banked
  7511  000236  6FED               	movwf	printf@fmt& (0+255),b
  7512  000238  0EFF               	movlw	high STR_31
  7513  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7514  00023C  EC7A  F01E         	call	_printf	;wreg free
  7515  000240  0EC0               	movlw	192
  7516  000242  ECE0  F01E         	call	_lcdInst
  7517                           
  7518                           ;main.c: 575:                         printf("%d", cnt);
  7519  000246  0EC3               	movlw	low (STR_59+11)
  7520  000248  0100               	movlb	0	; () banked
  7521  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7522  00024C  0EFE               	movlw	high (STR_59+11)
  7523  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7524  000250  0E00               	movlw	0
  7525  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7526  000254  0E00               	movlw	0
  7527  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7528  000258  EC7A  F01E         	call	_printf	;wreg free
  7529  00025C  0ED0               	movlw	208
  7530  00025E  ECE0  F01E         	call	_lcdInst
  7531                           
  7532                           ;main.c: 577:                         printf("    0-Menu   #>");
  7533  000262  0E0B               	movlw	low (STR_36+1)
  7534  000264  0100               	movlb	0	; () banked
  7535  000266  6FED               	movwf	printf@fmt& (0+255),b
  7536  000268  0EFE               	movlw	high (STR_36+1)
  7537  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7538  00026C  EC7A  F01E         	call	_printf	;wreg free
  7539  000270                     l7990:
  7540                           
  7541                           ;main.c: 579:                     if ((temp == '*') && (disp != 0)){
  7542  000270  0E2A               	movlw	42
  7543  000272  0100               	movlb	0	; () banked
  7544  000274  19FF               	xorwf	_temp& (0+255),w,b
  7545  000276  A4D8               	btfss	status,2,c
  7546  000278  D00B               	goto	l506
  7547                           
  7548                           ; BSR set to: 0
  7549  00027A  0101               	movlb	1	; () banked
  7550  00027C  51DD               	movf	_disp& (0+255),w,b
  7551  00027E  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7552  000280  B4D8               	btfsc	status,2,c
  7553  000282  D006               	goto	l506
  7554                           
  7555                           ; BSR set to: 1
  7556                           ;main.c: 580:                         disp = disp - 1;
  7557  000284  0EFF               	movlw	255
  7558  000286  25DD               	addwf	_disp& (0+255),w,b
  7559  000288  6FDD               	movwf	_disp& (0+255),b
  7560  00028A  0EFF               	movlw	255
  7561  00028C  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7562  00028E  6FDE               	movwf	(_disp+1)& (0+255),b
  7563  000290                     l506:
  7564                           
  7565                           ;main.c: 582:                     if ((temp == '#')&& (disp <12)){
  7566  000290  0E23               	movlw	35
  7567  000292  0100               	movlb	0	; () banked
  7568  000294  19FF               	xorwf	_temp& (0+255),w,b
  7569  000296  A4D8               	btfss	status,2,c
  7570  000298  D00B               	goto	l8000
  7571                           
  7572                           ; BSR set to: 0
  7573  00029A  0101               	movlb	1	; () banked
  7574  00029C  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7575  00029E  D006               	goto	u8640
  7576  0002A0  51DE               	movf	(_disp+1)& (0+255),w,b
  7577  0002A2  E106               	bnz	l8000
  7578  0002A4  0E0C               	movlw	12
  7579  0002A6  5DDD               	subwf	_disp& (0+255),w,b
  7580  0002A8  B0D8               	btfsc	status,0,c
  7581  0002AA  D002               	goto	l8000
  7582  0002AC                     u8640:
  7583                           
  7584                           ; BSR set to: 1
  7585                           ;main.c: 583:                         disp++;
  7586  0002AC  4BDD               	infsnz	_disp& (0+255),f,b
  7587  0002AE  2BDE               	incf	(_disp+1)& (0+255),f,b
  7588  0002B0                     l8000:
  7589                           
  7590                           ;main.c: 585:                     if (disp == 0){
  7591  0002B0  0101               	movlb	1	; () banked
  7592  0002B2  51DD               	movf	_disp& (0+255),w,b
  7593  0002B4  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7594  0002B6  A4D8               	btfss	status,2,c
  7595  0002B8  D02B               	goto	l8016
  7596                           
  7597                           ; BSR set to: 1
  7598                           ;main.c: 586:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7599  0002BA  0E01               	movlw	1
  7600  0002BC  ECE0  F01E         	call	_lcdInst
  7601  0002C0  0E11               	movlw	17
  7602  0002C2  0101               	movlb	1	; () banked
  7603  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7604  0002C6  0E3A               	movlw	58
  7605  0002C8                     u9897:
  7606  0002C8  2EE8               	decfsz	wreg,f,c
  7607  0002CA  D7FE               	bra	u9897
  7608  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7609  0002CE  D7FC               	bra	u9897
  7610  0002D0  F000               	nop	
  7611                           
  7612                           ;main.c: 587:                         printf("Op Time:");
  7613  0002D2  0EE3               	movlw	low STR_31
  7614  0002D4  0100               	movlb	0	; () banked
  7615  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7616  0002D8  0EFF               	movlw	high STR_31
  7617  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7618  0002DC  EC7A  F01E         	call	_printf	;wreg free
  7619  0002E0  0EC0               	movlw	192
  7620  0002E2  ECE0  F01E         	call	_lcdInst
  7621                           
  7622                           ;main.c: 589:                         printf("%d", cnt);
  7623  0002E6  0EC3               	movlw	low (STR_59+11)
  7624  0002E8  0100               	movlb	0	; () banked
  7625  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7626  0002EC  0EFE               	movlw	high (STR_59+11)
  7627  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7628  0002F0  0E00               	movlw	0
  7629  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7630  0002F4  0E00               	movlw	0
  7631  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7632  0002F8  EC7A  F01E         	call	_printf	;wreg free
  7633  0002FC  0ED0               	movlw	208
  7634  0002FE  ECE0  F01E         	call	_lcdInst
  7635                           
  7636                           ;main.c: 591:                         printf("     0-Menu   #>");
  7637  000302  0E0A               	movlw	low STR_36
  7638  000304  0100               	movlb	0	; () banked
  7639  000306  6FED               	movwf	printf@fmt& (0+255),b
  7640  000308  0EFE               	movlw	high STR_36
  7641  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7642  00030C  EC7A  F01E         	call	_printf	;wreg free
  7643  000310                     l8016:
  7644                           
  7645                           ;main.c: 594:                     if (disp == 1){
  7646  000310  0101               	movlb	1	; () banked
  7647  000312  05DD               	decf	_disp& (0+255),w,b
  7648  000314  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7649  000316  A4D8               	btfss	status,2,c
  7650  000318  D02F               	goto	l8032
  7651                           
  7652                           ; BSR set to: 1
  7653                           ;main.c: 595:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7654  00031A  0E01               	movlw	1
  7655  00031C  ECE0  F01E         	call	_lcdInst
  7656  000320  0E11               	movlw	17
  7657  000322  0101               	movlb	1	; () banked
  7658  000324  6F00               	movwf	??_UI_main& (0+255),b
  7659  000326  0E3A               	movlw	58
  7660  000328                     u9907:
  7661  000328  2EE8               	decfsz	wreg,f,c
  7662  00032A  D7FE               	bra	u9907
  7663  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7664  00032E  D7FC               	bra	u9907
  7665  000330  F000               	nop	
  7666                           
  7667                           ;main.c: 596:                         printf("No. Tires: %d",t_dep);
  7668  000332  0ED4               	movlw	low STR_37
  7669  000334  0100               	movlb	0	; () banked
  7670  000336  6FED               	movwf	printf@fmt& (0+255),b
  7671  000338  0EFE               	movlw	high STR_37
  7672  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7673  00033C  C0FB  F0EF         	movff	UI_main@t_dep,?_printf+2
  7674  000340  C0FC  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7675  000344  EC7A  F01E         	call	_printf	;wreg free
  7676  000348  0EC0               	movlw	192
  7677  00034A  ECE0  F01E         	call	_lcdInst
  7678                           
  7679                           ;main.c: 598:                         printf("No. Poles: %d", poles_detected);
  7680  00034E  0EC6               	movlw	low STR_38
  7681  000350  0100               	movlb	0	; () banked
  7682  000352  6FED               	movwf	printf@fmt& (0+255),b
  7683  000354  0EFE               	movlw	high STR_38
  7684  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7685  000358  C0FD  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7686  00035C  C0FE  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7687  000360  EC7A  F01E         	call	_printf	;wreg free
  7688  000364  0ED0               	movlw	208
  7689  000366  ECE0  F01E         	call	_lcdInst
  7690                           
  7691                           ;main.c: 600:                         printf("<*   0-Menu   #>");
  7692  00036A  0E1B               	movlw	low STR_39
  7693  00036C  0100               	movlb	0	; () banked
  7694  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7695  000370  0EFE               	movlw	high STR_39
  7696  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7697  000374  EC7A  F01E         	call	_printf	;wreg free
  7698  000378                     l8032:
  7699                           
  7700                           ;main.c: 603:                     if (disp > 1 && disp <11){
  7701  000378  0101               	movlb	1	; () banked
  7702  00037A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7703  00037C  D0CE               	goto	l8056
  7704  00037E  51DE               	movf	(_disp+1)& (0+255),w,b
  7705  000380  E104               	bnz	u8670
  7706  000382  0E02               	movlw	2
  7707  000384  5DDD               	subwf	_disp& (0+255),w,b
  7708  000386  A0D8               	btfss	status,0,c
  7709  000388  D0C8               	goto	l8056
  7710  00038A                     u8670:
  7711                           
  7712                           ; BSR set to: 1
  7713  00038A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7714  00038C  D006               	goto	u8680
  7715  00038E  51DE               	movf	(_disp+1)& (0+255),w,b
  7716  000390  E103               	bnz	u8681
  7717  000392  0E0B               	movlw	11
  7718  000394  5DDD               	subwf	_disp& (0+255),w,b
  7719  000396  B0D8               	btfsc	status,0,c
  7720  000398                     u8681:
  7721  000398  D0C0               	goto	l8056
  7722  00039A                     u8680:
  7723                           
  7724                           ; BSR set to: 1
  7725                           ;main.c: 604:                         i = disp - 2;
  7726  00039A  0EFE               	movlw	254
  7727  00039C  25DD               	addwf	_disp& (0+255),w,b
  7728  00039E  6FDB               	movwf	_i& (0+255),b
  7729  0003A0  0EFF               	movlw	255
  7730  0003A2  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7731  0003A4  6FDC               	movwf	(_i+1)& (0+255),b
  7732                           
  7733                           ; BSR set to: 1
  7734                           ;main.c: 605:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7735  0003A6  0E01               	movlw	1
  7736  0003A8  ECE0  F01E         	call	_lcdInst
  7737  0003AC  0E11               	movlw	17
  7738  0003AE  0101               	movlb	1	; () banked
  7739  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7740  0003B2  0E3A               	movlw	58
  7741  0003B4                     u9917:
  7742  0003B4  2EE8               	decfsz	wreg,f,c
  7743  0003B6  D7FE               	bra	u9917
  7744  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7745  0003BA  D7FC               	bra	u9917
  7746  0003BC  F000               	nop	
  7747                           
  7748                           ;main.c: 606:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7749  0003BE  0EB4               	movlw	low STR_40
  7750  0003C0  0100               	movlb	0	; () banked
  7751  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7752  0003C4  0EFD               	movlw	high STR_40
  7753  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7754  0003C8  0E01               	movlw	1
  7755  0003CA  0101               	movlb	1	; () banked
  7756  0003CC  25DB               	addwf	_i& (0+255),w,b
  7757  0003CE  0100               	movlb	0	; () banked
  7758  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7759  0003D2  0E00               	movlw	0
  7760  0003D4  0101               	movlb	1	; () banked
  7761  0003D6  21DC               	addwfc	(_i+1)& (0+255),w,b
  7762  0003D8  0100               	movlb	0	; () banked
  7763  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7764  0003DC  C1DB  F100         	movff	_i,??_UI_main
  7765  0003E0  C1DC  F101         	movff	_i+1,??_UI_main+1
  7766  0003E4  0101               	movlb	1	; () banked
  7767  0003E6  90D8               	bcf	status,0,c
  7768  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7769  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7770  0003EC  90D8               	bcf	status,0,c
  7771  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7772  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7773  0003F2  90D8               	bcf	status,0,c
  7774  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7775  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7776  0003F8  0E04               	movlw	low UI_main@Pole
  7777  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7778  0003FC  6ED9               	movwf	fsr2l,c
  7779  0003FE  0E01               	movlw	high UI_main@Pole
  7780  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7781  000402  6EDA               	movwf	fsr2h,c
  7782  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7783  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7784  00040C  C1DB  F102         	movff	_i,??_UI_main+2
  7785  000410  C1DC  F103         	movff	_i+1,??_UI_main+3
  7786  000414  90D8               	bcf	status,0,c
  7787  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7788  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7789  00041A  90D8               	bcf	status,0,c
  7790  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7791  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7792  000420  90D8               	bcf	status,0,c
  7793  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7794  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7795  000426  0E02               	movlw	2
  7796  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7797  00042A  0E00               	movlw	0
  7798  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7799  00042E  0E04               	movlw	low UI_main@Pole
  7800  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7801  000432  6ED9               	movwf	fsr2l,c
  7802  000434  0E01               	movlw	high UI_main@Pole
  7803  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7804  000438  6EDA               	movwf	fsr2h,c
  7805  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  7806  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  7807  000442  EC7A  F01E         	call	_printf	;wreg free
  7808  000446  0EC0               	movlw	192
  7809  000448  ECE0  F01E         	call	_lcdInst
  7810                           
  7811                           ;main.c: 608:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7812  00044C  0E7C               	movlw	low STR_41
  7813  00044E  0100               	movlb	0	; () banked
  7814  000450  6FED               	movwf	printf@fmt& (0+255),b
  7815  000452  0EFE               	movlw	high STR_41
  7816  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7817  000456  0E01               	movlw	1
  7818  000458  0101               	movlb	1	; () banked
  7819  00045A  25DB               	addwf	_i& (0+255),w,b
  7820  00045C  0100               	movlb	0	; () banked
  7821  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  7822  000460  0E00               	movlw	0
  7823  000462  0101               	movlb	1	; () banked
  7824  000464  21DC               	addwfc	(_i+1)& (0+255),w,b
  7825  000466  0100               	movlb	0	; () banked
  7826  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  7827  00046A  C1DB  F100         	movff	_i,??_UI_main
  7828  00046E  C1DC  F101         	movff	_i+1,??_UI_main+1
  7829  000472  0101               	movlb	1	; () banked
  7830  000474  90D8               	bcf	status,0,c
  7831  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  7832  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7833  00047A  90D8               	bcf	status,0,c
  7834  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  7835  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7836  000480  90D8               	bcf	status,0,c
  7837  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  7838  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7839  000486  0E04               	movlw	4
  7840  000488  2700               	addwf	??_UI_main& (0+255),f,b
  7841  00048A  0E00               	movlw	0
  7842  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7843  00048E  0E04               	movlw	low UI_main@Pole
  7844  000490  2500               	addwf	??_UI_main& (0+255),w,b
  7845  000492  6ED9               	movwf	fsr2l,c
  7846  000494  0E01               	movlw	high UI_main@Pole
  7847  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7848  000498  6EDA               	movwf	fsr2h,c
  7849  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  7850  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  7851  0004A2  EC7A  F01E         	call	_printf	;wreg free
  7852  0004A6  0E90               	movlw	144
  7853  0004A8  ECE0  F01E         	call	_lcdInst
  7854                           
  7855                           ;main.c: 610:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7856  0004AC  0E3B               	movlw	low STR_42
  7857  0004AE  0100               	movlb	0	; () banked
  7858  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  7859  0004B2  0EFF               	movlw	high STR_42
  7860  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7861  0004B6  0E01               	movlw	1
  7862  0004B8  0101               	movlb	1	; () banked
  7863  0004BA  25DB               	addwf	_i& (0+255),w,b
  7864  0004BC  0100               	movlb	0	; () banked
  7865  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  7866  0004C0  0E00               	movlw	0
  7867  0004C2  0101               	movlb	1	; () banked
  7868  0004C4  21DC               	addwfc	(_i+1)& (0+255),w,b
  7869  0004C6  0100               	movlb	0	; () banked
  7870  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  7871  0004CA  C1DB  F100         	movff	_i,??_UI_main
  7872  0004CE  C1DC  F101         	movff	_i+1,??_UI_main+1
  7873  0004D2  0101               	movlb	1	; () banked
  7874  0004D4  90D8               	bcf	status,0,c
  7875  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  7876  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7877  0004DA  90D8               	bcf	status,0,c
  7878  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  7879  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7880  0004E0  90D8               	bcf	status,0,c
  7881  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  7882  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7883  0004E6  0E06               	movlw	6
  7884  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  7885  0004EA  0E00               	movlw	0
  7886  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7887  0004EE  0E04               	movlw	low UI_main@Pole
  7888  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  7889  0004F2  6ED9               	movwf	fsr2l,c
  7890  0004F4  0E01               	movlw	high UI_main@Pole
  7891  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7892  0004F8  6EDA               	movwf	fsr2h,c
  7893  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  7894  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  7895  000502  EC7A  F01E         	call	_printf	;wreg free
  7896  000506  0ED0               	movlw	208
  7897  000508  ECE0  F01E         	call	_lcdInst
  7898                           
  7899                           ;main.c: 612:                         printf("<*   0-Menu   #>");
  7900  00050C  0E1B               	movlw	low STR_39
  7901  00050E  0100               	movlb	0	; () banked
  7902  000510  6FED               	movwf	printf@fmt& (0+255),b
  7903  000512  0EFE               	movlw	high STR_39
  7904  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7905  000516  EC7A  F01E         	call	_printf	;wreg free
  7906  00051A                     l8056:
  7907                           
  7908                           ;main.c: 614:                     if (disp == 11){
  7909  00051A  0E0B               	movlw	11
  7910  00051C  0101               	movlb	1	; () banked
  7911  00051E  19DD               	xorwf	_disp& (0+255),w,b
  7912  000520  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7913  000522  A4D8               	btfss	status,2,c
  7914  000524  D0C0               	goto	l8078
  7915                           
  7916                           ; BSR set to: 1
  7917                           ;main.c: 615:                         i = disp - 2;
  7918  000526  0EFE               	movlw	254
  7919  000528  25DD               	addwf	_disp& (0+255),w,b
  7920  00052A  6FDB               	movwf	_i& (0+255),b
  7921  00052C  0EFF               	movlw	255
  7922  00052E  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7923  000530  6FDC               	movwf	(_i+1)& (0+255),b
  7924                           
  7925                           ; BSR set to: 1
  7926                           ;main.c: 616:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7927  000532  0E01               	movlw	1
  7928  000534  ECE0  F01E         	call	_lcdInst
  7929  000538  0E11               	movlw	17
  7930  00053A  0101               	movlb	1	; () banked
  7931  00053C  6F00               	movwf	??_UI_main& (0+255),b
  7932  00053E  0E3A               	movlw	58
  7933  000540                     u9927:
  7934  000540  2EE8               	decfsz	wreg,f,c
  7935  000542  D7FE               	bra	u9927
  7936  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  7937  000546  D7FC               	bra	u9927
  7938  000548  F000               	nop	
  7939                           
  7940                           ;main.c: 617:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7941  00054A  0EB4               	movlw	low STR_40
  7942  00054C  0100               	movlb	0	; () banked
  7943  00054E  6FED               	movwf	printf@fmt& (0+255),b
  7944  000550  0EFD               	movlw	high STR_40
  7945  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7946  000554  0E01               	movlw	1
  7947  000556  0101               	movlb	1	; () banked
  7948  000558  25DB               	addwf	_i& (0+255),w,b
  7949  00055A  0100               	movlb	0	; () banked
  7950  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  7951  00055E  0E00               	movlw	0
  7952  000560  0101               	movlb	1	; () banked
  7953  000562  21DC               	addwfc	(_i+1)& (0+255),w,b
  7954  000564  0100               	movlb	0	; () banked
  7955  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  7956  000568  C1DB  F100         	movff	_i,??_UI_main
  7957  00056C  C1DC  F101         	movff	_i+1,??_UI_main+1
  7958  000570  0101               	movlb	1	; () banked
  7959  000572  90D8               	bcf	status,0,c
  7960  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  7961  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7962  000578  90D8               	bcf	status,0,c
  7963  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  7964  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7965  00057E  90D8               	bcf	status,0,c
  7966  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  7967  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7968  000584  0E04               	movlw	low UI_main@Pole
  7969  000586  2500               	addwf	??_UI_main& (0+255),w,b
  7970  000588  6ED9               	movwf	fsr2l,c
  7971  00058A  0E01               	movlw	high UI_main@Pole
  7972  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7973  00058E  6EDA               	movwf	fsr2h,c
  7974  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  7975  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  7976  000598  C1DB  F102         	movff	_i,??_UI_main+2
  7977  00059C  C1DC  F103         	movff	_i+1,??_UI_main+3
  7978  0005A0  90D8               	bcf	status,0,c
  7979  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7980  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7981  0005A6  90D8               	bcf	status,0,c
  7982  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7983  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7984  0005AC  90D8               	bcf	status,0,c
  7985  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7986  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7987  0005B2  0E02               	movlw	2
  7988  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7989  0005B6  0E00               	movlw	0
  7990  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7991  0005BA  0E04               	movlw	low UI_main@Pole
  7992  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7993  0005BE  6ED9               	movwf	fsr2l,c
  7994  0005C0  0E01               	movlw	high UI_main@Pole
  7995  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7996  0005C4  6EDA               	movwf	fsr2h,c
  7997  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  7998  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  7999  0005CE  EC7A  F01E         	call	_printf	;wreg free
  8000  0005D2  0EC0               	movlw	192
  8001  0005D4  ECE0  F01E         	call	_lcdInst
  8002                           
  8003                           ;main.c: 619:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8004  0005D8  0E7C               	movlw	low STR_41
  8005  0005DA  0100               	movlb	0	; () banked
  8006  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  8007  0005DE  0EFE               	movlw	high STR_41
  8008  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8009  0005E2  0E01               	movlw	1
  8010  0005E4  0101               	movlb	1	; () banked
  8011  0005E6  25DB               	addwf	_i& (0+255),w,b
  8012  0005E8  0100               	movlb	0	; () banked
  8013  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  8014  0005EC  0E00               	movlw	0
  8015  0005EE  0101               	movlb	1	; () banked
  8016  0005F0  21DC               	addwfc	(_i+1)& (0+255),w,b
  8017  0005F2  0100               	movlb	0	; () banked
  8018  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  8019  0005F6  C1DB  F100         	movff	_i,??_UI_main
  8020  0005FA  C1DC  F101         	movff	_i+1,??_UI_main+1
  8021  0005FE  0101               	movlb	1	; () banked
  8022  000600  90D8               	bcf	status,0,c
  8023  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  8024  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8025  000606  90D8               	bcf	status,0,c
  8026  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  8027  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8028  00060C  90D8               	bcf	status,0,c
  8029  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  8030  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8031  000612  0E04               	movlw	4
  8032  000614  2700               	addwf	??_UI_main& (0+255),f,b
  8033  000616  0E00               	movlw	0
  8034  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8035  00061A  0E04               	movlw	low UI_main@Pole
  8036  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  8037  00061E  6ED9               	movwf	fsr2l,c
  8038  000620  0E01               	movlw	high UI_main@Pole
  8039  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8040  000624  6EDA               	movwf	fsr2h,c
  8041  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  8042  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  8043  00062E  EC7A  F01E         	call	_printf	;wreg free
  8044  000632  0E90               	movlw	144
  8045  000634  ECE0  F01E         	call	_lcdInst
  8046                           
  8047                           ;main.c: 621:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8048  000638  0E3B               	movlw	low STR_42
  8049  00063A  0100               	movlb	0	; () banked
  8050  00063C  6FED               	movwf	printf@fmt& (0+255),b
  8051  00063E  0EFF               	movlw	high STR_42
  8052  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8053  000642  0E01               	movlw	1
  8054  000644  0101               	movlb	1	; () banked
  8055  000646  25DB               	addwf	_i& (0+255),w,b
  8056  000648  0100               	movlb	0	; () banked
  8057  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  8058  00064C  0E00               	movlw	0
  8059  00064E  0101               	movlb	1	; () banked
  8060  000650  21DC               	addwfc	(_i+1)& (0+255),w,b
  8061  000652  0100               	movlb	0	; () banked
  8062  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  8063  000656  C1DB  F100         	movff	_i,??_UI_main
  8064  00065A  C1DC  F101         	movff	_i+1,??_UI_main+1
  8065  00065E  0101               	movlb	1	; () banked
  8066  000660  90D8               	bcf	status,0,c
  8067  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  8068  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8069  000666  90D8               	bcf	status,0,c
  8070  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  8071  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8072  00066C  90D8               	bcf	status,0,c
  8073  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  8074  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8075  000672  0E06               	movlw	6
  8076  000674  2700               	addwf	??_UI_main& (0+255),f,b
  8077  000676  0E00               	movlw	0
  8078  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8079  00067A  0E04               	movlw	low UI_main@Pole
  8080  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  8081  00067E  6ED9               	movwf	fsr2l,c
  8082  000680  0E01               	movlw	high UI_main@Pole
  8083  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8084  000684  6EDA               	movwf	fsr2h,c
  8085  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  8086  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  8087  00068E  EC7A  F01E         	call	_printf	;wreg free
  8088  000692  0ED0               	movlw	208
  8089  000694  ECE0  F01E         	call	_lcdInst
  8090                           
  8091                           ;main.c: 623:                         printf("<*   0-Menu     ");
  8092  000698  0ED7               	movlw	low STR_47
  8093  00069A  0100               	movlb	0	; () banked
  8094  00069C  6FED               	movwf	printf@fmt& (0+255),b
  8095  00069E  0EFD               	movlw	high STR_47
  8096  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8097  0006A2  EC7A  F01E         	call	_printf	;wreg free
  8098  0006A6                     l8078:
  8099                           
  8100                           ;main.c: 626:             if (temp_int == 3){
  8101  0006A6  0E03               	movlw	3
  8102  0006A8  0101               	movlb	1	; () banked
  8103  0006AA  19E1               	xorwf	_temp_int& (0+255),w,b
  8104  0006AC  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  8105  0006AE  A4D8               	btfss	status,2,c
  8106  0006B0  D0B5               	goto	u8730
  8107                           
  8108                           ; BSR set to: 1
  8109                           ;main.c: 627:                 state = 0;
  8110  0006B2  0E00               	movlw	0
  8111  0006B4  6FE0               	movwf	(_state+1)& (0+255),b
  8112  0006B6  0E00               	movlw	0
  8113  0006B8  6FDF               	movwf	_state& (0+255),b
  8114                           
  8115                           ;main.c: 628:                 tick = 0;
  8116  0006BA  0E00               	movlw	0
  8117  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  8118  0006BE  0E00               	movlw	0
  8119  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  8120  0006C2  0E00               	movlw	0
  8121  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  8122  0006C6  0E00               	movlw	0
  8123  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  8124                           
  8125                           ;main.c: 629:                 while(~key_was_pressed){
  8126  0006CA  D0A5               	goto	l8128
  8127  0006CC                     l8082:
  8128                           
  8129                           ; BSR set to: 1
  8130                           ;main.c: 630:                     if(tick % 1000 == 0){
  8131  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  8132  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  8133  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  8134  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  8135  0006DC  0EE8               	movlw	232
  8136  0006DE  0100               	movlb	0	; () banked
  8137  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  8138  0006E2  0E03               	movlw	3
  8139  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  8140  0006E6  0E00               	movlw	0
  8141  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  8142  0006EA  0E00               	movlw	0
  8143  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  8144  0006EE  EC38  F01C         	call	___llmod	;wreg free
  8145  0006F2  0100               	movlb	0	; () banked
  8146  0006F4  5180               	movf	?___llmod& (0+255),w,b
  8147  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  8148  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  8149  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  8150  0006FC  A4D8               	btfss	status,2,c
  8151  0006FE  D084               	goto	l8126
  8152                           
  8153                           ; BSR set to: 0
  8154                           ;main.c: 631:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8155  000700  0E01               	movlw	1
  8156  000702  ECE0  F01E         	call	_lcdInst
  8157  000706  0E11               	movlw	17
  8158  000708  0101               	movlb	1	; () banked
  8159  00070A  6F00               	movwf	??_UI_main& (0+255),b
  8160  00070C  0E3A               	movlw	58
  8161  00070E                     u9937:
  8162  00070E  2EE8               	decfsz	wreg,f,c
  8163  000710  D7FE               	bra	u9937
  8164  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  8165  000714  D7FC               	bra	u9937
  8166  000716  F000               	nop	
  8167                           
  8168                           ;main.c: 632:                         printf("DATE & TIME");
  8169  000718  0E17               	movlw	low STR_48
  8170  00071A  0100               	movlb	0	; () banked
  8171  00071C  6FED               	movwf	printf@fmt& (0+255),b
  8172  00071E  0EFF               	movlw	high STR_48
  8173  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8174  000722  EC7A  F01E         	call	_printf	;wreg free
  8175                           
  8176                           ;main.c: 633:                         I2C_Master_Init(100000);
  8177  000726  0EA0               	movlw	160
  8178  000728  0100               	movlb	0	; () banked
  8179  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  8180  00072C  0E86               	movlw	134
  8181  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  8182  000730  0E01               	movlw	1
  8183  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  8184  000734  0E00               	movlw	0
  8185  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  8186  000738  EC6C  F01C         	call	_I2C_Master_Init	;wreg free
  8187                           
  8188                           ;main.c: 634:                         I2C_Master_Start();
  8189  00073C  ECF1  F01E         	call	_I2C_Master_Start	;wreg free
  8190                           
  8191                           ;main.c: 635:                         I2C_Master_Write(0b11010000);
  8192  000740  0E00               	movlw	0
  8193  000742  0100               	movlb	0	; () banked
  8194  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8195  000746  0ED0               	movlw	208
  8196  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8197  00074A  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  8198                           
  8199                           ;main.c: 636:                         I2C_Master_Write(0x00);
  8200  00074E  0E00               	movlw	0
  8201  000750  0100               	movlb	0	; () banked
  8202  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8203  000754  0E00               	movlw	0
  8204  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8205  000758  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  8206                           
  8207                           ;main.c: 637:                         I2C_Master_Stop();
  8208  00075C  ECED  F01E         	call	_I2C_Master_Stop	;wreg free
  8209                           
  8210                           ;main.c: 639:                         I2C_Master_Start();
  8211  000760  ECF1  F01E         	call	_I2C_Master_Start	;wreg free
  8212                           
  8213                           ;main.c: 640:                         I2C_Master_Write(0b11010001);
  8214  000764  0E00               	movlw	0
  8215  000766  0100               	movlb	0	; () banked
  8216  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8217  00076A  0ED1               	movlw	209
  8218  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8219  00076E  ECE8  F01E         	call	_I2C_Master_Write	;wreg free
  8220                           
  8221                           ;main.c: 641:                         for(unsigned char i = 0; i < 6; i++){
  8222  000772  0E00               	movlw	0
  8223  000774  0101               	movlb	1	; () banked
  8224  000776  6F59               	movwf	UI_main@i& (0+255),b
  8225  000778                     l8106:
  8226                           
  8227                           ; BSR set to: 1
  8228  000778  0E05               	movlw	5
  8229  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  8230  00077C  D001               	goto	l8110
  8231  00077E  D00D               	goto	l8116
  8232  000780                     l8110:
  8233                           
  8234                           ; BSR set to: 1
  8235                           ;main.c: 642:                             time[i] = I2C_Master_Read(0);
  8236  000780  0ED2               	movlw	low _time
  8237  000782  2559               	addwf	UI_main@i& (0+255),w,b
  8238  000784  6ED9               	movwf	fsr2l,c
  8239  000786  6ADA               	clrf	fsr2h,c
  8240  000788  0E01               	movlw	high _time
  8241  00078A  22DA               	addwfc	fsr2h,f,c
  8242  00078C  0E00               	movlw	0
  8243  00078E  EC65  F01E         	call	_I2C_Master_Read
  8244  000792  6EDF               	movwf	indf2,c
  8245                           
  8246                           ;main.c: 643:                         }
  8247  000794  0101               	movlb	1	; () banked
  8248  000796  2B59               	incf	UI_main@i& (0+255),f,b
  8249  000798  D7EF               	goto	l8106
  8250  00079A                     l8116:
  8251                           
  8252                           ; BSR set to: 1
  8253                           ;main.c: 644:                         time[6] = I2C_Master_Read(1);
  8254  00079A  0E01               	movlw	1
  8255  00079C  EC65  F01E         	call	_I2C_Master_Read
  8256  0007A0  0101               	movlb	1	; () banked
  8257  0007A2  6FD8               	movwf	(_time+6)& (0+255),b
  8258                           
  8259                           ;main.c: 645:                         I2C_Master_Stop();
  8260  0007A4  ECED  F01E         	call	_I2C_Master_Stop	;wreg free
  8261  0007A8  0EC0               	movlw	192
  8262  0007AA  ECE0  F01E         	call	_lcdInst
  8263                           
  8264                           ;main.c: 649:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  8265  0007AE  0E9A               	movlw	low STR_49
  8266  0007B0  0100               	movlb	0	; () banked
  8267  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  8268  0007B4  0EFE               	movlw	high STR_49
  8269  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8270  0007B8  C1D8  F0EF         	movff	_time+6,?_printf+2
  8271  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  8272  0007BE  C1D7  F0F1         	movff	_time+5,?_printf+4
  8273  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  8274  0007C4  C1D6  F0F3         	movff	_time+4,?_printf+6
  8275  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  8276  0007CA  EC7A  F01E         	call	_printf	;wreg free
  8277  0007CE  0E90               	movlw	144
  8278  0007D0  ECE0  F01E         	call	_lcdInst
  8279                           
  8280                           ;main.c: 651:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  8281  0007D4  0EA9               	movlw	low STR_50
  8282  0007D6  0100               	movlb	0	; () banked
  8283  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  8284  0007DA  0EFE               	movlw	high STR_50
  8285  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8286  0007DE  C1D4  F0EF         	movff	_time+2,?_printf+2
  8287  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  8288  0007E4  C1D3  F0F1         	movff	_time+1,?_printf+4
  8289  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  8290  0007EA  C1D2  F0F3         	movff	_time,?_printf+6
  8291  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  8292  0007F0  EC7A  F01E         	call	_printf	;wreg free
  8293  0007F4  0ED0               	movlw	208
  8294  0007F6  ECE0  F01E         	call	_lcdInst
  8295                           
  8296                           ;main.c: 653:                         printf("     0-Menu     ");
  8297  0007FA  0EC6               	movlw	low STR_30
  8298  0007FC  0100               	movlb	0	; () banked
  8299  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  8300  000800  0EFD               	movlw	high STR_30
  8301  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8302  000804  EC7A  F01E         	call	_printf	;wreg free
  8303  000808                     l8126:
  8304                           
  8305                           ;main.c: 656:                     tick++;
  8306  000808  0E01               	movlw	1
  8307  00080A  0101               	movlb	1	; () banked
  8308  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  8309  00080E  0E00               	movlw	0
  8310  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  8311  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  8312  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  8313  000816                     l8128:
  8314                           
  8315                           ; BSR set to: 1
  8316                           ;main.c: 629:                 while(~key_was_pressed){
  8317  000816  05E5               	decf	_key_was_pressed& (0+255),w,b	;volatile
  8318  000818  A4D8               	btfss	status,2,c
  8319  00081A  D758               	goto	l8082
  8320  00081C                     u8730:
  8321                           
  8322                           ;main.c: 524:     while(sens==0){
  8323  00081C  5058               	movf	_sens,w,c	;volatile
  8324  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  8325  000820  A4D8               	btfss	status,2,c
  8326  000822  0012               	return	
  8327  000824  D44B               	goto	l7910
  8328  000826                     __end_of_UI_main:
  8329                           	opt callstack 0
  8330                           
  8331 ;; *************** function _printf *****************
  8332 ;; Defined at:
  8333 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  8336 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8337 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8338 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8339 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8340 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8341 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8342 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8343 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8344 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8345 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8346 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8347 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8348 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8349 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8350 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8351 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  ap              2  121[BANK0 ] PTR void [1]
  8354 ;;		 -> ?_printf(2), 
  8355 ;;  ret             2    0        int 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  2  109[BANK0 ] int 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8365 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;Total ram usage:       14 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:   13
  8372 ;; This function calls:
  8373 ;;		_vfprintf
  8374 ;; This function is called by:
  8375 ;;		_actuators_main
  8376 ;;		_stepper2
  8377 ;;		_stepper2_back
  8378 ;;		_full_drive
  8379 ;;		_print_echo
  8380 ;;		_ultrasonic_main
  8381 ;;		_number_deploy
  8382 ;;		_UI_main
  8383 ;;		_brake
  8384 ;;		_main
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text20
  8389  003CF4                     __ptext20:
  8390                           	opt callstack 0
  8391  003CF4                     _printf:
  8392                           	opt callstack 16
  8393                           
  8394                           ;incstack = 0
  8395  003CF4  0EEF               	movlw	low (?_printf+2)
  8396  003CF6  0100               	movlb	0	; () banked
  8397  003CF8  6FF9               	movwf	printf@ap& (0+255),b
  8398  003CFA  0E00               	movlw	high (?_printf+2)
  8399  003CFC  6FFA               	movwf	(printf@ap+1)& (0+255),b
  8400                           
  8401                           ; BSR set to: 0
  8402  003CFE  0E00               	movlw	0
  8403  003D00  6FE5               	movwf	vfprintf@fp& (0+255),b
  8404  003D02  0E00               	movlw	0
  8405  003D04  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  8406  003D06  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  8407  003D0A  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  8408  003D0E  0EF9               	movlw	low printf@ap
  8409  003D10  6FE9               	movwf	vfprintf@ap& (0+255),b
  8410  003D12  0E00               	movlw	high printf@ap
  8411  003D14  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  8412  003D16  ECC7  F01C         	call	_vfprintf	;wreg free
  8413  003D1A  0012               	return		;funcret
  8414  003D1C                     __end_of_printf:
  8415                           	opt callstack 0
  8416                           
  8417 ;; *************** function _vfprintf *****************
  8418 ;; Defined at:
  8419 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  8422 ;;		 -> NULL(0), 
  8423 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  8424 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8425 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8426 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8427 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8428 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8429 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8430 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8431 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8432 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8433 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8434 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8435 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8436 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8437 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8438 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8439 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8440 ;;  ap              2  105[BANK0 ] PTR PTR void 
  8441 ;;		 -> printf@ap(2), 
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  8444 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8445 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8446 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8447 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8448 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8449 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8450 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8451 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8452 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8453 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8454 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8455 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8456 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8457 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8458 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8459 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  2  101[BANK0 ] int 
  8462 ;; Registers used:
  8463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8469 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8470 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;Total ram usage:        8 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; Hardware stack levels required when called:   12
  8476 ;; This function calls:
  8477 ;;		_vfpfcnvrt
  8478 ;; This function is called by:
  8479 ;;		_printf
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text21
  8484  00398E                     __ptext21:
  8485                           	opt callstack 0
  8486  00398E                     _vfprintf:
  8487                           	opt callstack 16
  8488                           
  8489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8490                           
  8491                           ;incstack = 0
  8492  00398E  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8493  003992  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8494                           
  8495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8496  003996  0E00               	movlw	0
  8497  003998  6E49               	movwf	_nout+1,c
  8498  00399A  0E00               	movlw	0
  8499  00399C  6E48               	movwf	_nout,c
  8500                           
  8501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8502  00399E  D014               	goto	l6910
  8503  0039A0                     l6908:
  8504                           
  8505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8506  0039A0  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8507  0039A4  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8508  0039A8  0EEB               	movlw	low vfprintf@cfmt
  8509  0039AA  0100               	movlb	0	; () banked
  8510  0039AC  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8511  0039AE  0E00               	movlw	high vfprintf@cfmt
  8512  0039B0  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8513  0039B2  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8514  0039B6  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8515  0039BA  ECBE  F009         	call	_vfpfcnvrt	;wreg free
  8516  0039BE  0100               	movlb	0	; () banked
  8517  0039C0  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8518  0039C2  2648               	addwf	_nout,f,c
  8519  0039C4  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8520  0039C6  2249               	addwfc	_nout+1,f,c
  8521  0039C8                     l6910:
  8522                           
  8523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8524  0039C8  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8525  0039CC  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8526  0039D0                     	if	0	;tblptru may be non-zero
  8527  0039D0                     	endif
  8528  0039D0                     	if	0	;tblptru may be non-zero
  8529  0039D0                     	endif
  8530  0039D0  0008               	tblrd		*
  8531  0039D2  50F5               	movf	tablat,w,c
  8532  0039D4  0900               	iorlw	0
  8533  0039D6  A4D8               	btfss	status,2,c
  8534  0039D8  D7E3               	goto	l6908
  8535                           
  8536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8537  0039DA  C048  F0E5         	movff	_nout,?_vfprintf
  8538  0039DE  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8539  0039E2  0012               	return		;funcret
  8540  0039E4                     __end_of_vfprintf:
  8541                           	opt callstack 0
  8542                           
  8543 ;; *************** function _vfpfcnvrt *****************
  8544 ;; Defined at:
  8545 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8548 ;;		 -> NULL(0), 
  8549 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8550 ;;		 -> vfprintf@cfmt(2), 
  8551 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8552 ;;		 -> printf@ap(2), 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;  llu             8   88[BANK0 ] unsigned long long 
  8555 ;;  ll              8   80[BANK0 ] long long 
  8556 ;;  f               4    0        long long 
  8557 ;;  vp              3    0        PTR void 
  8558 ;;  ct              3    0        unsigned char [3]
  8559 ;;  cp              3    0        PTR unsigned char 
  8560 ;;  done            2   97[BANK0 ] int 
  8561 ;;  i               2    0        int 
  8562 ;;  c               1   96[BANK0 ] unsigned char 
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  2   70[BANK0 ] int 
  8565 ;; Registers used:
  8566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8572 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8574 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8575 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8576 ;;Total ram usage:       31 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:   11
  8579 ;; This function calls:
  8580 ;;		_atoi
  8581 ;;		_dtoa
  8582 ;;		_fputc
  8583 ;;		_isdigit
  8584 ;;		_xtoa
  8585 ;; This function is called by:
  8586 ;;		_vfprintf
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text22
  8591  00137C                     __ptext22:
  8592                           	opt callstack 0
  8593  00137C                     _vfpfcnvrt:
  8594                           	opt callstack 16
  8595                           
  8596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8597                           
  8598                           ;incstack = 0
  8599  00137C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8600  001380  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8601  001384  CFDE FFF6          	movff	postinc2,tblptrl
  8602  001388  CFDD FFF7          	movff	postdec2,tblptrh
  8603  00138C                     	if	0	;tblptru may be non-zero
  8604  00138C                     	endif
  8605  00138C                     	if	0	;tblptru may be non-zero
  8606  00138C                     	endif
  8607  00138C  0008               	tblrd		*
  8608  00138E  50F5               	movf	tablat,w,c
  8609  001390  0A25               	xorlw	37
  8610  001392  A4D8               	btfss	status,2,c
  8611  001394  D1AD               	goto	l6888
  8612                           
  8613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8614  001396  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8615  00139A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8616  00139E  2ADE               	incf	postinc2,f,c
  8617  0013A0  0E00               	movlw	0
  8618  0013A2  22DD               	addwfc	postdec2,f,c
  8619                           
  8620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8621  0013A4  0E00               	movlw	0
  8622  0013A6  6E4B               	movwf	_width+1,c
  8623  0013A8  0E00               	movlw	0
  8624  0013AA  6E4A               	movwf	_width,c
  8625  0013AC  C04A  F04E         	movff	_width,_flags
  8626  0013B0  C04B  F04F         	movff	_width+1,_flags+1
  8627                           
  8628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8629  0013B4  684C               	setf	_prec,c
  8630  0013B6  684D               	setf	_prec+1,c
  8631                           
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8633  0013B8  0E00               	movlw	0
  8634  0013BA  0100               	movlb	0	; () banked
  8635  0013BC  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8636  0013BE  0E00               	movlw	0
  8637  0013C0  D014               	goto	L3
  8638  0013C2                     l6800:
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8642  0013C2  804E               	bsf	_flags,0,c
  8643  0013C4                     l6802:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8647  0013C4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8648  0013C8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8649  0013CC  2ADE               	incf	postinc2,f,c
  8650  0013CE  0E00               	movlw	0
  8651  0013D0  22DD               	addwfc	postdec2,f,c
  8652                           
  8653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8654  0013D2  D02E               	goto	l6826
  8655  0013D4                     l6804:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8659  0013D4  824E               	bsf	_flags,1,c
  8660  0013D6  D7F6               	goto	l6802
  8661  0013D8                     l6808:
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8665  0013D8  844E               	bsf	_flags,2,c
  8666  0013DA  D7F4               	goto	l6802
  8667  0013DC                     l6812:
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8671  0013DC  864E               	bsf	_flags,3,c
  8672  0013DE  D7F2               	goto	l6802
  8673  0013E0                     l6816:
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8677  0013E0  884E               	bsf	_flags,4,c
  8678  0013E2  D7F0               	goto	l6802
  8679  0013E4                     l6820:
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8683  0013E4  0E00               	movlw	0
  8684  0013E6  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8685  0013E8  0E01               	movlw	1
  8686  0013EA                     L3:
  8687  0013EA  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8688                           
  8689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8690  0013EC  D021               	goto	l6826
  8691  0013EE                     l6824:
  8692                           
  8693                           ; BSR set to: 0
  8694  0013EE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8695  0013F2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8696  0013F6  CFDE FFF6          	movff	postinc2,tblptrl
  8697  0013FA  CFDD FFF7          	movff	postdec2,tblptrh
  8698  0013FE                     	if	0	;tblptru may be non-zero
  8699  0013FE                     	endif
  8700  0013FE                     	if	0	;tblptru may be non-zero
  8701  0013FE                     	endif
  8702  0013FE  0008               	tblrd		*
  8703  001400  50F5               	movf	tablat,w,c
  8704  001402  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8705  001404  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8706                           
  8707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8708                           ; Switch size 1, requested type "simple"
  8709                           ; Number of cases is 1, Range of values is 0 to 0
  8710                           ; switch strategies available:
  8711                           ; Name         Instructions Cycles
  8712                           ; simple_byte            4     3 (average)
  8713                           ;	Chosen strategy is simple_byte
  8714  001406  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8715  001408  0A00               	xorlw	0	; case 0
  8716  00140A  A4D8               	btfss	status,2,c
  8717  00140C  D7EB               	goto	l6820
  8718                           
  8719                           ; BSR set to: 0
  8720                           ; Switch size 1, requested type "simple"
  8721                           ; Number of cases is 5, Range of values is 32 to 48
  8722                           ; switch strategies available:
  8723                           ; Name         Instructions Cycles
  8724                           ; simple_byte           16     9 (average)
  8725                           ;	Chosen strategy is simple_byte
  8726  00140E  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8727  001410  0A20               	xorlw	32	; case 32
  8728  001412  B4D8               	btfsc	status,2,c
  8729  001414  D7E3               	goto	l6812
  8730  001416  0A03               	xorlw	3	; case 35
  8731  001418  B4D8               	btfsc	status,2,c
  8732  00141A  D7E2               	goto	l6816
  8733  00141C  0A08               	xorlw	8	; case 43
  8734  00141E  B4D8               	btfsc	status,2,c
  8735  001420  D7DB               	goto	l6808
  8736  001422  0A06               	xorlw	6	; case 45
  8737  001424  B4D8               	btfsc	status,2,c
  8738  001426  D7CD               	goto	l6800
  8739  001428  0A1D               	xorlw	29	; case 48
  8740  00142A  B4D8               	btfsc	status,2,c
  8741  00142C  D7D3               	goto	l6804
  8742  00142E  D7DA               	goto	l6820
  8743  001430                     l6826:
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8747  001430  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8748  001432  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8749  001434  B4D8               	btfsc	status,2,c
  8750  001436  D7DB               	goto	l6824
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8754  001438  B04E               	btfsc	_flags,0,c
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8758  00143A  924E               	bcf	_flags,1,c
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8762  00143C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8763  001440  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8764  001444  CFDE FFF6          	movff	postinc2,tblptrl
  8765  001448  CFDD FFF7          	movff	postdec2,tblptrh
  8766  00144C                     	if	0	;tblptru may be non-zero
  8767  00144C                     	endif
  8768  00144C                     	if	0	;tblptru may be non-zero
  8769  00144C                     	endif
  8770  00144C  0008               	tblrd		*
  8771  00144E  50F5               	movf	tablat,w,c
  8772  001450  0A2A               	xorlw	42
  8773  001452  A4D8               	btfss	status,2,c
  8774  001454  D023               	goto	l6838
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8778  001456  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8779  00145A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8780  00145E  2ADE               	incf	postinc2,f,c
  8781  001460  0E00               	movlw	0
  8782  001462  22DD               	addwfc	postdec2,f,c
  8783                           
  8784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8785  001464  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8786  001468  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8787  00146C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8788  001470  0E02               	movlw	2
  8789  001472  26DE               	addwf	postinc2,f,c
  8790  001474  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8791  001478  0E00               	movlw	0
  8792  00147A  22DD               	addwfc	postdec2,f,c
  8793  00147C  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8794  001480  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8795  001484  CFDE F04A          	movff	postinc2,_width
  8796  001488  CFDD F04B          	movff	postdec2,_width+1
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8800  00148C  AE4B               	btfss	_width+1,7,c
  8801  00148E  D040               	goto	u7450
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8805  001490  804E               	bsf	_flags,0,c
  8806                           
  8807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8808  001492  6C4A               	negf	_width,c
  8809  001494  1E4B               	comf	_width+1,f,c
  8810  001496  B0D8               	btfsc	status,0,c
  8811  001498  2A4B               	incf	_width+1,f,c
  8812  00149A  D03A               	goto	u7450
  8813  00149C                     l6838:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8817  00149C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8818  0014A0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8819  0014A4  CFDE F087          	movff	postinc2,atoi@s
  8820  0014A8  CFDD F088          	movff	postdec2,atoi@s+1
  8821  0014AC  EC30  F014         	call	_atoi	;wreg free
  8822  0014B0  C087  F04A         	movff	?_atoi,_width
  8823  0014B4  C088  F04B         	movff	?_atoi+1,_width+1
  8824                           
  8825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8826  0014B8  D007               	goto	l6842
  8827  0014BA                     l6840:
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8831  0014BA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8832  0014BE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8833  0014C2  2ADE               	incf	postinc2,f,c
  8834  0014C4  0E00               	movlw	0
  8835  0014C6  22DD               	addwfc	postdec2,f,c
  8836  0014C8                     l6842:
  8837  0014C8  0ED0               	movlw	208
  8838  0014CA  0100               	movlb	0	; () banked
  8839  0014CC  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8840  0014CE  0EFF               	movlw	255
  8841  0014D0  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8842  0014D2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8843  0014D6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8844  0014DA  CFDE FFF6          	movff	postinc2,tblptrl
  8845  0014DE  CFDD FFF7          	movff	postdec2,tblptrh
  8846  0014E2                     	if	0	;tblptru may be non-zero
  8847  0014E2                     	endif
  8848  0014E2                     	if	0	;tblptru may be non-zero
  8849  0014E2                     	endif
  8850  0014E2  0008               	tblrd		*
  8851  0014E4  50F5               	movf	tablat,w,c
  8852  0014E6  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8853  0014E8  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8854  0014EA  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8855  0014EC  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8856  0014EE  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8857  0014F0  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8858  0014F2  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8859  0014F4  E106               	bnz	u7430
  8860  0014F6  0E0A               	movlw	10
  8861  0014F8  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8862  0014FA  B0D8               	btfsc	status,0,c
  8863  0014FC  D002               	goto	u7430
  8864  0014FE  0E01               	movlw	1
  8865  001500  D001               	goto	u7440
  8866  001502                     u7430:
  8867  001502  0E00               	movlw	0
  8868  001504                     u7440:
  8869  001504  6FE3               	movwf	_vfpfcnvrt$1131& (0+255),b
  8870  001506  6BE4               	clrf	(_vfpfcnvrt$1131+1)& (0+255),b
  8871                           
  8872                           ; BSR set to: 0
  8873  001508  51E3               	movf	_vfpfcnvrt$1131& (0+255),w,b
  8874  00150A  11E4               	iorwf	(_vfpfcnvrt$1131+1)& (0+255),w,b
  8875  00150C  A4D8               	btfss	status,2,c
  8876  00150E  D7D5               	goto	l6840
  8877  001510                     u7450:
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8881  001510  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8882  001514  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8883  001518  CFDE FFF6          	movff	postinc2,tblptrl
  8884  00151C  CFDD FFF7          	movff	postdec2,tblptrh
  8885  001520                     	if	0	;tblptru may be non-zero
  8886  001520                     	endif
  8887  001520                     	if	0	;tblptru may be non-zero
  8888  001520                     	endif
  8889  001520  0008               	tblrd		*
  8890  001522  50F5               	movf	tablat,w,c
  8891  001524  0A64               	xorlw	100
  8892  001526  B4D8               	btfsc	status,2,c
  8893  001528  D00D               	goto	u7470
  8894                           
  8895                           ; BSR set to: 0
  8896  00152A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8897  00152E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8898  001532  CFDE FFF6          	movff	postinc2,tblptrl
  8899  001536  CFDD FFF7          	movff	postdec2,tblptrh
  8900  00153A                     	if	0	;tblptru may be non-zero
  8901  00153A                     	endif
  8902  00153A                     	if	0	;tblptru may be non-zero
  8903  00153A                     	endif
  8904  00153A  0008               	tblrd		*
  8905  00153C  50F5               	movf	tablat,w,c
  8906  00153E  0A69               	xorlw	105
  8907  001540  A4D8               	btfss	status,2,c
  8908  001542  D03F               	goto	l6858
  8909  001544                     u7470:
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8913  001544  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8914  001548  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8915  00154C  2ADE               	incf	postinc2,f,c
  8916  00154E  0E00               	movlw	0
  8917  001550  22DD               	addwfc	postdec2,f,c
  8918                           
  8919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8920  001552  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8921  001556  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8922  00155A  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8923  00155E  0E02               	movlw	2
  8924  001560  26DE               	addwf	postinc2,f,c
  8925  001562  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8926  001566  0E00               	movlw	0
  8927  001568  22DD               	addwfc	postdec2,f,c
  8928  00156A  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8929  00156E  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8930  001572  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  8931  001576  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  8932  00157A  0E00               	movlw	0
  8933  00157C  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8934  00157E  0EFF               	movlw	-1
  8935  001580  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8936  001582  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8937  001584  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8938  001586  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8939  001588  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8940  00158A  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8944  00158C  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  8945  001590  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8946  001594  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  8947  001598  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8948  00159C  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8949  0015A0  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8950  0015A4  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8951  0015A8  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8952  0015AC  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8953  0015B0  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8954  0015B4  EC6F  F00E         	call	_dtoa	;wreg free
  8955  0015B8  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  8956  0015BC  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8957  0015C0  0012               	return	
  8958  0015C2                     l6858:
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8962  0015C2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8963  0015C6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8964  0015CA  CFDE FFF6          	movff	postinc2,tblptrl
  8965  0015CE  CFDD FFF7          	movff	postdec2,tblptrh
  8966  0015D2                     	if	0	;tblptru may be non-zero
  8967  0015D2                     	endif
  8968  0015D2                     	if	0	;tblptru may be non-zero
  8969  0015D2                     	endif
  8970  0015D2  0008               	tblrd		*
  8971  0015D4  50F5               	movf	tablat,w,c
  8972  0015D6  0A78               	xorlw	120
  8973  0015D8  B4D8               	btfsc	status,2,c
  8974  0015DA  D00D               	goto	u7490
  8975                           
  8976                           ; BSR set to: 0
  8977  0015DC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8978  0015E0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8979  0015E4  CFDE FFF6          	movff	postinc2,tblptrl
  8980  0015E8  CFDD FFF7          	movff	postdec2,tblptrh
  8981  0015EC                     	if	0	;tblptru may be non-zero
  8982  0015EC                     	endif
  8983  0015EC                     	if	0	;tblptru may be non-zero
  8984  0015EC                     	endif
  8985  0015EC  0008               	tblrd		*
  8986  0015EE  50F5               	movf	tablat,w,c
  8987  0015F0  0A58               	xorlw	88
  8988  0015F2  A4D8               	btfss	status,2,c
  8989  0015F4  D04D               	goto	l6872
  8990  0015F6                     u7490:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  8994  0015F6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8995  0015FA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8996  0015FE  CFDE FFF6          	movff	postinc2,tblptrl
  8997  001602  CFDD FFF7          	movff	postdec2,tblptrh
  8998  001606                     	if	0	;tblptru may be non-zero
  8999  001606                     	endif
  9000  001606                     	if	0	;tblptru may be non-zero
  9001  001606                     	endif
  9002  001606  0008               	tblrd		*
  9003  001608  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9007  00160C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9008  001610  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9009  001614  2ADE               	incf	postinc2,f,c
  9010  001616  0E00               	movlw	0
  9011  001618  22DD               	addwfc	postdec2,f,c
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9015  00161A  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9016  00161E  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9017  001622  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9018  001626  0E02               	movlw	2
  9019  001628  26DE               	addwf	postinc2,f,c
  9020  00162A  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9021  00162E  0E00               	movlw	0
  9022  001630  22DD               	addwfc	postdec2,f,c
  9023  001632  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9024  001636  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9025  00163A  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  9026  00163E  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  9027  001642  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9028  001646  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9029  00164A  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9030  00164C  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9031  00164E  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9032  001650  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9033  001652  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9034  001654  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9038  001656  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  9039  00165A  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9040  00165E  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  9041  001662  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9042  001666  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9043  00166A  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9044  00166E  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9045  001672  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9046  001676  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9047  00167A  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9048  00167E  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  9049  001682  EC93  F00F         	call	_xtoa	;wreg free
  9050  001686  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  9051  00168A  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9052  00168E  0012               	return	
  9053  001690                     l6872:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9057  001690  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9058  001694  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9059  001698  CFDE FFF6          	movff	postinc2,tblptrl
  9060  00169C  CFDD FFF7          	movff	postdec2,tblptrh
  9061  0016A0                     	if	0	;tblptru may be non-zero
  9062  0016A0                     	endif
  9063  0016A0                     	if	0	;tblptru may be non-zero
  9064  0016A0                     	endif
  9065  0016A0  0008               	tblrd		*
  9066  0016A2  50F5               	movf	tablat,w,c
  9067  0016A4  0A25               	xorlw	37
  9068  0016A6  A4D8               	btfss	status,2,c
  9069  0016A8  D017               	goto	l6882
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9073  0016AA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9074  0016AE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9075  0016B2  2ADE               	incf	postinc2,f,c
  9076  0016B4  0E00               	movlw	0
  9077  0016B6  22DD               	addwfc	postdec2,f,c
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9081  0016B8  0E00               	movlw	0
  9082  0016BA  6F85               	movwf	(fputc@c+1)& (0+255),b
  9083  0016BC  0E25               	movlw	37
  9084  0016BE  6F84               	movwf	fputc@c& (0+255),b
  9085  0016C0  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9086  0016C4  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9087  0016C8  EC01  F01C         	call	_fputc	;wreg free
  9088  0016CC                     l6878:
  9089                           
  9090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9091  0016CC  0E00               	movlw	0
  9092  0016CE  0100               	movlb	0	; () banked
  9093  0016D0  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9094  0016D2  0E01               	movlw	1
  9095  0016D4  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9096  0016D6  0012               	return	
  9097  0016D8                     l6882:
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9101  0016D8  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9102  0016DC  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9103  0016E0  2ADE               	incf	postinc2,f,c
  9104  0016E2  0E00               	movlw	0
  9105  0016E4  22DD               	addwfc	postdec2,f,c
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9109  0016E6  0E00               	movlw	0
  9110  0016E8  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9111  0016EA  0E00               	movlw	0
  9112  0016EC  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9113  0016EE  0012               	return	
  9114  0016F0                     l6888:
  9115                           
  9116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9117  0016F0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9118  0016F4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9119  0016F8  CFDE FFF6          	movff	postinc2,tblptrl
  9120  0016FC  CFDD FFF7          	movff	postdec2,tblptrh
  9121  001700                     	if	0	;tblptru may be non-zero
  9122  001700                     	endif
  9123  001700                     	if	0	;tblptru may be non-zero
  9124  001700                     	endif
  9125  001700  0008               	tblrd		*
  9126  001702  50F5               	movf	tablat,w,c
  9127  001704  0100               	movlb	0	; () banked
  9128  001706  6F84               	movwf	fputc@c& (0+255),b
  9129  001708  6B85               	clrf	(fputc@c+1)& (0+255),b
  9130  00170A  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9131  00170E  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9132  001712  EC01  F01C         	call	_fputc	;wreg free
  9133                           
  9134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9135  001716  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9136  00171A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9137  00171E  2ADE               	incf	postinc2,f,c
  9138  001720  0E00               	movlw	0
  9139  001722  22DD               	addwfc	postdec2,f,c
  9140  001724  D7D3               	goto	l6878
  9141  001726                     __end_of_vfpfcnvrt:
  9142                           	opt callstack 0
  9143                           
  9144 ;; *************** function _xtoa *****************
  9145 ;; Defined at:
  9146 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9149 ;;		 -> NULL(0), 
  9150 ;;  d               8   33[BANK0 ] unsigned long long 
  9151 ;;  x               1   41[BANK0 ] unsigned char 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;  n               8   58[BANK0 ] unsigned long long 
  9154 ;;  c               2   68[BANK0 ] int 
  9155 ;;  i               2   66[BANK0 ] int 
  9156 ;;  w               2   56[BANK0 ] int 
  9157 ;;  p               2   54[BANK0 ] int 
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  2   31[BANK0 ] int 
  9160 ;; Registers used:
  9161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9162 ;; Tracked objects:
  9163 ;;		On entry : 0/0
  9164 ;;		On exit  : 0/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9167 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9168 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9170 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9171 ;;Total ram usage:       39 bytes
  9172 ;; Hardware stack levels used:    1
  9173 ;; Hardware stack levels required when called:   10
  9174 ;; This function calls:
  9175 ;;		_isalpha
  9176 ;;		_isupper
  9177 ;;		_pad
  9178 ;;		_toupper
  9179 ;; This function is called by:
  9180 ;;		_vfpfcnvrt
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text23
  9185  001F26                     __ptext23:
  9186                           	opt callstack 0
  9187  001F26                     _xtoa:
  9188                           	opt callstack 16
  9189                           
  9190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9191                           
  9192                           ;incstack = 0
  9193  001F26  AE4D               	btfss	_prec+1,7,c
  9194                           
  9195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9196  001F28  924E               	bcf	_flags,1,c
  9197                           
  9198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9199  001F2A  BE4D               	btfsc	_prec+1,7,c
  9200  001F2C  D005               	goto	u7150
  9201  001F2E  504D               	movf	_prec+1,w,c
  9202  001F30  E109               	bnz	l634
  9203  001F32  044C               	decf	_prec,w,c
  9204  001F34  B0D8               	btfsc	status,0,c
  9205  001F36  D006               	goto	l634
  9206  001F38                     u7150:
  9207  001F38  0E00               	movlw	0
  9208  001F3A  0100               	movlb	0	; () banked
  9209  001F3C  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  9210  001F3E  0E01               	movlw	1
  9211  001F40  6FB6               	movwf	xtoa@p& (0+255),b
  9212  001F42  D004               	goto	l636
  9213  001F44                     l634:
  9214  001F44  C04C  F0B6         	movff	_prec,xtoa@p
  9215  001F48  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  9216  001F4C                     l636:
  9217                           
  9218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9219  001F4C  C04A  F0B8         	movff	_width,xtoa@w
  9220  001F50  C04B  F0B9         	movff	_width+1,xtoa@w+1
  9221                           
  9222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9223  001F54  A84E               	btfss	_flags,4,c
  9224  001F56  D005               	goto	l6692
  9225                           
  9226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9227  001F58  0100               	movlb	0	; () banked
  9228  001F5A  0EFE               	movlw	254
  9229  001F5C  27B8               	addwf	xtoa@w& (0+255),f,b
  9230  001F5E  0EFF               	movlw	255
  9231  001F60  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  9232  001F62                     l6692:
  9233                           
  9234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9235  001F62  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  9236  001F66  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  9237  001F6A  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  9238  001F6E  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  9239  001F72  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  9240  001F76  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  9241  001F7A  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  9242  001F7E  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  9243                           
  9244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9245  001F82  0E00               	movlw	0
  9246  001F84  0100               	movlb	0	; () banked
  9247  001F86  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  9248  001F88  0E1F               	movlw	31
  9249  001F8A  6FC2               	movwf	xtoa@i& (0+255),b
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9253  001F8C  0E00               	movlw	0
  9254  001F8E  0102               	movlb	2	; () banked
  9255  001F90  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9256                           
  9257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9258  001F92  D094               	goto	l6728
  9259  001F94                     l6698:
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9263  001F94  07C2               	decf	xtoa@i& (0+255),f,b
  9264  001F96  A0D8               	btfss	status,0,c
  9265  001F98  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9269  001F9A  0E0F               	movlw	15
  9270  001F9C  15BA               	andwf	xtoa@n& (0+255),w,b
  9271  001F9E  6FC4               	movwf	xtoa@c& (0+255),b
  9272  001FA0  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9276  001FA2  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  9277  001FA4  D008               	goto	l6706
  9278  001FA6  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  9279  001FA8  E104               	bnz	u7170
  9280  001FAA  0E0A               	movlw	10
  9281  001FAC  5DC4               	subwf	xtoa@c& (0+255),w,b
  9282  001FAE  A0D8               	btfss	status,0,c
  9283  001FB0  D002               	goto	l6706
  9284  001FB2                     u7170:
  9285                           
  9286                           ; BSR set to: 0
  9287  001FB2  0E57               	movlw	87
  9288  001FB4  D001               	goto	L4
  9289  001FB6                     l6706:
  9290                           
  9291                           ; BSR set to: 0
  9292  001FB6  0E30               	movlw	48
  9293  001FB8                     L4:
  9294  001FB8  25C4               	addwf	xtoa@c& (0+255),w,b
  9295  001FBA  6FC4               	movwf	xtoa@c& (0+255),b
  9296  001FBC  0E00               	movlw	0
  9297  001FBE  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  9298  001FC0  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  9299                           
  9300                           ; BSR set to: 0
  9301                           
  9302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9303  001FC2  0EBF               	movlw	191
  9304  001FC4  6FAA               	movwf	??_xtoa& (0+255),b
  9305  001FC6  0EFF               	movlw	255
  9306  001FC8  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9307  001FCA  51A9               	movf	xtoa@x& (0+255),w,b
  9308  001FCC  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9309  001FCE  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  9310  001FD0  51AA               	movf	??_xtoa& (0+255),w,b
  9311  001FD2  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9312  001FD4  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9313  001FD6  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9314  001FD8  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9315  001FDA  E106               	bnz	u7180
  9316  001FDC  0E1A               	movlw	26
  9317  001FDE  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9318  001FE0  B0D8               	btfsc	status,0,c
  9319  001FE2  D002               	goto	u7180
  9320  001FE4  0E01               	movlw	1
  9321  001FE6  D001               	goto	u7190
  9322  001FE8                     u7180:
  9323  001FE8  0E00               	movlw	0
  9324  001FEA                     u7190:
  9325  001FEA  6FB2               	movwf	_xtoa$1116& (0+255),b
  9326  001FEC  6BB3               	clrf	(_xtoa$1116+1)& (0+255),b
  9327                           
  9328                           ; BSR set to: 0
  9329  001FEE  51B2               	movf	_xtoa$1116& (0+255),w,b
  9330  001FF0  11B3               	iorwf	(_xtoa$1116+1)& (0+255),w,b
  9331  001FF2  B4D8               	btfsc	status,2,c
  9332  001FF4  D027               	goto	l6720
  9333                           
  9334                           ; BSR set to: 0
  9335  001FF6  0E9F               	movlw	159
  9336  001FF8  6FAA               	movwf	??_xtoa& (0+255),b
  9337  001FFA  0EFF               	movlw	255
  9338  001FFC  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9339  001FFE  0E20               	movlw	32
  9340  002000  11C4               	iorwf	xtoa@c& (0+255),w,b
  9341  002002  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9342  002004  0E00               	movlw	0
  9343  002006  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  9344  002008  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  9345  00200A  51AA               	movf	??_xtoa& (0+255),w,b
  9346  00200C  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9347  00200E  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9348  002010  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9349  002012  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9350  002014  E106               	bnz	u7210
  9351  002016  0E1A               	movlw	26
  9352  002018  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9353  00201A  B0D8               	btfsc	status,0,c
  9354  00201C  D002               	goto	u7210
  9355  00201E  0E01               	movlw	1
  9356  002020  D001               	goto	u7220
  9357  002022                     u7210:
  9358  002022  0E00               	movlw	0
  9359  002024                     u7220:
  9360  002024  6FB4               	movwf	_xtoa$1117& (0+255),b
  9361  002026  6BB5               	clrf	(_xtoa$1117+1)& (0+255),b
  9362                           
  9363                           ; BSR set to: 0
  9364  002028  51B4               	movf	_xtoa$1117& (0+255),w,b
  9365  00202A  11B5               	iorwf	(_xtoa$1117+1)& (0+255),w,b
  9366  00202C  B4D8               	btfsc	status,2,c
  9367  00202E  D00A               	goto	l6720
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9371  002030  C0C4  F086         	movff	xtoa@c,toupper@c
  9372  002034  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  9373  002038  EC1B  F01D         	call	_toupper	;wreg free
  9374  00203C  C086  F0C4         	movff	?_toupper,xtoa@c
  9375  002040  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  9376  002044                     l6720:
  9377                           
  9378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9379  002044  0E80               	movlw	low _dbuf
  9380  002046  0100               	movlb	0	; () banked
  9381  002048  25C2               	addwf	xtoa@i& (0+255),w,b
  9382  00204A  6ED9               	movwf	fsr2l,c
  9383  00204C  0E02               	movlw	high _dbuf
  9384  00204E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9385  002050  6EDA               	movwf	fsr2h,c
  9386  002052  C0C4  FFDF         	movff	xtoa@c,indf2
  9387                           
  9388                           ; BSR set to: 0
  9389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9390  002056  07B6               	decf	xtoa@p& (0+255),f,b
  9391  002058  A0D8               	btfss	status,0,c
  9392  00205A  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9396  00205C  07B8               	decf	xtoa@w& (0+255),f,b
  9397  00205E  A0D8               	btfss	status,0,c
  9398  002060  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9402  002062  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  9403  002066  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  9404  00206A  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  9405  00206E  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  9406  002072  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  9407  002076  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  9408  00207A  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  9409  00207E  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  9410  002082  0E05               	movlw	5
  9411  002084  D009               	goto	u7240
  9412  002086                     u7245:
  9413  002086  90D8               	bcf	status,0,c
  9414  002088  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  9415  00208A  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  9416  00208C  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  9417  00208E  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  9418  002090  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  9419  002092  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  9420  002094  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  9421  002096  33AA               	rrcf	??_xtoa& (0+255),f,b
  9422  002098                     u7240:
  9423  002098  2EE8               	decfsz	wreg,f,c
  9424  00209A  D7F5               	goto	u7245
  9425  00209C  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  9426  0020A0  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  9427  0020A4  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  9428  0020A8  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  9429  0020AC  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  9430  0020B0  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  9431  0020B4  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  9432  0020B8  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  9433  0020BC                     l6728:
  9434                           
  9435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9436  0020BC  0100               	movlb	0	; () banked
  9437  0020BE  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  9438  0020C0  D020               	goto	u7290
  9439  0020C2  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  9440  0020C4  E104               	bnz	u7250
  9441  0020C6  0E02               	movlw	2
  9442  0020C8  5DC2               	subwf	xtoa@i& (0+255),w,b
  9443  0020CA  A0D8               	btfss	status,0,c
  9444  0020CC  D01A               	goto	u7290
  9445  0020CE                     u7250:
  9446                           
  9447                           ; BSR set to: 0
  9448  0020CE  51BA               	movf	xtoa@n& (0+255),w,b
  9449  0020D0  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  9450  0020D2  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  9451  0020D4  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  9452  0020D6  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  9453  0020D8  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  9454  0020DA  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  9455  0020DC  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  9456  0020DE  A4D8               	btfss	status,2,c
  9457  0020E0  D759               	goto	l6698
  9458                           
  9459                           ; BSR set to: 0
  9460  0020E2  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9461  0020E4  D005               	goto	u7270
  9462  0020E6  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9463  0020E8  E102               	bnz	u7271
  9464  0020EA  05B6               	decf	xtoa@p& (0+255),w,b
  9465  0020EC  B0D8               	btfsc	status,0,c
  9466  0020EE                     u7271:
  9467  0020EE  D752               	goto	l6698
  9468  0020F0                     u7270:
  9469                           
  9470                           ; BSR set to: 0
  9471  0020F0  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9472  0020F2  D007               	goto	u7290
  9473  0020F4  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9474  0020F6  E103               	bnz	u7280
  9475  0020F8  05B8               	decf	xtoa@w& (0+255),w,b
  9476  0020FA  A0D8               	btfss	status,0,c
  9477  0020FC  D002               	goto	u7290
  9478  0020FE                     u7280:
  9479                           
  9480                           ; BSR set to: 0
  9481  0020FE  B24E               	btfsc	_flags,1,c
  9482  002100  D749               	goto	l6698
  9483  002102                     u7290:
  9484                           
  9485                           ; BSR set to: 0
  9486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9487  002102  A84E               	btfss	_flags,4,c
  9488  002104  D016               	goto	l6744
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9492  002106  07C2               	decf	xtoa@i& (0+255),f,b
  9493  002108  A0D8               	btfss	status,0,c
  9494  00210A  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9498  00210C  0E80               	movlw	low _dbuf
  9499  00210E  25C2               	addwf	xtoa@i& (0+255),w,b
  9500  002110  6ED9               	movwf	fsr2l,c
  9501  002112  0E02               	movlw	high _dbuf
  9502  002114  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9503  002116  6EDA               	movwf	fsr2h,c
  9504  002118  C0A9  FFDF         	movff	xtoa@x,indf2
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9508  00211C  07C2               	decf	xtoa@i& (0+255),f,b
  9509  00211E  A0D8               	btfss	status,0,c
  9510  002120  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9511                           
  9512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9513  002122  0E80               	movlw	low _dbuf
  9514  002124  25C2               	addwf	xtoa@i& (0+255),w,b
  9515  002126  6ED9               	movwf	fsr2l,c
  9516  002128  0E02               	movlw	high _dbuf
  9517  00212A  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9518  00212C  6EDA               	movwf	fsr2h,c
  9519  00212E  0E30               	movlw	48
  9520  002130  6EDF               	movwf	indf2,c
  9521  002132                     l6744:
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9525  002132  C09F  F094         	movff	xtoa@fp,pad@fp
  9526  002136  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9527  00213A  0E80               	movlw	low _dbuf
  9528  00213C  25C2               	addwf	xtoa@i& (0+255),w,b
  9529  00213E  6F96               	movwf	pad@buf& (0+255),b
  9530  002140  0E02               	movlw	high _dbuf
  9531  002142  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9532  002144  6F97               	movwf	(pad@buf+1)& (0+255),b
  9533  002146  C0B8  F098         	movff	xtoa@w,pad@p
  9534  00214A  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9535  00214E  EC75  F01A         	call	_pad	;wreg free
  9536  002152  C094  F09F         	movff	?_pad,?_xtoa
  9537  002156  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9538  00215A  0012               	return		;funcret
  9539  00215C                     __end_of_xtoa:
  9540                           	opt callstack 0
  9541                           
  9542 ;; *************** function _toupper *****************
  9543 ;; Defined at:
  9544 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  c               2    6[BANK0 ] int 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  2    6[BANK0 ] int 
  9551 ;; Registers used:
  9552 ;;		wreg, status,2, status,0
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9559 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;Total ram usage:        8 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    4
  9565 ;; This function calls:
  9566 ;;		_islower
  9567 ;; This function is called by:
  9568 ;;		_xtoa
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text24
  9573  003A36                     __ptext24:
  9574                           	opt callstack 0
  9575  003A36                     _toupper:
  9576                           	opt callstack 21
  9577                           
  9578                           ;incstack = 0
  9579  003A36  0E9F               	movlw	159
  9580  003A38  0100               	movlb	0	; () banked
  9581  003A3A  6F88               	movwf	??_toupper& (0+255),b
  9582  003A3C  0EFF               	movlw	255
  9583  003A3E  6F89               	movwf	(??_toupper+1)& (0+255),b
  9584  003A40  C086  F08A         	movff	toupper@c,??_toupper+2
  9585  003A44  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9586  003A48  5188               	movf	??_toupper& (0+255),w,b
  9587  003A4A  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9588  003A4C  5189               	movf	(??_toupper+1)& (0+255),w,b
  9589  003A4E  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9590  003A50  518B               	movf	(??_toupper+3)& (0+255),w,b
  9591  003A52  E106               	bnz	u6790
  9592  003A54  0E1A               	movlw	26
  9593  003A56  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9594  003A58  B0D8               	btfsc	status,0,c
  9595  003A5A  D002               	goto	u6790
  9596  003A5C  0E01               	movlw	1
  9597  003A5E  D001               	goto	u6800
  9598  003A60                     u6790:
  9599  003A60  0E00               	movlw	0
  9600  003A62                     u6800:
  9601  003A62  6F8C               	movwf	_toupper$1681& (0+255),b
  9602  003A64  6B8D               	clrf	(_toupper$1681+1)& (0+255),b
  9603                           
  9604                           ; BSR set to: 0
  9605  003A66  518C               	movf	_toupper$1681& (0+255),w,b
  9606  003A68  118D               	iorwf	(_toupper$1681+1)& (0+255),w,b
  9607  003A6A  B4D8               	btfsc	status,2,c
  9608  003A6C  D005               	goto	l1474
  9609                           
  9610                           ; BSR set to: 0
  9611  003A6E  0E5F               	movlw	95
  9612  003A70  1586               	andwf	toupper@c& (0+255),w,b
  9613  003A72  6F86               	movwf	?_toupper& (0+255),b
  9614  003A74  6B87               	clrf	(?_toupper+1)& (0+255),b
  9615  003A76  0012               	return	
  9616  003A78                     l1474:
  9617                           
  9618                           ; BSR set to: 0
  9619  003A78  C086  F086         	movff	toupper@c,?_toupper
  9620  003A7C  C087  F087         	movff	toupper@c+1,?_toupper+1
  9621                           
  9622                           ; BSR set to: 0
  9623  003A80  0012               	return		;funcret
  9624  003A82                     __end_of_toupper:
  9625                           	opt callstack 0
  9626                           
  9627 ;; *************** function _islower *****************
  9628 ;; Defined at:
  9629 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  c               2    0[BANK0 ] int 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  2    0[BANK0 ] int 
  9636 ;; Registers used:
  9637 ;;		wreg, status,2, status,0
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;Total ram usage:        6 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:    3
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_toupper
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text25
  9658  003BD8                     __ptext25:
  9659                           	opt callstack 0
  9660  003BD8                     _islower:
  9661                           	opt callstack 21
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;incstack = 0
  9665  003BD8  0E9F               	movlw	159
  9666  003BDA  0100               	movlb	0	; () banked
  9667  003BDC  6F82               	movwf	??_islower& (0+255),b
  9668  003BDE  0EFF               	movlw	255
  9669  003BE0  6F83               	movwf	(??_islower+1)& (0+255),b
  9670  003BE2  C080  F084         	movff	islower@c,??_islower+2
  9671  003BE6  C081  F085         	movff	islower@c+1,??_islower+3
  9672  003BEA  5182               	movf	??_islower& (0+255),w,b
  9673  003BEC  2784               	addwf	(??_islower+2)& (0+255),f,b
  9674  003BEE  5183               	movf	(??_islower+1)& (0+255),w,b
  9675  003BF0  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9676  003BF2  5185               	movf	(??_islower+3)& (0+255),w,b
  9677  003BF4  E106               	bnz	u6680
  9678  003BF6  0E1A               	movlw	26
  9679  003BF8  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9680  003BFA  B0D8               	btfsc	status,0,c
  9681  003BFC  D002               	goto	u6680
  9682  003BFE  0E01               	movlw	1
  9683  003C00  D001               	goto	u6690
  9684  003C02                     u6680:
  9685  003C02  0E00               	movlw	0
  9686  003C04                     u6690:
  9687  003C04  6F80               	movwf	?_islower& (0+255),b
  9688  003C06  6B81               	clrf	(?_islower+1)& (0+255),b
  9689                           
  9690                           ; BSR set to: 0
  9691  003C08  0012               	return		;funcret
  9692  003C0A                     __end_of_islower:
  9693                           	opt callstack 0
  9694                           
  9695 ;; *************** function _isupper *****************
  9696 ;; Defined at:
  9697 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  c               2    0[BANK0 ] int 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;		None
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  2    0[BANK0 ] int 
  9704 ;; Registers used:
  9705 ;;		wreg, status,2, status,0
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9713 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9714 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9715 ;;Total ram usage:        6 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    3
  9718 ;; This function calls:
  9719 ;;		Nothing
  9720 ;; This function is called by:
  9721 ;;		_xtoa
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text26
  9726  003C0A                     __ptext26:
  9727                           	opt callstack 0
  9728  003C0A                     _isupper:
  9729                           	opt callstack 22
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;incstack = 0
  9733  003C0A  0EBF               	movlw	191
  9734  003C0C  0100               	movlb	0	; () banked
  9735  003C0E  6F82               	movwf	??_isupper& (0+255),b
  9736  003C10  0EFF               	movlw	255
  9737  003C12  6F83               	movwf	(??_isupper+1)& (0+255),b
  9738  003C14  C080  F084         	movff	isupper@c,??_isupper+2
  9739  003C18  C081  F085         	movff	isupper@c+1,??_isupper+3
  9740  003C1C  5182               	movf	??_isupper& (0+255),w,b
  9741  003C1E  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9742  003C20  5183               	movf	(??_isupper+1)& (0+255),w,b
  9743  003C22  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9744  003C24  5185               	movf	(??_isupper+3)& (0+255),w,b
  9745  003C26  E106               	bnz	u6750
  9746  003C28  0E1A               	movlw	26
  9747  003C2A  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9748  003C2C  B0D8               	btfsc	status,0,c
  9749  003C2E  D002               	goto	u6750
  9750  003C30  0E01               	movlw	1
  9751  003C32  D001               	goto	u6760
  9752  003C34                     u6750:
  9753  003C34  0E00               	movlw	0
  9754  003C36                     u6760:
  9755  003C36  6F80               	movwf	?_isupper& (0+255),b
  9756  003C38  6B81               	clrf	(?_isupper+1)& (0+255),b
  9757                           
  9758                           ; BSR set to: 0
  9759  003C3A  0012               	return		;funcret
  9760  003C3C                     __end_of_isupper:
  9761                           	opt callstack 0
  9762                           
  9763 ;; *************** function _isalpha *****************
  9764 ;; Defined at:
  9765 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;  c               2    0[BANK0 ] int 
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  2    0[BANK0 ] int 
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, status,0
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9779 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;Total ram usage:        6 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    3
  9786 ;; This function calls:
  9787 ;;		Nothing
  9788 ;; This function is called by:
  9789 ;;		_xtoa
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           	psect	text27
  9794  003B3C                     __ptext27:
  9795                           	opt callstack 0
  9796  003B3C                     _isalpha:
  9797                           	opt callstack 22
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;incstack = 0
  9801  003B3C  0E9F               	movlw	159
  9802  003B3E  0100               	movlb	0	; () banked
  9803  003B40  6F82               	movwf	??_isalpha& (0+255),b
  9804  003B42  0EFF               	movlw	255
  9805  003B44  6F83               	movwf	(??_isalpha+1)& (0+255),b
  9806  003B46  0E20               	movlw	32
  9807  003B48  1180               	iorwf	isalpha@c& (0+255),w,b
  9808  003B4A  6F84               	movwf	(??_isalpha+2)& (0+255),b
  9809  003B4C  0E00               	movlw	0
  9810  003B4E  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
  9811  003B50  6F85               	movwf	(??_isalpha+3)& (0+255),b
  9812  003B52  5182               	movf	??_isalpha& (0+255),w,b
  9813  003B54  2784               	addwf	(??_isalpha+2)& (0+255),f,b
  9814  003B56  5183               	movf	(??_isalpha+1)& (0+255),w,b
  9815  003B58  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
  9816  003B5A  5185               	movf	(??_isalpha+3)& (0+255),w,b
  9817  003B5C  E106               	bnz	u6770
  9818  003B5E  0E1A               	movlw	26
  9819  003B60  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
  9820  003B62  B0D8               	btfsc	status,0,c
  9821  003B64  D002               	goto	u6770
  9822  003B66  0E01               	movlw	1
  9823  003B68  D001               	goto	u6780
  9824  003B6A                     u6770:
  9825  003B6A  0E00               	movlw	0
  9826  003B6C                     u6780:
  9827  003B6C  6F80               	movwf	?_isalpha& (0+255),b
  9828  003B6E  6B81               	clrf	(?_isalpha+1)& (0+255),b
  9829                           
  9830                           ; BSR set to: 0
  9831  003B70  0012               	return		;funcret
  9832  003B72                     __end_of_isalpha:
  9833                           	opt callstack 0
  9834                           
  9835 ;; *************** function _dtoa *****************
  9836 ;; Defined at:
  9837 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9840 ;;		 -> NULL(0), 
  9841 ;;  d               8   33[BANK0 ] long long 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;  n               8   57[BANK0 ] long long 
  9844 ;;  i               2   65[BANK0 ] int 
  9845 ;;  s               2   55[BANK0 ] int 
  9846 ;;  w               2   53[BANK0 ] int 
  9847 ;;  p               2   51[BANK0 ] int 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  2   31[BANK0 ] int 
  9850 ;; Registers used:
  9851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9857 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;Total ram usage:       36 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:   10
  9864 ;; This function calls:
  9865 ;;		___aodiv
  9866 ;;		___aomod
  9867 ;;		_abs
  9868 ;;		_pad
  9869 ;; This function is called by:
  9870 ;;		_vfpfcnvrt
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874                           	psect	text28
  9875  001CDE                     __ptext28:
  9876                           	opt callstack 0
  9877  001CDE                     _dtoa:
  9878                           	opt callstack 16
  9879                           
  9880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9881                           
  9882                           ; BSR set to: 0
  9883                           ;incstack = 0
  9884  001CDE  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  9885  001CE2  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  9886  001CE6  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  9887  001CEA  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  9888  001CEE  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  9889  001CF2  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  9890  001CF6  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  9891  001CFA  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  9892                           
  9893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9894  001CFE  0100               	movlb	0	; () banked
  9895  001D00  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  9896  001D02  D002               	goto	u6990
  9897  001D04  0E01               	movlw	1
  9898  001D06  D001               	goto	u7000
  9899  001D08                     u6990:
  9900  001D08  0E00               	movlw	0
  9901  001D0A                     u7000:
  9902  001D0A  6FB7               	movwf	dtoa@s& (0+255),b
  9903  001D0C  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  9904                           
  9905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9906  001D0E  51B7               	movf	dtoa@s& (0+255),w,b
  9907  001D10  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9908  001D12  B4D8               	btfsc	status,2,c
  9909  001D14  D010               	goto	l6626
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9913  001D16  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  9914  001D18  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  9915  001D1A  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  9916  001D1C  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  9917  001D1E  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  9918  001D20  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  9919  001D22  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  9920  001D24  6DB9               	negf	dtoa@n& (0+255),b
  9921  001D26  0E00               	movlw	0
  9922  001D28  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  9923  001D2A  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  9924  001D2C  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  9925  001D2E  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  9926  001D30  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  9927  001D32  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  9928  001D34  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  9929  001D36                     l6626:
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9933  001D36  AE4D               	btfss	_prec+1,7,c
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9937  001D38  924E               	bcf	_flags,1,c
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9941  001D3A  BE4D               	btfsc	_prec+1,7,c
  9942  001D3C  D005               	goto	u7030
  9943  001D3E  504D               	movf	_prec+1,w,c
  9944  001D40  E108               	bnz	l609
  9945  001D42  044C               	decf	_prec,w,c
  9946  001D44  B0D8               	btfsc	status,0,c
  9947  001D46  D005               	goto	l609
  9948  001D48                     u7030:
  9949                           
  9950                           ; BSR set to: 0
  9951  001D48  0E00               	movlw	0
  9952  001D4A  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  9953  001D4C  0E01               	movlw	1
  9954  001D4E  6FB3               	movwf	dtoa@p& (0+255),b
  9955  001D50  D004               	goto	l611
  9956  001D52                     l609:
  9957                           
  9958                           ; BSR set to: 0
  9959  001D52  C04C  F0B3         	movff	_prec,dtoa@p
  9960  001D56  C04D  F0B4         	movff	_prec+1,dtoa@p+1
  9961  001D5A                     l611:
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9965  001D5A  C04A  F0B5         	movff	_width,dtoa@w
  9966  001D5E  C04B  F0B6         	movff	_width+1,dtoa@w+1
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9970  001D62  51B7               	movf	dtoa@s& (0+255),w,b
  9971  001D64  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9972  001D66  A4D8               	btfss	status,2,c
  9973  001D68  D002               	goto	u7050
  9974                           
  9975                           ; BSR set to: 0
  9976  001D6A  A44E               	btfss	_flags,2,c
  9977  001D6C  D003               	goto	l6640
  9978  001D6E                     u7050:
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9982  001D6E  07B5               	decf	dtoa@w& (0+255),f,b
  9983  001D70  A0D8               	btfss	status,0,c
  9984  001D72  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9985  001D74                     l6640:
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9989  001D74  0E00               	movlw	0
  9990  001D76  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  9991  001D78  0E1F               	movlw	31
  9992  001D7A  6FC1               	movwf	dtoa@i& (0+255),b
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9996  001D7C  0E00               	movlw	0
  9997  001D7E  0102               	movlb	2	; () banked
  9998  001D80  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9999                           
 10000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10001  001D82  D07D               	goto	l6654
 10002  001D84                     l6644:
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10006  001D84  07C1               	decf	dtoa@i& (0+255),f,b
 10007  001D86  A0D8               	btfss	status,0,c
 10008  001D88  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10012  001D8A  0E80               	movlw	low _dbuf
 10013  001D8C  25C1               	addwf	dtoa@i& (0+255),w,b
 10014  001D8E  6ED9               	movwf	fsr2l,c
 10015  001D90  0E02               	movlw	high _dbuf
 10016  001D92  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10017  001D94  6EDA               	movwf	fsr2h,c
 10018  001D96  C0B9  F080         	movff	dtoa@n,___aomod@dividend
 10019  001D9A  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
 10020  001D9E  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
 10021  001DA2  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
 10022  001DA6  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
 10023  001DAA  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
 10024  001DAE  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
 10025  001DB2  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
 10026  001DB6  0E0A               	movlw	10
 10027  001DB8  6F88               	movwf	___aomod@divisor& (0+255),b
 10028  001DBA  0E00               	movlw	0
 10029  001DBC  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
 10030  001DBE  0E00               	movlw	0
 10031  001DC0  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
 10032  001DC2  0E00               	movlw	0
 10033  001DC4  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
 10034  001DC6  0E00               	movlw	0
 10035  001DC8  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
 10036  001DCA  0E00               	movlw	0
 10037  001DCC  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
 10038  001DCE  0E00               	movlw	0
 10039  001DD0  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
 10040  001DD2  0E00               	movlw	0
 10041  001DD4  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
 10042  001DD6  EC0D  F016         	call	___aomod	;wreg free
 10043  001DDA  C080  F0A9         	movff	?___aomod,??_dtoa
 10044  001DDE  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
 10045  001DE2  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
 10046  001DE6  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
 10047  001DEA  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
 10048  001DEE  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
 10049  001DF2  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
 10050  001DF6  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
 10051  001DFA  C0A9  F092         	movff	??_dtoa,abs@a
 10052  001DFE  C0AB  F093         	movff	??_dtoa+2,abs@a+1
 10053  001E02  ECB9  F01D         	call	_abs	;wreg free
 10054  001E06  0100               	movlb	0	; () banked
 10055  001E08  5192               	movf	?_abs& (0+255),w,b
 10056  001E0A  0F30               	addlw	48
 10057  001E0C  6EDF               	movwf	indf2,c
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10061  001E0E  07B3               	decf	dtoa@p& (0+255),f,b
 10062  001E10  A0D8               	btfss	status,0,c
 10063  001E12  07B4               	decf	(dtoa@p+1)& (0+255),f,b
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10067  001E14  07B5               	decf	dtoa@w& (0+255),f,b
 10068  001E16  A0D8               	btfss	status,0,c
 10069  001E18  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10073  001E1A  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
 10074  001E1E  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
 10075  001E22  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
 10076  001E26  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
 10077  001E2A  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
 10078  001E2E  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
 10079  001E32  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
 10080  001E36  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
 10081  001E3A  0E0A               	movlw	10
 10082  001E3C  6F88               	movwf	___aodiv@divisor& (0+255),b
 10083  001E3E  0E00               	movlw	0
 10084  001E40  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
 10085  001E42  0E00               	movlw	0
 10086  001E44  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
 10087  001E46  0E00               	movlw	0
 10088  001E48  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
 10089  001E4A  0E00               	movlw	0
 10090  001E4C  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
 10091  001E4E  0E00               	movlw	0
 10092  001E50  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
 10093  001E52  0E00               	movlw	0
 10094  001E54  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
 10095  001E56  0E00               	movlw	0
 10096  001E58  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
 10097  001E5A  EC8B  F013         	call	___aodiv	;wreg free
 10098  001E5E  C080  F0B9         	movff	?___aodiv,dtoa@n
 10099  001E62  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
 10100  001E66  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
 10101  001E6A  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
 10102  001E6E  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
 10103  001E72  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
 10104  001E76  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
 10105  001E7A  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
 10106  001E7E                     l6654:
 10107                           
 10108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10109  001E7E  0100               	movlb	0	; () banked
 10110  001E80  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
 10111  001E82  D01F               	goto	u7100
 10112  001E84  51C2               	movf	(dtoa@i+1)& (0+255),w,b
 10113  001E86  E103               	bnz	u7060
 10114  001E88  05C1               	decf	dtoa@i& (0+255),w,b
 10115  001E8A  A0D8               	btfss	status,0,c
 10116  001E8C  D01A               	goto	u7100
 10117  001E8E                     u7060:
 10118                           
 10119                           ; BSR set to: 0
 10120  001E8E  51B9               	movf	dtoa@n& (0+255),w,b
 10121  001E90  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
 10122  001E92  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
 10123  001E94  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
 10124  001E96  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
 10125  001E98  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
 10126  001E9A  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
 10127  001E9C  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
 10128  001E9E  A4D8               	btfss	status,2,c
 10129  001EA0  D771               	goto	l6644
 10130                           
 10131                           ; BSR set to: 0
 10132  001EA2  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
 10133  001EA4  D005               	goto	u7080
 10134  001EA6  51B4               	movf	(dtoa@p+1)& (0+255),w,b
 10135  001EA8  E102               	bnz	u7081
 10136  001EAA  05B3               	decf	dtoa@p& (0+255),w,b
 10137  001EAC  B0D8               	btfsc	status,0,c
 10138  001EAE                     u7081:
 10139  001EAE  D76A               	goto	l6644
 10140  001EB0                     u7080:
 10141                           
 10142                           ; BSR set to: 0
 10143  001EB0  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
 10144  001EB2  D007               	goto	u7100
 10145  001EB4  51B6               	movf	(dtoa@w+1)& (0+255),w,b
 10146  001EB6  E103               	bnz	u7090
 10147  001EB8  05B5               	decf	dtoa@w& (0+255),w,b
 10148  001EBA  A0D8               	btfss	status,0,c
 10149  001EBC  D002               	goto	u7100
 10150  001EBE                     u7090:
 10151                           
 10152                           ; BSR set to: 0
 10153  001EBE  B24E               	btfsc	_flags,1,c
 10154  001EC0  D761               	goto	l6644
 10155  001EC2                     u7100:
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10159  001EC2  51B7               	movf	dtoa@s& (0+255),w,b
 10160  001EC4  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10161  001EC6  A4D8               	btfss	status,2,c
 10162  001EC8  D002               	goto	u7120
 10163                           
 10164                           ; BSR set to: 0
 10165  001ECA  A44E               	btfss	_flags,2,c
 10166  001ECC  D017               	goto	l6678
 10167  001ECE                     u7120:
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10171  001ECE  07C1               	decf	dtoa@i& (0+255),f,b
 10172  001ED0  A0D8               	btfss	status,0,c
 10173  001ED2  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10177  001ED4  51B7               	movf	dtoa@s& (0+255),w,b
 10178  001ED6  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10179  001ED8  A4D8               	btfss	status,2,c
 10180  001EDA  D004               	goto	l6674
 10181                           
 10182                           ; BSR set to: 0
 10183  001EDC  0E00               	movlw	0
 10184  001EDE  6FB2               	movwf	(_dtoa$1105+1)& (0+255),b
 10185  001EE0  0E2B               	movlw	43
 10186  001EE2  D003               	goto	L5
 10187  001EE4                     l6674:
 10188                           
 10189                           ; BSR set to: 0
 10190  001EE4  0E00               	movlw	0
 10191  001EE6  6FB2               	movwf	(_dtoa$1105+1)& (0+255),b
 10192  001EE8  0E2D               	movlw	45
 10193  001EEA                     L5:
 10194  001EEA  6FB1               	movwf	_dtoa$1105& (0+255),b
 10195                           
 10196                           ; BSR set to: 0
 10197  001EEC  0E80               	movlw	low _dbuf
 10198  001EEE  25C1               	addwf	dtoa@i& (0+255),w,b
 10199  001EF0  6ED9               	movwf	fsr2l,c
 10200  001EF2  0E02               	movlw	high _dbuf
 10201  001EF4  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10202  001EF6  6EDA               	movwf	fsr2h,c
 10203  001EF8  C0B1  FFDF         	movff	_dtoa$1105,indf2
 10204  001EFC                     l6678:
 10205                           
 10206                           ; BSR set to: 0
 10207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10208  001EFC  C09F  F094         	movff	dtoa@fp,pad@fp
 10209  001F00  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
 10210  001F04  0E80               	movlw	low _dbuf
 10211  001F06  25C1               	addwf	dtoa@i& (0+255),w,b
 10212  001F08  6F96               	movwf	pad@buf& (0+255),b
 10213  001F0A  0E02               	movlw	high _dbuf
 10214  001F0C  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10215  001F0E  6F97               	movwf	(pad@buf+1)& (0+255),b
 10216  001F10  C0B5  F098         	movff	dtoa@w,pad@p
 10217  001F14  C0B6  F099         	movff	dtoa@w+1,pad@p+1
 10218  001F18  EC75  F01A         	call	_pad	;wreg free
 10219  001F1C  C094  F09F         	movff	?_pad,?_dtoa
 10220  001F20  C095  F0A0         	movff	?_pad+1,?_dtoa+1
 10221  001F24  0012               	return		;funcret
 10222  001F26                     __end_of_dtoa:
 10223                           	opt callstack 0
 10224                           
 10225 ;; *************** function _pad *****************
 10226 ;; Defined at:
 10227 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
 10230 ;;		 -> NULL(0), 
 10231 ;;  buf             2   22[BANK0 ] PTR unsigned char 
 10232 ;;		 -> dbuf(32), 
 10233 ;;  p               2   24[BANK0 ] int 
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;  w               2   29[BANK0 ] int 
 10236 ;;  i               2   27[BANK0 ] int 
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  2   20[BANK0 ] int 
 10239 ;; Registers used:
 10240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10246 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10247 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10248 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10249 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10250 ;;Total ram usage:       11 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:    9
 10253 ;; This function calls:
 10254 ;;		_fputc
 10255 ;;		_fputs
 10256 ;;		_strlen
 10257 ;; This function is called by:
 10258 ;;		_dtoa
 10259 ;;		_xtoa
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263                           	psect	text29
 10264  0034EA                     __ptext29:
 10265                           	opt callstack 0
 10266  0034EA                     _pad:
 10267                           	opt callstack 16
 10268                           
 10269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10270                           
 10271                           ;incstack = 0
 10272  0034EA  A04E               	btfss	_flags,0,c
 10273  0034EC  D00A               	goto	l6482
 10274                           
 10275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10276  0034EE  C096  F08D         	movff	pad@buf,fputs@s
 10277  0034F2  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10278  0034F6  C094  F08F         	movff	pad@fp,fputs@fp
 10279  0034FA  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10280  0034FE  EC80  F01D         	call	_fputs	;wreg free
 10281  003502                     l6482:
 10282                           
 10283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10284  003502  0100               	movlb	0	; () banked
 10285  003504  BF99               	btfsc	(pad@p+1)& (0+255),7,b
 10286  003506  D005               	goto	l6486
 10287                           
 10288                           ; BSR set to: 0
 10289  003508  C098  F09D         	movff	pad@p,pad@w
 10290  00350C  C099  F09E         	movff	pad@p+1,pad@w+1
 10291  003510  D004               	goto	l598
 10292  003512                     l6486:
 10293                           
 10294                           ; BSR set to: 0
 10295  003512  0E00               	movlw	0
 10296  003514  6F9E               	movwf	(pad@w+1)& (0+255),b
 10297  003516  0E00               	movlw	0
 10298  003518  6F9D               	movwf	pad@w& (0+255),b
 10299  00351A                     l598:
 10300                           
 10301                           ; BSR set to: 0
 10302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10303  00351A  0E00               	movlw	0
 10304  00351C  6F9C               	movwf	(pad@i+1)& (0+255),b
 10305  00351E  0E00               	movlw	0
 10306  003520  6F9B               	movwf	pad@i& (0+255),b
 10307                           
 10308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10309  003522  D00D               	goto	l6492
 10310  003524                     l6488:
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10314  003524  0E00               	movlw	0
 10315  003526  6F85               	movwf	(fputc@c+1)& (0+255),b
 10316  003528  0E20               	movlw	32
 10317  00352A  6F84               	movwf	fputc@c& (0+255),b
 10318  00352C  C094  F086         	movff	pad@fp,fputc@fp
 10319  003530  C095  F087         	movff	pad@fp+1,fputc@fp+1
 10320  003534  EC01  F01C         	call	_fputc	;wreg free
 10321                           
 10322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10323  003538  0100               	movlb	0	; () banked
 10324  00353A  4B9B               	infsnz	pad@i& (0+255),f,b
 10325  00353C  2B9C               	incf	(pad@i+1)& (0+255),f,b
 10326  00353E                     l6492:
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10330  00353E  519D               	movf	pad@w& (0+255),w,b
 10331  003540  5D9B               	subwf	pad@i& (0+255),w,b
 10332  003542  519C               	movf	(pad@i+1)& (0+255),w,b
 10333  003544  0A80               	xorlw	128
 10334  003546  6F9A               	movwf	??_pad& (0+255),b
 10335  003548  519E               	movf	(pad@w+1)& (0+255),w,b
 10336  00354A  0A80               	xorlw	128
 10337  00354C  599A               	subwfb	??_pad& (0+255),w,b
 10338  00354E  A0D8               	btfss	status,0,c
 10339  003550  D7E9               	goto	l6488
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10343  003552  B04E               	btfsc	_flags,0,c
 10344  003554  D00A               	goto	l6496
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10348  003556  C096  F08D         	movff	pad@buf,fputs@s
 10349  00355A  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10350  00355E  C094  F08F         	movff	pad@fp,fputs@fp
 10351  003562  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10352  003566  EC80  F01D         	call	_fputs	;wreg free
 10353  00356A                     l6496:
 10354                           
 10355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10356  00356A  C096  F080         	movff	pad@buf,strlen@s
 10357  00356E  C097  F081         	movff	pad@buf+1,strlen@s+1
 10358  003572  EC37  F01E         	call	_strlen	;wreg free
 10359  003576  0100               	movlb	0	; () banked
 10360  003578  519D               	movf	pad@w& (0+255),w,b
 10361  00357A  2580               	addwf	?_strlen& (0+255),w,b
 10362  00357C  6F94               	movwf	?_pad& (0+255),b
 10363  00357E  519E               	movf	(pad@w+1)& (0+255),w,b
 10364  003580  2181               	addwfc	(?_strlen+1)& (0+255),w,b
 10365  003582  6F95               	movwf	(?_pad+1)& (0+255),b
 10366                           
 10367                           ; BSR set to: 0
 10368  003584  0012               	return		;funcret
 10369  003586                     __end_of_pad:
 10370                           	opt callstack 0
 10371                           
 10372 ;; *************** function _strlen *****************
 10373 ;; Defined at:
 10374 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10375 ;; Parameters:    Size  Location     Type
 10376 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 10377 ;;		 -> dbuf(32), 
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 10380 ;;		 -> dbuf(32), 
 10381 ;; Return value:  Size  Location     Type
 10382 ;;                  2    0[BANK0 ] unsigned int 
 10383 ;; Registers used:
 10384 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10385 ;; Tracked objects:
 10386 ;;		On entry : 0/0
 10387 ;;		On exit  : 0/0
 10388 ;;		Unchanged: 0/0
 10389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10391 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;Total ram usage:        4 bytes
 10395 ;; Hardware stack levels used:    1
 10396 ;; Hardware stack levels required when called:    3
 10397 ;; This function calls:
 10398 ;;		Nothing
 10399 ;; This function is called by:
 10400 ;;		_pad
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           	psect	text30
 10405  003C6E                     __ptext30:
 10406                           	opt callstack 0
 10407  003C6E                     _strlen:
 10408                           	opt callstack 21
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;incstack = 0
 10412  003C6E  C080  F082         	movff	strlen@s,strlen@a
 10413  003C72  C081  F083         	movff	strlen@s+1,strlen@a+1
 10414  003C76  D003               	goto	l6464
 10415  003C78                     l6462:
 10416  003C78  0100               	movlb	0	; () banked
 10417  003C7A  4B80               	infsnz	strlen@s& (0+255),f,b
 10418  003C7C  2B81               	incf	(strlen@s+1)& (0+255),f,b
 10419  003C7E                     l6464:
 10420  003C7E  C080  FFD9         	movff	strlen@s,fsr2l
 10421  003C82  C081  FFDA         	movff	strlen@s+1,fsr2h
 10422  003C86  50DF               	movf	indf2,w,c
 10423  003C88  A4D8               	btfss	status,2,c
 10424  003C8A  D7F6               	goto	l6462
 10425  003C8C  0100               	movlb	0	; () banked
 10426  003C8E  5182               	movf	strlen@a& (0+255),w,b
 10427  003C90  5D80               	subwf	strlen@s& (0+255),w,b
 10428  003C92  6F80               	movwf	?_strlen& (0+255),b
 10429  003C94  5183               	movf	(strlen@a+1)& (0+255),w,b
 10430  003C96  5981               	subwfb	(strlen@s+1)& (0+255),w,b
 10431  003C98  6F81               	movwf	(?_strlen+1)& (0+255),b
 10432                           
 10433                           ; BSR set to: 0
 10434  003C9A  0012               	return		;funcret
 10435  003C9C                     __end_of_strlen:
 10436                           	opt callstack 0
 10437                           
 10438 ;; *************** function _fputs *****************
 10439 ;; Defined at:
 10440 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 10443 ;;		 -> dbuf(32), 
 10444 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 10445 ;;		 -> NULL(0), 
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;  i               2   18[BANK0 ] int 
 10448 ;;  c               1   17[BANK0 ] unsigned char 
 10449 ;; Return value:  Size  Location     Type
 10450 ;;                  2   13[BANK0 ] int 
 10451 ;; Registers used:
 10452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10459 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;Total ram usage:        7 bytes
 10463 ;; Hardware stack levels used:    1
 10464 ;; Hardware stack levels required when called:    8
 10465 ;; This function calls:
 10466 ;;		_fputc
 10467 ;; This function is called by:
 10468 ;;		_pad
 10469 ;; This function uses a non-reentrant model
 10470 ;;
 10471                           
 10472                           	psect	text31
 10473  003B00                     __ptext31:
 10474                           	opt callstack 0
 10475  003B00                     _fputs:
 10476                           	opt callstack 16
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;incstack = 0
 10480  003B00  0E00               	movlw	0
 10481  003B02  0100               	movlb	0	; () banked
 10482  003B04  6F93               	movwf	(fputs@i+1)& (0+255),b
 10483  003B06  0E00               	movlw	0
 10484  003B08  6F92               	movwf	fputs@i& (0+255),b
 10485  003B0A  D00C               	goto	l6458
 10486  003B0C                     l6454:
 10487                           
 10488                           ; BSR set to: 0
 10489  003B0C  C091  F084         	movff	fputs@c,fputc@c
 10490  003B10  6B85               	clrf	(fputc@c+1)& (0+255),b
 10491  003B12  C08F  F086         	movff	fputs@fp,fputc@fp
 10492  003B16  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10493  003B1A  EC01  F01C         	call	_fputc	;wreg free
 10494  003B1E  0100               	movlb	0	; () banked
 10495  003B20  4B92               	infsnz	fputs@i& (0+255),f,b
 10496  003B22  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10497  003B24                     l6458:
 10498                           
 10499                           ; BSR set to: 0
 10500  003B24  5192               	movf	fputs@i& (0+255),w,b
 10501  003B26  258D               	addwf	fputs@s& (0+255),w,b
 10502  003B28  6ED9               	movwf	fsr2l,c
 10503  003B2A  5193               	movf	(fputs@i+1)& (0+255),w,b
 10504  003B2C  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10505  003B2E  6EDA               	movwf	fsr2h,c
 10506  003B30  50DF               	movf	indf2,w,c
 10507  003B32  6F91               	movwf	fputs@c& (0+255),b
 10508  003B34  5191               	movf	fputs@c& (0+255),w,b
 10509  003B36  B4D8               	btfsc	status,2,c
 10510  003B38  0012               	return	
 10511  003B3A  D7E8               	goto	l6454
 10512  003B3C                     __end_of_fputs:
 10513                           	opt callstack 0
 10514                           
 10515 ;; *************** function _fputc *****************
 10516 ;; Defined at:
 10517 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  c               2    4[BANK0 ] int 
 10520 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10521 ;;		 -> NULL(0), 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;		None
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  2    4[BANK0 ] int 
 10526 ;; Registers used:
 10527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10533 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10536 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10537 ;;Total ram usage:        9 bytes
 10538 ;; Hardware stack levels used:    1
 10539 ;; Hardware stack levels required when called:    7
 10540 ;; This function calls:
 10541 ;;		_putch
 10542 ;; This function is called by:
 10543 ;;		_pad
 10544 ;;		_vfpfcnvrt
 10545 ;;		_fputs
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           	psect	text32
 10550  003802                     __ptext32:
 10551                           	opt callstack 0
 10552  003802                     _fputc:
 10553                           	opt callstack 16
 10554                           
 10555                           ; BSR set to: 0
 10556                           ;incstack = 0
 10557  003802  0100               	movlb	0	; () banked
 10558  003804  5186               	movf	fputc@fp& (0+255),w,b
 10559  003806  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10560  003808  B4D8               	btfsc	status,2,c
 10561  00380A  D004               	goto	u6630
 10562                           
 10563                           ; BSR set to: 0
 10564  00380C  5186               	movf	fputc@fp& (0+255),w,b
 10565  00380E  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10566  003810  A4D8               	btfss	status,2,c
 10567  003812  D004               	goto	l6444
 10568  003814                     u6630:
 10569                           
 10570                           ; BSR set to: 0
 10571  003814  5184               	movf	fputc@c& (0+255),w,b
 10572  003816  ECD8  F01E         	call	_putch
 10573  00381A  0012               	return	
 10574  00381C                     l6444:
 10575                           
 10576                           ; BSR set to: 0
 10577  00381C  EE20 F004          	lfsr	2,4
 10578  003820  5186               	movf	fputc@fp& (0+255),w,b
 10579  003822  26D9               	addwf	fsr2l,f,c
 10580  003824  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10581  003826  22DA               	addwfc	fsr2h,f,c
 10582  003828  50DE               	movf	postinc2,w,c
 10583  00382A  10DE               	iorwf	postinc2,w,c
 10584  00382C  B4D8               	btfsc	status,2,c
 10585  00382E  D016               	goto	u6650
 10586                           
 10587                           ; BSR set to: 0
 10588  003830  EE20 F004          	lfsr	2,4
 10589  003834  5186               	movf	fputc@fp& (0+255),w,b
 10590  003836  26D9               	addwf	fsr2l,f,c
 10591  003838  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10592  00383A  22DA               	addwfc	fsr2h,f,c
 10593  00383C  EE10 F002          	lfsr	1,2
 10594  003840  5186               	movf	fputc@fp& (0+255),w,b
 10595  003842  26E1               	addwf	fsr1l,f,c
 10596  003844  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10597  003846  22E2               	addwfc	fsr1h,f,c
 10598  003848  50DE               	movf	postinc2,w,c
 10599  00384A  5CE6               	subwf	postinc1,w,c
 10600  00384C  50E6               	movf	postinc1,w,c
 10601  00384E  0A80               	xorlw	128
 10602  003850  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10603  003852  50DE               	movf	postinc2,w,c
 10604  003854  0A80               	xorlw	128
 10605  003856  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10606  003858  B0D8               	btfsc	status,0,c
 10607  00385A  0012               	return	
 10608  00385C                     u6650:
 10609                           
 10610                           ; BSR set to: 0
 10611  00385C  EE20 F002          	lfsr	2,2
 10612  003860  5186               	movf	fputc@fp& (0+255),w,b
 10613  003862  26D9               	addwf	fsr2l,f,c
 10614  003864  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10615  003866  22DA               	addwfc	fsr2h,f,c
 10616  003868  2ADE               	incf	postinc2,f,c
 10617  00386A  0E00               	movlw	0
 10618  00386C  22DD               	addwfc	postdec2,f,c
 10619  00386E  0012               	return		;funcret
 10620  003870                     __end_of_fputc:
 10621                           	opt callstack 0
 10622                           
 10623 ;; *************** function _putch *****************
 10624 ;; Defined at:
 10625 ;;		line 102 in file "lcd.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;  data            1    wreg     unsigned char 
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;  data            1    3[BANK0 ] unsigned char 
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  1    wreg      void 
 10632 ;; Registers used:
 10633 ;;		wreg, status,2, status,0, cstack
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 0/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;Total ram usage:        1 bytes
 10644 ;; Hardware stack levels used:    1
 10645 ;; Hardware stack levels required when called:    6
 10646 ;; This function calls:
 10647 ;;		_send_byte
 10648 ;; This function is called by:
 10649 ;;		_fputc
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           	psect	text33
 10654  003DB0                     __ptext33:
 10655                           	opt callstack 0
 10656  003DB0                     _putch:
 10657                           	opt callstack 16
 10658                           
 10659                           ;incstack = 0
 10660                           ;putch@data stored from wreg
 10661  003DB0  0100               	movlb	0	; () banked
 10662  003DB2  6F83               	movwf	putch@data& (0+255),b
 10663                           
 10664                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10665  003DB4  848C               	bsf	3980,2,c	;volatile
 10666                           
 10667                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10668  003DB6  0100               	movlb	0	; () banked
 10669  003DB8  5183               	movf	putch@data& (0+255),w,b
 10670  003DBA  ECC2  F01E         	call	_send_byte
 10671  003DBE  0012               	return		;funcret
 10672  003DC0                     __end_of_putch:
 10673                           	opt callstack 0
 10674                           
 10675 ;; *************** function _abs *****************
 10676 ;; Defined at:
 10677 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  a               2   18[BANK0 ] int 
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;		None
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  2   18[BANK0 ] int 
 10684 ;; Registers used:
 10685 ;;		wreg, status,2, status,0
 10686 ;; Tracked objects:
 10687 ;;		On entry : 0/0
 10688 ;;		On exit  : 0/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10691 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10694 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10695 ;;Total ram usage:        4 bytes
 10696 ;; Hardware stack levels used:    1
 10697 ;; Hardware stack levels required when called:    3
 10698 ;; This function calls:
 10699 ;;		Nothing
 10700 ;; This function is called by:
 10701 ;;		_ultrasonic_main
 10702 ;;		_dtoa
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706                           	psect	text34
 10707  003B72                     __ptext34:
 10708                           	opt callstack 0
 10709  003B72                     _abs:
 10710                           	opt callstack 22
 10711                           
 10712                           ;incstack = 0
 10713  003B72  0100               	movlb	0	; () banked
 10714  003B74  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10715  003B76  D005               	goto	u6700
 10716  003B78  5193               	movf	(abs@a+1)& (0+255),w,b
 10717  003B7A  E110               	bnz	l1376
 10718  003B7C  0592               	decf	abs@a& (0+255),w,b
 10719  003B7E  B0D8               	btfsc	status,0,c
 10720  003B80  D00D               	goto	l1376
 10721  003B82                     u6700:
 10722                           
 10723                           ; BSR set to: 0
 10724  003B82  C092  F094         	movff	abs@a,??_abs
 10725  003B86  C093  F095         	movff	abs@a+1,??_abs+1
 10726  003B8A  1F94               	comf	??_abs& (0+255),f,b
 10727  003B8C  1F95               	comf	(??_abs+1)& (0+255),f,b
 10728  003B8E  4B94               	infsnz	??_abs& (0+255),f,b
 10729  003B90  2B95               	incf	(??_abs+1)& (0+255),f,b
 10730  003B92  C094  F092         	movff	??_abs,?_abs
 10731  003B96  C095  F093         	movff	??_abs+1,?_abs+1
 10732  003B9A  0012               	return	
 10733  003B9C                     l1376:
 10734                           
 10735                           ; BSR set to: 0
 10736  003B9C  C092  F092         	movff	abs@a,?_abs
 10737  003BA0  C093  F093         	movff	abs@a+1,?_abs+1
 10738                           
 10739                           ; BSR set to: 0
 10740  003BA4  0012               	return		;funcret
 10741  003BA6                     __end_of_abs:
 10742                           	opt callstack 0
 10743                           
 10744 ;; *************** function ___aomod *****************
 10745 ;; Defined at:
 10746 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  dividend        8    0[BANK0 ] long long 
 10749 ;;  divisor         8    8[BANK0 ] long long 
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;  sign            1   17[BANK0 ] unsigned char 
 10752 ;;  counter         1   16[BANK0 ] unsigned char 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  8    0[BANK0 ] long long 
 10755 ;; Registers used:
 10756 ;;		wreg, status,2, status,0
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10762 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10765 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10766 ;;Total ram usage:       18 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:    3
 10769 ;; This function calls:
 10770 ;;		Nothing
 10771 ;; This function is called by:
 10772 ;;		_dtoa
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           	psect	text35
 10777  002C1A                     __ptext35:
 10778                           	opt callstack 0
 10779  002C1A                     ___aomod:
 10780                           	opt callstack 22
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;incstack = 0
 10784  002C1A  0E00               	movlw	0
 10785  002C1C  0100               	movlb	0	; () banked
 10786  002C1E  6F91               	movwf	___aomod@sign& (0+255),b
 10787                           
 10788                           ; BSR set to: 0
 10789  002C20  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10790  002C22  D012               	goto	l6580
 10791                           
 10792                           ; BSR set to: 0
 10793  002C24  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10794  002C26  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10795  002C28  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10796  002C2A  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10797  002C2C  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10798  002C2E  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10799  002C30  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10800  002C32  6D80               	negf	___aomod@dividend& (0+255),b
 10801  002C34  0E00               	movlw	0
 10802  002C36  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10803  002C38  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10804  002C3A  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10805  002C3C  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10806  002C3E  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10807  002C40  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10808  002C42  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10809                           
 10810                           ; BSR set to: 0
 10811  002C44  0E01               	movlw	1
 10812  002C46  6F91               	movwf	___aomod@sign& (0+255),b
 10813  002C48                     l6580:
 10814                           
 10815                           ; BSR set to: 0
 10816  002C48  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10817  002C4A  D010               	goto	l6584
 10818                           
 10819                           ; BSR set to: 0
 10820  002C4C  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 10821  002C4E  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 10822  002C50  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 10823  002C52  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 10824  002C54  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 10825  002C56  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 10826  002C58  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 10827  002C5A  6D88               	negf	___aomod@divisor& (0+255),b
 10828  002C5C  0E00               	movlw	0
 10829  002C5E  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10830  002C60  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10831  002C62  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10832  002C64  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10833  002C66  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10834  002C68  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10835  002C6A  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10836  002C6C                     l6584:
 10837                           
 10838                           ; BSR set to: 0
 10839  002C6C  5188               	movf	___aomod@divisor& (0+255),w,b
 10840  002C6E  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10841  002C70  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10842  002C72  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10843  002C74  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10844  002C76  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10845  002C78  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10846  002C7A  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10847  002C7C  B4D8               	btfsc	status,2,c
 10848  002C7E  D03C               	goto	l6600
 10849                           
 10850                           ; BSR set to: 0
 10851  002C80  0E01               	movlw	1
 10852  002C82  6F90               	movwf	___aomod@counter& (0+255),b
 10853  002C84  D00A               	goto	l6590
 10854  002C86                     l6588:
 10855                           
 10856                           ; BSR set to: 0
 10857  002C86  90D8               	bcf	status,0,c
 10858  002C88  3788               	rlcf	___aomod@divisor& (0+255),f,b
 10859  002C8A  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10860  002C8C  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10861  002C8E  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10862  002C90  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10863  002C92  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10864  002C94  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10865  002C96  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10866  002C98  2B90               	incf	___aomod@counter& (0+255),f,b
 10867  002C9A                     l6590:
 10868                           
 10869                           ; BSR set to: 0
 10870  002C9A  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10871  002C9C  D7F4               	goto	l6588
 10872  002C9E                     u6940:
 10873                           
 10874                           ; BSR set to: 0
 10875  002C9E  5188               	movf	___aomod@divisor& (0+255),w,b
 10876  002CA0  5D80               	subwf	___aomod@dividend& (0+255),w,b
 10877  002CA2  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10878  002CA4  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10879  002CA6  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10880  002CA8  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10881  002CAA  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10882  002CAC  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10883  002CAE  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10884  002CB0  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10885  002CB2  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10886  002CB4  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10887  002CB6  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10888  002CB8  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10889  002CBA  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10890  002CBC  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10891  002CBE  A0D8               	btfss	status,0,c
 10892  002CC0  D010               	goto	l6596
 10893                           
 10894                           ; BSR set to: 0
 10895  002CC2  5188               	movf	___aomod@divisor& (0+255),w,b
 10896  002CC4  5F80               	subwf	___aomod@dividend& (0+255),f,b
 10897  002CC6  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10898  002CC8  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10899  002CCA  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10900  002CCC  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10901  002CCE  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10902  002CD0  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10903  002CD2  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10904  002CD4  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10905  002CD6  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10906  002CD8  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10907  002CDA  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10908  002CDC  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10909  002CDE  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10910  002CE0  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10911  002CE2                     l6596:
 10912                           
 10913                           ; BSR set to: 0
 10914  002CE2  90D8               	bcf	status,0,c
 10915  002CE4  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10916  002CE6  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10917  002CE8  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10918  002CEA  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10919  002CEC  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10920  002CEE  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10921  002CF0  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10922  002CF2  3388               	rrcf	___aomod@divisor& (0+255),f,b
 10923                           
 10924                           ; BSR set to: 0
 10925  002CF4  2F90               	decfsz	___aomod@counter& (0+255),f,b
 10926  002CF6  D7D3               	goto	u6940
 10927  002CF8                     l6600:
 10928                           
 10929                           ; BSR set to: 0
 10930  002CF8  5191               	movf	___aomod@sign& (0+255),w,b
 10931  002CFA  B4D8               	btfsc	status,2,c
 10932  002CFC  D010               	goto	l6604
 10933                           
 10934                           ; BSR set to: 0
 10935  002CFE  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10936  002D00  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10937  002D02  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10938  002D04  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10939  002D06  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10940  002D08  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10941  002D0A  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10942  002D0C  6D80               	negf	___aomod@dividend& (0+255),b
 10943  002D0E  0E00               	movlw	0
 10944  002D10  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10945  002D12  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10946  002D14  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10947  002D16  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10948  002D18  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10949  002D1A  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10950  002D1C  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10951  002D1E                     l6604:
 10952                           
 10953                           ; BSR set to: 0
 10954  002D1E  C080  F080         	movff	___aomod@dividend,?___aomod
 10955  002D22  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 10956  002D26  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 10957  002D2A  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 10958  002D2E  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 10959  002D32  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 10960  002D36  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 10961  002D3A  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 10962                           
 10963                           ; BSR set to: 0
 10964  002D3E  0012               	return		;funcret
 10965  002D40                     __end_of___aomod:
 10966                           	opt callstack 0
 10967                           
 10968 ;; *************** function ___aodiv *****************
 10969 ;; Defined at:
 10970 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  dividend        8    0[BANK0 ] long long 
 10973 ;;  divisor         8    8[BANK0 ] long long 
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  quotient        8   18[BANK0 ] long long 
 10976 ;;  sign            1   17[BANK0 ] unsigned char 
 10977 ;;  counter         1   16[BANK0 ] unsigned char 
 10978 ;; Return value:  Size  Location     Type
 10979 ;;                  8    0[BANK0 ] long long 
 10980 ;; Registers used:
 10981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10982 ;; Tracked objects:
 10983 ;;		On entry : 0/0
 10984 ;;		On exit  : 0/0
 10985 ;;		Unchanged: 0/0
 10986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10987 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10988 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10990 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10991 ;;Total ram usage:       26 bytes
 10992 ;; Hardware stack levels used:    1
 10993 ;; Hardware stack levels required when called:    3
 10994 ;; This function calls:
 10995 ;;		Nothing
 10996 ;; This function is called by:
 10997 ;;		_dtoa
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           	psect	text36
 11002  002716                     __ptext36:
 11003                           	opt callstack 0
 11004  002716                     ___aodiv:
 11005                           	opt callstack 22
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;incstack = 0
 11009  002716  0E00               	movlw	0
 11010  002718  0100               	movlb	0	; () banked
 11011  00271A  6F91               	movwf	___aodiv@sign& (0+255),b
 11012                           
 11013                           ; BSR set to: 0
 11014  00271C  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11015  00271E  D012               	goto	l6536
 11016                           
 11017                           ; BSR set to: 0
 11018  002720  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 11019  002722  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 11020  002724  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 11021  002726  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 11022  002728  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 11023  00272A  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 11024  00272C  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 11025  00272E  6D88               	negf	___aodiv@divisor& (0+255),b
 11026  002730  0E00               	movlw	0
 11027  002732  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 11028  002734  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 11029  002736  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 11030  002738  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 11031  00273A  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 11032  00273C  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 11033  00273E  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 11034                           
 11035                           ; BSR set to: 0
 11036  002740  0E01               	movlw	1
 11037  002742  6F91               	movwf	___aodiv@sign& (0+255),b
 11038  002744                     l6536:
 11039                           
 11040                           ; BSR set to: 0
 11041  002744  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 11042  002746  D012               	goto	l6542
 11043                           
 11044                           ; BSR set to: 0
 11045  002748  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 11046  00274A  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 11047  00274C  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 11048  00274E  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 11049  002750  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 11050  002752  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 11051  002754  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 11052  002756  6D80               	negf	___aodiv@dividend& (0+255),b
 11053  002758  0E00               	movlw	0
 11054  00275A  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 11055  00275C  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 11056  00275E  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 11057  002760  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 11058  002762  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 11059  002764  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 11060  002766  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 11061                           
 11062                           ; BSR set to: 0
 11063  002768  0E01               	movlw	1
 11064  00276A  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 11065  00276C                     l6542:
 11066                           
 11067                           ; BSR set to: 0
 11068  00276C  EE20  F092         	lfsr	2,___aodiv@quotient
 11069  002770  0E07               	movlw	7
 11070  002772                     u6861:
 11071  002772  6ADE               	clrf	postinc2,c
 11072  002774  06E8               	decf	wreg,f,c
 11073  002776  E2FD               	bc	u6861
 11074                           
 11075                           ; BSR set to: 0
 11076  002778  5188               	movf	___aodiv@divisor& (0+255),w,b
 11077  00277A  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 11078  00277C  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 11079  00277E  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 11080  002780  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 11081  002782  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 11082  002784  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 11083  002786  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 11084  002788  B4D8               	btfsc	status,2,c
 11085  00278A  D046               	goto	l6564
 11086                           
 11087                           ; BSR set to: 0
 11088  00278C  0E01               	movlw	1
 11089  00278E  6F90               	movwf	___aodiv@counter& (0+255),b
 11090  002790  D00A               	goto	l6550
 11091  002792                     l6548:
 11092                           
 11093                           ; BSR set to: 0
 11094  002792  90D8               	bcf	status,0,c
 11095  002794  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 11096  002796  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 11097  002798  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 11098  00279A  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 11099  00279C  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 11100  00279E  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 11101  0027A0  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 11102  0027A2  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 11103  0027A4  2B90               	incf	___aodiv@counter& (0+255),f,b
 11104  0027A6                     l6550:
 11105                           
 11106                           ; BSR set to: 0
 11107  0027A6  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11108  0027A8  D7F4               	goto	l6548
 11109  0027AA                     u6880:
 11110                           
 11111                           ; BSR set to: 0
 11112  0027AA  90D8               	bcf	status,0,c
 11113  0027AC  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 11114  0027AE  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 11115  0027B0  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 11116  0027B2  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 11117  0027B4  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 11118  0027B6  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 11119  0027B8  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 11120  0027BA  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 11121                           
 11122                           ; BSR set to: 0
 11123  0027BC  5188               	movf	___aodiv@divisor& (0+255),w,b
 11124  0027BE  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 11125  0027C0  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11126  0027C2  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 11127  0027C4  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11128  0027C6  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 11129  0027C8  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11130  0027CA  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 11131  0027CC  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11132  0027CE  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 11133  0027D0  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11134  0027D2  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 11135  0027D4  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11136  0027D6  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 11137  0027D8  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11138  0027DA  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 11139  0027DC  A0D8               	btfss	status,0,c
 11140  0027DE  D011               	goto	l6560
 11141                           
 11142                           ; BSR set to: 0
 11143  0027E0  5188               	movf	___aodiv@divisor& (0+255),w,b
 11144  0027E2  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 11145  0027E4  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11146  0027E6  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 11147  0027E8  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11148  0027EA  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 11149  0027EC  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11150  0027EE  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 11151  0027F0  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11152  0027F2  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 11153  0027F4  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11154  0027F6  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 11155  0027F8  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11156  0027FA  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 11157  0027FC  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11158  0027FE  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 11159                           
 11160                           ; BSR set to: 0
 11161  002800  8192               	bsf	___aodiv@quotient& (0+255),0,b
 11162  002802                     l6560:
 11163                           
 11164                           ; BSR set to: 0
 11165  002802  90D8               	bcf	status,0,c
 11166  002804  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 11167  002806  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 11168  002808  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 11169  00280A  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 11170  00280C  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 11171  00280E  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 11172  002810  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 11173  002812  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 11174                           
 11175                           ; BSR set to: 0
 11176  002814  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 11177  002816  D7C9               	goto	u6880
 11178  002818                     l6564:
 11179                           
 11180                           ; BSR set to: 0
 11181  002818  5191               	movf	___aodiv@sign& (0+255),w,b
 11182  00281A  B4D8               	btfsc	status,2,c
 11183  00281C  D010               	goto	l6568
 11184                           
 11185                           ; BSR set to: 0
 11186  00281E  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 11187  002820  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 11188  002822  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 11189  002824  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 11190  002826  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 11191  002828  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 11192  00282A  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 11193  00282C  6D92               	negf	___aodiv@quotient& (0+255),b
 11194  00282E  0E00               	movlw	0
 11195  002830  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 11196  002832  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 11197  002834  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 11198  002836  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 11199  002838  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 11200  00283A  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 11201  00283C  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 11202  00283E                     l6568:
 11203                           
 11204                           ; BSR set to: 0
 11205  00283E  C092  F080         	movff	___aodiv@quotient,?___aodiv
 11206  002842  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 11207  002846  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 11208  00284A  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 11209  00284E  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 11210  002852  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 11211  002856  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 11212  00285A  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 11213                           
 11214                           ; BSR set to: 0
 11215  00285E  0012               	return		;funcret
 11216  002860                     __end_of___aodiv:
 11217                           	opt callstack 0
 11218                           
 11219 ;; *************** function _atoi *****************
 11220 ;; Defined at:
 11221 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 11224 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
 11225 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
 11226 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
 11227 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
 11228 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
 11229 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
 11230 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
 11231 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
 11232 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
 11233 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
 11234 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
 11235 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
 11236 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
 11237 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
 11238 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
 11239 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  n               2   20[BANK0 ] int 
 11242 ;;  neg             2   13[BANK0 ] int 
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  2    7[BANK0 ] int 
 11245 ;; Registers used:
 11246 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11247 ;; Tracked objects:
 11248 ;;		On entry : 0/0
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11252 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11253 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;Total ram usage:       15 bytes
 11257 ;; Hardware stack levels used:    1
 11258 ;; Hardware stack levels required when called:    4
 11259 ;; This function calls:
 11260 ;;		___wmul
 11261 ;;		_isdigit
 11262 ;;		_isspace
 11263 ;; This function is called by:
 11264 ;;		_vfpfcnvrt
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           	psect	text37
 11269  002860                     __ptext37:
 11270                           	opt callstack 0
 11271  002860                     _atoi:
 11272                           	opt callstack 22
 11273                           
 11274                           ; BSR set to: 0
 11275                           ;incstack = 0
 11276  002860  0E00               	movlw	0
 11277  002862  0100               	movlb	0	; () banked
 11278  002864  6F95               	movwf	(atoi@n+1)& (0+255),b
 11279  002866  0E00               	movlw	0
 11280  002868  6F94               	movwf	atoi@n& (0+255),b
 11281  00286A  0E00               	movlw	0
 11282  00286C  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11283  00286E  0E00               	movlw	0
 11284  002870  6F8D               	movwf	atoi@neg& (0+255),b
 11285  002872  D002               	goto	l6752
 11286  002874                     l6750:
 11287                           
 11288                           ; BSR set to: 0
 11289  002874  4B87               	infsnz	atoi@s& (0+255),f,b
 11290  002876  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11291  002878                     l6752:
 11292                           
 11293                           ; BSR set to: 0
 11294  002878  0E01               	movlw	1
 11295  00287A  6F93               	movwf	_atoi$1590& (0+255),b
 11296                           
 11297                           ; BSR set to: 0
 11298  00287C  C087  FFF6         	movff	atoi@s,tblptrl
 11299  002880  C088  FFF7         	movff	atoi@s+1,tblptrh
 11300  002884                     	if	0	;tblptru may be non-zero
 11301  002884                     	endif
 11302  002884                     	if	0	;tblptru may be non-zero
 11303  002884                     	endif
 11304  002884  0008               	tblrd		*
 11305  002886  50F5               	movf	tablat,w,c
 11306  002888  0A20               	xorlw	32
 11307  00288A  B4D8               	btfsc	status,2,c
 11308  00288C  D018               	goto	l6760
 11309                           
 11310                           ; BSR set to: 0
 11311  00288E  0EF7               	movlw	247
 11312  002890  6F89               	movwf	??_atoi& (0+255),b
 11313  002892  0EFF               	movlw	255
 11314  002894  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11315  002896  C087  FFF6         	movff	atoi@s,tblptrl
 11316  00289A  C088  FFF7         	movff	atoi@s+1,tblptrh
 11317  00289E                     	if	0	;tblptru may be non-zero
 11318  00289E                     	endif
 11319  00289E                     	if	0	;tblptru may be non-zero
 11320  00289E                     	endif
 11321  00289E  0008               	tblrd		*
 11322  0028A0  50F5               	movf	tablat,w,c
 11323  0028A2  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11324  0028A4  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11325  0028A6  5189               	movf	??_atoi& (0+255),w,b
 11326  0028A8  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11327  0028AA  518A               	movf	(??_atoi+1)& (0+255),w,b
 11328  0028AC  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11329  0028AE  518C               	movf	(??_atoi+3)& (0+255),w,b
 11330  0028B0  E104               	bnz	u7320
 11331  0028B2  0E05               	movlw	5
 11332  0028B4  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11333  0028B6  A0D8               	btfss	status,0,c
 11334  0028B8  D002               	goto	l6760
 11335  0028BA                     u7320:
 11336                           
 11337                           ; BSR set to: 0
 11338  0028BA  0E00               	movlw	0
 11339  0028BC  6F93               	movwf	_atoi$1590& (0+255),b
 11340  0028BE                     l6760:
 11341                           
 11342                           ; BSR set to: 0
 11343  0028BE  C093  F08F         	movff	_atoi$1590,_atoi$1589
 11344  0028C2  6B90               	clrf	(_atoi$1589+1)& (0+255),b
 11345                           
 11346                           ; BSR set to: 0
 11347  0028C4  518F               	movf	_atoi$1589& (0+255),w,b
 11348  0028C6  1190               	iorwf	(_atoi$1589+1)& (0+255),w,b
 11349  0028C8  B4D8               	btfsc	status,2,c
 11350  0028CA  D008               	goto	l6770
 11351  0028CC  D7D3               	goto	l6750
 11352  0028CE                     l6766:
 11353                           
 11354                           ; BSR set to: 0
 11355  0028CE  0E00               	movlw	0
 11356  0028D0  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11357  0028D2  0E01               	movlw	1
 11358  0028D4  6F8D               	movwf	atoi@neg& (0+255),b
 11359  0028D6                     l6768:
 11360                           
 11361                           ; BSR set to: 0
 11362  0028D6  4B87               	infsnz	atoi@s& (0+255),f,b
 11363  0028D8  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11364  0028DA  D02F               	goto	l6776
 11365  0028DC                     l6770:
 11366                           
 11367                           ; BSR set to: 0
 11368  0028DC  C087  FFF6         	movff	atoi@s,tblptrl
 11369  0028E0  C088  FFF7         	movff	atoi@s+1,tblptrh
 11370  0028E4                     	if	0	;tblptru may be non-zero
 11371  0028E4                     	endif
 11372  0028E4                     	if	0	;tblptru may be non-zero
 11373  0028E4                     	endif
 11374  0028E4  0008               	tblrd		*
 11375  0028E6  50F5               	movf	tablat,w,c
 11376  0028E8  6F89               	movwf	??_atoi& (0+255),b
 11377  0028EA  6B8A               	clrf	(??_atoi+1)& (0+255),b
 11378                           
 11379                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11380                           ; Switch size 1, requested type "simple"
 11381                           ; Number of cases is 1, Range of values is 0 to 0
 11382                           ; switch strategies available:
 11383                           ; Name         Instructions Cycles
 11384                           ; simple_byte            4     3 (average)
 11385                           ;	Chosen strategy is simple_byte
 11386  0028EC  518A               	movf	(??_atoi+1)& (0+255),w,b
 11387  0028EE  0A00               	xorlw	0	; case 0
 11388  0028F0  A4D8               	btfss	status,2,c
 11389  0028F2  D023               	goto	l6776
 11390                           
 11391                           ; BSR set to: 0
 11392                           ; Switch size 1, requested type "simple"
 11393                           ; Number of cases is 2, Range of values is 43 to 45
 11394                           ; switch strategies available:
 11395                           ; Name         Instructions Cycles
 11396                           ; simple_byte            7     4 (average)
 11397                           ;	Chosen strategy is simple_byte
 11398  0028F4  5189               	movf	??_atoi& (0+255),w,b
 11399  0028F6  0A2B               	xorlw	43	; case 43
 11400  0028F8  B4D8               	btfsc	status,2,c
 11401  0028FA  D7ED               	goto	l6768
 11402  0028FC  0A06               	xorlw	6	; case 45
 11403  0028FE  B4D8               	btfsc	status,2,c
 11404  002900  D7E6               	goto	l6766
 11405  002902  D01B               	goto	l6776
 11406  002904                     l6772:
 11407                           
 11408                           ; BSR set to: 0
 11409  002904  C094  F080         	movff	atoi@n,___wmul@multiplier
 11410  002908  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 11411  00290C  0E00               	movlw	0
 11412  00290E  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11413  002910  0E0A               	movlw	10
 11414  002912  6F82               	movwf	___wmul@multiplicand& (0+255),b
 11415  002914  EC8E  F01E         	call	___wmul	;wreg free
 11416  002918  C087  FFF6         	movff	atoi@s,tblptrl
 11417  00291C  C088  FFF7         	movff	atoi@s+1,tblptrh
 11418  002920                     	if	0	;tblptru may be non-zero
 11419  002920                     	endif
 11420  002920                     	if	0	;tblptru may be non-zero
 11421  002920                     	endif
 11422  002920  0008               	tblrd		*
 11423  002922  50F5               	movf	tablat,w,c
 11424  002924  0100               	movlb	0	; () banked
 11425  002926  5F80               	subwf	?___wmul& (0+255),f,b
 11426  002928  0E00               	movlw	0
 11427  00292A  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 11428  00292C  0E30               	movlw	48
 11429  00292E  2580               	addwf	?___wmul& (0+255),w,b
 11430  002930  6F94               	movwf	atoi@n& (0+255),b
 11431  002932  0E00               	movlw	0
 11432  002934  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 11433  002936  6F95               	movwf	(atoi@n+1)& (0+255),b
 11434  002938  D7CE               	goto	l6768
 11435  00293A                     l6776:
 11436                           
 11437                           ; BSR set to: 0
 11438  00293A  0ED0               	movlw	208
 11439  00293C  6F89               	movwf	??_atoi& (0+255),b
 11440  00293E  0EFF               	movlw	255
 11441  002940  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11442  002942  C087  FFF6         	movff	atoi@s,tblptrl
 11443  002946  C088  FFF7         	movff	atoi@s+1,tblptrh
 11444  00294A                     	if	0	;tblptru may be non-zero
 11445  00294A                     	endif
 11446  00294A                     	if	0	;tblptru may be non-zero
 11447  00294A                     	endif
 11448  00294A  0008               	tblrd		*
 11449  00294C  50F5               	movf	tablat,w,c
 11450  00294E  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11451  002950  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11452  002952  5189               	movf	??_atoi& (0+255),w,b
 11453  002954  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11454  002956  518A               	movf	(??_atoi+1)& (0+255),w,b
 11455  002958  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11456  00295A  518C               	movf	(??_atoi+3)& (0+255),w,b
 11457  00295C  E106               	bnz	u7340
 11458  00295E  0E0A               	movlw	10
 11459  002960  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11460  002962  B0D8               	btfsc	status,0,c
 11461  002964  D002               	goto	u7340
 11462  002966  0E01               	movlw	1
 11463  002968  D001               	goto	u7350
 11464  00296A                     u7340:
 11465  00296A  0E00               	movlw	0
 11466  00296C                     u7350:
 11467  00296C  6F91               	movwf	_atoi$1591& (0+255),b
 11468  00296E  6B92               	clrf	(_atoi$1591+1)& (0+255),b
 11469                           
 11470                           ; BSR set to: 0
 11471  002970  5191               	movf	_atoi$1591& (0+255),w,b
 11472  002972  1192               	iorwf	(_atoi$1591+1)& (0+255),w,b
 11473  002974  A4D8               	btfss	status,2,c
 11474  002976  D7C6               	goto	l6772
 11475                           
 11476                           ; BSR set to: 0
 11477  002978  518D               	movf	atoi@neg& (0+255),w,b
 11478  00297A  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11479  00297C  A4D8               	btfss	status,2,c
 11480  00297E  D00D               	goto	l1407
 11481                           
 11482                           ; BSR set to: 0
 11483  002980  C094  F089         	movff	atoi@n,??_atoi
 11484  002984  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11485  002988  1F89               	comf	??_atoi& (0+255),f,b
 11486  00298A  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11487  00298C  4B89               	infsnz	??_atoi& (0+255),f,b
 11488  00298E  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11489  002990  C089  F087         	movff	??_atoi,?_atoi
 11490  002994  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11491  002998  0012               	return	
 11492  00299A                     l1407:
 11493                           
 11494                           ; BSR set to: 0
 11495  00299A  C094  F087         	movff	atoi@n,?_atoi
 11496  00299E  C095  F088         	movff	atoi@n+1,?_atoi+1
 11497                           
 11498                           ; BSR set to: 0
 11499  0029A2  0012               	return		;funcret
 11500  0029A4                     __end_of_atoi:
 11501                           	opt callstack 0
 11502                           
 11503 ;; *************** function _isspace *****************
 11504 ;; Defined at:
 11505 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;  c               2    0[BANK0 ] int 
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;		None
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  2    0[BANK0 ] int 
 11512 ;; Registers used:
 11513 ;;		wreg, status,2, status,0
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11519 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11522 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11523 ;;Total ram usage:        7 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; Hardware stack levels required when called:    3
 11526 ;; This function calls:
 11527 ;;		Nothing
 11528 ;; This function is called by:
 11529 ;;		_atoi
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text38
 11534  003A82                     __ptext38:
 11535                           	opt callstack 0
 11536  003A82                     _isspace:
 11537                           	opt callstack 22
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;incstack = 0
 11541  003A82  0E01               	movlw	1
 11542  003A84  0100               	movlb	0	; () banked
 11543  003A86  6F86               	movwf	_isspace$1616& (0+255),b
 11544                           
 11545                           ; BSR set to: 0
 11546  003A88  0E20               	movlw	32
 11547  003A8A  1980               	xorwf	isspace@c& (0+255),w,b
 11548  003A8C  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11549  003A8E  B4D8               	btfsc	status,2,c
 11550  003A90  D014               	goto	l6616
 11551                           
 11552                           ; BSR set to: 0
 11553  003A92  0EF7               	movlw	247
 11554  003A94  6F82               	movwf	??_isspace& (0+255),b
 11555  003A96  0EFF               	movlw	255
 11556  003A98  6F83               	movwf	(??_isspace+1)& (0+255),b
 11557  003A9A  C080  F084         	movff	isspace@c,??_isspace+2
 11558  003A9E  C081  F085         	movff	isspace@c+1,??_isspace+3
 11559  003AA2  5182               	movf	??_isspace& (0+255),w,b
 11560  003AA4  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11561  003AA6  5183               	movf	(??_isspace+1)& (0+255),w,b
 11562  003AA8  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11563  003AAA  5185               	movf	(??_isspace+3)& (0+255),w,b
 11564  003AAC  E104               	bnz	u6980
 11565  003AAE  0E05               	movlw	5
 11566  003AB0  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11567  003AB2  A0D8               	btfss	status,0,c
 11568  003AB4  D002               	goto	l6616
 11569  003AB6                     u6980:
 11570                           
 11571                           ; BSR set to: 0
 11572  003AB6  0E00               	movlw	0
 11573  003AB8  6F86               	movwf	_isspace$1616& (0+255),b
 11574  003ABA                     l6616:
 11575                           
 11576                           ; BSR set to: 0
 11577  003ABA  C086  F080         	movff	_isspace$1616,?_isspace
 11578  003ABE  6B81               	clrf	(?_isspace+1)& (0+255),b
 11579                           
 11580                           ; BSR set to: 0
 11581  003AC0  0012               	return		;funcret
 11582  003AC2                     __end_of_isspace:
 11583                           	opt callstack 0
 11584                           
 11585 ;; *************** function _isdigit *****************
 11586 ;; Defined at:
 11587 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;  c               2    0[BANK0 ] int 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;		None
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  2    0[BANK0 ] int 
 11594 ;; Registers used:
 11595 ;;		wreg, status,2, status,0
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11605 ;;Total ram usage:        6 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; Hardware stack levels required when called:    3
 11608 ;; This function calls:
 11609 ;;		Nothing
 11610 ;; This function is called by:
 11611 ;;		_vfpfcnvrt
 11612 ;;		_atoi
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           	psect	text39
 11617  003C3C                     __ptext39:
 11618                           	opt callstack 0
 11619  003C3C                     _isdigit:
 11620                           	opt callstack 23
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;incstack = 0
 11624  003C3C  0ED0               	movlw	208
 11625  003C3E  0100               	movlb	0	; () banked
 11626  003C40  6F82               	movwf	??_isdigit& (0+255),b
 11627  003C42  0EFF               	movlw	255
 11628  003C44  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11629  003C46  C080  F084         	movff	isdigit@c,??_isdigit+2
 11630  003C4A  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11631  003C4E  5182               	movf	??_isdigit& (0+255),w,b
 11632  003C50  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11633  003C52  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11634  003C54  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11635  003C56  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11636  003C58  E106               	bnz	u6820
 11637  003C5A  0E0A               	movlw	10
 11638  003C5C  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11639  003C5E  B0D8               	btfsc	status,0,c
 11640  003C60  D002               	goto	u6820
 11641  003C62  0E01               	movlw	1
 11642  003C64  D001               	goto	u6830
 11643  003C66                     u6820:
 11644  003C66  0E00               	movlw	0
 11645  003C68                     u6830:
 11646  003C68  6F80               	movwf	?_isdigit& (0+255),b
 11647  003C6A  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11648                           
 11649                           ; BSR set to: 0
 11650  003C6C  0012               	return		;funcret
 11651  003C6E                     __end_of_isdigit:
 11652                           	opt callstack 0
 11653                           
 11654 ;; *************** function ___wmul *****************
 11655 ;; Defined at:
 11656 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11659 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11660 ;; Auto vars:     Size  Location     Type
 11661 ;;  product         2    4[BANK0 ] unsigned int 
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  2    0[BANK0 ] unsigned int 
 11664 ;; Registers used:
 11665 ;;		wreg, status,2, status,0, prodl, prodh
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/0
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11671 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11672 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11674 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11675 ;;Total ram usage:        6 bytes
 11676 ;; Hardware stack levels used:    1
 11677 ;; Hardware stack levels required when called:    3
 11678 ;; This function calls:
 11679 ;;		Nothing
 11680 ;; This function is called by:
 11681 ;;		_main
 11682 ;;		_atoi
 11683 ;; This function uses a non-reentrant model
 11684 ;;
 11685                           
 11686                           	psect	text40
 11687  003D1C                     __ptext40:
 11688                           	opt callstack 0
 11689  003D1C                     ___wmul:
 11690                           	opt callstack 22
 11691                           
 11692                           ; BSR set to: 0
 11693                           ;incstack = 0
 11694  003D1C  0100               	movlb	0	; () banked
 11695  003D1E  5180               	movf	___wmul@multiplier& (0+255),w,b
 11696  003D20  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11697  003D22  CFF3 F084          	movff	prodl,___wmul@product
 11698  003D26  CFF4 F085          	movff	prodh,___wmul@product+1
 11699  003D2A  5180               	movf	___wmul@multiplier& (0+255),w,b
 11700  003D2C  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11701  003D2E  50F3               	movf	prodl,w,c
 11702  003D30  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11703  003D32  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11704  003D34  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11705  003D36  50F3               	movf	prodl,w,c
 11706  003D38  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11707                           
 11708                           ; BSR set to: 0
 11709  003D3A  C084  F080         	movff	___wmul@product,?___wmul
 11710  003D3E  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11711                           
 11712                           ; BSR set to: 0
 11713  003D42  0012               	return		;funcret
 11714  003D44                     __end_of___wmul:
 11715                           	opt callstack 0
 11716                           
 11717 ;; *************** function _initLCD *****************
 11718 ;; Defined at:
 11719 ;;		line 69 in file "lcd.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;		None
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;		None
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  1    wreg      void 
 11726 ;; Registers used:
 11727 ;;		wreg, status,2, status,0, cstack
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11735 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11736 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11737 ;;Total ram usage:        1 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:    7
 11740 ;; This function calls:
 11741 ;;		_lcdInst
 11742 ;;		_send_byte
 11743 ;;		_send_nibble
 11744 ;; This function is called by:
 11745 ;;		_actuators_main
 11746 ;;		_UI_main
 11747 ;;		_main
 11748 ;; This function uses a non-reentrant model
 11749 ;;
 11750                           
 11751                           	psect	text41
 11752  003792                     __ptext41:
 11753                           	opt callstack 0
 11754  003792                     _initLCD:
 11755                           	opt callstack 23
 11756                           
 11757                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11758                           
 11759                           ; BSR set to: 0
 11760                           ;incstack = 0
 11761  003792  0E31               	movlw	49
 11762  003794  0100               	movlb	0	; () banked
 11763  003796  6F84               	movwf	??_initLCD& (0+255),b
 11764  003798  0EB2               	movlw	178
 11765  00379A                     u9947:
 11766  00379A  2EE8               	decfsz	wreg,f,c
 11767  00379C  D7FE               	bra	u9947
 11768  00379E  2F84               	decfsz	??_initLCD& (0+255),f,b
 11769  0037A0  D7FC               	bra	u9947
 11770  0037A2  F000               	nop	
 11771                           
 11772                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11773  0037A4  948C               	bcf	3980,2,c	;volatile
 11774                           
 11775                           ;lcd.c: 74:     send_nibble(0b0011);
 11776  0037A6  0E03               	movlw	3
 11777  0037A8  ECB5  F01E         	call	_send_nibble
 11778                           
 11779                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11780  0037AC  0E11               	movlw	17
 11781  0037AE  0100               	movlb	0	; () banked
 11782  0037B0  6F84               	movwf	??_initLCD& (0+255),b
 11783  0037B2  0E3A               	movlw	58
 11784  0037B4                     u9957:
 11785  0037B4  2EE8               	decfsz	wreg,f,c
 11786  0037B6  D7FE               	bra	u9957
 11787  0037B8  2F84               	decfsz	??_initLCD& (0+255),f,b
 11788  0037BA  D7FC               	bra	u9957
 11789  0037BC  F000               	nop	
 11790                           
 11791                           ;lcd.c: 76:     send_nibble(0b0011);
 11792  0037BE  0E03               	movlw	3
 11793  0037C0  ECB5  F01E         	call	_send_nibble
 11794                           
 11795                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 11796  0037C4  0E7D               	movlw	125
 11797  0037C6                     u9967:
 11798  0037C6  2EE8               	decfsz	wreg,f,c
 11799  0037C8  D7FE               	bra	u9967
 11800                           
 11801                           ;lcd.c: 78:     send_byte(0b00110010);
 11802  0037CA  0E32               	movlw	50
 11803  0037CC  ECC2  F01E         	call	_send_byte
 11804                           
 11805                           ;lcd.c: 80:     send_byte(0b00101000);
 11806  0037D0  0E28               	movlw	40
 11807  0037D2  ECC2  F01E         	call	_send_byte
 11808                           
 11809                           ;lcd.c: 81:     send_byte(0b00001000);
 11810  0037D6  0E08               	movlw	8
 11811  0037D8  ECC2  F01E         	call	_send_byte
 11812                           
 11813                           ;lcd.c: 82:     send_byte(0b00000001);
 11814  0037DC  0E01               	movlw	1
 11815  0037DE  ECC2  F01E         	call	_send_byte
 11816                           
 11817                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11818  0037E2  0E11               	movlw	17
 11819  0037E4  0100               	movlb	0	; () banked
 11820  0037E6  6F84               	movwf	??_initLCD& (0+255),b
 11821  0037E8  0E3A               	movlw	58
 11822  0037EA                     u9977:
 11823  0037EA  2EE8               	decfsz	wreg,f,c
 11824  0037EC  D7FE               	bra	u9977
 11825  0037EE  2F84               	decfsz	??_initLCD& (0+255),f,b
 11826  0037F0  D7FC               	bra	u9977
 11827  0037F2  F000               	nop	
 11828                           
 11829                           ;lcd.c: 84:     send_byte(0b00000110);
 11830  0037F4  0E06               	movlw	6
 11831  0037F6  ECC2  F01E         	call	_send_byte
 11832                           
 11833                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 11834  0037FA  0E0F               	movlw	15
 11835  0037FC  ECE0  F01E         	call	_lcdInst
 11836  003800  0012               	return		;funcret
 11837  003802                     __end_of_initLCD:
 11838                           	opt callstack 0
 11839                           
 11840 ;; *************** function _lcdInst *****************
 11841 ;; Defined at:
 11842 ;;		line 64 in file "lcd.c"
 11843 ;; Parameters:    Size  Location     Type
 11844 ;;  data            1    wreg     unsigned char 
 11845 ;; Auto vars:     Size  Location     Type
 11846 ;;  data            1    3[BANK0 ] unsigned char 
 11847 ;; Return value:  Size  Location     Type
 11848 ;;                  1    wreg      void 
 11849 ;; Registers used:
 11850 ;;		wreg, status,2, status,0, cstack
 11851 ;; Tracked objects:
 11852 ;;		On entry : 0/0
 11853 ;;		On exit  : 0/0
 11854 ;;		Unchanged: 0/0
 11855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11860 ;;Total ram usage:        1 bytes
 11861 ;; Hardware stack levels used:    1
 11862 ;; Hardware stack levels required when called:    6
 11863 ;; This function calls:
 11864 ;;		_send_byte
 11865 ;; This function is called by:
 11866 ;;		_actuators_main
 11867 ;;		_stepper2
 11868 ;;		_stepper2_back
 11869 ;;		_initLCD
 11870 ;;		_print_echo
 11871 ;;		_ultrasonic_main
 11872 ;;		_number_deploy
 11873 ;;		_UI_main
 11874 ;;		_brake
 11875 ;;		_main
 11876 ;;		_lcd_shift_cursor
 11877 ;;		_lcd_shift_display
 11878 ;; This function uses a non-reentrant model
 11879 ;;
 11880                           
 11881                           	psect	text42
 11882  003DC0                     __ptext42:
 11883                           	opt callstack 0
 11884  003DC0                     _lcdInst:
 11885                           	opt callstack 22
 11886                           
 11887                           ;incstack = 0
 11888                           ;lcdInst@data stored from wreg
 11889  003DC0  0100               	movlb	0	; () banked
 11890  003DC2  6F83               	movwf	lcdInst@data& (0+255),b
 11891                           
 11892                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 11893  003DC4  948C               	bcf	3980,2,c	;volatile
 11894                           
 11895                           ;lcd.c: 66:     send_byte(data);
 11896  003DC6  0100               	movlb	0	; () banked
 11897  003DC8  5183               	movf	lcdInst@data& (0+255),w,b
 11898  003DCA  ECC2  F01E         	call	_send_byte
 11899  003DCE  0012               	return		;funcret
 11900  003DD0                     __end_of_lcdInst:
 11901                           	opt callstack 0
 11902                           
 11903 ;; *************** function _send_byte *****************
 11904 ;; Defined at:
 11905 ;;		line 55 in file "lcd.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;  data            1    wreg     unsigned char 
 11908 ;; Auto vars:     Size  Location     Type
 11909 ;;  data            1    2[BANK0 ] unsigned char 
 11910 ;; Return value:  Size  Location     Type
 11911 ;;                  1    wreg      void 
 11912 ;; Registers used:
 11913 ;;		wreg, status,2, status,0, cstack
 11914 ;; Tracked objects:
 11915 ;;		On entry : 0/0
 11916 ;;		On exit  : 0/0
 11917 ;;		Unchanged: 0/0
 11918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11920 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11922 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11923 ;;Total ram usage:        1 bytes
 11924 ;; Hardware stack levels used:    1
 11925 ;; Hardware stack levels required when called:    5
 11926 ;; This function calls:
 11927 ;;		_send_nibble
 11928 ;; This function is called by:
 11929 ;;		_lcdInst
 11930 ;;		_initLCD
 11931 ;;		_putch
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           	psect	text43
 11936  003D84                     __ptext43:
 11937                           	opt callstack 0
 11938  003D84                     _send_byte:
 11939                           	opt callstack 16
 11940                           
 11941                           ;incstack = 0
 11942                           ;send_byte@data stored from wreg
 11943  003D84  0100               	movlb	0	; () banked
 11944  003D86  6F82               	movwf	send_byte@data& (0+255),b
 11945                           
 11946                           ;lcd.c: 57:     send_nibble(data >> 4);
 11947  003D88  0100               	movlb	0	; () banked
 11948  003D8A  3982               	swapf	send_byte@data& (0+255),w,b
 11949  003D8C  0B0F               	andlw	15
 11950  003D8E  ECB5  F01E         	call	_send_nibble
 11951                           
 11952                           ;lcd.c: 60:     send_nibble(data);
 11953  003D92  0100               	movlb	0	; () banked
 11954  003D94  5182               	movf	send_byte@data& (0+255),w,b
 11955  003D96  ECB5  F01E         	call	_send_nibble
 11956  003D9A  0012               	return		;funcret
 11957  003D9C                     __end_of_send_byte:
 11958                           	opt callstack 0
 11959                           
 11960 ;; *************** function _send_nibble *****************
 11961 ;; Defined at:
 11962 ;;		line 44 in file "lcd.c"
 11963 ;; Parameters:    Size  Location     Type
 11964 ;;  data            1    wreg     unsigned char 
 11965 ;; Auto vars:     Size  Location     Type
 11966 ;;  data            1    1[BANK0 ] unsigned char 
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  1    wreg      void 
 11969 ;; Registers used:
 11970 ;;		wreg, status,2, status,0, cstack
 11971 ;; Tracked objects:
 11972 ;;		On entry : 0/0
 11973 ;;		On exit  : 0/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11979 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;Total ram usage:        1 bytes
 11981 ;; Hardware stack levels used:    1
 11982 ;; Hardware stack levels required when called:    4
 11983 ;; This function calls:
 11984 ;;		_pulse_e
 11985 ;; This function is called by:
 11986 ;;		_send_byte
 11987 ;;		_initLCD
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text44
 11992  003D6A                     __ptext44:
 11993                           	opt callstack 0
 11994  003D6A                     _send_nibble:
 11995                           	opt callstack 16
 11996                           
 11997                           ;incstack = 0
 11998                           ;send_nibble@data stored from wreg
 11999  003D6A  0100               	movlb	0	; () banked
 12000  003D6C  6F81               	movwf	send_nibble@data& (0+255),b
 12001                           
 12002                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12003  003D6E  508C               	movf	3980,w,c	;volatile
 12004  003D70  0B0F               	andlw	15
 12005  003D72  6E8C               	movwf	3980,c	;volatile
 12006                           
 12007                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12008  003D74  0100               	movlb	0	; () banked
 12009  003D76  3981               	swapf	send_nibble@data& (0+255),w,b
 12010  003D78  0BF0               	andlw	240
 12011  003D7A  108C               	iorwf	3980,w,c	;volatile
 12012  003D7C  6E8C               	movwf	3980,c	;volatile
 12013                           
 12014                           ; BSR set to: 0
 12015                           ;lcd.c: 48:     pulse_e();
 12016  003D7E  EC4E  F01E         	call	_pulse_e	;wreg free
 12017  003D82  0012               	return		;funcret
 12018  003D84                     __end_of_send_nibble:
 12019                           	opt callstack 0
 12020                           
 12021 ;; *************** function _pulse_e *****************
 12022 ;; Defined at:
 12023 ;;		line 28 in file "lcd.c"
 12024 ;; Parameters:    Size  Location     Type
 12025 ;;		None
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 12028 ;; Return value:  Size  Location     Type
 12029 ;;                  1    wreg      void 
 12030 ;; Registers used:
 12031 ;;		wreg
 12032 ;; Tracked objects:
 12033 ;;		On entry : 0/0
 12034 ;;		On exit  : 0/0
 12035 ;;		Unchanged: 0/0
 12036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;Total ram usage:        1 bytes
 12042 ;; Hardware stack levels used:    1
 12043 ;; Hardware stack levels required when called:    3
 12044 ;; This function calls:
 12045 ;;		Nothing
 12046 ;; This function is called by:
 12047 ;;		_send_nibble
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text45
 12052  003C9C                     __ptext45:
 12053                           	opt callstack 0
 12054  003C9C                     _pulse_e:
 12055                           	opt callstack 16
 12056                           
 12057                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12058                           
 12059                           ;incstack = 0
 12060  003C9C  0E00               	movlw	0
 12061  003C9E  BEF2               	btfsc	4082,7,c	;volatile
 12062  003CA0  0E01               	movlw	1
 12063  003CA2  0100               	movlb	0	; () banked
 12064  003CA4  6F80               	movwf	pulse_e@interruptState& (0+255),b
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12068  003CA6  9EF2               	bcf	4082,7,c	;volatile
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12072  003CA8  868C               	bsf	3980,3,c	;volatile
 12073                           
 12074                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12075  003CAA  0E14               	movlw	20
 12076  003CAC                     u9987:
 12077  003CAC  2EE8               	decfsz	wreg,f,c
 12078  003CAE  D7FE               	bra	u9987
 12079  003CB0  D000               	nop2	
 12080                           
 12081                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12082  003CB2  968C               	bcf	3980,3,c	;volatile
 12083                           
 12084                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12085  003CB4  0E53               	movlw	83
 12086  003CB6                     u9997:
 12087  003CB6  2EE8               	decfsz	wreg,f,c
 12088  003CB8  D7FE               	bra	u9997
 12089  003CBA  F000               	nop	
 12090                           
 12091                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12092  003CBC  0100               	movlb	0	; () banked
 12093  003CBE  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 12094  003CC0  D002               	bra	u6615
 12095  003CC2  9EF2               	bcf	4082,7,c	;volatile
 12096  003CC4  D001               	bra	u6616
 12097  003CC6                     u6615:
 12098  003CC6  8EF2               	bsf	4082,7,c	;volatile
 12099  003CC8                     u6616:
 12100  003CC8  0012               	return		;funcret
 12101  003CCA                     __end_of_pulse_e:
 12102                           	opt callstack 0
 12103                           
 12104 ;; *************** function ___llmod *****************
 12105 ;; Defined at:
 12106 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;  dividend        4    0[BANK0 ] unsigned long 
 12109 ;;  divisor         4    4[BANK0 ] unsigned long 
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;  counter         1    8[BANK0 ] unsigned char 
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  4    0[BANK0 ] unsigned long 
 12114 ;; Registers used:
 12115 ;;		wreg, status,2, status,0
 12116 ;; Tracked objects:
 12117 ;;		On entry : 0/0
 12118 ;;		On exit  : 0/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12121 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12124 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12125 ;;Total ram usage:        9 bytes
 12126 ;; Hardware stack levels used:    1
 12127 ;; Hardware stack levels required when called:    3
 12128 ;; This function calls:
 12129 ;;		Nothing
 12130 ;; This function is called by:
 12131 ;;		_UI_main
 12132 ;; This function uses a non-reentrant model
 12133 ;;
 12134                           
 12135                           	psect	text46
 12136  003870                     __ptext46:
 12137                           	opt callstack 0
 12138  003870                     ___llmod:
 12139                           	opt callstack 26
 12140                           
 12141                           ;incstack = 0
 12142  003870  0100               	movlb	0	; () banked
 12143  003872  5184               	movf	___llmod@divisor& (0+255),w,b
 12144  003874  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12145  003876  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12146  003878  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12147  00387A  B4D8               	btfsc	status,2,c
 12148  00387C  D024               	goto	l1121
 12149                           
 12150                           ; BSR set to: 0
 12151  00387E  0E01               	movlw	1
 12152  003880  6F88               	movwf	___llmod@counter& (0+255),b
 12153  003882  D006               	goto	l7620
 12154  003884                     l7618:
 12155                           
 12156                           ; BSR set to: 0
 12157  003884  90D8               	bcf	status,0,c
 12158  003886  3784               	rlcf	___llmod@divisor& (0+255),f,b
 12159  003888  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12160  00388A  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12161  00388C  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12162  00388E  2B88               	incf	___llmod@counter& (0+255),f,b
 12163  003890                     l7620:
 12164                           
 12165                           ; BSR set to: 0
 12166  003890  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12167  003892  D7F8               	goto	l7618
 12168  003894                     u8250:
 12169                           
 12170                           ; BSR set to: 0
 12171  003894  5184               	movf	___llmod@divisor& (0+255),w,b
 12172  003896  5D80               	subwf	___llmod@dividend& (0+255),w,b
 12173  003898  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12174  00389A  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12175  00389C  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12176  00389E  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12177  0038A0  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12178  0038A2  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12179  0038A4  A0D8               	btfss	status,0,c
 12180  0038A6  D008               	goto	l7626
 12181                           
 12182                           ; BSR set to: 0
 12183  0038A8  5184               	movf	___llmod@divisor& (0+255),w,b
 12184  0038AA  5F80               	subwf	___llmod@dividend& (0+255),f,b
 12185  0038AC  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12186  0038AE  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12187  0038B0  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12188  0038B2  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12189  0038B4  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12190  0038B6  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12191  0038B8                     l7626:
 12192                           
 12193                           ; BSR set to: 0
 12194  0038B8  90D8               	bcf	status,0,c
 12195  0038BA  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12196  0038BC  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12197  0038BE  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12198  0038C0  3384               	rrcf	___llmod@divisor& (0+255),f,b
 12199                           
 12200                           ; BSR set to: 0
 12201  0038C2  2F88               	decfsz	___llmod@counter& (0+255),f,b
 12202  0038C4  D7E7               	goto	u8250
 12203  0038C6                     l1121:
 12204                           
 12205                           ; BSR set to: 0
 12206  0038C6  C080  F080         	movff	___llmod@dividend,?___llmod
 12207  0038CA  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 12208  0038CE  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 12209  0038D2  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 12210                           
 12211                           ; BSR set to: 0
 12212  0038D6  0012               	return		;funcret
 12213  0038D8                     __end_of___llmod:
 12214                           	opt callstack 0
 12215                           
 12216 ;; *************** function _I2C_Master_Write *****************
 12217 ;; Defined at:
 12218 ;;		line 70 in file "I2C.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;		None
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  1    wreg      void 
 12225 ;; Registers used:
 12226 ;;		wreg, status,2, status,0, cstack
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12235 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12236 ;;Total ram usage:        2 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; Hardware stack levels required when called:    4
 12239 ;; This function calls:
 12240 ;;		_I2C_Master_Wait
 12241 ;; This function is called by:
 12242 ;;		_UI_main
 12243 ;;		_brake
 12244 ;;		_start
 12245 ;;		_backwards
 12246 ;; This function uses a non-reentrant model
 12247 ;;
 12248                           
 12249                           	psect	text47
 12250  003DD0                     __ptext47:
 12251                           	opt callstack 0
 12252  003DD0                     _I2C_Master_Write:
 12253                           	opt callstack 25
 12254                           
 12255                           ;I2C.c: 71:     I2C_Master_Wait();
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;incstack = 0
 12259  003DD0  ECCE  F01E         	call	_I2C_Master_Wait	;wreg free
 12260                           
 12261                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 12262  003DD4  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 12263  003DD8  0012               	return		;funcret
 12264  003DDA                     __end_of_I2C_Master_Write:
 12265                           	opt callstack 0
 12266                           
 12267 ;; *************** function _I2C_Master_Stop *****************
 12268 ;; Defined at:
 12269 ;;		line 65 in file "I2C.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;		None
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;		None
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  1    wreg      void 
 12276 ;; Registers used:
 12277 ;;		wreg, status,2, status,0, cstack
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;Total ram usage:        0 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; Hardware stack levels required when called:    4
 12290 ;; This function calls:
 12291 ;;		_I2C_Master_Wait
 12292 ;; This function is called by:
 12293 ;;		_UI_main
 12294 ;;		_brake
 12295 ;;		_start
 12296 ;;		_backwards
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text48
 12301  003DDA                     __ptext48:
 12302                           	opt callstack 0
 12303  003DDA                     _I2C_Master_Stop:
 12304                           	opt callstack 25
 12305                           
 12306                           ;I2C.c: 66:     I2C_Master_Wait();
 12307                           
 12308                           ;incstack = 0
 12309  003DDA  ECCE  F01E         	call	_I2C_Master_Wait	;wreg free
 12310                           
 12311                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 12312  003DDE  84C5               	bsf	4037,2,c	;volatile
 12313  003DE0  0012               	return		;funcret
 12314  003DE2                     __end_of_I2C_Master_Stop:
 12315                           	opt callstack 0
 12316                           
 12317 ;; *************** function _I2C_Master_Start *****************
 12318 ;; Defined at:
 12319 ;;		line 55 in file "I2C.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;		None
 12322 ;; Auto vars:     Size  Location     Type
 12323 ;;		None
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      void 
 12326 ;; Registers used:
 12327 ;;		wreg, status,2, status,0, cstack
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;Total ram usage:        0 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; Hardware stack levels required when called:    4
 12340 ;; This function calls:
 12341 ;;		_I2C_Master_Wait
 12342 ;; This function is called by:
 12343 ;;		_UI_main
 12344 ;;		_brake
 12345 ;;		_start
 12346 ;;		_backwards
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           	psect	text49
 12351  003DE2                     __ptext49:
 12352                           	opt callstack 0
 12353  003DE2                     _I2C_Master_Start:
 12354                           	opt callstack 25
 12355                           
 12356                           ;I2C.c: 56:     I2C_Master_Wait();
 12357                           
 12358                           ;incstack = 0
 12359  003DE2  ECCE  F01E         	call	_I2C_Master_Wait	;wreg free
 12360                           
 12361                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 12362  003DE6  80C5               	bsf	4037,0,c	;volatile
 12363  003DE8  0012               	return		;funcret
 12364  003DEA                     __end_of_I2C_Master_Start:
 12365                           	opt callstack 0
 12366                           
 12367 ;; *************** function _I2C_Master_Read *****************
 12368 ;; Defined at:
 12369 ;;		line 77 in file "I2C.c"
 12370 ;; Parameters:    Size  Location     Type
 12371 ;;  ackBit          1    wreg     unsigned char 
 12372 ;; Auto vars:     Size  Location     Type
 12373 ;;  ackBit          1    1[BANK0 ] unsigned char 
 12374 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      unsigned char 
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12388 ;;Total ram usage:        2 bytes
 12389 ;; Hardware stack levels used:    1
 12390 ;; Hardware stack levels required when called:    4
 12391 ;; This function calls:
 12392 ;;		_I2C_Master_Wait
 12393 ;; This function is called by:
 12394 ;;		_UI_main
 12395 ;;		_brake
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text50
 12400  003CCA                     __ptext50:
 12401                           	opt callstack 0
 12402  003CCA                     _I2C_Master_Read:
 12403                           	opt callstack 25
 12404                           
 12405                           ;incstack = 0
 12406                           ;I2C_Master_Read@ackBit stored from wreg
 12407  003CCA  0100               	movlb	0	; () banked
 12408  003CCC  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 12409                           
 12410                           ;I2C.c: 78:     I2C_Master_Wait();
 12411  003CCE  ECCE  F01E         	call	_I2C_Master_Wait	;wreg free
 12412                           
 12413                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 12414  003CD2  86C5               	bsf	4037,3,c	;volatile
 12415                           
 12416                           ;I2C.c: 81:     I2C_Master_Wait();
 12417  003CD4  ECCE  F01E         	call	_I2C_Master_Wait	;wreg free
 12418                           
 12419                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 12420  003CD8  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 12421                           
 12422                           ;I2C.c: 86:     I2C_Master_Wait();
 12423  003CDC  ECCE  F01E         	call	_I2C_Master_Wait	;wreg free
 12424                           
 12425                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 12426  003CE0  0100               	movlb	0	; () banked
 12427  003CE2  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 12428  003CE4  D002               	bra	u7795
 12429  003CE6  9AC5               	bcf	4037,5,c	;volatile
 12430  003CE8  D001               	bra	u7796
 12431  003CEA                     u7795:
 12432  003CEA  8AC5               	bsf	4037,5,c	;volatile
 12433  003CEC                     u7796:
 12434                           
 12435                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 12436  003CEC  88C5               	bsf	4037,4,c	;volatile
 12437                           
 12438                           ;I2C.c: 90:     return receivedByte;
 12439  003CEE  0100               	movlb	0	; () banked
 12440  003CF0  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 12441                           
 12442                           ; BSR set to: 0
 12443  003CF2  0012               	return		;funcret
 12444  003CF4                     __end_of_I2C_Master_Read:
 12445                           	opt callstack 0
 12446                           
 12447 ;; *************** function _I2C_Master_Wait *****************
 12448 ;; Defined at:
 12449 ;;		line 21 in file "I2C.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;		None
 12452 ;; Auto vars:     Size  Location     Type
 12453 ;;		None
 12454 ;; Return value:  Size  Location     Type
 12455 ;;                  1    wreg      void 
 12456 ;; Registers used:
 12457 ;;		wreg, status,2, status,0
 12458 ;; Tracked objects:
 12459 ;;		On entry : 0/0
 12460 ;;		On exit  : 0/0
 12461 ;;		Unchanged: 0/0
 12462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12466 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12467 ;;Total ram usage:        1 bytes
 12468 ;; Hardware stack levels used:    1
 12469 ;; Hardware stack levels required when called:    3
 12470 ;; This function calls:
 12471 ;;		Nothing
 12472 ;; This function is called by:
 12473 ;;		_I2C_Master_Start
 12474 ;;		_I2C_Master_Stop
 12475 ;;		_I2C_Master_Write
 12476 ;;		_I2C_Master_Read
 12477 ;;		_I2C_Master_RepeatedStart
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           
 12481                           	psect	text51
 12482  003D9C                     __ptext51:
 12483                           	opt callstack 0
 12484  003D9C                     _I2C_Master_Wait:
 12485                           	opt callstack 25
 12486                           
 12487                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12488                           
 12489                           ;I2C.c: 28:     }
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;incstack = 0
 12493  003D9C  B4C7               	btfsc	4039,2,c	;volatile
 12494  003D9E  D7FE               	goto	_I2C_Master_Wait
 12495  003DA0  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12496  003DA4  0E1F               	movlw	31
 12497  003DA6  0100               	movlb	0	; () banked
 12498  003DA8  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12499  003DAA  B4D8               	btfsc	status,2,c
 12500  003DAC  0012               	return	
 12501  003DAE  D7F6               	goto	_I2C_Master_Wait
 12502  003DB0                     __end_of_I2C_Master_Wait:
 12503                           	opt callstack 0
 12504                           
 12505 ;; *************** function _I2C_Master_Init *****************
 12506 ;; Defined at:
 12507 ;;		line 32 in file "I2C.c"
 12508 ;; Parameters:    Size  Location     Type
 12509 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12510 ;; Auto vars:     Size  Location     Type
 12511 ;;		None
 12512 ;; Return value:  Size  Location     Type
 12513 ;;                  1    wreg      void 
 12514 ;; Registers used:
 12515 ;;		wreg, status,2, status,0, cstack
 12516 ;; Tracked objects:
 12517 ;;		On entry : 0/0
 12518 ;;		On exit  : 0/0
 12519 ;;		Unchanged: 0/0
 12520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12523 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12524 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12525 ;;Total ram usage:        8 bytes
 12526 ;; Hardware stack levels used:    1
 12527 ;; Hardware stack levels required when called:    4
 12528 ;; This function calls:
 12529 ;;		___lldiv
 12530 ;; This function is called by:
 12531 ;;		_UI_main
 12532 ;;		_start
 12533 ;; This function uses a non-reentrant model
 12534 ;;
 12535                           
 12536                           	psect	text52
 12537  0038D8                     __ptext52:
 12538                           	opt callstack 0
 12539  0038D8                     _I2C_Master_Init:
 12540                           	opt callstack 25
 12541                           
 12542                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;incstack = 0
 12546  0038D8  9AC6               	bcf	4038,5,c	;volatile
 12547                           
 12548                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12549  0038DA  8694               	bsf	3988,3,c	;volatile
 12550                           
 12551                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12552  0038DC  8894               	bsf	3988,4,c	;volatile
 12553                           
 12554                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12555  0038DE  0E80               	movlw	128
 12556  0038E0  0100               	movlb	0	; () banked
 12557  0038E2  6F80               	movwf	___lldiv@dividend& (0+255),b
 12558  0038E4  0E96               	movlw	150
 12559  0038E6  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12560  0038E8  0E98               	movlw	152
 12561  0038EA  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12562  0038EC  0E00               	movlw	0
 12563  0038EE  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12564  0038F0  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12565  0038F4  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12566  0038F8  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12567  0038FC  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12568  003900  0E02               	movlw	2
 12569  003902                     u7785:
 12570  003902  90D8               	bcf	status,0,c
 12571  003904  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12572  003906  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12573  003908  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12574  00390A  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12575  00390C  2EE8               	decfsz	wreg,f,c
 12576  00390E  D7F9               	goto	u7785
 12577  003910  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12578  003914  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12579  003918  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12580  00391C  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12581  003920  EC06  F01B         	call	___lldiv	;wreg free
 12582  003924  0100               	movlb	0	; () banked
 12583  003926  0580               	decf	?___lldiv& (0+255),w,b
 12584  003928  6EC8               	movwf	4040,c	;volatile
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12588  00392A  0E80               	movlw	128
 12589  00392C  6EC7               	movwf	4039,c	;volatile
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12593  00392E  0E28               	movlw	40
 12594  003930  6EC6               	movwf	4038,c	;volatile
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12598  003932  0E00               	movlw	0
 12599  003934  6EC5               	movwf	4037,c	;volatile
 12600                           
 12601                           ; BSR set to: 0
 12602  003936  0012               	return		;funcret
 12603  003938                     __end_of_I2C_Master_Init:
 12604                           	opt callstack 0
 12605                           
 12606 ;; *************** function ___lldiv *****************
 12607 ;; Defined at:
 12608 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;  dividend        4    0[BANK0 ] unsigned long 
 12611 ;;  divisor         4    4[BANK0 ] unsigned long 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;  quotient        4    8[BANK0 ] unsigned long 
 12614 ;;  counter         1   12[BANK0 ] unsigned char 
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  4    0[BANK0 ] unsigned long 
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, status,0
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12624 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;Total ram usage:       13 bytes
 12629 ;; Hardware stack levels used:    1
 12630 ;; Hardware stack levels required when called:    3
 12631 ;; This function calls:
 12632 ;;		Nothing
 12633 ;; This function is called by:
 12634 ;;		_I2C_Master_Init
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638                           	psect	text53
 12639  00360C                     __ptext53:
 12640                           	opt callstack 0
 12641  00360C                     ___lldiv:
 12642                           	opt callstack 25
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;incstack = 0
 12646  00360C  0E00               	movlw	0
 12647  00360E  0100               	movlb	0	; () banked
 12648  003610  6F88               	movwf	___lldiv@quotient& (0+255),b
 12649  003612  0E00               	movlw	0
 12650  003614  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12651  003616  0E00               	movlw	0
 12652  003618  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12653  00361A  0E00               	movlw	0
 12654  00361C  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12655                           
 12656                           ; BSR set to: 0
 12657  00361E  5184               	movf	___lldiv@divisor& (0+255),w,b
 12658  003620  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12659  003622  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12660  003624  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12661  003626  B4D8               	btfsc	status,2,c
 12662  003628  D02A               	goto	l728
 12663                           
 12664                           ; BSR set to: 0
 12665  00362A  0E01               	movlw	1
 12666  00362C  6F8C               	movwf	___lldiv@counter& (0+255),b
 12667  00362E  D006               	goto	l7232
 12668  003630                     l7230:
 12669                           
 12670                           ; BSR set to: 0
 12671  003630  90D8               	bcf	status,0,c
 12672  003632  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12673  003634  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12674  003636  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12675  003638  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12676  00363A  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12677  00363C                     l7232:
 12678                           
 12679                           ; BSR set to: 0
 12680  00363C  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12681  00363E  D7F8               	goto	l7230
 12682  003640                     u7760:
 12683                           
 12684                           ; BSR set to: 0
 12685  003640  90D8               	bcf	status,0,c
 12686  003642  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12687  003644  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12688  003646  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12689  003648  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12690                           
 12691                           ; BSR set to: 0
 12692  00364A  5184               	movf	___lldiv@divisor& (0+255),w,b
 12693  00364C  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12694  00364E  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12695  003650  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12696  003652  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12697  003654  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12698  003656  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12699  003658  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12700  00365A  A0D8               	btfss	status,0,c
 12701  00365C  D009               	goto	l7242
 12702                           
 12703                           ; BSR set to: 0
 12704  00365E  5184               	movf	___lldiv@divisor& (0+255),w,b
 12705  003660  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12706  003662  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12707  003664  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12708  003666  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12709  003668  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12710  00366A  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12711  00366C  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12712                           
 12713                           ; BSR set to: 0
 12714  00366E  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12715  003670                     l7242:
 12716                           
 12717                           ; BSR set to: 0
 12718  003670  90D8               	bcf	status,0,c
 12719  003672  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12720  003674  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12721  003676  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12722  003678  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12723                           
 12724                           ; BSR set to: 0
 12725  00367A  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12726  00367C  D7E1               	goto	u7760
 12727  00367E                     l728:
 12728                           
 12729                           ; BSR set to: 0
 12730  00367E  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12731  003682  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12732  003686  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12733  00368A  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12734                           
 12735                           ; BSR set to: 0
 12736  00368E  0012               	return		;funcret
 12737  003690                     __end_of___lldiv:
 12738                           	opt callstack 0
 12739                           
 12740 ;; *************** function _ISR *****************
 12741 ;; Defined at:
 12742 ;;		line 71 in file "main.c"
 12743 ;; Parameters:    Size  Location     Type
 12744 ;;		None
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;		None
 12747 ;; Return value:  Size  Location     Type
 12748 ;;                  1    wreg      void 
 12749 ;; Registers used:
 12750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/0
 12753 ;;		On exit  : 0/0
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;Total ram usage:        2 bytes
 12761 ;; Hardware stack levels used:    1
 12762 ;; Hardware stack levels required when called:    2
 12763 ;; This function calls:
 12764 ;;		_echo
 12765 ;; This function is called by:
 12766 ;;		Interrupt level 2
 12767 ;; This function uses a non-reentrant model
 12768 ;;
 12769                           
 12770                           	psect	intcode
 12771  000008                     __pintcode:
 12772                           	opt callstack 0
 12773  000008                     _ISR:
 12774                           	opt callstack 14
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;incstack = 0
 12778  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12779  00000A  ED61  F01D         	call	int_func,f	;refresh shadow registers
 12780                           
 12781                           	psect	intcode_body
 12782  003AC2                     __pintcode_body:
 12783                           	opt callstack 14
 12784  003AC2                     int_func:
 12785                           	opt callstack 14
 12786  003AC2  0006               	pop		; remove dummy address from shadow register refresh
 12787  003AC4  CFD9 F036          	movff	fsr2l,??_ISR
 12788  003AC8  CFDA F037          	movff	fsr2h,??_ISR+1
 12789                           
 12790                           ;main.c: 72:  if(RBIF == 1){
 12791  003ACC  A0F2               	btfss	4082,0,c	;volatile
 12792  003ACE  D012               	goto	i2l383
 12793                           
 12794                           ;main.c: 73:         if (sens){
 12795  003AD0  5058               	movf	_sens,w,c	;volatile
 12796  003AD2  1059               	iorwf	_sens+1,w,c	;volatile
 12797  003AD4  B4D8               	btfsc	status,2,c
 12798  003AD6  D005               	goto	i2l6122
 12799                           
 12800                           ;main.c: 74:             RBIE = 0;
 12801  003AD8  96F2               	bcf	4082,3,c	;volatile
 12802                           
 12803                           ;main.c: 75:             echo();
 12804  003ADA  EC1C  F007         	call	_echo	;wreg free
 12805                           
 12806                           ;main.c: 76:             RBIF = 0;
 12807  003ADE  90F2               	bcf	4082,0,c	;volatile
 12808                           
 12809                           ;main.c: 77:             RBIE = 1;
 12810  003AE0  86F2               	bsf	4082,3,c	;volatile
 12811  003AE2                     i2l6122:
 12812                           
 12813                           ;main.c: 79:         if (~sens){
 12814  003AE2  2858               	incf	_sens,w,c	;volatile
 12815  003AE4  E103               	bnz	i2u635_40
 12816  003AE6  2859               	incf	_sens+1,w,c	;volatile
 12817  003AE8  B4D8               	btfsc	status,2,c
 12818  003AEA  D004               	goto	i2l383
 12819  003AEC                     i2u635_40:
 12820                           
 12821                           ;main.c: 80:             key_was_pressed = 1;
 12822  003AEC  0E01               	movlw	1
 12823  003AEE  0101               	movlb	1	; () banked
 12824  003AF0  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
 12825                           
 12826                           ; BSR set to: 1
 12827                           ;main.c: 81:             INT1IF = 0;
 12828  003AF2  90F0               	bcf	4080,0,c	;volatile
 12829  003AF4                     i2l383:
 12830  003AF4  C037  FFDA         	movff	??_ISR+1,fsr2h
 12831  003AF8  C036  FFD9         	movff	??_ISR,fsr2l
 12832  003AFC  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12833  003AFE  0011               	retfie		f
 12834  003B00                     __end_of_ISR:
 12835                           	opt callstack 0
 12836                           
 12837 ;; *************** function _echo *****************
 12838 ;; Defined at:
 12839 ;;		line 99 in file "main.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;		None
 12842 ;; Auto vars:     Size  Location     Type
 12843 ;;		None
 12844 ;; Return value:  Size  Location     Type
 12845 ;;                  1    wreg      void 
 12846 ;; Registers used:
 12847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12848 ;; Tracked objects:
 12849 ;;		On entry : 0/0
 12850 ;;		On exit  : 0/0
 12851 ;;		Unchanged: 0/0
 12852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12857 ;;Total ram usage:        4 bytes
 12858 ;; Hardware stack levels used:    1
 12859 ;; Hardware stack levels required when called:    1
 12860 ;; This function calls:
 12861 ;;		___fldiv
 12862 ;;		___fltol
 12863 ;;		___xxtofl
 12864 ;;		i2___awdiv
 12865 ;; This function is called by:
 12866 ;;		_ISR
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           	psect	text55
 12871  000E38                     __ptext55:
 12872                           	opt callstack 0
 12873  000E38                     _echo:
 12874                           	opt callstack 14
 12875                           
 12876                           ;main.c: 100:     if (b==1){
 12877                           
 12878                           ;incstack = 0
 12879  000E38  045A               	decf	_b,w,c
 12880  000E3A  105B               	iorwf	_b+1,w,c
 12881  000E3C  A4D8               	btfss	status,2,c
 12882  000E3E  D0A2               	goto	i2l5568
 12883                           
 12884                           ;main.c: 101:         if (RB7 == 1){
 12885  000E40  BE81               	btfsc	3969,7,c	;volatile
 12886                           
 12887                           ;main.c: 102:             TMR1ON = 1;
 12888  000E42  80CD               	bsf	4045,0,c	;volatile
 12889                           
 12890                           ;main.c: 104:         if (RB7 == 0){
 12891                           
 12892                           ;main.c: 103:         }
 12893  000E44  BE81               	btfsc	3969,7,c	;volatile
 12894  000E46  D037               	goto	i2l5544
 12895                           
 12896                           ;main.c: 105:             TMR1ON = 0;
 12897  000E48  90CD               	bcf	4045,0,c	;volatile
 12898                           
 12899                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 12900  000E4A  0EAE               	movlw	174
 12901  000E4C  6E13               	movwf	___fldiv@a,c
 12902  000E4E  0E47               	movlw	71
 12903  000E50  6E14               	movwf	___fldiv@a+1,c
 12904  000E52  0E6B               	movlw	107
 12905  000E54  6E15               	movwf	___fldiv@a+2,c
 12906  000E56  0E42               	movlw	66
 12907  000E58  6E16               	movwf	___fldiv@a+3,c
 12908  000E5A  50CF               	movf	4047,w,c	;volatile
 12909  000E5C  6E33               	movwf	(??_echo+1)& (0+255),c
 12910  000E5E  6A32               	clrf	??_echo& (0+255),c
 12911  000E60  50CE               	movf	4046,w,c	;volatile
 12912  000E62  6E34               	movwf	(??_echo+2)& (0+255),c
 12913  000E64  6A35               	clrf	(??_echo+3)& (0+255),c
 12914  000E66  5032               	movf	??_echo,w,c
 12915  000E68  1234               	iorwf	??_echo+2,f,c
 12916  000E6A  5033               	movf	??_echo+1,w,c
 12917  000E6C  1235               	iorwf	??_echo+3,f,c
 12918  000E6E  C034  F001         	movff	??_echo+2,___xxtofl@val
 12919  000E72  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12920  000E76  0E00               	movlw	0
 12921  000E78  BE02               	btfsc	___xxtofl@val+1,7,c
 12922  000E7A  0EFF               	movlw	-1
 12923  000E7C  6E03               	movwf	___xxtofl@val+2,c
 12924  000E7E  6E04               	movwf	___xxtofl@val+3,c
 12925  000E80  0E01               	movlw	1
 12926  000E82  ECD2  F014         	call	___xxtofl
 12927  000E86  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12928  000E8A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12929  000E8E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12930  000E92  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12931  000E96  EC2B  F00D         	call	___fldiv	;wreg free
 12932  000E9A  C00F  F028         	movff	?___fldiv,___fltol@f1
 12933  000E9E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12934  000EA2  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12935  000EA6  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12936  000EAA  EC14  F019         	call	___fltol	;wreg free
 12937  000EAE  C028  F061         	movff	?___fltol,_a
 12938  000EB2  C029  F062         	movff	?___fltol+1,_a+1
 12939  000EB6                     i2l5544:
 12940                           
 12941                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 12942  000EB6  BE62               	btfsc	_a+1,7,c
 12943  000EB8  D065               	goto	i2l5568
 12944  000EBA  5062               	movf	_a+1,w,c
 12945  000EBC  E104               	bnz	i2u548_40
 12946  000EBE  0E02               	movlw	2
 12947  000EC0  5C61               	subwf	_a,w,c
 12948  000EC2  A0D8               	btfss	status,0,c
 12949  000EC4  D05F               	goto	i2l5568
 12950  000EC6                     i2u548_40:
 12951  000EC6  BE62               	btfsc	_a+1,7,c
 12952  000EC8  D006               	goto	i2u549_40
 12953  000ECA  5062               	movf	_a+1,w,c
 12954  000ECC  E15B               	bnz	i2l5568
 12955  000ECE  0EC9               	movlw	201
 12956  000ED0  5C61               	subwf	_a,w,c
 12957  000ED2  B0D8               	btfsc	status,0,c
 12958  000ED4  D057               	goto	i2l5568
 12959  000ED6                     i2u549_40:
 12960                           
 12961                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 12962  000ED6  0440               	decf	_sumf,w,c
 12963  000ED8  B4D8               	btfsc	status,2,c
 12964  000EDA  D01B               	goto	i2l5560
 12965  000EDC  0102               	movlb	2	; () banked
 12966  000EDE  5150               	movf	_dist_final& (0+255),w,b
 12967  000EE0  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 12968  000EE2  B4D8               	btfsc	status,2,c
 12969  000EE4  D016               	goto	i2l5560
 12970                           
 12971                           ; BSR set to: 2
 12972  000EE6  5152               	movf	(_dist_final+2)& (0+255),w,b
 12973  000EE8  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 12974  000EEA  B4D8               	btfsc	status,2,c
 12975  000EEC  D012               	goto	i2l5560
 12976                           
 12977                           ; BSR set to: 2
 12978  000EEE  5154               	movf	(_dist_final+4)& (0+255),w,b
 12979  000EF0  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 12980  000EF2  B4D8               	btfsc	status,2,c
 12981  000EF4  D00E               	goto	i2l5560
 12982                           
 12983                           ; BSR set to: 2
 12984                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 12985  000EF6  5154               	movf	(_dist_final+4)& (0+255),w,b
 12986  000EF8  2552               	addwf	(_dist_final+2)& (0+255),w,b
 12987  000EFA  6E32               	movwf	??_echo& (0+255),c
 12988  000EFC  5155               	movf	(_dist_final+5)& (0+255),w,b
 12989  000EFE  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 12990  000F00  6E33               	movwf	(??_echo+1)& (0+255),c
 12991  000F02  5150               	movf	_dist_final& (0+255),w,b
 12992  000F04  2432               	addwf	??_echo,w,c
 12993  000F06  6E38               	movwf	_sum,c
 12994  000F08  5151               	movf	(_dist_final+1)& (0+255),w,b
 12995  000F0A  2033               	addwfc	??_echo+1,w,c
 12996  000F0C  6E39               	movwf	_sum+1,c
 12997                           
 12998                           ; BSR set to: 2
 12999                           ;main.c: 113:                 sumf[0] = 1;
 13000  000F0E  0E01               	movlw	1
 13001  000F10  6E40               	movwf	_sumf,c
 13002  000F12                     i2l5560:
 13003                           
 13004                           ;main.c: 115:             if (sumf[0]){
 13005  000F12  5040               	movf	_sumf,w,c
 13006  000F14  B4D8               	btfsc	status,2,c
 13007  000F16  D029               	goto	i2l5566
 13008                           
 13009                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 13010  000F18  90D8               	bcf	status,0,c
 13011  000F1A  3450               	rlcf	_meas,w,c	;volatile
 13012  000F1C  6ED9               	movwf	fsr2l,c
 13013  000F1E  3451               	rlcf	_meas+1,w,c	;volatile
 13014  000F20  6EDA               	movwf	fsr2h,c
 13015  000F22  0E50               	movlw	low _dist_final
 13016  000F24  26D9               	addwf	fsr2l,f,c
 13017  000F26  0E02               	movlw	high _dist_final
 13018  000F28  22DA               	addwfc	fsr2h,f,c
 13019  000F2A  CFDE F032          	movff	postinc2,??_echo
 13020  000F2E  CFDD F033          	movff	postdec2,??_echo+1
 13021  000F32  C038  F034         	movff	_sum,??_echo+2
 13022  000F36  C039  F035         	movff	_sum+1,??_echo+3
 13023  000F3A  5032               	movf	??_echo,w,c
 13024  000F3C  5E34               	subwf	??_echo+2,f,c
 13025  000F3E  5033               	movf	??_echo+1,w,c
 13026  000F40  5A35               	subwfb	??_echo+3,f,c
 13027  000F42  5061               	movf	_a,w,c
 13028  000F44  2434               	addwf	??_echo+2,w,c
 13029  000F46  6E38               	movwf	_sum,c
 13030  000F48  5062               	movf	_a+1,w,c
 13031  000F4A  2035               	addwfc	??_echo+3,w,c
 13032  000F4C  6E39               	movwf	_sum+1,c
 13033                           
 13034                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 13035  000F4E  C038  F001         	movff	_sum,i2___awdiv@dividend
 13036  000F52  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 13037  000F56  0E00               	movlw	0
 13038  000F58  6E04               	movwf	i2___awdiv@divisor+1,c
 13039  000F5A  0E05               	movlw	5
 13040  000F5C  6E03               	movwf	i2___awdiv@divisor,c
 13041  000F5E  EC48  F01B         	call	i2___awdiv	;wreg free
 13042  000F62  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 13043  000F66  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 13044  000F6A                     i2l5566:
 13045                           
 13046                           ;main.c: 119:             dist_final[0][meas] = a[0];
 13047  000F6A  90D8               	bcf	status,0,c
 13048  000F6C  3450               	rlcf	_meas,w,c	;volatile
 13049  000F6E  6ED9               	movwf	fsr2l,c
 13050  000F70  3451               	rlcf	_meas+1,w,c	;volatile
 13051  000F72  6EDA               	movwf	fsr2h,c
 13052  000F74  0E50               	movlw	low _dist_final
 13053  000F76  26D9               	addwf	fsr2l,f,c
 13054  000F78  0E02               	movlw	high _dist_final
 13055  000F7A  22DA               	addwfc	fsr2h,f,c
 13056  000F7C  C061  FFDE         	movff	_a,postinc2
 13057  000F80  C062  FFDD         	movff	_a+1,postdec2
 13058  000F84                     i2l5568:
 13059                           
 13060                           ;main.c: 122:     if (b==2){
 13061  000F84  0E02               	movlw	2
 13062  000F86  185A               	xorwf	_b,w,c
 13063  000F88  105B               	iorwf	_b+1,w,c
 13064  000F8A  A4D8               	btfss	status,2,c
 13065  000F8C  D0A4               	goto	i2l5602
 13066                           
 13067                           ;main.c: 123:         if (RB6 == 1){
 13068  000F8E  BC81               	btfsc	3969,6,c	;volatile
 13069                           
 13070                           ;main.c: 124:             TMR1ON = 1;
 13071  000F90  80CD               	bsf	4045,0,c	;volatile
 13072                           
 13073                           ;main.c: 126:         if (RB6 == 0){
 13074                           
 13075                           ;main.c: 125:         }
 13076  000F92  BC81               	btfsc	3969,6,c	;volatile
 13077  000F94  D037               	goto	i2l5578
 13078                           
 13079                           ;main.c: 127:             TMR1ON = 0;
 13080  000F96  90CD               	bcf	4045,0,c	;volatile
 13081                           
 13082                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 13083  000F98  0EAE               	movlw	174
 13084  000F9A  6E13               	movwf	___fldiv@a,c
 13085  000F9C  0E47               	movlw	71
 13086  000F9E  6E14               	movwf	___fldiv@a+1,c
 13087  000FA0  0E6B               	movlw	107
 13088  000FA2  6E15               	movwf	___fldiv@a+2,c
 13089  000FA4  0E42               	movlw	66
 13090  000FA6  6E16               	movwf	___fldiv@a+3,c
 13091  000FA8  50CF               	movf	4047,w,c	;volatile
 13092  000FAA  6E33               	movwf	(??_echo+1)& (0+255),c
 13093  000FAC  6A32               	clrf	??_echo& (0+255),c
 13094  000FAE  50CE               	movf	4046,w,c	;volatile
 13095  000FB0  6E34               	movwf	(??_echo+2)& (0+255),c
 13096  000FB2  6A35               	clrf	(??_echo+3)& (0+255),c
 13097  000FB4  5032               	movf	??_echo,w,c
 13098  000FB6  1234               	iorwf	??_echo+2,f,c
 13099  000FB8  5033               	movf	??_echo+1,w,c
 13100  000FBA  1235               	iorwf	??_echo+3,f,c
 13101  000FBC  C034  F001         	movff	??_echo+2,___xxtofl@val
 13102  000FC0  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13103  000FC4  0E00               	movlw	0
 13104  000FC6  BE02               	btfsc	___xxtofl@val+1,7,c
 13105  000FC8  0EFF               	movlw	-1
 13106  000FCA  6E03               	movwf	___xxtofl@val+2,c
 13107  000FCC  6E04               	movwf	___xxtofl@val+3,c
 13108  000FCE  0E01               	movlw	1
 13109  000FD0  ECD2  F014         	call	___xxtofl
 13110  000FD4  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13111  000FD8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13112  000FDC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13113  000FE0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13114  000FE4  EC2B  F00D         	call	___fldiv	;wreg free
 13115  000FE8  C00F  F028         	movff	?___fldiv,___fltol@f1
 13116  000FEC  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13117  000FF0  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13118  000FF4  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13119  000FF8  EC14  F019         	call	___fltol	;wreg free
 13120  000FFC  C028  F063         	movff	?___fltol,_a+2
 13121  001000  C029  F064         	movff	?___fltol+1,_a+3
 13122  001004                     i2l5578:
 13123                           
 13124                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 13125  001004  BE64               	btfsc	_a+3,7,c
 13126  001006  D067               	goto	i2l5602
 13127  001008  5064               	movf	_a+3,w,c
 13128  00100A  E104               	bnz	i2u558_40
 13129  00100C  0E02               	movlw	2
 13130  00100E  5C63               	subwf	_a+2,w,c
 13131  001010  A0D8               	btfss	status,0,c
 13132  001012  D061               	goto	i2l5602
 13133  001014                     i2u558_40:
 13134  001014  BE64               	btfsc	_a+3,7,c
 13135  001016  D006               	goto	i2u559_40
 13136  001018  5064               	movf	_a+3,w,c
 13137  00101A  E15D               	bnz	i2l5602
 13138  00101C  0EC9               	movlw	201
 13139  00101E  5C63               	subwf	_a+2,w,c
 13140  001020  B0D8               	btfsc	status,0,c
 13141  001022  D059               	goto	i2l5602
 13142  001024                     i2u559_40:
 13143                           
 13144                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 13145  001024  0441               	decf	_sumf+1,w,c
 13146  001026  B4D8               	btfsc	status,2,c
 13147  001028  D01B               	goto	i2l5594
 13148  00102A  0102               	movlb	2	; () banked
 13149  00102C  515C               	movf	(_dist_final+12)& (0+255),w,b
 13150  00102E  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 13151  001030  B4D8               	btfsc	status,2,c
 13152  001032  D016               	goto	i2l5594
 13153                           
 13154                           ; BSR set to: 2
 13155  001034  515E               	movf	(_dist_final+14)& (0+255),w,b
 13156  001036  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 13157  001038  B4D8               	btfsc	status,2,c
 13158  00103A  D012               	goto	i2l5594
 13159                           
 13160                           ; BSR set to: 2
 13161  00103C  5160               	movf	(_dist_final+16)& (0+255),w,b
 13162  00103E  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 13163  001040  B4D8               	btfsc	status,2,c
 13164  001042  D00E               	goto	i2l5594
 13165                           
 13166                           ; BSR set to: 2
 13167                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 13168  001044  515E               	movf	(_dist_final+14)& (0+255),w,b
 13169  001046  255C               	addwf	(_dist_final+12)& (0+255),w,b
 13170  001048  6E32               	movwf	??_echo& (0+255),c
 13171  00104A  515F               	movf	(_dist_final+15)& (0+255),w,b
 13172  00104C  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 13173  00104E  6E33               	movwf	(??_echo+1)& (0+255),c
 13174  001050  5160               	movf	(_dist_final+16)& (0+255),w,b
 13175  001052  2432               	addwf	??_echo,w,c
 13176  001054  6E3A               	movwf	_sum+2,c
 13177  001056  5161               	movf	(_dist_final+17)& (0+255),w,b
 13178  001058  2033               	addwfc	??_echo+1,w,c
 13179  00105A  6E3B               	movwf	_sum+3,c
 13180                           
 13181                           ; BSR set to: 2
 13182                           ;main.c: 135:             sumf[1] = 1;
 13183  00105C  0E01               	movlw	1
 13184  00105E  6E41               	movwf	_sumf+1,c
 13185  001060                     i2l5594:
 13186                           
 13187                           ;main.c: 137:         if (sumf[1]){
 13188  001060  5041               	movf	_sumf+1,w,c
 13189  001062  B4D8               	btfsc	status,2,c
 13190  001064  D02B               	goto	i2l5600
 13191                           
 13192                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 13193  001066  90D8               	bcf	status,0,c
 13194  001068  3450               	rlcf	_meas,w,c	;volatile
 13195  00106A  6ED9               	movwf	fsr2l,c
 13196  00106C  3451               	rlcf	_meas+1,w,c	;volatile
 13197  00106E  6EDA               	movwf	fsr2h,c
 13198  001070  0E5C               	movlw	low (_dist_final+12)
 13199  001072  26D9               	addwf	fsr2l,f,c
 13200  001074  0E02               	movlw	high (_dist_final+12)
 13201  001076  22DA               	addwfc	fsr2h,f,c
 13202  001078  CFDE F032          	movff	postinc2,??_echo
 13203  00107C  CFDD F033          	movff	postdec2,??_echo+1
 13204  001080  EE20  F03A         	lfsr	2,_sum+2
 13205  001084  CFDE F034          	movff	postinc2,??_echo+2
 13206  001088  CFDD F035          	movff	postdec2,??_echo+3
 13207  00108C  5032               	movf	??_echo,w,c
 13208  00108E  5E34               	subwf	??_echo+2,f,c
 13209  001090  5033               	movf	??_echo+1,w,c
 13210  001092  5A35               	subwfb	??_echo+3,f,c
 13211  001094  5063               	movf	_a+2,w,c
 13212  001096  2434               	addwf	??_echo+2,w,c
 13213  001098  6E3A               	movwf	_sum+2,c
 13214  00109A  5064               	movf	_a+3,w,c
 13215  00109C  2035               	addwfc	??_echo+3,w,c
 13216  00109E  6E3B               	movwf	_sum+3,c
 13217                           
 13218                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 13219  0010A0  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 13220  0010A4  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 13221  0010A8  0E00               	movlw	0
 13222  0010AA  6E04               	movwf	i2___awdiv@divisor+1,c
 13223  0010AC  0E05               	movlw	5
 13224  0010AE  6E03               	movwf	i2___awdiv@divisor,c
 13225  0010B0  EC48  F01B         	call	i2___awdiv	;wreg free
 13226  0010B4  C001  F266         	movff	?i2___awdiv,_dist_final+22
 13227  0010B8  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 13228  0010BC                     i2l5600:
 13229                           
 13230                           ;main.c: 141:         dist_final[1][meas] = a[1];
 13231  0010BC  90D8               	bcf	status,0,c
 13232  0010BE  3450               	rlcf	_meas,w,c	;volatile
 13233  0010C0  6ED9               	movwf	fsr2l,c
 13234  0010C2  3451               	rlcf	_meas+1,w,c	;volatile
 13235  0010C4  6EDA               	movwf	fsr2h,c
 13236  0010C6  0E5C               	movlw	low (_dist_final+12)
 13237  0010C8  26D9               	addwf	fsr2l,f,c
 13238  0010CA  0E02               	movlw	high (_dist_final+12)
 13239  0010CC  22DA               	addwfc	fsr2h,f,c
 13240  0010CE  C063  FFDE         	movff	_a+2,postinc2
 13241  0010D2  C064  FFDD         	movff	_a+3,postdec2
 13242  0010D6                     i2l5602:
 13243                           
 13244                           ;main.c: 144:     if (b==3){
 13245  0010D6  0E03               	movlw	3
 13246  0010D8  185A               	xorwf	_b,w,c
 13247  0010DA  105B               	iorwf	_b+1,w,c
 13248  0010DC  A4D8               	btfss	status,2,c
 13249  0010DE  D0A4               	goto	i2l5636
 13250                           
 13251                           ;main.c: 145:         if (RB5 == 1){
 13252  0010E0  BA81               	btfsc	3969,5,c	;volatile
 13253                           
 13254                           ;main.c: 146:             TMR1ON = 1;
 13255  0010E2  80CD               	bsf	4045,0,c	;volatile
 13256                           
 13257                           ;main.c: 148:         if (RB5 == 0){
 13258                           
 13259                           ;main.c: 147:         }
 13260  0010E4  BA81               	btfsc	3969,5,c	;volatile
 13261  0010E6  D037               	goto	i2l5612
 13262                           
 13263                           ;main.c: 149:             TMR1ON = 0;
 13264  0010E8  90CD               	bcf	4045,0,c	;volatile
 13265                           
 13266                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 13267  0010EA  0EAE               	movlw	174
 13268  0010EC  6E13               	movwf	___fldiv@a,c
 13269  0010EE  0E47               	movlw	71
 13270  0010F0  6E14               	movwf	___fldiv@a+1,c
 13271  0010F2  0E6B               	movlw	107
 13272  0010F4  6E15               	movwf	___fldiv@a+2,c
 13273  0010F6  0E42               	movlw	66
 13274  0010F8  6E16               	movwf	___fldiv@a+3,c
 13275  0010FA  50CF               	movf	4047,w,c	;volatile
 13276  0010FC  6E33               	movwf	(??_echo+1)& (0+255),c
 13277  0010FE  6A32               	clrf	??_echo& (0+255),c
 13278  001100  50CE               	movf	4046,w,c	;volatile
 13279  001102  6E34               	movwf	(??_echo+2)& (0+255),c
 13280  001104  6A35               	clrf	(??_echo+3)& (0+255),c
 13281  001106  5032               	movf	??_echo,w,c
 13282  001108  1234               	iorwf	??_echo+2,f,c
 13283  00110A  5033               	movf	??_echo+1,w,c
 13284  00110C  1235               	iorwf	??_echo+3,f,c
 13285  00110E  C034  F001         	movff	??_echo+2,___xxtofl@val
 13286  001112  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13287  001116  0E00               	movlw	0
 13288  001118  BE02               	btfsc	___xxtofl@val+1,7,c
 13289  00111A  0EFF               	movlw	-1
 13290  00111C  6E03               	movwf	___xxtofl@val+2,c
 13291  00111E  6E04               	movwf	___xxtofl@val+3,c
 13292  001120  0E01               	movlw	1
 13293  001122  ECD2  F014         	call	___xxtofl
 13294  001126  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13295  00112A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13296  00112E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13297  001132  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13298  001136  EC2B  F00D         	call	___fldiv	;wreg free
 13299  00113A  C00F  F028         	movff	?___fldiv,___fltol@f1
 13300  00113E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13301  001142  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13302  001146  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13303  00114A  EC14  F019         	call	___fltol	;wreg free
 13304  00114E  C028  F065         	movff	?___fltol,_a+4
 13305  001152  C029  F066         	movff	?___fltol+1,_a+5
 13306  001156                     i2l5612:
 13307                           
 13308                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 13309  001156  BE66               	btfsc	_a+5,7,c
 13310  001158  D067               	goto	i2l5636
 13311  00115A  5066               	movf	_a+5,w,c
 13312  00115C  E104               	bnz	i2u568_40
 13313  00115E  0E02               	movlw	2
 13314  001160  5C65               	subwf	_a+4,w,c
 13315  001162  A0D8               	btfss	status,0,c
 13316  001164  D061               	goto	i2l5636
 13317  001166                     i2u568_40:
 13318  001166  BE66               	btfsc	_a+5,7,c
 13319  001168  D006               	goto	i2u569_40
 13320  00116A  5066               	movf	_a+5,w,c
 13321  00116C  E15D               	bnz	i2l5636
 13322  00116E  0EC9               	movlw	201
 13323  001170  5C65               	subwf	_a+4,w,c
 13324  001172  B0D8               	btfsc	status,0,c
 13325  001174  D059               	goto	i2l5636
 13326  001176                     i2u569_40:
 13327                           
 13328                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 13329  001176  0442               	decf	_sumf+2,w,c
 13330  001178  B4D8               	btfsc	status,2,c
 13331  00117A  D01B               	goto	i2l5628
 13332  00117C  0102               	movlb	2	; () banked
 13333  00117E  5168               	movf	(_dist_final+24)& (0+255),w,b
 13334  001180  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 13335  001182  B4D8               	btfsc	status,2,c
 13336  001184  D016               	goto	i2l5628
 13337                           
 13338                           ; BSR set to: 2
 13339  001186  516A               	movf	(_dist_final+26)& (0+255),w,b
 13340  001188  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 13341  00118A  B4D8               	btfsc	status,2,c
 13342  00118C  D012               	goto	i2l5628
 13343                           
 13344                           ; BSR set to: 2
 13345  00118E  516C               	movf	(_dist_final+28)& (0+255),w,b
 13346  001190  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 13347  001192  B4D8               	btfsc	status,2,c
 13348  001194  D00E               	goto	i2l5628
 13349                           
 13350                           ; BSR set to: 2
 13351                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 13352  001196  516A               	movf	(_dist_final+26)& (0+255),w,b
 13353  001198  2568               	addwf	(_dist_final+24)& (0+255),w,b
 13354  00119A  6E32               	movwf	??_echo& (0+255),c
 13355  00119C  516B               	movf	(_dist_final+27)& (0+255),w,b
 13356  00119E  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 13357  0011A0  6E33               	movwf	(??_echo+1)& (0+255),c
 13358  0011A2  516C               	movf	(_dist_final+28)& (0+255),w,b
 13359  0011A4  2432               	addwf	??_echo,w,c
 13360  0011A6  6E3C               	movwf	_sum+4,c
 13361  0011A8  516D               	movf	(_dist_final+29)& (0+255),w,b
 13362  0011AA  2033               	addwfc	??_echo+1,w,c
 13363  0011AC  6E3D               	movwf	_sum+5,c
 13364                           
 13365                           ; BSR set to: 2
 13366                           ;main.c: 157:             sumf[2] = 1;
 13367  0011AE  0E01               	movlw	1
 13368  0011B0  6E42               	movwf	_sumf+2,c
 13369  0011B2                     i2l5628:
 13370                           
 13371                           ;main.c: 159:         if (sumf[2]){
 13372  0011B2  5042               	movf	_sumf+2,w,c
 13373  0011B4  B4D8               	btfsc	status,2,c
 13374  0011B6  D02B               	goto	i2l5634
 13375                           
 13376                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 13377  0011B8  90D8               	bcf	status,0,c
 13378  0011BA  3450               	rlcf	_meas,w,c	;volatile
 13379  0011BC  6ED9               	movwf	fsr2l,c
 13380  0011BE  3451               	rlcf	_meas+1,w,c	;volatile
 13381  0011C0  6EDA               	movwf	fsr2h,c
 13382  0011C2  0E68               	movlw	low (_dist_final+24)
 13383  0011C4  26D9               	addwf	fsr2l,f,c
 13384  0011C6  0E02               	movlw	high (_dist_final+24)
 13385  0011C8  22DA               	addwfc	fsr2h,f,c
 13386  0011CA  CFDE F032          	movff	postinc2,??_echo
 13387  0011CE  CFDD F033          	movff	postdec2,??_echo+1
 13388  0011D2  EE20  F03C         	lfsr	2,_sum+4
 13389  0011D6  CFDE F034          	movff	postinc2,??_echo+2
 13390  0011DA  CFDD F035          	movff	postdec2,??_echo+3
 13391  0011DE  5032               	movf	??_echo,w,c
 13392  0011E0  5E34               	subwf	??_echo+2,f,c
 13393  0011E2  5033               	movf	??_echo+1,w,c
 13394  0011E4  5A35               	subwfb	??_echo+3,f,c
 13395  0011E6  5065               	movf	_a+4,w,c
 13396  0011E8  2434               	addwf	??_echo+2,w,c
 13397  0011EA  6E3C               	movwf	_sum+4,c
 13398  0011EC  5066               	movf	_a+5,w,c
 13399  0011EE  2035               	addwfc	??_echo+3,w,c
 13400  0011F0  6E3D               	movwf	_sum+5,c
 13401                           
 13402                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 13403  0011F2  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 13404  0011F6  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 13405  0011FA  0E00               	movlw	0
 13406  0011FC  6E04               	movwf	i2___awdiv@divisor+1,c
 13407  0011FE  0E05               	movlw	5
 13408  001200  6E03               	movwf	i2___awdiv@divisor,c
 13409  001202  EC48  F01B         	call	i2___awdiv	;wreg free
 13410  001206  C001  F272         	movff	?i2___awdiv,_dist_final+34
 13411  00120A  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 13412  00120E                     i2l5634:
 13413                           
 13414                           ;main.c: 163:         dist_final[2][meas] = a[2];
 13415  00120E  90D8               	bcf	status,0,c
 13416  001210  3450               	rlcf	_meas,w,c	;volatile
 13417  001212  6ED9               	movwf	fsr2l,c
 13418  001214  3451               	rlcf	_meas+1,w,c	;volatile
 13419  001216  6EDA               	movwf	fsr2h,c
 13420  001218  0E68               	movlw	low (_dist_final+24)
 13421  00121A  26D9               	addwf	fsr2l,f,c
 13422  00121C  0E02               	movlw	high (_dist_final+24)
 13423  00121E  22DA               	addwfc	fsr2h,f,c
 13424  001220  C065  FFDE         	movff	_a+4,postinc2
 13425  001224  C066  FFDD         	movff	_a+5,postdec2
 13426  001228                     i2l5636:
 13427                           
 13428                           ;main.c: 166:     if (b==4){
 13429  001228  0E04               	movlw	4
 13430  00122A  185A               	xorwf	_b,w,c
 13431  00122C  105B               	iorwf	_b+1,w,c
 13432  00122E  A4D8               	btfss	status,2,c
 13433  001230  0012               	return	
 13434                           
 13435                           ;main.c: 167:         if (RB4 == 1){
 13436  001232  B881               	btfsc	3969,4,c	;volatile
 13437                           
 13438                           ;main.c: 168:             TMR1ON = 1;
 13439  001234  80CD               	bsf	4045,0,c	;volatile
 13440                           
 13441                           ;main.c: 170:         if (RB4 == 0){
 13442                           
 13443                           ;main.c: 169:         }
 13444  001236  B881               	btfsc	3969,4,c	;volatile
 13445  001238  D037               	goto	i2l5646
 13446                           
 13447                           ;main.c: 171:             TMR1ON = 0;
 13448  00123A  90CD               	bcf	4045,0,c	;volatile
 13449                           
 13450                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 13451  00123C  0EAE               	movlw	174
 13452  00123E  6E13               	movwf	___fldiv@a,c
 13453  001240  0E47               	movlw	71
 13454  001242  6E14               	movwf	___fldiv@a+1,c
 13455  001244  0E6B               	movlw	107
 13456  001246  6E15               	movwf	___fldiv@a+2,c
 13457  001248  0E42               	movlw	66
 13458  00124A  6E16               	movwf	___fldiv@a+3,c
 13459  00124C  50CF               	movf	4047,w,c	;volatile
 13460  00124E  6E33               	movwf	(??_echo+1)& (0+255),c
 13461  001250  6A32               	clrf	??_echo& (0+255),c
 13462  001252  50CE               	movf	4046,w,c	;volatile
 13463  001254  6E34               	movwf	(??_echo+2)& (0+255),c
 13464  001256  6A35               	clrf	(??_echo+3)& (0+255),c
 13465  001258  5032               	movf	??_echo,w,c
 13466  00125A  1234               	iorwf	??_echo+2,f,c
 13467  00125C  5033               	movf	??_echo+1,w,c
 13468  00125E  1235               	iorwf	??_echo+3,f,c
 13469  001260  C034  F001         	movff	??_echo+2,___xxtofl@val
 13470  001264  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13471  001268  0E00               	movlw	0
 13472  00126A  BE02               	btfsc	___xxtofl@val+1,7,c
 13473  00126C  0EFF               	movlw	-1
 13474  00126E  6E03               	movwf	___xxtofl@val+2,c
 13475  001270  6E04               	movwf	___xxtofl@val+3,c
 13476  001272  0E01               	movlw	1
 13477  001274  ECD2  F014         	call	___xxtofl
 13478  001278  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13479  00127C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13480  001280  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13481  001284  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13482  001288  EC2B  F00D         	call	___fldiv	;wreg free
 13483  00128C  C00F  F028         	movff	?___fldiv,___fltol@f1
 13484  001290  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13485  001294  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13486  001298  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13487  00129C  EC14  F019         	call	___fltol	;wreg free
 13488  0012A0  C028  F067         	movff	?___fltol,_a+6
 13489  0012A4  C029  F068         	movff	?___fltol+1,_a+7
 13490  0012A8                     i2l5646:
 13491                           
 13492                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13493  0012A8  BE68               	btfsc	_a+7,7,c
 13494  0012AA  0012               	return	
 13495  0012AC  5068               	movf	_a+7,w,c
 13496  0012AE  E104               	bnz	i2u578_40
 13497  0012B0  0E02               	movlw	2
 13498  0012B2  5C67               	subwf	_a+6,w,c
 13499  0012B4  A0D8               	btfss	status,0,c
 13500  0012B6  0012               	return	
 13501  0012B8                     i2u578_40:
 13502  0012B8  BE68               	btfsc	_a+7,7,c
 13503  0012BA  D006               	goto	i2u579_40
 13504  0012BC  5068               	movf	_a+7,w,c
 13505  0012BE  E15D               	bnz	i2l410
 13506  0012C0  0EC9               	movlw	201
 13507  0012C2  5C67               	subwf	_a+6,w,c
 13508  0012C4  B0D8               	btfsc	status,0,c
 13509  0012C6  0012               	return	
 13510  0012C8                     i2u579_40:
 13511                           
 13512                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13513  0012C8  0443               	decf	_sumf+3,w,c
 13514  0012CA  B4D8               	btfsc	status,2,c
 13515  0012CC  D01B               	goto	i2l5662
 13516  0012CE  0102               	movlb	2	; () banked
 13517  0012D0  5174               	movf	(_dist_final+36)& (0+255),w,b
 13518  0012D2  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13519  0012D4  B4D8               	btfsc	status,2,c
 13520  0012D6  D016               	goto	i2l5662
 13521                           
 13522                           ; BSR set to: 2
 13523  0012D8  5176               	movf	(_dist_final+38)& (0+255),w,b
 13524  0012DA  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13525  0012DC  B4D8               	btfsc	status,2,c
 13526  0012DE  D012               	goto	i2l5662
 13527                           
 13528                           ; BSR set to: 2
 13529  0012E0  5178               	movf	(_dist_final+40)& (0+255),w,b
 13530  0012E2  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13531  0012E4  B4D8               	btfsc	status,2,c
 13532  0012E6  D00E               	goto	i2l5662
 13533                           
 13534                           ; BSR set to: 2
 13535                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13536  0012E8  5176               	movf	(_dist_final+38)& (0+255),w,b
 13537  0012EA  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13538  0012EC  6E32               	movwf	??_echo& (0+255),c
 13539  0012EE  5177               	movf	(_dist_final+39)& (0+255),w,b
 13540  0012F0  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13541  0012F2  6E33               	movwf	(??_echo+1)& (0+255),c
 13542  0012F4  5178               	movf	(_dist_final+40)& (0+255),w,b
 13543  0012F6  2432               	addwf	??_echo,w,c
 13544  0012F8  6E3E               	movwf	_sum+6,c
 13545  0012FA  5179               	movf	(_dist_final+41)& (0+255),w,b
 13546  0012FC  2033               	addwfc	??_echo+1,w,c
 13547  0012FE  6E3F               	movwf	_sum+7,c
 13548                           
 13549                           ; BSR set to: 2
 13550                           ;main.c: 179:             sumf[3] = 1;
 13551  001300  0E01               	movlw	1
 13552  001302  6E43               	movwf	_sumf+3,c
 13553  001304                     i2l5662:
 13554                           
 13555                           ;main.c: 181:         if (sumf[3]){
 13556  001304  5043               	movf	_sumf+3,w,c
 13557  001306  B4D8               	btfsc	status,2,c
 13558  001308  D02B               	goto	i2l5668
 13559                           
 13560                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13561  00130A  90D8               	bcf	status,0,c
 13562  00130C  3450               	rlcf	_meas,w,c	;volatile
 13563  00130E  6ED9               	movwf	fsr2l,c
 13564  001310  3451               	rlcf	_meas+1,w,c	;volatile
 13565  001312  6EDA               	movwf	fsr2h,c
 13566  001314  0E74               	movlw	low (_dist_final+36)
 13567  001316  26D9               	addwf	fsr2l,f,c
 13568  001318  0E02               	movlw	high (_dist_final+36)
 13569  00131A  22DA               	addwfc	fsr2h,f,c
 13570  00131C  CFDE F032          	movff	postinc2,??_echo
 13571  001320  CFDD F033          	movff	postdec2,??_echo+1
 13572  001324  EE20  F03E         	lfsr	2,_sum+6
 13573  001328  CFDE F034          	movff	postinc2,??_echo+2
 13574  00132C  CFDD F035          	movff	postdec2,??_echo+3
 13575  001330  5032               	movf	??_echo,w,c
 13576  001332  5E34               	subwf	??_echo+2,f,c
 13577  001334  5033               	movf	??_echo+1,w,c
 13578  001336  5A35               	subwfb	??_echo+3,f,c
 13579  001338  5067               	movf	_a+6,w,c
 13580  00133A  2434               	addwf	??_echo+2,w,c
 13581  00133C  6E3E               	movwf	_sum+6,c
 13582  00133E  5068               	movf	_a+7,w,c
 13583  001340  2035               	addwfc	??_echo+3,w,c
 13584  001342  6E3F               	movwf	_sum+7,c
 13585                           
 13586                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13587  001344  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13588  001348  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13589  00134C  0E00               	movlw	0
 13590  00134E  6E04               	movwf	i2___awdiv@divisor+1,c
 13591  001350  0E05               	movlw	5
 13592  001352  6E03               	movwf	i2___awdiv@divisor,c
 13593  001354  EC48  F01B         	call	i2___awdiv	;wreg free
 13594  001358  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13595  00135C  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13596  001360                     i2l5668:
 13597                           
 13598                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13599  001360  90D8               	bcf	status,0,c
 13600  001362  3450               	rlcf	_meas,w,c	;volatile
 13601  001364  6ED9               	movwf	fsr2l,c
 13602  001366  3451               	rlcf	_meas+1,w,c	;volatile
 13603  001368  6EDA               	movwf	fsr2h,c
 13604  00136A  0E74               	movlw	low (_dist_final+36)
 13605  00136C  26D9               	addwf	fsr2l,f,c
 13606  00136E  0E02               	movlw	high (_dist_final+36)
 13607  001370  22DA               	addwfc	fsr2h,f,c
 13608  001372  C067  FFDE         	movff	_a+6,postinc2
 13609  001376  C068  FFDD         	movff	_a+7,postdec2
 13610  00137A                     i2l410:
 13611  00137A  0012               	return		;funcret
 13612  00137C                     __end_of_echo:
 13613                           	opt callstack 0
 13614                           
 13615 ;; *************** function i2___awdiv *****************
 13616 ;; Defined at:
 13617 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;  dividend        2    0[COMRAM] int 
 13620 ;;  divisor         2    2[COMRAM] int 
 13621 ;; Auto vars:     Size  Location     Type
 13622 ;;  __awdiv         2    6[COMRAM] int 
 13623 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13624 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  2    0[COMRAM] int 
 13627 ;; Registers used:
 13628 ;;		wreg, status,2, status,0
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;Total ram usage:        8 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; This function calls:
 13641 ;;		Nothing
 13642 ;; This function is called by:
 13643 ;;		_echo
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           	psect	text56
 13648  003690                     __ptext56:
 13649                           	opt callstack 0
 13650  003690                     i2___awdiv:
 13651                           	opt callstack 14
 13652                           
 13653                           ;incstack = 0
 13654  003690  0E00               	movlw	0
 13655  003692  6E06               	movwf	i2___awdiv@sign,c
 13656  003694  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13657  003696  D006               	goto	i2l5404
 13658  003698  6C03               	negf	i2___awdiv@divisor,c
 13659  00369A  1E04               	comf	i2___awdiv@divisor+1,f,c
 13660  00369C  B0D8               	btfsc	status,0,c
 13661  00369E  2A04               	incf	i2___awdiv@divisor+1,f,c
 13662  0036A0  0E01               	movlw	1
 13663  0036A2  6E06               	movwf	i2___awdiv@sign,c
 13664  0036A4                     i2l5404:
 13665  0036A4  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13666  0036A6  D006               	goto	i2l5410
 13667  0036A8  6C01               	negf	i2___awdiv@dividend,c
 13668  0036AA  1E02               	comf	i2___awdiv@dividend+1,f,c
 13669  0036AC  B0D8               	btfsc	status,0,c
 13670  0036AE  2A02               	incf	i2___awdiv@dividend+1,f,c
 13671  0036B0  0E01               	movlw	1
 13672  0036B2  1A06               	xorwf	i2___awdiv@sign,f,c
 13673  0036B4                     i2l5410:
 13674  0036B4  0E00               	movlw	0
 13675  0036B6  6E08               	movwf	i2___awdiv@quotient+1,c
 13676  0036B8  0E00               	movlw	0
 13677  0036BA  6E07               	movwf	i2___awdiv@quotient,c
 13678  0036BC  5003               	movf	i2___awdiv@divisor,w,c
 13679  0036BE  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13680  0036C0  B4D8               	btfsc	status,2,c
 13681  0036C2  D01C               	goto	i2l5432
 13682  0036C4  0E01               	movlw	1
 13683  0036C6  6E05               	movwf	i2___awdiv@counter,c
 13684  0036C8  D004               	goto	i2l5418
 13685  0036CA                     i2l5416:
 13686  0036CA  90D8               	bcf	status,0,c
 13687  0036CC  3603               	rlcf	i2___awdiv@divisor,f,c
 13688  0036CE  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13689  0036D0  2A05               	incf	i2___awdiv@counter,f,c
 13690  0036D2                     i2l5418:
 13691  0036D2  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13692  0036D4  D7FA               	goto	i2l5416
 13693  0036D6                     i2u540_40:
 13694  0036D6  90D8               	bcf	status,0,c
 13695  0036D8  3607               	rlcf	i2___awdiv@quotient,f,c
 13696  0036DA  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13697  0036DC  5003               	movf	i2___awdiv@divisor,w,c
 13698  0036DE  5C01               	subwf	i2___awdiv@dividend,w,c
 13699  0036E0  5004               	movf	i2___awdiv@divisor+1,w,c
 13700  0036E2  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13701  0036E4  A0D8               	btfss	status,0,c
 13702  0036E6  D005               	goto	i2l5428
 13703  0036E8  5003               	movf	i2___awdiv@divisor,w,c
 13704  0036EA  5E01               	subwf	i2___awdiv@dividend,f,c
 13705  0036EC  5004               	movf	i2___awdiv@divisor+1,w,c
 13706  0036EE  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13707  0036F0  8007               	bsf	i2___awdiv@quotient,0,c
 13708  0036F2                     i2l5428:
 13709  0036F2  90D8               	bcf	status,0,c
 13710  0036F4  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13711  0036F6  3203               	rrcf	i2___awdiv@divisor,f,c
 13712  0036F8  2E05               	decfsz	i2___awdiv@counter,f,c
 13713  0036FA  D7ED               	goto	i2u540_40
 13714  0036FC                     i2l5432:
 13715  0036FC  5006               	movf	i2___awdiv@sign,w,c
 13716  0036FE  B4D8               	btfsc	status,2,c
 13717  003700  D004               	goto	i2l5436
 13718  003702  6C07               	negf	i2___awdiv@quotient,c
 13719  003704  1E08               	comf	i2___awdiv@quotient+1,f,c
 13720  003706  B0D8               	btfsc	status,0,c
 13721  003708  2A08               	incf	i2___awdiv@quotient+1,f,c
 13722  00370A                     i2l5436:
 13723  00370A  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13724  00370E  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13725  003712  0012               	return		;funcret
 13726  003714                     __end_ofi2___awdiv:
 13727                           	opt callstack 0
 13728                           
 13729 ;; *************** function ___xxtofl *****************
 13730 ;; Defined at:
 13731 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13732 ;; Parameters:    Size  Location     Type
 13733 ;;  sign            1    wreg     unsigned char 
 13734 ;;  val             4    0[COMRAM] long 
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;  sign            1    8[COMRAM] unsigned char 
 13737 ;;  arg             4   10[COMRAM] unsigned long 
 13738 ;;  exp             1    9[COMRAM] unsigned char 
 13739 ;; Return value:  Size  Location     Type
 13740 ;;                  4    0[COMRAM] unsigned char 
 13741 ;; Registers used:
 13742 ;;		wreg, status,2, status,0
 13743 ;; Tracked objects:
 13744 ;;		On entry : 0/0
 13745 ;;		On exit  : 0/0
 13746 ;;		Unchanged: 0/0
 13747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13749 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13751 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13752 ;;Total ram usage:       14 bytes
 13753 ;; Hardware stack levels used:    1
 13754 ;; This function calls:
 13755 ;;		Nothing
 13756 ;; This function is called by:
 13757 ;;		_echo
 13758 ;; This function uses a non-reentrant model
 13759 ;;
 13760                           
 13761                           	psect	text57
 13762  0029A4                     __ptext57:
 13763                           	opt callstack 0
 13764  0029A4                     ___xxtofl:
 13765                           	opt callstack 14
 13766                           
 13767                           ;incstack = 0
 13768                           ;___xxtofl@sign stored from wreg
 13769  0029A4  6E09               	movwf	___xxtofl@sign,c
 13770  0029A6  5009               	movf	___xxtofl@sign,w,c
 13771  0029A8  A4D8               	btfss	status,2,c
 13772  0029AA  AE04               	btfss	___xxtofl@val+3,7,c
 13773  0029AC  D01A               	goto	i2l1356
 13774  0029AE  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13775  0029B2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13776  0029B6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13777  0029BA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13778  0029BE  1E05               	comf	??___xxtofl,f,c
 13779  0029C0  1E06               	comf	??___xxtofl+1,f,c
 13780  0029C2  1E07               	comf	??___xxtofl+2,f,c
 13781  0029C4  1E08               	comf	??___xxtofl+3,f,c
 13782  0029C6  2A05               	incf	??___xxtofl,f,c
 13783  0029C8  0E00               	movlw	0
 13784  0029CA  2206               	addwfc	??___xxtofl+1,f,c
 13785  0029CC  2207               	addwfc	??___xxtofl+2,f,c
 13786  0029CE  2208               	addwfc	??___xxtofl+3,f,c
 13787  0029D0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13788  0029D4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13789  0029D8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13790  0029DC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13791  0029E0  D008               	goto	i2l5356
 13792  0029E2                     i2l1356:
 13793  0029E2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13794  0029E6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13795  0029EA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13796  0029EE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13797  0029F2                     i2l5356:
 13798  0029F2  5001               	movf	___xxtofl@val,w,c
 13799  0029F4  1002               	iorwf	___xxtofl@val+1,w,c
 13800  0029F6  1003               	iorwf	___xxtofl@val+2,w,c
 13801  0029F8  1004               	iorwf	___xxtofl@val+3,w,c
 13802  0029FA  A4D8               	btfss	status,2,c
 13803  0029FC  D009               	goto	i2l5362
 13804  0029FE  0E00               	movlw	0
 13805  002A00  6E01               	movwf	?___xxtofl,c
 13806  002A02  0E00               	movlw	0
 13807  002A04  6E02               	movwf	?___xxtofl+1,c
 13808  002A06  0E00               	movlw	0
 13809  002A08  6E03               	movwf	?___xxtofl+2,c
 13810  002A0A  0E00               	movlw	0
 13811  002A0C  6E04               	movwf	?___xxtofl+3,c
 13812  002A0E  0012               	return	
 13813  002A10                     i2l5362:
 13814  002A10  0E96               	movlw	150
 13815  002A12  6E0A               	movwf	___xxtofl@exp,c
 13816  002A14  D006               	goto	i2l5366
 13817  002A16                     i2l5364:
 13818  002A16  2A0A               	incf	___xxtofl@exp,f,c
 13819  002A18  90D8               	bcf	status,0,c
 13820  002A1A  320E               	rrcf	___xxtofl@arg+3,f,c
 13821  002A1C  320D               	rrcf	___xxtofl@arg+2,f,c
 13822  002A1E  320C               	rrcf	___xxtofl@arg+1,f,c
 13823  002A20  320B               	rrcf	___xxtofl@arg,f,c
 13824  002A22                     i2l5366:
 13825  002A22  0E00               	movlw	0
 13826  002A24  140B               	andwf	___xxtofl@arg,w,c
 13827  002A26  6E05               	movwf	??___xxtofl& (0+255),c
 13828  002A28  0E00               	movlw	0
 13829  002A2A  140C               	andwf	___xxtofl@arg+1,w,c
 13830  002A2C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13831  002A2E  0E00               	movlw	0
 13832  002A30  140D               	andwf	___xxtofl@arg+2,w,c
 13833  002A32  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13834  002A34  0EFE               	movlw	254
 13835  002A36  140E               	andwf	___xxtofl@arg+3,w,c
 13836  002A38  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13837  002A3A  5005               	movf	??___xxtofl,w,c
 13838  002A3C  1006               	iorwf	??___xxtofl+1,w,c
 13839  002A3E  1007               	iorwf	??___xxtofl+2,w,c
 13840  002A40  1008               	iorwf	??___xxtofl+3,w,c
 13841  002A42  B4D8               	btfsc	status,2,c
 13842  002A44  D00D               	goto	i2l1363
 13843  002A46  D7E7               	goto	i2l5364
 13844  002A48                     i2l5368:
 13845  002A48  2A0A               	incf	___xxtofl@exp,f,c
 13846  002A4A  0E01               	movlw	1
 13847  002A4C  260B               	addwf	___xxtofl@arg,f,c
 13848  002A4E  0E00               	movlw	0
 13849  002A50  220C               	addwfc	___xxtofl@arg+1,f,c
 13850  002A52  220D               	addwfc	___xxtofl@arg+2,f,c
 13851  002A54  220E               	addwfc	___xxtofl@arg+3,f,c
 13852  002A56  90D8               	bcf	status,0,c
 13853  002A58  320E               	rrcf	___xxtofl@arg+3,f,c
 13854  002A5A  320D               	rrcf	___xxtofl@arg+2,f,c
 13855  002A5C  320C               	rrcf	___xxtofl@arg+1,f,c
 13856  002A5E  320B               	rrcf	___xxtofl@arg,f,c
 13857  002A60                     i2l1363:
 13858  002A60  0E00               	movlw	0
 13859  002A62  140B               	andwf	___xxtofl@arg,w,c
 13860  002A64  6E05               	movwf	??___xxtofl& (0+255),c
 13861  002A66  0E00               	movlw	0
 13862  002A68  140C               	andwf	___xxtofl@arg+1,w,c
 13863  002A6A  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13864  002A6C  0E00               	movlw	0
 13865  002A6E  140D               	andwf	___xxtofl@arg+2,w,c
 13866  002A70  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13867  002A72  0EFF               	movlw	255
 13868  002A74  140E               	andwf	___xxtofl@arg+3,w,c
 13869  002A76  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13870  002A78  5005               	movf	??___xxtofl,w,c
 13871  002A7A  1006               	iorwf	??___xxtofl+1,w,c
 13872  002A7C  1007               	iorwf	??___xxtofl+2,w,c
 13873  002A7E  1008               	iorwf	??___xxtofl+3,w,c
 13874  002A80  B4D8               	btfsc	status,2,c
 13875  002A82  D007               	goto	i2l5376
 13876  002A84  D7E1               	goto	i2l5368
 13877  002A86                     i2l5374:
 13878  002A86  060A               	decf	___xxtofl@exp,f,c
 13879  002A88  90D8               	bcf	status,0,c
 13880  002A8A  360B               	rlcf	___xxtofl@arg,f,c
 13881  002A8C  360C               	rlcf	___xxtofl@arg+1,f,c
 13882  002A8E  360D               	rlcf	___xxtofl@arg+2,f,c
 13883  002A90  360E               	rlcf	___xxtofl@arg+3,f,c
 13884  002A92                     i2l5376:
 13885  002A92  BE0D               	btfsc	___xxtofl@arg+2,7,c
 13886  002A94  D003               	goto	i2u533_40
 13887  002A96  0E02               	movlw	2
 13888  002A98  600A               	cpfslt	___xxtofl@exp,c
 13889  002A9A  D7F5               	goto	i2l5374
 13890  002A9C                     i2u533_40:
 13891  002A9C  A00A               	btfss	___xxtofl@exp,0,c
 13892  002A9E  9E0D               	bcf	___xxtofl@arg+2,7,c
 13893  002AA0  90D8               	bcf	status,0,c
 13894  002AA2  320A               	rrcf	___xxtofl@exp,f,c
 13895  002AA4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13896  002AA8  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 13897  002AAA  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 13898  002AAC  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 13899  002AAE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13900  002AB2  6A07               	clrf	??___xxtofl+2,c
 13901  002AB4  6A06               	clrf	??___xxtofl+1,c
 13902  002AB6  6A05               	clrf	??___xxtofl,c
 13903  002AB8  5005               	movf	??___xxtofl,w,c
 13904  002ABA  120B               	iorwf	___xxtofl@arg,f,c
 13905  002ABC  5006               	movf	??___xxtofl+1,w,c
 13906  002ABE  120C               	iorwf	___xxtofl@arg+1,f,c
 13907  002AC0  5007               	movf	??___xxtofl+2,w,c
 13908  002AC2  120D               	iorwf	___xxtofl@arg+2,f,c
 13909  002AC4  5008               	movf	??___xxtofl+3,w,c
 13910  002AC6  120E               	iorwf	___xxtofl@arg+3,f,c
 13911  002AC8  5009               	movf	___xxtofl@sign,w,c
 13912  002ACA  A4D8               	btfss	status,2,c
 13913  002ACC  AE04               	btfss	___xxtofl@val+3,7,c
 13914  002ACE  D001               	goto	i2l5392
 13915  002AD0  8E0E               	bsf	___xxtofl@arg+3,7,c
 13916  002AD2                     i2l5392:
 13917  002AD2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13918  002AD6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13919  002ADA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13920  002ADE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13921  002AE2  0012               	return		;funcret
 13922  002AE4                     __end_of___xxtofl:
 13923                           	opt callstack 0
 13924                           
 13925 ;; *************** function ___fltol *****************
 13926 ;; Defined at:
 13927 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;  f1              4   39[COMRAM] unsigned char 
 13930 ;; Auto vars:     Size  Location     Type
 13931 ;;  exp1            1   48[COMRAM] unsigned char 
 13932 ;;  sign1           1   47[COMRAM] unsigned char 
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  4   39[COMRAM] long 
 13935 ;; Registers used:
 13936 ;;		wreg, status,2, status,0
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13944 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13945 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13946 ;;Total ram usage:       10 bytes
 13947 ;; Hardware stack levels used:    1
 13948 ;; This function calls:
 13949 ;;		Nothing
 13950 ;; This function is called by:
 13951 ;;		_echo
 13952 ;; This function uses a non-reentrant model
 13953 ;;
 13954                           
 13955                           	psect	text58
 13956  003228                     __ptext58:
 13957                           	opt callstack 0
 13958  003228                     ___fltol:
 13959                           	opt callstack 14
 13960                           
 13961                           ;incstack = 0
 13962  003228  342A               	rlcf	___fltol@f1+2,w,c
 13963  00322A  342B               	rlcf	___fltol@f1+3,w,c
 13964  00322C  6E31               	movwf	___fltol@exp1,c
 13965  00322E  5031               	movf	___fltol@exp1,w,c
 13966  003230  A4D8               	btfss	status,2,c
 13967  003232  D009               	goto	i2l5296
 13968  003234                     i2u517_40:
 13969  003234  0E00               	movlw	0
 13970  003236  6E28               	movwf	?___fltol,c
 13971  003238  0E00               	movlw	0
 13972  00323A  6E29               	movwf	?___fltol+1,c
 13973  00323C  0E00               	movlw	0
 13974  00323E  6E2A               	movwf	?___fltol+2,c
 13975  003240  0E00               	movlw	0
 13976  003242  6E2B               	movwf	?___fltol+3,c
 13977  003244  0012               	return	
 13978  003246                     i2l5296:
 13979  003246  C028  F02C         	movff	___fltol@f1,??___fltol
 13980  00324A  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 13981  00324E  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 13982  003252  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 13983  003256  0E20               	movlw	32
 13984  003258  D005               	goto	i2u518_40
 13985  00325A                     i2u518_45:
 13986  00325A  90D8               	bcf	status,0,c
 13987  00325C  322F               	rrcf	??___fltol+3,f,c
 13988  00325E  322E               	rrcf	??___fltol+2,f,c
 13989  003260  322D               	rrcf	??___fltol+1,f,c
 13990  003262  322C               	rrcf	??___fltol,f,c
 13991  003264                     i2u518_40:
 13992  003264  2EE8               	decfsz	wreg,f,c
 13993  003266  D7F9               	goto	i2u518_45
 13994  003268  502C               	movf	??___fltol,w,c
 13995  00326A  6E30               	movwf	___fltol@sign1,c
 13996  00326C  8E2A               	bsf	___fltol@f1+2,7,c
 13997  00326E  0EFF               	movlw	255
 13998  003270  1628               	andwf	___fltol@f1,f,c
 13999  003272  0EFF               	movlw	255
 14000  003274  1629               	andwf	___fltol@f1+1,f,c
 14001  003276  0EFF               	movlw	255
 14002  003278  162A               	andwf	___fltol@f1+2,f,c
 14003  00327A  0E00               	movlw	0
 14004  00327C  162B               	andwf	___fltol@f1+3,f,c
 14005  00327E  0E96               	movlw	150
 14006  003280  5E31               	subwf	___fltol@exp1,f,c
 14007  003282  AE31               	btfss	___fltol@exp1,7,c
 14008  003284  D00D               	goto	i2l5316
 14009  003286  5031               	movf	___fltol@exp1,w,c
 14010  003288  0A80               	xorlw	128
 14011  00328A  0F97               	addlw	151
 14012  00328C  A0D8               	btfss	status,0,c
 14013  00328E  D7D2               	goto	i2u517_40
 14014  003290                     i2l5312:
 14015  003290  90D8               	bcf	status,0,c
 14016  003292  322B               	rrcf	___fltol@f1+3,f,c
 14017  003294  322A               	rrcf	___fltol@f1+2,f,c
 14018  003296  3229               	rrcf	___fltol@f1+1,f,c
 14019  003298  3228               	rrcf	___fltol@f1,f,c
 14020  00329A  3E31               	incfsz	___fltol@exp1,f,c
 14021  00329C  D7F9               	goto	i2l5312
 14022  00329E  D00D               	goto	i2u522_40
 14023  0032A0                     i2l5316:
 14024  0032A0  0E1F               	movlw	31
 14025  0032A2  6431               	cpfsgt	___fltol@exp1,c
 14026  0032A4  D007               	goto	i2l5324
 14027  0032A6  D7C6               	goto	i2u517_40
 14028  0032A8                     i2l5322:
 14029  0032A8  90D8               	bcf	status,0,c
 14030  0032AA  3628               	rlcf	___fltol@f1,f,c
 14031  0032AC  3629               	rlcf	___fltol@f1+1,f,c
 14032  0032AE  362A               	rlcf	___fltol@f1+2,f,c
 14033  0032B0  362B               	rlcf	___fltol@f1+3,f,c
 14034  0032B2  0631               	decf	___fltol@exp1,f,c
 14035  0032B4                     i2l5324:
 14036  0032B4  5031               	movf	___fltol@exp1,w,c
 14037  0032B6  A4D8               	btfss	status,2,c
 14038  0032B8  D7F7               	goto	i2l5322
 14039  0032BA                     i2u522_40:
 14040  0032BA  5030               	movf	___fltol@sign1,w,c
 14041  0032BC  B4D8               	btfsc	status,2,c
 14042  0032BE  D008               	goto	i2l5330
 14043  0032C0  1E2B               	comf	___fltol@f1+3,f,c
 14044  0032C2  1E2A               	comf	___fltol@f1+2,f,c
 14045  0032C4  1E29               	comf	___fltol@f1+1,f,c
 14046  0032C6  6C28               	negf	___fltol@f1,c
 14047  0032C8  0E00               	movlw	0
 14048  0032CA  2229               	addwfc	___fltol@f1+1,f,c
 14049  0032CC  222A               	addwfc	___fltol@f1+2,f,c
 14050  0032CE  222B               	addwfc	___fltol@f1+3,f,c
 14051  0032D0                     i2l5330:
 14052  0032D0  C028  F028         	movff	___fltol@f1,?___fltol
 14053  0032D4  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 14054  0032D8  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 14055  0032DC  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 14056  0032E0  0012               	return		;funcret
 14057  0032E2                     __end_of___fltol:
 14058                           	opt callstack 0
 14059                           
 14060 ;; *************** function ___fldiv *****************
 14061 ;; Defined at:
 14062 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14063 ;; Parameters:    Size  Location     Type
 14064 ;;  b               4   14[COMRAM] long 
 14065 ;;  a               4   18[COMRAM] long 
 14066 ;; Auto vars:     Size  Location     Type
 14067 ;;  grs             4   33[COMRAM] unsigned long 
 14068 ;;  rem             4   26[COMRAM] unsigned long 
 14069 ;;  new_exp         2   31[COMRAM] short 
 14070 ;;  aexp            1   38[COMRAM] unsigned char 
 14071 ;;  bexp            1   37[COMRAM] unsigned char 
 14072 ;;  sign            1   30[COMRAM] unsigned char 
 14073 ;; Return value:  Size  Location     Type
 14074 ;;                  4   14[COMRAM] unsigned char 
 14075 ;; Registers used:
 14076 ;;		wreg, status,2, status,0
 14077 ;; Tracked objects:
 14078 ;;		On entry : 0/0
 14079 ;;		On exit  : 0/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14082 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14083 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14084 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14085 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14086 ;;Total ram usage:       25 bytes
 14087 ;; Hardware stack levels used:    1
 14088 ;; This function calls:
 14089 ;;		Nothing
 14090 ;; This function is called by:
 14091 ;;		_echo
 14092 ;; This function uses a non-reentrant model
 14093 ;;
 14094                           
 14095                           	psect	text59
 14096  001A56                     __ptext59:
 14097                           	opt callstack 0
 14098  001A56                     ___fldiv:
 14099                           	opt callstack 14
 14100                           
 14101                           ;incstack = 0
 14102  001A56  5012               	movf	___fldiv@b+3,w,c
 14103  001A58  0B80               	andlw	128
 14104  001A5A  6E1F               	movwf	___fldiv@sign,c
 14105  001A5C  5012               	movf	___fldiv@b+3,w,c
 14106  001A5E  2412               	addwf	___fldiv@b+3,w,c
 14107  001A60  6E26               	movwf	___fldiv@bexp,c
 14108  001A62  BE11               	btfsc	___fldiv@b+2,7,c
 14109  001A64  8026               	bsf	___fldiv@bexp,0,c
 14110  001A66  5026               	movf	___fldiv@bexp,w,c
 14111  001A68  B4D8               	btfsc	status,2,c
 14112  001A6A  D00D               	goto	i2l5124
 14113  001A6C  2826               	incf	___fldiv@bexp,w,c
 14114  001A6E  A4D8               	btfss	status,2,c
 14115  001A70  D008               	goto	i2l5120
 14116  001A72  0E00               	movlw	0
 14117  001A74  6E0F               	movwf	___fldiv@b,c
 14118  001A76  0E00               	movlw	0
 14119  001A78  6E10               	movwf	___fldiv@b+1,c
 14120  001A7A  0E00               	movlw	0
 14121  001A7C  6E11               	movwf	___fldiv@b+2,c
 14122  001A7E  0E00               	movlw	0
 14123  001A80  6E12               	movwf	___fldiv@b+3,c
 14124  001A82                     i2l5120:
 14125  001A82  8E11               	bsf	___fldiv@b+2,7,c
 14126  001A84  D006               	goto	L6
 14127  001A86                     i2l5124:
 14128  001A86  0E00               	movlw	0
 14129  001A88  6E0F               	movwf	___fldiv@b,c
 14130  001A8A  0E00               	movlw	0
 14131  001A8C  6E10               	movwf	___fldiv@b+1,c
 14132  001A8E  0E00               	movlw	0
 14133  001A90  6E11               	movwf	___fldiv@b+2,c
 14134  001A92                     L6:
 14135  001A92  0E00               	movlw	0
 14136  001A94  6E12               	movwf	___fldiv@b+3,c
 14137  001A96  5016               	movf	___fldiv@a+3,w,c
 14138  001A98  0B80               	andlw	128
 14139  001A9A  1A1F               	xorwf	___fldiv@sign,f,c
 14140  001A9C  5016               	movf	___fldiv@a+3,w,c
 14141  001A9E  2416               	addwf	___fldiv@a+3,w,c
 14142  001AA0  6E27               	movwf	___fldiv@aexp,c
 14143  001AA2  BE15               	btfsc	___fldiv@a+2,7,c
 14144  001AA4  8027               	bsf	___fldiv@aexp,0,c
 14145  001AA6  5027               	movf	___fldiv@aexp,w,c
 14146  001AA8  B4D8               	btfsc	status,2,c
 14147  001AAA  D00D               	goto	i2l5144
 14148  001AAC  2827               	incf	___fldiv@aexp,w,c
 14149  001AAE  A4D8               	btfss	status,2,c
 14150  001AB0  D008               	goto	i2l5140
 14151  001AB2  0E00               	movlw	0
 14152  001AB4  6E13               	movwf	___fldiv@a,c
 14153  001AB6  0E00               	movlw	0
 14154  001AB8  6E14               	movwf	___fldiv@a+1,c
 14155  001ABA  0E00               	movlw	0
 14156  001ABC  6E15               	movwf	___fldiv@a+2,c
 14157  001ABE  0E00               	movlw	0
 14158  001AC0  6E16               	movwf	___fldiv@a+3,c
 14159  001AC2                     i2l5140:
 14160  001AC2  8E15               	bsf	___fldiv@a+2,7,c
 14161  001AC4  D006               	goto	L7
 14162  001AC6                     i2l5144:
 14163  001AC6  0E00               	movlw	0
 14164  001AC8  6E13               	movwf	___fldiv@a,c
 14165  001ACA  0E00               	movlw	0
 14166  001ACC  6E14               	movwf	___fldiv@a+1,c
 14167  001ACE  0E00               	movlw	0
 14168  001AD0  6E15               	movwf	___fldiv@a+2,c
 14169  001AD2                     L7:
 14170  001AD2  0E00               	movlw	0
 14171  001AD4  6E16               	movwf	___fldiv@a+3,c
 14172  001AD6  5013               	movf	___fldiv@a,w,c
 14173  001AD8  1014               	iorwf	___fldiv@a+1,w,c
 14174  001ADA  1015               	iorwf	___fldiv@a+2,w,c
 14175  001ADC  1016               	iorwf	___fldiv@a+3,w,c
 14176  001ADE  A4D8               	btfss	status,2,c
 14177  001AE0  D017               	goto	i2l5158
 14178  001AE2  0E00               	movlw	0
 14179  001AE4  6E0F               	movwf	___fldiv@b,c
 14180  001AE6  0E00               	movlw	0
 14181  001AE8  6E10               	movwf	___fldiv@b+1,c
 14182  001AEA  0E00               	movlw	0
 14183  001AEC  6E11               	movwf	___fldiv@b+2,c
 14184  001AEE  0E00               	movlw	0
 14185  001AF0  6E12               	movwf	___fldiv@b+3,c
 14186  001AF2  0E80               	movlw	128
 14187  001AF4  1211               	iorwf	___fldiv@b+2,f,c
 14188  001AF6  0E7F               	movlw	127
 14189  001AF8  1212               	iorwf	___fldiv@b+3,f,c
 14190  001AFA                     i2l5152:
 14191  001AFA  501F               	movf	___fldiv@sign,w,c
 14192  001AFC  1212               	iorwf	___fldiv@b+3,f,c
 14193  001AFE  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14194  001B02  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14195  001B06  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14196  001B0A  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14197  001B0E  0012               	return	
 14198  001B10                     i2l5158:
 14199  001B10  5026               	movf	___fldiv@bexp,w,c
 14200  001B12  A4D8               	btfss	status,2,c
 14201  001B14  D009               	goto	i2l5166
 14202  001B16  0E00               	movlw	0
 14203  001B18  6E0F               	movwf	?___fldiv,c
 14204  001B1A  0E00               	movlw	0
 14205  001B1C  6E10               	movwf	?___fldiv+1,c
 14206  001B1E  0E00               	movlw	0
 14207  001B20  6E11               	movwf	?___fldiv+2,c
 14208  001B22  0E00               	movlw	0
 14209  001B24  6E12               	movwf	?___fldiv+3,c
 14210  001B26  0012               	return	
 14211  001B28                     i2l5166:
 14212  001B28  5027               	movf	___fldiv@aexp,w,c
 14213  001B2A  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14214  001B2E  6A18               	clrf	(??___fldiv+1)& (0+255),c
 14215  001B30  5E17               	subwf	??___fldiv,f,c
 14216  001B32  0E00               	movlw	0
 14217  001B34  5A18               	subwfb	??___fldiv+1,f,c
 14218  001B36  0E7F               	movlw	127
 14219  001B38  2417               	addwf	??___fldiv,w,c
 14220  001B3A  6E20               	movwf	___fldiv@new_exp,c
 14221  001B3C  0E00               	movlw	0
 14222  001B3E  2018               	addwfc	??___fldiv+1,w,c
 14223  001B40  6E21               	movwf	___fldiv@new_exp+1,c
 14224  001B42  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14225  001B46  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14226  001B4A  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14227  001B4E  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14228  001B52  0E00               	movlw	0
 14229  001B54  6E0F               	movwf	___fldiv@b,c
 14230  001B56  0E00               	movlw	0
 14231  001B58  6E10               	movwf	___fldiv@b+1,c
 14232  001B5A  0E00               	movlw	0
 14233  001B5C  6E11               	movwf	___fldiv@b+2,c
 14234  001B5E  0E00               	movlw	0
 14235  001B60  6E12               	movwf	___fldiv@b+3,c
 14236  001B62  0E00               	movlw	0
 14237  001B64  6E22               	movwf	___fldiv@grs,c
 14238  001B66  0E00               	movlw	0
 14239  001B68  6E23               	movwf	___fldiv@grs+1,c
 14240  001B6A  0E00               	movlw	0
 14241  001B6C  6E24               	movwf	___fldiv@grs+2,c
 14242  001B6E  0E00               	movlw	0
 14243  001B70  6E25               	movwf	___fldiv@grs+3,c
 14244  001B72  0E00               	movlw	0
 14245  001B74  6E27               	movwf	___fldiv@aexp,c
 14246  001B76  D028               	goto	i2l1285
 14247  001B78                     i2l5176:
 14248  001B78  5027               	movf	___fldiv@aexp,w,c
 14249  001B7A  B4D8               	btfsc	status,2,c
 14250  001B7C  D011               	goto	i2l5184
 14251  001B7E  90D8               	bcf	status,0,c
 14252  001B80  361B               	rlcf	___fldiv@rem,f,c
 14253  001B82  361C               	rlcf	___fldiv@rem+1,f,c
 14254  001B84  361D               	rlcf	___fldiv@rem+2,f,c
 14255  001B86  361E               	rlcf	___fldiv@rem+3,f,c
 14256  001B88  90D8               	bcf	status,0,c
 14257  001B8A  360F               	rlcf	___fldiv@b,f,c
 14258  001B8C  3610               	rlcf	___fldiv@b+1,f,c
 14259  001B8E  3611               	rlcf	___fldiv@b+2,f,c
 14260  001B90  3612               	rlcf	___fldiv@b+3,f,c
 14261  001B92  BE25               	btfsc	___fldiv@grs+3,7,c
 14262  001B94  800F               	bsf	___fldiv@b,0,c
 14263  001B96  90D8               	bcf	status,0,c
 14264  001B98  3622               	rlcf	___fldiv@grs,f,c
 14265  001B9A  3623               	rlcf	___fldiv@grs+1,f,c
 14266  001B9C  3624               	rlcf	___fldiv@grs+2,f,c
 14267  001B9E  3625               	rlcf	___fldiv@grs+3,f,c
 14268  001BA0                     i2l5184:
 14269  001BA0  5013               	movf	___fldiv@a,w,c
 14270  001BA2  5C1B               	subwf	___fldiv@rem,w,c
 14271  001BA4  5014               	movf	___fldiv@a+1,w,c
 14272  001BA6  581C               	subwfb	___fldiv@rem+1,w,c
 14273  001BA8  5015               	movf	___fldiv@a+2,w,c
 14274  001BAA  581D               	subwfb	___fldiv@rem+2,w,c
 14275  001BAC  5016               	movf	___fldiv@a+3,w,c
 14276  001BAE  581E               	subwfb	___fldiv@rem+3,w,c
 14277  001BB0  A0D8               	btfss	status,0,c
 14278  001BB2  D009               	goto	i2l5190
 14279  001BB4  8C25               	bsf	___fldiv@grs+3,6,c
 14280  001BB6  5013               	movf	___fldiv@a,w,c
 14281  001BB8  5E1B               	subwf	___fldiv@rem,f,c
 14282  001BBA  5014               	movf	___fldiv@a+1,w,c
 14283  001BBC  5A1C               	subwfb	___fldiv@rem+1,f,c
 14284  001BBE  5015               	movf	___fldiv@a+2,w,c
 14285  001BC0  5A1D               	subwfb	___fldiv@rem+2,f,c
 14286  001BC2  5016               	movf	___fldiv@a+3,w,c
 14287  001BC4  5A1E               	subwfb	___fldiv@rem+3,f,c
 14288  001BC6                     i2l5190:
 14289  001BC6  2A27               	incf	___fldiv@aexp,f,c
 14290  001BC8                     i2l1285:
 14291  001BC8  0E19               	movlw	25
 14292  001BCA  6427               	cpfsgt	___fldiv@aexp,c
 14293  001BCC  D7D5               	goto	i2l5176
 14294  001BCE  501B               	movf	___fldiv@rem,w,c
 14295  001BD0  101C               	iorwf	___fldiv@rem+1,w,c
 14296  001BD2  101D               	iorwf	___fldiv@rem+2,w,c
 14297  001BD4  101E               	iorwf	___fldiv@rem+3,w,c
 14298  001BD6  B4D8               	btfsc	status,2,c
 14299  001BD8  D011               	goto	i2l5202
 14300  001BDA  8022               	bsf	___fldiv@grs,0,c
 14301  001BDC  D00F               	goto	i2l5202
 14302  001BDE                     i2l5196:
 14303  001BDE  90D8               	bcf	status,0,c
 14304  001BE0  360F               	rlcf	___fldiv@b,f,c
 14305  001BE2  3610               	rlcf	___fldiv@b+1,f,c
 14306  001BE4  3611               	rlcf	___fldiv@b+2,f,c
 14307  001BE6  3612               	rlcf	___fldiv@b+3,f,c
 14308  001BE8  BE25               	btfsc	___fldiv@grs+3,7,c
 14309  001BEA  800F               	bsf	___fldiv@b,0,c
 14310  001BEC  90D8               	bcf	status,0,c
 14311  001BEE  3622               	rlcf	___fldiv@grs,f,c
 14312  001BF0  3623               	rlcf	___fldiv@grs+1,f,c
 14313  001BF2  3624               	rlcf	___fldiv@grs+2,f,c
 14314  001BF4  3625               	rlcf	___fldiv@grs+3,f,c
 14315  001BF6  0620               	decf	___fldiv@new_exp,f,c
 14316  001BF8  A0D8               	btfss	status,0,c
 14317  001BFA  0621               	decf	___fldiv@new_exp+1,f,c
 14318  001BFC                     i2l5202:
 14319  001BFC  AE11               	btfss	___fldiv@b+2,7,c
 14320  001BFE  D7EF               	goto	i2l5196
 14321  001C00  0E00               	movlw	0
 14322  001C02  6E27               	movwf	___fldiv@aexp,c
 14323  001C04  AE25               	btfss	___fldiv@grs+3,7,c
 14324  001C06  D017               	goto	i2l1296
 14325  001C08  0EFF               	movlw	255
 14326  001C0A  1422               	andwf	___fldiv@grs,w,c
 14327  001C0C  6E17               	movwf	??___fldiv& (0+255),c
 14328  001C0E  0EFF               	movlw	255
 14329  001C10  1423               	andwf	___fldiv@grs+1,w,c
 14330  001C12  6E18               	movwf	(??___fldiv+1)& (0+255),c
 14331  001C14  0EFF               	movlw	255
 14332  001C16  1424               	andwf	___fldiv@grs+2,w,c
 14333  001C18  6E19               	movwf	(??___fldiv+2)& (0+255),c
 14334  001C1A  0E7F               	movlw	127
 14335  001C1C  1425               	andwf	___fldiv@grs+3,w,c
 14336  001C1E  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 14337  001C20  5017               	movf	??___fldiv,w,c
 14338  001C22  1018               	iorwf	??___fldiv+1,w,c
 14339  001C24  1019               	iorwf	??___fldiv+2,w,c
 14340  001C26  101A               	iorwf	??___fldiv+3,w,c
 14341  001C28  B4D8               	btfsc	status,2,c
 14342  001C2A  D003               	goto	i2l1297
 14343  001C2C                     i2u504_40:
 14344  001C2C  0E01               	movlw	1
 14345  001C2E  6E27               	movwf	___fldiv@aexp,c
 14346  001C30  D002               	goto	i2l1296
 14347  001C32                     i2l1297:
 14348  001C32  B00F               	btfsc	___fldiv@b,0,c
 14349  001C34  D7FB               	goto	i2u504_40
 14350  001C36                     i2l1296:
 14351  001C36  5027               	movf	___fldiv@aexp,w,c
 14352  001C38  B4D8               	btfsc	status,2,c
 14353  001C3A  D01F               	goto	i2l5222
 14354  001C3C  0E01               	movlw	1
 14355  001C3E  260F               	addwf	___fldiv@b,f,c
 14356  001C40  0E00               	movlw	0
 14357  001C42  2210               	addwfc	___fldiv@b+1,f,c
 14358  001C44  2211               	addwfc	___fldiv@b+2,f,c
 14359  001C46  2212               	addwfc	___fldiv@b+3,f,c
 14360  001C48  A012               	btfss	___fldiv@b+3,0,c
 14361  001C4A  D017               	goto	i2l5222
 14362  001C4C  C00F  F017         	movff	___fldiv@b,??___fldiv
 14363  001C50  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 14364  001C54  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 14365  001C58  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 14366  001C5C  341A               	rlcf	??___fldiv+3,w,c
 14367  001C5E  321A               	rrcf	??___fldiv+3,f,c
 14368  001C60  3219               	rrcf	??___fldiv+2,f,c
 14369  001C62  3218               	rrcf	??___fldiv+1,f,c
 14370  001C64  3217               	rrcf	??___fldiv,f,c
 14371  001C66  C017  F00F         	movff	??___fldiv,___fldiv@b
 14372  001C6A  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 14373  001C6E  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 14374  001C72  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 14375  001C76  4A20               	infsnz	___fldiv@new_exp,f,c
 14376  001C78  2A21               	incf	___fldiv@new_exp+1,f,c
 14377  001C7A                     i2l5222:
 14378  001C7A  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14379  001C7C  D010               	goto	i2l5226
 14380  001C7E  5021               	movf	___fldiv@new_exp+1,w,c
 14381  001C80  E103               	bnz	i2u508_40
 14382  001C82  2820               	incf	___fldiv@new_exp,w,c
 14383  001C84  A0D8               	btfss	status,0,c
 14384  001C86  D00B               	goto	i2l5226
 14385  001C88                     i2u508_40:
 14386  001C88  0E00               	movlw	0
 14387  001C8A  6E21               	movwf	___fldiv@new_exp+1,c
 14388  001C8C  6820               	setf	___fldiv@new_exp,c
 14389  001C8E  0E00               	movlw	0
 14390  001C90  6E0F               	movwf	___fldiv@b,c
 14391  001C92  0E00               	movlw	0
 14392  001C94  6E10               	movwf	___fldiv@b+1,c
 14393  001C96  0E00               	movlw	0
 14394  001C98  6E11               	movwf	___fldiv@b+2,c
 14395  001C9A  0E00               	movlw	0
 14396  001C9C  6E12               	movwf	___fldiv@b+3,c
 14397  001C9E                     i2l5226:
 14398  001C9E  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14399  001CA0  D005               	goto	i2u509_40
 14400  001CA2  5021               	movf	___fldiv@new_exp+1,w,c
 14401  001CA4  E111               	bnz	i2l5230
 14402  001CA6  0420               	decf	___fldiv@new_exp,w,c
 14403  001CA8  B0D8               	btfsc	status,0,c
 14404  001CAA  D00E               	goto	i2l5230
 14405  001CAC                     i2u509_40:
 14406  001CAC  0E00               	movlw	0
 14407  001CAE  6E21               	movwf	___fldiv@new_exp+1,c
 14408  001CB0  0E00               	movlw	0
 14409  001CB2  6E20               	movwf	___fldiv@new_exp,c
 14410  001CB4  0E00               	movlw	0
 14411  001CB6  6E0F               	movwf	___fldiv@b,c
 14412  001CB8  0E00               	movlw	0
 14413  001CBA  6E10               	movwf	___fldiv@b+1,c
 14414  001CBC  0E00               	movlw	0
 14415  001CBE  6E11               	movwf	___fldiv@b+2,c
 14416  001CC0  0E00               	movlw	0
 14417  001CC2  6E12               	movwf	___fldiv@b+3,c
 14418  001CC4  0E00               	movlw	0
 14419  001CC6  6E1F               	movwf	___fldiv@sign,c
 14420  001CC8                     i2l5230:
 14421  001CC8  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 14422  001CCC  A026               	btfss	___fldiv@bexp,0,c
 14423  001CCE  D002               	goto	i2l5236
 14424  001CD0  8E11               	bsf	___fldiv@b+2,7,c
 14425  001CD2  D001               	goto	i2l5238
 14426  001CD4                     i2l5236:
 14427  001CD4  9E11               	bcf	___fldiv@b+2,7,c
 14428  001CD6                     i2l5238:
 14429  001CD6  90D8               	bcf	status,0,c
 14430  001CD8  3026               	rrcf	___fldiv@bexp,w,c
 14431  001CDA  6E12               	movwf	___fldiv@b+3,c
 14432  001CDC  D70E               	goto	i2l5152
 14433  001CDE                     __end_of___fldiv:
 14434                           	opt callstack 0
 14435                           
 14436                           	psect	rparam
 14437  0000                     
 14438                           	psect	temp
 14439  00006E                     btemp:
 14440                           	opt callstack 0
 14441  00006E                     	ds	1
 14442  0000                     int$flags	set	btemp
 14443  0000                     wtemp8	set	btemp+1
 14444  0000                     ttemp5	set	btemp+1
 14445  0000                     ttemp6	set	btemp+4
 14446  0000                     ttemp7	set	btemp+8
 14447                           tosu	equ	0xFFF
 14448                           tosh	equ	0xFFE
 14449                           tosl	equ	0xFFD
 14450                           stkptr	equ	0xFFC
 14451                           pclatu	equ	0xFFB
 14452                           pclath	equ	0xFFA
 14453                           pcl	equ	0xFF9
 14454                           tblptru	equ	0xFF8
 14455                           tblptrh	equ	0xFF7
 14456                           tblptrl	equ	0xFF6
 14457                           tablat	equ	0xFF5
 14458                           prodh	equ	0xFF4
 14459                           prodl	equ	0xFF3
 14460                           indf0	equ	0xFEF
 14461                           postinc0	equ	0xFEE
 14462                           postdec0	equ	0xFED
 14463                           preinc0	equ	0xFEC
 14464                           plusw0	equ	0xFEB
 14465                           fsr0h	equ	0xFEA
 14466                           fsr0l	equ	0xFE9
 14467                           wreg	equ	0xFE8
 14468                           indf1	equ	0xFE7
 14469                           postinc1	equ	0xFE6
 14470                           postdec1	equ	0xFE5
 14471                           preinc1	equ	0xFE4
 14472                           plusw1	equ	0xFE3
 14473                           fsr1h	equ	0xFE2
 14474                           fsr1l	equ	0xFE1
 14475                           bsr	equ	0xFE0
 14476                           indf2	equ	0xFDF
 14477                           postinc2	equ	0xFDE
 14478                           postdec2	equ	0xFDD
 14479                           preinc2	equ	0xFDC
 14480                           plusw2	equ	0xFDB
 14481                           fsr2h	equ	0xFDA
 14482                           fsr2l	equ	0xFD9
 14483                           status	equ	0xFD8


Data Sizes:
    Strings     587
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256    202     230
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1629_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_UI_main
    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper2

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0  298116
                                             90 BANK1    112   112      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   47736
                                            124 BANK0      2     0      2
                                              0 BANK1     12    12      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23233
                                            123 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25184
                                            123 BANK0      4     0      4
                                              0 BANK1      8     8      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24589
                                            123 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       8     4      4  144572
                                             14 BANK1      8     4      4
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   47294
                                              0 BANK1      8     6      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47579
                                              0 BANK1     14    12      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   24129
                                              0 BANK1      8     6      2
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23804
                                            123 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0    1404
                                              5 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       5     3      2     657
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         5     3      2     747
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26940
                                            123 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   23075
                                            109 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CA      E6       7       89.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     273      34        0.0%
DATA                 0      0     273       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 04:55:48 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 01DB                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             servoRotate180@servo 0080  
           ___wmul@multiplicand 0082                     __CFG_BORV$3 000000                 ??_number_deploy 0100  
             stepper2@direction 010D                   servoRotate0@i 0083                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000             __end_of_system_init 3BD8                             l120 31A2  
                           l123 31EC                             l132 30B8                             l117 314E  
                           l135 30FE                 _ultrasonic_main 256A                             l129 3060  
                           l506 0290                             l611 1D5A                             l451 26BE  
                           l544 0AD2                             l609 1D52                             l634 1F44  
                           l636 1F4C                             l728 367E                             l598 351A  
                           _GIE 007F97                    __CFG_CPB$OFF 000000                             _RB2 007C0A  
                           _RC1 007C11                             _RB3 007C0B                             _RC2 007C12  
                           _RD0 007C18                             _RB4 007C0C                             _RD1 007C19  
                           _RB5 007C0D                             _RB6 007C0E                             _RB7 007C0F  
                           _ISR 0008          __size_of_stepper2_back 00A0                             _abs 3B72  
                           _cnt 01E3                             _pad 34EA                             _min 2D40  
                           _sum 0038                  stepper2_back@i 0106                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                            ?_ISR 0001                    ___fltol@exp1 0031  
                  __CFG_WDT$OFF 000000                            l1121 38C6                            ?_abs 0092  
                          l1407 299A                            l1376 3B9C                            l1474 3A78  
                          ?_pad 0094                            l8000 02B0                            l7032 179E  
                          l7230 3630                            l8110 0780                            l7206 1A40  
                          l7126 1928                            l7232 363C                            l6600 2CF8  
                          l8032 0378                            l8016 0310                            l7048 180A  
                          l7320 372E                            l7242 3670                            l8106 0778  
                          l6604 2D1E                            l6444 381C                            l8116 079A  
                          l8220 08EC                            l8212 088E                            ?_min 0080  
                          l6550 27A6                            l6542 276C                            l6454 3B0C  
                          l6462 3C78                            l8126 0808                            l7334 3766  
                          l7350 2F70                            l6616 3ABA                            l6560 2802  
                          l6536 2744                            l6464 3C7E                            l6640 1D74  
                          l6720 2044                            l6800 13C2                            l8128 0816  
                          l8056 051A                            l7168 19C0                            l7088 189E  
                          l7360 2FB8                            l6458 3B24                            l6482 3502  
                          l6626 1D36                            l6706 1FB6                            l6802 13C4  
                          l8082 06CC                            l7370 3004                            l7354 2F88  
                          l7610 3602                            l7602 35EA                            l7530 24F0  
                          l7522 24BC                            l7514 2478                            l7506 2444  
                          l7450 2E9E                            l7620 3890                            l6548 2792  
                          l6564 2818                            l6580 2C48                            l6492 353E  
                          l6644 1D84                            l6820 13E4                            l6812 13DC  
                          l6804 13D4                            l7460 2ED2                            l8236 0946  
                          l6750 2874                            l6590 2C9A                            l6486 3512  
                          l6654 1E7E                            l6910 39C8                            l8078 06A6  
                          l7374 301C                            l7606 35F4                            l7470 2F06  
                          l7438 2E64                            l8342 0D06                            l8334 0CAA  
                          l8246 0976                            l6760 28BE                            l6752 2878  
                          l6568 283E                            l6584 2C6C                            l6496 356A  
                          l6488 3524                            l6744 2132                            l6728 20BC  
                          l6840 14BA                            l6824 13EE                            l6816 13E0  
                          l6808 13D8                            l7720 2C10                            l7552 2D76  
                          l7480 2F3A                            l8352 0D66                            l8280 0A48  
                          l8264 0A02                            l8360 0D90                            l7626 38B8  
                          l7618 3884                            l6770 28DC                            l6674 1EE4  
                          l6842 14C8                            l6826 1430                            l7554 2D80  
                          l7538 2534                            l8346 0D16                            l8338 0CBA  
                          l6772 2904                            l6596 2CE2                            l6588 2C86  
                          l6692 1F62                            l6908 39A0                            l7644 2B3E  
                          l7492 23D2                            l8356 0D6C                            l8292 0A9C  
                          l6766 28CE                            l6678 1EFC                            l6838 149C  
                          l7910 00BC                            l7398 34A4                            l7590 35C2  
                          l7830 21F8                            l7822 21B2                            l7566 2E2E  
                          l7750 25F6                            l8382 0E2C                            l8286 0A66  
                          l6776 293A                            l6768 28D6                            l6872 1690  
                          l7592 35CA                            l7584 35AC                            l7840 2242  
                          l7816 2178                            l7568 2E32                            l7744 25DE  
                          l8288 0A7A                            l6698 1F94                            l6882 16D8  
                          l6858 15C2                            l7578 359C                            l7842 224C  
                          l7826 21E4                            l7498 2400                            l7770 2668  
                          l7746 25E6                            l8298 0ABA                            l7940 015E  
                          l6878 16CC                            l7854 2298                            l7774 2696  
                          l7782 26AE                            l6888 16F0                            l7872 2362  
                          l7788 26C4                            l7990 0270                            l7968 01EA  
                          STR_1 FFD9                            STR_2 FF0A                            STR_3 FF74  
                          STR_4 FFD9                            STR_5 FFCF                            STR_6 FFF4  
                          STR_7 FEE2                            STR_8 FFD9                            STR_9 FFFA  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            u7000 1D0A  
                          u7100 1EC2                            u7030 1D48                            _RBIE 007F93  
                          u7120 1ECE                            u8000 2420                            _RBIF 007F90  
                          u7050 1D6E                            u7210 2022                            u8010 2454  
                          u7060 1E8E                            u7220 2024                            u8100 2554  
                          u8020 2464                            u7150 1F38                            u8110 2D66  
                          u8030 2488                            u7320 28BA                            u7080 1EB0  
                          u7240 2098                            u8040 2498                            u7081 1EAE  
                          u7090 1EBE                            u7250 20CE                            u7170 1FB2  
                          u8210 35CE                            u8050 24CC                            u7340 296A  
                          u6700 3B82                            u7180 1FE8                            u8060 24DC  
                          u8300 2660                            u7245 2086                            u7350 296C  
                          u6630 3814                            u7270 20F0                            u7190 1FEA  
                          u7430 1502                            u8150 2DEE                            u8070 2500  
                          u8310 2678                            u6615 3CC6                            u7271 20EE  
                          u6616 3CC8                            u6800 3A62                            u7280 20FE  
                          u7440 1504                            u8400 2218                            u8160 2E14  
                          u8080 2510                            u8250 3894                            u6650 385C  
                          u7290 2102                            u7450 1510                            u7610 30A6  
                          u8410 2228                            u8090 2544                            u8330 26C4  
                          u9107 0D78                            u9027 0904                            u6820 3C66  
                          u8420 2238                            u9117 0DA2                            u9037 092E  
                          u6830 3C68                            u6750 3C34                            u7470 1544  
                          u7550 3190                            u7630 30EC                            u9207 2E7A  
                          u9127 0DC6                            u9047 0958                            u6760 3C36  
                          u6680 3C02                            u8440 2264                            u8360 21A8  
                          u9217 2E90                            u9137 0DFA                            u9057 098C  
                          u6770 3B6A                            u6690 3C04                            u7490 15F6  
                          u7570 31DA                            u7650 313A                            u7810 3754  
                          u8450 2274                            u8370 21DA                            u9307 2342  
                          u9227 2EAE                            u9147 0E1E                            u9067 09BE  
                          u6940 2C9E                            u6780 3B6C                            u8460 2284  
                          u6861 2772                            u9317 3402                            u9237 2EC4  
                          u9157 257C                            u9077 0B5E                            u6790 3A60  
                          u7590 3226                            u7830 378C                            u8470 2294  
                          u8390 2208                            u9407 175A                            u9327 3436  
                          u9247 2EE2                            u9167 25A6                            u9087 0C26  
                          u7760 3640                            u6880 27AA                            u8640 02AC  
                          u9417 176E                            u9337 2B04                            u9257 2EF8  
                          u9177 262E                            u9097 0C62                            u8730 081C  
                          u8490 2372                            u9507 1846                            u9427 1782  
                          u9347 2B30                            u9267 2F16                            u9187 26D2  
                          u6980 3AB6                            u7940 2F50                            u9517 1860  
                          u9437 1796                            u9357 2B92                            u9277 2F2C  
                          u9197 26FE                            u6990 1D08                            u8670 038A  
                          u8590 0200                            u7950 23A4                            u9607 1970  
                          u9527 187A                            u9447 17B2                            u9367 2BBC  
                          u9287 238A                            u8680 039A                            u7880 34CC  
                          u7960 23B4                            u7785 3902                            u8681 0398  
                          u9617 1988                            u9537 1894                            u9457 17C6  
                          u9377 3466                            u9297 230E                            u7970 23E2  
                          u7890 2E62                            u7795 3CEA                            u9707 3360  
                          u9627 19A0                            u9547 18B6                            u9467 17DA  
                          u9387 2FCC                            u7796 3CEC                            u7980 23F2  
                          u8940 0A20                            u8860 0878                            u9717 3066  
                          u9637 19B8                            u9557 18D0                            u9477 17EE  
                          u9397 1746                            u7990 2410                            u8950 0A30  
                          u9807 3174                            u9727 3076                            u9647 19D8  
                          u9567 18EA                            u9487 1802                            u8855 0866  
                          u8960 0A7A                            u8880 08AA                            u9817 31AC  
                          u9737 308A                            u9657 19F0                            u9577 1904  
                          u9497 182C                            u8881 08A8                            u8857 0868  
                          u8970 0A8A                            u9907 0328                            u9827 31C0  
                          u9747 30BC                            u9667 1A08                            u9587 191E  
                          u8875 0896                            u8980 0ACE                            u9917 03B4  
                          u9837 31F6                            u9757 30D2                            u9677 1A20  
                          u9597 1958                            u8877 0898                            u9927 0540  
                          u9847 3208                            u9767 3108                            u9687 1A38  
                          u9937 070E                            u9857 007A                            u9777 311C  
                          u9697 330E                            u9947 379A                            u9867 011E  
                          u9787 315A                            u9957 37B4                            u9877 0192  
                          u9797 3166                            u9967 37C6                            u9887 0228  
                          u9977 37EA                            u9897 02C8                            u9987 3CAC  
                          u9997 3CB6                            _Pole 0200              main@poles_detected 01C4  
                   main@t_count 01BE                            abs@a 0092                            _data 005E  
                          _echo 0E38                            _dbuf 0280                            _disp 01DD  
                          _atoi 2860                            _main 0826                            _dtoa 1CDE  
                          _meas 0050                            _keys FD9D                            _send 006D  
                          _tick 0056                            _prec 004C                            _sens 0058  
                          _temp 00FF                            _time 01D2                            _nout 0048  
                          pad@i 009B                            pad@p 0098                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 009D                            fsr2l 000FD9                            _trig 2E50  
                          _sumf 0040                            btemp 006E                            min@i 0089  
                          _xtoa 1F26                            prodh 000FF4                            prodl 000FF3  
                          start 000E         __size_of_actuators_main 0136                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 0020                 __end_of_UI_main 0826                 servoRotate180@i 0083  
                 __CFG_MCLRE$ON 000000                    main@act_done 01B8                    ___param_bank 000000  
                         ??_ISR 0036                           ??_abs 0094                           ??_pad 009A  
                         ??_min 0084           actuators_main@act_cnt 0114           I2C_Master_Read@ackBit 0081  
              ?_I2C_Master_Init 008D                ?_I2C_Master_Read 0001                ?_I2C_Master_Wait 0001  
              ?_I2C_Master_Stop 0001                           ?_echo 0001                   ___fltol@sign1 0030  
               __end_of___aodiv 2860                           ?_atoi 0087                           ?_main 0001  
                         ?_dtoa 009F                 __end_of___aomod 2D40                 __end_of___fldiv 1CDE  
               __end_of___awdiv 360C                           STR_10 FDE8                           STR_11 FF7F  
                         STR_20 FF5E                           STR_12 FE4D                           STR_13 FF89  
                         STR_21 FF23                           STR_14 FE5D                           STR_22 FE3D  
                         STR_30 FDC6                           STR_31 FFE3                           STR_23 FFC5  
                         STR_15 FF93                           STR_32 FEC3                           STR_24 FF47  
                         STR_16 FDF9                           STR_40 FDB4                           STR_33 FE0B  
                         STR_17 FF9D                           STR_41 FE7C                           STR_25 FE6D  
                         STR_34 FFE3                           STR_26 FFC5                           STR_18 FFEC  
                         STR_42 FF3B                           STR_50 FEA9                           STR_51 FDC6  
                         STR_43 FE1B                           STR_35 FEC3                           STR_27 FF47  
                         STR_19 FEF0                           STR_28 FE6D                           STR_52 FEC3  
                         STR_44 FDB4                           STR_60 FF2F                           STR_36 FE0A  
                         STR_45 FE7C                           STR_53 FF02                           STR_61 FF53  
                         STR_37 FED4                           STR_29 FE8B                           STR_46 FF3B  
                         STR_62 FF69                           STR_54 FEFD                           STR_38 FEC6  
                         STR_55 FFBB                           STR_63 FFB1                           STR_39 FE1B  
                         STR_47 FDD7                           STR_56 FFA7                           STR_48 FF17  
                         STR_57 FF23                           STR_49 FE9A                           STR_58 FE2C  
                         STR_59 FEB8                 __end_of___fltol 32E2                           ?_trig 0001  
               __end_of___lldiv 3690                 ___awdiv@divisor 0082                           ?_xtoa 009F  
                         _T1CON 000FCD                 __end_of___llmod 38D8                           i2l410 137A  
                         i2l383 3AF4                 ___awdiv@counter 0084                    vfpfcnvrt@fmt 00C8  
                  vfpfcnvrt@llu 00D8                           _TMR1H 000FCF                           _TMR1L 000FCE  
                         _PORTB 000F81                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                 __end_of_lcdInst 3DD0  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                 __end_of_initLCD 3802  
                __CFG_EBTRB$OFF 000000                           _brake 339A                           _flags 004E  
                         _dists 0069                           _fputc 3802                 __end_of_isalpha 3B72  
                         _fputs 3B00                 __end_of_isdigit 3C6E                           _servo 32E2  
                         atoi@n 0094                           pad@fp 0094                           atoi@s 0087  
                         _width 004A                           _state 01DF                           _putch 3DB0  
                         _start 39E4                           main@i 01B4                           main@k 01BC  
                         dtoa@d 00A1                           dtoa@i 00C1                           dtoa@n 00B9  
                         dtoa@p 00B3                           dtoa@s 00B7                           dtoa@w 00B5  
               __end_of_islower 3C0A                 __end_of_isspace 3AC2                 __end_of_isupper 3C3C  
                         tablat 000FF5                 send_nibble@data 0081                           plusw2 000FDB  
               __end_of_pulse_e 3CCA                           ttemp5 006F                           ttemp6 0072  
                         ttemp7 0076                           status 000FD8     I2C_Master_Read@receivedByte 0082  
               __end_of_stepper 3792                           wtemp8 006F                           xtoa@c 00C4  
                         xtoa@d 00A1                           xtoa@i 00C2                           xtoa@n 00BA  
                         xtoa@p 00B6                           xtoa@w 00B8                           xtoa@x 00A9  
                 _stepper2_back 344A                 __end_of_toupper 3A82                ??_servoRotate180 0082  
            __size_ofi2___awdiv 0084                  __CFG_PBADEN$ON 000000                    _toupper$1681 008C  
               __initialization 3938                    __end_of_echo 137C                     _system_init 3BA6  
                  __end_of_atoi 29A4                    __end_of_main 0E38                    __end_of_dtoa 1F26  
                  __end_of_keys FDAE         __end_of_ultrasonic_main 2716                    __end_of_trig 2F52  
                  __end_of_xtoa 215C                          ??_echo 0032                          ??_atoi 0089  
                        ??_main 015A                          ??_dtoa 00A9                          ??_trig 0080  
                        ??_xtoa 00AA                   __activetblptr 000002            number_deploy@t_count 0106  
             ?_I2C_Master_Start 0001               ?_I2C_Master_Write 0081            number_deploy@tires_t 0102  
            ??_I2C_Master_Start 0081                          ?_brake 0001                          _ADCON1 000FC1  
            ??_I2C_Master_Write 0083                    ?_send_nibble 0001                          ?_fputc 0084  
              ___llmod@dividend 0080                          ?_fputs 008D                ___awdiv@dividend 0080  
                        ?_servo 0001                          ?_putch 0001                          ?_start 0001  
                        _INT1IE 007F83                          _INT1IF 007F80              stepper2@steps2_adj 0100  
                        i2l1363 2A60                          i2l1356 29E2                          i2l1285 1BC8  
                        i2l1296 1C36                          i2l1297 1C32                          i2l5120 1A82  
                        i2l5202 1BFC                          i2l5140 1AC2                          i2l5124 1A86  
                        i2l5230 1CC8                          i2l5222 1C7A                          i2l5152 1AFA  
                        i2l5144 1AC6                          i2l5312 3290                          i2l5226 1C9E  
                        i2l5330 32D0                          i2l5322 32A8                          i2l5410 36B4  
                        i2l6122 3AE2                          i2l5236 1CD4                          i2l5324 32B4  
                        i2l5316 32A0                          i2l5404 36A4                          i2l5238 1CD6  
                        i2l5190 1BC6                          i2l5166 1B28                          i2l5158 1B10  
                        i2l5184 1BA0                          i2l5176 1B78                          i2l5416 36CA  
                        i2l5432 36FC                          i2l5600 10BC                          i2l5362 2A10  
                        i2l5418 36D2                          i2l5602 10D6                          i2l5196 1BDE  
                        i2l5364 2A16                          i2l5356 29F2                          i2l5436 370A  
                        i2l5428 36F2                          i2l5612 1156                          i2l5374 2A86  
                        i2l5366 2A22                          i2l5296 3246                          i2l5392 2AD2  
                        i2l5376 2A92                          i2l5368 2A48                          i2l5560 0F12  
                        i2l5544 0EB6                          i2l5634 120E                          i2l5628 11B2  
                        i2l5636 1228                          i2l5662 1304                          i2l5646 12A8  
                        i2l5566 0F6A                          i2l5568 0F84                          i2l5594 1060  
                        i2l5578 1004                          i2l5668 1360                       ??_UI_main 0100  
                 vfpfcnvrt@done 00E1                          _TMR1ON 007E68                  ?_stepper2_back 0100  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                __end_of___xxtofl 2AE4  
   number_deploy@poles_detected 00FD                  __CFG_XINST$OFF 000000                    vfprintf@cfmt 00EB  
                     ??___aodiv 0090                       ??___aomod 0090                          ___wmul 3D1C  
                     ??___fldiv 0017                       ??___awdiv 0084                       ??___fltol 002C  
                     ??___lldiv 0088                       ??___llmod 0088                          clear_0 395E  
                        clear_1 396A                          clear_2 397A                ___awdiv@quotient 0086  
                     ??_lcdInst 0083                          _printf 3CF4                          pad@buf 0096  
                        dtoa@fp 009F                          _strlen 3C6E                  i2___awdiv@sign 0006  
                     ??_initLCD 0084                          fputc@c 0084                          fputs@c 0091  
                        fputs@i 0092                    __pdataCOMRAM 0069                          fputs@s 008D  
                     ??_isalpha 0082                       ??_isdigit 0082               __end_ofi2___awdiv 3714  
                     ??_islower 0082                    __mediumconst FD9C                       ??_isspace 0082  
                        tblptrh 000FF7                       ??_isupper 0082                          tblptrl 000FF6  
                        tblptru 000FF8                __end_of_vfprintf 39E4                       ??_pulse_e 0080  
              __end_of_stepper2 304E  ultrasonic_main@min_us_dist_918 010A                       ??_stepper 00FF  
                        xtoa@fp 009F                       ??_toupper 0088                    ___xxtofl@arg 000B  
         pulse_e@interruptState 0080                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                    __accesstop 0080         __end_of__initialization 3980                  _actuators_main 2AE4  
                 ___rparam_used 000001                      ___fltol@f1 0028                    stepper@i_380 0106  
            __size_of_backwards 0026             full_drive@direction 00FE                  __pcstackCOMRAM 0001  
                  stepper@stack 0100                ?_ultrasonic_main 00FC                   __end_of_brake 344A  
                 __end_of_fputc 3870                   __end_of_fputs 3B3C                   __end_of_servo 339A  
             servoRotate0@servo 0080                   __end_of_putch 3DC0                   __end_of_start 3A36  
               _key_was_pressed 01E5           number_deploy@avg_dist 00FB                         ??_brake 00FB  
                       ??_fputc 0088                         ??_fputs 0091                         ??_servo 0085  
                       ??_putch 0083                         ??_start 0095                 ??_stepper2_back 0102  
                    __pbssBANK0 00FF                      __pbssBANK1 01CA                      __pbssBANK2 0200  
        __end_of_actuators_main 2C1A                         ?___wmul 0080              __size_of_send_byte 0018  
                       ?_printf 00ED          stepper2_back@direction 0103                         ?_strlen 0080  
         __end_of_number_deploy 237C                       ?___xxtofl 0001               __end_of_backwards 3D6A  
            __size_of_vfpfcnvrt 03AA                      _dist_final 0250                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7                         _UI_main 0012  
          __size_of_send_nibble 001A                 ?_actuators_main 010E                         __Hparam 0000  
                       __Lparam 0000                    ?_system_init 0001                         ___aodiv 2716  
                       ___aomod 2C1A                         ___fldiv 1A56                         ___awdiv 3586  
                       ___fltol 3228                         ___lldiv 360C                 __size_of___wmul 0028  
                       ___llmod 3870                       ?_vfprintf 00E5                       ?_stepper2 0100  
               __CFG_STVREN$OFF 000000                         __pcinit 3938                      _full_drive 1726  
                       __ramtop 1000                         _lcdInst 3DC0                         __ptext0 0826  
                       __ptext1 256A                         __ptext2 2E50                         __ptext3 237C  
                       __ptext4 2D40                         __ptext5 39E4                         __ptext6 215C  
                       __ptext7 3586                         __ptext8 339A                         __ptext9 3D44  
               __size_of_printf 0028                 __size_of_strlen 002E                         _initLCD 3792  
                  __size_of_ISR 3AF8                         _counter 0060                    __size_of_abs 0034  
                  __size_of_pad 009C                         _isalpha 3B3C                    __size_of_min 0110  
                       _isdigit 3C3C                      ??___xxtofl 0005                         _islower 3BD8  
                       _isspace 3A82                         _isupper 3C0A        __size_of_I2C_Master_Init 0060  
      __size_of_I2C_Master_Read 002A        __size_of_I2C_Master_Wait 0014        __size_of_I2C_Master_Stop 0008  
               _prev_dist_final 01CA                         _pressed 01D9                         atoi@neg 008D  
                       _pulse_e 3C9C                         _stepper 3714                  __pintcode_body 3AC2  
                       _toupper 3A36            end_of_initialization 3980                         min@size 0082  
           main@arduino_stopped 01B9           __end_of_LCD_SIZE_HORZ FDB3               __end_of_send_byte 3D9C  
         __end_of_LCD_SIZE_VERT FDB2                         fputc@fp 0086                   __Lmediumconst FD9C  
                       int_func 3AC2                         fputs@fp 008F       __size_of_I2C_Master_Start 0008  
     __size_of_I2C_Master_Write 000A                 ___lldiv@divisor 0084                 ___lldiv@counter 008C  
             __end_of_vfpfcnvrt 1726                   ?_servoRotate0 0080                  main@steps2_adj 01B2  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 00EB  
                    ??_stepper2 0102                         strlen@a 0082                         strlen@s 0080  
                     _PORTAbits 000F80                      _print_echo 237C                   stepper2@i_388 0109  
                 ___xxtofl@sign 0009                       _TRISAbits 000F92                       _TRISBbits 000F93  
                     _TRISCbits 000F94                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
                    main@i_1032 01C2                      main@i_1026 01B6                       i2___awdiv 3690  
   ultrasonic_main@step2_offset 0106                   send_byte@data 0082              i2___awdiv@dividend 0001  
         UI_main@poles_detected 00FD                  ??_servoRotate0 0082     number_deploy@tires_detected 0104  
                   vfpfcnvrt@ap 00CA                     vfpfcnvrt@fp 00C6                     vfpfcnvrt@ll 00D0  
                __end_of___wmul 3D44                     ?_full_drive 00FB         __size_of_servoRotate180 00EE  
                 __pidataCOMRAM 3DEA                  __end_of_printf 3D1C                  __end_of_strlen 3C9C  
           start_initialization 3938                      min@minimum 0087              i2___awdiv@quotient 0007  
                   __end_of_ISR 3B00                     __end_of_abs 3BA6                     __end_of_pad 3586  
                   __end_of_min 2E50           stepper2@count_stepper 010B                      ?i2___awdiv 0001  
             ??_I2C_Master_Init 0091               ??_I2C_Master_Read 0081               ??_I2C_Master_Wait 0080  
             ??_I2C_Master_Stop 0081               main@prev_avg_dist 01C6                  _poles_detected 0052  
               ___llmod@divisor 0084                 ___llmod@counter 0088                    UI_main@t_dep 00FB  
                   vfprintf@fmt 00E7                        ??___wmul 0084        I2C_Master_Init@clockFreq 008D  
              __CFG_LPT1OSC$OFF 000000            __size_of_system_init 0032                        ??_printf 00F7  
                      ??_strlen 0082                     ?_print_echo 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F        __size_of_ultrasonic_main 01AC                     __pbssCOMRAM 0038  
                 __pcstackBANK0 0080                   __pcstackBANK1 0100                ___aodiv@dividend 0080  
              ??_actuators_main 0112               __size_of___xxtofl 0140                       _backwards 3D44  
                      ?_UI_main 00FB           __end_of_stepper2_back 34EA             __size_of_full_drive 0330  
                     _atoi$1590 0093                       _atoi$1591 0091                       _atoi$1589 008F  
              _I2C_Master_Start 3DE2                _I2C_Master_Write 3DD0                       _dtoa$1105 00B1  
             __CFG_CCP2MX$PORTC 000000                       __pintcode 0008                   __pmediumconst FD9C  
                      ?___aodiv 0080                        ?___aomod 0080                        ?___fldiv 000F  
                      ?___awdiv 0080                ___aodiv@quotient 0092                        ?___fltol 0028  
                      ?___lldiv 0080                        ?___llmod 0080                        ?_lcdInst 0001  
             __size_of_vfprintf 0056               __size_of_stepper2 00FC            full_drive@stepper_no 00FB  
                      ?_initLCD 0001                        ?_isalpha 0080                        ?_isdigit 0080  
                      ?_islower 0080                        ?_isspace 0080                        ?_isupper 0080  
          __end_of_servoRotate0 3228                   ??_send_nibble 0081                        ?_pulse_e 0001  
                __size_of_brake 00B0                     ??i2___awdiv 0005                        ?_stepper 0100  
                __size_of_fputc 006E                  __size_of_fputs 003C                        ?_toupper 0086  
                __size_of_servo 00B8                      ?_backwards 0001                  __size_of_putch 0010  
                __size_of_start 0052                  ___wmul@product 0084                        _LATAbits 000F89  
                      _LATBbits 000F8A                        _LATCbits 000F8B                        _LATDbits 000F8C  
                      _LATEbits 000F8D                        UI_main@i 0159                       _send_byte 3D84  
           __size_of_print_echo 01EE          __size_of_number_deploy 0220                  _LCD_LINE1_ADDR FDB0  
                _LCD_LINE2_ADDR FDB3                  _LCD_LINE3_ADDR FDAF                  _LCD_LINE4_ADDR FDAE  
                      i2u504_40 1C2C                        i2u522_40 32BA                        i2u508_40 1C88  
                      i2u540_40 36D6                        i2u509_40 1CAC                        i2u517_40 3234  
                      i2u533_40 2A9C                        i2u518_40 3264                        i2u518_45 325A  
                      i2u635_40 3AEC                        i2u548_40 0EC6                        i2u549_40 0ED6  
                      i2u558_40 1014                        i2u559_40 1024                        i2u568_40 1166  
                      i2u569_40 1176                        i2u578_40 12B8                        i2u579_40 12C8  
              __CFG_WDTPS$32768 000000      stepper2_back@count_stepper 0104                  _servoRotate180 304E  
                     _vfpfcnvrt 137C                       _xtoa$1116 00B2                       _xtoa$1117 00B4  
             ___wmul@multiplier 0080                       main@t_dep 01C0               i2___awdiv@divisor 0003  
                     main@stack 01BA               i2___awdiv@counter 0005                    _isspace$1616 0086  
                    vfpfcnvrt@c 00E0             actuators_main@stack 010E                       copy_data0 394C  
             ??_ultrasonic_main 0100                 UI_main@keypress 0154          __end_of_LCD_LINE1_ADDR FDB1  
              __size_of_UI_main 0814          __end_of_LCD_LINE2_ADDR FDB4          __end_of_LCD_LINE3_ADDR FDB0  
        __end_of_LCD_LINE4_ADDR FDAF             __end_of_send_nibble 3D84                      ?_send_byte 0001  
                   UI_main@Pole 0104                        __Hrparam 0000                     UI_main@tick 0155  
                    vfprintf@ap 00E9                        __Lrparam 0000                      vfprintf@fp 00E5  
            __CFG_BOREN$SBORDIS 000000          __end_of_servoRotate180 313C                __size_of___aodiv 014A  
              __size_of___aomod 0126                __size_of___fldiv 0288                __size_of___awdiv 0086  
              __size_of___fltol 00BA                __size_of___lldiv 0084                __size_of___llmod 0068  
                  ??_full_drive 00FD                      ?_vfpfcnvrt 00C6                 ___aodiv@divisor 0088  
               ___aodiv@counter 0090                __size_of_lcdInst 0010        actuators_main@steps2_adj 0110  
                 _number_deploy 215C                 _I2C_Master_Init 38D8                 _I2C_Master_Read 3CCA  
              __size_of_initLCD 0070                        ___xxtofl 29A4                 _I2C_Master_Wait 3D9C  
               _I2C_Master_Stop 3DDA                __size_of_isalpha 0036                __size_of_isdigit 0032  
              __size_of_islower 0032                __size_of_isspace 0040                        __ptext10 2AE4  
                      __ptext11 3BA6                        __ptext20 3CF4                        __ptext12 344A  
                      __ptext21 398E                        __ptext13 2F52                        __ptext30 3C6E  
                      __ptext22 137C                        __ptext14 3714                        __ptext31 3B00  
                      __ptext23 1F26                        __ptext15 1726                        __ptext40 3D1C  
                      __ptext32 3802                        __ptext24 3A36                        __ptext16 32E2  
                      __ptext41 3792                        __ptext33 3DB0                        __ptext25 3BD8  
                      __ptext17 304E                        __ptext50 3CCA                        __ptext42 3DC0  
                      __ptext34 3B72                        __ptext26 3C0A                        __ptext18 313C  
                      __ptext51 3D9C                        __ptext43 3D84                        __ptext35 2C1A  
                      __ptext27 3B3C                        __ptext19 0012                        __ptext52 38D8  
                      __ptext44 3D6A                        __ptext36 2716                        __ptext28 1CDE  
                      __ptext53 360C                        __ptext45 3C9C                        __ptext37 2860  
                      __ptext29 34EA                        __ptext46 3870                        __ptext38 3A82  
                      __ptext55 0E38                        __ptext47 3DD0                        __ptext39 3C3C  
                      __ptext56 3690                        __ptext48 3DDA                        __ptext57 29A4  
                      __ptext49 3DE2                        __ptext58 3228                        __ptext59 1A56  
              __size_of_isupper 0032                        _avg_dist 0044                __size_of_pulse_e 002E  
                   ??_backwards 0083                __size_of_stepper 007E                __size_of_toupper 004C  
                 __size_of_echo 0544                   __size_of_atoi 0144                   __size_of_main 0612  
                 __size_of_dtoa 0248         stepper2_back@steps2_adj 0100                   __size_of_trig 0102  
                 __size_of_xtoa 0236              __end_of_full_drive 1A56                        _keypress 005F  
                      _temp_int 01E1                 ?_servoRotate180 0080                        int$flags 006E  
                      _vfprintf 398E                        main@Pole 0162                        _stepper2 2F52  
                     printf@fmt 00ED     I2C_Master_Write@byteToWrite 0081                ___aomod@dividend 0080  
         __size_of_servoRotate0 00EC                        min@array 0080                    ??_print_echo 00FB  
                ?_number_deploy 00FB                       putch@data 0083                  _vfpfcnvrt$1131 00E3  
      __end_of_I2C_Master_Start 3DEA        __end_of_I2C_Master_Write 3DDA                      _INTCONbits 000FF2  
         ultrasonic_main@sensed 0104                        isalpha@c 0080                        isdigit@c 0080  
                     stepper2@i 0107                     _send_nibble 3D6A                        intlevel2 0000  
                 _LCD_SIZE_HORZ FDB2                        islower@c 0080                   _LCD_SIZE_VERT FDB1  
                      isspace@c 0080                ___lldiv@dividend 0080                     ??_send_byte 0082  
                      isupper@c 0080                  _tires_deployed 0054              __end_of_print_echo 256A  
                 ??_system_init 0080                    _servoRotate0 313C                        printf@ap 00F9  
       __end_of_I2C_Master_Init 3938                 ___aomod@divisor 0088         __end_of_I2C_Master_Read 3CF4  
       __end_of_I2C_Master_Wait 3DB0         __end_of_I2C_Master_Stop 3DE2                     ??_vfpfcnvrt 00CC  
                   lcdInst@data 0083                 ___aomod@counter 0090                        stepper@i 0104  
     ultrasonic_main@steps2_adj 0108                ___lldiv@quotient 0088                        toupper@c 0086  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                     _timer_count 005C  
                  ___aodiv@sign 0091                    ___aomod@sign 0091            stepper@count_stepper 0102  
