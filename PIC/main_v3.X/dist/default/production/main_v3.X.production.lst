

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 07 05:25:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4620 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  003B66                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _dists
   122  003B66  0000               	dw	0
   123  003B68  FFFF               	dw	65535
   124                           
   125                           ;initializer for _send
   126  003B6A  01                 	db	1
   127                           
   128                           	psect	mediumconst
   129  00FDB6                     __pmediumconst:
   130                           	opt callstack 0
   131  00FDB6  00                 	db	0
   132  00FDB7                     _keys:
   133                           	opt callstack 0
   134  00FDB7  31                 	db	49
   135  00FDB8  32                 	db	50
   136  00FDB9  33                 	db	51
   137  00FDBA  41                 	db	65
   138  00FDBB  34                 	db	52
   139  00FDBC  35                 	db	53
   140  00FDBD  36                 	db	54
   141  00FDBE  42                 	db	66
   142  00FDBF  37                 	db	55
   143  00FDC0  38                 	db	56
   144  00FDC1  39                 	db	57
   145  00FDC2  43                 	db	67
   146  00FDC3  2A                 	db	42
   147  00FDC4  30                 	db	48
   148  00FDC5  23                 	db	35
   149  00FDC6  44                 	db	68
   150  00FDC7  00                 	db	0
   151  00FDC8                     __end_of_keys:
   152                           	opt callstack 0
   153  00FDC8  50                 	db	80
   154  00FDC9                     __end_of_LCD_LINE4_ADDR:
   155                           	opt callstack 0
   156  00FDC9  10                 	db	16
   157  00FDCA                     __end_of_LCD_LINE3_ADDR:
   158                           	opt callstack 0
   159  00FDCA                     _LCD_LINE1_ADDR:
   160                           	opt callstack 0
   161  00FDCA  00                 	db	0
   162  00FDCB                     __end_of_LCD_LINE1_ADDR:
   163                           	opt callstack 0
   164  00FDCB                     _LCD_SIZE_VERT:
   165                           	opt callstack 0
   166  00FDCB  04                 	db	4
   167  00FDCC                     __end_of_LCD_SIZE_VERT:
   168                           	opt callstack 0
   169  00FDCC                     _LCD_SIZE_HORZ:
   170                           	opt callstack 0
   171  00FDCC  10                 	db	16
   172  00FDCD                     __end_of_LCD_SIZE_HORZ:
   173                           	opt callstack 0
   174  00FDCD  40                 	db	64
   175  00FDCE                     __end_of_LCD_LINE2_ADDR:
   176                           	opt callstack 0
   177  0000                     _PORTAbits	set	3968
   178  0000                     _TRISAbits	set	3986
   179  0000                     _T1CON	set	4045
   180  0000                     _PORTB	set	3969
   181  0000                     _LATBbits	set	3978
   182  0000                     _TRISBbits	set	3987
   183  0000                     _TMR1H	set	4047
   184  0000                     _TMR1L	set	4046
   185  0000                     _LATDbits	set	3980
   186  0000                     _INTCONbits	set	4082
   187  0000                     _LATE	set	3981
   188  0000                     _TRISE	set	3990
   189  0000                     _LATC	set	3979
   190  0000                     _TRISC	set	3988
   191  0000                     _ADCON1	set	4033
   192  0000                     _TRISD	set	3989
   193  0000                     _LATD	set	3980
   194  0000                     _TRISA	set	3986
   195  0000                     _LATB	set	3978
   196  0000                     _TRISB	set	3987
   197  0000                     _LATAbits	set	3977
   198  0000                     _LATEbits	set	3981
   199  0000                     _LATCbits	set	3979
   200  0000                     _LATA	set	3977
   201  0000                     _SSPBUF	set	4041
   202  0000                     _SSPCON2bits	set	4037
   203  0000                     _SSPCON1	set	4038
   204  0000                     _SSPADD	set	4040
   205  0000                     _TRISCbits	set	3988
   206  0000                     _SSPCON1bits	set	4038
   207  0000                     _SSPCON2	set	4037
   208  0000                     _SSPSTAT	set	4039
   209  0000                     _GIE	set	32663
   210  0000                     _INT1IE	set	32643
   211  0000                     _RB2	set	31754
   212  0000                     _RB3	set	31755
   213  0000                     _RD0	set	31768
   214  0000                     _RD1	set	31769
   215  0000                     _RB4	set	31756
   216  0000                     _RB5	set	31757
   217  0000                     _RB6	set	31758
   218  0000                     _TMR1ON	set	32360
   219  0000                     _RB7	set	31759
   220  0000                     _INT1IF	set	32640
   221  0000                     _RBIE	set	32659
   222  0000                     _RBIF	set	32656
   223  0000                     _RC2	set	31762
   224  0000                     _RC1	set	31761
   225  00FDCE                     STR_40:
   226  00FDCE  50                 	db	80	;'P'
   227  00FDCF  25                 	db	37
   228  00FDD0  64                 	db	100	;'d'
   229  00FDD1  20                 	db	32
   230  00FDD2  44                 	db	68	;'D'
   231  00FDD3  65                 	db	101	;'e'
   232  00FDD4  70                 	db	112	;'p'
   233  00FDD5  3A                 	db	58	;':'
   234  00FDD6  25                 	db	37
   235  00FDD7  64                 	db	100	;'d'
   236  00FDD8  2C                 	db	44
   237  00FDD9  54                 	db	84	;'T'
   238  00FDDA  6F                 	db	111	;'o'
   239  00FDDB  74                 	db	116	;'t'
   240  00FDDC  3A                 	db	58	;':'
   241  00FDDD  25                 	db	37
   242  00FDDE  64                 	db	100	;'d'
   243  00FDDF  00                 	db	0
   244  00FDE0                     STR_30:
   245  00FDE0  20                 	db	32
   246  00FDE1  20                 	db	32
   247  00FDE2  20                 	db	32
   248  00FDE3  20                 	db	32
   249  00FDE4  20                 	db	32
   250  00FDE5  30                 	db	48	;'0'
   251  00FDE6  2D                 	db	45
   252  00FDE7  4D                 	db	77	;'M'
   253  00FDE8  65                 	db	101	;'e'
   254  00FDE9  6E                 	db	110	;'n'
   255  00FDEA  75                 	db	117	;'u'
   256  00FDEB  20                 	db	32
   257  00FDEC  20                 	db	32
   258  00FDED  20                 	db	32
   259  00FDEE  20                 	db	32
   260  00FDEF  20                 	db	32
   261  00FDF0  00                 	db	0
   262  00FDF1                     STR_47:
   263  00FDF1  3C                 	db	60	;'<'
   264  00FDF2  2A                 	db	42
   265  00FDF3  20                 	db	32
   266  00FDF4  20                 	db	32
   267  00FDF5  20                 	db	32
   268  00FDF6  30                 	db	48	;'0'
   269  00FDF7  2D                 	db	45
   270  00FDF8  4D                 	db	77	;'M'
   271  00FDF9  65                 	db	101	;'e'
   272  00FDFA  6E                 	db	110	;'n'
   273  00FDFB  75                 	db	117	;'u'
   274  00FDFC  20                 	db	32
   275  00FDFD  20                 	db	32
   276  00FDFE  20                 	db	32
   277  00FDFF  20                 	db	32
   278  00FE00  20                 	db	32
   279  00FE01  00                 	db	0
   280  00FE02                     STR_10:
   281  00FE02  44                 	db	68	;'D'
   282  00FE03  69                 	db	105	;'i'
   283  00FE04  73                 	db	115	;'s'
   284  00FE05  74                 	db	116	;'t'
   285  00FE06  31                 	db	49	;'1'
   286  00FE07  3D                 	db	61	;'='
   287  00FE08  25                 	db	37
   288  00FE09  64                 	db	100	;'d'
   289  00FE0A  2C                 	db	44
   290  00FE0B  41                 	db	65	;'A'
   291  00FE0C  76                 	db	118	;'v'
   292  00FE0D  67                 	db	103	;'g'
   293  00FE0E  3D                 	db	61	;'='
   294  00FE0F  25                 	db	37
   295  00FE10  64                 	db	100	;'d'
   296  00FE11  20                 	db	32
   297  00FE12  00                 	db	0
   298  00FE13                     STR_16:
   299  00FE13  44                 	db	68	;'D'
   300  00FE14  69                 	db	105	;'i'
   301  00FE15  73                 	db	115	;'s'
   302  00FE16  74                 	db	116	;'t'
   303  00FE17  34                 	db	52	;'4'
   304  00FE18  3D                 	db	61	;'='
   305  00FE19  25                 	db	37
   306  00FE1A  64                 	db	100	;'d'
   307  00FE1B  2C                 	db	44
   308  00FE1C  41                 	db	65	;'A'
   309  00FE1D  76                 	db	118	;'v'
   310  00FE1E  67                 	db	103	;'g'
   311  00FE1F  3D                 	db	61	;'='
   312  00FE20  25                 	db	37
   313  00FE21  64                 	db	100	;'d'
   314  00FE22  20                 	db	32
   315  00FE23  00                 	db	0
   316  00FE24                     STR_36:
   317  00FE24  20                 	db	32
   318  00FE25  20                 	db	32
   319  00FE26  20                 	db	32
   320  00FE27  20                 	db	32
   321  00FE28  20                 	db	32
   322  00FE29  30                 	db	48	;'0'
   323  00FE2A  2D                 	db	45
   324  00FE2B  4D                 	db	77	;'M'
   325  00FE2C  65                 	db	101	;'e'
   326  00FE2D  6E                 	db	110	;'n'
   327  00FE2E  75                 	db	117	;'u'
   328  00FE2F  20                 	db	32
   329  00FE30  20                 	db	32
   330  00FE31  20                 	db	32
   331  00FE32  23                 	db	35
   332  00FE33  3E                 	db	62	;'>'
   333  00FE34  00                 	db	0
   334  00FE35                     STR_39:
   335  00FE35  3C                 	db	60	;'<'
   336  00FE36  2A                 	db	42
   337  00FE37  20                 	db	32
   338  00FE38  20                 	db	32
   339  00FE39  20                 	db	32
   340  00FE3A  30                 	db	48	;'0'
   341  00FE3B  2D                 	db	45
   342  00FE3C  4D                 	db	77	;'M'
   343  00FE3D  65                 	db	101	;'e'
   344  00FE3E  6E                 	db	110	;'n'
   345  00FE3F  75                 	db	117	;'u'
   346  00FE40  20                 	db	32
   347  00FE41  20                 	db	32
   348  00FE42  20                 	db	32
   349  00FE43  23                 	db	35
   350  00FE44  3E                 	db	62	;'>'
   351  00FE45  00                 	db	0
   352  00FE46                     STR_22:
   353  00FE46  64                 	db	100	;'d'
   354  00FE47  65                 	db	101	;'e'
   355  00FE48  74                 	db	116	;'t'
   356  00FE49  2C                 	db	44
   357  00FE4A  25                 	db	37
   358  00FE4B  64                 	db	100	;'d'
   359  00FE4C  2C                 	db	44
   360  00FE4D  20                 	db	32
   361  00FE4E  74                 	db	116	;'t'
   362  00FE4F  63                 	db	99	;'c'
   363  00FE50  6E                 	db	110	;'n'
   364  00FE51  74                 	db	116	;'t'
   365  00FE52  20                 	db	32
   366  00FE53  25                 	db	37
   367  00FE54  64                 	db	100	;'d'
   368  00FE55  00                 	db	0
   369  00FE56                     STR_12:
   370  00FE56  44                 	db	68	;'D'
   371  00FE57  69                 	db	105	;'i'
   372  00FE58  73                 	db	115	;'s'
   373  00FE59  74                 	db	116	;'t'
   374  00FE5A  32                 	db	50	;'2'
   375  00FE5B  3D                 	db	61	;'='
   376  00FE5C  25                 	db	37
   377  00FE5D  64                 	db	100	;'d'
   378  00FE5E  2C                 	db	44
   379  00FE5F  41                 	db	65	;'A'
   380  00FE60  76                 	db	118	;'v'
   381  00FE61  67                 	db	103	;'g'
   382  00FE62  3D                 	db	61	;'='
   383  00FE63  25                 	db	37
   384  00FE64  64                 	db	100	;'d'
   385  00FE65  00                 	db	0
   386  00FE66                     STR_14:
   387  00FE66  44                 	db	68	;'D'
   388  00FE67  69                 	db	105	;'i'
   389  00FE68  73                 	db	115	;'s'
   390  00FE69  74                 	db	116	;'t'
   391  00FE6A  33                 	db	51	;'3'
   392  00FE6B  3D                 	db	61	;'='
   393  00FE6C  25                 	db	37
   394  00FE6D  64                 	db	100	;'d'
   395  00FE6E  2C                 	db	44
   396  00FE6F  41                 	db	65	;'A'
   397  00FE70  76                 	db	118	;'v'
   398  00FE71  67                 	db	103	;'g'
   399  00FE72  3D                 	db	61	;'='
   400  00FE73  25                 	db	37
   401  00FE74  64                 	db	100	;'d'
   402  00FE75  00                 	db	0
   403  00FE76                     STR_25:
   404  00FE76  33                 	db	51	;'3'
   405  00FE77  20                 	db	32
   406  00FE78  2D                 	db	45
   407  00FE79  20                 	db	32
   408  00FE7A  44                 	db	68	;'D'
   409  00FE7B  61                 	db	97	;'a'
   410  00FE7C  74                 	db	116	;'t'
   411  00FE7D  65                 	db	101	;'e'
   412  00FE7E  26                 	db	38
   413  00FE7F  54                 	db	84	;'T'
   414  00FE80  69                 	db	105	;'i'
   415  00FE81  6D                 	db	109	;'m'
   416  00FE82  65                 	db	101	;'e'
   417  00FE83  20                 	db	32
   418  00FE84  00                 	db	0
   419  00FE85                     STR_41:
   420  00FE85  44                 	db	68	;'D'
   421  00FE86  69                 	db	105	;'i'
   422  00FE87  73                 	db	115	;'s'
   423  00FE88  74                 	db	116	;'t'
   424  00FE89  54                 	db	84	;'T'
   425  00FE8A  6F                 	db	111	;'o'
   426  00FE8B  53                 	db	83	;'S'
   427  00FE8C  74                 	db	116	;'t'
   428  00FE8D  61                 	db	97	;'a'
   429  00FE8E  72                 	db	114	;'r'
   430  00FE8F  74                 	db	116	;'t'
   431  00FE90  3A                 	db	58	;':'
   432  00FE91  25                 	db	37
   433  00FE92  64                 	db	100	;'d'
   434  00FE93  00                 	db	0
   435  00FE94                     STR_29:
   436  00FE94  4D                 	db	77	;'M'
   437  00FE95  61                 	db	97	;'a'
   438  00FE96  63                 	db	99	;'c'
   439  00FE97  68                 	db	104	;'h'
   440  00FE98  69                 	db	105	;'i'
   441  00FE99  6E                 	db	110	;'n'
   442  00FE9A  65                 	db	101	;'e'
   443  00FE9B  20                 	db	32
   444  00FE9C  49                 	db	73	;'I'
   445  00FE9D  6E                 	db	110	;'n'
   446  00FE9E  20                 	db	32
   447  00FE9F  55                 	db	85	;'U'
   448  00FEA0  73                 	db	115	;'s'
   449  00FEA1  65                 	db	101	;'e'
   450  00FEA2  00                 	db	0
   451  00FEA3                     STR_49:
   452  00FEA3  25                 	db	37
   453  00FEA4  30                 	db	48	;'0'
   454  00FEA5  32                 	db	50	;'2'
   455  00FEA6  78                 	db	120	;'x'
   456  00FEA7  2F                 	db	47
   457  00FEA8  25                 	db	37
   458  00FEA9  30                 	db	48	;'0'
   459  00FEAA  32                 	db	50	;'2'
   460  00FEAB  78                 	db	120	;'x'
   461  00FEAC  2F                 	db	47
   462  00FEAD  25                 	db	37
   463  00FEAE  30                 	db	48	;'0'
   464  00FEAF  32                 	db	50	;'2'
   465  00FEB0  78                 	db	120	;'x'
   466  00FEB1  00                 	db	0
   467  00FEB2                     STR_50:
   468  00FEB2  25                 	db	37
   469  00FEB3  30                 	db	48	;'0'
   470  00FEB4  32                 	db	50	;'2'
   471  00FEB5  78                 	db	120	;'x'
   472  00FEB6  3A                 	db	58	;':'
   473  00FEB7  25                 	db	37
   474  00FEB8  30                 	db	48	;'0'
   475  00FEB9  32                 	db	50	;'2'
   476  00FEBA  78                 	db	120	;'x'
   477  00FEBB  3A                 	db	58	;':'
   478  00FEBC  25                 	db	37
   479  00FEBD  30                 	db	48	;'0'
   480  00FEBE  32                 	db	50	;'2'
   481  00FEBF  78                 	db	120	;'x'
   482  00FEC0  00                 	db	0
   483  00FEC1                     STR_38:
   484  00FEC1  4E                 	db	78	;'N'
   485  00FEC2  6F                 	db	111	;'o'
   486  00FEC3  2E                 	db	46
   487  00FEC4  20                 	db	32
   488  00FEC5  50                 	db	80	;'P'
   489  00FEC6  6F                 	db	111	;'o'
   490  00FEC7  6C                 	db	108	;'l'
   491  00FEC8  65                 	db	101	;'e'
   492  00FEC9  73                 	db	115	;'s'
   493  00FECA  3A                 	db	58	;':'
   494  00FECB  20                 	db	32
   495  00FECC  25                 	db	37
   496  00FECD  64                 	db	100	;'d'
   497  00FECE  00                 	db	0
   498  00FECF                     STR_37:
   499  00FECF  4E                 	db	78	;'N'
   500  00FED0  6F                 	db	111	;'o'
   501  00FED1  2E                 	db	46
   502  00FED2  20                 	db	32
   503  00FED3  54                 	db	84	;'T'
   504  00FED4  69                 	db	105	;'i'
   505  00FED5  72                 	db	114	;'r'
   506  00FED6  65                 	db	101	;'e'
   507  00FED7  73                 	db	115	;'s'
   508  00FED8  3A                 	db	58	;':'
   509  00FED9  20                 	db	32
   510  00FEDA  25                 	db	37
   511  00FEDB  64                 	db	100	;'d'
   512  00FEDC  00                 	db	0
   513  00FEDD                     STR_7:
   514  00FEDD  53                 	db	83	;'S'
   515  00FEDE  74                 	db	116	;'t'
   516  00FEDF  65                 	db	101	;'e'
   517  00FEE0  70                 	db	112	;'p'
   518  00FEE1  20                 	db	32
   519  00FEE2  73                 	db	115	;'s'
   520  00FEE3  70                 	db	112	;'p'
   521  00FEE4  65                 	db	101	;'e'
   522  00FEE5  65                 	db	101	;'e'
   523  00FEE6  64                 	db	100	;'d'
   524  00FEE7  20                 	db	32
   525  00FEE8  25                 	db	37
   526  00FEE9  64                 	db	100	;'d'
   527  00FEEA  00                 	db	0
   528  00FEEB                     STR_19:
   529  00FEEB  62                 	db	98	;'b'
   530  00FEEC  72                 	db	114	;'r'
   531  00FEED  65                 	db	101	;'e'
   532  00FEEE  61                 	db	97	;'a'
   533  00FEEF  6B                 	db	107	;'k'
   534  00FEF0  20                 	db	32
   535  00FEF1  68                 	db	104	;'h'
   536  00FEF2  65                 	db	101	;'e'
   537  00FEF3  72                 	db	114	;'r'
   538  00FEF4  65                 	db	101	;'e'
   539  00FEF5  65                 	db	101	;'e'
   540  00FEF6  3F                 	db	63	;'?'
   541  00FEF7  00                 	db	0
   542  00FEF8                     STR_55:
   543  00FEF8  6D                 	db	109	;'m'
   544  00FEF9  6F                 	db	111	;'o'
   545  00FEFA  72                 	db	114	;'r'
   546  00FEFB  65                 	db	101	;'e'
   547  00FEFC  20                 	db	32
   548  00FEFD  77                 	db	119	;'w'
   549  00FEFE  61                 	db	97	;'a'
   550  00FEFF  69                 	db	105	;'i'
   551  00FF00  74                 	db	116	;'t'
   552  00FF01  69                 	db	105	;'i'
   553  00FF02  6E                 	db	110	;'n'
   554  00FF03  67                 	db	103	;'g'
   555  00FF04  00                 	db	0
   556  00FF05                     STR_2:
   557  00FF05  53                 	db	83	;'S'
   558  00FF06  74                 	db	116	;'t'
   559  00FF07  65                 	db	101	;'e'
   560  00FF08  70                 	db	112	;'p'
   561  00FF09  70                 	db	112	;'p'
   562  00FF0A  65                 	db	101	;'e'
   563  00FF0B  72                 	db	114	;'r'
   564  00FF0C  20                 	db	32
   565  00FF0D  64                 	db	100	;'d'
   566  00FF0E  6F                 	db	111	;'o'
   567  00FF0F  6E                 	db	110	;'n'
   568  00FF10  65                 	db	101	;'e'
   569  00FF11  00                 	db	0
   570  00FF12                     STR_48:
   571  00FF12  44                 	db	68	;'D'
   572  00FF13  41                 	db	65	;'A'
   573  00FF14  54                 	db	84	;'T'
   574  00FF15  45                 	db	69	;'E'
   575  00FF16  20                 	db	32
   576  00FF17  26                 	db	38
   577  00FF18  20                 	db	32
   578  00FF19  54                 	db	84	;'T'
   579  00FF1A  49                 	db	73	;'I'
   580  00FF1B  4D                 	db	77	;'M'
   581  00FF1C  45                 	db	69	;'E'
   582  00FF1D  00                 	db	0
   583  00FF1E                     STR_21:
   584  00FF1E  73                 	db	115	;'s'
   585  00FF1F  74                 	db	116	;'t'
   586  00FF20  65                 	db	101	;'e'
   587  00FF21  70                 	db	112	;'p'
   588  00FF22  73                 	db	115	;'s'
   589  00FF23  61                 	db	97	;'a'
   590  00FF24  64                 	db	100	;'d'
   591  00FF25  6A                 	db	106	;'j'
   592  00FF26  20                 	db	32
   593  00FF27  25                 	db	37
   594  00FF28  64                 	db	100	;'d'
   595  00FF29  00                 	db	0
   596  00FF2A                     STR_59:
   597  00FF2A  61                 	db	97	;'a'
   598  00FF2B  76                 	db	118	;'v'
   599  00FF2C  67                 	db	103	;'g'
   600  00FF2D  20                 	db	32
   601  00FF2E  64                 	db	100	;'d'
   602  00FF2F  69                 	db	105	;'i'
   603  00FF30  73                 	db	115	;'s'
   604  00FF31  74                 	db	116	;'t'
   605  00FF32  20                 	db	32
   606  00FF33  25                 	db	37
   607  00FF34  64                 	db	100	;'d'
   608  00FF35  00                 	db	0
   609  00FF36                     STR_42:
   610  00FF36  44                 	db	68	;'D'
   611  00FF37  69                 	db	105	;'i'
   612  00FF38  73                 	db	115	;'s'
   613  00FF39  74                 	db	116	;'t'
   614  00FF3A  54                 	db	84	;'T'
   615  00FF3B  6F                 	db	111	;'o'
   616  00FF3C  43                 	db	67	;'C'
   617  00FF3D  4C                 	db	76	;'L'
   618  00FF3E  3A                 	db	58	;':'
   619  00FF3F  25                 	db	37
   620  00FF40  64                 	db	100	;'d'
   621  00FF41  00                 	db	0
   622  00FF42                     STR_24:
   623  00FF42  32                 	db	50	;'2'
   624  00FF43  20                 	db	32
   625  00FF44  2D                 	db	45
   626  00FF45  20                 	db	32
   627  00FF46  53                 	db	83	;'S'
   628  00FF47  75                 	db	117	;'u'
   629  00FF48  6D                 	db	109	;'m'
   630  00FF49  6D                 	db	109	;'m'
   631  00FF4A  61                 	db	97	;'a'
   632  00FF4B  72                 	db	114	;'r'
   633  00FF4C  79                 	db	121	;'y'
   634  00FF4D  00                 	db	0
   635  00FF4E                     STR_60:
   636  00FF4E  70                 	db	112	;'p'
   637  00FF4F  6F                 	db	111	;'o'
   638  00FF50  6C                 	db	108	;'l'
   639  00FF51  65                 	db	101	;'e'
   640  00FF52  73                 	db	115	;'s'
   641  00FF53  20                 	db	32
   642  00FF54  64                 	db	100	;'d'
   643  00FF55  20                 	db	32
   644  00FF56  25                 	db	37
   645  00FF57  64                 	db	100	;'d'
   646  00FF58  00                 	db	0
   647  00FF59                     STR_20:
   648  00FF59  6D                 	db	109	;'m'
   649  00FF5A  69                 	db	105	;'i'
   650  00FF5B  6E                 	db	110	;'n'
   651  00FF5C  69                 	db	105	;'i'
   652  00FF5D  6D                 	db	109	;'m'
   653  00FF5E  75                 	db	117	;'u'
   654  00FF5F  6D                 	db	109	;'m'
   655  00FF60  20                 	db	32
   656  00FF61  25                 	db	37
   657  00FF62  64                 	db	100	;'d'
   658  00FF63  00                 	db	0
   659  00FF64                     STR_61:
   660  00FF64  70                 	db	112	;'p'
   661  00FF65  6F                 	db	111	;'o'
   662  00FF66  6C                 	db	108	;'l'
   663  00FF67  65                 	db	101	;'e'
   664  00FF68  73                 	db	115	;'s'
   665  00FF69  20                 	db	32
   666  00FF6A  64                 	db	100	;'d'
   667  00FF6B  6F                 	db	111	;'o'
   668  00FF6C  6E                 	db	110	;'n'
   669  00FF6D  65                 	db	101	;'e'
   670  00FF6E  00                 	db	0
   671  00FF6F                     STR_3:
   672  00FF6F  53                 	db	83	;'S'
   673  00FF70  65                 	db	101	;'e'
   674  00FF71  72                 	db	114	;'r'
   675  00FF72  76                 	db	118	;'v'
   676  00FF73  6F                 	db	111	;'o'
   677  00FF74  20                 	db	32
   678  00FF75  64                 	db	100	;'d'
   679  00FF76  6F                 	db	111	;'o'
   680  00FF77  6E                 	db	110	;'n'
   681  00FF78  65                 	db	101	;'e'
   682  00FF79  00                 	db	0
   683  00FF7A                     STR_11:
   684  00FF7A  44                 	db	68	;'D'
   685  00FF7B  69                 	db	105	;'i'
   686  00FF7C  73                 	db	115	;'s'
   687  00FF7D  74                 	db	116	;'t'
   688  00FF7E  31                 	db	49	;'1'
   689  00FF7F  20                 	db	32
   690  00FF80  3D                 	db	61	;'='
   691  00FF81  20                 	db	32
   692  00FF82  58                 	db	88	;'X'
   693  00FF83  00                 	db	0
   694  00FF84                     STR_13:
   695  00FF84  44                 	db	68	;'D'
   696  00FF85  69                 	db	105	;'i'
   697  00FF86  73                 	db	115	;'s'
   698  00FF87  74                 	db	116	;'t'
   699  00FF88  32                 	db	50	;'2'
   700  00FF89  20                 	db	32
   701  00FF8A  3D                 	db	61	;'='
   702  00FF8B  20                 	db	32
   703  00FF8C  58                 	db	88	;'X'
   704  00FF8D  00                 	db	0
   705  00FF8E                     STR_15:
   706  00FF8E  44                 	db	68	;'D'
   707  00FF8F  69                 	db	105	;'i'
   708  00FF90  73                 	db	115	;'s'
   709  00FF91  74                 	db	116	;'t'
   710  00FF92  33                 	db	51	;'3'
   711  00FF93  20                 	db	32
   712  00FF94  3D                 	db	61	;'='
   713  00FF95  20                 	db	32
   714  00FF96  58                 	db	88	;'X'
   715  00FF97  00                 	db	0
   716  00FF98                     STR_17:
   717  00FF98  44                 	db	68	;'D'
   718  00FF99  69                 	db	105	;'i'
   719  00FF9A  73                 	db	115	;'s'
   720  00FF9B  74                 	db	116	;'t'
   721  00FF9C  34                 	db	52	;'4'
   722  00FF9D  20                 	db	32
   723  00FF9E  3D                 	db	61	;'='
   724  00FF9F  20                 	db	32
   725  00FFA0  58                 	db	88	;'X'
   726  00FFA1  00                 	db	0
   727  00FFA2                     STR_57:
   728  00FFA2  64                 	db	100	;'d'
   729  00FFA3  75                 	db	117	;'u'
   730  00FFA4  6E                 	db	110	;'n'
   731  00FFA5  20                 	db	32
   732  00FFA6  62                 	db	98	;'b'
   733  00FFA7  72                 	db	114	;'r'
   734  00FFA8  65                 	db	101	;'e'
   735  00FFA9  61                 	db	97	;'a'
   736  00FFAA  6B                 	db	107	;'k'
   737  00FFAB  00                 	db	0
   738  00FFAC                     STR_62:
   739  00FFAC  62                 	db	98	;'b'
   740  00FFAD  61                 	db	97	;'a'
   741  00FFAE  63                 	db	99	;'c'
   742  00FFAF  6B                 	db	107	;'k'
   743  00FFB0  77                 	db	119	;'w'
   744  00FFB1  61                 	db	97	;'a'
   745  00FFB2  72                 	db	114	;'r'
   746  00FFB3  64                 	db	100	;'d'
   747  00FFB4  73                 	db	115	;'s'
   748  00FFB5  00                 	db	0
   749  00FFB6                     STR_56:
   750  00FFB6  64                 	db	100	;'d'
   751  00FFB7  6F                 	db	111	;'o'
   752  00FFB8  6E                 	db	110	;'n'
   753  00FFB9  65                 	db	101	;'e'
   754  00FFBA  20                 	db	32
   755  00FFBB  77                 	db	119	;'w'
   756  00FFBC  61                 	db	97	;'a'
   757  00FFBD  69                 	db	105	;'i'
   758  00FFBE  74                 	db	116	;'t'
   759  00FFBF  00                 	db	0
   760  00FFC0                     STR_23:
   761  00FFC0  31                 	db	49	;'1'
   762  00FFC1  20                 	db	32
   763  00FFC2  2D                 	db	45
   764  00FFC3  20                 	db	32
   765  00FFC4  53                 	db	83	;'S'
   766  00FFC5  74                 	db	116	;'t'
   767  00FFC6  61                 	db	97	;'a'
   768  00FFC7  72                 	db	114	;'r'
   769  00FFC8  74                 	db	116	;'t'
   770  00FFC9  00                 	db	0
   771  00FFCA                     STR_5:
   772  00FFCA  73                 	db	115	;'s'
   773  00FFCB  74                 	db	116	;'t'
   774  00FFCC  65                 	db	101	;'e'
   775  00FFCD  70                 	db	112	;'p'
   776  00FFCE  70                 	db	112	;'p'
   777  00FFCF  70                 	db	112	;'p'
   778  00FFD0  20                 	db	32
   779  00FFD1  25                 	db	37
   780  00FFD2  64                 	db	100	;'d'
   781  00FFD3  00                 	db	0
   782  00FFD4                     STR_1:
   783  00FFD4  63                 	db	99	;'c'
   784  00FFD5  6E                 	db	110	;'n'
   785  00FFD6  74                 	db	116	;'t'
   786  00FFD7  20                 	db	32
   787  00FFD8  69                 	db	105	;'i'
   788  00FFD9  73                 	db	115	;'s'
   789  00FFDA  20                 	db	32
   790  00FFDB  25                 	db	37
   791  00FFDC  64                 	db	100	;'d'
   792  00FFDD  00                 	db	0
   793  00FFDE                     STR_31:
   794  00FFDE  4F                 	db	79	;'O'
   795  00FFDF  70                 	db	112	;'p'
   796  00FFE0  20                 	db	32
   797  00FFE1  54                 	db	84	;'T'
   798  00FFE2  69                 	db	105	;'i'
   799  00FFE3  6D                 	db	109	;'m'
   800  00FFE4  65                 	db	101	;'e'
   801  00FFE5  3A                 	db	58	;':'
   802  00FFE6  00                 	db	0
   803  00FFE7                     STR_18:
   804  00FFE7  6F                 	db	111	;'o'
   805  00FFE8  72                 	db	114	;'r'
   806  00FFE9  20                 	db	32
   807  00FFEA  68                 	db	104	;'h'
   808  00FFEB  65                 	db	101	;'e'
   809  00FFEC  72                 	db	114	;'r'
   810  00FFED  65                 	db	101	;'e'
   811  00FFEE  00                 	db	0
   812  00FFEF                     STR_6:
   813  00FFEF  73                 	db	115	;'s'
   814  00FFF0  74                 	db	116	;'t'
   815  00FFF1  65                 	db	101	;'e'
   816  00FFF2  70                 	db	112	;'p'
   817  00FFF3  31                 	db	49	;'1'
   818  00FFF4  00                 	db	0
   819  00FFF5                     STR_9:
   820  00FFF5  77                 	db	119	;'w'
   821  00FFF6  68                 	db	104	;'h'
   822  00FFF7  61                 	db	97	;'a'
   823  00FFF8  74                 	db	116	;'t'
   824  00FFF9  00                 	db	0
   825  00FFFA                     STR_52:
   826  00FFFA  77                 	db	119	;'w'
   827  00FFFB  74                 	db	116	;'t'
   828  00FFFC  66                 	db	102	;'f'
   829  00FFFD  00                 	db	0
   830  0000                     
   831                           ; #config settings
   832  00FFFE  00                 	db	0	; dummy byte at the end
   833  0000                     
   834                           	psect	cinit
   835  0035E2                     __pcinit:
   836                           	opt callstack 0
   837  0035E2                     start_initialization:
   838                           	opt callstack 0
   839  0035E2                     __initialization:
   840                           	opt callstack 0
   841                           
   842                           ; Initialize objects allocated to COMRAM (5 bytes)
   843                           ; load TBLPTR registers with __pidataCOMRAM
   844  0035E2  0E66               	movlw	low __pidataCOMRAM
   845  0035E4  6EF6               	movwf	tblptrl,c
   846  0035E6  0E3B               	movlw	high __pidataCOMRAM
   847  0035E8  6EF7               	movwf	tblptrh,c
   848  0035EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   849  0035EC  6EF8               	movwf	tblptru,c
   850  0035EE  EE00  F069         	lfsr	0,__pdataCOMRAM
   851  0035F2  EE10 F005          	lfsr	1,5
   852  0035F6                     copy_data0:
   853  0035F6  0009               	tblrd		*+
   854  0035F8  CFF5 FFEE          	movff	tablat,postinc0
   855  0035FC  50E5               	movf	postdec1,w,c
   856  0035FE  50E1               	movf	fsr1l,w,c
   857  003600  E1FA               	bnz	copy_data0
   858                           
   859                           ; Clear objects allocated to BANK2 (128 bytes)
   860  003602  EE02  F000         	lfsr	0,__pbssBANK2
   861  003606  0E80               	movlw	128
   862  003608                     clear_0:
   863  003608  6AEE               	clrf	postinc0,c
   864  00360A  06E8               	decf	wreg,f,c
   865  00360C  E1FD               	bnz	clear_0
   866                           
   867                           ; Clear objects allocated to BANK1 (60 bytes)
   868  00360E  EE01  F05C         	lfsr	0,__pbssBANK1
   869  003612  0E3C               	movlw	60
   870  003614                     clear_1:
   871  003614  6AEE               	clrf	postinc0,c
   872  003616  06E8               	decf	wreg,f,c
   873  003618  E1FD               	bnz	clear_1
   874                           
   875                           ; Clear objects allocated to BANK0 (1 bytes)
   876  00361A  0100               	movlb	0
   877  00361C  6BFF               	clrf	__pbssBANK0& (0+255),b
   878                           
   879                           ; Clear objects allocated to COMRAM (49 bytes)
   880  00361E  EE00  F038         	lfsr	0,__pbssCOMRAM
   881  003622  0E31               	movlw	49
   882  003624                     clear_2:
   883  003624  6AEE               	clrf	postinc0,c
   884  003626  06E8               	decf	wreg,f,c
   885  003628  E1FD               	bnz	clear_2
   886  00362A                     end_of_initialization:
   887                           	opt callstack 0
   888  00362A                     __end_of__initialization:
   889                           	opt callstack 0
   890  00362A  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   891  00362C  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   892  00362E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   893  003630  6EF8               	movwf	tblptru,c
   894  003632  0100               	movlb	0
   895  003634  EFB5  F006         	goto	_main	;jump to C main() function
   896                           
   897                           	psect	bssCOMRAM
   898  000038                     __pbssCOMRAM:
   899                           	opt callstack 0
   900  000038                     _sum:
   901                           	opt callstack 0
   902  000038                     	ds	8
   903  000040                     _sumf:
   904                           	opt callstack 0
   905  000040                     	ds	4
   906  000044                     _avg_dist:
   907                           	opt callstack 0
   908  000044                     	ds	4
   909  000048                     _nout:
   910                           	opt callstack 0
   911  000048                     	ds	2
   912  00004A                     _width:
   913                           	opt callstack 0
   914  00004A                     	ds	2
   915  00004C                     _prec:
   916                           	opt callstack 0
   917  00004C                     	ds	2
   918  00004E                     _flags:
   919                           	opt callstack 0
   920  00004E                     	ds	2
   921  000050                     _meas:
   922                           	opt callstack 0
   923  000050                     	ds	2
   924  000052                     _poles_detected:
   925                           	opt callstack 0
   926  000052                     	ds	2
   927  000054                     _tires_deployed:
   928                           	opt callstack 0
   929  000054                     	ds	2
   930  000056                     _tick:
   931                           	opt callstack 0
   932  000056                     	ds	2
   933  000058                     _sens:
   934                           	opt callstack 0
   935  000058                     	ds	2
   936  00005A                     _b:
   937                           	opt callstack 0
   938  00005A                     	ds	2
   939  00005C                     _timer_count:
   940                           	opt callstack 0
   941  00005C                     	ds	2
   942  00005E                     _data:
   943                           	opt callstack 0
   944  00005E                     	ds	1
   945  00005F                     _keypress:
   946                           	opt callstack 0
   947  00005F                     	ds	1
   948  000060                     _counter:
   949                           	opt callstack 0
   950  000060                     	ds	1
   951  000061                     _a:
   952                           	opt callstack 0
   953  000061                     	ds	8
   954                           
   955                           	psect	dataCOMRAM
   956  000069                     __pdataCOMRAM:
   957                           	opt callstack 0
   958  000069                     _dists:
   959                           	opt callstack 0
   960  000069                     	ds	4
   961  00006D                     _send:
   962                           	opt callstack 0
   963  00006D                     	ds	1
   964                           
   965                           	psect	bssBANK0
   966  0000FF                     __pbssBANK0:
   967                           	opt callstack 0
   968  0000FF                     _temp:
   969                           	opt callstack 0
   970  0000FF                     	ds	1
   971                           
   972                           	psect	bssBANK1
   973  00015C                     __pbssBANK1:
   974                           	opt callstack 0
   975  00015C                     _prev_dist_final:
   976                           	opt callstack 0
   977  00015C                     	ds	8
   978  000164                     _time:
   979                           	opt callstack 0
   980  000164                     	ds	7
   981  00016B                     _pressed:
   982                           	opt callstack 0
   983  00016B                     	ds	2
   984  00016D                     _i:
   985                           	opt callstack 0
   986  00016D                     	ds	2
   987  00016F                     _disp:
   988                           	opt callstack 0
   989  00016F                     	ds	2
   990  000171                     _state:
   991                           	opt callstack 0
   992  000171                     	ds	2
   993  000173                     _temp_int:
   994                           	opt callstack 0
   995  000173                     	ds	2
   996  000175                     _cnt:
   997                           	opt callstack 0
   998  000175                     	ds	2
   999  000177                     _key_was_pressed:
  1000                           	opt callstack 0
  1001  000177                     	ds	1
  1002  000178                     _dbuf:
  1003                           	opt callstack 0
  1004  000178                     	ds	32
  1005                           
  1006                           	psect	bssBANK2
  1007  000200                     __pbssBANK2:
  1008                           	opt callstack 0
  1009  000200                     _Pole:
  1010                           	opt callstack 0
  1011  000200                     	ds	80
  1012  000250                     _dist_final:
  1013                           	opt callstack 0
  1014  000250                     	ds	48
  1015                           
  1016                           	psect	cstackBANK2
  1017  000280                     __pcstackBANK2:
  1018                           	opt callstack 0
  1019  000280                     main@Pole:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 80 bytes @ 0x0
  1023  000280                     	ds	82
  1024  0002D2                     main@pole_cl_dist:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x52
  1028  0002D2                     	ds	2
  1029  0002D4                     main@steps2_adj:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x54
  1033  0002D4                     	ds	2
  1034  0002D6                     main@i:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x56
  1038  0002D6                     	ds	2
  1039  0002D8                     main@i_1019:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x58
  1043  0002D8                     	ds	2
  1044  0002DA                     main@act_done:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x5A
  1048  0002DA                     	ds	1
  1049  0002DB                     main@arduino_stopped:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x5B
  1053  0002DB                     	ds	1
  1054  0002DC                     main@stack:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x5C
  1058  0002DC                     	ds	2
  1059  0002DE                     main@k:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x5E
  1063  0002DE                     	ds	2
  1064  0002E0                     main@t_count:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x60
  1068  0002E0                     	ds	2
  1069  0002E2                     main@t_dep:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x62
  1073  0002E2                     	ds	2
  1074  0002E4                     main@i_1027:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x64
  1078  0002E4                     	ds	2
  1079  0002E6                     main@poles_detected:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x66
  1083  0002E6                     	ds	2
  1084  0002E8                     main@prev_avg_dist:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x68
  1088  0002E8                     	ds	4
  1089                           
  1090                           	psect	cstackBANK1
  1091  000100                     __pcstackBANK1:
  1092                           	opt callstack 0
  1093  000100                     ??_stepper2:
  1094  000100                     ??_stepper2_back:
  1095  000100                     ??_UI_main:
  1096  000100                     stepper@count_stepper:
  1097                           	opt callstack 0
  1098  000100                     number_deploy@tires_t:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x0
  1102  000100                     	ds	1
  1103  000101                     stepper2_back@direction:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x1
  1107  000101                     	ds	1
  1108  000102                     stepper@i:
  1109                           	opt callstack 0
  1110  000102                     stepper2_back@count_stepper:
  1111                           	opt callstack 0
  1112  000102                     ultrasonic_main@sensed:
  1113                           	opt callstack 0
  1114  000102                     number_deploy@tires_detected:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x2
  1118  000102                     	ds	2
  1119  000104                     stepper@i_376:
  1120                           	opt callstack 0
  1121  000104                     stepper2_back@i:
  1122                           	opt callstack 0
  1123  000104                     ultrasonic_main@step2_offset:
  1124                           	opt callstack 0
  1125  000104                     number_deploy@t_count:
  1126                           	opt callstack 0
  1127  000104                     UI_main@Pole:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 80 bytes @ 0x4
  1131  000104                     	ds	1
  1132  000105                     stepper2@i:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x5
  1136  000105                     	ds	1
  1137  000106                     ultrasonic_main@steps2_adj:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x6
  1141  000106                     	ds	1
  1142  000107                     stepper2@i_384:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x7
  1146  000107                     	ds	1
  1147  000108                     ultrasonic_main@min_us_dist_914:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x8
  1151  000108                     	ds	1
  1152  000109                     stepper2@count_stepper:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x9
  1156  000109                     	ds	2
  1157  00010B                     stepper2@direction:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 1 bytes @ 0xB
  1161  00010B                     	ds	1
  1162  00010C                     actuators_main@stack:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0xC
  1166  00010C                     	ds	2
  1167  00010E                     actuators_main@steps2_adj:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0xE
  1171  00010E                     	ds	2
  1172  000110                     ??_actuators_main:
  1173                           
  1174                           ; 1 bytes @ 0x10
  1175  000110                     	ds	2
  1176  000112                     actuators_main@act_cnt:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x12
  1180  000112                     	ds	66
  1181  000154                     UI_main@keypress:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x54
  1185  000154                     	ds	1
  1186  000155                     UI_main@tick:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x55
  1190  000155                     	ds	4
  1191  000159                     UI_main@i:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x59
  1195  000159                     	ds	1
  1196  00015A                     ??_main:
  1197                           
  1198                           ; 1 bytes @ 0x5A
  1199  00015A                     	ds	2
  1200                           
  1201                           	psect	cstackBANK0
  1202  000080                     __pcstackBANK0:
  1203                           	opt callstack 0
  1204  000080                     ??_I2C_Master_Wait:
  1205  000080                     ??_servoRotate0:
  1206  000080                     ??_servoRotate180:
  1207  000080                     ??_trig:
  1208  000080                     ?_strlen:
  1209                           	opt callstack 0
  1210  000080                     ?_isupper:
  1211                           	opt callstack 0
  1212  000080                     ?_isalpha:
  1213                           	opt callstack 0
  1214  000080                     ?_isdigit:
  1215                           	opt callstack 0
  1216  000080                     ?_isspace:
  1217                           	opt callstack 0
  1218  000080                     ?_islower:
  1219                           	opt callstack 0
  1220  000080                     ?_min:
  1221                           	opt callstack 0
  1222  000080                     ?___wmul:
  1223                           	opt callstack 0
  1224  000080                     ?___awdiv:
  1225                           	opt callstack 0
  1226  000080                     ?___lldiv:
  1227                           	opt callstack 0
  1228  000080                     ?___llmod:
  1229                           	opt callstack 0
  1230  000080                     ?___aodiv:
  1231                           	opt callstack 0
  1232  000080                     ?___aomod:
  1233                           	opt callstack 0
  1234  000080                     pulse_e@interruptState:
  1235                           	opt callstack 0
  1236  000080                     min@array:
  1237                           	opt callstack 0
  1238  000080                     ___wmul@multiplier:
  1239                           	opt callstack 0
  1240  000080                     ___awdiv@dividend:
  1241                           	opt callstack 0
  1242  000080                     isalpha@c:
  1243                           	opt callstack 0
  1244  000080                     isdigit@c:
  1245                           	opt callstack 0
  1246  000080                     isspace@c:
  1247                           	opt callstack 0
  1248  000080                     isupper@c:
  1249                           	opt callstack 0
  1250  000080                     strlen@s:
  1251                           	opt callstack 0
  1252  000080                     islower@c:
  1253                           	opt callstack 0
  1254  000080                     ___lldiv@dividend:
  1255                           	opt callstack 0
  1256  000080                     ___llmod@dividend:
  1257                           	opt callstack 0
  1258  000080                     ___aodiv@dividend:
  1259                           	opt callstack 0
  1260  000080                     ___aomod@dividend:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 8 bytes @ 0x0
  1264  000080                     	ds	1
  1265  000081                     I2C_Master_Read@ackBit:
  1266                           	opt callstack 0
  1267  000081                     send_nibble@data:
  1268                           	opt callstack 0
  1269  000081                     I2C_Master_Write@byteToWrite:
  1270                           	opt callstack 0
  1271  000081                     servoRotate0@i:
  1272                           	opt callstack 0
  1273  000081                     servoRotate180@i:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x1
  1277  000081                     	ds	1
  1278  000082                     ??_isupper:
  1279  000082                     ??_isalpha:
  1280  000082                     ??_isdigit:
  1281  000082                     ??_isspace:
  1282  000082                     ??_islower:
  1283  000082                     I2C_Master_Read@receivedByte:
  1284                           	opt callstack 0
  1285  000082                     send_byte@data:
  1286                           	opt callstack 0
  1287  000082                     min@size:
  1288                           	opt callstack 0
  1289  000082                     ___wmul@multiplicand:
  1290                           	opt callstack 0
  1291  000082                     ___awdiv@divisor:
  1292                           	opt callstack 0
  1293  000082                     strlen@a:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x2
  1297  000082                     	ds	1
  1298  000083                     ??_servo:
  1299  000083                     lcdInst@data:
  1300                           	opt callstack 0
  1301  000083                     putch@data:
  1302                           	opt callstack 0
  1303                           
  1304                           ; 1 bytes @ 0x3
  1305  000083                     	ds	1
  1306  000084                     ??_initLCD:
  1307  000084                     ??_min:
  1308  000084                     ___awdiv@counter:
  1309                           	opt callstack 0
  1310  000084                     ___wmul@product:
  1311                           	opt callstack 0
  1312  000084                     fputc@c:
  1313                           	opt callstack 0
  1314  000084                     ___lldiv@divisor:
  1315                           	opt callstack 0
  1316  000084                     ___llmod@divisor:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 4 bytes @ 0x4
  1320  000084                     	ds	1
  1321  000085                     ___awdiv@sign:
  1322                           	opt callstack 0
  1323                           
  1324                           ; 1 bytes @ 0x5
  1325  000085                     	ds	1
  1326  000086                     ?_toupper:
  1327                           	opt callstack 0
  1328  000086                     _isspace$1611:
  1329                           	opt callstack 0
  1330  000086                     ___awdiv@quotient:
  1331                           	opt callstack 0
  1332  000086                     fputc@fp:
  1333                           	opt callstack 0
  1334  000086                     toupper@c:
  1335                           	opt callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x6
  1338  000086                     	ds	1
  1339  000087                     ?_atoi:
  1340                           	opt callstack 0
  1341  000087                     min@minimum:
  1342                           	opt callstack 0
  1343  000087                     atoi@s:
  1344                           	opt callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x7
  1347  000087                     	ds	1
  1348  000088                     ??_fputc:
  1349  000088                     ??_toupper:
  1350  000088                     ___llmod@counter:
  1351                           	opt callstack 0
  1352  000088                     ___lldiv@quotient:
  1353                           	opt callstack 0
  1354  000088                     ___aodiv@divisor:
  1355                           	opt callstack 0
  1356  000088                     ___aomod@divisor:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 8 bytes @ 0x8
  1360  000088                     	ds	1
  1361  000089                     ??_atoi:
  1362  000089                     min@i:
  1363                           	opt callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x9
  1366  000089                     	ds	3
  1367  00008C                     ___lldiv@counter:
  1368                           	opt callstack 0
  1369  00008C                     _toupper$1676:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 2 bytes @ 0xC
  1373  00008C                     	ds	1
  1374  00008D                     atoi@neg:
  1375                           	opt callstack 0
  1376  00008D                     fputs@s:
  1377                           	opt callstack 0
  1378  00008D                     I2C_Master_Init@clockFreq:
  1379                           	opt callstack 0
  1380                           
  1381                           ; 4 bytes @ 0xD
  1382  00008D                     	ds	2
  1383  00008F                     _atoi$1584:
  1384                           	opt callstack 0
  1385  00008F                     fputs@fp:
  1386                           	opt callstack 0
  1387                           
  1388                           ; 2 bytes @ 0xF
  1389  00008F                     	ds	1
  1390  000090                     ___aodiv@counter:
  1391                           	opt callstack 0
  1392  000090                     ___aomod@counter:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 1 bytes @ 0x10
  1396  000090                     	ds	1
  1397  000091                     ??_I2C_Master_Init:
  1398  000091                     ___aodiv@sign:
  1399                           	opt callstack 0
  1400  000091                     ___aomod@sign:
  1401                           	opt callstack 0
  1402  000091                     fputs@c:
  1403                           	opt callstack 0
  1404  000091                     _atoi$1586:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x11
  1408  000091                     	ds	1
  1409  000092                     ?_abs:
  1410                           	opt callstack 0
  1411  000092                     abs@a:
  1412                           	opt callstack 0
  1413  000092                     fputs@i:
  1414                           	opt callstack 0
  1415  000092                     ___aodiv@quotient:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 8 bytes @ 0x12
  1419  000092                     	ds	1
  1420  000093                     _atoi$1585:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 1 bytes @ 0x13
  1424  000093                     	ds	1
  1425  000094                     ??_abs:
  1426  000094                     ?_pad:
  1427                           	opt callstack 0
  1428  000094                     pad@fp:
  1429                           	opt callstack 0
  1430  000094                     atoi@n:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x14
  1434  000094                     	ds	1
  1435  000095                     
  1436                           ; 1 bytes @ 0x15
  1437  000095                     	ds	1
  1438  000096                     pad@buf:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x16
  1442  000096                     	ds	2
  1443  000098                     pad@p:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x18
  1447  000098                     	ds	2
  1448  00009A                     ??_pad:
  1449                           
  1450                           ; 1 bytes @ 0x1A
  1451  00009A                     	ds	1
  1452  00009B                     pad@i:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x1B
  1456  00009B                     	ds	2
  1457  00009D                     pad@w:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x1D
  1461  00009D                     	ds	2
  1462  00009F                     ?_dtoa:
  1463                           	opt callstack 0
  1464  00009F                     ?_xtoa:
  1465                           	opt callstack 0
  1466  00009F                     dtoa@fp:
  1467                           	opt callstack 0
  1468  00009F                     xtoa@fp:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x1F
  1472  00009F                     	ds	2
  1473  0000A1                     dtoa@d:
  1474                           	opt callstack 0
  1475  0000A1                     xtoa@d:
  1476                           	opt callstack 0
  1477                           
  1478                           ; 8 bytes @ 0x21
  1479  0000A1                     	ds	8
  1480  0000A9                     ??_dtoa:
  1481  0000A9                     xtoa@x:
  1482                           	opt callstack 0
  1483                           
  1484                           ; 1 bytes @ 0x29
  1485  0000A9                     	ds	1
  1486  0000AA                     ??_xtoa:
  1487                           
  1488                           ; 1 bytes @ 0x2A
  1489  0000AA                     	ds	7
  1490  0000B1                     _dtoa$1100:
  1491                           	opt callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x31
  1494  0000B1                     	ds	1
  1495  0000B2                     _xtoa$1111:
  1496                           	opt callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x32
  1499  0000B2                     	ds	1
  1500  0000B3                     dtoa@p:
  1501                           	opt callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x33
  1504  0000B3                     	ds	1
  1505  0000B4                     _xtoa$1112:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x34
  1509  0000B4                     	ds	1
  1510  0000B5                     dtoa@w:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x35
  1514  0000B5                     	ds	1
  1515  0000B6                     xtoa@p:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x36
  1519  0000B6                     	ds	1
  1520  0000B7                     dtoa@s:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x37
  1524  0000B7                     	ds	1
  1525  0000B8                     xtoa@w:
  1526                           	opt callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x38
  1529  0000B8                     	ds	1
  1530  0000B9                     dtoa@n:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 8 bytes @ 0x39
  1534  0000B9                     	ds	1
  1535  0000BA                     xtoa@n:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 8 bytes @ 0x3A
  1539  0000BA                     	ds	7
  1540  0000C1                     dtoa@i:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x41
  1544  0000C1                     	ds	1
  1545  0000C2                     xtoa@i:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x42
  1549  0000C2                     	ds	2
  1550  0000C4                     xtoa@c:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 2 bytes @ 0x44
  1554  0000C4                     	ds	2
  1555  0000C6                     ?_vfpfcnvrt:
  1556                           	opt callstack 0
  1557  0000C6                     vfpfcnvrt@fp:
  1558                           	opt callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x46
  1561  0000C6                     	ds	2
  1562  0000C8                     vfpfcnvrt@fmt:
  1563                           	opt callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x48
  1566  0000C8                     	ds	2
  1567  0000CA                     vfpfcnvrt@ap:
  1568                           	opt callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x4A
  1571  0000CA                     	ds	2
  1572  0000CC                     ??_vfpfcnvrt:
  1573                           
  1574                           ; 1 bytes @ 0x4C
  1575  0000CC                     	ds	4
  1576  0000D0                     vfpfcnvrt@ll:
  1577                           	opt callstack 0
  1578                           
  1579                           ; 8 bytes @ 0x50
  1580  0000D0                     	ds	8
  1581  0000D8                     vfpfcnvrt@llu:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 8 bytes @ 0x58
  1585  0000D8                     	ds	8
  1586  0000E0                     vfpfcnvrt@c:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 1 bytes @ 0x60
  1590  0000E0                     	ds	1
  1591  0000E1                     vfpfcnvrt@done:
  1592                           	opt callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x61
  1595  0000E1                     	ds	2
  1596  0000E3                     _vfpfcnvrt$1126:
  1597                           	opt callstack 0
  1598                           
  1599                           ; 2 bytes @ 0x63
  1600  0000E3                     	ds	2
  1601  0000E5                     ?_vfprintf:
  1602                           	opt callstack 0
  1603  0000E5                     vfprintf@fp:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x65
  1607  0000E5                     	ds	2
  1608  0000E7                     vfprintf@fmt:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x67
  1612  0000E7                     	ds	2
  1613  0000E9                     vfprintf@ap:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 2 bytes @ 0x69
  1617  0000E9                     	ds	2
  1618  0000EB                     vfprintf@cfmt:
  1619                           	opt callstack 0
  1620                           
  1621                           ; 2 bytes @ 0x6B
  1622  0000EB                     	ds	2
  1623  0000ED                     ?_printf:
  1624                           	opt callstack 0
  1625  0000ED                     printf@fmt:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 2 bytes @ 0x6D
  1629  0000ED                     	ds	8
  1630  0000F5                     
  1631                           ; 1 bytes @ 0x75
  1632  0000F5                     	ds	2
  1633  0000F7                     printf@ap:
  1634                           	opt callstack 0
  1635                           
  1636                           ; 2 bytes @ 0x77
  1637  0000F7                     	ds	2
  1638  0000F9                     ??_brake:
  1639  0000F9                     ??_print_echo:
  1640  0000F9                     ?_number_deploy:
  1641                           	opt callstack 0
  1642  0000F9                     full_drive@stepper_no:
  1643                           	opt callstack 0
  1644  0000F9                     number_deploy@avg_dist:
  1645                           	opt callstack 0
  1646  0000F9                     UI_main@t_dep:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x79
  1650  0000F9                     	ds	1
  1651  0000FA                     ?_ultrasonic_main:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x7A
  1655  0000FA                     	ds	1
  1656  0000FB                     ??_full_drive:
  1657  0000FB                     number_deploy@poles_detected:
  1658                           	opt callstack 0
  1659  0000FB                     UI_main@poles_detected:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 2 bytes @ 0x7B
  1663  0000FB                     	ds	1
  1664  0000FC                     ??_ultrasonic_main:
  1665  0000FC                     full_drive@direction:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 1 bytes @ 0x7C
  1669  0000FC                     	ds	1
  1670  0000FD                     ??_number_deploy:
  1671  0000FD                     stepper@stack:
  1672                           	opt callstack 0
  1673  0000FD                     stepper2@steps2_adj:
  1674                           	opt callstack 0
  1675  0000FD                     stepper2_back@steps2_adj:
  1676                           	opt callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x7D
  1679  0000FD                     	ds	2
  1680  0000FF                     
  1681                           ; 1 bytes @ 0x7F
  1682                           
  1683                           	psect	cstackCOMRAM
  1684  000001                     __pcstackCOMRAM:
  1685                           	opt callstack 0
  1686  000001                     ?i2___awdiv:
  1687                           	opt callstack 0
  1688  000001                     ?___xxtofl:
  1689                           	opt callstack 0
  1690  000001                     i2___awdiv@dividend:
  1691                           	opt callstack 0
  1692  000001                     ___xxtofl@val:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 4 bytes @ 0x0
  1696  000001                     	ds	2
  1697  000003                     i2___awdiv@divisor:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 2 bytes @ 0x2
  1701  000003                     	ds	2
  1702  000005                     ??___xxtofl:
  1703  000005                     i2___awdiv@counter:
  1704                           	opt callstack 0
  1705                           
  1706                           ; 1 bytes @ 0x4
  1707  000005                     	ds	1
  1708  000006                     i2___awdiv@sign:
  1709                           	opt callstack 0
  1710                           
  1711                           ; 1 bytes @ 0x5
  1712  000006                     	ds	1
  1713  000007                     i2___awdiv@quotient:
  1714                           	opt callstack 0
  1715                           
  1716                           ; 2 bytes @ 0x6
  1717  000007                     	ds	2
  1718  000009                     ___xxtofl@sign:
  1719                           	opt callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x8
  1722  000009                     	ds	1
  1723  00000A                     ___xxtofl@exp:
  1724                           	opt callstack 0
  1725                           
  1726                           ; 1 bytes @ 0x9
  1727  00000A                     	ds	1
  1728  00000B                     ___xxtofl@arg:
  1729                           	opt callstack 0
  1730                           
  1731                           ; 4 bytes @ 0xA
  1732  00000B                     	ds	4
  1733  00000F                     ?___fldiv:
  1734                           	opt callstack 0
  1735  00000F                     ___fldiv@b:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 4 bytes @ 0xE
  1739  00000F                     	ds	4
  1740  000013                     ___fldiv@a:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 4 bytes @ 0x12
  1744  000013                     	ds	4
  1745  000017                     ??___fldiv:
  1746                           
  1747                           ; 1 bytes @ 0x16
  1748  000017                     	ds	4
  1749  00001B                     ___fldiv@rem:
  1750                           	opt callstack 0
  1751                           
  1752                           ; 4 bytes @ 0x1A
  1753  00001B                     	ds	4
  1754  00001F                     ___fldiv@sign:
  1755                           	opt callstack 0
  1756                           
  1757                           ; 1 bytes @ 0x1E
  1758  00001F                     	ds	1
  1759  000020                     ___fldiv@new_exp:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x1F
  1763  000020                     	ds	2
  1764  000022                     ___fldiv@grs:
  1765                           	opt callstack 0
  1766                           
  1767                           ; 4 bytes @ 0x21
  1768  000022                     	ds	4
  1769  000026                     ___fldiv@bexp:
  1770                           	opt callstack 0
  1771                           
  1772                           ; 1 bytes @ 0x25
  1773  000026                     	ds	1
  1774  000027                     ___fldiv@aexp:
  1775                           	opt callstack 0
  1776                           
  1777                           ; 1 bytes @ 0x26
  1778  000027                     	ds	1
  1779  000028                     ?___fltol:
  1780                           	opt callstack 0
  1781  000028                     ___fltol@f1:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 4 bytes @ 0x27
  1785  000028                     	ds	4
  1786  00002C                     ??___fltol:
  1787                           
  1788                           ; 1 bytes @ 0x2B
  1789  00002C                     	ds	4
  1790  000030                     ___fltol@sign1:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 1 bytes @ 0x2F
  1794  000030                     	ds	1
  1795  000031                     ___fltol@exp1:
  1796                           	opt callstack 0
  1797                           
  1798                           ; 1 bytes @ 0x30
  1799  000031                     	ds	1
  1800  000032                     ??_echo:
  1801                           
  1802                           ; 1 bytes @ 0x31
  1803  000032                     	ds	4
  1804  000036                     ??_ISR:
  1805                           
  1806                           ; 1 bytes @ 0x35
  1807  000036                     	ds	2
  1808                           
  1809 ;;
  1810 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1811 ;;
  1812 ;; *************** function _main *****************
  1813 ;; Defined at:
  1814 ;;		line 722 in file "main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  k               2   94[BANK2 ] int 
  1819 ;;  i               2   88[BANK2 ] int 
  1820 ;;  i               2   86[BANK2 ] int 
  1821 ;;  i               2  100[BANK2 ] int 
  1822 ;;  pole_cl_dist    2   82[BANK2 ] int 
  1823 ;;  Pole           80    0[BANK2 ] struct Poles[10]
  1824 ;;  prev_avg_dis    4  104[BANK2 ] volatile long 
  1825 ;;  poles_detect    2  102[BANK2 ] int 
  1826 ;;  t_dep           2   98[BANK2 ] int 
  1827 ;;  t_count         2   96[BANK2 ] int 
  1828 ;;  stack           2   92[BANK2 ] int 
  1829 ;;  steps2_adj      2   84[BANK2 ] int 
  1830 ;;  read            2    0        int 
  1831 ;;  arduino_stop    1   91[BANK2 ] _Bool 
  1832 ;;  act_done        1   90[BANK2 ] _Bool 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Locals:         0       0       0     108       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Totals:         0       0       2     108       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;Total ram usage:      110 bytes
  1847 ;; Hardware stack levels required when called:   17
  1848 ;; This function calls:
  1849 ;;		_UI_main
  1850 ;;		___wmul
  1851 ;;		_actuators_main
  1852 ;;		_backwards
  1853 ;;		_brake
  1854 ;;		_initLCD
  1855 ;;		_lcdInst
  1856 ;;		_number_deploy
  1857 ;;		_printf
  1858 ;;		_start
  1859 ;;		_ultrasonic_main
  1860 ;; This function is called by:
  1861 ;;		Startup code after reset
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text0
  1866  000D6A                     __ptext0:
  1867                           	opt callstack 0
  1868  000D6A                     _main:
  1869                           	opt callstack 14
  1870                           
  1871                           ;main.c: 724:     int t_dep=0;
  1872                           
  1873                           ;incstack = 0
  1874  000D6A  0E00               	movlw	0
  1875  000D6C  0102               	movlb	2	; () banked
  1876  000D6E  6FE3               	movwf	(main@t_dep+1)& (0+255),b
  1877  000D70  0E00               	movlw	0
  1878  000D72  6FE2               	movwf	main@t_dep& (0+255),b
  1879                           
  1880                           ;main.c: 725:     int t_count;;main.c: 726:  TRISD = 0x00;
  1881  000D74  0E00               	movlw	0
  1882  000D76  6E95               	movwf	3989,c	;volatile
  1883                           
  1884                           ; BSR set to: 2
  1885                           ;main.c: 727:  GIE = 1;
  1886  000D78  8EF2               	bsf	4082,7,c	;volatile
  1887                           
  1888                           ;main.c: 729:     ADCON1=0x0F;
  1889  000D7A  0E0F               	movlw	15
  1890  000D7C  6EC1               	movwf	4033,c	;volatile
  1891                           
  1892                           ; BSR set to: 2
  1893                           ;main.c: 731:  initLCD();
  1894  000D7E  EC1E  F01A         	call	_initLCD	;wreg free
  1895                           
  1896                           ;main.c: 733:  T1CON = 0x10;
  1897  000D82  0E10               	movlw	16
  1898  000D84  6ECD               	movwf	4045,c	;volatile
  1899                           
  1900                           ;main.c: 734:     int poles_detected=0;
  1901  000D86  0E00               	movlw	0
  1902  000D88  0102               	movlb	2	; () banked
  1903  000D8A  6FE7               	movwf	(main@poles_detected+1)& (0+255),b
  1904  000D8C  0E00               	movlw	0
  1905  000D8E  6FE6               	movwf	main@poles_detected& (0+255),b
  1906                           
  1907                           ; BSR set to: 2
  1908                           ;main.c: 736:     volatile long prev_avg_dist=0;
  1909                           
  1910                           ; BSR set to: 2
  1911  000D90  0E00               	movlw	0
  1912  000D92  6FE8               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1913  000D94  0E00               	movlw	0
  1914  000D96  6FE9               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1915  000D98  0E00               	movlw	0
  1916  000D9A  6FEA               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1917  000D9C  0E00               	movlw	0
  1918  000D9E  6FEB               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1919                           
  1920                           ; BSR set to: 2
  1921                           ;main.c: 738:     TRISAbits.RA4 = 0;
  1922  000DA0  9892               	bcf	3986,4,c	;volatile
  1923                           
  1924                           ; BSR set to: 2
  1925                           ;main.c: 739:     PORTAbits.RA4 = LATAbits.LATA4;
  1926  000DA2  A889               	btfss	3977,4,c	;volatile
  1927  000DA4  D002               	bra	u8555
  1928  000DA6  8880               	bsf	3968,4,c	;volatile
  1929  000DA8  D001               	bra	u8557
  1930  000DAA                     u8555:
  1931  000DAA  9880               	bcf	3968,4,c	;volatile
  1932  000DAC                     u8557:
  1933                           
  1934                           ;main.c: 742:     _Bool arduino_stopped = 0;
  1935  000DAC  0E00               	movlw	0
  1936  000DAE  0102               	movlb	2	; () banked
  1937  000DB0  6FDB               	movwf	main@arduino_stopped& (0+255),b
  1938                           
  1939                           ; BSR set to: 2
  1940                           ;main.c: 744:     Poles Pole[10];;main.c: 752:     if (~sens){
  1941  000DB2  2858               	incf	_sens,w,c	;volatile
  1942  000DB4  E103               	bnz	u8560
  1943  000DB6  2859               	incf	_sens+1,w,c	;volatile
  1944  000DB8  B4D8               	btfsc	status,2,c
  1945  000DBA  D00B               	goto	l7984
  1946  000DBC                     u8560:
  1947                           
  1948                           ; BSR set to: 2
  1949                           ;main.c: 753:         UI_main( t_dep, poles_detected);
  1950  000DBC  0E00               	movlw	0
  1951  000DBE  0100               	movlb	0	; () banked
  1952  000DC0  6FFA               	movwf	(UI_main@t_dep+1)& (0+255),b
  1953  000DC2  0E00               	movlw	0
  1954  000DC4  6FF9               	movwf	UI_main@t_dep& (0+255),b
  1955  000DC6  0E00               	movlw	0
  1956  000DC8  6FFC               	movwf	(UI_main@poles_detected+1)& (0+255),b
  1957  000DCA  0E00               	movlw	0
  1958  000DCC  6FFB               	movwf	UI_main@poles_detected& (0+255),b
  1959  000DCE  EC09  F000         	call	_UI_main	;wreg free
  1960  000DD2                     l7984:
  1961                           
  1962                           ;main.c: 756:         PORTAbits.RA4 = LATAbits.LATA4;
  1963  000DD2  A889               	btfss	3977,4,c	;volatile
  1964  000DD4  D002               	bra	u8575
  1965  000DD6  8880               	bsf	3968,4,c	;volatile
  1966  000DD8  D001               	bra	u8577
  1967  000DDA                     u8575:
  1968  000DDA  9880               	bcf	3968,4,c	;volatile
  1969  000DDC                     u8577:
  1970                           
  1971                           ;main.c: 761:         if ((poles_detected <10)&&(avg_dist<4000)){
  1972  000DDC  0102               	movlb	2	; () banked
  1973  000DDE  BFE7               	btfsc	(main@poles_detected+1)& (0+255),7,b
  1974  000DE0  D006               	goto	u8580
  1975  000DE2  51E7               	movf	(main@poles_detected+1)& (0+255),w,b
  1976  000DE4  E103               	bnz	u8581
  1977  000DE6  0E0A               	movlw	10
  1978  000DE8  5DE6               	subwf	main@poles_detected& (0+255),w,b
  1979  000DEA  B0D8               	btfsc	status,0,c
  1980  000DEC                     u8581:
  1981  000DEC  D1F8               	goto	l8120
  1982  000DEE                     u8580:
  1983                           
  1984                           ; BSR set to: 2
  1985  000DEE  BE47               	btfsc	_avg_dist+3,7,c	;volatile
  1986  000DF0  D095               	goto	l8036
  1987  000DF2  5047               	movf	_avg_dist+3,w,c	;volatile
  1988  000DF4  1046               	iorwf	_avg_dist+2,w,c	;volatile
  1989  000DF6  E106               	bnz	u8591
  1990  000DF8  0EA0               	movlw	160
  1991  000DFA  5C44               	subwf	_avg_dist,w,c	;volatile
  1992  000DFC  0E0F               	movlw	15
  1993  000DFE  5845               	subwfb	_avg_dist+1,w,c	;volatile
  1994  000E00  A0D8               	btfss	status,0,c
  1995  000E02  D08C               	goto	l8036
  1996  000E04                     u8591:
  1997  000E04  D1EC               	goto	l8120
  1998  000E06                     l7992:
  1999                           
  2000                           ;main.c: 772:                 t_count = 5;
  2001  000E06  0E00               	movlw	0
  2002  000E08  0102               	movlb	2	; () banked
  2003  000E0A  6FE1               	movwf	(main@t_count+1)& (0+255),b
  2004  000E0C  0E05               	movlw	5
  2005  000E0E  6FE0               	movwf	main@t_count& (0+255),b
  2006                           
  2007                           ; BSR set to: 2
  2008                           ;main.c: 773:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2009  000E10  0E01               	movlw	1
  2010  000E12  EC9E  F01D         	call	_lcdInst
  2011  000E16  0E11               	movlw	17
  2012  000E18  0101               	movlb	1	; () banked
  2013  000E1A  6F5A               	movwf	??_main& (0+255),b
  2014  000E1C  0E3A               	movlw	58
  2015  000E1E                     u8727:
  2016  000E1E  2EE8               	decfsz	wreg,f,c
  2017  000E20  D7FE               	bra	u8727
  2018  000E22  2F5A               	decfsz	??_main& (0+255),f,b
  2019  000E24  D7FC               	bra	u8727
  2020  000E26  F000               	nop	
  2021                           
  2022                           ;main.c: 774:                     printf("waiting");
  2023  000E28  0EFD               	movlw	low (STR_55+5)
  2024  000E2A  0100               	movlb	0	; () banked
  2025  000E2C  6FED               	movwf	printf@fmt& (0+255),b
  2026  000E2E  0EFE               	movlw	high (STR_55+5)
  2027  000E30  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2028  000E32  EC38  F01D         	call	_printf	;wreg free
  2029                           
  2030                           ;main.c: 776:                     if (!PORTAbits.RA4){
  2031  000E36  B880               	btfsc	3968,4,c	;volatile
  2032  000E38  D013               	goto	l8008
  2033                           
  2034                           ;main.c: 777:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2035  000E3A  0E01               	movlw	1
  2036  000E3C  EC9E  F01D         	call	_lcdInst
  2037  000E40  0E11               	movlw	17
  2038  000E42  0101               	movlb	1	; () banked
  2039  000E44  6F5A               	movwf	??_main& (0+255),b
  2040  000E46  0E3A               	movlw	58
  2041  000E48                     u8737:
  2042  000E48  2EE8               	decfsz	wreg,f,c
  2043  000E4A  D7FE               	bra	u8737
  2044  000E4C  2F5A               	decfsz	??_main& (0+255),f,b
  2045  000E4E  D7FC               	bra	u8737
  2046  000E50  F000               	nop	
  2047                           
  2048                           ;main.c: 778:                         printf("more waiting");
  2049  000E52  0EF8               	movlw	low STR_55
  2050  000E54  0100               	movlb	0	; () banked
  2051  000E56  6FED               	movwf	printf@fmt& (0+255),b
  2052  000E58  0EFE               	movlw	high STR_55
  2053  000E5A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2054  000E5C  EC38  F01D         	call	_printf	;wreg free
  2055  000E60                     l8008:
  2056                           
  2057                           ;main.c: 780:                     if (PORTAbits.RA4){
  2058  000E60  A880               	btfss	3968,4,c	;volatile
  2059  000E62  D016               	goto	l8018
  2060                           
  2061                           ;main.c: 782:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2062  000E64  0E01               	movlw	1
  2063  000E66  EC9E  F01D         	call	_lcdInst
  2064  000E6A  0E11               	movlw	17
  2065  000E6C  0101               	movlb	1	; () banked
  2066  000E6E  6F5A               	movwf	??_main& (0+255),b
  2067  000E70  0E3A               	movlw	58
  2068  000E72                     u8747:
  2069  000E72  2EE8               	decfsz	wreg,f,c
  2070  000E74  D7FE               	bra	u8747
  2071  000E76  2F5A               	decfsz	??_main& (0+255),f,b
  2072  000E78  D7FC               	bra	u8747
  2073  000E7A  F000               	nop	
  2074                           
  2075                           ;main.c: 783:                         printf("done wait");
  2076  000E7C  0EB6               	movlw	low STR_56
  2077  000E7E  0100               	movlb	0	; () banked
  2078  000E80  6FED               	movwf	printf@fmt& (0+255),b
  2079  000E82  0EFF               	movlw	high STR_56
  2080  000E84  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2081  000E86  EC38  F01D         	call	_printf	;wreg free
  2082                           
  2083                           ;main.c: 784:                         arduino_stopped = 1;
  2084  000E8A  0E01               	movlw	1
  2085  000E8C  0102               	movlb	2	; () banked
  2086  000E8E  6FDB               	movwf	main@arduino_stopped& (0+255),b
  2087  000E90                     l8018:
  2088                           
  2089                           ;main.c: 786:                     if (arduino_stopped){
  2090  000E90  0102               	movlb	2	; () banked
  2091  000E92  51DB               	movf	main@arduino_stopped& (0+255),w,b
  2092  000E94  B4D8               	btfsc	status,2,c
  2093  000E96  D042               	goto	l8036
  2094                           
  2095                           ; BSR set to: 2
  2096                           ;main.c: 787:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2097  000E98  0E01               	movlw	1
  2098  000E9A  EC9E  F01D         	call	_lcdInst
  2099  000E9E  0E11               	movlw	17
  2100  000EA0  0101               	movlb	1	; () banked
  2101  000EA2  6F5A               	movwf	??_main& (0+255),b
  2102  000EA4  0E3A               	movlw	58
  2103  000EA6                     u8757:
  2104  000EA6  2EE8               	decfsz	wreg,f,c
  2105  000EA8  D7FE               	bra	u8757
  2106  000EAA  2F5A               	decfsz	??_main& (0+255),f,b
  2107  000EAC  D7FC               	bra	u8757
  2108  000EAE  F000               	nop	
  2109                           
  2110                           ;main.c: 788:                         printf("dun break");
  2111  000EB0  0EA2               	movlw	low STR_57
  2112  000EB2  0100               	movlb	0	; () banked
  2113  000EB4  6FED               	movwf	printf@fmt& (0+255),b
  2114  000EB6  0EFF               	movlw	high STR_57
  2115  000EB8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2116  000EBA  EC38  F01D         	call	_printf	;wreg free
  2117                           
  2118                           ;main.c: 789:                         steps2_adj=ultrasonic_main();
  2119  000EBE  EC3B  F012         	call	_ultrasonic_main	;wreg free
  2120  000EC2  C0FA  F2D4         	movff	?_ultrasonic_main,main@steps2_adj
  2121  000EC6  C0FB  F2D5         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2122                           
  2123                           ;main.c: 790:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2124  000ECA  0E01               	movlw	1
  2125  000ECC  EC9E  F01D         	call	_lcdInst
  2126  000ED0  0E11               	movlw	17
  2127  000ED2  0101               	movlb	1	; () banked
  2128  000ED4  6F5A               	movwf	??_main& (0+255),b
  2129  000ED6  0E3A               	movlw	58
  2130  000ED8                     u8767:
  2131  000ED8  2EE8               	decfsz	wreg,f,c
  2132  000EDA  D7FE               	bra	u8767
  2133  000EDC  2F5A               	decfsz	??_main& (0+255),f,b
  2134  000EDE  D7FC               	bra	u8767
  2135  000EE0  F000               	nop	
  2136                           
  2137                           ;main.c: 791:                         printf("stepsadj %d", steps2_adj);
  2138  000EE2  0E1E               	movlw	low STR_21
  2139  000EE4  0100               	movlb	0	; () banked
  2140  000EE6  6FED               	movwf	printf@fmt& (0+255),b
  2141  000EE8  0EFF               	movlw	high STR_21
  2142  000EEA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2143  000EEC  C2D4  F0EF         	movff	main@steps2_adj,?_printf+2
  2144  000EF0  C2D5  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2145  000EF4  EC38  F01D         	call	_printf	;wreg free
  2146                           
  2147                           ;main.c: 792:                         t_count = number_deploy(avg_dist, poles_detected);
  2148  000EF8  C044  F0F9         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2149  000EFC  C045  F0FA         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2150  000F00  C2E6  F0FB         	movff	main@poles_detected,number_deploy@poles_detected
  2151  000F04  C2E7  F0FC         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2152  000F08  EC33  F010         	call	_number_deploy	;wreg free
  2153  000F0C  C0F9  F2E0         	movff	?_number_deploy,main@t_count
  2154  000F10  C0FA  F2E1         	movff	?_number_deploy+1,main@t_count+1
  2155                           
  2156                           ;main.c: 793:                         sens = 0;
  2157  000F14  0E00               	movlw	0
  2158  000F16  6E59               	movwf	_sens+1,c	;volatile
  2159  000F18  0E00               	movlw	0
  2160  000F1A  6E58               	movwf	_sens,c	;volatile
  2161  000F1C                     l8036:
  2162                           
  2163                           ;main.c: 769:             while (sens){
  2164  000F1C  5058               	movf	_sens,w,c	;volatile
  2165  000F1E  1059               	iorwf	_sens+1,w,c	;volatile
  2166  000F20  A4D8               	btfss	status,2,c
  2167  000F22  D771               	goto	l7992
  2168                           
  2169                           ;main.c: 796:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  2170  000F24  0102               	movlb	2	; () banked
  2171  000F26  51E8               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2172  000F28  5C44               	subwf	_avg_dist,w,c	;volatile
  2173  000F2A  6FD2               	movwf	main@pole_cl_dist& (0+255),b
  2174  000F2C  51E9               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2175  000F2E  5845               	subwfb	_avg_dist+1,w,c	;volatile
  2176  000F30  6FD3               	movwf	(main@pole_cl_dist+1)& (0+255),b
  2177                           
  2178                           ; BSR set to: 2
  2179                           ;main.c: 802:             act_done = 0;
  2180  000F32  0E00               	movlw	0
  2181  000F34  6FDA               	movwf	main@act_done& (0+255),b
  2182                           
  2183                           ; BSR set to: 2
  2184                           ;main.c: 803:             if (t_count<=2){
  2185  000F36  BFE1               	btfsc	(main@t_count+1)& (0+255),7,b
  2186  000F38  D006               	goto	u8640
  2187  000F3A  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2188  000F3C  E165               	bnz	l526
  2189  000F3E  0E03               	movlw	3
  2190  000F40  5DE0               	subwf	main@t_count& (0+255),w,b
  2191  000F42  B0D8               	btfsc	status,0,c
  2192  000F44  D061               	goto	l526
  2193  000F46                     u8640:
  2194                           
  2195                           ; BSR set to: 2
  2196                           ;main.c: 804:                 if (t_dep <8){
  2197  000F46  BFE3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2198  000F48  D006               	goto	u8650
  2199  000F4A  51E3               	movf	(main@t_dep+1)& (0+255),w,b
  2200  000F4C  E12C               	bnz	l8060
  2201  000F4E  0E08               	movlw	8
  2202  000F50  5DE2               	subwf	main@t_dep& (0+255),w,b
  2203  000F52  B0D8               	btfsc	status,0,c
  2204  000F54  D028               	goto	u8660
  2205  000F56                     u8650:
  2206                           
  2207                           ; BSR set to: 2
  2208                           ;main.c: 807:                     stack = 1;
  2209  000F56  0E00               	movlw	0
  2210  000F58  6FDD               	movwf	(main@stack+1)& (0+255),b
  2211  000F5A  0E01               	movlw	1
  2212  000F5C  6FDC               	movwf	main@stack& (0+255),b
  2213                           
  2214                           ; BSR set to: 2
  2215                           ;main.c: 808:                                     brake();
  2216  000F5E  ECAD  F017         	call	_brake	;wreg free
  2217                           
  2218                           ;main.c: 810:                     for(int i=0; i<(t_count); i++){
  2219  000F62  0E00               	movlw	0
  2220  000F64  0102               	movlb	2	; () banked
  2221  000F66  6FD7               	movwf	(main@i+1)& (0+255),b
  2222  000F68  0E00               	movlw	0
  2223  000F6A  6FD6               	movwf	main@i& (0+255),b
  2224  000F6C  D00F               	goto	l8058
  2225  000F6E                     l8052:
  2226                           
  2227                           ; BSR set to: 1
  2228                           ;main.c: 812:                         actuators_main(stack, 110);
  2229  000F6E  C2DC  F10C         	movff	main@stack,actuators_main@stack
  2230  000F72  C2DD  F10D         	movff	main@stack+1,actuators_main@stack+1
  2231  000F76  0E00               	movlw	0
  2232  000F78  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2233  000F7A  0E6E               	movlw	110
  2234  000F7C  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2235  000F7E  ECF8  F014         	call	_actuators_main	;wreg free
  2236                           
  2237                           ;main.c: 813:                         t_dep++;
  2238  000F82  0102               	movlb	2	; () banked
  2239  000F84  4BE2               	infsnz	main@t_dep& (0+255),f,b
  2240  000F86  2BE3               	incf	(main@t_dep+1)& (0+255),f,b
  2241                           
  2242                           ; BSR set to: 2
  2243                           ;main.c: 814:                     }
  2244  000F88  4BD6               	infsnz	main@i& (0+255),f,b
  2245  000F8A  2BD7               	incf	(main@i+1)& (0+255),f,b
  2246  000F8C                     l8058:
  2247                           
  2248                           ; BSR set to: 2
  2249  000F8C  51E0               	movf	main@t_count& (0+255),w,b
  2250  000F8E  5DD6               	subwf	main@i& (0+255),w,b
  2251  000F90  51D7               	movf	(main@i+1)& (0+255),w,b
  2252  000F92  0A80               	xorlw	128
  2253  000F94  0101               	movlb	1	; () banked
  2254  000F96  6F5A               	movwf	??_main& (0+255),b
  2255  000F98  0102               	movlb	2	; () banked
  2256  000F9A  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2257  000F9C  0A80               	xorlw	128
  2258  000F9E  0101               	movlb	1	; () banked
  2259  000FA0  595A               	subwfb	??_main& (0+255),w,b
  2260  000FA2  A0D8               	btfss	status,0,c
  2261  000FA4  D7E4               	goto	l8052
  2262  000FA6                     u8660:
  2263  000FA6                     l8060:
  2264                           
  2265                           ;main.c: 816:                 if (t_dep >= 8){
  2266  000FA6  0102               	movlb	2	; () banked
  2267  000FA8  BFE3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2268  000FAA  D02B               	goto	u8680
  2269  000FAC  51E3               	movf	(main@t_dep+1)& (0+255),w,b
  2270  000FAE  E104               	bnz	u8670
  2271  000FB0  0E08               	movlw	8
  2272  000FB2  5DE2               	subwf	main@t_dep& (0+255),w,b
  2273  000FB4  A0D8               	btfss	status,0,c
  2274  000FB6  D025               	goto	u8680
  2275  000FB8                     u8670:
  2276                           
  2277                           ; BSR set to: 2
  2278                           ;main.c: 817:                     stack = 2;
  2279  000FB8  0E00               	movlw	0
  2280  000FBA  6FDD               	movwf	(main@stack+1)& (0+255),b
  2281  000FBC  0E02               	movlw	2
  2282  000FBE  6FDC               	movwf	main@stack& (0+255),b
  2283                           
  2284                           ;main.c: 818:                     for(int i=0; i<(t_count); i++){
  2285  000FC0  0E00               	movlw	0
  2286  000FC2  6FD9               	movwf	(main@i_1019+1)& (0+255),b
  2287  000FC4  0E00               	movlw	0
  2288  000FC6  6FD8               	movwf	main@i_1019& (0+255),b
  2289  000FC8  D00F               	goto	l8070
  2290  000FCA                     l8064:
  2291                           
  2292                           ; BSR set to: 1
  2293                           ;main.c: 820:                         actuators_main(stack, 110);
  2294  000FCA  C2DC  F10C         	movff	main@stack,actuators_main@stack
  2295  000FCE  C2DD  F10D         	movff	main@stack+1,actuators_main@stack+1
  2296  000FD2  0E00               	movlw	0
  2297  000FD4  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2298  000FD6  0E6E               	movlw	110
  2299  000FD8  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2300  000FDA  ECF8  F014         	call	_actuators_main	;wreg free
  2301                           
  2302                           ;main.c: 821:                         t_dep++;
  2303  000FDE  0102               	movlb	2	; () banked
  2304  000FE0  4BE2               	infsnz	main@t_dep& (0+255),f,b
  2305  000FE2  2BE3               	incf	(main@t_dep+1)& (0+255),f,b
  2306                           
  2307                           ; BSR set to: 2
  2308                           ;main.c: 822:                     }
  2309  000FE4  4BD8               	infsnz	main@i_1019& (0+255),f,b
  2310  000FE6  2BD9               	incf	(main@i_1019+1)& (0+255),f,b
  2311  000FE8                     l8070:
  2312                           
  2313                           ; BSR set to: 2
  2314  000FE8  51E0               	movf	main@t_count& (0+255),w,b
  2315  000FEA  5DD8               	subwf	main@i_1019& (0+255),w,b
  2316  000FEC  51D9               	movf	(main@i_1019+1)& (0+255),w,b
  2317  000FEE  0A80               	xorlw	128
  2318  000FF0  0101               	movlb	1	; () banked
  2319  000FF2  6F5A               	movwf	??_main& (0+255),b
  2320  000FF4  0102               	movlb	2	; () banked
  2321  000FF6  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2322  000FF8  0A80               	xorlw	128
  2323  000FFA  0101               	movlb	1	; () banked
  2324  000FFC  595A               	subwfb	??_main& (0+255),w,b
  2325  000FFE  A0D8               	btfss	status,0,c
  2326  001000  D7E4               	goto	l8064
  2327  001002                     u8680:
  2328                           
  2329                           ;main.c: 824:                 act_done = 1;
  2330  001002  0E01               	movlw	1
  2331  001004  0102               	movlb	2	; () banked
  2332  001006  6FDA               	movwf	main@act_done& (0+255),b
  2333  001008                     l526:
  2334                           
  2335                           ; BSR set to: 2
  2336                           ;main.c: 826:             if (act_done){
  2337  001008  51DA               	movf	main@act_done& (0+255),w,b
  2338  00100A  B4D8               	btfsc	status,2,c
  2339  00100C  D136               	goto	l8142
  2340                           
  2341                           ; BSR set to: 2
  2342                           ;main.c: 828:             Pole[poles_detected].dist_from_cl = pole_cl_dist;
  2343  00100E  C2E6  F15A         	movff	main@poles_detected,??_main
  2344  001012  C2E7  F15B         	movff	main@poles_detected+1,??_main+1
  2345  001016  0101               	movlb	1	; () banked
  2346  001018  90D8               	bcf	status,0,c
  2347  00101A  375A               	rlcf	??_main& (0+255),f,b
  2348  00101C  375B               	rlcf	(??_main+1)& (0+255),f,b
  2349  00101E  90D8               	bcf	status,0,c
  2350  001020  375A               	rlcf	??_main& (0+255),f,b
  2351  001022  375B               	rlcf	(??_main+1)& (0+255),f,b
  2352  001024  90D8               	bcf	status,0,c
  2353  001026  375A               	rlcf	??_main& (0+255),f,b
  2354  001028  375B               	rlcf	(??_main+1)& (0+255),f,b
  2355  00102A  0E06               	movlw	6
  2356  00102C  275A               	addwf	??_main& (0+255),f,b
  2357  00102E  0E00               	movlw	0
  2358  001030  235B               	addwfc	(??_main+1)& (0+255),f,b
  2359  001032  0E80               	movlw	low main@Pole
  2360  001034  255A               	addwf	??_main& (0+255),w,b
  2361  001036  6ED9               	movwf	fsr2l,c
  2362  001038  0E02               	movlw	high main@Pole
  2363  00103A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2364  00103C  6EDA               	movwf	fsr2h,c
  2365  00103E  C2D2  FFDE         	movff	main@pole_cl_dist,postinc2
  2366  001042  C2D3  FFDD         	movff	main@pole_cl_dist+1,postdec2
  2367                           
  2368                           ;main.c: 829:             Pole[poles_detected].dist_from_start = avg_dist;
  2369  001046  C2E6  F15A         	movff	main@poles_detected,??_main
  2370  00104A  C2E7  F15B         	movff	main@poles_detected+1,??_main+1
  2371  00104E  90D8               	bcf	status,0,c
  2372  001050  375A               	rlcf	??_main& (0+255),f,b
  2373  001052  375B               	rlcf	(??_main+1)& (0+255),f,b
  2374  001054  90D8               	bcf	status,0,c
  2375  001056  375A               	rlcf	??_main& (0+255),f,b
  2376  001058  375B               	rlcf	(??_main+1)& (0+255),f,b
  2377  00105A  90D8               	bcf	status,0,c
  2378  00105C  375A               	rlcf	??_main& (0+255),f,b
  2379  00105E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2380  001060  0E04               	movlw	4
  2381  001062  275A               	addwf	??_main& (0+255),f,b
  2382  001064  0E00               	movlw	0
  2383  001066  235B               	addwfc	(??_main+1)& (0+255),f,b
  2384  001068  0E80               	movlw	low main@Pole
  2385  00106A  255A               	addwf	??_main& (0+255),w,b
  2386  00106C  6ED9               	movwf	fsr2l,c
  2387  00106E  0E02               	movlw	high main@Pole
  2388  001070  215B               	addwfc	(??_main+1)& (0+255),w,b
  2389  001072  6EDA               	movwf	fsr2h,c
  2390  001074  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2391  001078  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2392                           
  2393                           ; BSR set to: 1
  2394                           ;main.c: 831:             prev_avg_dist = avg_dist ;
  2395  00107C  C044  F2E8         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2396  001080  C045  F2E9         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2397  001084  C046  F2EA         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2398  001088  C047  F2EB         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2399                           
  2400                           ; BSR set to: 1
  2401                           ;main.c: 832:             poles_detected++;
  2402  00108C  0102               	movlb	2	; () banked
  2403  00108E  4BE6               	infsnz	main@poles_detected& (0+255),f,b
  2404  001090  2BE7               	incf	(main@poles_detected+1)& (0+255),f,b
  2405                           
  2406                           ; BSR set to: 2
  2407                           ;main.c: 834:             start();
  2408  001092  EC72  F01B         	call	_start	;wreg free
  2409                           
  2410                           ;main.c: 835:             arduino_stopped = 0;
  2411  001096  0E00               	movlw	0
  2412  001098  0102               	movlb	2	; () banked
  2413  00109A  6FDB               	movwf	main@arduino_stopped& (0+255),b
  2414                           
  2415                           ; BSR set to: 2
  2416                           ;main.c: 841:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2417  00109C  0E01               	movlw	1
  2418  00109E  EC9E  F01D         	call	_lcdInst
  2419  0010A2  0E11               	movlw	17
  2420  0010A4  0101               	movlb	1	; () banked
  2421  0010A6  6F5A               	movwf	??_main& (0+255),b
  2422  0010A8  0E3A               	movlw	58
  2423  0010AA                     u8777:
  2424  0010AA  2EE8               	decfsz	wreg,f,c
  2425  0010AC  D7FE               	bra	u8777
  2426  0010AE  2F5A               	decfsz	??_main& (0+255),f,b
  2427  0010B0  D7FC               	bra	u8777
  2428  0010B2  F000               	nop	
  2429                           
  2430                           ;main.c: 842:             printf("avg dist %d", avg_dist);
  2431  0010B4  0E2A               	movlw	low STR_59
  2432  0010B6  0100               	movlb	0	; () banked
  2433  0010B8  6FED               	movwf	printf@fmt& (0+255),b
  2434  0010BA  0EFF               	movlw	high STR_59
  2435  0010BC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2436  0010BE  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2437  0010C2  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2438  0010C6  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2439  0010CA  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2440  0010CE  EC38  F01D         	call	_printf	;wreg free
  2441                           
  2442                           ;main.c: 843:             printf("poles d %d", poles_detected);
  2443  0010D2  0E4E               	movlw	low STR_60
  2444  0010D4  0100               	movlb	0	; () banked
  2445  0010D6  6FED               	movwf	printf@fmt& (0+255),b
  2446  0010D8  0EFF               	movlw	high STR_60
  2447  0010DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2448  0010DC  C2E6  F0EF         	movff	main@poles_detected,?_printf+2
  2449  0010E0  C2E7  F0F0         	movff	main@poles_detected+1,?_printf+3
  2450  0010E4  EC38  F01D         	call	_printf	;wreg free
  2451                           
  2452                           ;main.c: 844:                                 for (int i=0;i<4;i++){
  2453  0010E8  0E00               	movlw	0
  2454  0010EA  0102               	movlb	2	; () banked
  2455  0010EC  6FE5               	movwf	(main@i_1027+1)& (0+255),b
  2456  0010EE  0E00               	movlw	0
  2457  0010F0  6FE4               	movwf	main@i_1027& (0+255),b
  2458  0010F2                     l8094:
  2459                           
  2460                           ; BSR set to: 2
  2461  0010F2  BFE5               	btfsc	(main@i_1027+1)& (0+255),7,b
  2462  0010F4  D006               	goto	l8098
  2463  0010F6  51E5               	movf	(main@i_1027+1)& (0+255),w,b
  2464  0010F8  E160               	bnz	l8116
  2465  0010FA  0E04               	movlw	4
  2466  0010FC  5DE4               	subwf	main@i_1027& (0+255),w,b
  2467  0010FE  B0D8               	btfsc	status,0,c
  2468  001100  D05C               	goto	l8116
  2469  001102                     l8098:
  2470                           
  2471                           ; BSR set to: 2
  2472                           ;main.c: 845:                         sum[i] = 0 ;
  2473  001102  90D8               	bcf	status,0,c
  2474  001104  35E4               	rlcf	main@i_1027& (0+255),w,b
  2475  001106  6ED9               	movwf	fsr2l,c
  2476  001108  35E5               	rlcf	(main@i_1027+1)& (0+255),w,b
  2477  00110A  6EDA               	movwf	fsr2h,c
  2478  00110C  0E38               	movlw	low _sum
  2479  00110E  26D9               	addwf	fsr2l,f,c
  2480  001110  0E00               	movlw	high _sum
  2481  001112  22DA               	addwfc	fsr2h,f,c
  2482  001114  0E00               	movlw	0
  2483  001116  6EDE               	movwf	postinc2,c
  2484  001118  0E00               	movlw	0
  2485  00111A  6EDD               	movwf	postdec2,c
  2486                           
  2487                           ;main.c: 846:                         a[i] =0 ;
  2488  00111C  90D8               	bcf	status,0,c
  2489  00111E  35E4               	rlcf	main@i_1027& (0+255),w,b
  2490  001120  6ED9               	movwf	fsr2l,c
  2491  001122  35E5               	rlcf	(main@i_1027+1)& (0+255),w,b
  2492  001124  6EDA               	movwf	fsr2h,c
  2493  001126  0E61               	movlw	low _a
  2494  001128  26D9               	addwf	fsr2l,f,c
  2495  00112A  0E00               	movlw	high _a
  2496  00112C  22DA               	addwfc	fsr2h,f,c
  2497  00112E  0E00               	movlw	0
  2498  001130  6EDE               	movwf	postinc2,c
  2499  001132  0E00               	movlw	0
  2500  001134  6EDD               	movwf	postdec2,c
  2501                           
  2502                           ;main.c: 847:                         sumf[i] = 0 ;
  2503  001136  0E40               	movlw	low _sumf
  2504  001138  25E4               	addwf	main@i_1027& (0+255),w,b
  2505  00113A  6ED9               	movwf	fsr2l,c
  2506  00113C  0E00               	movlw	high _sumf
  2507  00113E  21E5               	addwfc	(main@i_1027+1)& (0+255),w,b
  2508  001140  6EDA               	movwf	fsr2h,c
  2509  001142  0E00               	movlw	0
  2510  001144  6EDF               	movwf	indf2,c
  2511                           
  2512                           ; BSR set to: 2
  2513                           ;main.c: 849:                         for (int k=0;k<6;k++){
  2514  001146  0E00               	movlw	0
  2515  001148  6FDF               	movwf	(main@k+1)& (0+255),b
  2516  00114A  0E00               	movlw	0
  2517  00114C  6FDE               	movwf	main@k& (0+255),b
  2518  00114E                     l8102:
  2519                           
  2520                           ; BSR set to: 2
  2521  00114E  BFDF               	btfsc	(main@k+1)& (0+255),7,b
  2522  001150  D006               	goto	l8106
  2523  001152  51DF               	movf	(main@k+1)& (0+255),w,b
  2524  001154  E12F               	bnz	l8112
  2525  001156  0E06               	movlw	6
  2526  001158  5DDE               	subwf	main@k& (0+255),w,b
  2527  00115A  B0D8               	btfsc	status,0,c
  2528  00115C  D02B               	goto	l8112
  2529  00115E                     l8106:
  2530                           
  2531                           ; BSR set to: 2
  2532                           ;main.c: 850:                             dist_final[i][k] = 0;
  2533  00115E  C2E4  F080         	movff	main@i_1027,___wmul@multiplier
  2534  001162  C2E5  F081         	movff	main@i_1027+1,___wmul@multiplier+1
  2535  001166  0E00               	movlw	0
  2536  001168  0100               	movlb	0	; () banked
  2537  00116A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2538  00116C  0E0C               	movlw	12
  2539  00116E  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2540  001170  EC4C  F01D         	call	___wmul	;wreg free
  2541  001174  0E50               	movlw	low _dist_final
  2542  001176  0101               	movlb	1	; () banked
  2543  001178  6F5A               	movwf	??_main& (0+255),b
  2544  00117A  0E02               	movlw	high _dist_final
  2545  00117C  6F5B               	movwf	(??_main+1)& (0+255),b
  2546  00117E  0100               	movlb	0	; () banked
  2547  001180  5180               	movf	?___wmul& (0+255),w,b
  2548  001182  0101               	movlb	1	; () banked
  2549  001184  275A               	addwf	??_main& (0+255),f,b
  2550  001186  0100               	movlb	0	; () banked
  2551  001188  5181               	movf	(?___wmul+1)& (0+255),w,b
  2552  00118A  0101               	movlb	1	; () banked
  2553  00118C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2554  00118E  90D8               	bcf	status,0,c
  2555  001190  0102               	movlb	2	; () banked
  2556  001192  35DE               	rlcf	main@k& (0+255),w,b
  2557  001194  6ED9               	movwf	fsr2l,c
  2558  001196  35DF               	rlcf	(main@k+1)& (0+255),w,b
  2559  001198  6EDA               	movwf	fsr2h,c
  2560  00119A  0101               	movlb	1	; () banked
  2561  00119C  515A               	movf	??_main& (0+255),w,b
  2562  00119E  26D9               	addwf	fsr2l,f,c
  2563  0011A0  515B               	movf	(??_main+1)& (0+255),w,b
  2564  0011A2  22DA               	addwfc	fsr2h,f,c
  2565  0011A4  0E00               	movlw	0
  2566  0011A6  6EDE               	movwf	postinc2,c
  2567  0011A8  0E00               	movlw	0
  2568  0011AA  6EDD               	movwf	postdec2,c
  2569                           
  2570                           ; BSR set to: 1
  2571                           ;main.c: 851:                         }
  2572  0011AC  0102               	movlb	2	; () banked
  2573  0011AE  4BDE               	infsnz	main@k& (0+255),f,b
  2574  0011B0  2BDF               	incf	(main@k+1)& (0+255),f,b
  2575  0011B2  D7CD               	goto	l8102
  2576  0011B4                     l8112:
  2577                           
  2578                           ; BSR set to: 2
  2579                           ;main.c: 852:                     }
  2580  0011B4  4BE4               	infsnz	main@i_1027& (0+255),f,b
  2581  0011B6  2BE5               	incf	(main@i_1027+1)& (0+255),f,b
  2582  0011B8  D79C               	goto	l8094
  2583  0011BA                     l8116:
  2584                           
  2585                           ; BSR set to: 2
  2586                           ;main.c: 853:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2587  0011BA  0E0D               	movlw	13
  2588  0011BC  0101               	movlb	1	; () banked
  2589  0011BE  6F5B               	movwf	(??_main+1)& (0+255),b
  2590  0011C0  0EAF               	movlw	175
  2591  0011C2  6F5A               	movwf	??_main& (0+255),b
  2592  0011C4  0EB6               	movlw	182
  2593  0011C6                     u8787:
  2594  0011C6  2EE8               	decfsz	wreg,f,c
  2595  0011C8  D7FE               	bra	u8787
  2596  0011CA  2F5A               	decfsz	??_main& (0+255),f,b
  2597  0011CC  D7FC               	bra	u8787
  2598  0011CE  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2599  0011D0  D7FA               	bra	u8787
  2600  0011D2  F000               	nop	
  2601                           
  2602                           ;main.c: 854:             sens = 1;
  2603  0011D4  0E00               	movlw	0
  2604  0011D6  6E59               	movwf	_sens+1,c	;volatile
  2605  0011D8  0E01               	movlw	1
  2606  0011DA  6E58               	movwf	_sens,c	;volatile
  2607  0011DC  D04E               	goto	l8142
  2608  0011DE                     l8120:
  2609                           
  2610                           ; BSR set to: 2
  2611                           ;main.c: 858:             brake();
  2612  0011DE  ECAD  F017         	call	_brake	;wreg free
  2613                           
  2614                           ;main.c: 859:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2615  0011E2  0E01               	movlw	1
  2616  0011E4  EC9E  F01D         	call	_lcdInst
  2617  0011E8  0E11               	movlw	17
  2618  0011EA  0101               	movlb	1	; () banked
  2619  0011EC  6F5A               	movwf	??_main& (0+255),b
  2620  0011EE  0E3A               	movlw	58
  2621  0011F0                     u8797:
  2622  0011F0  2EE8               	decfsz	wreg,f,c
  2623  0011F2  D7FE               	bra	u8797
  2624  0011F4  2F5A               	decfsz	??_main& (0+255),f,b
  2625  0011F6  D7FC               	bra	u8797
  2626  0011F8  F000               	nop	
  2627                           
  2628                           ;main.c: 860:             printf("poles done");
  2629  0011FA  0E64               	movlw	low STR_61
  2630  0011FC  0100               	movlb	0	; () banked
  2631  0011FE  6FED               	movwf	printf@fmt& (0+255),b
  2632  001200  0EFF               	movlw	high STR_61
  2633  001202  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2634  001204  EC38  F01D         	call	_printf	;wreg free
  2635                           
  2636                           ;main.c: 861:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2637  001208  0E0D               	movlw	13
  2638  00120A  0101               	movlb	1	; () banked
  2639  00120C  6F5B               	movwf	(??_main+1)& (0+255),b
  2640  00120E  0EAF               	movlw	175
  2641  001210  6F5A               	movwf	??_main& (0+255),b
  2642  001212  0EB6               	movlw	182
  2643  001214                     u8807:
  2644  001214  2EE8               	decfsz	wreg,f,c
  2645  001216  D7FE               	bra	u8807
  2646  001218  2F5A               	decfsz	??_main& (0+255),f,b
  2647  00121A  D7FC               	bra	u8807
  2648  00121C  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2649  00121E  D7FA               	bra	u8807
  2650  001220  F000               	nop	
  2651                           
  2652                           ;main.c: 862:             UI_main(t_dep, poles_detected);
  2653  001222  C2E2  F0F9         	movff	main@t_dep,UI_main@t_dep
  2654  001226  C2E3  F0FA         	movff	main@t_dep+1,UI_main@t_dep+1
  2655  00122A  C2E6  F0FB         	movff	main@poles_detected,UI_main@poles_detected
  2656  00122E  C2E7  F0FC         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2657  001232  EC09  F000         	call	_UI_main	;wreg free
  2658                           
  2659                           ;main.c: 863:             backwards();
  2660  001236  EC60  F01D         	call	_backwards	;wreg free
  2661                           
  2662                           ;main.c: 864:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2663  00123A  0E01               	movlw	1
  2664  00123C  EC9E  F01D         	call	_lcdInst
  2665  001240  0E11               	movlw	17
  2666  001242  0101               	movlb	1	; () banked
  2667  001244  6F5A               	movwf	??_main& (0+255),b
  2668  001246  0E3A               	movlw	58
  2669  001248                     u8817:
  2670  001248  2EE8               	decfsz	wreg,f,c
  2671  00124A  D7FE               	bra	u8817
  2672  00124C  2F5A               	decfsz	??_main& (0+255),f,b
  2673  00124E  D7FC               	bra	u8817
  2674  001250  F000               	nop	
  2675                           
  2676                           ;main.c: 865:             printf("backwards");
  2677  001252  0EAC               	movlw	low STR_62
  2678  001254  0100               	movlb	0	; () banked
  2679  001256  6FED               	movwf	printf@fmt& (0+255),b
  2680  001258  0EFF               	movlw	high STR_62
  2681  00125A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2682  00125C  EC38  F01D         	call	_printf	;wreg free
  2683                           
  2684                           ;main.c: 866:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2685  001260  0E0D               	movlw	13
  2686  001262  0101               	movlb	1	; () banked
  2687  001264  6F5B               	movwf	(??_main+1)& (0+255),b
  2688  001266  0EAF               	movlw	175
  2689  001268  6F5A               	movwf	??_main& (0+255),b
  2690  00126A  0EB6               	movlw	182
  2691  00126C                     u8827:
  2692  00126C  2EE8               	decfsz	wreg,f,c
  2693  00126E  D7FE               	bra	u8827
  2694  001270  2F5A               	decfsz	??_main& (0+255),f,b
  2695  001272  D7FC               	bra	u8827
  2696  001274  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2697  001276  D7FA               	bra	u8827
  2698  001278  F000               	nop	
  2699  00127A                     l8142:
  2700                           
  2701                           ;main.c: 868:         t_count = 5;
  2702  00127A  0E00               	movlw	0
  2703  00127C  0102               	movlb	2	; () banked
  2704  00127E  6FE1               	movwf	(main@t_count+1)& (0+255),b
  2705  001280  0E05               	movlw	5
  2706  001282  6FE0               	movwf	main@t_count& (0+255),b
  2707  001284  D5A6               	goto	l7984
  2708  001286                     __end_of_main:
  2709                           	opt callstack 0
  2710                           
  2711 ;; *************** function _ultrasonic_main *****************
  2712 ;; Defined at:
  2713 ;;		line 291 in file "main.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  min_us_dist     2    8[BANK1 ] int 
  2718 ;;  steps2_adj      2    6[BANK1 ] int 
  2719 ;;  step2_offset    2    4[BANK1 ] int 
  2720 ;;  sensed          2    2[BANK1 ] int 
  2721 ;;  min_us_dist     2    0        int 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2  122[BANK0 ] int 
  2724 ;; Registers used:
  2725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;Total ram usage:       14 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:   15
  2738 ;; This function calls:
  2739 ;;		_abs
  2740 ;;		_lcdInst
  2741 ;;		_min
  2742 ;;		_print_echo
  2743 ;;		_printf
  2744 ;;		_trig
  2745 ;; This function is called by:
  2746 ;;		_main
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text1
  2751  002476                     __ptext1:
  2752                           	opt callstack 0
  2753  002476                     _ultrasonic_main:
  2754                           	opt callstack 15
  2755                           
  2756                           ;main.c: 292:     TRISBbits.RB0 = 0;
  2757                           
  2758                           ; BSR set to: 2
  2759                           ;incstack = 0
  2760  002476  9093               	bcf	3987,0,c	;volatile
  2761                           
  2762                           ;main.c: 293:     LATBbits.LATB0 = 1;
  2763  002478  808A               	bsf	3978,0,c	;volatile
  2764                           
  2765                           ;main.c: 295:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2766  00247A  0E01               	movlw	1
  2767  00247C  EC9E  F01D         	call	_lcdInst
  2768  002480  0E11               	movlw	17
  2769  002482  0100               	movlb	0	; () banked
  2770  002484  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2771  002486  0E3A               	movlw	58
  2772  002488                     u8837:
  2773  002488  2EE8               	decfsz	wreg,f,c
  2774  00248A  D7FE               	bra	u8837
  2775  00248C  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2776  00248E  D7FC               	bra	u8837
  2777  002490  F000               	nop	
  2778                           
  2779                           ;main.c: 296:     printf("or here");
  2780  002492  0EE7               	movlw	low STR_18
  2781  002494  0100               	movlb	0	; () banked
  2782  002496  6FED               	movwf	printf@fmt& (0+255),b
  2783  002498  0EFF               	movlw	high STR_18
  2784  00249A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2785  00249C  EC38  F01D         	call	_printf	;wreg free
  2786                           
  2787                           ;main.c: 297:  TRISB = 0b11110000;
  2788  0024A0  0EF0               	movlw	240
  2789  0024A2  6E93               	movwf	3987,c	;volatile
  2790                           
  2791                           ;main.c: 298:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2792  0024A4  0E01               	movlw	1
  2793  0024A6  EC9E  F01D         	call	_lcdInst
  2794  0024AA  0E11               	movlw	17
  2795  0024AC  0100               	movlb	0	; () banked
  2796  0024AE  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2797  0024B0  0E3A               	movlw	58
  2798  0024B2                     u8847:
  2799  0024B2  2EE8               	decfsz	wreg,f,c
  2800  0024B4  D7FE               	bra	u8847
  2801  0024B6  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2802  0024B8  D7FC               	bra	u8847
  2803  0024BA  F000               	nop	
  2804                           
  2805                           ;main.c: 299:     printf("break heree?");
  2806  0024BC  0EEB               	movlw	low STR_19
  2807  0024BE  0100               	movlb	0	; () banked
  2808  0024C0  6FED               	movwf	printf@fmt& (0+255),b
  2809  0024C2  0EFE               	movlw	high STR_19
  2810  0024C4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2811  0024C6  EC38  F01D         	call	_printf	;wreg free
  2812                           
  2813                           ;main.c: 300:     RBIF = 0;
  2814  0024CA  90F2               	bcf	4082,0,c	;volatile
  2815                           
  2816                           ;main.c: 301:  RBIE = 1;
  2817  0024CC  86F2               	bsf	4082,3,c	;volatile
  2818                           
  2819                           ;main.c: 303:     int sensed = 0;
  2820  0024CE  0E00               	movlw	0
  2821  0024D0  0101               	movlb	1	; () banked
  2822  0024D2  6F03               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2823  0024D4  0E00               	movlw	0
  2824  0024D6  6F02               	movwf	ultrasonic_main@sensed& (0+255),b
  2825                           
  2826                           ;main.c: 305:     int steps2_adj=0;
  2827  0024D8  0E00               	movlw	0
  2828  0024DA  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2829  0024DC  0E00               	movlw	0
  2830  0024DE  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2831                           
  2832                           ;main.c: 306:     int step2_offset=0;
  2833  0024E0  0E00               	movlw	0
  2834  0024E2  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2835  0024E4  0E00               	movlw	0
  2836  0024E6  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2837                           
  2838                           ;main.c: 307:     while(send){
  2839  0024E8  D070               	goto	l433
  2840  0024EA                     l7504:
  2841                           
  2842                           ; BSR set to: 1
  2843                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  2844  0024EA  0E00               	movlw	0
  2845  0024EC  6E51               	movwf	_meas+1,c	;volatile
  2846  0024EE  0E00               	movlw	0
  2847  0024F0  6E50               	movwf	_meas,c	;volatile
  2848  0024F2                     l7506:
  2849                           
  2850                           ; BSR set to: 1
  2851  0024F2  BE51               	btfsc	_meas+1,7,c	;volatile
  2852  0024F4  D006               	goto	l7510
  2853  0024F6  5051               	movf	_meas+1,w,c	;volatile
  2854  0024F8  E160               	bnz	l7542
  2855  0024FA  0E03               	movlw	3
  2856  0024FC  5C50               	subwf	_meas,w,c	;volatile
  2857  0024FE  B0D8               	btfsc	status,0,c
  2858  002500  D05C               	goto	l7542
  2859  002502                     l7510:
  2860                           
  2861                           ; BSR set to: 1
  2862                           ;main.c: 309:         trig();
  2863  002502  ECAE  F016         	call	_trig	;wreg free
  2864                           
  2865                           ;main.c: 310:         RBIE = 0;
  2866  002506  96F2               	bcf	4082,3,c	;volatile
  2867                           
  2868                           ;main.c: 311:         print_echo();
  2869  002508  EC44  F011         	call	_print_echo	;wreg free
  2870                           
  2871                           ;main.c: 312:         RBIE = 1;
  2872  00250C  86F2               	bsf	4082,3,c	;volatile
  2873                           
  2874                           ;main.c: 313:         int min_us_dist = min(a, 4);
  2875  00250E  0E61               	movlw	low _a
  2876  002510  0100               	movlb	0	; () banked
  2877  002512  6F80               	movwf	min@array& (0+255),b
  2878  002514  0E00               	movlw	high _a
  2879  002516  6F81               	movwf	(min@array+1)& (0+255),b
  2880  002518  0E00               	movlw	0
  2881  00251A  6F83               	movwf	(min@size+1)& (0+255),b
  2882  00251C  0E04               	movlw	4
  2883  00251E  6F82               	movwf	min@size& (0+255),b
  2884  002520  EC26  F016         	call	_min	;wreg free
  2885  002524  C080  F108         	movff	?_min,ultrasonic_main@min_us_dist_914
  2886  002528  C081  F109         	movff	?_min+1,ultrasonic_main@min_us_dist_914+1
  2887                           
  2888                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2889  00252C  0E01               	movlw	1
  2890  00252E  EC9E  F01D         	call	_lcdInst
  2891  002532  0E11               	movlw	17
  2892  002534  0100               	movlb	0	; () banked
  2893  002536  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2894  002538  0E3A               	movlw	58
  2895  00253A                     u8857:
  2896  00253A  2EE8               	decfsz	wreg,f,c
  2897  00253C  D7FE               	bra	u8857
  2898  00253E  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2899  002540  D7FC               	bra	u8857
  2900  002542  F000               	nop	
  2901                           
  2902                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  2903  002544  0E59               	movlw	low STR_20
  2904  002546  0100               	movlb	0	; () banked
  2905  002548  6FED               	movwf	printf@fmt& (0+255),b
  2906  00254A  0EFF               	movlw	high STR_20
  2907  00254C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2908  00254E  C108  F0EF         	movff	ultrasonic_main@min_us_dist_914,?_printf+2
  2909  002552  C109  F0F0         	movff	ultrasonic_main@min_us_dist_914+1,?_printf+3
  2910  002556  EC38  F01D         	call	_printf	;wreg free
  2911                           
  2912                           ;main.c: 317:         if (min_us_dist<14){
  2913  00255A  0101               	movlb	1	; () banked
  2914  00255C  BF09               	btfsc	(ultrasonic_main@min_us_dist_914+1)& (0+255),7,b
  2915  00255E  D006               	goto	u8000
  2916  002560  5109               	movf	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2917  002562  E108               	bnz	l7530
  2918  002564  0E0E               	movlw	14
  2919  002566  5D08               	subwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2920  002568  B0D8               	btfsc	status,0,c
  2921  00256A  D004               	goto	l7530
  2922  00256C                     u8000:
  2923                           
  2924                           ; BSR set to: 1
  2925                           ;main.c: 318:             step2_offset = 0;
  2926  00256C  0E00               	movlw	0
  2927  00256E  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2928  002570  0E00               	movlw	0
  2929  002572  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2930  002574                     l7530:
  2931                           
  2932                           ; BSR set to: 1
  2933                           ;main.c: 320:         if (min_us_dist>=14){
  2934  002574  BF09               	btfsc	(ultrasonic_main@min_us_dist_914+1)& (0+255),7,b
  2935  002576  D015               	goto	l7534
  2936  002578  5109               	movf	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2937  00257A  E104               	bnz	u8010
  2938  00257C  0E0E               	movlw	14
  2939  00257E  5D08               	subwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2940  002580  A0D8               	btfss	status,0,c
  2941  002582  D00F               	goto	l7534
  2942  002584                     u8010:
  2943                           
  2944                           ; BSR set to: 1
  2945                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  2946  002584  0EF2               	movlw	242
  2947  002586  2508               	addwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2948  002588  0100               	movlb	0	; () banked
  2949  00258A  6F92               	movwf	abs@a& (0+255),b
  2950  00258C  0EFF               	movlw	255
  2951  00258E  0101               	movlb	1	; () banked
  2952  002590  2109               	addwfc	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2953  002592  0100               	movlb	0	; () banked
  2954  002594  6F93               	movwf	(abs@a+1)& (0+255),b
  2955  002596  EC61  F01C         	call	_abs	;wreg free
  2956  00259A  C092  F104         	movff	?_abs,ultrasonic_main@step2_offset
  2957  00259E  C093  F105         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  2958  0025A2                     l7534:
  2959                           
  2960                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  2961  0025A2  0E6E               	movlw	110
  2962  0025A4  0101               	movlb	1	; () banked
  2963  0025A6  2504               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  2964  0025A8  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2965  0025AA  0E00               	movlw	0
  2966  0025AC  2105               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  2967  0025AE  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2968                           
  2969                           ; BSR set to: 1
  2970                           ;main.c: 324:         sensed++;
  2971  0025B0  4B02               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  2972  0025B2  2B03               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;main.c: 327:         }
  2976  0025B4  4A50               	infsnz	_meas,f,c	;volatile
  2977  0025B6  2A51               	incf	_meas+1,f,c	;volatile
  2978  0025B8  D79C               	goto	l7506
  2979  0025BA                     l7542:
  2980                           
  2981                           ; BSR set to: 1
  2982                           ;main.c: 328:         if (sensed>2){
  2983  0025BA  BF03               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  2984  0025BC  D006               	goto	l433
  2985  0025BE  5103               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  2986  0025C0  E107               	bnz	l7548
  2987  0025C2  0E03               	movlw	3
  2988  0025C4  5D02               	subwf	ultrasonic_main@sensed& (0+255),w,b
  2989  0025C6  B0D8               	btfsc	status,0,c
  2990  0025C8  D003               	goto	u8030
  2991  0025CA                     l433:
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;main.c: 307:     while(send){
  2995  0025CA  506D               	movf	_send,w,c
  2996  0025CC  A4D8               	btfss	status,2,c
  2997  0025CE  D78D               	goto	l7504
  2998  0025D0                     u8030:
  2999  0025D0                     l7548:
  3000                           
  3001                           ; BSR set to: 1
  3002                           ;main.c: 375:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3003  0025D0  0E01               	movlw	1
  3004  0025D2  EC9E  F01D         	call	_lcdInst
  3005  0025D6  0E11               	movlw	17
  3006  0025D8  0100               	movlb	0	; () banked
  3007  0025DA  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3008  0025DC  0E3A               	movlw	58
  3009  0025DE                     u8867:
  3010  0025DE  2EE8               	decfsz	wreg,f,c
  3011  0025E0  D7FE               	bra	u8867
  3012  0025E2  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3013  0025E4  D7FC               	bra	u8867
  3014  0025E6  F000               	nop	
  3015                           
  3016                           ;main.c: 376:     printf("stepsadj %d", steps2_adj);
  3017  0025E8  0E1E               	movlw	low STR_21
  3018  0025EA  0100               	movlb	0	; () banked
  3019  0025EC  6FED               	movwf	printf@fmt& (0+255),b
  3020  0025EE  0EFF               	movlw	high STR_21
  3021  0025F0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3022  0025F2  C106  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3023  0025F6  C107  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3024  0025FA  EC38  F01D         	call	_printf	;wreg free
  3025                           
  3026                           ;main.c: 377:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3027  0025FE  0E0D               	movlw	13
  3028  002600  0100               	movlb	0	; () banked
  3029  002602  6FFD               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3030  002604  0EAF               	movlw	175
  3031  002606  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3032  002608  0EB6               	movlw	182
  3033  00260A                     u8877:
  3034  00260A  2EE8               	decfsz	wreg,f,c
  3035  00260C  D7FE               	bra	u8877
  3036  00260E  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3037  002610  D7FC               	bra	u8877
  3038  002612  2FFD               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3039  002614  D7FA               	bra	u8877
  3040  002616  F000               	nop	
  3041                           
  3042                           ;main.c: 378:     return steps2_adj;
  3043  002618  C106  F0FA         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3044  00261C  C107  F0FB         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3045  002620  0012               	return		;funcret
  3046  002622                     __end_of_ultrasonic_main:
  3047                           	opt callstack 0
  3048                           
  3049 ;; *************** function _trig *****************
  3050 ;; Defined at:
  3051 ;;		line 190 in file "main.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;Total ram usage:        2 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    3
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_ultrasonic_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text2
  3080  002D5C                     __ptext2:
  3081                           	opt callstack 0
  3082  002D5C                     _trig:
  3083                           	opt callstack 26
  3084                           
  3085                           ;main.c: 191:     for(b=1; b<5; b++){
  3086                           
  3087                           ;incstack = 0
  3088  002D5C  0E00               	movlw	0
  3089  002D5E  6E5B               	movwf	_b+1,c
  3090  002D60  0E01               	movlw	1
  3091  002D62  6E5A               	movwf	_b,c
  3092  002D64  BE5B               	btfsc	_b+1,7,c
  3093  002D66  D004               	goto	l7198
  3094  002D68  505B               	movf	_b+1,w,c
  3095  002D6A  E101               	bnz	u7590
  3096  002D6C  D072               	goto	L1
  3097  002D6E                     u7590:
  3098  002D6E  0012               	return	
  3099  002D70                     l7198:
  3100                           
  3101                           ;main.c: 192:         TMR1H = 0;
  3102  002D70  0E00               	movlw	0
  3103  002D72  6ECF               	movwf	4047,c	;volatile
  3104                           
  3105                           ;main.c: 193:         TMR1L = 0;
  3106  002D74  0E00               	movlw	0
  3107  002D76  6ECE               	movwf	4046,c	;volatile
  3108                           
  3109                           ;main.c: 194:         if(b==1){
  3110  002D78  045A               	decf	_b,w,c
  3111  002D7A  105B               	iorwf	_b+1,w,c
  3112  002D7C  A4D8               	btfss	status,2,c
  3113  002D7E  D015               	goto	l7210
  3114                           
  3115                           ;main.c: 195:             RBIE = 0;
  3116  002D80  96F2               	bcf	4082,3,c	;volatile
  3117                           
  3118                           ;main.c: 196:             RD1 = 1;
  3119  002D82  8283               	bsf	3971,1,c	;volatile
  3120                           
  3121                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3122  002D84  0E08               	movlw	8
  3123  002D86                     u8887:
  3124  002D86  2EE8               	decfsz	wreg,f,c
  3125  002D88  D7FE               	bra	u8887
  3126  002D8A  F000               	nop	
  3127                           
  3128                           ;main.c: 198:             RD1 = 0;
  3129  002D8C  9283               	bcf	3971,1,c	;volatile
  3130                           
  3131                           ;main.c: 200:             RBIE = 1;
  3132  002D8E  86F2               	bsf	4082,3,c	;volatile
  3133                           
  3134                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3135  002D90  0E02               	movlw	2
  3136  002D92  0100               	movlb	0	; () banked
  3137  002D94  6F81               	movwf	(??_trig+1)& (0+255),b
  3138  002D96  0EB7               	movlw	183
  3139  002D98  6F80               	movwf	??_trig& (0+255),b
  3140  002D9A  0E4C               	movlw	76
  3141  002D9C                     u8897:
  3142  002D9C  2EE8               	decfsz	wreg,f,c
  3143  002D9E  D7FE               	bra	u8897
  3144  002DA0  2F80               	decfsz	??_trig& (0+255),f,b
  3145  002DA2  D7FC               	bra	u8897
  3146  002DA4  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3147  002DA6  D7FA               	bra	u8897
  3148  002DA8  F000               	nop	
  3149  002DAA                     l7210:
  3150                           
  3151                           ;main.c: 203:         if(b==2){
  3152  002DAA  0E02               	movlw	2
  3153  002DAC  185A               	xorwf	_b,w,c
  3154  002DAE  105B               	iorwf	_b+1,w,c
  3155  002DB0  A4D8               	btfss	status,2,c
  3156  002DB2  D015               	goto	l7220
  3157                           
  3158                           ;main.c: 204:             RBIE = 0;
  3159  002DB4  96F2               	bcf	4082,3,c	;volatile
  3160                           
  3161                           ;main.c: 205:             RD0 = 1;
  3162  002DB6  8083               	bsf	3971,0,c	;volatile
  3163                           
  3164                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3165  002DB8  0E08               	movlw	8
  3166  002DBA                     u8907:
  3167  002DBA  2EE8               	decfsz	wreg,f,c
  3168  002DBC  D7FE               	bra	u8907
  3169  002DBE  F000               	nop	
  3170                           
  3171                           ;main.c: 207:             RD0 = 0;
  3172  002DC0  9083               	bcf	3971,0,c	;volatile
  3173                           
  3174                           ;main.c: 209:             RBIE = 1;
  3175  002DC2  86F2               	bsf	4082,3,c	;volatile
  3176                           
  3177                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3178  002DC4  0E02               	movlw	2
  3179  002DC6  0100               	movlb	0	; () banked
  3180  002DC8  6F81               	movwf	(??_trig+1)& (0+255),b
  3181  002DCA  0EB7               	movlw	183
  3182  002DCC  6F80               	movwf	??_trig& (0+255),b
  3183  002DCE  0E4C               	movlw	76
  3184  002DD0                     u8917:
  3185  002DD0  2EE8               	decfsz	wreg,f,c
  3186  002DD2  D7FE               	bra	u8917
  3187  002DD4  2F80               	decfsz	??_trig& (0+255),f,b
  3188  002DD6  D7FC               	bra	u8917
  3189  002DD8  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3190  002DDA  D7FA               	bra	u8917
  3191  002DDC  F000               	nop	
  3192  002DDE                     l7220:
  3193                           
  3194                           ;main.c: 212:         if(b==3){
  3195  002DDE  0E03               	movlw	3
  3196  002DE0  185A               	xorwf	_b,w,c
  3197  002DE2  105B               	iorwf	_b+1,w,c
  3198  002DE4  A4D8               	btfss	status,2,c
  3199  002DE6  D015               	goto	l7230
  3200                           
  3201                           ;main.c: 213:             RBIE = 0;
  3202  002DE8  96F2               	bcf	4082,3,c	;volatile
  3203                           
  3204                           ;main.c: 214:             RB3 = 1;
  3205  002DEA  8681               	bsf	3969,3,c	;volatile
  3206                           
  3207                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3208  002DEC  0E08               	movlw	8
  3209  002DEE                     u8927:
  3210  002DEE  2EE8               	decfsz	wreg,f,c
  3211  002DF0  D7FE               	bra	u8927
  3212  002DF2  F000               	nop	
  3213                           
  3214                           ;main.c: 216:             RB3 = 0;
  3215  002DF4  9681               	bcf	3969,3,c	;volatile
  3216                           
  3217                           ;main.c: 218:             RBIE = 1;
  3218  002DF6  86F2               	bsf	4082,3,c	;volatile
  3219                           
  3220                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3221  002DF8  0E02               	movlw	2
  3222  002DFA  0100               	movlb	0	; () banked
  3223  002DFC  6F81               	movwf	(??_trig+1)& (0+255),b
  3224  002DFE  0EB7               	movlw	183
  3225  002E00  6F80               	movwf	??_trig& (0+255),b
  3226  002E02  0E4C               	movlw	76
  3227  002E04                     u8937:
  3228  002E04  2EE8               	decfsz	wreg,f,c
  3229  002E06  D7FE               	bra	u8937
  3230  002E08  2F80               	decfsz	??_trig& (0+255),f,b
  3231  002E0A  D7FC               	bra	u8937
  3232  002E0C  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3233  002E0E  D7FA               	bra	u8937
  3234  002E10  F000               	nop	
  3235  002E12                     l7230:
  3236                           
  3237                           ;main.c: 221:         if(b==4){
  3238  002E12  0E04               	movlw	4
  3239  002E14  185A               	xorwf	_b,w,c
  3240  002E16  105B               	iorwf	_b+1,w,c
  3241  002E18  A4D8               	btfss	status,2,c
  3242  002E1A  D015               	goto	l7240
  3243                           
  3244                           ;main.c: 222:             RBIE = 0;
  3245  002E1C  96F2               	bcf	4082,3,c	;volatile
  3246                           
  3247                           ;main.c: 223:             RB2 = 1;
  3248  002E1E  8481               	bsf	3969,2,c	;volatile
  3249                           
  3250                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3251  002E20  0E08               	movlw	8
  3252  002E22                     u8947:
  3253  002E22  2EE8               	decfsz	wreg,f,c
  3254  002E24  D7FE               	bra	u8947
  3255  002E26  F000               	nop	
  3256                           
  3257                           ;main.c: 225:             RB2 = 0;
  3258  002E28  9481               	bcf	3969,2,c	;volatile
  3259                           
  3260                           ;main.c: 227:             RBIE = 1;
  3261  002E2A  86F2               	bsf	4082,3,c	;volatile
  3262                           
  3263                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3264  002E2C  0E02               	movlw	2
  3265  002E2E  0100               	movlb	0	; () banked
  3266  002E30  6F81               	movwf	(??_trig+1)& (0+255),b
  3267  002E32  0EB7               	movlw	183
  3268  002E34  6F80               	movwf	??_trig& (0+255),b
  3269  002E36  0E4C               	movlw	76
  3270  002E38                     u8957:
  3271  002E38  2EE8               	decfsz	wreg,f,c
  3272  002E3A  D7FE               	bra	u8957
  3273  002E3C  2F80               	decfsz	??_trig& (0+255),f,b
  3274  002E3E  D7FC               	bra	u8957
  3275  002E40  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3276  002E42  D7FA               	bra	u8957
  3277  002E44  F000               	nop	
  3278  002E46                     l7240:
  3279                           
  3280                           ;main.c: 230:     }
  3281  002E46  4A5A               	infsnz	_b,f,c
  3282  002E48  2A5B               	incf	_b+1,f,c
  3283  002E4A  BE5B               	btfsc	_b+1,7,c
  3284  002E4C  D791               	goto	l7198
  3285  002E4E  505B               	movf	_b+1,w,c
  3286  002E50  E105               	bnz	u7640
  3287  002E52                     L1:
  3288  002E52  0E05               	movlw	5
  3289  002E54  5C5A               	subwf	_b,w,c
  3290  002E56  B0D8               	btfsc	status,0,c
  3291  002E58  0012               	return	
  3292  002E5A  D78A               	goto	l7198
  3293  002E5C                     u7640:
  3294  002E5C  0012               	return		;funcret
  3295  002E5E                     __end_of_trig:
  3296                           	opt callstack 0
  3297                           
  3298 ;; *************** function _print_echo *****************
  3299 ;; Defined at:
  3300 ;;		line 233 in file "main.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;Total ram usage:        1 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:   14
  3321 ;; This function calls:
  3322 ;;		_lcdInst
  3323 ;;		_printf
  3324 ;; This function is called by:
  3325 ;;		_ultrasonic_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text3
  3330  002288                     __ptext3:
  3331                           	opt callstack 0
  3332  002288                     _print_echo:
  3333                           	opt callstack 15
  3334                           
  3335                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3336                           
  3337                           ;incstack = 0
  3338  002288  0E01               	movlw	1
  3339  00228A  EC9E  F01D         	call	_lcdInst
  3340  00228E  0E11               	movlw	17
  3341  002290  0100               	movlb	0	; () banked
  3342  002292  6FF9               	movwf	??_print_echo& (0+255),b
  3343  002294  0E3A               	movlw	58
  3344  002296                     u8967:
  3345  002296  2EE8               	decfsz	wreg,f,c
  3346  002298  D7FE               	bra	u8967
  3347  00229A  2FF9               	decfsz	??_print_echo& (0+255),f,b
  3348  00229C  D7FC               	bra	u8967
  3349  00229E  F000               	nop	
  3350                           
  3351                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3352  0022A0  BE62               	btfsc	_a+1,7,c
  3353  0022A2  D01D               	goto	l7252
  3354  0022A4  5062               	movf	_a+1,w,c
  3355  0022A6  E104               	bnz	u7650
  3356  0022A8  0E02               	movlw	2
  3357  0022AA  5C61               	subwf	_a,w,c
  3358  0022AC  A0D8               	btfss	status,0,c
  3359  0022AE  D017               	goto	l7252
  3360  0022B0                     u7650:
  3361  0022B0  BE62               	btfsc	_a+1,7,c
  3362  0022B2  D006               	goto	u7660
  3363  0022B4  0E91               	movlw	145
  3364  0022B6  5C61               	subwf	_a,w,c
  3365  0022B8  0E01               	movlw	1
  3366  0022BA  5862               	subwfb	_a+1,w,c
  3367  0022BC  B0D8               	btfsc	status,0,c
  3368  0022BE  D00F               	goto	l7252
  3369  0022C0                     u7660:
  3370                           
  3371                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3372  0022C0  0E02               	movlw	low STR_10
  3373  0022C2  0100               	movlb	0	; () banked
  3374  0022C4  6FED               	movwf	printf@fmt& (0+255),b
  3375  0022C6  0EFE               	movlw	high STR_10
  3376  0022C8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3377  0022CA  C061  F0EF         	movff	_a,?_printf+2
  3378  0022CE  C062  F0F0         	movff	_a+1,?_printf+3
  3379  0022D2  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3380  0022D6  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3381  0022DA  EC38  F01D         	call	_printf	;wreg free
  3382  0022DE                     l7252:
  3383                           
  3384                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3385  0022DE  BE62               	btfsc	_a+1,7,c
  3386  0022E0  D00E               	goto	u7680
  3387  0022E2  5062               	movf	_a+1,w,c
  3388  0022E4  E104               	bnz	u7670
  3389  0022E6  0E02               	movlw	2
  3390  0022E8  5C61               	subwf	_a,w,c
  3391  0022EA  A0D8               	btfss	status,0,c
  3392  0022EC  D008               	goto	u7680
  3393  0022EE                     u7670:
  3394  0022EE  BE62               	btfsc	_a+1,7,c
  3395  0022F0  D00D               	goto	l7258
  3396  0022F2  0E91               	movlw	145
  3397  0022F4  5C61               	subwf	_a,w,c
  3398  0022F6  0E01               	movlw	1
  3399  0022F8  5862               	subwfb	_a+1,w,c
  3400  0022FA  A0D8               	btfss	status,0,c
  3401  0022FC  D007               	goto	l7258
  3402  0022FE                     u7680:
  3403                           
  3404                           ;main.c: 239:         printf("Dist1 = X");
  3405  0022FE  0E7A               	movlw	low STR_11
  3406  002300  0100               	movlb	0	; () banked
  3407  002302  6FED               	movwf	printf@fmt& (0+255),b
  3408  002304  0EFF               	movlw	high STR_11
  3409  002306  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3410  002308  EC38  F01D         	call	_printf	;wreg free
  3411  00230C                     l7258:
  3412                           
  3413                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3414  00230C  BE64               	btfsc	_a+3,7,c
  3415  00230E  D020               	goto	l7266
  3416  002310  5064               	movf	_a+3,w,c
  3417  002312  E104               	bnz	u7690
  3418  002314  0E02               	movlw	2
  3419  002316  5C63               	subwf	_a+2,w,c
  3420  002318  A0D8               	btfss	status,0,c
  3421  00231A  D01A               	goto	l7266
  3422  00231C                     u7690:
  3423  00231C  BE64               	btfsc	_a+3,7,c
  3424  00231E  D006               	goto	u7700
  3425  002320  0E91               	movlw	145
  3426  002322  5C63               	subwf	_a+2,w,c
  3427  002324  0E01               	movlw	1
  3428  002326  5864               	subwfb	_a+3,w,c
  3429  002328  B0D8               	btfsc	status,0,c
  3430  00232A  D012               	goto	l7266
  3431  00232C                     u7700:
  3432  00232C  0EC0               	movlw	192
  3433  00232E  EC9E  F01D         	call	_lcdInst
  3434                           
  3435                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3436  002332  0E56               	movlw	low STR_12
  3437  002334  0100               	movlb	0	; () banked
  3438  002336  6FED               	movwf	printf@fmt& (0+255),b
  3439  002338  0EFE               	movlw	high STR_12
  3440  00233A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3441  00233C  C063  F0EF         	movff	_a+2,?_printf+2
  3442  002340  C064  F0F0         	movff	_a+3,?_printf+3
  3443  002344  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3444  002348  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3445  00234C  EC38  F01D         	call	_printf	;wreg free
  3446  002350                     l7266:
  3447                           
  3448                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3449  002350  BE64               	btfsc	_a+3,7,c
  3450  002352  D00E               	goto	u7720
  3451  002354  5064               	movf	_a+3,w,c
  3452  002356  E104               	bnz	u7710
  3453  002358  0E02               	movlw	2
  3454  00235A  5C63               	subwf	_a+2,w,c
  3455  00235C  A0D8               	btfss	status,0,c
  3456  00235E  D008               	goto	u7720
  3457  002360                     u7710:
  3458  002360  BE64               	btfsc	_a+3,7,c
  3459  002362  D010               	goto	l7274
  3460  002364  0E91               	movlw	145
  3461  002366  5C63               	subwf	_a+2,w,c
  3462  002368  0E01               	movlw	1
  3463  00236A  5864               	subwfb	_a+3,w,c
  3464  00236C  A0D8               	btfss	status,0,c
  3465  00236E  D00A               	goto	l7274
  3466  002370                     u7720:
  3467  002370  0EC0               	movlw	192
  3468  002372  EC9E  F01D         	call	_lcdInst
  3469                           
  3470                           ;main.c: 247:         printf("Dist2 = X");
  3471  002376  0E84               	movlw	low STR_13
  3472  002378  0100               	movlb	0	; () banked
  3473  00237A  6FED               	movwf	printf@fmt& (0+255),b
  3474  00237C  0EFF               	movlw	high STR_13
  3475  00237E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3476  002380  EC38  F01D         	call	_printf	;wreg free
  3477  002384                     l7274:
  3478                           
  3479                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3480  002384  BE66               	btfsc	_a+5,7,c
  3481  002386  D020               	goto	l7282
  3482  002388  5066               	movf	_a+5,w,c
  3483  00238A  E104               	bnz	u7730
  3484  00238C  0E02               	movlw	2
  3485  00238E  5C65               	subwf	_a+4,w,c
  3486  002390  A0D8               	btfss	status,0,c
  3487  002392  D01A               	goto	l7282
  3488  002394                     u7730:
  3489  002394  BE66               	btfsc	_a+5,7,c
  3490  002396  D006               	goto	u7740
  3491  002398  0E91               	movlw	145
  3492  00239A  5C65               	subwf	_a+4,w,c
  3493  00239C  0E01               	movlw	1
  3494  00239E  5866               	subwfb	_a+5,w,c
  3495  0023A0  B0D8               	btfsc	status,0,c
  3496  0023A2  D012               	goto	l7282
  3497  0023A4                     u7740:
  3498  0023A4  0E90               	movlw	144
  3499  0023A6  EC9E  F01D         	call	_lcdInst
  3500                           
  3501                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3502  0023AA  0E66               	movlw	low STR_14
  3503  0023AC  0100               	movlb	0	; () banked
  3504  0023AE  6FED               	movwf	printf@fmt& (0+255),b
  3505  0023B0  0EFE               	movlw	high STR_14
  3506  0023B2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3507  0023B4  C065  F0EF         	movff	_a+4,?_printf+2
  3508  0023B8  C066  F0F0         	movff	_a+5,?_printf+3
  3509  0023BC  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3510  0023C0  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3511  0023C4  EC38  F01D         	call	_printf	;wreg free
  3512  0023C8                     l7282:
  3513                           
  3514                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3515  0023C8  BE66               	btfsc	_a+5,7,c
  3516  0023CA  D00E               	goto	u7760
  3517  0023CC  5066               	movf	_a+5,w,c
  3518  0023CE  E104               	bnz	u7750
  3519  0023D0  0E02               	movlw	2
  3520  0023D2  5C65               	subwf	_a+4,w,c
  3521  0023D4  A0D8               	btfss	status,0,c
  3522  0023D6  D008               	goto	u7760
  3523  0023D8                     u7750:
  3524  0023D8  BE66               	btfsc	_a+5,7,c
  3525  0023DA  D010               	goto	l7290
  3526  0023DC  0E91               	movlw	145
  3527  0023DE  5C65               	subwf	_a+4,w,c
  3528  0023E0  0E01               	movlw	1
  3529  0023E2  5866               	subwfb	_a+5,w,c
  3530  0023E4  A0D8               	btfss	status,0,c
  3531  0023E6  D00A               	goto	l7290
  3532  0023E8                     u7760:
  3533  0023E8  0E90               	movlw	144
  3534  0023EA  EC9E  F01D         	call	_lcdInst
  3535                           
  3536                           ;main.c: 255:         printf("Dist3 = X");
  3537  0023EE  0E8E               	movlw	low STR_15
  3538  0023F0  0100               	movlb	0	; () banked
  3539  0023F2  6FED               	movwf	printf@fmt& (0+255),b
  3540  0023F4  0EFF               	movlw	high STR_15
  3541  0023F6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3542  0023F8  EC38  F01D         	call	_printf	;wreg free
  3543  0023FC                     l7290:
  3544                           
  3545                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3546  0023FC  BE68               	btfsc	_a+7,7,c
  3547  0023FE  D020               	goto	l7298
  3548  002400  5068               	movf	_a+7,w,c
  3549  002402  E104               	bnz	u7770
  3550  002404  0E02               	movlw	2
  3551  002406  5C67               	subwf	_a+6,w,c
  3552  002408  A0D8               	btfss	status,0,c
  3553  00240A  D01A               	goto	l7298
  3554  00240C                     u7770:
  3555  00240C  BE68               	btfsc	_a+7,7,c
  3556  00240E  D006               	goto	u7780
  3557  002410  0E91               	movlw	145
  3558  002412  5C67               	subwf	_a+6,w,c
  3559  002414  0E01               	movlw	1
  3560  002416  5868               	subwfb	_a+7,w,c
  3561  002418  B0D8               	btfsc	status,0,c
  3562  00241A  D012               	goto	l7298
  3563  00241C                     u7780:
  3564  00241C  0ED0               	movlw	208
  3565  00241E  EC9E  F01D         	call	_lcdInst
  3566                           
  3567                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3568  002422  0E13               	movlw	low STR_16
  3569  002424  0100               	movlb	0	; () banked
  3570  002426  6FED               	movwf	printf@fmt& (0+255),b
  3571  002428  0EFE               	movlw	high STR_16
  3572  00242A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3573  00242C  C067  F0EF         	movff	_a+6,?_printf+2
  3574  002430  C068  F0F0         	movff	_a+7,?_printf+3
  3575  002434  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3576  002438  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3577  00243C  EC38  F01D         	call	_printf	;wreg free
  3578  002440                     l7298:
  3579                           
  3580                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3581  002440  BE68               	btfsc	_a+7,7,c
  3582  002442  D00E               	goto	u7800
  3583  002444  5068               	movf	_a+7,w,c
  3584  002446  E104               	bnz	u7790
  3585  002448  0E02               	movlw	2
  3586  00244A  5C67               	subwf	_a+6,w,c
  3587  00244C  A0D8               	btfss	status,0,c
  3588  00244E  D008               	goto	u7800
  3589  002450                     u7790:
  3590  002450  BE68               	btfsc	_a+7,7,c
  3591  002452  0012               	return	
  3592  002454  0E91               	movlw	145
  3593  002456  5C67               	subwf	_a+6,w,c
  3594  002458  0E01               	movlw	1
  3595  00245A  5868               	subwfb	_a+7,w,c
  3596  00245C  A0D8               	btfss	status,0,c
  3597  00245E  0012               	return	
  3598  002460                     u7800:
  3599  002460  0ED0               	movlw	208
  3600  002462  EC9E  F01D         	call	_lcdInst
  3601                           
  3602                           ;main.c: 264:         printf("Dist4 = X");
  3603  002466  0E98               	movlw	low STR_17
  3604  002468  0100               	movlb	0	; () banked
  3605  00246A  6FED               	movwf	printf@fmt& (0+255),b
  3606  00246C  0EFF               	movlw	high STR_17
  3607  00246E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3608  002470  EC38  F01D         	call	_printf	;wreg free
  3609  002474  0012               	return		;funcret
  3610  002476                     __end_of_print_echo:
  3611                           	opt callstack 0
  3612                           
  3613 ;; *************** function _min *****************
  3614 ;; Defined at:
  3615 ;;		line 267 in file "main.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  array           2    0[BANK0 ] PTR int 
  3618 ;;		 -> a(8), 
  3619 ;;  size            2    2[BANK0 ] int 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  i               2    9[BANK0 ] int 
  3622 ;;  minimum         2    7[BANK0 ] int 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  2    0[BANK0 ] int 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;Total ram usage:       11 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    3
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_ultrasonic_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text4
  3647  002C4C                     __ptext4:
  3648                           	opt callstack 0
  3649  002C4C                     _min:
  3650                           	opt callstack 26
  3651                           
  3652                           ;main.c: 268:     int minimum =0 ;
  3653                           
  3654                           ;incstack = 0
  3655  002C4C  0E00               	movlw	0
  3656  002C4E  0100               	movlb	0	; () banked
  3657  002C50  6F88               	movwf	(min@minimum+1)& (0+255),b
  3658  002C52  0E00               	movlw	0
  3659  002C54  6F87               	movwf	min@minimum& (0+255),b
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;main.c: 269:     if (array[0]<=23){
  3663  002C56  C080  FFD9         	movff	min@array,fsr2l
  3664  002C5A  C081  FFDA         	movff	min@array+1,fsr2h
  3665  002C5E  0E01               	movlw	1
  3666  002C60  BEDB               	btfsc	plusw2,7,c
  3667  002C62  D007               	goto	u7810
  3668  002C64  0E01               	movlw	1
  3669  002C66  50DB               	movf	plusw2,w,c
  3670  002C68  E10C               	bnz	l7312
  3671  002C6A  0E18               	movlw	24
  3672  002C6C  5CDE               	subwf	postinc2,w,c
  3673  002C6E  B0D8               	btfsc	status,0,c
  3674  002C70  D008               	goto	l7312
  3675  002C72                     u7810:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;main.c: 270:          minimum = array[0];}
  3679  002C72  C080  FFD9         	movff	min@array,fsr2l
  3680  002C76  C081  FFDA         	movff	min@array+1,fsr2h
  3681  002C7A  CFDE F087          	movff	postinc2,min@minimum
  3682  002C7E  CFDD F088          	movff	postdec2,min@minimum+1
  3683  002C82                     l7312:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3687  002C82  0E00               	movlw	0
  3688  002C84  6F8A               	movwf	(min@i+1)& (0+255),b
  3689  002C86  0E00               	movlw	0
  3690  002C88  6F89               	movwf	min@i& (0+255),b
  3691  002C8A  D059               	goto	l7328
  3692  002C8C                     l7314:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3696  002C8C  5187               	movf	min@minimum& (0+255),w,b
  3697  002C8E  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3698  002C90  B4D8               	btfsc	status,2,c
  3699  002C92  D046               	goto	u7860
  3700                           
  3701                           ; BSR set to: 0
  3702  002C94  90D8               	bcf	status,0,c
  3703  002C96  3589               	rlcf	min@i& (0+255),w,b
  3704  002C98  6ED9               	movwf	fsr2l,c
  3705  002C9A  358A               	rlcf	(min@i+1)& (0+255),w,b
  3706  002C9C  6EDA               	movwf	fsr2h,c
  3707  002C9E  5180               	movf	min@array& (0+255),w,b
  3708  002CA0  26D9               	addwf	fsr2l,f,c
  3709  002CA2  5181               	movf	(min@array+1)& (0+255),w,b
  3710  002CA4  22DA               	addwfc	fsr2h,f,c
  3711  002CA6  50DE               	movf	postinc2,w,c
  3712  002CA8  5D87               	subwf	min@minimum& (0+255),w,b
  3713  002CAA  5188               	movf	(min@minimum+1)& (0+255),w,b
  3714  002CAC  0A80               	xorlw	128
  3715  002CAE  6F86               	movwf	(??_min+2)& (0+255),b
  3716  002CB0  50DE               	movf	postinc2,w,c
  3717  002CB2  0A80               	xorlw	128
  3718  002CB4  5986               	subwfb	(??_min+2)& (0+255),w,b
  3719  002CB6  A0D8               	btfss	status,0,c
  3720  002CB8  D040               	goto	l7326
  3721                           
  3722                           ; BSR set to: 0
  3723  002CBA  90D8               	bcf	status,0,c
  3724  002CBC  3589               	rlcf	min@i& (0+255),w,b
  3725  002CBE  6ED9               	movwf	fsr2l,c
  3726  002CC0  358A               	rlcf	(min@i+1)& (0+255),w,b
  3727  002CC2  6EDA               	movwf	fsr2h,c
  3728  002CC4  5180               	movf	min@array& (0+255),w,b
  3729  002CC6  26D9               	addwf	fsr2l,f,c
  3730  002CC8  5181               	movf	(min@array+1)& (0+255),w,b
  3731  002CCA  22DA               	addwfc	fsr2h,f,c
  3732  002CCC  50DE               	movf	postinc2,w,c
  3733  002CCE  10DE               	iorwf	postinc2,w,c
  3734  002CD0  B4D8               	btfsc	status,2,c
  3735  002CD2  D033               	goto	l7326
  3736                           
  3737                           ; BSR set to: 0
  3738  002CD4  90D8               	bcf	status,0,c
  3739  002CD6  3589               	rlcf	min@i& (0+255),w,b
  3740  002CD8  6ED9               	movwf	fsr2l,c
  3741  002CDA  358A               	rlcf	(min@i+1)& (0+255),w,b
  3742  002CDC  6EDA               	movwf	fsr2h,c
  3743  002CDE  5180               	movf	min@array& (0+255),w,b
  3744  002CE0  26D9               	addwf	fsr2l,f,c
  3745  002CE2  5181               	movf	(min@array+1)& (0+255),w,b
  3746  002CE4  22DA               	addwfc	fsr2h,f,c
  3747  002CE6  0E01               	movlw	1
  3748  002CE8  BEDB               	btfsc	plusw2,7,c
  3749  002CEA  D027               	goto	l7326
  3750  002CEC  0E01               	movlw	1
  3751  002CEE  50DB               	movf	plusw2,w,c
  3752  002CF0  E104               	bnz	u7850
  3753  002CF2  0E0E               	movlw	14
  3754  002CF4  5CDE               	subwf	postinc2,w,c
  3755  002CF6  A0D8               	btfss	status,0,c
  3756  002CF8  D020               	goto	l7326
  3757  002CFA                     u7850:
  3758                           
  3759                           ; BSR set to: 0
  3760  002CFA  90D8               	bcf	status,0,c
  3761  002CFC  3589               	rlcf	min@i& (0+255),w,b
  3762  002CFE  6ED9               	movwf	fsr2l,c
  3763  002D00  358A               	rlcf	(min@i+1)& (0+255),w,b
  3764  002D02  6EDA               	movwf	fsr2h,c
  3765  002D04  5180               	movf	min@array& (0+255),w,b
  3766  002D06  26D9               	addwf	fsr2l,f,c
  3767  002D08  5181               	movf	(min@array+1)& (0+255),w,b
  3768  002D0A  22DA               	addwfc	fsr2h,f,c
  3769  002D0C  0E01               	movlw	1
  3770  002D0E  BEDB               	btfsc	plusw2,7,c
  3771  002D10  D007               	goto	u7860
  3772  002D12  0E01               	movlw	1
  3773  002D14  50DB               	movf	plusw2,w,c
  3774  002D16  E111               	bnz	l7326
  3775  002D18  0E18               	movlw	24
  3776  002D1A  5CDE               	subwf	postinc2,w,c
  3777  002D1C  B0D8               	btfsc	status,0,c
  3778  002D1E  D00D               	goto	l7326
  3779  002D20                     u7860:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;main.c: 282:             minimum = array[i];
  3783  002D20  90D8               	bcf	status,0,c
  3784  002D22  3589               	rlcf	min@i& (0+255),w,b
  3785  002D24  6ED9               	movwf	fsr2l,c
  3786  002D26  358A               	rlcf	(min@i+1)& (0+255),w,b
  3787  002D28  6EDA               	movwf	fsr2h,c
  3788  002D2A  5180               	movf	min@array& (0+255),w,b
  3789  002D2C  26D9               	addwf	fsr2l,f,c
  3790  002D2E  5181               	movf	(min@array+1)& (0+255),w,b
  3791  002D30  22DA               	addwfc	fsr2h,f,c
  3792  002D32  CFDE F087          	movff	postinc2,min@minimum
  3793  002D36  CFDD F088          	movff	postdec2,min@minimum+1
  3794  002D3A                     l7326:
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;main.c: 287:     }
  3798  002D3A  4B89               	infsnz	min@i& (0+255),f,b
  3799  002D3C  2B8A               	incf	(min@i+1)& (0+255),f,b
  3800  002D3E                     l7328:
  3801                           
  3802                           ; BSR set to: 0
  3803  002D3E  5182               	movf	min@size& (0+255),w,b
  3804  002D40  5D89               	subwf	min@i& (0+255),w,b
  3805  002D42  518A               	movf	(min@i+1)& (0+255),w,b
  3806  002D44  0A80               	xorlw	128
  3807  002D46  6F84               	movwf	??_min& (0+255),b
  3808  002D48  5183               	movf	(min@size+1)& (0+255),w,b
  3809  002D4A  0A80               	xorlw	128
  3810  002D4C  5984               	subwfb	??_min& (0+255),w,b
  3811  002D4E  A0D8               	btfss	status,0,c
  3812  002D50  D79D               	goto	l7314
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;main.c: 288:     return minimum;
  3816  002D52  C087  F080         	movff	min@minimum,?_min
  3817  002D56  C088  F081         	movff	min@minimum+1,?_min+1
  3818                           
  3819                           ; BSR set to: 0
  3820  002D5A  0012               	return		;funcret
  3821  002D5C                     __end_of_min:
  3822                           	opt callstack 0
  3823                           
  3824 ;; *************** function _start *****************
  3825 ;; Defined at:
  3826 ;;		line 704 in file "main.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2, status,0, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;Total ram usage:        0 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    5
  3847 ;; This function calls:
  3848 ;;		_I2C_Master_Init
  3849 ;;		_I2C_Master_Start
  3850 ;;		_I2C_Master_Stop
  3851 ;;		_I2C_Master_Write
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text5
  3858  0036E4                     __ptext5:
  3859                           	opt callstack 0
  3860  0036E4                     _start:
  3861                           	opt callstack 25
  3862                           
  3863                           ;main.c: 705:     I2C_Master_Init(100000);
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;incstack = 0
  3867  0036E4  0EA0               	movlw	160
  3868  0036E6  0100               	movlb	0	; () banked
  3869  0036E8  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  3870  0036EA  0E86               	movlw	134
  3871  0036EC  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  3872  0036EE  0E01               	movlw	1
  3873  0036F0  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  3874  0036F2  0E00               	movlw	0
  3875  0036F4  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  3876  0036F6  ECC1  F01A         	call	_I2C_Master_Init	;wreg free
  3877                           
  3878                           ;main.c: 706:     I2C_Master_Start();
  3879  0036FA  ECAF  F01D         	call	_I2C_Master_Start	;wreg free
  3880                           
  3881                           ;main.c: 707:     I2C_Master_Write(0b00010000);
  3882  0036FE  0E00               	movlw	0
  3883  003700  0100               	movlb	0	; () banked
  3884  003702  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3885  003704  0E10               	movlw	16
  3886  003706  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3887  003708  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  3888                           
  3889                           ;main.c: 708:     I2C_Master_Stop();
  3890  00370C  ECAB  F01D         	call	_I2C_Master_Stop	;wreg free
  3891                           
  3892                           ;main.c: 710:     I2C_Master_Start();
  3893  003710  ECAF  F01D         	call	_I2C_Master_Start	;wreg free
  3894                           
  3895                           ;main.c: 711:     I2C_Master_Write(0b00010000);
  3896  003714  0E00               	movlw	0
  3897  003716  0100               	movlb	0	; () banked
  3898  003718  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3899  00371A  0E10               	movlw	16
  3900  00371C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3901  00371E  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  3902                           
  3903                           ;main.c: 712:     I2C_Master_Write('2');
  3904  003722  0E00               	movlw	0
  3905  003724  0100               	movlb	0	; () banked
  3906  003726  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3907  003728  0E32               	movlw	50
  3908  00372A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3909  00372C  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  3910                           
  3911                           ;main.c: 713:     I2C_Master_Stop();
  3912  003730  ECAB  F01D         	call	_I2C_Master_Stop	;wreg free
  3913  003734  0012               	return		;funcret
  3914  003736                     __end_of_start:
  3915                           	opt callstack 0
  3916                           
  3917 ;; *************** function _number_deploy *****************
  3918 ;; Defined at:
  3919 ;;		line 416 in file "main.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  avg_dist        2  121[BANK0 ] int 
  3922 ;;  poles_detect    2  123[BANK0 ] int 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  t_count         2    4[BANK1 ] int 
  3925 ;;  tires_detect    2    2[BANK1 ] int 
  3926 ;;  tires_t         2    0[BANK1 ] int 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  2  121[BANK0 ] int 
  3929 ;; Registers used:
  3930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;Total ram usage:       12 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:   14
  3943 ;; This function calls:
  3944 ;;		___awdiv
  3945 ;;		_lcdInst
  3946 ;;		_printf
  3947 ;; This function is called by:
  3948 ;;		_main
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text6
  3953  002066                     __ptext6:
  3954                           	opt callstack 0
  3955  002066                     _number_deploy:
  3956                           	opt callstack 16
  3957                           
  3958                           ;main.c: 417:     int tires_t=0;
  3959                           
  3960                           ;incstack = 0
  3961  002066  0E00               	movlw	0
  3962  002068  0101               	movlb	1	; () banked
  3963  00206A  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3964  00206C  0E00               	movlw	0
  3965  00206E  6F00               	movwf	number_deploy@tires_t& (0+255),b
  3966                           
  3967                           ;main.c: 418:     int tires_detected=0;
  3968  002070  0E00               	movlw	0
  3969  002072  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  3970  002074  0E00               	movlw	0
  3971  002076  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  3972                           
  3973                           ;main.c: 419:     int t_count = 0;
  3974  002078  0E00               	movlw	0
  3975  00207A  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  3976  00207C  0E00               	movlw	0
  3977  00207E  6F04               	movwf	number_deploy@t_count& (0+255),b
  3978                           
  3979                           ;main.c: 422:     while (t_count<3){
  3980  002080  D0F6               	goto	l7644
  3981  002082                     l7588:
  3982                           
  3983                           ; BSR set to: 1
  3984                           ;main.c: 423:   if (poles_detected != 0){
  3985  002082  0100               	movlb	0	; () banked
  3986  002084  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  3987  002086  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  3988  002088  B4D8               	btfsc	status,2,c
  3989  00208A  D031               	goto	l7598
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;main.c: 424:    if ((avg_dist/1000)<30){
  3993  00208C  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  3994  002090  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  3995  002094  0E03               	movlw	3
  3996  002096  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3997  002098  0EE8               	movlw	232
  3998  00209A  6F82               	movwf	___awdiv@divisor& (0+255),b
  3999  00209C  EC57  F019         	call	___awdiv	;wreg free
  4000  0020A0  0100               	movlb	0	; () banked
  4001  0020A2  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4002  0020A4  D006               	goto	u8060
  4003  0020A6  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4004  0020A8  E109               	bnz	l7594
  4005  0020AA  0E1E               	movlw	30
  4006  0020AC  5D80               	subwf	?___awdiv& (0+255),w,b
  4007  0020AE  B0D8               	btfsc	status,0,c
  4008  0020B0  D005               	goto	l7594
  4009  0020B2                     u8060:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;main.c: 426:     tires_t = 1;
  4013  0020B2  0E00               	movlw	0
  4014  0020B4  0101               	movlb	1	; () banked
  4015  0020B6  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4016  0020B8  0E01               	movlw	1
  4017  0020BA  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4018  0020BC                     l7594:
  4019                           
  4020                           ;main.c: 428:    if ((avg_dist/1000)>30){
  4021  0020BC  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4022  0020C0  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4023  0020C4  0E03               	movlw	3
  4024  0020C6  0100               	movlb	0	; () banked
  4025  0020C8  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4026  0020CA  0EE8               	movlw	232
  4027  0020CC  6F82               	movwf	___awdiv@divisor& (0+255),b
  4028  0020CE  EC57  F019         	call	___awdiv	;wreg free
  4029  0020D2  0100               	movlb	0	; () banked
  4030  0020D4  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4031  0020D6  D00B               	goto	l7598
  4032  0020D8  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4033  0020DA  E104               	bnz	u8070
  4034  0020DC  0E1F               	movlw	31
  4035  0020DE  5D80               	subwf	?___awdiv& (0+255),w,b
  4036  0020E0  A0D8               	btfss	status,0,c
  4037  0020E2  D005               	goto	l7598
  4038  0020E4                     u8070:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;main.c: 429:     tires_t = 2;
  4042  0020E4  0E00               	movlw	0
  4043  0020E6  0101               	movlb	1	; () banked
  4044  0020E8  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4045  0020EA  0E02               	movlw	2
  4046  0020EC  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4047  0020EE                     l7598:
  4048                           
  4049                           ;main.c: 433:   if (poles_detected == 0){
  4050  0020EE  0100               	movlb	0	; () banked
  4051  0020F0  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  4052  0020F2  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4053  0020F4  A4D8               	btfss	status,2,c
  4054  0020F6  D005               	goto	l7602
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;main.c: 434:    tires_t = 2;
  4058  0020F8  0E00               	movlw	0
  4059  0020FA  0101               	movlb	1	; () banked
  4060  0020FC  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4061  0020FE  0E02               	movlw	2
  4062  002100  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4063  002102                     l7602:
  4064                           
  4065                           ;main.c: 437:   if ((a[0]>=2 && a[0] <= 15)){
  4066  002102  BE62               	btfsc	_a+1,7,c
  4067  002104  D028               	goto	l7614
  4068  002106  5062               	movf	_a+1,w,c
  4069  002108  E104               	bnz	u8090
  4070  00210A  0E02               	movlw	2
  4071  00210C  5C61               	subwf	_a,w,c
  4072  00210E  A0D8               	btfss	status,0,c
  4073  002110  D022               	goto	l7614
  4074  002112                     u8090:
  4075  002112  BE62               	btfsc	_a+1,7,c
  4076  002114  D006               	goto	u8100
  4077  002116  5062               	movf	_a+1,w,c
  4078  002118  E11E               	bnz	l7614
  4079  00211A  0E10               	movlw	16
  4080  00211C  5C61               	subwf	_a,w,c
  4081  00211E  B0D8               	btfsc	status,0,c
  4082  002120  D01A               	goto	l7614
  4083  002122                     u8100:
  4084                           
  4085                           ;main.c: 439:             if ((a[1]>=2 && a[1] <= 15)){
  4086  002122  BE64               	btfsc	_a+3,7,c
  4087  002124  D013               	goto	l7612
  4088  002126  5064               	movf	_a+3,w,c
  4089  002128  E104               	bnz	u8110
  4090  00212A  0E02               	movlw	2
  4091  00212C  5C63               	subwf	_a+2,w,c
  4092  00212E  A0D8               	btfss	status,0,c
  4093  002130  D00D               	goto	l7612
  4094  002132                     u8110:
  4095  002132  BE64               	btfsc	_a+3,7,c
  4096  002134  D006               	goto	u8120
  4097  002136  5064               	movf	_a+3,w,c
  4098  002138  E109               	bnz	l7612
  4099  00213A  0E10               	movlw	16
  4100  00213C  5C63               	subwf	_a+2,w,c
  4101  00213E  B0D8               	btfsc	status,0,c
  4102  002140  D005               	goto	l7612
  4103  002142                     u8120:
  4104                           
  4105                           ;main.c: 441:                 tires_detected = 1;
  4106  002142  0E00               	movlw	0
  4107  002144  0101               	movlb	1	; () banked
  4108  002146  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4109  002148  0E01               	movlw	1
  4110  00214A  D004               	goto	L2
  4111  00214C                     l7612:
  4112                           
  4113                           ;main.c: 444:                 tires_detected = 0;
  4114  00214C  0E00               	movlw	0
  4115  00214E  0101               	movlb	1	; () banked
  4116  002150  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4117  002152  0E00               	movlw	0
  4118  002154                     L2:
  4119  002154  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  4120  002156                     l7614:
  4121                           
  4122                           ;main.c: 447:         if ((tires_detected==1)){
  4123  002156  0101               	movlb	1	; () banked
  4124  002158  0502               	decf	number_deploy@tires_detected& (0+255),w,b
  4125  00215A  1103               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4126  00215C  B4D8               	btfsc	status,2,c
  4127                           
  4128                           ; BSR set to: 1
  4129                           ;main.c: 448:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4130  00215E  BE66               	btfsc	_a+5,7,c
  4131  002160  D020               	goto	l7626
  4132  002162  5066               	movf	_a+5,w,c
  4133  002164  E104               	bnz	u8140
  4134  002166  0E02               	movlw	2
  4135  002168  5C65               	subwf	_a+4,w,c
  4136  00216A  A0D8               	btfss	status,0,c
  4137  00216C  D01A               	goto	l7626
  4138  00216E                     u8140:
  4139                           
  4140                           ; BSR set to: 1
  4141  00216E  BE66               	btfsc	_a+5,7,c
  4142  002170  D006               	goto	u8150
  4143  002172  5066               	movf	_a+5,w,c
  4144  002174  E116               	bnz	l7626
  4145  002176  0E10               	movlw	16
  4146  002178  5C65               	subwf	_a+4,w,c
  4147  00217A  B0D8               	btfsc	status,0,c
  4148  00217C  D012               	goto	l7626
  4149  00217E                     u8150:
  4150                           
  4151                           ; BSR set to: 1
  4152  00217E  BE68               	btfsc	_a+7,7,c
  4153  002180  D010               	goto	l7626
  4154  002182  5068               	movf	_a+7,w,c
  4155  002184  E104               	bnz	u8160
  4156  002186  0E02               	movlw	2
  4157  002188  5C67               	subwf	_a+6,w,c
  4158  00218A  A0D8               	btfss	status,0,c
  4159  00218C  D00A               	goto	l7626
  4160  00218E                     u8160:
  4161                           
  4162                           ; BSR set to: 1
  4163  00218E  BE68               	btfsc	_a+7,7,c
  4164  002190  D006               	goto	u8170
  4165  002192  5068               	movf	_a+7,w,c
  4166  002194  E106               	bnz	l7626
  4167  002196  0E10               	movlw	16
  4168  002198  5C67               	subwf	_a+6,w,c
  4169  00219A  B0D8               	btfsc	status,0,c
  4170  00219C  D002               	goto	l7626
  4171  00219E                     u8170:
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;main.c: 449:                 tires_detected++;
  4175  00219E  4B02               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4176  0021A0  2B03               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4177  0021A2                     l7626:
  4178                           
  4179                           ; BSR set to: 1
  4180                           ;main.c: 453:         t_count = tires_t - tires_detected;
  4181  0021A2  5102               	movf	number_deploy@tires_detected& (0+255),w,b
  4182  0021A4  5D00               	subwf	number_deploy@tires_t& (0+255),w,b
  4183  0021A6  6F04               	movwf	number_deploy@t_count& (0+255),b
  4184  0021A8  5103               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4185  0021AA  5901               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4186  0021AC  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  4187                           
  4188                           ; BSR set to: 1
  4189                           ;main.c: 454:         Pole[poles_detected].tires_deployed = t_count;
  4190  0021AE  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4191  0021B2  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4192  0021B6  0100               	movlb	0	; () banked
  4193  0021B8  90D8               	bcf	status,0,c
  4194  0021BA  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4195  0021BC  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4196  0021BE  90D8               	bcf	status,0,c
  4197  0021C0  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4198  0021C2  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4199  0021C4  90D8               	bcf	status,0,c
  4200  0021C6  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4201  0021C8  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4202  0021CA  0E00               	movlw	low _Pole
  4203  0021CC  25FD               	addwf	??_number_deploy& (0+255),w,b
  4204  0021CE  6ED9               	movwf	fsr2l,c
  4205  0021D0  0E02               	movlw	high _Pole
  4206  0021D2  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4207  0021D4  6EDA               	movwf	fsr2h,c
  4208  0021D6  C104  FFDE         	movff	number_deploy@t_count,postinc2
  4209  0021DA  C105  FFDD         	movff	number_deploy@t_count+1,postdec2
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;main.c: 455:         Pole[poles_detected].tires_final = tires_t;
  4213  0021DE  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4214  0021E2  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4215  0021E6  90D8               	bcf	status,0,c
  4216  0021E8  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4217  0021EA  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4218  0021EC  90D8               	bcf	status,0,c
  4219  0021EE  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4220  0021F0  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4221  0021F2  90D8               	bcf	status,0,c
  4222  0021F4  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4223  0021F6  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4224  0021F8  0E02               	movlw	low (_Pole+2)
  4225  0021FA  25FD               	addwf	??_number_deploy& (0+255),w,b
  4226  0021FC  6ED9               	movwf	fsr2l,c
  4227  0021FE  0E02               	movlw	high (_Pole+2)
  4228  002200  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4229  002202  6EDA               	movwf	fsr2h,c
  4230  002204  C100  FFDE         	movff	number_deploy@tires_t,postinc2
  4231  002208  C101  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;main.c: 456:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4235  00220C  0E01               	movlw	1
  4236  00220E  EC9E  F01D         	call	_lcdInst
  4237  002212  0E11               	movlw	17
  4238  002214  0100               	movlb	0	; () banked
  4239  002216  6FFD               	movwf	??_number_deploy& (0+255),b
  4240  002218  0E3A               	movlw	58
  4241  00221A                     u8977:
  4242  00221A  2EE8               	decfsz	wreg,f,c
  4243  00221C  D7FE               	bra	u8977
  4244  00221E  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4245  002220  D7FC               	bra	u8977
  4246  002222  F000               	nop	
  4247                           
  4248                           ;main.c: 457:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4249  002224  0E46               	movlw	low STR_22
  4250  002226  0100               	movlb	0	; () banked
  4251  002228  6FED               	movwf	printf@fmt& (0+255),b
  4252  00222A  0EFE               	movlw	high STR_22
  4253  00222C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4254  00222E  C102  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4255  002232  C103  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4256  002236  C104  F0F1         	movff	number_deploy@t_count,?_printf+4
  4257  00223A  C105  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4258  00223E  EC38  F01D         	call	_printf	;wreg free
  4259                           
  4260                           ;main.c: 458:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4261  002242  0E0D               	movlw	13
  4262  002244  0100               	movlb	0	; () banked
  4263  002246  6FFE               	movwf	(??_number_deploy+1)& (0+255),b
  4264  002248  0EAF               	movlw	175
  4265  00224A  6FFD               	movwf	??_number_deploy& (0+255),b
  4266  00224C  0EB6               	movlw	182
  4267  00224E                     u8987:
  4268  00224E  2EE8               	decfsz	wreg,f,c
  4269  002250  D7FE               	bra	u8987
  4270  002252  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4271  002254  D7FC               	bra	u8987
  4272  002256  2FFE               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4273  002258  D7FA               	bra	u8987
  4274  00225A  F000               	nop	
  4275                           
  4276                           ;main.c: 460:         if (t_count<=2){
  4277  00225C  0101               	movlb	1	; () banked
  4278  00225E  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4279  002260  D00E               	goto	u8190
  4280  002262  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4281  002264  E104               	bnz	l7644
  4282  002266  0E03               	movlw	3
  4283  002268  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4284  00226A  A0D8               	btfss	status,0,c
  4285  00226C  D008               	goto	u8190
  4286  00226E                     l7644:
  4287                           
  4288                           ; BSR set to: 1
  4289                           ;main.c: 422:     while (t_count<3){
  4290  00226E  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4291  002270  D708               	goto	l7588
  4292  002272  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4293  002274  E104               	bnz	u8190
  4294  002276  0E03               	movlw	3
  4295  002278  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4296  00227A  A0D8               	btfss	status,0,c
  4297  00227C  D702               	goto	l7588
  4298  00227E                     u8190:
  4299                           
  4300                           ; BSR set to: 1
  4301                           ;main.c: 468:     return (int) t_count;
  4302  00227E  C104  F0F9         	movff	number_deploy@t_count,?_number_deploy
  4303  002282  C105  F0FA         	movff	number_deploy@t_count+1,?_number_deploy+1
  4304                           
  4305                           ; BSR set to: 1
  4306  002286  0012               	return		;funcret
  4307  002288                     __end_of_number_deploy:
  4308                           	opt callstack 0
  4309                           
  4310 ;; *************** function ___awdiv *****************
  4311 ;; Defined at:
  4312 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  dividend        2    0[BANK0 ] int 
  4315 ;;  divisor         2    2[BANK0 ] int 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  quotient        2    6[BANK0 ] int 
  4318 ;;  sign            1    5[BANK0 ] unsigned char 
  4319 ;;  counter         1    4[BANK0 ] unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  2    0[BANK0 ] int 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4329 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;Total ram usage:        8 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    3
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_number_deploy
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text7
  4344  0032AE                     __ptext7:
  4345                           	opt callstack 0
  4346  0032AE                     ___awdiv:
  4347                           	opt callstack 26
  4348                           
  4349                           ; BSR set to: 1
  4350                           ;incstack = 0
  4351  0032AE  0E00               	movlw	0
  4352  0032B0  0100               	movlb	0	; () banked
  4353  0032B2  6F85               	movwf	___awdiv@sign& (0+255),b
  4354                           
  4355                           ; BSR set to: 0
  4356  0032B4  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4357  0032B6  D006               	goto	l7338
  4358                           
  4359                           ; BSR set to: 0
  4360  0032B8  6D82               	negf	___awdiv@divisor& (0+255),b
  4361  0032BA  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4362  0032BC  B0D8               	btfsc	status,0,c
  4363  0032BE  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4364                           
  4365                           ; BSR set to: 0
  4366  0032C0  0E01               	movlw	1
  4367  0032C2  6F85               	movwf	___awdiv@sign& (0+255),b
  4368  0032C4                     l7338:
  4369                           
  4370                           ; BSR set to: 0
  4371  0032C4  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4372  0032C6  D006               	goto	l7344
  4373                           
  4374                           ; BSR set to: 0
  4375  0032C8  6D80               	negf	___awdiv@dividend& (0+255),b
  4376  0032CA  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4377  0032CC  B0D8               	btfsc	status,0,c
  4378  0032CE  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4379                           
  4380                           ; BSR set to: 0
  4381  0032D0  0E01               	movlw	1
  4382  0032D2  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4383  0032D4                     l7344:
  4384                           
  4385                           ; BSR set to: 0
  4386  0032D4  0E00               	movlw	0
  4387  0032D6  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4388  0032D8  0E00               	movlw	0
  4389  0032DA  6F86               	movwf	___awdiv@quotient& (0+255),b
  4390                           
  4391                           ; BSR set to: 0
  4392  0032DC  5182               	movf	___awdiv@divisor& (0+255),w,b
  4393  0032DE  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4394  0032E0  B4D8               	btfsc	status,2,c
  4395  0032E2  D01C               	goto	l7366
  4396                           
  4397                           ; BSR set to: 0
  4398  0032E4  0E01               	movlw	1
  4399  0032E6  6F84               	movwf	___awdiv@counter& (0+255),b
  4400  0032E8  D004               	goto	l7352
  4401  0032EA                     l7350:
  4402                           
  4403                           ; BSR set to: 0
  4404  0032EA  90D8               	bcf	status,0,c
  4405  0032EC  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4406  0032EE  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4407  0032F0  2B84               	incf	___awdiv@counter& (0+255),f,b
  4408  0032F2                     l7352:
  4409                           
  4410                           ; BSR set to: 0
  4411  0032F2  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4412  0032F4  D7FA               	goto	l7350
  4413  0032F6                     u7910:
  4414                           
  4415                           ; BSR set to: 0
  4416  0032F6  90D8               	bcf	status,0,c
  4417  0032F8  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4418  0032FA  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4419                           
  4420                           ; BSR set to: 0
  4421  0032FC  5182               	movf	___awdiv@divisor& (0+255),w,b
  4422  0032FE  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4423  003300  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4424  003302  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4425  003304  A0D8               	btfss	status,0,c
  4426  003306  D005               	goto	l7362
  4427                           
  4428                           ; BSR set to: 0
  4429  003308  5182               	movf	___awdiv@divisor& (0+255),w,b
  4430  00330A  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4431  00330C  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4432  00330E  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4433                           
  4434                           ; BSR set to: 0
  4435  003310  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4436  003312                     l7362:
  4437                           
  4438                           ; BSR set to: 0
  4439  003312  90D8               	bcf	status,0,c
  4440  003314  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4441  003316  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4442                           
  4443                           ; BSR set to: 0
  4444  003318  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4445  00331A  D7ED               	goto	u7910
  4446  00331C                     l7366:
  4447                           
  4448                           ; BSR set to: 0
  4449  00331C  5185               	movf	___awdiv@sign& (0+255),w,b
  4450  00331E  B4D8               	btfsc	status,2,c
  4451  003320  D004               	goto	l7370
  4452                           
  4453                           ; BSR set to: 0
  4454  003322  6D86               	negf	___awdiv@quotient& (0+255),b
  4455  003324  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4456  003326  B0D8               	btfsc	status,0,c
  4457  003328  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4458  00332A                     l7370:
  4459                           
  4460                           ; BSR set to: 0
  4461  00332A  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4462  00332E  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4463                           
  4464                           ; BSR set to: 0
  4465  003332  0012               	return		;funcret
  4466  003334                     __end_of___awdiv:
  4467                           	opt callstack 0
  4468                           
  4469 ;; *************** function _brake *****************
  4470 ;; Defined at:
  4471 ;;		line 666 in file "main.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;Total ram usage:        2 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:   14
  4492 ;; This function calls:
  4493 ;;		_I2C_Master_Read
  4494 ;;		_I2C_Master_Start
  4495 ;;		_I2C_Master_Stop
  4496 ;;		_I2C_Master_Write
  4497 ;;		_lcdInst
  4498 ;;		_printf
  4499 ;; This function is called by:
  4500 ;;		_main
  4501 ;;		_sense_tires
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text8
  4506  002F5A                     __ptext8:
  4507                           	opt callstack 0
  4508  002F5A                     _brake:
  4509                           	opt callstack 16
  4510                           
  4511                           ;main.c: 667:     I2C_Master_Start();
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;incstack = 0
  4515  002F5A  ECAF  F01D         	call	_I2C_Master_Start	;wreg free
  4516                           
  4517                           ;main.c: 668:     I2C_Master_Write(0b00010000);
  4518  002F5E  0E00               	movlw	0
  4519  002F60  0100               	movlb	0	; () banked
  4520  002F62  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4521  002F64  0E10               	movlw	16
  4522  002F66  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4523  002F68  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  4524                           
  4525                           ;main.c: 669:     I2C_Master_Write('9');
  4526  002F6C  0E00               	movlw	0
  4527  002F6E  0100               	movlb	0	; () banked
  4528  002F70  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4529  002F72  0E39               	movlw	57
  4530  002F74  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4531  002F76  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  4532                           
  4533                           ;main.c: 670:     I2C_Master_Stop();
  4534  002F7A  ECAB  F01D         	call	_I2C_Master_Stop	;wreg free
  4535                           
  4536                           ;main.c: 671:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  4537  002F7E  0E01               	movlw	1
  4538  002F80  EC9E  F01D         	call	_lcdInst
  4539  002F84  0E11               	movlw	17
  4540  002F86  0100               	movlb	0	; () banked
  4541  002F88  6FF9               	movwf	??_brake& (0+255),b
  4542  002F8A  0E3A               	movlw	58
  4543  002F8C                     u8997:
  4544  002F8C  2EE8               	decfsz	wreg,f,c
  4545  002F8E  D7FE               	bra	u8997
  4546  002F90  2FF9               	decfsz	??_brake& (0+255),f,b
  4547  002F92  D7FC               	bra	u8997
  4548  002F94  F000               	nop	
  4549                           
  4550                           ;main.c: 672:         printf("wtf");
  4551  002F96  0EFA               	movlw	low STR_52
  4552  002F98  0100               	movlb	0	; () banked
  4553  002F9A  6FED               	movwf	printf@fmt& (0+255),b
  4554  002F9C  0EFF               	movlw	high STR_52
  4555  002F9E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4556  002FA0  EC38  F01D         	call	_printf	;wreg free
  4557                           
  4558                           ;main.c: 673:         I2C_Master_Start();
  4559  002FA4  ECAF  F01D         	call	_I2C_Master_Start	;wreg free
  4560                           
  4561                           ;main.c: 674:         I2C_Master_Write(0b00010001);
  4562  002FA8  0E00               	movlw	0
  4563  002FAA  0100               	movlb	0	; () banked
  4564  002FAC  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4565  002FAE  0E11               	movlw	17
  4566  002FB0  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4567  002FB2  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  4568                           
  4569                           ;main.c: 675:         avg_dist = I2C_Master_Read(1);
  4570  002FB6  0E01               	movlw	1
  4571  002FB8  EC23  F01D         	call	_I2C_Master_Read
  4572  002FBC  0100               	movlb	0	; () banked
  4573  002FBE  6FF9               	movwf	??_brake& (0+255),b
  4574  002FC0  51F9               	movf	??_brake& (0+255),w,b
  4575  002FC2  6E44               	movwf	_avg_dist,c	;volatile
  4576  002FC4  6A45               	clrf	_avg_dist+1,c	;volatile
  4577  002FC6  6A46               	clrf	_avg_dist+2,c	;volatile
  4578  002FC8  6A47               	clrf	_avg_dist+3,c	;volatile
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;main.c: 676:         I2C_Master_Stop();
  4582  002FCA  ECAB  F01D         	call	_I2C_Master_Stop	;wreg free
  4583                           
  4584                           ;main.c: 677:         if(avg_dist){
  4585  002FCE  5044               	movf	_avg_dist,w,c	;volatile
  4586  002FD0  1045               	iorwf	_avg_dist+1,w,c	;volatile
  4587  002FD2  1046               	iorwf	_avg_dist+2,w,c	;volatile
  4588  002FD4  1047               	iorwf	_avg_dist+3,w,c	;volatile
  4589  002FD6  B4D8               	btfsc	status,2,c
  4590  002FD8  0012               	return	
  4591                           
  4592                           ;main.c: 680:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4593  002FDA  0E01               	movlw	1
  4594  002FDC  EC9E  F01D         	call	_lcdInst
  4595  002FE0  0E11               	movlw	17
  4596  002FE2  0100               	movlb	0	; () banked
  4597  002FE4  6FF9               	movwf	??_brake& (0+255),b
  4598  002FE6  0E3A               	movlw	58
  4599  002FE8                     u9007:
  4600  002FE8  2EE8               	decfsz	wreg,f,c
  4601  002FEA  D7FE               	bra	u9007
  4602  002FEC  2FF9               	decfsz	??_brake& (0+255),f,b
  4603  002FEE  D7FC               	bra	u9007
  4604  002FF0  F000               	nop	
  4605                           
  4606                           ;main.c: 688:             printf("%d",avg_dist);
  4607  002FF2  0ECC               	movlw	low (STR_38+11)
  4608  002FF4  0100               	movlb	0	; () banked
  4609  002FF6  6FED               	movwf	printf@fmt& (0+255),b
  4610  002FF8  0EFE               	movlw	high (STR_38+11)
  4611  002FFA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4612  002FFC  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  4613  003000  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  4614  003004  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  4615  003008  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  4616  00300C  EC38  F01D         	call	_printf	;wreg free
  4617                           
  4618                           ;main.c: 693:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  4619  003010  0E0D               	movlw	13
  4620  003012  0100               	movlb	0	; () banked
  4621  003014  6FFA               	movwf	(??_brake+1)& (0+255),b
  4622  003016  0EAF               	movlw	175
  4623  003018  6FF9               	movwf	??_brake& (0+255),b
  4624  00301A  0EB6               	movlw	182
  4625  00301C                     u9017:
  4626  00301C  2EE8               	decfsz	wreg,f,c
  4627  00301E  D7FE               	bra	u9017
  4628  003020  2FF9               	decfsz	??_brake& (0+255),f,b
  4629  003022  D7FC               	bra	u9017
  4630  003024  2FFA               	decfsz	(??_brake+1)& (0+255),f,b
  4631  003026  D7FA               	bra	u9017
  4632  003028  F000               	nop	
  4633                           
  4634                           ;main.c: 695:         send = 1;
  4635  00302A  0E01               	movlw	1
  4636  00302C  6E6D               	movwf	_send,c
  4637  00302E  0012               	return		;funcret
  4638  003030                     __end_of_brake:
  4639                           	opt callstack 0
  4640                           
  4641 ;; *************** function _backwards *****************
  4642 ;; Defined at:
  4643 ;;		line 715 in file "main.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      void 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0, cstack
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;Total ram usage:        0 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    5
  4664 ;; This function calls:
  4665 ;;		_I2C_Master_Start
  4666 ;;		_I2C_Master_Stop
  4667 ;;		_I2C_Master_Write
  4668 ;; This function is called by:
  4669 ;;		_main
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text9
  4674  003AC0                     __ptext9:
  4675                           	opt callstack 0
  4676  003AC0                     _backwards:
  4677                           	opt callstack 25
  4678                           
  4679                           ;main.c: 716:     I2C_Master_Start();
  4680                           
  4681                           ;incstack = 0
  4682  003AC0  ECAF  F01D         	call	_I2C_Master_Start	;wreg free
  4683                           
  4684                           ;main.c: 717:     I2C_Master_Write(0b00010000);
  4685  003AC4  0E00               	movlw	0
  4686  003AC6  0100               	movlb	0	; () banked
  4687  003AC8  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4688  003ACA  0E10               	movlw	16
  4689  003ACC  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4690  003ACE  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  4691                           
  4692                           ;main.c: 718:     I2C_Master_Write('5');
  4693  003AD2  0E00               	movlw	0
  4694  003AD4  0100               	movlb	0	; () banked
  4695  003AD6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4696  003AD8  0E35               	movlw	53
  4697  003ADA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4698  003ADC  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  4699                           
  4700                           ;main.c: 719:     I2C_Master_Stop();
  4701  003AE0  ECAB  F01D         	call	_I2C_Master_Stop	;wreg free
  4702  003AE4  0012               	return		;funcret
  4703  003AE6                     __end_of_backwards:
  4704                           	opt callstack 0
  4705                           
  4706 ;; *************** function _actuators_main *****************
  4707 ;; Defined at:
  4708 ;;		line 3 in file "actuators_main.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  stack           2   12[BANK1 ] int 
  4711 ;;  steps2_adj      2   14[BANK1 ] int 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  act_cnt         2   18[BANK1 ] int 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      void 
  4716 ;; Registers used:
  4717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4723 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;Total ram usage:        8 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:   16
  4730 ;; This function calls:
  4731 ;;		_initLCD
  4732 ;;		_lcdInst
  4733 ;;		_printf
  4734 ;;		_servo
  4735 ;;		_stepper
  4736 ;;		_stepper2
  4737 ;;		_stepper2_back
  4738 ;;		_system_init
  4739 ;; This function is called by:
  4740 ;;		_main
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text10
  4745  0029F0                     __ptext10:
  4746                           	opt callstack 0
  4747  0029F0                     _actuators_main:
  4748                           	opt callstack 14
  4749                           
  4750                           ;actuators_main.c: 4:     int act_cnt = 0;
  4751                           
  4752                           ;incstack = 0
  4753  0029F0  0E00               	movlw	0
  4754  0029F2  0101               	movlb	1	; () banked
  4755  0029F4  6F13               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4756  0029F6  0E00               	movlw	0
  4757  0029F8  6F12               	movwf	actuators_main@act_cnt& (0+255),b
  4758                           
  4759                           ; BSR set to: 1
  4760                           ;actuators_main.c: 5:     system_init();
  4761  0029FA  EC7B  F01C         	call	_system_init	;wreg free
  4762                           
  4763                           ;actuators_main.c: 6:     initLCD();
  4764  0029FE  EC1E  F01A         	call	_initLCD	;wreg free
  4765                           
  4766                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4767  002A02  0E01               	movlw	1
  4768  002A04  EC9E  F01D         	call	_lcdInst
  4769  002A08  0E11               	movlw	17
  4770  002A0A  0101               	movlb	1	; () banked
  4771  002A0C  6F10               	movwf	??_actuators_main& (0+255),b
  4772  002A0E  0E3A               	movlw	58
  4773  002A10                     u9027:
  4774  002A10  2EE8               	decfsz	wreg,f,c
  4775  002A12  D7FE               	bra	u9027
  4776  002A14  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4777  002A16  D7FC               	bra	u9027
  4778  002A18  F000               	nop	
  4779                           
  4780                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4781  002A1A  0ED4               	movlw	low STR_1
  4782  002A1C  0100               	movlb	0	; () banked
  4783  002A1E  6FED               	movwf	printf@fmt& (0+255),b
  4784  002A20  0EFF               	movlw	high STR_1
  4785  002A22  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4786  002A24  0E00               	movlw	0
  4787  002A26  6FF0               	movwf	(?_printf+3)& (0+255),b
  4788  002A28  0E00               	movlw	0
  4789  002A2A  6FEF               	movwf	(?_printf+2)& (0+255),b
  4790  002A2C  EC38  F01D         	call	_printf	;wreg free
  4791                           
  4792                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4793  002A30  0E03               	movlw	3
  4794  002A32  0101               	movlb	1	; () banked
  4795  002A34  6F11               	movwf	(??_actuators_main+1)& (0+255),b
  4796  002A36  0E8A               	movlw	138
  4797  002A38  6F10               	movwf	??_actuators_main& (0+255),b
  4798  002A3A  0E55               	movlw	85
  4799  002A3C                     u9037:
  4800  002A3C  2EE8               	decfsz	wreg,f,c
  4801  002A3E  D7FE               	bra	u9037
  4802  002A40  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4803  002A42  D7FC               	bra	u9037
  4804  002A44  2F11               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4805  002A46  D7FA               	bra	u9037
  4806  002A48  D000               	nop2	
  4807  002A4A                     l7404:
  4808                           
  4809                           ;actuators_main.c: 11:     if (act_cnt==0){
  4810  002A4A  0101               	movlb	1	; () banked
  4811  002A4C  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4812  002A4E  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4813  002A50  A4D8               	btfss	status,2,c
  4814  002A52  D064               	goto	l7480
  4815                           
  4816                           ; BSR set to: 1
  4817                           ;actuators_main.c: 15:         stepper(stack);
  4818  002A54  C10C  F0FD         	movff	actuators_main@stack,stepper@stack
  4819  002A58  C10D  F0FE         	movff	actuators_main@stack+1,stepper@stack+1
  4820  002A5C  EC13  F019         	call	_stepper	;wreg free
  4821                           
  4822                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4823  002A60  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4824  002A64  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4825  002A68  0E00               	movlw	0
  4826  002A6A  EC2F  F017         	call	_stepper2
  4827                           
  4828                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4829  002A6E  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4830  002A72  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4831  002A76  0E01               	movlw	1
  4832  002A78  EC75  F018         	call	_stepper2_back
  4833                           
  4834                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4835  002A7C  0E00               	movlw	0
  4836  002A7E  6E89               	movwf	3977,c	;volatile
  4837                           
  4838                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4839  002A80  908B               	bcf	3979,0,c	;volatile
  4840                           
  4841                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4842  002A82  908D               	bcf	3981,0,c	;volatile
  4843                           
  4844                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4845  002A84  928D               	bcf	3981,1,c	;volatile
  4846                           
  4847                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  4848  002A86  948D               	bcf	3981,2,c	;volatile
  4849                           
  4850                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  4851  002A88  9A8B               	bcf	3979,5,c	;volatile
  4852                           
  4853                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  4854  002A8A  9C8B               	bcf	3979,6,c	;volatile
  4855                           
  4856                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  4857  002A8C  9E8B               	bcf	3979,7,c	;volatile
  4858                           
  4859                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  4860  002A8E  9A89               	bcf	3977,5,c	;volatile
  4861                           
  4862                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4863  002A90  0E01               	movlw	1
  4864  002A92  EC9E  F01D         	call	_lcdInst
  4865  002A96  0E11               	movlw	17
  4866  002A98  0101               	movlb	1	; () banked
  4867  002A9A  6F10               	movwf	??_actuators_main& (0+255),b
  4868  002A9C  0E3A               	movlw	58
  4869  002A9E                     u9047:
  4870  002A9E  2EE8               	decfsz	wreg,f,c
  4871  002AA0  D7FE               	bra	u9047
  4872  002AA2  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4873  002AA4  D7FC               	bra	u9047
  4874  002AA6  F000               	nop	
  4875                           
  4876                           ;actuators_main.c: 31:         printf("Stepper done");
  4877  002AA8  0E05               	movlw	low STR_2
  4878  002AAA  0100               	movlb	0	; () banked
  4879  002AAC  6FED               	movwf	printf@fmt& (0+255),b
  4880  002AAE  0EFF               	movlw	high STR_2
  4881  002AB0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4882  002AB2  EC38  F01D         	call	_printf	;wreg free
  4883                           
  4884                           ;actuators_main.c: 33:         servo();
  4885  002AB6  EC0D  F01D         	call	_servo	;wreg free
  4886                           
  4887                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4888  002ABA  0E01               	movlw	1
  4889  002ABC  EC9E  F01D         	call	_lcdInst
  4890  002AC0  0E11               	movlw	17
  4891  002AC2  0101               	movlb	1	; () banked
  4892  002AC4  6F10               	movwf	??_actuators_main& (0+255),b
  4893  002AC6  0E3A               	movlw	58
  4894  002AC8                     u9057:
  4895  002AC8  2EE8               	decfsz	wreg,f,c
  4896  002ACA  D7FE               	bra	u9057
  4897  002ACC  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4898  002ACE  D7FC               	bra	u9057
  4899  002AD0  F000               	nop	
  4900                           
  4901                           ;actuators_main.c: 35:         printf("Servo done");
  4902  002AD2  0E6F               	movlw	low STR_3
  4903  002AD4  0100               	movlb	0	; () banked
  4904  002AD6  6FED               	movwf	printf@fmt& (0+255),b
  4905  002AD8  0EFF               	movlw	high STR_3
  4906  002ADA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4907  002ADC  EC38  F01D         	call	_printf	;wreg free
  4908                           
  4909                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  4910  002AE0  0E00               	movlw	0
  4911  002AE2  6E89               	movwf	3977,c	;volatile
  4912                           
  4913                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  4914  002AE4  908B               	bcf	3979,0,c	;volatile
  4915                           
  4916                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  4917  002AE6  908D               	bcf	3981,0,c	;volatile
  4918                           
  4919                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  4920  002AE8  928D               	bcf	3981,1,c	;volatile
  4921                           
  4922                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  4923  002AEA  948D               	bcf	3981,2,c	;volatile
  4924                           
  4925                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  4926  002AEC  9A8B               	bcf	3979,5,c	;volatile
  4927                           
  4928                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  4929  002AEE  9C8B               	bcf	3979,6,c	;volatile
  4930                           
  4931                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  4932  002AF0  9E8B               	bcf	3979,7,c	;volatile
  4933                           
  4934                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  4935  002AF2  9A89               	bcf	3977,5,c	;volatile
  4936                           
  4937                           ;actuators_main.c: 49:         stepper2(1, steps2_adj);
  4938  002AF4  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4939  002AF8  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4940  002AFC  0E01               	movlw	1
  4941  002AFE  EC2F  F017         	call	_stepper2
  4942                           
  4943                           ;actuators_main.c: 50:                         LATA = 0b00000000;
  4944  002B02  0E00               	movlw	0
  4945  002B04  6E89               	movwf	3977,c	;volatile
  4946                           
  4947                           ;actuators_main.c: 51:         LATCbits.LATC0 = 0;
  4948  002B06  908B               	bcf	3979,0,c	;volatile
  4949                           
  4950                           ;actuators_main.c: 52:         LATEbits.LATE0 = 0;
  4951  002B08  908D               	bcf	3981,0,c	;volatile
  4952                           
  4953                           ;actuators_main.c: 53:         LATEbits.LATE1 = 0;
  4954  002B0A  928D               	bcf	3981,1,c	;volatile
  4955                           
  4956                           ;actuators_main.c: 54:         LATEbits.LATE2 = 0;
  4957  002B0C  948D               	bcf	3981,2,c	;volatile
  4958                           
  4959                           ;actuators_main.c: 55:         LATCbits.LATC5 = 0;
  4960  002B0E  9A8B               	bcf	3979,5,c	;volatile
  4961                           
  4962                           ;actuators_main.c: 56:         LATCbits.LATC6 = 0;
  4963  002B10  9C8B               	bcf	3979,6,c	;volatile
  4964                           
  4965                           ;actuators_main.c: 57:         LATCbits.LATC7 = 0;
  4966  002B12  9E8B               	bcf	3979,7,c	;volatile
  4967                           
  4968                           ;actuators_main.c: 58:         LATAbits.LATA5 = 0;
  4969  002B14  9A89               	bcf	3977,5,c	;volatile
  4970                           
  4971                           ;actuators_main.c: 59:         act_cnt++;
  4972  002B16  0101               	movlb	1	; () banked
  4973  002B18  4B12               	infsnz	actuators_main@act_cnt& (0+255),f,b
  4974  002B1A  2B13               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  4975  002B1C                     l7480:
  4976                           
  4977                           ; BSR set to: 1
  4978                           ;actuators_main.c: 62:     if(act_cnt){
  4979  002B1C  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4980  002B1E  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4981  002B20  A4D8               	btfss	status,2,c
  4982  002B22  0012               	return	
  4983  002B24  D792               	goto	l7404
  4984  002B26                     __end_of_actuators_main:
  4985                           	opt callstack 0
  4986                           
  4987 ;; *************** function _system_init *****************
  4988 ;; Defined at:
  4989 ;;		line 72 in file "actuators_main.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;		None
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5007 ;;Total ram usage:        0 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    3
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_actuators_main
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text11
  5018  0038F6                     __ptext11:
  5019                           	opt callstack 0
  5020  0038F6                     _system_init:
  5021                           	opt callstack 26
  5022                           
  5023                           ;actuators_main.c: 73:     TRISB = 0x00;
  5024                           
  5025                           ; BSR set to: 1
  5026                           ;incstack = 0
  5027  0038F6  0E00               	movlw	0
  5028  0038F8  6E93               	movwf	3987,c	;volatile
  5029                           
  5030                           ;actuators_main.c: 75:     LATB = 0x0F;
  5031  0038FA  0E0F               	movlw	15
  5032  0038FC  6E8A               	movwf	3978,c	;volatile
  5033                           
  5034                           ;actuators_main.c: 76:     TRISA = 0x00;
  5035  0038FE  0E00               	movlw	0
  5036  003900  6E92               	movwf	3986,c	;volatile
  5037                           
  5038                           ;actuators_main.c: 77:     LATA = 0x0F;
  5039  003902  0E0F               	movlw	15
  5040  003904  6E89               	movwf	3977,c	;volatile
  5041                           
  5042                           ;actuators_main.c: 79:     TRISCbits.TRISC1 = 0;
  5043  003906  9294               	bcf	3988,1,c	;volatile
  5044                           
  5045                           ;actuators_main.c: 82:     TRISCbits.TRISC2 = 0;
  5046  003908  9494               	bcf	3988,2,c	;volatile
  5047                           
  5048                           ;actuators_main.c: 85:     LATD = 0x00;
  5049  00390A  0E00               	movlw	0
  5050  00390C  6E8C               	movwf	3980,c	;volatile
  5051                           
  5052                           ;actuators_main.c: 86:     TRISD = 0x00;
  5053  00390E  0E00               	movlw	0
  5054  003910  6E95               	movwf	3989,c	;volatile
  5055                           
  5056                           ;actuators_main.c: 88:     ADCON1 = 0b00001111;
  5057  003912  0E0F               	movlw	15
  5058  003914  6EC1               	movwf	4033,c	;volatile
  5059                           
  5060                           ;actuators_main.c: 90:     TRISC = 0x00;
  5061  003916  0E00               	movlw	0
  5062  003918  6E94               	movwf	3988,c	;volatile
  5063                           
  5064                           ;actuators_main.c: 91:     LATC = 0x00;
  5065  00391A  0E00               	movlw	0
  5066  00391C  6E8B               	movwf	3979,c	;volatile
  5067                           
  5068                           ;actuators_main.c: 92:     TRISE = 0x00;
  5069  00391E  0E00               	movlw	0
  5070  003920  6E96               	movwf	3990,c	;volatile
  5071                           
  5072                           ;actuators_main.c: 93:     LATE = 0x00;
  5073  003922  0E00               	movlw	0
  5074  003924  6E8D               	movwf	3981,c	;volatile
  5075  003926  0012               	return		;funcret
  5076  003928                     __end_of_system_init:
  5077                           	opt callstack 0
  5078                           
  5079 ;; *************** function _stepper2_back *****************
  5080 ;; Defined at:
  5081 ;;		line 314 in file "actuators_main.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  direction       1    wreg     unsigned char 
  5084 ;;  steps2_adj      2  125[BANK0 ] int 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  direction       1    1[BANK1 ] unsigned char 
  5087 ;;  i               2    4[BANK1 ] int 
  5088 ;;  count_steppe    2    2[BANK1 ] int 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;Total ram usage:        8 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:   15
  5105 ;; This function calls:
  5106 ;;		_full_drive
  5107 ;;		_lcdInst
  5108 ;;		_printf
  5109 ;; This function is called by:
  5110 ;;		_actuators_main
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text12
  5115  0030EA                     __ptext12:
  5116                           	opt callstack 0
  5117  0030EA                     _stepper2_back:
  5118                           	opt callstack 14
  5119                           
  5120                           ;incstack = 0
  5121                           ;stepper2_back@direction stored from wreg
  5122  0030EA  0101               	movlb	1	; () banked
  5123  0030EC  6F01               	movwf	stepper2_back@direction& (0+255),b
  5124                           
  5125                           ;actuators_main.c: 332:     int count_stepper = 0;
  5126  0030EE  0E00               	movlw	0
  5127  0030F0  0101               	movlb	1	; () banked
  5128  0030F2  6F03               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5129  0030F4  0E00               	movlw	0
  5130  0030F6  6F02               	movwf	stepper2_back@count_stepper& (0+255),b
  5131                           
  5132                           ; BSR set to: 1
  5133                           ;actuators_main.c: 335:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5134                           
  5135                           ; BSR set to: 1
  5136                           ;actuators_main.c: 334:         if (count_stepper<1){
  5137  0030F8  0E01               	movlw	1
  5138  0030FA  EC9E  F01D         	call	_lcdInst
  5139  0030FE  0E11               	movlw	17
  5140  003100  0101               	movlb	1	; () banked
  5141  003102  6F00               	movwf	??_stepper2_back& (0+255),b
  5142  003104  0E3A               	movlw	58
  5143  003106                     u9067:
  5144  003106  2EE8               	decfsz	wreg,f,c
  5145  003108  D7FE               	bra	u9067
  5146  00310A  2F00               	decfsz	??_stepper2_back& (0+255),f,b
  5147  00310C  D7FC               	bra	u9067
  5148  00310E  F000               	nop	
  5149                           
  5150                           ;actuators_main.c: 336:             printf("step1");
  5151  003110  0EEF               	movlw	low STR_6
  5152  003112  0100               	movlb	0	; () banked
  5153  003114  6FED               	movwf	printf@fmt& (0+255),b
  5154  003116  0EFF               	movlw	high STR_6
  5155  003118  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5156  00311A  EC38  F01D         	call	_printf	;wreg free
  5157  00311E  0EC0               	movlw	192
  5158  003120  EC9E  F01D         	call	_lcdInst
  5159                           
  5160                           ;actuators_main.c: 338:             printf("Step speed %d",4);
  5161  003124  0EDD               	movlw	low STR_7
  5162  003126  0100               	movlb	0	; () banked
  5163  003128  6FED               	movwf	printf@fmt& (0+255),b
  5164  00312A  0EFE               	movlw	high STR_7
  5165  00312C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5166  00312E  0E00               	movlw	0
  5167  003130  6FF0               	movwf	(?_printf+3)& (0+255),b
  5168  003132  0E04               	movlw	4
  5169  003134  6FEF               	movwf	(?_printf+2)& (0+255),b
  5170  003136  EC38  F01D         	call	_printf	;wreg free
  5171                           
  5172                           ;actuators_main.c: 339:             for(int i=0;i<5;i++){
  5173  00313A  0E00               	movlw	0
  5174  00313C  0101               	movlb	1	; () banked
  5175  00313E  6F05               	movwf	(stepper2_back@i+1)& (0+255),b
  5176  003140  0E00               	movlw	0
  5177  003142  6F04               	movwf	stepper2_back@i& (0+255),b
  5178  003144                     l7172:
  5179                           
  5180                           ; BSR set to: 1
  5181                           ;actuators_main.c: 341:                 full_drive(direction, 2);
  5182  003144  0E00               	movlw	0
  5183  003146  0100               	movlb	0	; () banked
  5184  003148  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5185  00314A  0E02               	movlw	2
  5186  00314C  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5187  00314E  0101               	movlb	1	; () banked
  5188  003150  5101               	movf	stepper2_back@direction& (0+255),w,b
  5189  003152  EC18  F00B         	call	_full_drive
  5190                           
  5191                           ;actuators_main.c: 343:             }
  5192  003156  0101               	movlb	1	; () banked
  5193  003158  4B04               	infsnz	stepper2_back@i& (0+255),f,b
  5194  00315A  2B05               	incf	(stepper2_back@i+1)& (0+255),f,b
  5195                           
  5196                           ; BSR set to: 1
  5197  00315C  BF05               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5198  00315E  D7F2               	goto	l7172
  5199  003160  5105               	movf	(stepper2_back@i+1)& (0+255),w,b
  5200  003162  E104               	bnz	u7580
  5201  003164  0E05               	movlw	5
  5202  003166  5D04               	subwf	stepper2_back@i& (0+255),w,b
  5203  003168  A0D8               	btfss	status,0,c
  5204  00316A  D7EC               	goto	l7172
  5205  00316C                     u7580:
  5206                           
  5207                           ; BSR set to: 1
  5208                           ;actuators_main.c: 344:             printf("cnt is %d", count_stepper);
  5209  00316C  0ED4               	movlw	low STR_1
  5210  00316E  0100               	movlb	0	; () banked
  5211  003170  6FED               	movwf	printf@fmt& (0+255),b
  5212  003172  0EFF               	movlw	high STR_1
  5213  003174  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5214  003176  C102  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5215  00317A  C103  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5216  00317E  EC38  F01D         	call	_printf	;wreg free
  5217                           
  5218                           ;actuators_main.c: 345:             count_stepper++;
  5219  003182  0101               	movlb	1	; () banked
  5220  003184  4B02               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5221  003186  2B03               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5222                           
  5223                           ; BSR set to: 1
  5224  003188  0012               	return		;funcret
  5225  00318A                     __end_of_stepper2_back:
  5226                           	opt callstack 0
  5227                           
  5228 ;; *************** function _stepper2 *****************
  5229 ;; Defined at:
  5230 ;;		line 229 in file "actuators_main.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  direction       1    wreg     unsigned char 
  5233 ;;  steps2_adj      2  125[BANK0 ] int 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  direction       1   11[BANK1 ] unsigned char 
  5236 ;;  i               2    7[BANK1 ] int 
  5237 ;;  i               2    5[BANK1 ] int 
  5238 ;;  count_steppe    2    9[BANK1 ] int 
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5248 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;Total ram usage:       14 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:   15
  5255 ;; This function calls:
  5256 ;;		_full_drive
  5257 ;;		_lcdInst
  5258 ;;		_printf
  5259 ;; This function is called by:
  5260 ;;		_actuators_main
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text13
  5265  002E5E                     __ptext13:
  5266                           	opt callstack 0
  5267  002E5E                     _stepper2:
  5268                           	opt callstack 14
  5269                           
  5270                           ; BSR set to: 1
  5271                           ;incstack = 0
  5272                           ;stepper2@direction stored from wreg
  5273  002E5E  0101               	movlb	1	; () banked
  5274  002E60  6F0B               	movwf	stepper2@direction& (0+255),b
  5275                           
  5276                           ;actuators_main.c: 247:     int count_stepper = 0;
  5277  002E62  0E00               	movlw	0
  5278  002E64  0101               	movlb	1	; () banked
  5279  002E66  6F0A               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5280  002E68  0E00               	movlw	0
  5281  002E6A  6F09               	movwf	stepper2@count_stepper& (0+255),b
  5282                           
  5283                           ; BSR set to: 1
  5284                           ;actuators_main.c: 250:     if (direction == 0){
  5285                           
  5286                           ; BSR set to: 1
  5287                           ;actuators_main.c: 249:         if (count_stepper<1){
  5288  002E6C  510B               	movf	stepper2@direction& (0+255),w,b
  5289  002E6E  A4D8               	btfss	status,2,c
  5290  002E70  D02D               	goto	l7134
  5291                           
  5292                           ; BSR set to: 1
  5293                           ;actuators_main.c: 255:             for(int i=0;i<steps2_adj;i++){
  5294  002E72  0E00               	movlw	0
  5295  002E74  6F06               	movwf	(stepper2@i+1)& (0+255),b
  5296  002E76  0E00               	movlw	0
  5297  002E78  6F05               	movwf	stepper2@i& (0+255),b
  5298  002E7A  D00C               	goto	l7128
  5299  002E7C                     l7124:
  5300                           
  5301                           ; BSR set to: 1
  5302                           ;actuators_main.c: 257:                 full_drive(direction, 2);
  5303  002E7C  0E00               	movlw	0
  5304  002E7E  0100               	movlb	0	; () banked
  5305  002E80  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5306  002E82  0E02               	movlw	2
  5307  002E84  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5308  002E86  0101               	movlb	1	; () banked
  5309  002E88  510B               	movf	stepper2@direction& (0+255),w,b
  5310  002E8A  EC18  F00B         	call	_full_drive
  5311                           
  5312                           ;actuators_main.c: 259:             }
  5313  002E8E  0101               	movlb	1	; () banked
  5314  002E90  4B05               	infsnz	stepper2@i& (0+255),f,b
  5315  002E92  2B06               	incf	(stepper2@i+1)& (0+255),f,b
  5316  002E94                     l7128:
  5317                           
  5318                           ; BSR set to: 1
  5319  002E94  0100               	movlb	0	; () banked
  5320  002E96  51FD               	movf	stepper2@steps2_adj& (0+255),w,b
  5321  002E98  0101               	movlb	1	; () banked
  5322  002E9A  5D05               	subwf	stepper2@i& (0+255),w,b
  5323  002E9C  5106               	movf	(stepper2@i+1)& (0+255),w,b
  5324  002E9E  0A80               	xorlw	128
  5325  002EA0  6F00               	movwf	??_stepper2& (0+255),b
  5326  002EA2  0100               	movlb	0	; () banked
  5327  002EA4  51FE               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5328  002EA6  0A80               	xorlw	128
  5329  002EA8  0101               	movlb	1	; () banked
  5330  002EAA  5900               	subwfb	??_stepper2& (0+255),w,b
  5331  002EAC  A0D8               	btfss	status,0,c
  5332  002EAE  D7E6               	goto	l7124
  5333                           
  5334                           ; BSR set to: 1
  5335                           ;actuators_main.c: 260:             printf("cnt is %d", count_stepper);
  5336  002EB0  0ED4               	movlw	low STR_1
  5337  002EB2  0100               	movlb	0	; () banked
  5338  002EB4  6FED               	movwf	printf@fmt& (0+255),b
  5339  002EB6  0EFF               	movlw	high STR_1
  5340  002EB8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5341  002EBA  C109  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5342  002EBE  C10A  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5343  002EC2  EC38  F01D         	call	_printf	;wreg free
  5344                           
  5345                           ;actuators_main.c: 261:             count_stepper++;
  5346  002EC6  0101               	movlb	1	; () banked
  5347  002EC8  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5348  002ECA  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5349  002ECC                     l7134:
  5350                           
  5351                           ; BSR set to: 1
  5352                           ;actuators_main.c: 263:     if (direction == 1){
  5353  002ECC  050B               	decf	stepper2@direction& (0+255),w,b
  5354  002ECE  A4D8               	btfss	status,2,c
  5355  002ED0  0012               	return	
  5356                           
  5357                           ; BSR set to: 1
  5358                           ;actuators_main.c: 264:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5359  002ED2  0E01               	movlw	1
  5360  002ED4  EC9E  F01D         	call	_lcdInst
  5361  002ED8  0E11               	movlw	17
  5362  002EDA  0101               	movlb	1	; () banked
  5363  002EDC  6F00               	movwf	??_stepper2& (0+255),b
  5364  002EDE  0E3A               	movlw	58
  5365  002EE0                     u9077:
  5366  002EE0  2EE8               	decfsz	wreg,f,c
  5367  002EE2  D7FE               	bra	u9077
  5368  002EE4  2F00               	decfsz	??_stepper2& (0+255),f,b
  5369  002EE6  D7FC               	bra	u9077
  5370  002EE8  F000               	nop	
  5371                           
  5372                           ;actuators_main.c: 265:                         printf("steppp %d", steps2_adj-(5));
  5373  002EEA  0ECA               	movlw	low STR_5
  5374  002EEC  0100               	movlb	0	; () banked
  5375  002EEE  6FED               	movwf	printf@fmt& (0+255),b
  5376  002EF0  0EFF               	movlw	high STR_5
  5377  002EF2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5378  002EF4  0EFB               	movlw	251
  5379  002EF6  25FD               	addwf	stepper2@steps2_adj& (0+255),w,b
  5380  002EF8  6FEF               	movwf	(?_printf+2)& (0+255),b
  5381  002EFA  0EFF               	movlw	255
  5382  002EFC  21FE               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5383  002EFE  6FF0               	movwf	(?_printf+3)& (0+255),b
  5384  002F00  EC38  F01D         	call	_printf	;wreg free
  5385                           
  5386                           ;actuators_main.c: 267:                 for(int i=0;i<(steps2_adj-(5));i++){
  5387  002F04  0E00               	movlw	0
  5388  002F06  0101               	movlb	1	; () banked
  5389  002F08  6F08               	movwf	(stepper2@i_384+1)& (0+255),b
  5390  002F0A  0E00               	movlw	0
  5391  002F0C  6F07               	movwf	stepper2@i_384& (0+255),b
  5392  002F0E  D00C               	goto	l7148
  5393  002F10                     l7144:
  5394                           
  5395                           ; BSR set to: 1
  5396                           ;actuators_main.c: 269:                     full_drive(direction, 2);
  5397  002F10  0E00               	movlw	0
  5398  002F12  0100               	movlb	0	; () banked
  5399  002F14  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5400  002F16  0E02               	movlw	2
  5401  002F18  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5402  002F1A  0101               	movlb	1	; () banked
  5403  002F1C  510B               	movf	stepper2@direction& (0+255),w,b
  5404  002F1E  EC18  F00B         	call	_full_drive
  5405                           
  5406                           ;actuators_main.c: 271:                 }
  5407  002F22  0101               	movlb	1	; () banked
  5408  002F24  4B07               	infsnz	stepper2@i_384& (0+255),f,b
  5409  002F26  2B08               	incf	(stepper2@i_384+1)& (0+255),f,b
  5410  002F28                     l7148:
  5411                           
  5412                           ; BSR set to: 1
  5413  002F28  0EFB               	movlw	251
  5414  002F2A  6F00               	movwf	??_stepper2& (0+255),b
  5415  002F2C  0EFF               	movlw	255
  5416  002F2E  6F01               	movwf	(??_stepper2+1)& (0+255),b
  5417  002F30  C0FD  F102         	movff	stepper2@steps2_adj,??_stepper2+2
  5418  002F34  C0FE  F103         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5419  002F38  5100               	movf	??_stepper2& (0+255),w,b
  5420  002F3A  2702               	addwf	(??_stepper2+2)& (0+255),f,b
  5421  002F3C  5101               	movf	(??_stepper2+1)& (0+255),w,b
  5422  002F3E  2303               	addwfc	(??_stepper2+3)& (0+255),f,b
  5423  002F40  5102               	movf	(??_stepper2+2)& (0+255),w,b
  5424  002F42  5D07               	subwf	stepper2@i_384& (0+255),w,b
  5425  002F44  5108               	movf	(stepper2@i_384+1)& (0+255),w,b
  5426  002F46  0A80               	xorlw	128
  5427  002F48  6F04               	movwf	(??_stepper2+4)& (0+255),b
  5428  002F4A  5103               	movf	(??_stepper2+3)& (0+255),w,b
  5429  002F4C  0A80               	xorlw	128
  5430  002F4E  5904               	subwfb	(??_stepper2+4)& (0+255),w,b
  5431  002F50  A0D8               	btfss	status,0,c
  5432  002F52  D7DE               	goto	l7144
  5433                           
  5434                           ; BSR set to: 1
  5435                           ;actuators_main.c: 272:                 count_stepper++;
  5436  002F54  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5437  002F56  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5438                           
  5439                           ; BSR set to: 1
  5440  002F58  0012               	return		;funcret
  5441  002F5A                     __end_of_stepper2:
  5442                           	opt callstack 0
  5443                           
  5444 ;; *************** function _stepper *****************
  5445 ;; Defined at:
  5446 ;;		line 182 in file "actuators_main.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  stack           2  125[BANK0 ] int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  i               2    4[BANK1 ] int 
  5451 ;;  i               2    2[BANK1 ] int 
  5452 ;;  count_steppe    2    0[BANK1 ] int 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;Total ram usage:        8 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; Hardware stack levels required when called:   15
  5469 ;; This function calls:
  5470 ;;		_full_drive
  5471 ;; This function is called by:
  5472 ;;		_actuators_main
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text14
  5477  003226                     __ptext14:
  5478                           	opt callstack 0
  5479  003226                     _stepper:
  5480                           	opt callstack 14
  5481                           
  5482                           ;actuators_main.c: 183:     int count_stepper = 0;
  5483                           
  5484                           ; BSR set to: 1
  5485                           ;incstack = 0
  5486  003226  0E00               	movlw	0
  5487  003228  0101               	movlb	1	; () banked
  5488  00322A  6F01               	movwf	(stepper@count_stepper+1)& (0+255),b
  5489  00322C  0E00               	movlw	0
  5490  00322E  6F00               	movwf	stepper@count_stepper& (0+255),b
  5491                           
  5492                           ; BSR set to: 1
  5493                           ;actuators_main.c: 192:             if (stack == 1){
  5494                           
  5495                           ; BSR set to: 1
  5496                           ;actuators_main.c: 186:         if (count_stepper<1){
  5497  003230  0100               	movlb	0	; () banked
  5498  003232  05FD               	decf	stepper@stack& (0+255),w,b
  5499  003234  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5500  003236  A4D8               	btfss	status,2,c
  5501  003238  D018               	goto	u7510
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;actuators_main.c: 193:                 for(int i=0;i<14;i++){
  5505  00323A  0E00               	movlw	0
  5506  00323C  0101               	movlb	1	; () banked
  5507  00323E  6F03               	movwf	(stepper@i+1)& (0+255),b
  5508  003240  0E00               	movlw	0
  5509  003242  6F02               	movwf	stepper@i& (0+255),b
  5510  003244                     l7094:
  5511                           
  5512                           ; BSR set to: 1
  5513                           ;actuators_main.c: 195:                     full_drive(0, 1);
  5514  003244  0E00               	movlw	0
  5515  003246  0100               	movlb	0	; () banked
  5516  003248  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5517  00324A  0E01               	movlw	1
  5518  00324C  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5519  00324E  0E00               	movlw	0
  5520  003250  EC18  F00B         	call	_full_drive
  5521                           
  5522                           ;actuators_main.c: 197:                 }
  5523  003254  0101               	movlb	1	; () banked
  5524  003256  4B02               	infsnz	stepper@i& (0+255),f,b
  5525  003258  2B03               	incf	(stepper@i+1)& (0+255),f,b
  5526                           
  5527                           ; BSR set to: 1
  5528  00325A  BF03               	btfsc	(stepper@i+1)& (0+255),7,b
  5529  00325C  D7F3               	goto	l7094
  5530  00325E  5103               	movf	(stepper@i+1)& (0+255),w,b
  5531  003260  E104               	bnz	u7510
  5532  003262  0E0E               	movlw	14
  5533  003264  5D02               	subwf	stepper@i& (0+255),w,b
  5534  003266  A0D8               	btfss	status,0,c
  5535  003268  D7ED               	goto	l7094
  5536  00326A                     u7510:
  5537                           
  5538                           ;actuators_main.c: 199:             if (stack == 2){
  5539  00326A  0E02               	movlw	2
  5540  00326C  0100               	movlb	0	; () banked
  5541  00326E  19FD               	xorwf	stepper@stack& (0+255),w,b
  5542  003270  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5543  003272  A4D8               	btfss	status,2,c
  5544  003274  D018               	goto	u7530
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;actuators_main.c: 200:                 for(int i=0;i<14;i++){
  5548  003276  0E00               	movlw	0
  5549  003278  0101               	movlb	1	; () banked
  5550  00327A  6F05               	movwf	(stepper@i_376+1)& (0+255),b
  5551  00327C  0E00               	movlw	0
  5552  00327E  6F04               	movwf	stepper@i_376& (0+255),b
  5553  003280                     l7108:
  5554                           
  5555                           ; BSR set to: 1
  5556                           ;actuators_main.c: 201:                     full_drive(0, 3);
  5557  003280  0E00               	movlw	0
  5558  003282  0100               	movlb	0	; () banked
  5559  003284  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5560  003286  0E03               	movlw	3
  5561  003288  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5562  00328A  0E00               	movlw	0
  5563  00328C  EC18  F00B         	call	_full_drive
  5564                           
  5565                           ;actuators_main.c: 204:                 }
  5566  003290  0101               	movlb	1	; () banked
  5567  003292  4B04               	infsnz	stepper@i_376& (0+255),f,b
  5568  003294  2B05               	incf	(stepper@i_376+1)& (0+255),f,b
  5569                           
  5570                           ; BSR set to: 1
  5571  003296  BF05               	btfsc	(stepper@i_376+1)& (0+255),7,b
  5572  003298  D7F3               	goto	l7108
  5573  00329A  5105               	movf	(stepper@i_376+1)& (0+255),w,b
  5574  00329C  E104               	bnz	u7530
  5575  00329E  0E0E               	movlw	14
  5576  0032A0  5D04               	subwf	stepper@i_376& (0+255),w,b
  5577  0032A2  A0D8               	btfss	status,0,c
  5578  0032A4  D7ED               	goto	l7108
  5579  0032A6                     u7530:
  5580                           
  5581                           ;actuators_main.c: 207:             count_stepper++;
  5582  0032A6  0101               	movlb	1	; () banked
  5583  0032A8  4B00               	infsnz	stepper@count_stepper& (0+255),f,b
  5584  0032AA  2B01               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5585                           
  5586                           ; BSR set to: 1
  5587                           
  5588                           ;actuators_main.c: 208:         }
  5589  0032AC  0012               	return		;funcret
  5590  0032AE                     __end_of_stepper:
  5591                           	opt callstack 0
  5592                           
  5593 ;; *************** function _full_drive *****************
  5594 ;; Defined at:
  5595 ;;		line 363 in file "actuators_main.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  direction       1    wreg     unsigned char 
  5598 ;;  stepper_no      2  121[BANK0 ] int 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  direction       1  124[BANK0 ] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5610 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5614 ;;Total ram usage:        4 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:   14
  5617 ;; This function calls:
  5618 ;;		_printf
  5619 ;; This function is called by:
  5620 ;;		_stepper
  5621 ;;		_stepper2
  5622 ;;		_stepper2_back
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text15
  5627  001630                     __ptext15:
  5628                           	opt callstack 0
  5629  001630                     _full_drive:
  5630                           	opt callstack 14
  5631                           
  5632                           ; BSR set to: 1
  5633                           ;incstack = 0
  5634                           ;full_drive@direction stored from wreg
  5635  001630  0100               	movlb	0	; () banked
  5636  001632  6FFC               	movwf	full_drive@direction& (0+255),b
  5637                           
  5638                           ;actuators_main.c: 364:     if (stepper_no == 1){
  5639  001634  0100               	movlb	0	; () banked
  5640  001636  05F9               	decf	full_drive@stepper_no& (0+255),w,b
  5641  001638  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5642  00163A  A4D8               	btfss	status,2,c
  5643  00163C  D06B               	goto	l6822
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;actuators_main.c: 365:         if (direction == 1){
  5647  00163E  05FC               	decf	full_drive@direction& (0+255),w,b
  5648  001640  A4D8               	btfss	status,2,c
  5649  001642  D032               	goto	l6806
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;actuators_main.c: 366:             LATA = 0b00000011;
  5653  001644  0E03               	movlw	3
  5654  001646  6E89               	movwf	3977,c	;volatile
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;actuators_main.c: 367:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5658  001648  0E1E               	movlw	30
  5659  00164A  0100               	movlb	0	; () banked
  5660  00164C  6FFB               	movwf	??_full_drive& (0+255),b
  5661  00164E  0E37               	movlw	55
  5662  001650                     u9087:
  5663  001650  2EE8               	decfsz	wreg,f,c
  5664  001652  D7FE               	bra	u9087
  5665  001654  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5666  001656  D7FC               	bra	u9087
  5667                           
  5668                           ;actuators_main.c: 368:             LATA = 0b00000110;
  5669  001658  0E06               	movlw	6
  5670  00165A  6E89               	movwf	3977,c	;volatile
  5671                           
  5672                           ;actuators_main.c: 369:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5673  00165C  0E1E               	movlw	30
  5674  00165E  0100               	movlb	0	; () banked
  5675  001660  6FFB               	movwf	??_full_drive& (0+255),b
  5676  001662  0E37               	movlw	55
  5677  001664                     u9097:
  5678  001664  2EE8               	decfsz	wreg,f,c
  5679  001666  D7FE               	bra	u9097
  5680  001668  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5681  00166A  D7FC               	bra	u9097
  5682                           
  5683                           ;actuators_main.c: 370:             LATA = 0b00001100;
  5684  00166C  0E0C               	movlw	12
  5685  00166E  6E89               	movwf	3977,c	;volatile
  5686                           
  5687                           ;actuators_main.c: 371:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5688  001670  0E1E               	movlw	30
  5689  001672  0100               	movlb	0	; () banked
  5690  001674  6FFB               	movwf	??_full_drive& (0+255),b
  5691  001676  0E37               	movlw	55
  5692  001678                     u9107:
  5693  001678  2EE8               	decfsz	wreg,f,c
  5694  00167A  D7FE               	bra	u9107
  5695  00167C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5696  00167E  D7FC               	bra	u9107
  5697                           
  5698                           ;actuators_main.c: 372:             LATA = 0b00001001;
  5699  001680  0E09               	movlw	9
  5700  001682  6E89               	movwf	3977,c	;volatile
  5701                           
  5702                           ;actuators_main.c: 373:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5703  001684  0E1E               	movlw	30
  5704  001686  0100               	movlb	0	; () banked
  5705  001688  6FFB               	movwf	??_full_drive& (0+255),b
  5706  00168A  0E37               	movlw	55
  5707  00168C                     u9117:
  5708  00168C  2EE8               	decfsz	wreg,f,c
  5709  00168E  D7FE               	bra	u9117
  5710  001690  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5711  001692  D7FC               	bra	u9117
  5712                           
  5713                           ;actuators_main.c: 374:             LATA = 0b00000011;
  5714  001694  0E03               	movlw	3
  5715  001696  6E89               	movwf	3977,c	;volatile
  5716                           
  5717                           ;actuators_main.c: 375:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5718  001698  0E1E               	movlw	30
  5719  00169A  0100               	movlb	0	; () banked
  5720  00169C  6FFB               	movwf	??_full_drive& (0+255),b
  5721  00169E  0E37               	movlw	55
  5722  0016A0                     u9127:
  5723  0016A0  2EE8               	decfsz	wreg,f,c
  5724  0016A2  D7FE               	bra	u9127
  5725  0016A4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5726  0016A6  D7FC               	bra	u9127
  5727  0016A8                     l6806:
  5728                           
  5729                           ;actuators_main.c: 377:         if (direction == 0){
  5730  0016A8  0100               	movlb	0	; () banked
  5731  0016AA  51FC               	movf	full_drive@direction& (0+255),w,b
  5732  0016AC  A4D8               	btfss	status,2,c
  5733  0016AE  D032               	goto	l6822
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;actuators_main.c: 378:             LATA = 0b00001001;
  5737  0016B0  0E09               	movlw	9
  5738  0016B2  6E89               	movwf	3977,c	;volatile
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;actuators_main.c: 379:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5742  0016B4  0E1E               	movlw	30
  5743  0016B6  0100               	movlb	0	; () banked
  5744  0016B8  6FFB               	movwf	??_full_drive& (0+255),b
  5745  0016BA  0E37               	movlw	55
  5746  0016BC                     u9137:
  5747  0016BC  2EE8               	decfsz	wreg,f,c
  5748  0016BE  D7FE               	bra	u9137
  5749  0016C0  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5750  0016C2  D7FC               	bra	u9137
  5751                           
  5752                           ;actuators_main.c: 380:             LATA = 0b00001100;
  5753  0016C4  0E0C               	movlw	12
  5754  0016C6  6E89               	movwf	3977,c	;volatile
  5755                           
  5756                           ;actuators_main.c: 381:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5757  0016C8  0E1E               	movlw	30
  5758  0016CA  0100               	movlb	0	; () banked
  5759  0016CC  6FFB               	movwf	??_full_drive& (0+255),b
  5760  0016CE  0E37               	movlw	55
  5761  0016D0                     u9147:
  5762  0016D0  2EE8               	decfsz	wreg,f,c
  5763  0016D2  D7FE               	bra	u9147
  5764  0016D4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5765  0016D6  D7FC               	bra	u9147
  5766                           
  5767                           ;actuators_main.c: 382:             LATA = 0b00000110;
  5768  0016D8  0E06               	movlw	6
  5769  0016DA  6E89               	movwf	3977,c	;volatile
  5770                           
  5771                           ;actuators_main.c: 383:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5772  0016DC  0E1E               	movlw	30
  5773  0016DE  0100               	movlb	0	; () banked
  5774  0016E0  6FFB               	movwf	??_full_drive& (0+255),b
  5775  0016E2  0E37               	movlw	55
  5776  0016E4                     u9157:
  5777  0016E4  2EE8               	decfsz	wreg,f,c
  5778  0016E6  D7FE               	bra	u9157
  5779  0016E8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5780  0016EA  D7FC               	bra	u9157
  5781                           
  5782                           ;actuators_main.c: 384:             LATA = 0b00000011;
  5783  0016EC  0E03               	movlw	3
  5784  0016EE  6E89               	movwf	3977,c	;volatile
  5785                           
  5786                           ;actuators_main.c: 385:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5787  0016F0  0E1E               	movlw	30
  5788  0016F2  0100               	movlb	0	; () banked
  5789  0016F4  6FFB               	movwf	??_full_drive& (0+255),b
  5790  0016F6  0E37               	movlw	55
  5791  0016F8                     u9167:
  5792  0016F8  2EE8               	decfsz	wreg,f,c
  5793  0016FA  D7FE               	bra	u9167
  5794  0016FC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5795  0016FE  D7FC               	bra	u9167
  5796                           
  5797                           ;actuators_main.c: 386:             LATA = 0b00001001;
  5798  001700  0E09               	movlw	9
  5799  001702  6E89               	movwf	3977,c	;volatile
  5800                           
  5801                           ;actuators_main.c: 387:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5802  001704  0E1E               	movlw	30
  5803  001706  0100               	movlb	0	; () banked
  5804  001708  6FFB               	movwf	??_full_drive& (0+255),b
  5805  00170A  0E37               	movlw	55
  5806  00170C                     u9177:
  5807  00170C  2EE8               	decfsz	wreg,f,c
  5808  00170E  D7FE               	bra	u9177
  5809  001710  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5810  001712  D7FC               	bra	u9177
  5811  001714                     l6822:
  5812                           
  5813                           ;actuators_main.c: 390:     if (stepper_no == 2){
  5814  001714  0E02               	movlw	2
  5815  001716  0100               	movlb	0	; () banked
  5816  001718  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  5817  00171A  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5818  00171C  A4D8               	btfss	status,2,c
  5819  00171E  D089               	goto	l6900
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;actuators_main.c: 391:         if (direction == 1){
  5823  001720  05FC               	decf	full_drive@direction& (0+255),w,b
  5824  001722  A4D8               	btfss	status,2,c
  5825  001724  D041               	goto	l6862
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;actuators_main.c: 392:             LATCbits.LATC0 = 1;
  5829  001726  808B               	bsf	3979,0,c	;volatile
  5830                           
  5831                           ;actuators_main.c: 393:             LATEbits.LATE0 = 1;
  5832  001728  808D               	bsf	3981,0,c	;volatile
  5833                           
  5834                           ;actuators_main.c: 394:             LATEbits.LATE1 = 0;
  5835  00172A  928D               	bcf	3981,1,c	;volatile
  5836                           
  5837                           ;actuators_main.c: 395:             LATEbits.LATE2 = 0;
  5838  00172C  948D               	bcf	3981,2,c	;volatile
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;actuators_main.c: 396:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5842  00172E  0E0D               	movlw	13
  5843  001730  0100               	movlb	0	; () banked
  5844  001732  6FFB               	movwf	??_full_drive& (0+255),b
  5845  001734  0EFB               	movlw	251
  5846  001736                     u9187:
  5847  001736  2EE8               	decfsz	wreg,f,c
  5848  001738  D7FE               	bra	u9187
  5849  00173A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5850  00173C  D7FC               	bra	u9187
  5851  00173E  D000               	nop2	
  5852                           
  5853                           ;actuators_main.c: 397:             LATCbits.LATC0 = 0;
  5854  001740  908B               	bcf	3979,0,c	;volatile
  5855                           
  5856                           ;actuators_main.c: 398:             LATEbits.LATE0 = 1;
  5857  001742  808D               	bsf	3981,0,c	;volatile
  5858                           
  5859                           ;actuators_main.c: 399:             LATEbits.LATE1 = 1;
  5860  001744  828D               	bsf	3981,1,c	;volatile
  5861                           
  5862                           ;actuators_main.c: 400:             LATEbits.LATE2 = 0;
  5863  001746  948D               	bcf	3981,2,c	;volatile
  5864                           
  5865                           ;actuators_main.c: 401:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5866  001748  0E0D               	movlw	13
  5867  00174A  0100               	movlb	0	; () banked
  5868  00174C  6FFB               	movwf	??_full_drive& (0+255),b
  5869  00174E  0EFB               	movlw	251
  5870  001750                     u9197:
  5871  001750  2EE8               	decfsz	wreg,f,c
  5872  001752  D7FE               	bra	u9197
  5873  001754  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5874  001756  D7FC               	bra	u9197
  5875  001758  D000               	nop2	
  5876                           
  5877                           ;actuators_main.c: 402:             LATCbits.LATC0 = 0;
  5878  00175A  908B               	bcf	3979,0,c	;volatile
  5879                           
  5880                           ;actuators_main.c: 403:             LATEbits.LATE0 = 0;
  5881  00175C  908D               	bcf	3981,0,c	;volatile
  5882                           
  5883                           ;actuators_main.c: 404:             LATEbits.LATE1 = 1;
  5884  00175E  828D               	bsf	3981,1,c	;volatile
  5885                           
  5886                           ;actuators_main.c: 405:             LATEbits.LATE2 = 1;
  5887  001760  848D               	bsf	3981,2,c	;volatile
  5888                           
  5889                           ;actuators_main.c: 406:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5890  001762  0E0D               	movlw	13
  5891  001764  0100               	movlb	0	; () banked
  5892  001766  6FFB               	movwf	??_full_drive& (0+255),b
  5893  001768  0EFB               	movlw	251
  5894  00176A                     u9207:
  5895  00176A  2EE8               	decfsz	wreg,f,c
  5896  00176C  D7FE               	bra	u9207
  5897  00176E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5898  001770  D7FC               	bra	u9207
  5899  001772  D000               	nop2	
  5900                           
  5901                           ;actuators_main.c: 407:             LATCbits.LATC0 = 1;
  5902  001774  808B               	bsf	3979,0,c	;volatile
  5903                           
  5904                           ;actuators_main.c: 408:             LATEbits.LATE0 = 0;
  5905  001776  908D               	bcf	3981,0,c	;volatile
  5906                           
  5907                           ;actuators_main.c: 409:             LATEbits.LATE1 = 0;
  5908  001778  928D               	bcf	3981,1,c	;volatile
  5909                           
  5910                           ;actuators_main.c: 410:             LATEbits.LATE2 = 1;
  5911  00177A  848D               	bsf	3981,2,c	;volatile
  5912                           
  5913                           ;actuators_main.c: 411:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5914  00177C  0E0D               	movlw	13
  5915  00177E  0100               	movlb	0	; () banked
  5916  001780  6FFB               	movwf	??_full_drive& (0+255),b
  5917  001782  0EFB               	movlw	251
  5918  001784                     u9217:
  5919  001784  2EE8               	decfsz	wreg,f,c
  5920  001786  D7FE               	bra	u9217
  5921  001788  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5922  00178A  D7FC               	bra	u9217
  5923  00178C  D000               	nop2	
  5924                           
  5925                           ;actuators_main.c: 412:             LATCbits.LATC0 = 1;
  5926  00178E  808B               	bsf	3979,0,c	;volatile
  5927                           
  5928                           ;actuators_main.c: 413:             LATEbits.LATE0 = 1;
  5929  001790  808D               	bsf	3981,0,c	;volatile
  5930                           
  5931                           ;actuators_main.c: 414:             LATEbits.LATE1 = 0;
  5932  001792  928D               	bcf	3981,1,c	;volatile
  5933                           
  5934                           ;actuators_main.c: 415:             LATEbits.LATE2 = 0;
  5935  001794  948D               	bcf	3981,2,c	;volatile
  5936                           
  5937                           ;actuators_main.c: 416:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5938  001796  0E0D               	movlw	13
  5939  001798  0100               	movlb	0	; () banked
  5940  00179A  6FFB               	movwf	??_full_drive& (0+255),b
  5941  00179C  0EFB               	movlw	251
  5942  00179E                     u9227:
  5943  00179E  2EE8               	decfsz	wreg,f,c
  5944  0017A0  D7FE               	bra	u9227
  5945  0017A2  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5946  0017A4  D7FC               	bra	u9227
  5947  0017A6  D000               	nop2	
  5948  0017A8                     l6862:
  5949                           
  5950                           ;actuators_main.c: 418:         if (direction == 0){
  5951  0017A8  0100               	movlb	0	; () banked
  5952  0017AA  51FC               	movf	full_drive@direction& (0+255),w,b
  5953  0017AC  A4D8               	btfss	status,2,c
  5954  0017AE  D041               	goto	l6900
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;actuators_main.c: 419:             LATCbits.LATC0 = 1;
  5958  0017B0  808B               	bsf	3979,0,c	;volatile
  5959                           
  5960                           ;actuators_main.c: 420:             LATEbits.LATE0 = 0;
  5961  0017B2  908D               	bcf	3981,0,c	;volatile
  5962                           
  5963                           ;actuators_main.c: 421:             LATEbits.LATE1 = 0;
  5964  0017B4  928D               	bcf	3981,1,c	;volatile
  5965                           
  5966                           ;actuators_main.c: 422:             LATEbits.LATE2 = 1;
  5967  0017B6  848D               	bsf	3981,2,c	;volatile
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;actuators_main.c: 423:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5971  0017B8  0E0D               	movlw	13
  5972  0017BA  0100               	movlb	0	; () banked
  5973  0017BC  6FFB               	movwf	??_full_drive& (0+255),b
  5974  0017BE  0EFB               	movlw	251
  5975  0017C0                     u9237:
  5976  0017C0  2EE8               	decfsz	wreg,f,c
  5977  0017C2  D7FE               	bra	u9237
  5978  0017C4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5979  0017C6  D7FC               	bra	u9237
  5980  0017C8  D000               	nop2	
  5981                           
  5982                           ;actuators_main.c: 424:             LATCbits.LATC0 = 0;
  5983  0017CA  908B               	bcf	3979,0,c	;volatile
  5984                           
  5985                           ;actuators_main.c: 425:             LATEbits.LATE0 = 0;
  5986  0017CC  908D               	bcf	3981,0,c	;volatile
  5987                           
  5988                           ;actuators_main.c: 426:             LATEbits.LATE1 = 1;
  5989  0017CE  828D               	bsf	3981,1,c	;volatile
  5990                           
  5991                           ;actuators_main.c: 427:             LATEbits.LATE2 = 1;
  5992  0017D0  848D               	bsf	3981,2,c	;volatile
  5993                           
  5994                           ;actuators_main.c: 428:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5995  0017D2  0E0D               	movlw	13
  5996  0017D4  0100               	movlb	0	; () banked
  5997  0017D6  6FFB               	movwf	??_full_drive& (0+255),b
  5998  0017D8  0EFB               	movlw	251
  5999  0017DA                     u9247:
  6000  0017DA  2EE8               	decfsz	wreg,f,c
  6001  0017DC  D7FE               	bra	u9247
  6002  0017DE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6003  0017E0  D7FC               	bra	u9247
  6004  0017E2  D000               	nop2	
  6005                           
  6006                           ;actuators_main.c: 429:             LATCbits.LATC0 = 0;
  6007  0017E4  908B               	bcf	3979,0,c	;volatile
  6008                           
  6009                           ;actuators_main.c: 430:             LATEbits.LATE0 = 1;
  6010  0017E6  808D               	bsf	3981,0,c	;volatile
  6011                           
  6012                           ;actuators_main.c: 431:             LATEbits.LATE1 = 1;
  6013  0017E8  828D               	bsf	3981,1,c	;volatile
  6014                           
  6015                           ;actuators_main.c: 432:             LATEbits.LATE2 = 0;
  6016  0017EA  948D               	bcf	3981,2,c	;volatile
  6017                           
  6018                           ;actuators_main.c: 433:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6019  0017EC  0E0D               	movlw	13
  6020  0017EE  0100               	movlb	0	; () banked
  6021  0017F0  6FFB               	movwf	??_full_drive& (0+255),b
  6022  0017F2  0EFB               	movlw	251
  6023  0017F4                     u9257:
  6024  0017F4  2EE8               	decfsz	wreg,f,c
  6025  0017F6  D7FE               	bra	u9257
  6026  0017F8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6027  0017FA  D7FC               	bra	u9257
  6028  0017FC  D000               	nop2	
  6029                           
  6030                           ;actuators_main.c: 434:             LATCbits.LATC0 = 1;
  6031  0017FE  808B               	bsf	3979,0,c	;volatile
  6032                           
  6033                           ;actuators_main.c: 435:             LATEbits.LATE0 = 1;
  6034  001800  808D               	bsf	3981,0,c	;volatile
  6035                           
  6036                           ;actuators_main.c: 436:             LATEbits.LATE1 = 0;
  6037  001802  928D               	bcf	3981,1,c	;volatile
  6038                           
  6039                           ;actuators_main.c: 437:             LATEbits.LATE2 = 0;
  6040  001804  948D               	bcf	3981,2,c	;volatile
  6041                           
  6042                           ;actuators_main.c: 438:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6043  001806  0E0D               	movlw	13
  6044  001808  0100               	movlb	0	; () banked
  6045  00180A  6FFB               	movwf	??_full_drive& (0+255),b
  6046  00180C  0EFB               	movlw	251
  6047  00180E                     u9267:
  6048  00180E  2EE8               	decfsz	wreg,f,c
  6049  001810  D7FE               	bra	u9267
  6050  001812  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6051  001814  D7FC               	bra	u9267
  6052  001816  D000               	nop2	
  6053                           
  6054                           ;actuators_main.c: 439:             LATCbits.LATC0 = 1;
  6055  001818  808B               	bsf	3979,0,c	;volatile
  6056                           
  6057                           ;actuators_main.c: 440:             LATEbits.LATE0 = 0;
  6058  00181A  908D               	bcf	3981,0,c	;volatile
  6059                           
  6060                           ;actuators_main.c: 441:             LATEbits.LATE1 = 0;
  6061  00181C  928D               	bcf	3981,1,c	;volatile
  6062                           
  6063                           ;actuators_main.c: 442:             LATEbits.LATE2 = 1;
  6064  00181E  848D               	bsf	3981,2,c	;volatile
  6065                           
  6066                           ;actuators_main.c: 443:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6067  001820  0E0D               	movlw	13
  6068  001822  0100               	movlb	0	; () banked
  6069  001824  6FFB               	movwf	??_full_drive& (0+255),b
  6070  001826  0EFB               	movlw	251
  6071  001828                     u9277:
  6072  001828  2EE8               	decfsz	wreg,f,c
  6073  00182A  D7FE               	bra	u9277
  6074  00182C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6075  00182E  D7FC               	bra	u9277
  6076  001830  D000               	nop2	
  6077  001832                     l6900:
  6078                           
  6079                           ;actuators_main.c: 446:     if (stepper_no == 3){
  6080  001832  0E03               	movlw	3
  6081  001834  0100               	movlb	0	; () banked
  6082  001836  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  6083  001838  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6084  00183A  A4D8               	btfss	status,2,c
  6085  00183C  D086               	goto	l6980
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;actuators_main.c: 447:         printf("what");
  6089  00183E  0EF5               	movlw	low STR_9
  6090  001840  6FED               	movwf	printf@fmt& (0+255),b
  6091  001842  0EFF               	movlw	high STR_9
  6092  001844  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6093  001846  EC38  F01D         	call	_printf	;wreg free
  6094                           
  6095                           ;actuators_main.c: 448:         if (direction == 0){
  6096  00184A  0100               	movlb	0	; () banked
  6097  00184C  51FC               	movf	full_drive@direction& (0+255),w,b
  6098  00184E  A4D8               	btfss	status,2,c
  6099  001850  D03C               	goto	l6942
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;actuators_main.c: 449:             LATCbits.LATC5 = 1;
  6103  001852  8A8B               	bsf	3979,5,c	;volatile
  6104                           
  6105                           ;actuators_main.c: 450:             LATCbits.LATC6 = 0;
  6106  001854  9C8B               	bcf	3979,6,c	;volatile
  6107                           
  6108                           ;actuators_main.c: 451:             LATCbits.LATC7 = 0;
  6109  001856  9E8B               	bcf	3979,7,c	;volatile
  6110                           
  6111                           ;actuators_main.c: 452:             LATAbits.LATA5 = 1;
  6112  001858  8A89               	bsf	3977,5,c	;volatile
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;actuators_main.c: 453:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6116  00185A  0E1E               	movlw	30
  6117  00185C  0100               	movlb	0	; () banked
  6118  00185E  6FFB               	movwf	??_full_drive& (0+255),b
  6119  001860  0E37               	movlw	55
  6120  001862                     u9287:
  6121  001862  2EE8               	decfsz	wreg,f,c
  6122  001864  D7FE               	bra	u9287
  6123  001866  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6124  001868  D7FC               	bra	u9287
  6125                           
  6126                           ;actuators_main.c: 454:             LATCbits.LATC5 = 1;
  6127  00186A  8A8B               	bsf	3979,5,c	;volatile
  6128                           
  6129                           ;actuators_main.c: 455:             LATCbits.LATC6 = 1;
  6130  00186C  8C8B               	bsf	3979,6,c	;volatile
  6131                           
  6132                           ;actuators_main.c: 456:             LATCbits.LATC7 = 0;
  6133  00186E  9E8B               	bcf	3979,7,c	;volatile
  6134                           
  6135                           ;actuators_main.c: 457:             LATAbits.LATA5 = 0;
  6136  001870  9A89               	bcf	3977,5,c	;volatile
  6137                           
  6138                           ;actuators_main.c: 458:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6139  001872  0E1E               	movlw	30
  6140  001874  0100               	movlb	0	; () banked
  6141  001876  6FFB               	movwf	??_full_drive& (0+255),b
  6142  001878  0E37               	movlw	55
  6143  00187A                     u9297:
  6144  00187A  2EE8               	decfsz	wreg,f,c
  6145  00187C  D7FE               	bra	u9297
  6146  00187E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6147  001880  D7FC               	bra	u9297
  6148                           
  6149                           ;actuators_main.c: 459:             LATCbits.LATC5 = 0;
  6150  001882  9A8B               	bcf	3979,5,c	;volatile
  6151                           
  6152                           ;actuators_main.c: 460:             LATCbits.LATC6 = 1;
  6153  001884  8C8B               	bsf	3979,6,c	;volatile
  6154                           
  6155                           ;actuators_main.c: 461:             LATCbits.LATC7 = 1;
  6156  001886  8E8B               	bsf	3979,7,c	;volatile
  6157                           
  6158                           ;actuators_main.c: 462:             LATAbits.LATA5 = 0;
  6159  001888  9A89               	bcf	3977,5,c	;volatile
  6160                           
  6161                           ;actuators_main.c: 463:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6162  00188A  0E1E               	movlw	30
  6163  00188C  0100               	movlb	0	; () banked
  6164  00188E  6FFB               	movwf	??_full_drive& (0+255),b
  6165  001890  0E37               	movlw	55
  6166  001892                     u9307:
  6167  001892  2EE8               	decfsz	wreg,f,c
  6168  001894  D7FE               	bra	u9307
  6169  001896  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6170  001898  D7FC               	bra	u9307
  6171                           
  6172                           ;actuators_main.c: 464:             LATCbits.LATC5 = 0;
  6173  00189A  9A8B               	bcf	3979,5,c	;volatile
  6174                           
  6175                           ;actuators_main.c: 465:             LATCbits.LATC6 = 0;
  6176  00189C  9C8B               	bcf	3979,6,c	;volatile
  6177                           
  6178                           ;actuators_main.c: 466:             LATCbits.LATC7 = 1;
  6179  00189E  8E8B               	bsf	3979,7,c	;volatile
  6180                           
  6181                           ;actuators_main.c: 467:             LATAbits.LATA5 = 1;
  6182  0018A0  8A89               	bsf	3977,5,c	;volatile
  6183                           
  6184                           ;actuators_main.c: 468:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6185  0018A2  0E1E               	movlw	30
  6186  0018A4  0100               	movlb	0	; () banked
  6187  0018A6  6FFB               	movwf	??_full_drive& (0+255),b
  6188  0018A8  0E37               	movlw	55
  6189  0018AA                     u9317:
  6190  0018AA  2EE8               	decfsz	wreg,f,c
  6191  0018AC  D7FE               	bra	u9317
  6192  0018AE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6193  0018B0  D7FC               	bra	u9317
  6194                           
  6195                           ;actuators_main.c: 469:             LATCbits.LATC5 = 1;
  6196  0018B2  8A8B               	bsf	3979,5,c	;volatile
  6197                           
  6198                           ;actuators_main.c: 470:             LATCbits.LATC6 = 0;
  6199  0018B4  9C8B               	bcf	3979,6,c	;volatile
  6200                           
  6201                           ;actuators_main.c: 471:             LATCbits.LATC7 = 0;
  6202  0018B6  9E8B               	bcf	3979,7,c	;volatile
  6203                           
  6204                           ;actuators_main.c: 472:             LATAbits.LATA5 = 1;
  6205  0018B8  8A89               	bsf	3977,5,c	;volatile
  6206                           
  6207                           ;actuators_main.c: 473:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6208  0018BA  0E1E               	movlw	30
  6209  0018BC  0100               	movlb	0	; () banked
  6210  0018BE  6FFB               	movwf	??_full_drive& (0+255),b
  6211  0018C0  0E37               	movlw	55
  6212  0018C2                     u9327:
  6213  0018C2  2EE8               	decfsz	wreg,f,c
  6214  0018C4  D7FE               	bra	u9327
  6215  0018C6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6216  0018C8  D7FC               	bra	u9327
  6217  0018CA                     l6942:
  6218                           
  6219                           ;actuators_main.c: 475:         if (direction == 1){
  6220  0018CA  0100               	movlb	0	; () banked
  6221  0018CC  05FC               	decf	full_drive@direction& (0+255),w,b
  6222  0018CE  A4D8               	btfss	status,2,c
  6223  0018D0  D03C               	goto	l6980
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;actuators_main.c: 476:             LATCbits.LATC5 = 1;
  6227  0018D2  8A8B               	bsf	3979,5,c	;volatile
  6228                           
  6229                           ;actuators_main.c: 477:             LATCbits.LATC6 = 1;
  6230  0018D4  8C8B               	bsf	3979,6,c	;volatile
  6231                           
  6232                           ;actuators_main.c: 478:             LATCbits.LATC7 = 0;
  6233  0018D6  9E8B               	bcf	3979,7,c	;volatile
  6234                           
  6235                           ;actuators_main.c: 479:             LATAbits.LATA5 = 0;
  6236  0018D8  9A89               	bcf	3977,5,c	;volatile
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;actuators_main.c: 480:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6240  0018DA  0E1E               	movlw	30
  6241  0018DC  0100               	movlb	0	; () banked
  6242  0018DE  6FFB               	movwf	??_full_drive& (0+255),b
  6243  0018E0  0E37               	movlw	55
  6244  0018E2                     u9337:
  6245  0018E2  2EE8               	decfsz	wreg,f,c
  6246  0018E4  D7FE               	bra	u9337
  6247  0018E6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6248  0018E8  D7FC               	bra	u9337
  6249                           
  6250                           ;actuators_main.c: 481:             LATCbits.LATC5 = 0;
  6251  0018EA  9A8B               	bcf	3979,5,c	;volatile
  6252                           
  6253                           ;actuators_main.c: 482:             LATCbits.LATC6 = 1;
  6254  0018EC  8C8B               	bsf	3979,6,c	;volatile
  6255                           
  6256                           ;actuators_main.c: 483:             LATCbits.LATC7 = 1;
  6257  0018EE  8E8B               	bsf	3979,7,c	;volatile
  6258                           
  6259                           ;actuators_main.c: 484:             LATAbits.LATA5 = 0;
  6260  0018F0  9A89               	bcf	3977,5,c	;volatile
  6261                           
  6262                           ;actuators_main.c: 485:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6263  0018F2  0E1E               	movlw	30
  6264  0018F4  0100               	movlb	0	; () banked
  6265  0018F6  6FFB               	movwf	??_full_drive& (0+255),b
  6266  0018F8  0E37               	movlw	55
  6267  0018FA                     u9347:
  6268  0018FA  2EE8               	decfsz	wreg,f,c
  6269  0018FC  D7FE               	bra	u9347
  6270  0018FE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6271  001900  D7FC               	bra	u9347
  6272                           
  6273                           ;actuators_main.c: 486:             LATCbits.LATC5 = 0;
  6274  001902  9A8B               	bcf	3979,5,c	;volatile
  6275                           
  6276                           ;actuators_main.c: 487:             LATCbits.LATC6 = 0;
  6277  001904  9C8B               	bcf	3979,6,c	;volatile
  6278                           
  6279                           ;actuators_main.c: 488:             LATCbits.LATC7 = 1;
  6280  001906  8E8B               	bsf	3979,7,c	;volatile
  6281                           
  6282                           ;actuators_main.c: 489:             LATAbits.LATA5 = 1;
  6283  001908  8A89               	bsf	3977,5,c	;volatile
  6284                           
  6285                           ;actuators_main.c: 490:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6286  00190A  0E1E               	movlw	30
  6287  00190C  0100               	movlb	0	; () banked
  6288  00190E  6FFB               	movwf	??_full_drive& (0+255),b
  6289  001910  0E37               	movlw	55
  6290  001912                     u9357:
  6291  001912  2EE8               	decfsz	wreg,f,c
  6292  001914  D7FE               	bra	u9357
  6293  001916  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6294  001918  D7FC               	bra	u9357
  6295                           
  6296                           ;actuators_main.c: 491:             LATCbits.LATC5 = 1;
  6297  00191A  8A8B               	bsf	3979,5,c	;volatile
  6298                           
  6299                           ;actuators_main.c: 492:             LATCbits.LATC6 = 0;
  6300  00191C  9C8B               	bcf	3979,6,c	;volatile
  6301                           
  6302                           ;actuators_main.c: 493:             LATCbits.LATC7 = 0;
  6303  00191E  9E8B               	bcf	3979,7,c	;volatile
  6304                           
  6305                           ;actuators_main.c: 494:             LATAbits.LATA5 = 1;
  6306  001920  8A89               	bsf	3977,5,c	;volatile
  6307                           
  6308                           ;actuators_main.c: 495:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6309  001922  0E1E               	movlw	30
  6310  001924  0100               	movlb	0	; () banked
  6311  001926  6FFB               	movwf	??_full_drive& (0+255),b
  6312  001928  0E37               	movlw	55
  6313  00192A                     u9367:
  6314  00192A  2EE8               	decfsz	wreg,f,c
  6315  00192C  D7FE               	bra	u9367
  6316  00192E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6317  001930  D7FC               	bra	u9367
  6318                           
  6319                           ;actuators_main.c: 496:             LATCbits.LATC5 = 1;
  6320  001932  8A8B               	bsf	3979,5,c	;volatile
  6321                           
  6322                           ;actuators_main.c: 497:             LATCbits.LATC6 = 1;
  6323  001934  8C8B               	bsf	3979,6,c	;volatile
  6324                           
  6325                           ;actuators_main.c: 498:             LATCbits.LATC7 = 0;
  6326  001936  9E8B               	bcf	3979,7,c	;volatile
  6327                           
  6328                           ;actuators_main.c: 499:             LATAbits.LATA5 = 0;
  6329  001938  9A89               	bcf	3977,5,c	;volatile
  6330                           
  6331                           ;actuators_main.c: 500:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6332  00193A  0E1E               	movlw	30
  6333  00193C  0100               	movlb	0	; () banked
  6334  00193E  6FFB               	movwf	??_full_drive& (0+255),b
  6335  001940  0E37               	movlw	55
  6336  001942                     u9377:
  6337  001942  2EE8               	decfsz	wreg,f,c
  6338  001944  D7FE               	bra	u9377
  6339  001946  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6340  001948  D7FC               	bra	u9377
  6341  00194A                     l6980:
  6342                           
  6343                           ;actuators_main.c: 503:                     LATA = 0b00000000;
  6344  00194A  0E00               	movlw	0
  6345  00194C  6E89               	movwf	3977,c	;volatile
  6346                           
  6347                           ;actuators_main.c: 504:         LATCbits.LATC0 = 0;
  6348  00194E  908B               	bcf	3979,0,c	;volatile
  6349                           
  6350                           ;actuators_main.c: 505:         LATEbits.LATE0 = 0;
  6351  001950  908D               	bcf	3981,0,c	;volatile
  6352                           
  6353                           ;actuators_main.c: 506:         LATEbits.LATE1 = 0;
  6354  001952  928D               	bcf	3981,1,c	;volatile
  6355                           
  6356                           ;actuators_main.c: 507:         LATEbits.LATE2 = 0;
  6357  001954  948D               	bcf	3981,2,c	;volatile
  6358                           
  6359                           ;actuators_main.c: 508:         LATCbits.LATC5 = 0;
  6360  001956  9A8B               	bcf	3979,5,c	;volatile
  6361                           
  6362                           ;actuators_main.c: 509:         LATCbits.LATC6 = 0;
  6363  001958  9C8B               	bcf	3979,6,c	;volatile
  6364                           
  6365                           ;actuators_main.c: 510:         LATCbits.LATC7 = 0;
  6366  00195A  9E8B               	bcf	3979,7,c	;volatile
  6367                           
  6368                           ;actuators_main.c: 511:         LATAbits.LATA5 = 0;
  6369  00195C  9A89               	bcf	3977,5,c	;volatile
  6370  00195E  0012               	return		;funcret
  6371  001960                     __end_of_full_drive:
  6372                           	opt callstack 0
  6373                           
  6374 ;; *************** function _servo *****************
  6375 ;; Defined at:
  6376 ;;		line 165 in file "actuators_main.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;		None
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;		None
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;Total ram usage:        2 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    4
  6397 ;; This function calls:
  6398 ;;		_servoRotate0
  6399 ;;		_servoRotate180
  6400 ;; This function is called by:
  6401 ;;		_actuators_main
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text16
  6406  003A1A                     __ptext16:
  6407                           	opt callstack 0
  6408  003A1A                     _servo:
  6409                           	opt callstack 25
  6410                           
  6411                           ;actuators_main.c: 167:   TRISC = 0;
  6412                           
  6413                           ;incstack = 0
  6414  003A1A  0E00               	movlw	0
  6415  003A1C  6E94               	movwf	3988,c	;volatile
  6416                           
  6417                           ;actuators_main.c: 168:   {;actuators_main.c: 170:     servoRotate0();
  6418  003A1E  EC9B  F01B         	call	_servoRotate0	;wreg free
  6419                           
  6420                           ;actuators_main.c: 174:     servoRotate180();
  6421  003A22  EC1C  F01B         	call	_servoRotate180	;wreg free
  6422                           
  6423                           ;actuators_main.c: 176:     _delay((unsigned long)((500)*(10000000/4000.0)));
  6424  003A26  0E07               	movlw	7
  6425  003A28  0100               	movlb	0	; () banked
  6426  003A2A  6F84               	movwf	(??_servo+1)& (0+255),b
  6427  003A2C  0E58               	movlw	88
  6428  003A2E  6F83               	movwf	??_servo& (0+255),b
  6429  003A30  0E59               	movlw	89
  6430  003A32                     u9387:
  6431  003A32  2EE8               	decfsz	wreg,f,c
  6432  003A34  D7FE               	bra	u9387
  6433  003A36  2F83               	decfsz	??_servo& (0+255),f,b
  6434  003A38  D7FC               	bra	u9387
  6435  003A3A  2F84               	decfsz	(??_servo+1)& (0+255),f,b
  6436  003A3C  D7FA               	bra	u9387
  6437  003A3E  D000               	nop2	
  6438                           
  6439                           ;actuators_main.c: 177:     servoRotate0();
  6440  003A40  EC9B  F01B         	call	_servoRotate0	;wreg free
  6441  003A44  0012               	return		;funcret
  6442  003A46                     __end_of_servo:
  6443                           	opt callstack 0
  6444                           
  6445 ;; *************** function _servoRotate180 *****************
  6446 ;; Defined at:
  6447 ;;		line 136 in file "actuators_main.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  i               2    1[BANK0 ] unsigned int 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6465 ;;Total ram usage:        3 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    3
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_servo
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text17
  6476  003638                     __ptext17:
  6477                           	opt callstack 0
  6478  003638                     _servoRotate180:
  6479                           	opt callstack 25
  6480                           
  6481                           ;actuators_main.c: 138:   unsigned int i;;actuators_main.c: 141: for(i=0;i<15;i++){
  6482                           
  6483                           ;incstack = 0
  6484  003638  0E00               	movlw	0
  6485  00363A  0100               	movlb	0	; () banked
  6486  00363C  6F82               	movwf	(servoRotate180@i+1)& (0+255),b
  6487  00363E  0E00               	movlw	0
  6488  003640  6F81               	movwf	servoRotate180@i& (0+255),b
  6489  003642                     l117:
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;actuators_main.c: 143:         {;actuators_main.c: 144:           RC1 = 1;
  6493  003642  8282               	bsf	3970,1,c	;volatile
  6494                           
  6495                           ;actuators_main.c: 145:           RC2 = 1;
  6496  003644  8482               	bsf	3970,2,c	;volatile
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;actuators_main.c: 147:           _delay((unsigned long)((475)*(10000000/4000000.0)));
  6500  003646  0EED               	movlw	237
  6501  003648                     u9397:
  6502  003648  D000               	nop2	
  6503  00364A  2EE8               	decfsz	wreg,f,c
  6504  00364C  D7FD               	bra	u9397
  6505  00364E  D000               	nop2	
  6506                           
  6507                           ;actuators_main.c: 148:           RC2 =0;
  6508  003650  9482               	bcf	3970,2,c	;volatile
  6509                           
  6510                           ;actuators_main.c: 149:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6511  003652  0E07               	movlw	7
  6512  003654  0100               	movlb	0	; () banked
  6513  003656  6F80               	movwf	??_servoRotate180& (0+255),b
  6514  003658  0ED0               	movlw	208
  6515  00365A                     u9407:
  6516  00365A  2EE8               	decfsz	wreg,f,c
  6517  00365C  D7FE               	bra	u9407
  6518  00365E  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6519  003660  D7FC               	bra	u9407
  6520  003662  F000               	nop	
  6521                           
  6522                           ;actuators_main.c: 150:           RC1 = 0;
  6523  003664  9282               	bcf	3970,1,c	;volatile
  6524                           
  6525                           ;actuators_main.c: 151:           _delay((unsigned long)((13525)*(10000000/4000000.0)));
  6526  003666  0E2C               	movlw	44
  6527  003668  0100               	movlb	0	; () banked
  6528  00366A  6F80               	movwf	??_servoRotate180& (0+255),b
  6529  00366C  0EE8               	movlw	232
  6530  00366E                     u9417:
  6531  00366E  2EE8               	decfsz	wreg,f,c
  6532  003670  D7FE               	bra	u9417
  6533  003672  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6534  003674  D7FC               	bra	u9417
  6535  003676  F000               	nop	
  6536                           
  6537                           ;actuators_main.c: 152:         };actuators_main.c: 163: }
  6538  003678  0100               	movlb	0	; () banked
  6539  00367A  4B81               	infsnz	servoRotate180@i& (0+255),f,b
  6540  00367C  2B82               	incf	(servoRotate180@i+1)& (0+255),f,b
  6541  00367E  5182               	movf	(servoRotate180@i+1)& (0+255),w,b
  6542  003680  E105               	bnz	u7350
  6543  003682  0E0F               	movlw	15
  6544  003684  5D81               	subwf	servoRotate180@i& (0+255),w,b
  6545  003686  B0D8               	btfsc	status,0,c
  6546  003688  0012               	return	
  6547  00368A  D7DB               	goto	l117
  6548  00368C                     u7350:
  6549                           
  6550                           ; BSR set to: 0
  6551  00368C  0012               	return		;funcret
  6552  00368E                     __end_of_servoRotate180:
  6553                           	opt callstack 0
  6554                           
  6555 ;; *************** function _servoRotate0 *****************
  6556 ;; Defined at:
  6557 ;;		line 97 in file "actuators_main.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;		None
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  i               2    1[BANK0 ] unsigned int 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      void 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;Total ram usage:        3 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    3
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_servo
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text18
  6586  003736                     __ptext18:
  6587                           	opt callstack 0
  6588  003736                     _servoRotate0:
  6589                           	opt callstack 25
  6590                           
  6591                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 102:       for(i=0;i<15;i++
      +                          )
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;incstack = 0
  6595  003736  0E00               	movlw	0
  6596  003738  0100               	movlb	0	; () banked
  6597  00373A  6F82               	movwf	(servoRotate0@i+1)& (0+255),b
  6598  00373C  0E00               	movlw	0
  6599  00373E  6F81               	movwf	servoRotate0@i& (0+255),b
  6600  003740                     l112:
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;actuators_main.c: 103:           {;actuators_main.c: 105:             RC1 = 1;
  6604  003740  8282               	bsf	3970,1,c	;volatile
  6605                           
  6606                           ;actuators_main.c: 106:             RC2 = 1;
  6607  003742  8482               	bsf	3970,2,c	;volatile
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;actuators_main.c: 107:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  6611  003744  0E04               	movlw	4
  6612  003746  0100               	movlb	0	; () banked
  6613  003748  6F80               	movwf	??_servoRotate0& (0+255),b
  6614  00374A  0E91               	movlw	145
  6615  00374C                     u9427:
  6616  00374C  2EE8               	decfsz	wreg,f,c
  6617  00374E  D7FE               	bra	u9427
  6618  003750  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6619  003752  D7FC               	bra	u9427
  6620                           
  6621                           ;actuators_main.c: 108:             RC2 = 0;
  6622  003754  9482               	bcf	3970,2,c	;volatile
  6623                           
  6624                           ;actuators_main.c: 109:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  6625  003756  0EFA               	movlw	250
  6626  003758                     u9437:
  6627  003758  2EE8               	decfsz	wreg,f,c
  6628  00375A  D7FE               	bra	u9437
  6629                           
  6630                           ;actuators_main.c: 110:             RC1 = 0;
  6631  00375C  9282               	bcf	3970,1,c	;volatile
  6632                           
  6633                           ;actuators_main.c: 114:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  6634  00375E  0E3D               	movlw	61
  6635  003760  0100               	movlb	0	; () banked
  6636  003762  6F80               	movwf	??_servoRotate0& (0+255),b
  6637  003764  0E62               	movlw	98
  6638  003766                     u9447:
  6639  003766  2EE8               	decfsz	wreg,f,c
  6640  003768  D7FE               	bra	u9447
  6641  00376A  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6642  00376C  D7FC               	bra	u9447
  6643  00376E  F000               	nop	
  6644                           
  6645                           ;actuators_main.c: 124:           }
  6646  003770  0100               	movlb	0	; () banked
  6647  003772  4B81               	infsnz	servoRotate0@i& (0+255),f,b
  6648  003774  2B82               	incf	(servoRotate0@i+1)& (0+255),f,b
  6649  003776  5182               	movf	(servoRotate0@i+1)& (0+255),w,b
  6650  003778  E105               	bnz	u7340
  6651  00377A  0E0F               	movlw	15
  6652  00377C  5D81               	subwf	servoRotate0@i& (0+255),w,b
  6653  00377E  B0D8               	btfsc	status,0,c
  6654  003780  0012               	return	
  6655  003782  D7DE               	goto	l112
  6656  003784                     u7340:
  6657                           
  6658                           ; BSR set to: 0
  6659  003784  0012               	return		;funcret
  6660  003786                     __end_of_servoRotate0:
  6661                           	opt callstack 0
  6662                           
  6663 ;; *************** function _UI_main *****************
  6664 ;; Defined at:
  6665 ;;		line 482 in file "main.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  t_dep           2  121[BANK0 ] int 
  6668 ;;  poles_detect    2  123[BANK0 ] int 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  i               1   89[BANK1 ] unsigned char 
  6671 ;;  keypress        1   84[BANK1 ] unsigned char 
  6672 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  6673 ;;  tick            4   85[BANK1 ] unsigned long 
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  1    wreg      void 
  6676 ;; Registers used:
  6677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;Total ram usage:       94 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:   14
  6690 ;; This function calls:
  6691 ;;		_I2C_Master_Init
  6692 ;;		_I2C_Master_Read
  6693 ;;		_I2C_Master_Start
  6694 ;;		_I2C_Master_Stop
  6695 ;;		_I2C_Master_Write
  6696 ;;		___llmod
  6697 ;;		_initLCD
  6698 ;;		_lcdInst
  6699 ;;		_printf
  6700 ;; This function is called by:
  6701 ;;		_main
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           
  6705                           	psect	text19
  6706  000012                     __ptext19:
  6707                           	opt callstack 0
  6708  000012                     _UI_main:
  6709                           	opt callstack 16
  6710                           
  6711                           ;main.c: 483:     sens = 0;
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;incstack = 0
  6715  000012  0E00               	movlw	0
  6716  000014  6E59               	movwf	_sens+1,c	;volatile
  6717  000016  0E00               	movlw	0
  6718  000018  6E58               	movwf	_sens,c	;volatile
  6719                           
  6720                           ;main.c: 488:     LATD = 0x00;
  6721  00001A  0E00               	movlw	0
  6722  00001C  6E8C               	movwf	3980,c	;volatile
  6723                           
  6724                           ;main.c: 489:     TRISD = 0x00;
  6725  00001E  0E00               	movlw	0
  6726  000020  6E95               	movwf	3989,c	;volatile
  6727                           
  6728                           ;main.c: 492:     TRISD = 0x00;
  6729  000022  0E00               	movlw	0
  6730  000024  6E95               	movwf	3989,c	;volatile
  6731                           
  6732                           ;main.c: 495:     INT1IE = 1;
  6733  000026  86F0               	bsf	4080,3,c	;volatile
  6734                           
  6735                           ;main.c: 498:     initLCD();
  6736  000028  EC1E  F01A         	call	_initLCD	;wreg free
  6737                           
  6738                           ;main.c: 501:     (INTCONbits.GIE = 1);
  6739  00002C  8EF2               	bsf	4082,7,c	;volatile
  6740                           
  6741                           ;main.c: 503:     I2C_Master_Init(100000);
  6742  00002E  0EA0               	movlw	160
  6743  000030  0100               	movlb	0	; () banked
  6744  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  6745  000034  0E86               	movlw	134
  6746  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  6747  000038  0E01               	movlw	1
  6748  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  6749  00003C  0E00               	movlw	0
  6750  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  6751  000040  ECC1  F01A         	call	_I2C_Master_Init	;wreg free
  6752                           
  6753                           ;main.c: 504:     I2C_Master_Start();
  6754  000044  ECAF  F01D         	call	_I2C_Master_Start	;wreg free
  6755                           
  6756                           ;main.c: 505:     I2C_Master_Write(0b00010000);
  6757  000048  0E00               	movlw	0
  6758  00004A  0100               	movlb	0	; () banked
  6759  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6760  00004E  0E10               	movlw	16
  6761  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6762  000052  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  6763                           
  6764                           ;main.c: 506:     I2C_Master_Stop();
  6765  000056  ECAB  F01D         	call	_I2C_Master_Stop	;wreg free
  6766                           
  6767                           ;main.c: 516:     if((pressed == 0)&&(sens==0)){
  6768  00005A  0101               	movlb	1	; () banked
  6769  00005C  516B               	movf	_pressed& (0+255),w,b
  6770  00005E  116C               	iorwf	(_pressed+1)& (0+255),w,b
  6771  000060  A4D8               	btfss	status,2,c
  6772  000062  D3DC               	goto	u8430
  6773                           
  6774                           ; BSR set to: 1
  6775  000064  5058               	movf	_sens,w,c	;volatile
  6776  000066  1059               	iorwf	_sens+1,w,c	;volatile
  6777  000068  A4D8               	btfss	status,2,c
  6778  00006A  D3D8               	goto	u8430
  6779                           
  6780                           ; BSR set to: 1
  6781                           ;main.c: 517:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  6782  00006C  0E01               	movlw	1
  6783  00006E  EC9E  F01D         	call	_lcdInst
  6784  000072  0E11               	movlw	17
  6785  000074  0101               	movlb	1	; () banked
  6786  000076  6F00               	movwf	??_UI_main& (0+255),b
  6787  000078  0E3A               	movlw	58
  6788  00007A                     u9457:
  6789  00007A  2EE8               	decfsz	wreg,f,c
  6790  00007C  D7FE               	bra	u9457
  6791  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  6792  000080  D7FC               	bra	u9457
  6793  000082  F000               	nop	
  6794                           
  6795                           ;main.c: 518:         printf("1 - Start");
  6796  000084  0EC0               	movlw	low STR_23
  6797  000086  0100               	movlb	0	; () banked
  6798  000088  6FED               	movwf	printf@fmt& (0+255),b
  6799  00008A  0EFF               	movlw	high STR_23
  6800  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6801  00008E  EC38  F01D         	call	_printf	;wreg free
  6802  000092  0EC0               	movlw	192
  6803  000094  EC9E  F01D         	call	_lcdInst
  6804                           
  6805                           ;main.c: 520:         printf("2 - Summary");
  6806  000098  0E42               	movlw	low STR_24
  6807  00009A  0100               	movlb	0	; () banked
  6808  00009C  6FED               	movwf	printf@fmt& (0+255),b
  6809  00009E  0EFF               	movlw	high STR_24
  6810  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6811  0000A2  EC38  F01D         	call	_printf	;wreg free
  6812  0000A6  0E90               	movlw	144
  6813  0000A8  EC9E  F01D         	call	_lcdInst
  6814                           
  6815                           ;main.c: 522:         printf("3 - Date&Time ");
  6816  0000AC  0E76               	movlw	low STR_25
  6817  0000AE  0100               	movlb	0	; () banked
  6818  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  6819  0000B2  0EFE               	movlw	high STR_25
  6820  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6821  0000B6  EC38  F01D         	call	_printf	;wreg free
  6822  0000BA  D3B0               	goto	u8430
  6823  0000BC                     l7682:
  6824                           
  6825                           ;main.c: 533:         if (send){
  6826  0000BC  506D               	movf	_send,w,c
  6827  0000BE  B4D8               	btfsc	status,2,c
  6828  0000C0  D3AD               	goto	u8430
  6829                           
  6830                           ;main.c: 534:         if(key_was_pressed){
  6831  0000C2  0101               	movlb	1	; () banked
  6832  0000C4  5177               	movf	_key_was_pressed& (0+255),w,b	;volatile
  6833  0000C6  B4D8               	btfsc	status,2,c
  6834  0000C8  D3A9               	goto	u8430
  6835                           
  6836                           ; BSR set to: 1
  6837                           ;main.c: 535:             pressed = 1;
  6838  0000CA  0E00               	movlw	0
  6839  0000CC  6F6C               	movwf	(_pressed+1)& (0+255),b
  6840  0000CE  0E01               	movlw	1
  6841  0000D0  6F6B               	movwf	_pressed& (0+255),b
  6842                           
  6843                           ;main.c: 536:             key_was_pressed = 0;
  6844  0000D2  0E00               	movlw	0
  6845  0000D4  6F77               	movwf	_key_was_pressed& (0+255),b	;volatile
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;main.c: 537:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  6849  0000D6  3881               	swapf	3969,w,c	;volatile
  6850  0000D8  0B0F               	andlw	15
  6851  0000DA  0B0F               	andlw	15
  6852  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  6853                           
  6854                           ; BSR set to: 1
  6855                           ;main.c: 538:             temp = keys[keypress];
  6856  0000DE  0EB7               	movlw	low _keys
  6857  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  6858  0000E2  6EF6               	movwf	tblptrl,c
  6859  0000E4  6AF7               	clrf	tblptrh,c
  6860  0000E6  0EFD               	movlw	high _keys
  6861  0000E8  22F7               	addwfc	tblptrh,f,c
  6862  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  6863  0000EA                     	endif
  6864  0000EA  0008               	tblrd		*
  6865  0000EC  CFF5 F0FF          	movff	tablat,_temp
  6866                           
  6867                           ; BSR set to: 1
  6868                           ;main.c: 539:             temp_int = (temp-'0');
  6869  0000F0  0ED0               	movlw	208
  6870  0000F2  0100               	movlb	0	; () banked
  6871  0000F4  25FF               	addwf	_temp& (0+255),w,b
  6872  0000F6  0101               	movlb	1	; () banked
  6873  0000F8  6F73               	movwf	_temp_int& (0+255),b
  6874  0000FA  6B74               	clrf	(_temp_int+1)& (0+255),b
  6875  0000FC  0EFF               	movlw	255
  6876  0000FE  2374               	addwfc	(_temp_int+1)& (0+255),f,b
  6877                           
  6878                           ; BSR set to: 1
  6879                           ;main.c: 541:             if (temp_int == 0){
  6880  000100  5173               	movf	_temp_int& (0+255),w,b
  6881  000102  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  6882  000104  A4D8               	btfss	status,2,c
  6883  000106  D02B               	goto	l7712
  6884                           
  6885                           ; BSR set to: 1
  6886                           ;main.c: 542:                 state = 0;
  6887  000108  0E00               	movlw	0
  6888  00010A  6F72               	movwf	(_state+1)& (0+255),b
  6889  00010C  0E00               	movlw	0
  6890  00010E  6F71               	movwf	_state& (0+255),b
  6891                           
  6892                           ; BSR set to: 1
  6893                           ;main.c: 543:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6894  000110  0E01               	movlw	1
  6895  000112  EC9E  F01D         	call	_lcdInst
  6896  000116  0E11               	movlw	17
  6897  000118  0101               	movlb	1	; () banked
  6898  00011A  6F00               	movwf	??_UI_main& (0+255),b
  6899  00011C  0E3A               	movlw	58
  6900  00011E                     u9467:
  6901  00011E  2EE8               	decfsz	wreg,f,c
  6902  000120  D7FE               	bra	u9467
  6903  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  6904  000124  D7FC               	bra	u9467
  6905  000126  F000               	nop	
  6906                           
  6907                           ;main.c: 544:                 printf("1 - Start");
  6908  000128  0EC0               	movlw	low STR_23
  6909  00012A  0100               	movlb	0	; () banked
  6910  00012C  6FED               	movwf	printf@fmt& (0+255),b
  6911  00012E  0EFF               	movlw	high STR_23
  6912  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6913  000132  EC38  F01D         	call	_printf	;wreg free
  6914  000136  0EC0               	movlw	192
  6915  000138  EC9E  F01D         	call	_lcdInst
  6916                           
  6917                           ;main.c: 546:                 printf("2 - Summary");
  6918  00013C  0E42               	movlw	low STR_24
  6919  00013E  0100               	movlb	0	; () banked
  6920  000140  6FED               	movwf	printf@fmt& (0+255),b
  6921  000142  0EFF               	movlw	high STR_24
  6922  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6923  000146  EC38  F01D         	call	_printf	;wreg free
  6924  00014A  0E90               	movlw	144
  6925  00014C  EC9E  F01D         	call	_lcdInst
  6926                           
  6927                           ;main.c: 548:                 printf("3 - Date&Time ");
  6928  000150  0E76               	movlw	low STR_25
  6929  000152  0100               	movlb	0	; () banked
  6930  000154  6FED               	movwf	printf@fmt& (0+255),b
  6931  000156  0EFE               	movlw	high STR_25
  6932  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6933  00015A  EC38  F01D         	call	_printf	;wreg free
  6934  00015E                     l7712:
  6935                           
  6936                           ;main.c: 551:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  6937  00015E  0101               	movlb	1	; () banked
  6938  000160  0573               	decf	_temp_int& (0+255),w,b
  6939  000162  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  6940  000164  A4D8               	btfss	status,2,c
  6941  000166  D041               	goto	l7740
  6942                           
  6943                           ; BSR set to: 1
  6944  000168  0E2A               	movlw	42
  6945  00016A  0100               	movlb	0	; () banked
  6946  00016C  19FF               	xorwf	_temp& (0+255),w,b
  6947  00016E  B4D8               	btfsc	status,2,c
  6948  000170  D03C               	goto	l7740
  6949                           
  6950                           ; BSR set to: 0
  6951  000172  0E23               	movlw	35
  6952  000174  19FF               	xorwf	_temp& (0+255),w,b
  6953  000176  B4D8               	btfsc	status,2,c
  6954  000178  D038               	goto	l7740
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;main.c: 552:                 state = 0;
  6958  00017A  0E00               	movlw	0
  6959  00017C  0101               	movlb	1	; () banked
  6960  00017E  6F72               	movwf	(_state+1)& (0+255),b
  6961  000180  0E00               	movlw	0
  6962  000182  6F71               	movwf	_state& (0+255),b
  6963                           
  6964                           ; BSR set to: 1
  6965                           ;main.c: 553:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6966  000184  0E01               	movlw	1
  6967  000186  EC9E  F01D         	call	_lcdInst
  6968  00018A  0E11               	movlw	17
  6969  00018C  0101               	movlb	1	; () banked
  6970  00018E  6F00               	movwf	??_UI_main& (0+255),b
  6971  000190  0E3A               	movlw	58
  6972  000192                     u9477:
  6973  000192  2EE8               	decfsz	wreg,f,c
  6974  000194  D7FE               	bra	u9477
  6975  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  6976  000198  D7FC               	bra	u9477
  6977  00019A  F000               	nop	
  6978                           
  6979                           ;main.c: 554:                 printf("Machine In Use");
  6980  00019C  0E94               	movlw	low STR_29
  6981  00019E  0100               	movlb	0	; () banked
  6982  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  6983  0001A2  0EFE               	movlw	high STR_29
  6984  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6985  0001A6  EC38  F01D         	call	_printf	;wreg free
  6986  0001AA  0ED0               	movlw	208
  6987  0001AC  EC9E  F01D         	call	_lcdInst
  6988                           
  6989                           ;main.c: 556:                 printf("     0-Menu     ");
  6990  0001B0  0EE0               	movlw	low STR_30
  6991  0001B2  0100               	movlb	0	; () banked
  6992  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  6993  0001B6  0EFD               	movlw	high STR_30
  6994  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6995  0001BA  EC38  F01D         	call	_printf	;wreg free
  6996                           
  6997                           ;main.c: 560:                 I2C_Master_Start();
  6998  0001BE  ECAF  F01D         	call	_I2C_Master_Start	;wreg free
  6999                           
  7000                           ;main.c: 561:                 I2C_Master_Write(0b00010000);
  7001  0001C2  0E00               	movlw	0
  7002  0001C4  0100               	movlb	0	; () banked
  7003  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7004  0001C8  0E10               	movlw	16
  7005  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7006  0001CC  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  7007                           
  7008                           ;main.c: 562:                 I2C_Master_Write('1');
  7009  0001D0  0E00               	movlw	0
  7010  0001D2  0100               	movlb	0	; () banked
  7011  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7012  0001D6  0E31               	movlw	49
  7013  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7014  0001DA  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  7015                           
  7016                           ;main.c: 563:                 I2C_Master_Stop();
  7017  0001DE  ECAB  F01D         	call	_I2C_Master_Stop	;wreg free
  7018                           
  7019                           ;main.c: 565:                 sens = 1;
  7020  0001E2  0E00               	movlw	0
  7021  0001E4  6E59               	movwf	_sens+1,c	;volatile
  7022  0001E6  0E01               	movlw	1
  7023  0001E8  6E58               	movwf	_sens,c	;volatile
  7024  0001EA                     l7740:
  7025                           
  7026                           ;main.c: 568:                 if ((temp_int == 2)||(state == 2)){
  7027  0001EA  0E02               	movlw	2
  7028  0001EC  0101               	movlb	1	; () banked
  7029  0001EE  1973               	xorwf	_temp_int& (0+255),w,b
  7030  0001F0  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7031  0001F2  B4D8               	btfsc	status,2,c
  7032  0001F4  D005               	goto	u8290
  7033                           
  7034                           ; BSR set to: 1
  7035  0001F6  0E02               	movlw	2
  7036  0001F8  1971               	xorwf	_state& (0+255),w,b
  7037  0001FA  1172               	iorwf	(_state+1)& (0+255),w,b
  7038  0001FC  A4D8               	btfss	status,2,c
  7039  0001FE  D253               	goto	l7850
  7040  000200                     u8290:
  7041                           
  7042                           ; BSR set to: 1
  7043                           ;main.c: 569:                     if ((temp_int == 2)){
  7044  000200  0E02               	movlw	2
  7045  000202  1973               	xorwf	_temp_int& (0+255),w,b
  7046  000204  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7047  000206  A4D8               	btfss	status,2,c
  7048  000208  D033               	goto	l7762
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;main.c: 570:                         state = 2;
  7052  00020A  0E00               	movlw	0
  7053  00020C  6F72               	movwf	(_state+1)& (0+255),b
  7054  00020E  0E02               	movlw	2
  7055  000210  6F71               	movwf	_state& (0+255),b
  7056                           
  7057                           ;main.c: 571:                         disp = 0;
  7058  000212  0E00               	movlw	0
  7059  000214  6F70               	movwf	(_disp+1)& (0+255),b
  7060  000216  0E00               	movlw	0
  7061  000218  6F6F               	movwf	_disp& (0+255),b
  7062                           
  7063                           ; BSR set to: 1
  7064                           ;main.c: 572:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7065  00021A  0E01               	movlw	1
  7066  00021C  EC9E  F01D         	call	_lcdInst
  7067  000220  0E11               	movlw	17
  7068  000222  0101               	movlb	1	; () banked
  7069  000224  6F00               	movwf	??_UI_main& (0+255),b
  7070  000226  0E3A               	movlw	58
  7071  000228                     u9487:
  7072  000228  2EE8               	decfsz	wreg,f,c
  7073  00022A  D7FE               	bra	u9487
  7074  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7075  00022E  D7FC               	bra	u9487
  7076  000230  F000               	nop	
  7077                           
  7078                           ;main.c: 573:                         printf("Op Time:");
  7079  000232  0EDE               	movlw	low STR_31
  7080  000234  0100               	movlb	0	; () banked
  7081  000236  6FED               	movwf	printf@fmt& (0+255),b
  7082  000238  0EFF               	movlw	high STR_31
  7083  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7084  00023C  EC38  F01D         	call	_printf	;wreg free
  7085  000240  0EC0               	movlw	192
  7086  000242  EC9E  F01D         	call	_lcdInst
  7087                           
  7088                           ;main.c: 575:                         printf("%d", cnt);
  7089  000246  0ECC               	movlw	low (STR_38+11)
  7090  000248  0100               	movlb	0	; () banked
  7091  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7092  00024C  0EFE               	movlw	high (STR_38+11)
  7093  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7094  000250  0E00               	movlw	0
  7095  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7096  000254  0E00               	movlw	0
  7097  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7098  000258  EC38  F01D         	call	_printf	;wreg free
  7099  00025C  0ED0               	movlw	208
  7100  00025E  EC9E  F01D         	call	_lcdInst
  7101                           
  7102                           ;main.c: 577:                         printf("    0-Menu   #>");
  7103  000262  0E25               	movlw	low (STR_36+1)
  7104  000264  0100               	movlb	0	; () banked
  7105  000266  6FED               	movwf	printf@fmt& (0+255),b
  7106  000268  0EFE               	movlw	high (STR_36+1)
  7107  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7108  00026C  EC38  F01D         	call	_printf	;wreg free
  7109  000270                     l7762:
  7110                           
  7111                           ;main.c: 579:                     if ((temp == '*') && (disp != 0)){
  7112  000270  0E2A               	movlw	42
  7113  000272  0100               	movlb	0	; () banked
  7114  000274  19FF               	xorwf	_temp& (0+255),w,b
  7115  000276  A4D8               	btfss	status,2,c
  7116  000278  D00B               	goto	l488
  7117                           
  7118                           ; BSR set to: 0
  7119  00027A  0101               	movlb	1	; () banked
  7120  00027C  516F               	movf	_disp& (0+255),w,b
  7121  00027E  1170               	iorwf	(_disp+1)& (0+255),w,b
  7122  000280  B4D8               	btfsc	status,2,c
  7123  000282  D006               	goto	l488
  7124                           
  7125                           ; BSR set to: 1
  7126                           ;main.c: 580:                         disp = disp - 1;
  7127  000284  0EFF               	movlw	255
  7128  000286  256F               	addwf	_disp& (0+255),w,b
  7129  000288  6F6F               	movwf	_disp& (0+255),b
  7130  00028A  0EFF               	movlw	255
  7131  00028C  2170               	addwfc	(_disp+1)& (0+255),w,b
  7132  00028E  6F70               	movwf	(_disp+1)& (0+255),b
  7133  000290                     l488:
  7134                           
  7135                           ;main.c: 582:                     if ((temp == '#')&& (disp <12)){
  7136  000290  0E23               	movlw	35
  7137  000292  0100               	movlb	0	; () banked
  7138  000294  19FF               	xorwf	_temp& (0+255),w,b
  7139  000296  A4D8               	btfss	status,2,c
  7140  000298  D00B               	goto	l7772
  7141                           
  7142                           ; BSR set to: 0
  7143  00029A  0101               	movlb	1	; () banked
  7144  00029C  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7145  00029E  D006               	goto	u8340
  7146  0002A0  5170               	movf	(_disp+1)& (0+255),w,b
  7147  0002A2  E106               	bnz	l7772
  7148  0002A4  0E0C               	movlw	12
  7149  0002A6  5D6F               	subwf	_disp& (0+255),w,b
  7150  0002A8  B0D8               	btfsc	status,0,c
  7151  0002AA  D002               	goto	l7772
  7152  0002AC                     u8340:
  7153                           
  7154                           ; BSR set to: 1
  7155                           ;main.c: 583:                         disp++;
  7156  0002AC  4B6F               	infsnz	_disp& (0+255),f,b
  7157  0002AE  2B70               	incf	(_disp+1)& (0+255),f,b
  7158  0002B0                     l7772:
  7159                           
  7160                           ;main.c: 585:                     if (disp == 0){
  7161  0002B0  0101               	movlb	1	; () banked
  7162  0002B2  516F               	movf	_disp& (0+255),w,b
  7163  0002B4  1170               	iorwf	(_disp+1)& (0+255),w,b
  7164  0002B6  A4D8               	btfss	status,2,c
  7165  0002B8  D02B               	goto	l7788
  7166                           
  7167                           ; BSR set to: 1
  7168                           ;main.c: 586:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7169  0002BA  0E01               	movlw	1
  7170  0002BC  EC9E  F01D         	call	_lcdInst
  7171  0002C0  0E11               	movlw	17
  7172  0002C2  0101               	movlb	1	; () banked
  7173  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7174  0002C6  0E3A               	movlw	58
  7175  0002C8                     u9497:
  7176  0002C8  2EE8               	decfsz	wreg,f,c
  7177  0002CA  D7FE               	bra	u9497
  7178  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7179  0002CE  D7FC               	bra	u9497
  7180  0002D0  F000               	nop	
  7181                           
  7182                           ;main.c: 587:                         printf("Op Time:");
  7183  0002D2  0EDE               	movlw	low STR_31
  7184  0002D4  0100               	movlb	0	; () banked
  7185  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7186  0002D8  0EFF               	movlw	high STR_31
  7187  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7188  0002DC  EC38  F01D         	call	_printf	;wreg free
  7189  0002E0  0EC0               	movlw	192
  7190  0002E2  EC9E  F01D         	call	_lcdInst
  7191                           
  7192                           ;main.c: 589:                         printf("%d", cnt);
  7193  0002E6  0ECC               	movlw	low (STR_38+11)
  7194  0002E8  0100               	movlb	0	; () banked
  7195  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7196  0002EC  0EFE               	movlw	high (STR_38+11)
  7197  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7198  0002F0  0E00               	movlw	0
  7199  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7200  0002F4  0E00               	movlw	0
  7201  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7202  0002F8  EC38  F01D         	call	_printf	;wreg free
  7203  0002FC  0ED0               	movlw	208
  7204  0002FE  EC9E  F01D         	call	_lcdInst
  7205                           
  7206                           ;main.c: 591:                         printf("     0-Menu   #>");
  7207  000302  0E24               	movlw	low STR_36
  7208  000304  0100               	movlb	0	; () banked
  7209  000306  6FED               	movwf	printf@fmt& (0+255),b
  7210  000308  0EFE               	movlw	high STR_36
  7211  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7212  00030C  EC38  F01D         	call	_printf	;wreg free
  7213  000310                     l7788:
  7214                           
  7215                           ;main.c: 594:                     if (disp == 1){
  7216  000310  0101               	movlb	1	; () banked
  7217  000312  056F               	decf	_disp& (0+255),w,b
  7218  000314  1170               	iorwf	(_disp+1)& (0+255),w,b
  7219  000316  A4D8               	btfss	status,2,c
  7220  000318  D02F               	goto	l7804
  7221                           
  7222                           ; BSR set to: 1
  7223                           ;main.c: 595:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7224  00031A  0E01               	movlw	1
  7225  00031C  EC9E  F01D         	call	_lcdInst
  7226  000320  0E11               	movlw	17
  7227  000322  0101               	movlb	1	; () banked
  7228  000324  6F00               	movwf	??_UI_main& (0+255),b
  7229  000326  0E3A               	movlw	58
  7230  000328                     u9507:
  7231  000328  2EE8               	decfsz	wreg,f,c
  7232  00032A  D7FE               	bra	u9507
  7233  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7234  00032E  D7FC               	bra	u9507
  7235  000330  F000               	nop	
  7236                           
  7237                           ;main.c: 596:                         printf("No. Tires: %d",t_dep);
  7238  000332  0ECF               	movlw	low STR_37
  7239  000334  0100               	movlb	0	; () banked
  7240  000336  6FED               	movwf	printf@fmt& (0+255),b
  7241  000338  0EFE               	movlw	high STR_37
  7242  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7243  00033C  C0F9  F0EF         	movff	UI_main@t_dep,?_printf+2
  7244  000340  C0FA  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7245  000344  EC38  F01D         	call	_printf	;wreg free
  7246  000348  0EC0               	movlw	192
  7247  00034A  EC9E  F01D         	call	_lcdInst
  7248                           
  7249                           ;main.c: 598:                         printf("No. Poles: %d", poles_detected);
  7250  00034E  0EC1               	movlw	low STR_38
  7251  000350  0100               	movlb	0	; () banked
  7252  000352  6FED               	movwf	printf@fmt& (0+255),b
  7253  000354  0EFE               	movlw	high STR_38
  7254  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7255  000358  C0FB  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7256  00035C  C0FC  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7257  000360  EC38  F01D         	call	_printf	;wreg free
  7258  000364  0ED0               	movlw	208
  7259  000366  EC9E  F01D         	call	_lcdInst
  7260                           
  7261                           ;main.c: 600:                         printf("<*   0-Menu   #>");
  7262  00036A  0E35               	movlw	low STR_39
  7263  00036C  0100               	movlb	0	; () banked
  7264  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7265  000370  0EFE               	movlw	high STR_39
  7266  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7267  000374  EC38  F01D         	call	_printf	;wreg free
  7268  000378                     l7804:
  7269                           
  7270                           ;main.c: 603:                     if (disp > 1 && disp <11){
  7271  000378  0101               	movlb	1	; () banked
  7272  00037A  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7273  00037C  D0CE               	goto	l7828
  7274  00037E  5170               	movf	(_disp+1)& (0+255),w,b
  7275  000380  E104               	bnz	u8370
  7276  000382  0E02               	movlw	2
  7277  000384  5D6F               	subwf	_disp& (0+255),w,b
  7278  000386  A0D8               	btfss	status,0,c
  7279  000388  D0C8               	goto	l7828
  7280  00038A                     u8370:
  7281                           
  7282                           ; BSR set to: 1
  7283  00038A  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7284  00038C  D006               	goto	u8380
  7285  00038E  5170               	movf	(_disp+1)& (0+255),w,b
  7286  000390  E103               	bnz	u8381
  7287  000392  0E0B               	movlw	11
  7288  000394  5D6F               	subwf	_disp& (0+255),w,b
  7289  000396  B0D8               	btfsc	status,0,c
  7290  000398                     u8381:
  7291  000398  D0C0               	goto	l7828
  7292  00039A                     u8380:
  7293                           
  7294                           ; BSR set to: 1
  7295                           ;main.c: 604:                         i = disp - 2;
  7296  00039A  0EFE               	movlw	254
  7297  00039C  256F               	addwf	_disp& (0+255),w,b
  7298  00039E  6F6D               	movwf	_i& (0+255),b
  7299  0003A0  0EFF               	movlw	255
  7300  0003A2  2170               	addwfc	(_disp+1)& (0+255),w,b
  7301  0003A4  6F6E               	movwf	(_i+1)& (0+255),b
  7302                           
  7303                           ; BSR set to: 1
  7304                           ;main.c: 605:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7305  0003A6  0E01               	movlw	1
  7306  0003A8  EC9E  F01D         	call	_lcdInst
  7307  0003AC  0E11               	movlw	17
  7308  0003AE  0101               	movlb	1	; () banked
  7309  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7310  0003B2  0E3A               	movlw	58
  7311  0003B4                     u9517:
  7312  0003B4  2EE8               	decfsz	wreg,f,c
  7313  0003B6  D7FE               	bra	u9517
  7314  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7315  0003BA  D7FC               	bra	u9517
  7316  0003BC  F000               	nop	
  7317                           
  7318                           ;main.c: 606:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7319  0003BE  0ECE               	movlw	low STR_40
  7320  0003C0  0100               	movlb	0	; () banked
  7321  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7322  0003C4  0EFD               	movlw	high STR_40
  7323  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7324  0003C8  0E01               	movlw	1
  7325  0003CA  0101               	movlb	1	; () banked
  7326  0003CC  256D               	addwf	_i& (0+255),w,b
  7327  0003CE  0100               	movlb	0	; () banked
  7328  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7329  0003D2  0E00               	movlw	0
  7330  0003D4  0101               	movlb	1	; () banked
  7331  0003D6  216E               	addwfc	(_i+1)& (0+255),w,b
  7332  0003D8  0100               	movlb	0	; () banked
  7333  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7334  0003DC  C16D  F100         	movff	_i,??_UI_main
  7335  0003E0  C16E  F101         	movff	_i+1,??_UI_main+1
  7336  0003E4  0101               	movlb	1	; () banked
  7337  0003E6  90D8               	bcf	status,0,c
  7338  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7339  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7340  0003EC  90D8               	bcf	status,0,c
  7341  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7342  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7343  0003F2  90D8               	bcf	status,0,c
  7344  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7345  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7346  0003F8  0E04               	movlw	low UI_main@Pole
  7347  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7348  0003FC  6ED9               	movwf	fsr2l,c
  7349  0003FE  0E01               	movlw	high UI_main@Pole
  7350  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7351  000402  6EDA               	movwf	fsr2h,c
  7352  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7353  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7354  00040C  C16D  F102         	movff	_i,??_UI_main+2
  7355  000410  C16E  F103         	movff	_i+1,??_UI_main+3
  7356  000414  90D8               	bcf	status,0,c
  7357  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7358  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7359  00041A  90D8               	bcf	status,0,c
  7360  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7361  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7362  000420  90D8               	bcf	status,0,c
  7363  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7364  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7365  000426  0E02               	movlw	2
  7366  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7367  00042A  0E00               	movlw	0
  7368  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7369  00042E  0E04               	movlw	low UI_main@Pole
  7370  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7371  000432  6ED9               	movwf	fsr2l,c
  7372  000434  0E01               	movlw	high UI_main@Pole
  7373  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7374  000438  6EDA               	movwf	fsr2h,c
  7375  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  7376  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  7377  000442  EC38  F01D         	call	_printf	;wreg free
  7378  000446  0EC0               	movlw	192
  7379  000448  EC9E  F01D         	call	_lcdInst
  7380                           
  7381                           ;main.c: 608:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7382  00044C  0E85               	movlw	low STR_41
  7383  00044E  0100               	movlb	0	; () banked
  7384  000450  6FED               	movwf	printf@fmt& (0+255),b
  7385  000452  0EFE               	movlw	high STR_41
  7386  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7387  000456  0E01               	movlw	1
  7388  000458  0101               	movlb	1	; () banked
  7389  00045A  256D               	addwf	_i& (0+255),w,b
  7390  00045C  0100               	movlb	0	; () banked
  7391  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  7392  000460  0E00               	movlw	0
  7393  000462  0101               	movlb	1	; () banked
  7394  000464  216E               	addwfc	(_i+1)& (0+255),w,b
  7395  000466  0100               	movlb	0	; () banked
  7396  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  7397  00046A  C16D  F100         	movff	_i,??_UI_main
  7398  00046E  C16E  F101         	movff	_i+1,??_UI_main+1
  7399  000472  0101               	movlb	1	; () banked
  7400  000474  90D8               	bcf	status,0,c
  7401  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  7402  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7403  00047A  90D8               	bcf	status,0,c
  7404  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  7405  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7406  000480  90D8               	bcf	status,0,c
  7407  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  7408  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7409  000486  0E04               	movlw	4
  7410  000488  2700               	addwf	??_UI_main& (0+255),f,b
  7411  00048A  0E00               	movlw	0
  7412  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7413  00048E  0E04               	movlw	low UI_main@Pole
  7414  000490  2500               	addwf	??_UI_main& (0+255),w,b
  7415  000492  6ED9               	movwf	fsr2l,c
  7416  000494  0E01               	movlw	high UI_main@Pole
  7417  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7418  000498  6EDA               	movwf	fsr2h,c
  7419  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  7420  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  7421  0004A2  EC38  F01D         	call	_printf	;wreg free
  7422  0004A6  0E90               	movlw	144
  7423  0004A8  EC9E  F01D         	call	_lcdInst
  7424                           
  7425                           ;main.c: 610:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7426  0004AC  0E36               	movlw	low STR_42
  7427  0004AE  0100               	movlb	0	; () banked
  7428  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  7429  0004B2  0EFF               	movlw	high STR_42
  7430  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7431  0004B6  0E01               	movlw	1
  7432  0004B8  0101               	movlb	1	; () banked
  7433  0004BA  256D               	addwf	_i& (0+255),w,b
  7434  0004BC  0100               	movlb	0	; () banked
  7435  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  7436  0004C0  0E00               	movlw	0
  7437  0004C2  0101               	movlb	1	; () banked
  7438  0004C4  216E               	addwfc	(_i+1)& (0+255),w,b
  7439  0004C6  0100               	movlb	0	; () banked
  7440  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  7441  0004CA  C16D  F100         	movff	_i,??_UI_main
  7442  0004CE  C16E  F101         	movff	_i+1,??_UI_main+1
  7443  0004D2  0101               	movlb	1	; () banked
  7444  0004D4  90D8               	bcf	status,0,c
  7445  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  7446  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7447  0004DA  90D8               	bcf	status,0,c
  7448  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  7449  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7450  0004E0  90D8               	bcf	status,0,c
  7451  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  7452  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7453  0004E6  0E06               	movlw	6
  7454  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  7455  0004EA  0E00               	movlw	0
  7456  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7457  0004EE  0E04               	movlw	low UI_main@Pole
  7458  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  7459  0004F2  6ED9               	movwf	fsr2l,c
  7460  0004F4  0E01               	movlw	high UI_main@Pole
  7461  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7462  0004F8  6EDA               	movwf	fsr2h,c
  7463  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  7464  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  7465  000502  EC38  F01D         	call	_printf	;wreg free
  7466  000506  0ED0               	movlw	208
  7467  000508  EC9E  F01D         	call	_lcdInst
  7468                           
  7469                           ;main.c: 612:                         printf("<*   0-Menu   #>");
  7470  00050C  0E35               	movlw	low STR_39
  7471  00050E  0100               	movlb	0	; () banked
  7472  000510  6FED               	movwf	printf@fmt& (0+255),b
  7473  000512  0EFE               	movlw	high STR_39
  7474  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7475  000516  EC38  F01D         	call	_printf	;wreg free
  7476  00051A                     l7828:
  7477                           
  7478                           ;main.c: 614:                     if (disp == 11){
  7479  00051A  0E0B               	movlw	11
  7480  00051C  0101               	movlb	1	; () banked
  7481  00051E  196F               	xorwf	_disp& (0+255),w,b
  7482  000520  1170               	iorwf	(_disp+1)& (0+255),w,b
  7483  000522  A4D8               	btfss	status,2,c
  7484  000524  D0C0               	goto	l7850
  7485                           
  7486                           ; BSR set to: 1
  7487                           ;main.c: 615:                         i = disp - 2;
  7488  000526  0EFE               	movlw	254
  7489  000528  256F               	addwf	_disp& (0+255),w,b
  7490  00052A  6F6D               	movwf	_i& (0+255),b
  7491  00052C  0EFF               	movlw	255
  7492  00052E  2170               	addwfc	(_disp+1)& (0+255),w,b
  7493  000530  6F6E               	movwf	(_i+1)& (0+255),b
  7494                           
  7495                           ; BSR set to: 1
  7496                           ;main.c: 616:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7497  000532  0E01               	movlw	1
  7498  000534  EC9E  F01D         	call	_lcdInst
  7499  000538  0E11               	movlw	17
  7500  00053A  0101               	movlb	1	; () banked
  7501  00053C  6F00               	movwf	??_UI_main& (0+255),b
  7502  00053E  0E3A               	movlw	58
  7503  000540                     u9527:
  7504  000540  2EE8               	decfsz	wreg,f,c
  7505  000542  D7FE               	bra	u9527
  7506  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  7507  000546  D7FC               	bra	u9527
  7508  000548  F000               	nop	
  7509                           
  7510                           ;main.c: 617:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7511  00054A  0ECE               	movlw	low STR_40
  7512  00054C  0100               	movlb	0	; () banked
  7513  00054E  6FED               	movwf	printf@fmt& (0+255),b
  7514  000550  0EFD               	movlw	high STR_40
  7515  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7516  000554  0E01               	movlw	1
  7517  000556  0101               	movlb	1	; () banked
  7518  000558  256D               	addwf	_i& (0+255),w,b
  7519  00055A  0100               	movlb	0	; () banked
  7520  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  7521  00055E  0E00               	movlw	0
  7522  000560  0101               	movlb	1	; () banked
  7523  000562  216E               	addwfc	(_i+1)& (0+255),w,b
  7524  000564  0100               	movlb	0	; () banked
  7525  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  7526  000568  C16D  F100         	movff	_i,??_UI_main
  7527  00056C  C16E  F101         	movff	_i+1,??_UI_main+1
  7528  000570  0101               	movlb	1	; () banked
  7529  000572  90D8               	bcf	status,0,c
  7530  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  7531  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7532  000578  90D8               	bcf	status,0,c
  7533  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  7534  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7535  00057E  90D8               	bcf	status,0,c
  7536  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  7537  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7538  000584  0E04               	movlw	low UI_main@Pole
  7539  000586  2500               	addwf	??_UI_main& (0+255),w,b
  7540  000588  6ED9               	movwf	fsr2l,c
  7541  00058A  0E01               	movlw	high UI_main@Pole
  7542  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7543  00058E  6EDA               	movwf	fsr2h,c
  7544  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  7545  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  7546  000598  C16D  F102         	movff	_i,??_UI_main+2
  7547  00059C  C16E  F103         	movff	_i+1,??_UI_main+3
  7548  0005A0  90D8               	bcf	status,0,c
  7549  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7550  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7551  0005A6  90D8               	bcf	status,0,c
  7552  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7553  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7554  0005AC  90D8               	bcf	status,0,c
  7555  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7556  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7557  0005B2  0E02               	movlw	2
  7558  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7559  0005B6  0E00               	movlw	0
  7560  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7561  0005BA  0E04               	movlw	low UI_main@Pole
  7562  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7563  0005BE  6ED9               	movwf	fsr2l,c
  7564  0005C0  0E01               	movlw	high UI_main@Pole
  7565  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7566  0005C4  6EDA               	movwf	fsr2h,c
  7567  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  7568  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  7569  0005CE  EC38  F01D         	call	_printf	;wreg free
  7570  0005D2  0EC0               	movlw	192
  7571  0005D4  EC9E  F01D         	call	_lcdInst
  7572                           
  7573                           ;main.c: 619:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7574  0005D8  0E85               	movlw	low STR_41
  7575  0005DA  0100               	movlb	0	; () banked
  7576  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  7577  0005DE  0EFE               	movlw	high STR_41
  7578  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7579  0005E2  0E01               	movlw	1
  7580  0005E4  0101               	movlb	1	; () banked
  7581  0005E6  256D               	addwf	_i& (0+255),w,b
  7582  0005E8  0100               	movlb	0	; () banked
  7583  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  7584  0005EC  0E00               	movlw	0
  7585  0005EE  0101               	movlb	1	; () banked
  7586  0005F0  216E               	addwfc	(_i+1)& (0+255),w,b
  7587  0005F2  0100               	movlb	0	; () banked
  7588  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  7589  0005F6  C16D  F100         	movff	_i,??_UI_main
  7590  0005FA  C16E  F101         	movff	_i+1,??_UI_main+1
  7591  0005FE  0101               	movlb	1	; () banked
  7592  000600  90D8               	bcf	status,0,c
  7593  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  7594  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7595  000606  90D8               	bcf	status,0,c
  7596  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  7597  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7598  00060C  90D8               	bcf	status,0,c
  7599  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  7600  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7601  000612  0E04               	movlw	4
  7602  000614  2700               	addwf	??_UI_main& (0+255),f,b
  7603  000616  0E00               	movlw	0
  7604  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7605  00061A  0E04               	movlw	low UI_main@Pole
  7606  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  7607  00061E  6ED9               	movwf	fsr2l,c
  7608  000620  0E01               	movlw	high UI_main@Pole
  7609  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7610  000624  6EDA               	movwf	fsr2h,c
  7611  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  7612  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  7613  00062E  EC38  F01D         	call	_printf	;wreg free
  7614  000632  0E90               	movlw	144
  7615  000634  EC9E  F01D         	call	_lcdInst
  7616                           
  7617                           ;main.c: 621:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7618  000638  0E36               	movlw	low STR_42
  7619  00063A  0100               	movlb	0	; () banked
  7620  00063C  6FED               	movwf	printf@fmt& (0+255),b
  7621  00063E  0EFF               	movlw	high STR_42
  7622  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7623  000642  0E01               	movlw	1
  7624  000644  0101               	movlb	1	; () banked
  7625  000646  256D               	addwf	_i& (0+255),w,b
  7626  000648  0100               	movlb	0	; () banked
  7627  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  7628  00064C  0E00               	movlw	0
  7629  00064E  0101               	movlb	1	; () banked
  7630  000650  216E               	addwfc	(_i+1)& (0+255),w,b
  7631  000652  0100               	movlb	0	; () banked
  7632  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  7633  000656  C16D  F100         	movff	_i,??_UI_main
  7634  00065A  C16E  F101         	movff	_i+1,??_UI_main+1
  7635  00065E  0101               	movlb	1	; () banked
  7636  000660  90D8               	bcf	status,0,c
  7637  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  7638  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7639  000666  90D8               	bcf	status,0,c
  7640  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  7641  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7642  00066C  90D8               	bcf	status,0,c
  7643  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  7644  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7645  000672  0E06               	movlw	6
  7646  000674  2700               	addwf	??_UI_main& (0+255),f,b
  7647  000676  0E00               	movlw	0
  7648  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7649  00067A  0E04               	movlw	low UI_main@Pole
  7650  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  7651  00067E  6ED9               	movwf	fsr2l,c
  7652  000680  0E01               	movlw	high UI_main@Pole
  7653  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7654  000684  6EDA               	movwf	fsr2h,c
  7655  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  7656  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  7657  00068E  EC38  F01D         	call	_printf	;wreg free
  7658  000692  0ED0               	movlw	208
  7659  000694  EC9E  F01D         	call	_lcdInst
  7660                           
  7661                           ;main.c: 623:                         printf("<*   0-Menu     ");
  7662  000698  0EF1               	movlw	low STR_47
  7663  00069A  0100               	movlb	0	; () banked
  7664  00069C  6FED               	movwf	printf@fmt& (0+255),b
  7665  00069E  0EFD               	movlw	high STR_47
  7666  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7667  0006A2  EC38  F01D         	call	_printf	;wreg free
  7668  0006A6                     l7850:
  7669                           
  7670                           ;main.c: 626:             if (temp_int == 3){
  7671  0006A6  0E03               	movlw	3
  7672  0006A8  0101               	movlb	1	; () banked
  7673  0006AA  1973               	xorwf	_temp_int& (0+255),w,b
  7674  0006AC  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7675  0006AE  A4D8               	btfss	status,2,c
  7676  0006B0  D0B5               	goto	u8430
  7677                           
  7678                           ; BSR set to: 1
  7679                           ;main.c: 627:                 state = 0;
  7680  0006B2  0E00               	movlw	0
  7681  0006B4  6F72               	movwf	(_state+1)& (0+255),b
  7682  0006B6  0E00               	movlw	0
  7683  0006B8  6F71               	movwf	_state& (0+255),b
  7684                           
  7685                           ;main.c: 628:                 tick = 0;
  7686  0006BA  0E00               	movlw	0
  7687  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  7688  0006BE  0E00               	movlw	0
  7689  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  7690  0006C2  0E00               	movlw	0
  7691  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  7692  0006C6  0E00               	movlw	0
  7693  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  7694                           
  7695                           ;main.c: 629:                 while(~key_was_pressed){
  7696  0006CA  D0A5               	goto	l7900
  7697  0006CC                     l7854:
  7698                           
  7699                           ; BSR set to: 1
  7700                           ;main.c: 630:                     if(tick % 1000 == 0){
  7701  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  7702  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  7703  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  7704  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  7705  0006DC  0EE8               	movlw	232
  7706  0006DE  0100               	movlb	0	; () banked
  7707  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  7708  0006E2  0E03               	movlw	3
  7709  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  7710  0006E6  0E00               	movlw	0
  7711  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  7712  0006EA  0E00               	movlw	0
  7713  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  7714  0006EE  EC8D  F01A         	call	___llmod	;wreg free
  7715  0006F2  0100               	movlb	0	; () banked
  7716  0006F4  5180               	movf	?___llmod& (0+255),w,b
  7717  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  7718  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  7719  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  7720  0006FC  A4D8               	btfss	status,2,c
  7721  0006FE  D084               	goto	l7898
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;main.c: 631:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7725  000700  0E01               	movlw	1
  7726  000702  EC9E  F01D         	call	_lcdInst
  7727  000706  0E11               	movlw	17
  7728  000708  0101               	movlb	1	; () banked
  7729  00070A  6F00               	movwf	??_UI_main& (0+255),b
  7730  00070C  0E3A               	movlw	58
  7731  00070E                     u9537:
  7732  00070E  2EE8               	decfsz	wreg,f,c
  7733  000710  D7FE               	bra	u9537
  7734  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  7735  000714  D7FC               	bra	u9537
  7736  000716  F000               	nop	
  7737                           
  7738                           ;main.c: 632:                         printf("DATE & TIME");
  7739  000718  0E12               	movlw	low STR_48
  7740  00071A  0100               	movlb	0	; () banked
  7741  00071C  6FED               	movwf	printf@fmt& (0+255),b
  7742  00071E  0EFF               	movlw	high STR_48
  7743  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7744  000722  EC38  F01D         	call	_printf	;wreg free
  7745                           
  7746                           ;main.c: 633:                         I2C_Master_Init(100000);
  7747  000726  0EA0               	movlw	160
  7748  000728  0100               	movlb	0	; () banked
  7749  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7750  00072C  0E86               	movlw	134
  7751  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7752  000730  0E01               	movlw	1
  7753  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7754  000734  0E00               	movlw	0
  7755  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7756  000738  ECC1  F01A         	call	_I2C_Master_Init	;wreg free
  7757                           
  7758                           ;main.c: 634:                         I2C_Master_Start();
  7759  00073C  ECAF  F01D         	call	_I2C_Master_Start	;wreg free
  7760                           
  7761                           ;main.c: 635:                         I2C_Master_Write(0b11010000);
  7762  000740  0E00               	movlw	0
  7763  000742  0100               	movlb	0	; () banked
  7764  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7765  000746  0ED0               	movlw	208
  7766  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7767  00074A  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  7768                           
  7769                           ;main.c: 636:                         I2C_Master_Write(0x00);
  7770  00074E  0E00               	movlw	0
  7771  000750  0100               	movlb	0	; () banked
  7772  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7773  000754  0E00               	movlw	0
  7774  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7775  000758  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  7776                           
  7777                           ;main.c: 637:                         I2C_Master_Stop();
  7778  00075C  ECAB  F01D         	call	_I2C_Master_Stop	;wreg free
  7779                           
  7780                           ;main.c: 639:                         I2C_Master_Start();
  7781  000760  ECAF  F01D         	call	_I2C_Master_Start	;wreg free
  7782                           
  7783                           ;main.c: 640:                         I2C_Master_Write(0b11010001);
  7784  000764  0E00               	movlw	0
  7785  000766  0100               	movlb	0	; () banked
  7786  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7787  00076A  0ED1               	movlw	209
  7788  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7789  00076E  ECA6  F01D         	call	_I2C_Master_Write	;wreg free
  7790                           
  7791                           ;main.c: 641:                         for(unsigned char i = 0; i < 6; i++){
  7792  000772  0E00               	movlw	0
  7793  000774  0101               	movlb	1	; () banked
  7794  000776  6F59               	movwf	UI_main@i& (0+255),b
  7795  000778                     l7878:
  7796                           
  7797                           ; BSR set to: 1
  7798  000778  0E05               	movlw	5
  7799  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  7800  00077C  D001               	goto	l7882
  7801  00077E  D00D               	goto	l7888
  7802  000780                     l7882:
  7803                           
  7804                           ; BSR set to: 1
  7805                           ;main.c: 642:                             time[i] = I2C_Master_Read(0);
  7806  000780  0E64               	movlw	low _time
  7807  000782  2559               	addwf	UI_main@i& (0+255),w,b
  7808  000784  6ED9               	movwf	fsr2l,c
  7809  000786  6ADA               	clrf	fsr2h,c
  7810  000788  0E01               	movlw	high _time
  7811  00078A  22DA               	addwfc	fsr2h,f,c
  7812  00078C  0E00               	movlw	0
  7813  00078E  EC23  F01D         	call	_I2C_Master_Read
  7814  000792  6EDF               	movwf	indf2,c
  7815                           
  7816                           ;main.c: 643:                         }
  7817  000794  0101               	movlb	1	; () banked
  7818  000796  2B59               	incf	UI_main@i& (0+255),f,b
  7819  000798  D7EF               	goto	l7878
  7820  00079A                     l7888:
  7821                           
  7822                           ; BSR set to: 1
  7823                           ;main.c: 644:                         time[6] = I2C_Master_Read(1);
  7824  00079A  0E01               	movlw	1
  7825  00079C  EC23  F01D         	call	_I2C_Master_Read
  7826  0007A0  0101               	movlb	1	; () banked
  7827  0007A2  6F6A               	movwf	(_time+6)& (0+255),b
  7828                           
  7829                           ;main.c: 645:                         I2C_Master_Stop();
  7830  0007A4  ECAB  F01D         	call	_I2C_Master_Stop	;wreg free
  7831  0007A8  0EC0               	movlw	192
  7832  0007AA  EC9E  F01D         	call	_lcdInst
  7833                           
  7834                           ;main.c: 649:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  7835  0007AE  0EA3               	movlw	low STR_49
  7836  0007B0  0100               	movlb	0	; () banked
  7837  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  7838  0007B4  0EFE               	movlw	high STR_49
  7839  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7840  0007B8  C16A  F0EF         	movff	_time+6,?_printf+2
  7841  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  7842  0007BE  C169  F0F1         	movff	_time+5,?_printf+4
  7843  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  7844  0007C4  C168  F0F3         	movff	_time+4,?_printf+6
  7845  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  7846  0007CA  EC38  F01D         	call	_printf	;wreg free
  7847  0007CE  0E90               	movlw	144
  7848  0007D0  EC9E  F01D         	call	_lcdInst
  7849                           
  7850                           ;main.c: 651:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  7851  0007D4  0EB2               	movlw	low STR_50
  7852  0007D6  0100               	movlb	0	; () banked
  7853  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  7854  0007DA  0EFE               	movlw	high STR_50
  7855  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7856  0007DE  C166  F0EF         	movff	_time+2,?_printf+2
  7857  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  7858  0007E4  C165  F0F1         	movff	_time+1,?_printf+4
  7859  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  7860  0007EA  C164  F0F3         	movff	_time,?_printf+6
  7861  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  7862  0007F0  EC38  F01D         	call	_printf	;wreg free
  7863  0007F4  0ED0               	movlw	208
  7864  0007F6  EC9E  F01D         	call	_lcdInst
  7865                           
  7866                           ;main.c: 653:                         printf("     0-Menu     ");
  7867  0007FA  0EE0               	movlw	low STR_30
  7868  0007FC  0100               	movlb	0	; () banked
  7869  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  7870  000800  0EFD               	movlw	high STR_30
  7871  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7872  000804  EC38  F01D         	call	_printf	;wreg free
  7873  000808                     l7898:
  7874                           
  7875                           ;main.c: 656:                     tick++;
  7876  000808  0E01               	movlw	1
  7877  00080A  0101               	movlb	1	; () banked
  7878  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  7879  00080E  0E00               	movlw	0
  7880  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  7881  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  7882  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  7883  000816                     l7900:
  7884                           
  7885                           ; BSR set to: 1
  7886                           ;main.c: 629:                 while(~key_was_pressed){
  7887  000816  0577               	decf	_key_was_pressed& (0+255),w,b	;volatile
  7888  000818  A4D8               	btfss	status,2,c
  7889  00081A  D758               	goto	l7854
  7890  00081C                     u8430:
  7891                           
  7892                           ;main.c: 524:     while(sens==0){
  7893  00081C  5058               	movf	_sens,w,c	;volatile
  7894  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  7895  000820  A4D8               	btfss	status,2,c
  7896  000822  0012               	return	
  7897  000824  D44B               	goto	l7682
  7898  000826                     __end_of_UI_main:
  7899                           	opt callstack 0
  7900                           
  7901 ;; *************** function _printf *****************
  7902 ;; Defined at:
  7903 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  7906 ;;		 -> STR_62(10), STR_61(11), STR_60(11), STR_59(12), 
  7907 ;;		 -> STR_58(12), STR_57(10), STR_56(10), STR_55(13), 
  7908 ;;		 -> STR_54(8), STR_53(3), STR_52(4), STR_51(17), 
  7909 ;;		 -> STR_50(15), STR_49(15), STR_48(12), STR_47(17), 
  7910 ;;		 -> STR_46(12), STR_45(15), STR_44(18), STR_43(17), 
  7911 ;;		 -> STR_42(12), STR_41(15), STR_40(18), STR_39(17), 
  7912 ;;		 -> STR_38(14), STR_37(14), STR_36(17), STR_35(3), 
  7913 ;;		 -> STR_34(9), STR_33(16), STR_32(3), STR_31(9), 
  7914 ;;		 -> STR_30(17), STR_29(15), STR_28(15), STR_27(12), 
  7915 ;;		 -> STR_26(10), STR_25(15), STR_24(12), STR_23(10), 
  7916 ;;		 -> STR_22(16), STR_21(12), STR_20(11), STR_19(13), 
  7917 ;;		 -> STR_18(8), STR_17(10), STR_16(17), STR_15(10), 
  7918 ;;		 -> STR_14(16), STR_13(10), STR_12(16), STR_11(10), 
  7919 ;;		 -> STR_10(17), STR_9(5), STR_8(10), STR_7(14), 
  7920 ;;		 -> STR_6(6), STR_5(10), STR_4(10), STR_3(11), 
  7921 ;;		 -> STR_2(13), STR_1(10), 
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;  ap              2  119[BANK0 ] PTR void [1]
  7924 ;;		 -> ?_printf(2), 
  7925 ;;  ret             2    0        int 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  2  109[BANK0 ] int 
  7928 ;; Registers used:
  7929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7935 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7936 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7938 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7939 ;;Total ram usage:       12 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:   13
  7942 ;; This function calls:
  7943 ;;		_vfprintf
  7944 ;; This function is called by:
  7945 ;;		_actuators_main
  7946 ;;		_stepper2
  7947 ;;		_stepper2_back
  7948 ;;		_full_drive
  7949 ;;		_print_echo
  7950 ;;		_ultrasonic_main
  7951 ;;		_number_deploy
  7952 ;;		_UI_main
  7953 ;;		_brake
  7954 ;;		_main
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text20
  7959  003A70                     __ptext20:
  7960                           	opt callstack 0
  7961  003A70                     _printf:
  7962                           	opt callstack 16
  7963                           
  7964                           ;incstack = 0
  7965  003A70  0EEF               	movlw	low (?_printf+2)
  7966  003A72  0100               	movlb	0	; () banked
  7967  003A74  6FF7               	movwf	printf@ap& (0+255),b
  7968  003A76  0E00               	movlw	high (?_printf+2)
  7969  003A78  6FF8               	movwf	(printf@ap+1)& (0+255),b
  7970                           
  7971                           ; BSR set to: 0
  7972  003A7A  0E00               	movlw	0
  7973  003A7C  6FE5               	movwf	vfprintf@fp& (0+255),b
  7974  003A7E  0E00               	movlw	0
  7975  003A80  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  7976  003A82  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  7977  003A86  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  7978  003A8A  0EF7               	movlw	low printf@ap
  7979  003A8C  6FE9               	movwf	vfprintf@ap& (0+255),b
  7980  003A8E  0E00               	movlw	high printf@ap
  7981  003A90  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  7982  003A92  EC47  F01B         	call	_vfprintf	;wreg free
  7983  003A96  0012               	return		;funcret
  7984  003A98                     __end_of_printf:
  7985                           	opt callstack 0
  7986                           
  7987 ;; *************** function _vfprintf *****************
  7988 ;; Defined at:
  7989 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  7992 ;;		 -> NULL(0), 
  7993 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  7994 ;;		 -> STR_62(10), STR_61(11), STR_60(11), STR_59(12), 
  7995 ;;		 -> STR_58(12), STR_57(10), STR_56(10), STR_55(13), 
  7996 ;;		 -> STR_54(8), STR_53(3), STR_52(4), STR_51(17), 
  7997 ;;		 -> STR_50(15), STR_49(15), STR_48(12), STR_47(17), 
  7998 ;;		 -> STR_46(12), STR_45(15), STR_44(18), STR_43(17), 
  7999 ;;		 -> STR_42(12), STR_41(15), STR_40(18), STR_39(17), 
  8000 ;;		 -> STR_38(14), STR_37(14), STR_36(17), STR_35(3), 
  8001 ;;		 -> STR_34(9), STR_33(16), STR_32(3), STR_31(9), 
  8002 ;;		 -> STR_30(17), STR_29(15), STR_28(15), STR_27(12), 
  8003 ;;		 -> STR_26(10), STR_25(15), STR_24(12), STR_23(10), 
  8004 ;;		 -> STR_22(16), STR_21(12), STR_20(11), STR_19(13), 
  8005 ;;		 -> STR_18(8), STR_17(10), STR_16(17), STR_15(10), 
  8006 ;;		 -> STR_14(16), STR_13(10), STR_12(16), STR_11(10), 
  8007 ;;		 -> STR_10(17), STR_9(5), STR_8(10), STR_7(14), 
  8008 ;;		 -> STR_6(6), STR_5(10), STR_4(10), STR_3(11), 
  8009 ;;		 -> STR_2(13), STR_1(10), 
  8010 ;;  ap              2  105[BANK0 ] PTR PTR void 
  8011 ;;		 -> printf@ap(2), 
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  8014 ;;		 -> STR_62(10), STR_61(11), STR_60(11), STR_59(12), 
  8015 ;;		 -> STR_58(12), STR_57(10), STR_56(10), STR_55(13), 
  8016 ;;		 -> STR_54(8), STR_53(3), STR_52(4), STR_51(17), 
  8017 ;;		 -> STR_50(15), STR_49(15), STR_48(12), STR_47(17), 
  8018 ;;		 -> STR_46(12), STR_45(15), STR_44(18), STR_43(17), 
  8019 ;;		 -> STR_42(12), STR_41(15), STR_40(18), STR_39(17), 
  8020 ;;		 -> STR_38(14), STR_37(14), STR_36(17), STR_35(3), 
  8021 ;;		 -> STR_34(9), STR_33(16), STR_32(3), STR_31(9), 
  8022 ;;		 -> STR_30(17), STR_29(15), STR_28(15), STR_27(12), 
  8023 ;;		 -> STR_26(10), STR_25(15), STR_24(12), STR_23(10), 
  8024 ;;		 -> STR_22(16), STR_21(12), STR_20(11), STR_19(13), 
  8025 ;;		 -> STR_18(8), STR_17(10), STR_16(17), STR_15(10), 
  8026 ;;		 -> STR_14(16), STR_13(10), STR_12(16), STR_11(10), 
  8027 ;;		 -> STR_10(17), STR_9(5), STR_8(10), STR_7(14), 
  8028 ;;		 -> STR_6(6), STR_5(10), STR_4(10), STR_3(11), 
  8029 ;;		 -> STR_2(13), STR_1(10), 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  2  101[BANK0 ] int 
  8032 ;; Registers used:
  8033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8039 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8043 ;;Total ram usage:        8 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:   12
  8046 ;; This function calls:
  8047 ;;		_vfpfcnvrt
  8048 ;; This function is called by:
  8049 ;;		_printf
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text21
  8054  00368E                     __ptext21:
  8055                           	opt callstack 0
  8056  00368E                     _vfprintf:
  8057                           	opt callstack 16
  8058                           
  8059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8060                           
  8061                           ;incstack = 0
  8062  00368E  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8063  003692  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8064                           
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8066  003696  0E00               	movlw	0
  8067  003698  6E49               	movwf	_nout+1,c
  8068  00369A  0E00               	movlw	0
  8069  00369C  6E48               	movwf	_nout,c
  8070                           
  8071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8072  00369E  D014               	goto	l6744
  8073  0036A0                     l6742:
  8074                           
  8075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8076  0036A0  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8077  0036A4  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8078  0036A8  0EEB               	movlw	low vfprintf@cfmt
  8079  0036AA  0100               	movlb	0	; () banked
  8080  0036AC  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8081  0036AE  0E00               	movlw	high vfprintf@cfmt
  8082  0036B0  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8083  0036B2  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8084  0036B6  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8085  0036BA  EC43  F009         	call	_vfpfcnvrt	;wreg free
  8086  0036BE  0100               	movlb	0	; () banked
  8087  0036C0  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8088  0036C2  2648               	addwf	_nout,f,c
  8089  0036C4  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8090  0036C6  2249               	addwfc	_nout+1,f,c
  8091  0036C8                     l6744:
  8092                           
  8093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8094  0036C8  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8095  0036CC  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8096  0036D0                     	if	0	;tblptru may be non-zero
  8097  0036D0                     	endif
  8098  0036D0                     	if	0	;tblptru may be non-zero
  8099  0036D0                     	endif
  8100  0036D0  0008               	tblrd		*
  8101  0036D2  50F5               	movf	tablat,w,c
  8102  0036D4  0900               	iorlw	0
  8103  0036D6  A4D8               	btfss	status,2,c
  8104  0036D8  D7E3               	goto	l6742
  8105                           
  8106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8107  0036DA  C048  F0E5         	movff	_nout,?_vfprintf
  8108  0036DE  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8109  0036E2  0012               	return		;funcret
  8110  0036E4                     __end_of_vfprintf:
  8111                           	opt callstack 0
  8112                           
  8113 ;; *************** function _vfpfcnvrt *****************
  8114 ;; Defined at:
  8115 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8118 ;;		 -> NULL(0), 
  8119 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8120 ;;		 -> vfprintf@cfmt(2), 
  8121 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8122 ;;		 -> printf@ap(2), 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  llu             8   88[BANK0 ] unsigned long long 
  8125 ;;  ll              8   80[BANK0 ] long long 
  8126 ;;  f               4    0        long long 
  8127 ;;  vp              3    0        PTR void 
  8128 ;;  ct              3    0        unsigned char [3]
  8129 ;;  cp              3    0        PTR unsigned char 
  8130 ;;  done            2   97[BANK0 ] int 
  8131 ;;  i               2    0        int 
  8132 ;;  c               1   96[BANK0 ] unsigned char 
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  2   70[BANK0 ] int 
  8135 ;; Registers used:
  8136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8142 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8143 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8144 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8145 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8146 ;;Total ram usage:       31 bytes
  8147 ;; Hardware stack levels used:    1
  8148 ;; Hardware stack levels required when called:   11
  8149 ;; This function calls:
  8150 ;;		_atoi
  8151 ;;		_dtoa
  8152 ;;		_fputc
  8153 ;;		_isdigit
  8154 ;;		_xtoa
  8155 ;; This function is called by:
  8156 ;;		_vfprintf
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           	psect	text22
  8161  001286                     __ptext22:
  8162                           	opt callstack 0
  8163  001286                     _vfpfcnvrt:
  8164                           	opt callstack 16
  8165                           
  8166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8167                           
  8168                           ;incstack = 0
  8169  001286  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8170  00128A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8171  00128E  CFDE FFF6          	movff	postinc2,tblptrl
  8172  001292  CFDD FFF7          	movff	postdec2,tblptrh
  8173  001296                     	if	0	;tblptru may be non-zero
  8174  001296                     	endif
  8175  001296                     	if	0	;tblptru may be non-zero
  8176  001296                     	endif
  8177  001296  0008               	tblrd		*
  8178  001298  50F5               	movf	tablat,w,c
  8179  00129A  0A25               	xorlw	37
  8180  00129C  A4D8               	btfss	status,2,c
  8181  00129E  D1AD               	goto	l6722
  8182                           
  8183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8184  0012A0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8185  0012A4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8186  0012A8  2ADE               	incf	postinc2,f,c
  8187  0012AA  0E00               	movlw	0
  8188  0012AC  22DD               	addwfc	postdec2,f,c
  8189                           
  8190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8191  0012AE  0E00               	movlw	0
  8192  0012B0  6E4B               	movwf	_width+1,c
  8193  0012B2  0E00               	movlw	0
  8194  0012B4  6E4A               	movwf	_width,c
  8195  0012B6  C04A  F04E         	movff	_width,_flags
  8196  0012BA  C04B  F04F         	movff	_width+1,_flags+1
  8197                           
  8198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8199  0012BE  684C               	setf	_prec,c
  8200  0012C0  684D               	setf	_prec+1,c
  8201                           
  8202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8203  0012C2  0E00               	movlw	0
  8204  0012C4  0100               	movlb	0	; () banked
  8205  0012C6  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8206  0012C8  0E00               	movlw	0
  8207  0012CA  D014               	goto	L3
  8208  0012CC                     l6634:
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8212  0012CC  804E               	bsf	_flags,0,c
  8213  0012CE                     l6636:
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8217  0012CE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8218  0012D2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8219  0012D6  2ADE               	incf	postinc2,f,c
  8220  0012D8  0E00               	movlw	0
  8221  0012DA  22DD               	addwfc	postdec2,f,c
  8222                           
  8223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8224  0012DC  D02E               	goto	l6660
  8225  0012DE                     l6638:
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8229  0012DE  824E               	bsf	_flags,1,c
  8230  0012E0  D7F6               	goto	l6636
  8231  0012E2                     l6642:
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8235  0012E2  844E               	bsf	_flags,2,c
  8236  0012E4  D7F4               	goto	l6636
  8237  0012E6                     l6646:
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8241  0012E6  864E               	bsf	_flags,3,c
  8242  0012E8  D7F2               	goto	l6636
  8243  0012EA                     l6650:
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8247  0012EA  884E               	bsf	_flags,4,c
  8248  0012EC  D7F0               	goto	l6636
  8249  0012EE                     l6654:
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8253  0012EE  0E00               	movlw	0
  8254  0012F0  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8255  0012F2  0E01               	movlw	1
  8256  0012F4                     L3:
  8257  0012F4  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8258                           
  8259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8260  0012F6  D021               	goto	l6660
  8261  0012F8                     l6658:
  8262                           
  8263                           ; BSR set to: 0
  8264  0012F8  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8265  0012FC  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8266  001300  CFDE FFF6          	movff	postinc2,tblptrl
  8267  001304  CFDD FFF7          	movff	postdec2,tblptrh
  8268  001308                     	if	0	;tblptru may be non-zero
  8269  001308                     	endif
  8270  001308                     	if	0	;tblptru may be non-zero
  8271  001308                     	endif
  8272  001308  0008               	tblrd		*
  8273  00130A  50F5               	movf	tablat,w,c
  8274  00130C  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8275  00130E  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8276                           
  8277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8278                           ; Switch size 1, requested type "simple"
  8279                           ; Number of cases is 1, Range of values is 0 to 0
  8280                           ; switch strategies available:
  8281                           ; Name         Instructions Cycles
  8282                           ; simple_byte            4     3 (average)
  8283                           ;	Chosen strategy is simple_byte
  8284  001310  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8285  001312  0A00               	xorlw	0	; case 0
  8286  001314  A4D8               	btfss	status,2,c
  8287  001316  D7EB               	goto	l6654
  8288                           
  8289                           ; BSR set to: 0
  8290                           ; Switch size 1, requested type "simple"
  8291                           ; Number of cases is 5, Range of values is 32 to 48
  8292                           ; switch strategies available:
  8293                           ; Name         Instructions Cycles
  8294                           ; simple_byte           16     9 (average)
  8295                           ;	Chosen strategy is simple_byte
  8296  001318  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8297  00131A  0A20               	xorlw	32	; case 32
  8298  00131C  B4D8               	btfsc	status,2,c
  8299  00131E  D7E3               	goto	l6646
  8300  001320  0A03               	xorlw	3	; case 35
  8301  001322  B4D8               	btfsc	status,2,c
  8302  001324  D7E2               	goto	l6650
  8303  001326  0A08               	xorlw	8	; case 43
  8304  001328  B4D8               	btfsc	status,2,c
  8305  00132A  D7DB               	goto	l6642
  8306  00132C  0A06               	xorlw	6	; case 45
  8307  00132E  B4D8               	btfsc	status,2,c
  8308  001330  D7CD               	goto	l6634
  8309  001332  0A1D               	xorlw	29	; case 48
  8310  001334  B4D8               	btfsc	status,2,c
  8311  001336  D7D3               	goto	l6638
  8312  001338  D7DA               	goto	l6654
  8313  00133A                     l6660:
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8317  00133A  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8318  00133C  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8319  00133E  B4D8               	btfsc	status,2,c
  8320  001340  D7DB               	goto	l6658
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8324  001342  B04E               	btfsc	_flags,0,c
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8328  001344  924E               	bcf	_flags,1,c
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8332  001346  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8333  00134A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8334  00134E  CFDE FFF6          	movff	postinc2,tblptrl
  8335  001352  CFDD FFF7          	movff	postdec2,tblptrh
  8336  001356                     	if	0	;tblptru may be non-zero
  8337  001356                     	endif
  8338  001356                     	if	0	;tblptru may be non-zero
  8339  001356                     	endif
  8340  001356  0008               	tblrd		*
  8341  001358  50F5               	movf	tablat,w,c
  8342  00135A  0A2A               	xorlw	42
  8343  00135C  A4D8               	btfss	status,2,c
  8344  00135E  D023               	goto	l6672
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8348  001360  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8349  001364  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8350  001368  2ADE               	incf	postinc2,f,c
  8351  00136A  0E00               	movlw	0
  8352  00136C  22DD               	addwfc	postdec2,f,c
  8353                           
  8354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8355  00136E  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8356  001372  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8357  001376  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8358  00137A  0E02               	movlw	2
  8359  00137C  26DE               	addwf	postinc2,f,c
  8360  00137E  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8361  001382  0E00               	movlw	0
  8362  001384  22DD               	addwfc	postdec2,f,c
  8363  001386  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8364  00138A  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8365  00138E  CFDE F04A          	movff	postinc2,_width
  8366  001392  CFDD F04B          	movff	postdec2,_width+1
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8370  001396  AE4B               	btfss	_width+1,7,c
  8371  001398  D040               	goto	u7250
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8375  00139A  804E               	bsf	_flags,0,c
  8376                           
  8377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8378  00139C  6C4A               	negf	_width,c
  8379  00139E  1E4B               	comf	_width+1,f,c
  8380  0013A0  B0D8               	btfsc	status,0,c
  8381  0013A2  2A4B               	incf	_width+1,f,c
  8382  0013A4  D03A               	goto	u7250
  8383  0013A6                     l6672:
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8387  0013A6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8388  0013AA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8389  0013AE  CFDE F087          	movff	postinc2,atoi@s
  8390  0013B2  CFDD F088          	movff	postdec2,atoi@s+1
  8391  0013B6  ECB6  F013         	call	_atoi	;wreg free
  8392  0013BA  C087  F04A         	movff	?_atoi,_width
  8393  0013BE  C088  F04B         	movff	?_atoi+1,_width+1
  8394                           
  8395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8396  0013C2  D007               	goto	l6676
  8397  0013C4                     l6674:
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8401  0013C4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8402  0013C8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8403  0013CC  2ADE               	incf	postinc2,f,c
  8404  0013CE  0E00               	movlw	0
  8405  0013D0  22DD               	addwfc	postdec2,f,c
  8406  0013D2                     l6676:
  8407  0013D2  0ED0               	movlw	208
  8408  0013D4  0100               	movlb	0	; () banked
  8409  0013D6  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8410  0013D8  0EFF               	movlw	255
  8411  0013DA  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8412  0013DC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8413  0013E0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8414  0013E4  CFDE FFF6          	movff	postinc2,tblptrl
  8415  0013E8  CFDD FFF7          	movff	postdec2,tblptrh
  8416  0013EC                     	if	0	;tblptru may be non-zero
  8417  0013EC                     	endif
  8418  0013EC                     	if	0	;tblptru may be non-zero
  8419  0013EC                     	endif
  8420  0013EC  0008               	tblrd		*
  8421  0013EE  50F5               	movf	tablat,w,c
  8422  0013F0  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8423  0013F2  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8424  0013F4  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8425  0013F6  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8426  0013F8  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8427  0013FA  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8428  0013FC  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8429  0013FE  E106               	bnz	u7230
  8430  001400  0E0A               	movlw	10
  8431  001402  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8432  001404  B0D8               	btfsc	status,0,c
  8433  001406  D002               	goto	u7230
  8434  001408  0E01               	movlw	1
  8435  00140A  D001               	goto	u7240
  8436  00140C                     u7230:
  8437  00140C  0E00               	movlw	0
  8438  00140E                     u7240:
  8439  00140E  6FE3               	movwf	_vfpfcnvrt$1126& (0+255),b
  8440  001410  6BE4               	clrf	(_vfpfcnvrt$1126+1)& (0+255),b
  8441                           
  8442                           ; BSR set to: 0
  8443  001412  51E3               	movf	_vfpfcnvrt$1126& (0+255),w,b
  8444  001414  11E4               	iorwf	(_vfpfcnvrt$1126+1)& (0+255),w,b
  8445  001416  A4D8               	btfss	status,2,c
  8446  001418  D7D5               	goto	l6674
  8447  00141A                     u7250:
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8451  00141A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8452  00141E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8453  001422  CFDE FFF6          	movff	postinc2,tblptrl
  8454  001426  CFDD FFF7          	movff	postdec2,tblptrh
  8455  00142A                     	if	0	;tblptru may be non-zero
  8456  00142A                     	endif
  8457  00142A                     	if	0	;tblptru may be non-zero
  8458  00142A                     	endif
  8459  00142A  0008               	tblrd		*
  8460  00142C  50F5               	movf	tablat,w,c
  8461  00142E  0A64               	xorlw	100
  8462  001430  B4D8               	btfsc	status,2,c
  8463  001432  D00D               	goto	u7270
  8464                           
  8465                           ; BSR set to: 0
  8466  001434  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8467  001438  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8468  00143C  CFDE FFF6          	movff	postinc2,tblptrl
  8469  001440  CFDD FFF7          	movff	postdec2,tblptrh
  8470  001444                     	if	0	;tblptru may be non-zero
  8471  001444                     	endif
  8472  001444                     	if	0	;tblptru may be non-zero
  8473  001444                     	endif
  8474  001444  0008               	tblrd		*
  8475  001446  50F5               	movf	tablat,w,c
  8476  001448  0A69               	xorlw	105
  8477  00144A  A4D8               	btfss	status,2,c
  8478  00144C  D03F               	goto	l6692
  8479  00144E                     u7270:
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8483  00144E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8484  001452  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8485  001456  2ADE               	incf	postinc2,f,c
  8486  001458  0E00               	movlw	0
  8487  00145A  22DD               	addwfc	postdec2,f,c
  8488                           
  8489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8490  00145C  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8491  001460  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8492  001464  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8493  001468  0E02               	movlw	2
  8494  00146A  26DE               	addwf	postinc2,f,c
  8495  00146C  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8496  001470  0E00               	movlw	0
  8497  001472  22DD               	addwfc	postdec2,f,c
  8498  001474  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8499  001478  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8500  00147C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  8501  001480  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  8502  001484  0E00               	movlw	0
  8503  001486  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8504  001488  0EFF               	movlw	-1
  8505  00148A  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8506  00148C  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8507  00148E  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8508  001490  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8509  001492  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8510  001494  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8514  001496  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  8515  00149A  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8516  00149E  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  8517  0014A2  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8518  0014A6  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8519  0014AA  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8520  0014AE  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8521  0014B2  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8522  0014B6  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8523  0014BA  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8524  0014BE  ECF4  F00D         	call	_dtoa	;wreg free
  8525  0014C2  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  8526  0014C6  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8527  0014CA  0012               	return	
  8528  0014CC                     l6692:
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8532  0014CC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8533  0014D0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8534  0014D4  CFDE FFF6          	movff	postinc2,tblptrl
  8535  0014D8  CFDD FFF7          	movff	postdec2,tblptrh
  8536  0014DC                     	if	0	;tblptru may be non-zero
  8537  0014DC                     	endif
  8538  0014DC                     	if	0	;tblptru may be non-zero
  8539  0014DC                     	endif
  8540  0014DC  0008               	tblrd		*
  8541  0014DE  50F5               	movf	tablat,w,c
  8542  0014E0  0A78               	xorlw	120
  8543  0014E2  B4D8               	btfsc	status,2,c
  8544  0014E4  D00D               	goto	u7290
  8545                           
  8546                           ; BSR set to: 0
  8547  0014E6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8548  0014EA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8549  0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  8550  0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  8551  0014F6                     	if	0	;tblptru may be non-zero
  8552  0014F6                     	endif
  8553  0014F6                     	if	0	;tblptru may be non-zero
  8554  0014F6                     	endif
  8555  0014F6  0008               	tblrd		*
  8556  0014F8  50F5               	movf	tablat,w,c
  8557  0014FA  0A58               	xorlw	88
  8558  0014FC  A4D8               	btfss	status,2,c
  8559  0014FE  D04D               	goto	l6706
  8560  001500                     u7290:
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  8564  001500  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8565  001504  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8566  001508  CFDE FFF6          	movff	postinc2,tblptrl
  8567  00150C  CFDD FFF7          	movff	postdec2,tblptrh
  8568  001510                     	if	0	;tblptru may be non-zero
  8569  001510                     	endif
  8570  001510                     	if	0	;tblptru may be non-zero
  8571  001510                     	endif
  8572  001510  0008               	tblrd		*
  8573  001512  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  8574                           
  8575                           ; BSR set to: 0
  8576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  8577  001516  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8578  00151A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8579  00151E  2ADE               	incf	postinc2,f,c
  8580  001520  0E00               	movlw	0
  8581  001522  22DD               	addwfc	postdec2,f,c
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  8585  001524  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8586  001528  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8587  00152C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8588  001530  0E02               	movlw	2
  8589  001532  26DE               	addwf	postinc2,f,c
  8590  001534  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8591  001538  0E00               	movlw	0
  8592  00153A  22DD               	addwfc	postdec2,f,c
  8593  00153C  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8594  001540  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8595  001544  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  8596  001548  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  8597  00154C  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8598  001550  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8599  001554  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8600  001556  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8601  001558  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8602  00155A  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8603  00155C  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8604  00155E  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  8608  001560  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  8609  001564  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8610  001568  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  8611  00156C  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  8612  001570  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  8613  001574  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  8614  001578  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  8615  00157C  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  8616  001580  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  8617  001584  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  8618  001588  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  8619  00158C  EC18  F00F         	call	_xtoa	;wreg free
  8620  001590  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  8621  001594  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8622  001598  0012               	return	
  8623  00159A                     l6706:
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8627  00159A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8628  00159E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8629  0015A2  CFDE FFF6          	movff	postinc2,tblptrl
  8630  0015A6  CFDD FFF7          	movff	postdec2,tblptrh
  8631  0015AA                     	if	0	;tblptru may be non-zero
  8632  0015AA                     	endif
  8633  0015AA                     	if	0	;tblptru may be non-zero
  8634  0015AA                     	endif
  8635  0015AA  0008               	tblrd		*
  8636  0015AC  50F5               	movf	tablat,w,c
  8637  0015AE  0A25               	xorlw	37
  8638  0015B0  A4D8               	btfss	status,2,c
  8639  0015B2  D017               	goto	l6716
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8643  0015B4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8644  0015B8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8645  0015BC  2ADE               	incf	postinc2,f,c
  8646  0015BE  0E00               	movlw	0
  8647  0015C0  22DD               	addwfc	postdec2,f,c
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8651  0015C2  0E00               	movlw	0
  8652  0015C4  6F85               	movwf	(fputc@c+1)& (0+255),b
  8653  0015C6  0E25               	movlw	37
  8654  0015C8  6F84               	movwf	fputc@c& (0+255),b
  8655  0015CA  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8656  0015CE  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8657  0015D2  EC56  F01A         	call	_fputc	;wreg free
  8658  0015D6                     l6712:
  8659                           
  8660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8661  0015D6  0E00               	movlw	0
  8662  0015D8  0100               	movlb	0	; () banked
  8663  0015DA  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8664  0015DC  0E01               	movlw	1
  8665  0015DE  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8666  0015E0  0012               	return	
  8667  0015E2                     l6716:
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8671  0015E2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8672  0015E6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8673  0015EA  2ADE               	incf	postinc2,f,c
  8674  0015EC  0E00               	movlw	0
  8675  0015EE  22DD               	addwfc	postdec2,f,c
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8679  0015F0  0E00               	movlw	0
  8680  0015F2  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8681  0015F4  0E00               	movlw	0
  8682  0015F6  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8683  0015F8  0012               	return	
  8684  0015FA                     l6722:
  8685                           
  8686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8687  0015FA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8688  0015FE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8689  001602  CFDE FFF6          	movff	postinc2,tblptrl
  8690  001606  CFDD FFF7          	movff	postdec2,tblptrh
  8691  00160A                     	if	0	;tblptru may be non-zero
  8692  00160A                     	endif
  8693  00160A                     	if	0	;tblptru may be non-zero
  8694  00160A                     	endif
  8695  00160A  0008               	tblrd		*
  8696  00160C  50F5               	movf	tablat,w,c
  8697  00160E  0100               	movlb	0	; () banked
  8698  001610  6F84               	movwf	fputc@c& (0+255),b
  8699  001612  6B85               	clrf	(fputc@c+1)& (0+255),b
  8700  001614  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8701  001618  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8702  00161C  EC56  F01A         	call	_fputc	;wreg free
  8703                           
  8704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8705  001620  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8706  001624  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8707  001628  2ADE               	incf	postinc2,f,c
  8708  00162A  0E00               	movlw	0
  8709  00162C  22DD               	addwfc	postdec2,f,c
  8710  00162E  D7D3               	goto	l6712
  8711  001630                     __end_of_vfpfcnvrt:
  8712                           	opt callstack 0
  8713                           
  8714 ;; *************** function _xtoa *****************
  8715 ;; Defined at:
  8716 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  8719 ;;		 -> NULL(0), 
  8720 ;;  d               8   33[BANK0 ] unsigned long long 
  8721 ;;  x               1   41[BANK0 ] unsigned char 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;  n               8   58[BANK0 ] unsigned long long 
  8724 ;;  c               2   68[BANK0 ] int 
  8725 ;;  i               2   66[BANK0 ] int 
  8726 ;;  w               2   56[BANK0 ] int 
  8727 ;;  p               2   54[BANK0 ] int 
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  2   31[BANK0 ] int 
  8730 ;; Registers used:
  8731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8737 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8738 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8739 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8740 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8741 ;;Total ram usage:       39 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:   10
  8744 ;; This function calls:
  8745 ;;		_isalpha
  8746 ;;		_isupper
  8747 ;;		_pad
  8748 ;;		_toupper
  8749 ;; This function is called by:
  8750 ;;		_vfpfcnvrt
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           	psect	text23
  8755  001E30                     __ptext23:
  8756                           	opt callstack 0
  8757  001E30                     _xtoa:
  8758                           	opt callstack 16
  8759                           
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  8761                           
  8762                           ;incstack = 0
  8763  001E30  AE4D               	btfss	_prec+1,7,c
  8764                           
  8765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  8766  001E32  924E               	bcf	_flags,1,c
  8767                           
  8768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  8769  001E34  BE4D               	btfsc	_prec+1,7,c
  8770  001E36  D005               	goto	u6950
  8771  001E38  504D               	movf	_prec+1,w,c
  8772  001E3A  E109               	bnz	l616
  8773  001E3C  044C               	decf	_prec,w,c
  8774  001E3E  B0D8               	btfsc	status,0,c
  8775  001E40  D006               	goto	l616
  8776  001E42                     u6950:
  8777  001E42  0E00               	movlw	0
  8778  001E44  0100               	movlb	0	; () banked
  8779  001E46  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  8780  001E48  0E01               	movlw	1
  8781  001E4A  6FB6               	movwf	xtoa@p& (0+255),b
  8782  001E4C  D004               	goto	l618
  8783  001E4E                     l616:
  8784  001E4E  C04C  F0B6         	movff	_prec,xtoa@p
  8785  001E52  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  8786  001E56                     l618:
  8787                           
  8788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  8789  001E56  C04A  F0B8         	movff	_width,xtoa@w
  8790  001E5A  C04B  F0B9         	movff	_width+1,xtoa@w+1
  8791                           
  8792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  8793  001E5E  A84E               	btfss	_flags,4,c
  8794  001E60  D005               	goto	l6526
  8795                           
  8796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  8797  001E62  0100               	movlb	0	; () banked
  8798  001E64  0EFE               	movlw	254
  8799  001E66  27B8               	addwf	xtoa@w& (0+255),f,b
  8800  001E68  0EFF               	movlw	255
  8801  001E6A  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  8802  001E6C                     l6526:
  8803                           
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  8805  001E6C  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  8806  001E70  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  8807  001E74  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  8808  001E78  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  8809  001E7C  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  8810  001E80  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  8811  001E84  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  8812  001E88  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  8813                           
  8814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  8815  001E8C  0E00               	movlw	0
  8816  001E8E  0100               	movlb	0	; () banked
  8817  001E90  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  8818  001E92  0E1F               	movlw	31
  8819  001E94  6FC2               	movwf	xtoa@i& (0+255),b
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  8823  001E96  0E00               	movlw	0
  8824  001E98  0101               	movlb	1	; () banked
  8825  001E9A  6F97               	movwf	(_dbuf+31)& (0+255),b
  8826                           
  8827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8828  001E9C  D094               	goto	l6562
  8829  001E9E                     l6532:
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  8833  001E9E  07C2               	decf	xtoa@i& (0+255),f,b
  8834  001EA0  A0D8               	btfss	status,0,c
  8835  001EA2  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  8839  001EA4  0E0F               	movlw	15
  8840  001EA6  15BA               	andwf	xtoa@n& (0+255),w,b
  8841  001EA8  6FC4               	movwf	xtoa@c& (0+255),b
  8842  001EAA  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  8846  001EAC  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  8847  001EAE  D008               	goto	l6540
  8848  001EB0  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  8849  001EB2  E104               	bnz	u6970
  8850  001EB4  0E0A               	movlw	10
  8851  001EB6  5DC4               	subwf	xtoa@c& (0+255),w,b
  8852  001EB8  A0D8               	btfss	status,0,c
  8853  001EBA  D002               	goto	l6540
  8854  001EBC                     u6970:
  8855                           
  8856                           ; BSR set to: 0
  8857  001EBC  0E57               	movlw	87
  8858  001EBE  D001               	goto	L4
  8859  001EC0                     l6540:
  8860                           
  8861                           ; BSR set to: 0
  8862  001EC0  0E30               	movlw	48
  8863  001EC2                     L4:
  8864  001EC2  25C4               	addwf	xtoa@c& (0+255),w,b
  8865  001EC4  6FC4               	movwf	xtoa@c& (0+255),b
  8866  001EC6  0E00               	movlw	0
  8867  001EC8  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  8868  001ECA  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  8869                           
  8870                           ; BSR set to: 0
  8871                           
  8872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  8873  001ECC  0EBF               	movlw	191
  8874  001ECE  6FAA               	movwf	??_xtoa& (0+255),b
  8875  001ED0  0EFF               	movlw	255
  8876  001ED2  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8877  001ED4  51A9               	movf	xtoa@x& (0+255),w,b
  8878  001ED6  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8879  001ED8  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  8880  001EDA  51AA               	movf	??_xtoa& (0+255),w,b
  8881  001EDC  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8882  001EDE  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8883  001EE0  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8884  001EE2  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8885  001EE4  E106               	bnz	u6980
  8886  001EE6  0E1A               	movlw	26
  8887  001EE8  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8888  001EEA  B0D8               	btfsc	status,0,c
  8889  001EEC  D002               	goto	u6980
  8890  001EEE  0E01               	movlw	1
  8891  001EF0  D001               	goto	u6990
  8892  001EF2                     u6980:
  8893  001EF2  0E00               	movlw	0
  8894  001EF4                     u6990:
  8895  001EF4  6FB2               	movwf	_xtoa$1111& (0+255),b
  8896  001EF6  6BB3               	clrf	(_xtoa$1111+1)& (0+255),b
  8897                           
  8898                           ; BSR set to: 0
  8899  001EF8  51B2               	movf	_xtoa$1111& (0+255),w,b
  8900  001EFA  11B3               	iorwf	(_xtoa$1111+1)& (0+255),w,b
  8901  001EFC  B4D8               	btfsc	status,2,c
  8902  001EFE  D027               	goto	l6554
  8903                           
  8904                           ; BSR set to: 0
  8905  001F00  0E9F               	movlw	159
  8906  001F02  6FAA               	movwf	??_xtoa& (0+255),b
  8907  001F04  0EFF               	movlw	255
  8908  001F06  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8909  001F08  0E20               	movlw	32
  8910  001F0A  11C4               	iorwf	xtoa@c& (0+255),w,b
  8911  001F0C  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8912  001F0E  0E00               	movlw	0
  8913  001F10  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  8914  001F12  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  8915  001F14  51AA               	movf	??_xtoa& (0+255),w,b
  8916  001F16  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8917  001F18  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8918  001F1A  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8919  001F1C  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8920  001F1E  E106               	bnz	u7010
  8921  001F20  0E1A               	movlw	26
  8922  001F22  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8923  001F24  B0D8               	btfsc	status,0,c
  8924  001F26  D002               	goto	u7010
  8925  001F28  0E01               	movlw	1
  8926  001F2A  D001               	goto	u7020
  8927  001F2C                     u7010:
  8928  001F2C  0E00               	movlw	0
  8929  001F2E                     u7020:
  8930  001F2E  6FB4               	movwf	_xtoa$1112& (0+255),b
  8931  001F30  6BB5               	clrf	(_xtoa$1112+1)& (0+255),b
  8932                           
  8933                           ; BSR set to: 0
  8934  001F32  51B4               	movf	_xtoa$1112& (0+255),w,b
  8935  001F34  11B5               	iorwf	(_xtoa$1112+1)& (0+255),w,b
  8936  001F36  B4D8               	btfsc	status,2,c
  8937  001F38  D00A               	goto	l6554
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  8941  001F3A  C0C4  F086         	movff	xtoa@c,toupper@c
  8942  001F3E  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  8943  001F42  ECC3  F01B         	call	_toupper	;wreg free
  8944  001F46  C086  F0C4         	movff	?_toupper,xtoa@c
  8945  001F4A  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  8946  001F4E                     l6554:
  8947                           
  8948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  8949  001F4E  0E78               	movlw	low _dbuf
  8950  001F50  0100               	movlb	0	; () banked
  8951  001F52  25C2               	addwf	xtoa@i& (0+255),w,b
  8952  001F54  6ED9               	movwf	fsr2l,c
  8953  001F56  0E01               	movlw	high _dbuf
  8954  001F58  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8955  001F5A  6EDA               	movwf	fsr2h,c
  8956  001F5C  C0C4  FFDF         	movff	xtoa@c,indf2
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  8960  001F60  07B6               	decf	xtoa@p& (0+255),f,b
  8961  001F62  A0D8               	btfss	status,0,c
  8962  001F64  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  8966  001F66  07B8               	decf	xtoa@w& (0+255),f,b
  8967  001F68  A0D8               	btfss	status,0,c
  8968  001F6A  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  8972  001F6C  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  8973  001F70  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  8974  001F74  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  8975  001F78  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  8976  001F7C  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  8977  001F80  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  8978  001F84  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  8979  001F88  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  8980  001F8C  0E05               	movlw	5
  8981  001F8E  D009               	goto	u7040
  8982  001F90                     u7045:
  8983  001F90  90D8               	bcf	status,0,c
  8984  001F92  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  8985  001F94  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  8986  001F96  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  8987  001F98  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  8988  001F9A  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  8989  001F9C  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  8990  001F9E  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  8991  001FA0  33AA               	rrcf	??_xtoa& (0+255),f,b
  8992  001FA2                     u7040:
  8993  001FA2  2EE8               	decfsz	wreg,f,c
  8994  001FA4  D7F5               	goto	u7045
  8995  001FA6  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  8996  001FAA  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  8997  001FAE  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  8998  001FB2  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  8999  001FB6  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  9000  001FBA  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  9001  001FBE  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  9002  001FC2  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  9003  001FC6                     l6562:
  9004                           
  9005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9006  001FC6  0100               	movlb	0	; () banked
  9007  001FC8  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  9008  001FCA  D020               	goto	u7090
  9009  001FCC  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  9010  001FCE  E104               	bnz	u7050
  9011  001FD0  0E02               	movlw	2
  9012  001FD2  5DC2               	subwf	xtoa@i& (0+255),w,b
  9013  001FD4  A0D8               	btfss	status,0,c
  9014  001FD6  D01A               	goto	u7090
  9015  001FD8                     u7050:
  9016                           
  9017                           ; BSR set to: 0
  9018  001FD8  51BA               	movf	xtoa@n& (0+255),w,b
  9019  001FDA  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  9020  001FDC  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  9021  001FDE  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  9022  001FE0  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  9023  001FE2  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  9024  001FE4  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  9025  001FE6  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  9026  001FE8  A4D8               	btfss	status,2,c
  9027  001FEA  D759               	goto	l6532
  9028                           
  9029                           ; BSR set to: 0
  9030  001FEC  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9031  001FEE  D005               	goto	u7070
  9032  001FF0  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9033  001FF2  E102               	bnz	u7071
  9034  001FF4  05B6               	decf	xtoa@p& (0+255),w,b
  9035  001FF6  B0D8               	btfsc	status,0,c
  9036  001FF8                     u7071:
  9037  001FF8  D752               	goto	l6532
  9038  001FFA                     u7070:
  9039                           
  9040                           ; BSR set to: 0
  9041  001FFA  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9042  001FFC  D007               	goto	u7090
  9043  001FFE  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9044  002000  E103               	bnz	u7080
  9045  002002  05B8               	decf	xtoa@w& (0+255),w,b
  9046  002004  A0D8               	btfss	status,0,c
  9047  002006  D002               	goto	u7090
  9048  002008                     u7080:
  9049                           
  9050                           ; BSR set to: 0
  9051  002008  B24E               	btfsc	_flags,1,c
  9052  00200A  D749               	goto	l6532
  9053  00200C                     u7090:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9057  00200C  A84E               	btfss	_flags,4,c
  9058  00200E  D016               	goto	l6578
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9062  002010  07C2               	decf	xtoa@i& (0+255),f,b
  9063  002012  A0D8               	btfss	status,0,c
  9064  002014  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9068  002016  0E78               	movlw	low _dbuf
  9069  002018  25C2               	addwf	xtoa@i& (0+255),w,b
  9070  00201A  6ED9               	movwf	fsr2l,c
  9071  00201C  0E01               	movlw	high _dbuf
  9072  00201E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9073  002020  6EDA               	movwf	fsr2h,c
  9074  002022  C0A9  FFDF         	movff	xtoa@x,indf2
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9078  002026  07C2               	decf	xtoa@i& (0+255),f,b
  9079  002028  A0D8               	btfss	status,0,c
  9080  00202A  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9081                           
  9082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9083  00202C  0E78               	movlw	low _dbuf
  9084  00202E  25C2               	addwf	xtoa@i& (0+255),w,b
  9085  002030  6ED9               	movwf	fsr2l,c
  9086  002032  0E01               	movlw	high _dbuf
  9087  002034  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9088  002036  6EDA               	movwf	fsr2h,c
  9089  002038  0E30               	movlw	48
  9090  00203A  6EDF               	movwf	indf2,c
  9091  00203C                     l6578:
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9095  00203C  C09F  F094         	movff	xtoa@fp,pad@fp
  9096  002040  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9097  002044  0E78               	movlw	low _dbuf
  9098  002046  25C2               	addwf	xtoa@i& (0+255),w,b
  9099  002048  6F96               	movwf	pad@buf& (0+255),b
  9100  00204A  0E01               	movlw	high _dbuf
  9101  00204C  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9102  00204E  6F97               	movwf	(pad@buf+1)& (0+255),b
  9103  002050  C0B8  F098         	movff	xtoa@w,pad@p
  9104  002054  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9105  002058  ECC5  F018         	call	_pad	;wreg free
  9106  00205C  C094  F09F         	movff	?_pad,?_xtoa
  9107  002060  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9108  002064  0012               	return		;funcret
  9109  002066                     __end_of_xtoa:
  9110                           	opt callstack 0
  9111                           
  9112 ;; *************** function _toupper *****************
  9113 ;; Defined at:
  9114 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  c               2    6[BANK0 ] int 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;		None
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  2    6[BANK0 ] int 
  9121 ;; Registers used:
  9122 ;;		wreg, status,2, status,0
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;Total ram usage:        8 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; Hardware stack levels required when called:    4
  9135 ;; This function calls:
  9136 ;;		_islower
  9137 ;; This function is called by:
  9138 ;;		_xtoa
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text24
  9143  003786                     __ptext24:
  9144                           	opt callstack 0
  9145  003786                     _toupper:
  9146                           	opt callstack 21
  9147                           
  9148                           ;incstack = 0
  9149  003786  0E9F               	movlw	159
  9150  003788  0100               	movlb	0	; () banked
  9151  00378A  6F88               	movwf	??_toupper& (0+255),b
  9152  00378C  0EFF               	movlw	255
  9153  00378E  6F89               	movwf	(??_toupper+1)& (0+255),b
  9154  003790  C086  F08A         	movff	toupper@c,??_toupper+2
  9155  003794  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9156  003798  5188               	movf	??_toupper& (0+255),w,b
  9157  00379A  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9158  00379C  5189               	movf	(??_toupper+1)& (0+255),w,b
  9159  00379E  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9160  0037A0  518B               	movf	(??_toupper+3)& (0+255),w,b
  9161  0037A2  E106               	bnz	u6590
  9162  0037A4  0E1A               	movlw	26
  9163  0037A6  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9164  0037A8  B0D8               	btfsc	status,0,c
  9165  0037AA  D002               	goto	u6590
  9166  0037AC  0E01               	movlw	1
  9167  0037AE  D001               	goto	u6600
  9168  0037B0                     u6590:
  9169  0037B0  0E00               	movlw	0
  9170  0037B2                     u6600:
  9171  0037B2  6F8C               	movwf	_toupper$1676& (0+255),b
  9172  0037B4  6B8D               	clrf	(_toupper$1676+1)& (0+255),b
  9173                           
  9174                           ; BSR set to: 0
  9175  0037B6  518C               	movf	_toupper$1676& (0+255),w,b
  9176  0037B8  118D               	iorwf	(_toupper$1676+1)& (0+255),w,b
  9177  0037BA  B4D8               	btfsc	status,2,c
  9178  0037BC  D005               	goto	l1456
  9179                           
  9180                           ; BSR set to: 0
  9181  0037BE  0E5F               	movlw	95
  9182  0037C0  1586               	andwf	toupper@c& (0+255),w,b
  9183  0037C2  6F86               	movwf	?_toupper& (0+255),b
  9184  0037C4  6B87               	clrf	(?_toupper+1)& (0+255),b
  9185  0037C6  0012               	return	
  9186  0037C8                     l1456:
  9187                           
  9188                           ; BSR set to: 0
  9189  0037C8  C086  F086         	movff	toupper@c,?_toupper
  9190  0037CC  C087  F087         	movff	toupper@c+1,?_toupper+1
  9191                           
  9192                           ; BSR set to: 0
  9193  0037D0  0012               	return		;funcret
  9194  0037D2                     __end_of_toupper:
  9195                           	opt callstack 0
  9196                           
  9197 ;; *************** function _islower *****************
  9198 ;; Defined at:
  9199 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;  c               2    0[BANK0 ] int 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;		None
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  2    0[BANK0 ] int 
  9206 ;; Registers used:
  9207 ;;		wreg, status,2, status,0
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9216 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9217 ;;Total ram usage:        6 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; Hardware stack levels required when called:    3
  9220 ;; This function calls:
  9221 ;;		Nothing
  9222 ;; This function is called by:
  9223 ;;		_toupper
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           	psect	text25
  9228  003928                     __ptext25:
  9229                           	opt callstack 0
  9230  003928                     _islower:
  9231                           	opt callstack 21
  9232                           
  9233                           ; BSR set to: 0
  9234                           ;incstack = 0
  9235  003928  0E9F               	movlw	159
  9236  00392A  0100               	movlb	0	; () banked
  9237  00392C  6F82               	movwf	??_islower& (0+255),b
  9238  00392E  0EFF               	movlw	255
  9239  003930  6F83               	movwf	(??_islower+1)& (0+255),b
  9240  003932  C080  F084         	movff	islower@c,??_islower+2
  9241  003936  C081  F085         	movff	islower@c+1,??_islower+3
  9242  00393A  5182               	movf	??_islower& (0+255),w,b
  9243  00393C  2784               	addwf	(??_islower+2)& (0+255),f,b
  9244  00393E  5183               	movf	(??_islower+1)& (0+255),w,b
  9245  003940  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9246  003942  5185               	movf	(??_islower+3)& (0+255),w,b
  9247  003944  E106               	bnz	u6480
  9248  003946  0E1A               	movlw	26
  9249  003948  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9250  00394A  B0D8               	btfsc	status,0,c
  9251  00394C  D002               	goto	u6480
  9252  00394E  0E01               	movlw	1
  9253  003950  D001               	goto	u6490
  9254  003952                     u6480:
  9255  003952  0E00               	movlw	0
  9256  003954                     u6490:
  9257  003954  6F80               	movwf	?_islower& (0+255),b
  9258  003956  6B81               	clrf	(?_islower+1)& (0+255),b
  9259                           
  9260                           ; BSR set to: 0
  9261  003958  0012               	return		;funcret
  9262  00395A                     __end_of_islower:
  9263                           	opt callstack 0
  9264                           
  9265 ;; *************** function _isupper *****************
  9266 ;; Defined at:
  9267 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  c               2    0[BANK0 ] int 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  2    0[BANK0 ] int 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;Total ram usage:        6 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    3
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_xtoa
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           	psect	text26
  9296  00395A                     __ptext26:
  9297                           	opt callstack 0
  9298  00395A                     _isupper:
  9299                           	opt callstack 22
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;incstack = 0
  9303  00395A  0EBF               	movlw	191
  9304  00395C  0100               	movlb	0	; () banked
  9305  00395E  6F82               	movwf	??_isupper& (0+255),b
  9306  003960  0EFF               	movlw	255
  9307  003962  6F83               	movwf	(??_isupper+1)& (0+255),b
  9308  003964  C080  F084         	movff	isupper@c,??_isupper+2
  9309  003968  C081  F085         	movff	isupper@c+1,??_isupper+3
  9310  00396C  5182               	movf	??_isupper& (0+255),w,b
  9311  00396E  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9312  003970  5183               	movf	(??_isupper+1)& (0+255),w,b
  9313  003972  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9314  003974  5185               	movf	(??_isupper+3)& (0+255),w,b
  9315  003976  E106               	bnz	u6550
  9316  003978  0E1A               	movlw	26
  9317  00397A  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9318  00397C  B0D8               	btfsc	status,0,c
  9319  00397E  D002               	goto	u6550
  9320  003980  0E01               	movlw	1
  9321  003982  D001               	goto	u6560
  9322  003984                     u6550:
  9323  003984  0E00               	movlw	0
  9324  003986                     u6560:
  9325  003986  6F80               	movwf	?_isupper& (0+255),b
  9326  003988  6B81               	clrf	(?_isupper+1)& (0+255),b
  9327                           
  9328                           ; BSR set to: 0
  9329  00398A  0012               	return		;funcret
  9330  00398C                     __end_of_isupper:
  9331                           	opt callstack 0
  9332                           
  9333 ;; *************** function _isalpha *****************
  9334 ;; Defined at:
  9335 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  c               2    0[BANK0 ] int 
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  2    0[BANK0 ] int 
  9342 ;; Registers used:
  9343 ;;		wreg, status,2, status,0
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9351 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9353 ;;Total ram usage:        6 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:    3
  9356 ;; This function calls:
  9357 ;;		Nothing
  9358 ;; This function is called by:
  9359 ;;		_xtoa
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           	psect	text27
  9364  00388C                     __ptext27:
  9365                           	opt callstack 0
  9366  00388C                     _isalpha:
  9367                           	opt callstack 22
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;incstack = 0
  9371  00388C  0E9F               	movlw	159
  9372  00388E  0100               	movlb	0	; () banked
  9373  003890  6F82               	movwf	??_isalpha& (0+255),b
  9374  003892  0EFF               	movlw	255
  9375  003894  6F83               	movwf	(??_isalpha+1)& (0+255),b
  9376  003896  0E20               	movlw	32
  9377  003898  1180               	iorwf	isalpha@c& (0+255),w,b
  9378  00389A  6F84               	movwf	(??_isalpha+2)& (0+255),b
  9379  00389C  0E00               	movlw	0
  9380  00389E  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
  9381  0038A0  6F85               	movwf	(??_isalpha+3)& (0+255),b
  9382  0038A2  5182               	movf	??_isalpha& (0+255),w,b
  9383  0038A4  2784               	addwf	(??_isalpha+2)& (0+255),f,b
  9384  0038A6  5183               	movf	(??_isalpha+1)& (0+255),w,b
  9385  0038A8  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
  9386  0038AA  5185               	movf	(??_isalpha+3)& (0+255),w,b
  9387  0038AC  E106               	bnz	u6570
  9388  0038AE  0E1A               	movlw	26
  9389  0038B0  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
  9390  0038B2  B0D8               	btfsc	status,0,c
  9391  0038B4  D002               	goto	u6570
  9392  0038B6  0E01               	movlw	1
  9393  0038B8  D001               	goto	u6580
  9394  0038BA                     u6570:
  9395  0038BA  0E00               	movlw	0
  9396  0038BC                     u6580:
  9397  0038BC  6F80               	movwf	?_isalpha& (0+255),b
  9398  0038BE  6B81               	clrf	(?_isalpha+1)& (0+255),b
  9399                           
  9400                           ; BSR set to: 0
  9401  0038C0  0012               	return		;funcret
  9402  0038C2                     __end_of_isalpha:
  9403                           	opt callstack 0
  9404                           
  9405 ;; *************** function _dtoa *****************
  9406 ;; Defined at:
  9407 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9410 ;;		 -> NULL(0), 
  9411 ;;  d               8   33[BANK0 ] long long 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  n               8   57[BANK0 ] long long 
  9414 ;;  i               2   65[BANK0 ] int 
  9415 ;;  s               2   55[BANK0 ] int 
  9416 ;;  w               2   53[BANK0 ] int 
  9417 ;;  p               2   51[BANK0 ] int 
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  2   31[BANK0 ] int 
  9420 ;; Registers used:
  9421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9427 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9428 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9429 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9430 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;Total ram usage:       36 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; Hardware stack levels required when called:   10
  9434 ;; This function calls:
  9435 ;;		___aodiv
  9436 ;;		___aomod
  9437 ;;		_abs
  9438 ;;		_pad
  9439 ;; This function is called by:
  9440 ;;		_vfpfcnvrt
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           	psect	text28
  9445  001BE8                     __ptext28:
  9446                           	opt callstack 0
  9447  001BE8                     _dtoa:
  9448                           	opt callstack 16
  9449                           
  9450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;incstack = 0
  9454  001BE8  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  9455  001BEC  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  9456  001BF0  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  9457  001BF4  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  9458  001BF8  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  9459  001BFC  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  9460  001C00  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  9461  001C04  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  9462                           
  9463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9464  001C08  0100               	movlb	0	; () banked
  9465  001C0A  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  9466  001C0C  D002               	goto	u6790
  9467  001C0E  0E01               	movlw	1
  9468  001C10  D001               	goto	u6800
  9469  001C12                     u6790:
  9470  001C12  0E00               	movlw	0
  9471  001C14                     u6800:
  9472  001C14  6FB7               	movwf	dtoa@s& (0+255),b
  9473  001C16  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  9474                           
  9475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9476  001C18  51B7               	movf	dtoa@s& (0+255),w,b
  9477  001C1A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9478  001C1C  B4D8               	btfsc	status,2,c
  9479  001C1E  D010               	goto	l6460
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9483  001C20  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  9484  001C22  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  9485  001C24  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  9486  001C26  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  9487  001C28  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  9488  001C2A  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  9489  001C2C  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  9490  001C2E  6DB9               	negf	dtoa@n& (0+255),b
  9491  001C30  0E00               	movlw	0
  9492  001C32  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  9493  001C34  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  9494  001C36  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  9495  001C38  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  9496  001C3A  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  9497  001C3C  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  9498  001C3E  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  9499  001C40                     l6460:
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9503  001C40  AE4D               	btfss	_prec+1,7,c
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9507  001C42  924E               	bcf	_flags,1,c
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9511  001C44  BE4D               	btfsc	_prec+1,7,c
  9512  001C46  D005               	goto	u6830
  9513  001C48  504D               	movf	_prec+1,w,c
  9514  001C4A  E108               	bnz	l591
  9515  001C4C  044C               	decf	_prec,w,c
  9516  001C4E  B0D8               	btfsc	status,0,c
  9517  001C50  D005               	goto	l591
  9518  001C52                     u6830:
  9519                           
  9520                           ; BSR set to: 0
  9521  001C52  0E00               	movlw	0
  9522  001C54  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  9523  001C56  0E01               	movlw	1
  9524  001C58  6FB3               	movwf	dtoa@p& (0+255),b
  9525  001C5A  D004               	goto	l593
  9526  001C5C                     l591:
  9527                           
  9528                           ; BSR set to: 0
  9529  001C5C  C04C  F0B3         	movff	_prec,dtoa@p
  9530  001C60  C04D  F0B4         	movff	_prec+1,dtoa@p+1
  9531  001C64                     l593:
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9535  001C64  C04A  F0B5         	movff	_width,dtoa@w
  9536  001C68  C04B  F0B6         	movff	_width+1,dtoa@w+1
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9540  001C6C  51B7               	movf	dtoa@s& (0+255),w,b
  9541  001C6E  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9542  001C70  A4D8               	btfss	status,2,c
  9543  001C72  D002               	goto	u6850
  9544                           
  9545                           ; BSR set to: 0
  9546  001C74  A44E               	btfss	_flags,2,c
  9547  001C76  D003               	goto	l6474
  9548  001C78                     u6850:
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9552  001C78  07B5               	decf	dtoa@w& (0+255),f,b
  9553  001C7A  A0D8               	btfss	status,0,c
  9554  001C7C  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9555  001C7E                     l6474:
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9559  001C7E  0E00               	movlw	0
  9560  001C80  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  9561  001C82  0E1F               	movlw	31
  9562  001C84  6FC1               	movwf	dtoa@i& (0+255),b
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9566  001C86  0E00               	movlw	0
  9567  001C88  0101               	movlb	1	; () banked
  9568  001C8A  6F97               	movwf	(_dbuf+31)& (0+255),b
  9569                           
  9570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9571  001C8C  D07D               	goto	l6488
  9572  001C8E                     l6478:
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9576  001C8E  07C1               	decf	dtoa@i& (0+255),f,b
  9577  001C90  A0D8               	btfss	status,0,c
  9578  001C92  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9582  001C94  0E78               	movlw	low _dbuf
  9583  001C96  25C1               	addwf	dtoa@i& (0+255),w,b
  9584  001C98  6ED9               	movwf	fsr2l,c
  9585  001C9A  0E01               	movlw	high _dbuf
  9586  001C9C  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9587  001C9E  6EDA               	movwf	fsr2h,c
  9588  001CA0  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  9589  001CA4  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  9590  001CA8  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  9591  001CAC  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  9592  001CB0  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  9593  001CB4  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  9594  001CB8  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  9595  001CBC  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  9596  001CC0  0E0A               	movlw	10
  9597  001CC2  6F88               	movwf	___aomod@divisor& (0+255),b
  9598  001CC4  0E00               	movlw	0
  9599  001CC6  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  9600  001CC8  0E00               	movlw	0
  9601  001CCA  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  9602  001CCC  0E00               	movlw	0
  9603  001CCE  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  9604  001CD0  0E00               	movlw	0
  9605  001CD2  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  9606  001CD4  0E00               	movlw	0
  9607  001CD6  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  9608  001CD8  0E00               	movlw	0
  9609  001CDA  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  9610  001CDC  0E00               	movlw	0
  9611  001CDE  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  9612  001CE0  EC93  F015         	call	___aomod	;wreg free
  9613  001CE4  C080  F0A9         	movff	?___aomod,??_dtoa
  9614  001CE8  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  9615  001CEC  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  9616  001CF0  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  9617  001CF4  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  9618  001CF8  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  9619  001CFC  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  9620  001D00  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  9621  001D04  C0A9  F092         	movff	??_dtoa,abs@a
  9622  001D08  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  9623  001D0C  EC61  F01C         	call	_abs	;wreg free
  9624  001D10  0100               	movlb	0	; () banked
  9625  001D12  5192               	movf	?_abs& (0+255),w,b
  9626  001D14  0F30               	addlw	48
  9627  001D16  6EDF               	movwf	indf2,c
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9631  001D18  07B3               	decf	dtoa@p& (0+255),f,b
  9632  001D1A  A0D8               	btfss	status,0,c
  9633  001D1C  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9637  001D1E  07B5               	decf	dtoa@w& (0+255),f,b
  9638  001D20  A0D8               	btfss	status,0,c
  9639  001D22  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9643  001D24  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  9644  001D28  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  9645  001D2C  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  9646  001D30  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  9647  001D34  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  9648  001D38  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  9649  001D3C  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  9650  001D40  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  9651  001D44  0E0A               	movlw	10
  9652  001D46  6F88               	movwf	___aodiv@divisor& (0+255),b
  9653  001D48  0E00               	movlw	0
  9654  001D4A  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  9655  001D4C  0E00               	movlw	0
  9656  001D4E  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  9657  001D50  0E00               	movlw	0
  9658  001D52  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  9659  001D54  0E00               	movlw	0
  9660  001D56  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  9661  001D58  0E00               	movlw	0
  9662  001D5A  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  9663  001D5C  0E00               	movlw	0
  9664  001D5E  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  9665  001D60  0E00               	movlw	0
  9666  001D62  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  9667  001D64  EC11  F013         	call	___aodiv	;wreg free
  9668  001D68  C080  F0B9         	movff	?___aodiv,dtoa@n
  9669  001D6C  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  9670  001D70  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  9671  001D74  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  9672  001D78  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  9673  001D7C  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  9674  001D80  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  9675  001D84  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  9676  001D88                     l6488:
  9677                           
  9678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9679  001D88  0100               	movlb	0	; () banked
  9680  001D8A  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  9681  001D8C  D01F               	goto	u6900
  9682  001D8E  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  9683  001D90  E103               	bnz	u6860
  9684  001D92  05C1               	decf	dtoa@i& (0+255),w,b
  9685  001D94  A0D8               	btfss	status,0,c
  9686  001D96  D01A               	goto	u6900
  9687  001D98                     u6860:
  9688                           
  9689                           ; BSR set to: 0
  9690  001D98  51B9               	movf	dtoa@n& (0+255),w,b
  9691  001D9A  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  9692  001D9C  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  9693  001D9E  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  9694  001DA0  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  9695  001DA2  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  9696  001DA4  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  9697  001DA6  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  9698  001DA8  A4D8               	btfss	status,2,c
  9699  001DAA  D771               	goto	l6478
  9700                           
  9701                           ; BSR set to: 0
  9702  001DAC  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  9703  001DAE  D005               	goto	u6880
  9704  001DB0  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  9705  001DB2  E102               	bnz	u6881
  9706  001DB4  05B3               	decf	dtoa@p& (0+255),w,b
  9707  001DB6  B0D8               	btfsc	status,0,c
  9708  001DB8                     u6881:
  9709  001DB8  D76A               	goto	l6478
  9710  001DBA                     u6880:
  9711                           
  9712                           ; BSR set to: 0
  9713  001DBA  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  9714  001DBC  D007               	goto	u6900
  9715  001DBE  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  9716  001DC0  E103               	bnz	u6890
  9717  001DC2  05B5               	decf	dtoa@w& (0+255),w,b
  9718  001DC4  A0D8               	btfss	status,0,c
  9719  001DC6  D002               	goto	u6900
  9720  001DC8                     u6890:
  9721                           
  9722                           ; BSR set to: 0
  9723  001DC8  B24E               	btfsc	_flags,1,c
  9724  001DCA  D761               	goto	l6478
  9725  001DCC                     u6900:
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9729  001DCC  51B7               	movf	dtoa@s& (0+255),w,b
  9730  001DCE  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9731  001DD0  A4D8               	btfss	status,2,c
  9732  001DD2  D002               	goto	u6920
  9733                           
  9734                           ; BSR set to: 0
  9735  001DD4  A44E               	btfss	_flags,2,c
  9736  001DD6  D017               	goto	l6512
  9737  001DD8                     u6920:
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9741  001DD8  07C1               	decf	dtoa@i& (0+255),f,b
  9742  001DDA  A0D8               	btfss	status,0,c
  9743  001DDC  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9747  001DDE  51B7               	movf	dtoa@s& (0+255),w,b
  9748  001DE0  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9749  001DE2  A4D8               	btfss	status,2,c
  9750  001DE4  D004               	goto	l6508
  9751                           
  9752                           ; BSR set to: 0
  9753  001DE6  0E00               	movlw	0
  9754  001DE8  6FB2               	movwf	(_dtoa$1100+1)& (0+255),b
  9755  001DEA  0E2B               	movlw	43
  9756  001DEC  D003               	goto	L5
  9757  001DEE                     l6508:
  9758                           
  9759                           ; BSR set to: 0
  9760  001DEE  0E00               	movlw	0
  9761  001DF0  6FB2               	movwf	(_dtoa$1100+1)& (0+255),b
  9762  001DF2  0E2D               	movlw	45
  9763  001DF4                     L5:
  9764  001DF4  6FB1               	movwf	_dtoa$1100& (0+255),b
  9765                           
  9766                           ; BSR set to: 0
  9767  001DF6  0E78               	movlw	low _dbuf
  9768  001DF8  25C1               	addwf	dtoa@i& (0+255),w,b
  9769  001DFA  6ED9               	movwf	fsr2l,c
  9770  001DFC  0E01               	movlw	high _dbuf
  9771  001DFE  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9772  001E00  6EDA               	movwf	fsr2h,c
  9773  001E02  C0B1  FFDF         	movff	_dtoa$1100,indf2
  9774  001E06                     l6512:
  9775                           
  9776                           ; BSR set to: 0
  9777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9778  001E06  C09F  F094         	movff	dtoa@fp,pad@fp
  9779  001E0A  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  9780  001E0E  0E78               	movlw	low _dbuf
  9781  001E10  25C1               	addwf	dtoa@i& (0+255),w,b
  9782  001E12  6F96               	movwf	pad@buf& (0+255),b
  9783  001E14  0E01               	movlw	high _dbuf
  9784  001E16  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9785  001E18  6F97               	movwf	(pad@buf+1)& (0+255),b
  9786  001E1A  C0B5  F098         	movff	dtoa@w,pad@p
  9787  001E1E  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  9788  001E22  ECC5  F018         	call	_pad	;wreg free
  9789  001E26  C094  F09F         	movff	?_pad,?_dtoa
  9790  001E2A  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  9791  001E2E  0012               	return		;funcret
  9792  001E30                     __end_of_dtoa:
  9793                           	opt callstack 0
  9794                           
  9795 ;; *************** function _pad *****************
  9796 ;; Defined at:
  9797 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  9800 ;;		 -> NULL(0), 
  9801 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  9802 ;;		 -> dbuf(32), 
  9803 ;;  p               2   24[BANK0 ] int 
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;  w               2   29[BANK0 ] int 
  9806 ;;  i               2   27[BANK0 ] int 
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  2   20[BANK0 ] int 
  9809 ;; Registers used:
  9810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9816 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;Total ram usage:       11 bytes
  9821 ;; Hardware stack levels used:    1
  9822 ;; Hardware stack levels required when called:    9
  9823 ;; This function calls:
  9824 ;;		_fputc
  9825 ;;		_fputs
  9826 ;;		_strlen
  9827 ;; This function is called by:
  9828 ;;		_dtoa
  9829 ;;		_xtoa
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text29
  9834  00318A                     __ptext29:
  9835                           	opt callstack 0
  9836  00318A                     _pad:
  9837                           	opt callstack 16
  9838                           
  9839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9840                           
  9841                           ;incstack = 0
  9842  00318A  A04E               	btfss	_flags,0,c
  9843  00318C  D00A               	goto	l6316
  9844                           
  9845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9846  00318E  C096  F08D         	movff	pad@buf,fputs@s
  9847  003192  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9848  003196  C094  F08F         	movff	pad@fp,fputs@fp
  9849  00319A  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9850  00319E  EC28  F01C         	call	_fputs	;wreg free
  9851  0031A2                     l6316:
  9852                           
  9853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9854  0031A2  0100               	movlb	0	; () banked
  9855  0031A4  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  9856  0031A6  D005               	goto	l6320
  9857                           
  9858                           ; BSR set to: 0
  9859  0031A8  C098  F09D         	movff	pad@p,pad@w
  9860  0031AC  C099  F09E         	movff	pad@p+1,pad@w+1
  9861  0031B0  D004               	goto	l580
  9862  0031B2                     l6320:
  9863                           
  9864                           ; BSR set to: 0
  9865  0031B2  0E00               	movlw	0
  9866  0031B4  6F9E               	movwf	(pad@w+1)& (0+255),b
  9867  0031B6  0E00               	movlw	0
  9868  0031B8  6F9D               	movwf	pad@w& (0+255),b
  9869  0031BA                     l580:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9873  0031BA  0E00               	movlw	0
  9874  0031BC  6F9C               	movwf	(pad@i+1)& (0+255),b
  9875  0031BE  0E00               	movlw	0
  9876  0031C0  6F9B               	movwf	pad@i& (0+255),b
  9877                           
  9878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9879  0031C2  D00D               	goto	l6326
  9880  0031C4                     l6322:
  9881                           
  9882                           ; BSR set to: 0
  9883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9884  0031C4  0E00               	movlw	0
  9885  0031C6  6F85               	movwf	(fputc@c+1)& (0+255),b
  9886  0031C8  0E20               	movlw	32
  9887  0031CA  6F84               	movwf	fputc@c& (0+255),b
  9888  0031CC  C094  F086         	movff	pad@fp,fputc@fp
  9889  0031D0  C095  F087         	movff	pad@fp+1,fputc@fp+1
  9890  0031D4  EC56  F01A         	call	_fputc	;wreg free
  9891                           
  9892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9893  0031D8  0100               	movlb	0	; () banked
  9894  0031DA  4B9B               	infsnz	pad@i& (0+255),f,b
  9895  0031DC  2B9C               	incf	(pad@i+1)& (0+255),f,b
  9896  0031DE                     l6326:
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9900  0031DE  519D               	movf	pad@w& (0+255),w,b
  9901  0031E0  5D9B               	subwf	pad@i& (0+255),w,b
  9902  0031E2  519C               	movf	(pad@i+1)& (0+255),w,b
  9903  0031E4  0A80               	xorlw	128
  9904  0031E6  6F9A               	movwf	??_pad& (0+255),b
  9905  0031E8  519E               	movf	(pad@w+1)& (0+255),w,b
  9906  0031EA  0A80               	xorlw	128
  9907  0031EC  599A               	subwfb	??_pad& (0+255),w,b
  9908  0031EE  A0D8               	btfss	status,0,c
  9909  0031F0  D7E9               	goto	l6322
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9913  0031F2  B04E               	btfsc	_flags,0,c
  9914  0031F4  D00A               	goto	l6330
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9918  0031F6  C096  F08D         	movff	pad@buf,fputs@s
  9919  0031FA  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9920  0031FE  C094  F08F         	movff	pad@fp,fputs@fp
  9921  003202  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9922  003206  EC28  F01C         	call	_fputs	;wreg free
  9923  00320A                     l6330:
  9924                           
  9925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9926  00320A  C096  F080         	movff	pad@buf,strlen@s
  9927  00320E  C097  F081         	movff	pad@buf+1,strlen@s+1
  9928  003212  ECDF  F01C         	call	_strlen	;wreg free
  9929  003216  0100               	movlb	0	; () banked
  9930  003218  519D               	movf	pad@w& (0+255),w,b
  9931  00321A  2580               	addwf	?_strlen& (0+255),w,b
  9932  00321C  6F94               	movwf	?_pad& (0+255),b
  9933  00321E  519E               	movf	(pad@w+1)& (0+255),w,b
  9934  003220  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  9935  003222  6F95               	movwf	(?_pad+1)& (0+255),b
  9936                           
  9937                           ; BSR set to: 0
  9938  003224  0012               	return		;funcret
  9939  003226                     __end_of_pad:
  9940                           	opt callstack 0
  9941                           
  9942 ;; *************** function _strlen *****************
  9943 ;; Defined at:
  9944 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  9947 ;;		 -> dbuf(32), 
  9948 ;; Auto vars:     Size  Location     Type
  9949 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  9950 ;;		 -> dbuf(32), 
  9951 ;; Return value:  Size  Location     Type
  9952 ;;                  2    0[BANK0 ] unsigned int 
  9953 ;; Registers used:
  9954 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9955 ;; Tracked objects:
  9956 ;;		On entry : 0/0
  9957 ;;		On exit  : 0/0
  9958 ;;		Unchanged: 0/0
  9959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9960 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;Total ram usage:        4 bytes
  9965 ;; Hardware stack levels used:    1
  9966 ;; Hardware stack levels required when called:    3
  9967 ;; This function calls:
  9968 ;;		Nothing
  9969 ;; This function is called by:
  9970 ;;		_pad
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           	psect	text30
  9975  0039BE                     __ptext30:
  9976                           	opt callstack 0
  9977  0039BE                     _strlen:
  9978                           	opt callstack 21
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;incstack = 0
  9982  0039BE  C080  F082         	movff	strlen@s,strlen@a
  9983  0039C2  C081  F083         	movff	strlen@s+1,strlen@a+1
  9984  0039C6  D003               	goto	l6298
  9985  0039C8                     l6296:
  9986  0039C8  0100               	movlb	0	; () banked
  9987  0039CA  4B80               	infsnz	strlen@s& (0+255),f,b
  9988  0039CC  2B81               	incf	(strlen@s+1)& (0+255),f,b
  9989  0039CE                     l6298:
  9990  0039CE  C080  FFD9         	movff	strlen@s,fsr2l
  9991  0039D2  C081  FFDA         	movff	strlen@s+1,fsr2h
  9992  0039D6  50DF               	movf	indf2,w,c
  9993  0039D8  A4D8               	btfss	status,2,c
  9994  0039DA  D7F6               	goto	l6296
  9995  0039DC  0100               	movlb	0	; () banked
  9996  0039DE  5182               	movf	strlen@a& (0+255),w,b
  9997  0039E0  5D80               	subwf	strlen@s& (0+255),w,b
  9998  0039E2  6F80               	movwf	?_strlen& (0+255),b
  9999  0039E4  5183               	movf	(strlen@a+1)& (0+255),w,b
 10000  0039E6  5981               	subwfb	(strlen@s+1)& (0+255),w,b
 10001  0039E8  6F81               	movwf	(?_strlen+1)& (0+255),b
 10002                           
 10003                           ; BSR set to: 0
 10004  0039EA  0012               	return		;funcret
 10005  0039EC                     __end_of_strlen:
 10006                           	opt callstack 0
 10007                           
 10008 ;; *************** function _fputs *****************
 10009 ;; Defined at:
 10010 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 10013 ;;		 -> dbuf(32), 
 10014 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 10015 ;;		 -> NULL(0), 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;  i               2   18[BANK0 ] int 
 10018 ;;  c               1   17[BANK0 ] unsigned char 
 10019 ;; Return value:  Size  Location     Type
 10020 ;;                  2   13[BANK0 ] int 
 10021 ;; Registers used:
 10022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10023 ;; Tracked objects:
 10024 ;;		On entry : 0/0
 10025 ;;		On exit  : 0/0
 10026 ;;		Unchanged: 0/0
 10027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10028 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10029 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10032 ;;Total ram usage:        7 bytes
 10033 ;; Hardware stack levels used:    1
 10034 ;; Hardware stack levels required when called:    8
 10035 ;; This function calls:
 10036 ;;		_fputc
 10037 ;; This function is called by:
 10038 ;;		_pad
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042                           	psect	text31
 10043  003850                     __ptext31:
 10044                           	opt callstack 0
 10045  003850                     _fputs:
 10046                           	opt callstack 16
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;incstack = 0
 10050  003850  0E00               	movlw	0
 10051  003852  0100               	movlb	0	; () banked
 10052  003854  6F93               	movwf	(fputs@i+1)& (0+255),b
 10053  003856  0E00               	movlw	0
 10054  003858  6F92               	movwf	fputs@i& (0+255),b
 10055  00385A  D00C               	goto	l6292
 10056  00385C                     l6288:
 10057                           
 10058                           ; BSR set to: 0
 10059  00385C  C091  F084         	movff	fputs@c,fputc@c
 10060  003860  6B85               	clrf	(fputc@c+1)& (0+255),b
 10061  003862  C08F  F086         	movff	fputs@fp,fputc@fp
 10062  003866  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10063  00386A  EC56  F01A         	call	_fputc	;wreg free
 10064  00386E  0100               	movlb	0	; () banked
 10065  003870  4B92               	infsnz	fputs@i& (0+255),f,b
 10066  003872  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10067  003874                     l6292:
 10068                           
 10069                           ; BSR set to: 0
 10070  003874  5192               	movf	fputs@i& (0+255),w,b
 10071  003876  258D               	addwf	fputs@s& (0+255),w,b
 10072  003878  6ED9               	movwf	fsr2l,c
 10073  00387A  5193               	movf	(fputs@i+1)& (0+255),w,b
 10074  00387C  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10075  00387E  6EDA               	movwf	fsr2h,c
 10076  003880  50DF               	movf	indf2,w,c
 10077  003882  6F91               	movwf	fputs@c& (0+255),b
 10078  003884  5191               	movf	fputs@c& (0+255),w,b
 10079  003886  B4D8               	btfsc	status,2,c
 10080  003888  0012               	return	
 10081  00388A  D7E8               	goto	l6288
 10082  00388C                     __end_of_fputs:
 10083                           	opt callstack 0
 10084                           
 10085 ;; *************** function _fputc *****************
 10086 ;; Defined at:
 10087 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  c               2    4[BANK0 ] int 
 10090 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10091 ;;		 -> NULL(0), 
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  2    4[BANK0 ] int 
 10096 ;; Registers used:
 10097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10103 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;Total ram usage:        9 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; Hardware stack levels required when called:    7
 10110 ;; This function calls:
 10111 ;;		_putch
 10112 ;; This function is called by:
 10113 ;;		_pad
 10114 ;;		_vfpfcnvrt
 10115 ;;		_fputs
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           	psect	text32
 10120  0034AC                     __ptext32:
 10121                           	opt callstack 0
 10122  0034AC                     _fputc:
 10123                           	opt callstack 16
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;incstack = 0
 10127  0034AC  0100               	movlb	0	; () banked
 10128  0034AE  5186               	movf	fputc@fp& (0+255),w,b
 10129  0034B0  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10130  0034B2  B4D8               	btfsc	status,2,c
 10131  0034B4  D004               	goto	u6430
 10132                           
 10133                           ; BSR set to: 0
 10134  0034B6  5186               	movf	fputc@fp& (0+255),w,b
 10135  0034B8  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10136  0034BA  A4D8               	btfss	status,2,c
 10137  0034BC  D004               	goto	l6278
 10138  0034BE                     u6430:
 10139                           
 10140                           ; BSR set to: 0
 10141  0034BE  5184               	movf	fputc@c& (0+255),w,b
 10142  0034C0  EC96  F01D         	call	_putch
 10143  0034C4  0012               	return	
 10144  0034C6                     l6278:
 10145                           
 10146                           ; BSR set to: 0
 10147  0034C6  EE20 F004          	lfsr	2,4
 10148  0034CA  5186               	movf	fputc@fp& (0+255),w,b
 10149  0034CC  26D9               	addwf	fsr2l,f,c
 10150  0034CE  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10151  0034D0  22DA               	addwfc	fsr2h,f,c
 10152  0034D2  50DE               	movf	postinc2,w,c
 10153  0034D4  10DE               	iorwf	postinc2,w,c
 10154  0034D6  B4D8               	btfsc	status,2,c
 10155  0034D8  D016               	goto	u6450
 10156                           
 10157                           ; BSR set to: 0
 10158  0034DA  EE20 F004          	lfsr	2,4
 10159  0034DE  5186               	movf	fputc@fp& (0+255),w,b
 10160  0034E0  26D9               	addwf	fsr2l,f,c
 10161  0034E2  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10162  0034E4  22DA               	addwfc	fsr2h,f,c
 10163  0034E6  EE10 F002          	lfsr	1,2
 10164  0034EA  5186               	movf	fputc@fp& (0+255),w,b
 10165  0034EC  26E1               	addwf	fsr1l,f,c
 10166  0034EE  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10167  0034F0  22E2               	addwfc	fsr1h,f,c
 10168  0034F2  50DE               	movf	postinc2,w,c
 10169  0034F4  5CE6               	subwf	postinc1,w,c
 10170  0034F6  50E6               	movf	postinc1,w,c
 10171  0034F8  0A80               	xorlw	128
 10172  0034FA  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10173  0034FC  50DE               	movf	postinc2,w,c
 10174  0034FE  0A80               	xorlw	128
 10175  003500  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10176  003502  B0D8               	btfsc	status,0,c
 10177  003504  0012               	return	
 10178  003506                     u6450:
 10179                           
 10180                           ; BSR set to: 0
 10181  003506  EE20 F002          	lfsr	2,2
 10182  00350A  5186               	movf	fputc@fp& (0+255),w,b
 10183  00350C  26D9               	addwf	fsr2l,f,c
 10184  00350E  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10185  003510  22DA               	addwfc	fsr2h,f,c
 10186  003512  2ADE               	incf	postinc2,f,c
 10187  003514  0E00               	movlw	0
 10188  003516  22DD               	addwfc	postdec2,f,c
 10189  003518  0012               	return		;funcret
 10190  00351A                     __end_of_fputc:
 10191                           	opt callstack 0
 10192                           
 10193 ;; *************** function _putch *****************
 10194 ;; Defined at:
 10195 ;;		line 102 in file "lcd.c"
 10196 ;; Parameters:    Size  Location     Type
 10197 ;;  data            1    wreg     unsigned char 
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;  data            1    3[BANK0 ] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  1    wreg      void 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0, cstack
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10213 ;;Total ram usage:        1 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:    6
 10216 ;; This function calls:
 10217 ;;		_send_byte
 10218 ;; This function is called by:
 10219 ;;		_fputc
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text33
 10224  003B2C                     __ptext33:
 10225                           	opt callstack 0
 10226  003B2C                     _putch:
 10227                           	opt callstack 16
 10228                           
 10229                           ;incstack = 0
 10230                           ;putch@data stored from wreg
 10231  003B2C  0100               	movlb	0	; () banked
 10232  003B2E  6F83               	movwf	putch@data& (0+255),b
 10233                           
 10234                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10235  003B30  848C               	bsf	3980,2,c	;volatile
 10236                           
 10237                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10238  003B32  0100               	movlb	0	; () banked
 10239  003B34  5183               	movf	putch@data& (0+255),w,b
 10240  003B36  EC80  F01D         	call	_send_byte
 10241  003B3A  0012               	return		;funcret
 10242  003B3C                     __end_of_putch:
 10243                           	opt callstack 0
 10244                           
 10245 ;; *************** function _abs *****************
 10246 ;; Defined at:
 10247 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;  a               2   18[BANK0 ] int 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;		None
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  2   18[BANK0 ] int 
 10254 ;; Registers used:
 10255 ;;		wreg, status,2, status,0
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10264 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10265 ;;Total ram usage:        4 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:    3
 10268 ;; This function calls:
 10269 ;;		Nothing
 10270 ;; This function is called by:
 10271 ;;		_ultrasonic_main
 10272 ;;		_dtoa
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           	psect	text34
 10277  0038C2                     __ptext34:
 10278                           	opt callstack 0
 10279  0038C2                     _abs:
 10280                           	opt callstack 22
 10281                           
 10282                           ;incstack = 0
 10283  0038C2  0100               	movlb	0	; () banked
 10284  0038C4  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10285  0038C6  D005               	goto	u6500
 10286  0038C8  5193               	movf	(abs@a+1)& (0+255),w,b
 10287  0038CA  E110               	bnz	l1358
 10288  0038CC  0592               	decf	abs@a& (0+255),w,b
 10289  0038CE  B0D8               	btfsc	status,0,c
 10290  0038D0  D00D               	goto	l1358
 10291  0038D2                     u6500:
 10292                           
 10293                           ; BSR set to: 0
 10294  0038D2  C092  F094         	movff	abs@a,??_abs
 10295  0038D6  C093  F095         	movff	abs@a+1,??_abs+1
 10296  0038DA  1F94               	comf	??_abs& (0+255),f,b
 10297  0038DC  1F95               	comf	(??_abs+1)& (0+255),f,b
 10298  0038DE  4B94               	infsnz	??_abs& (0+255),f,b
 10299  0038E0  2B95               	incf	(??_abs+1)& (0+255),f,b
 10300  0038E2  C094  F092         	movff	??_abs,?_abs
 10301  0038E6  C095  F093         	movff	??_abs+1,?_abs+1
 10302  0038EA  0012               	return	
 10303  0038EC                     l1358:
 10304                           
 10305                           ; BSR set to: 0
 10306  0038EC  C092  F092         	movff	abs@a,?_abs
 10307  0038F0  C093  F093         	movff	abs@a+1,?_abs+1
 10308                           
 10309                           ; BSR set to: 0
 10310  0038F4  0012               	return		;funcret
 10311  0038F6                     __end_of_abs:
 10312                           	opt callstack 0
 10313                           
 10314 ;; *************** function ___aomod *****************
 10315 ;; Defined at:
 10316 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;  dividend        8    0[BANK0 ] long long 
 10319 ;;  divisor         8    8[BANK0 ] long long 
 10320 ;; Auto vars:     Size  Location     Type
 10321 ;;  sign            1   17[BANK0 ] unsigned char 
 10322 ;;  counter         1   16[BANK0 ] unsigned char 
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  8    0[BANK0 ] long long 
 10325 ;; Registers used:
 10326 ;;		wreg, status,2, status,0
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10332 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10333 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10335 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10336 ;;Total ram usage:       18 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    3
 10339 ;; This function calls:
 10340 ;;		Nothing
 10341 ;; This function is called by:
 10342 ;;		_dtoa
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text35
 10347  002B26                     __ptext35:
 10348                           	opt callstack 0
 10349  002B26                     ___aomod:
 10350                           	opt callstack 22
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;incstack = 0
 10354  002B26  0E00               	movlw	0
 10355  002B28  0100               	movlb	0	; () banked
 10356  002B2A  6F91               	movwf	___aomod@sign& (0+255),b
 10357                           
 10358                           ; BSR set to: 0
 10359  002B2C  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10360  002B2E  D012               	goto	l6414
 10361                           
 10362                           ; BSR set to: 0
 10363  002B30  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10364  002B32  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10365  002B34  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10366  002B36  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10367  002B38  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10368  002B3A  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10369  002B3C  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10370  002B3E  6D80               	negf	___aomod@dividend& (0+255),b
 10371  002B40  0E00               	movlw	0
 10372  002B42  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10373  002B44  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10374  002B46  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10375  002B48  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10376  002B4A  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10377  002B4C  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10378  002B4E  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10379                           
 10380                           ; BSR set to: 0
 10381  002B50  0E01               	movlw	1
 10382  002B52  6F91               	movwf	___aomod@sign& (0+255),b
 10383  002B54                     l6414:
 10384                           
 10385                           ; BSR set to: 0
 10386  002B54  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10387  002B56  D010               	goto	l6418
 10388                           
 10389                           ; BSR set to: 0
 10390  002B58  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 10391  002B5A  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 10392  002B5C  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 10393  002B5E  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 10394  002B60  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 10395  002B62  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 10396  002B64  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 10397  002B66  6D88               	negf	___aomod@divisor& (0+255),b
 10398  002B68  0E00               	movlw	0
 10399  002B6A  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10400  002B6C  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10401  002B6E  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10402  002B70  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10403  002B72  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10404  002B74  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10405  002B76  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10406  002B78                     l6418:
 10407                           
 10408                           ; BSR set to: 0
 10409  002B78  5188               	movf	___aomod@divisor& (0+255),w,b
 10410  002B7A  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10411  002B7C  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10412  002B7E  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10413  002B80  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10414  002B82  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10415  002B84  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10416  002B86  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10417  002B88  B4D8               	btfsc	status,2,c
 10418  002B8A  D03C               	goto	l6434
 10419                           
 10420                           ; BSR set to: 0
 10421  002B8C  0E01               	movlw	1
 10422  002B8E  6F90               	movwf	___aomod@counter& (0+255),b
 10423  002B90  D00A               	goto	l6424
 10424  002B92                     l6422:
 10425                           
 10426                           ; BSR set to: 0
 10427  002B92  90D8               	bcf	status,0,c
 10428  002B94  3788               	rlcf	___aomod@divisor& (0+255),f,b
 10429  002B96  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10430  002B98  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10431  002B9A  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10432  002B9C  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10433  002B9E  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10434  002BA0  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10435  002BA2  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10436  002BA4  2B90               	incf	___aomod@counter& (0+255),f,b
 10437  002BA6                     l6424:
 10438                           
 10439                           ; BSR set to: 0
 10440  002BA6  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10441  002BA8  D7F4               	goto	l6422
 10442  002BAA                     u6740:
 10443                           
 10444                           ; BSR set to: 0
 10445  002BAA  5188               	movf	___aomod@divisor& (0+255),w,b
 10446  002BAC  5D80               	subwf	___aomod@dividend& (0+255),w,b
 10447  002BAE  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10448  002BB0  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10449  002BB2  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10450  002BB4  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10451  002BB6  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10452  002BB8  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10453  002BBA  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10454  002BBC  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10455  002BBE  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10456  002BC0  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10457  002BC2  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10458  002BC4  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10459  002BC6  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10460  002BC8  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10461  002BCA  A0D8               	btfss	status,0,c
 10462  002BCC  D010               	goto	l6430
 10463                           
 10464                           ; BSR set to: 0
 10465  002BCE  5188               	movf	___aomod@divisor& (0+255),w,b
 10466  002BD0  5F80               	subwf	___aomod@dividend& (0+255),f,b
 10467  002BD2  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10468  002BD4  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10469  002BD6  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10470  002BD8  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10471  002BDA  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10472  002BDC  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10473  002BDE  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10474  002BE0  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10475  002BE2  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10476  002BE4  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10477  002BE6  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10478  002BE8  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10479  002BEA  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10480  002BEC  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10481  002BEE                     l6430:
 10482                           
 10483                           ; BSR set to: 0
 10484  002BEE  90D8               	bcf	status,0,c
 10485  002BF0  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10486  002BF2  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10487  002BF4  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10488  002BF6  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10489  002BF8  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10490  002BFA  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10491  002BFC  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10492  002BFE  3388               	rrcf	___aomod@divisor& (0+255),f,b
 10493                           
 10494                           ; BSR set to: 0
 10495  002C00  2F90               	decfsz	___aomod@counter& (0+255),f,b
 10496  002C02  D7D3               	goto	u6740
 10497  002C04                     l6434:
 10498                           
 10499                           ; BSR set to: 0
 10500  002C04  5191               	movf	___aomod@sign& (0+255),w,b
 10501  002C06  B4D8               	btfsc	status,2,c
 10502  002C08  D010               	goto	l6438
 10503                           
 10504                           ; BSR set to: 0
 10505  002C0A  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10506  002C0C  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10507  002C0E  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10508  002C10  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10509  002C12  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10510  002C14  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10511  002C16  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10512  002C18  6D80               	negf	___aomod@dividend& (0+255),b
 10513  002C1A  0E00               	movlw	0
 10514  002C1C  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10515  002C1E  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10516  002C20  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10517  002C22  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10518  002C24  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10519  002C26  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10520  002C28  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10521  002C2A                     l6438:
 10522                           
 10523                           ; BSR set to: 0
 10524  002C2A  C080  F080         	movff	___aomod@dividend,?___aomod
 10525  002C2E  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 10526  002C32  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 10527  002C36  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 10528  002C3A  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 10529  002C3E  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 10530  002C42  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 10531  002C46  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 10532                           
 10533                           ; BSR set to: 0
 10534  002C4A  0012               	return		;funcret
 10535  002C4C                     __end_of___aomod:
 10536                           	opt callstack 0
 10537                           
 10538 ;; *************** function ___aodiv *****************
 10539 ;; Defined at:
 10540 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;  dividend        8    0[BANK0 ] long long 
 10543 ;;  divisor         8    8[BANK0 ] long long 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;  quotient        8   18[BANK0 ] long long 
 10546 ;;  sign            1   17[BANK0 ] unsigned char 
 10547 ;;  counter         1   16[BANK0 ] unsigned char 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  8    0[BANK0 ] long long 
 10550 ;; Registers used:
 10551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10557 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10558 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10560 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10561 ;;Total ram usage:       26 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:    3
 10564 ;; This function calls:
 10565 ;;		Nothing
 10566 ;; This function is called by:
 10567 ;;		_dtoa
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           	psect	text36
 10572  002622                     __ptext36:
 10573                           	opt callstack 0
 10574  002622                     ___aodiv:
 10575                           	opt callstack 22
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;incstack = 0
 10579  002622  0E00               	movlw	0
 10580  002624  0100               	movlb	0	; () banked
 10581  002626  6F91               	movwf	___aodiv@sign& (0+255),b
 10582                           
 10583                           ; BSR set to: 0
 10584  002628  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10585  00262A  D012               	goto	l6370
 10586                           
 10587                           ; BSR set to: 0
 10588  00262C  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10589  00262E  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10590  002630  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10591  002632  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10592  002634  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10593  002636  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10594  002638  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10595  00263A  6D88               	negf	___aodiv@divisor& (0+255),b
 10596  00263C  0E00               	movlw	0
 10597  00263E  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10598  002640  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10599  002642  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10600  002644  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10601  002646  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10602  002648  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10603  00264A  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10604                           
 10605                           ; BSR set to: 0
 10606  00264C  0E01               	movlw	1
 10607  00264E  6F91               	movwf	___aodiv@sign& (0+255),b
 10608  002650                     l6370:
 10609                           
 10610                           ; BSR set to: 0
 10611  002650  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 10612  002652  D012               	goto	l6376
 10613                           
 10614                           ; BSR set to: 0
 10615  002654  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10616  002656  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10617  002658  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10618  00265A  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10619  00265C  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10620  00265E  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10621  002660  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10622  002662  6D80               	negf	___aodiv@dividend& (0+255),b
 10623  002664  0E00               	movlw	0
 10624  002666  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10625  002668  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10626  00266A  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10627  00266C  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10628  00266E  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10629  002670  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10630  002672  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10631                           
 10632                           ; BSR set to: 0
 10633  002674  0E01               	movlw	1
 10634  002676  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 10635  002678                     l6376:
 10636                           
 10637                           ; BSR set to: 0
 10638  002678  EE20  F092         	lfsr	2,___aodiv@quotient
 10639  00267C  0E07               	movlw	7
 10640  00267E                     u6661:
 10641  00267E  6ADE               	clrf	postinc2,c
 10642  002680  06E8               	decf	wreg,f,c
 10643  002682  E2FD               	bc	u6661
 10644                           
 10645                           ; BSR set to: 0
 10646  002684  5188               	movf	___aodiv@divisor& (0+255),w,b
 10647  002686  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10648  002688  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10649  00268A  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10650  00268C  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10651  00268E  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10652  002690  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10653  002692  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10654  002694  B4D8               	btfsc	status,2,c
 10655  002696  D046               	goto	l6398
 10656                           
 10657                           ; BSR set to: 0
 10658  002698  0E01               	movlw	1
 10659  00269A  6F90               	movwf	___aodiv@counter& (0+255),b
 10660  00269C  D00A               	goto	l6384
 10661  00269E                     l6382:
 10662                           
 10663                           ; BSR set to: 0
 10664  00269E  90D8               	bcf	status,0,c
 10665  0026A0  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 10666  0026A2  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10667  0026A4  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10668  0026A6  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10669  0026A8  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10670  0026AA  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10671  0026AC  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10672  0026AE  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10673  0026B0  2B90               	incf	___aodiv@counter& (0+255),f,b
 10674  0026B2                     l6384:
 10675                           
 10676                           ; BSR set to: 0
 10677  0026B2  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10678  0026B4  D7F4               	goto	l6382
 10679  0026B6                     u6680:
 10680                           
 10681                           ; BSR set to: 0
 10682  0026B6  90D8               	bcf	status,0,c
 10683  0026B8  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 10684  0026BA  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10685  0026BC  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10686  0026BE  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10687  0026C0  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10688  0026C2  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10689  0026C4  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10690  0026C6  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10691                           
 10692                           ; BSR set to: 0
 10693  0026C8  5188               	movf	___aodiv@divisor& (0+255),w,b
 10694  0026CA  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 10695  0026CC  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10696  0026CE  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10697  0026D0  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10698  0026D2  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10699  0026D4  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10700  0026D6  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10701  0026D8  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10702  0026DA  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10703  0026DC  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10704  0026DE  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10705  0026E0  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10706  0026E2  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10707  0026E4  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10708  0026E6  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10709  0026E8  A0D8               	btfss	status,0,c
 10710  0026EA  D011               	goto	l6394
 10711                           
 10712                           ; BSR set to: 0
 10713  0026EC  5188               	movf	___aodiv@divisor& (0+255),w,b
 10714  0026EE  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 10715  0026F0  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10716  0026F2  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10717  0026F4  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10718  0026F6  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10719  0026F8  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10720  0026FA  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10721  0026FC  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10722  0026FE  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10723  002700  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10724  002702  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10725  002704  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10726  002706  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10727  002708  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10728  00270A  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10729                           
 10730                           ; BSR set to: 0
 10731  00270C  8192               	bsf	___aodiv@quotient& (0+255),0,b
 10732  00270E                     l6394:
 10733                           
 10734                           ; BSR set to: 0
 10735  00270E  90D8               	bcf	status,0,c
 10736  002710  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10737  002712  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10738  002714  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10739  002716  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10740  002718  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10741  00271A  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10742  00271C  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10743  00271E  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 10744                           
 10745                           ; BSR set to: 0
 10746  002720  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 10747  002722  D7C9               	goto	u6680
 10748  002724                     l6398:
 10749                           
 10750                           ; BSR set to: 0
 10751  002724  5191               	movf	___aodiv@sign& (0+255),w,b
 10752  002726  B4D8               	btfsc	status,2,c
 10753  002728  D010               	goto	l6402
 10754                           
 10755                           ; BSR set to: 0
 10756  00272A  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10757  00272C  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10758  00272E  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10759  002730  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10760  002732  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10761  002734  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10762  002736  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10763  002738  6D92               	negf	___aodiv@quotient& (0+255),b
 10764  00273A  0E00               	movlw	0
 10765  00273C  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10766  00273E  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10767  002740  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10768  002742  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10769  002744  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10770  002746  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10771  002748  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10772  00274A                     l6402:
 10773                           
 10774                           ; BSR set to: 0
 10775  00274A  C092  F080         	movff	___aodiv@quotient,?___aodiv
 10776  00274E  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 10777  002752  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 10778  002756  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 10779  00275A  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 10780  00275E  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 10781  002762  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 10782  002766  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 10783                           
 10784                           ; BSR set to: 0
 10785  00276A  0012               	return		;funcret
 10786  00276C                     __end_of___aodiv:
 10787                           	opt callstack 0
 10788                           
 10789 ;; *************** function _atoi *****************
 10790 ;; Defined at:
 10791 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 10794 ;;		 -> STR_62(10), STR_61(11), STR_60(11), STR_59(12), 
 10795 ;;		 -> STR_58(12), STR_57(10), STR_56(10), STR_55(13), 
 10796 ;;		 -> STR_54(8), STR_53(3), STR_52(4), STR_51(17), 
 10797 ;;		 -> STR_50(15), STR_49(15), STR_48(12), STR_47(17), 
 10798 ;;		 -> STR_46(12), STR_45(15), STR_44(18), STR_43(17), 
 10799 ;;		 -> STR_42(12), STR_41(15), STR_40(18), STR_39(17), 
 10800 ;;		 -> STR_38(14), STR_37(14), STR_36(17), STR_35(3), 
 10801 ;;		 -> STR_34(9), STR_33(16), STR_32(3), STR_31(9), 
 10802 ;;		 -> STR_30(17), STR_29(15), STR_28(15), STR_27(12), 
 10803 ;;		 -> STR_26(10), STR_25(15), STR_24(12), STR_23(10), 
 10804 ;;		 -> STR_22(16), STR_21(12), STR_20(11), STR_19(13), 
 10805 ;;		 -> STR_18(8), STR_17(10), STR_16(17), STR_15(10), 
 10806 ;;		 -> STR_14(16), STR_13(10), STR_12(16), STR_11(10), 
 10807 ;;		 -> STR_10(17), STR_9(5), STR_8(10), STR_7(14), 
 10808 ;;		 -> STR_6(6), STR_5(10), STR_4(10), STR_3(11), 
 10809 ;;		 -> STR_2(13), STR_1(10), 
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;  n               2   20[BANK0 ] int 
 10812 ;;  neg             2   13[BANK0 ] int 
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  2    7[BANK0 ] int 
 10815 ;; Registers used:
 10816 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10823 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10824 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10825 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10826 ;;Total ram usage:       15 bytes
 10827 ;; Hardware stack levels used:    1
 10828 ;; Hardware stack levels required when called:    4
 10829 ;; This function calls:
 10830 ;;		___wmul
 10831 ;;		_isdigit
 10832 ;;		_isspace
 10833 ;; This function is called by:
 10834 ;;		_vfpfcnvrt
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           	psect	text37
 10839  00276C                     __ptext37:
 10840                           	opt callstack 0
 10841  00276C                     _atoi:
 10842                           	opt callstack 22
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;incstack = 0
 10846  00276C  0E00               	movlw	0
 10847  00276E  0100               	movlb	0	; () banked
 10848  002770  6F95               	movwf	(atoi@n+1)& (0+255),b
 10849  002772  0E00               	movlw	0
 10850  002774  6F94               	movwf	atoi@n& (0+255),b
 10851  002776  0E00               	movlw	0
 10852  002778  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10853  00277A  0E00               	movlw	0
 10854  00277C  6F8D               	movwf	atoi@neg& (0+255),b
 10855  00277E  D002               	goto	l6586
 10856  002780                     l6584:
 10857                           
 10858                           ; BSR set to: 0
 10859  002780  4B87               	infsnz	atoi@s& (0+255),f,b
 10860  002782  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10861  002784                     l6586:
 10862                           
 10863                           ; BSR set to: 0
 10864  002784  0E01               	movlw	1
 10865  002786  6F93               	movwf	_atoi$1585& (0+255),b
 10866                           
 10867                           ; BSR set to: 0
 10868  002788  C087  FFF6         	movff	atoi@s,tblptrl
 10869  00278C  C088  FFF7         	movff	atoi@s+1,tblptrh
 10870  002790                     	if	0	;tblptru may be non-zero
 10871  002790                     	endif
 10872  002790                     	if	0	;tblptru may be non-zero
 10873  002790                     	endif
 10874  002790  0008               	tblrd		*
 10875  002792  50F5               	movf	tablat,w,c
 10876  002794  0A20               	xorlw	32
 10877  002796  B4D8               	btfsc	status,2,c
 10878  002798  D018               	goto	l6594
 10879                           
 10880                           ; BSR set to: 0
 10881  00279A  0EF7               	movlw	247
 10882  00279C  6F89               	movwf	??_atoi& (0+255),b
 10883  00279E  0EFF               	movlw	255
 10884  0027A0  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10885  0027A2  C087  FFF6         	movff	atoi@s,tblptrl
 10886  0027A6  C088  FFF7         	movff	atoi@s+1,tblptrh
 10887  0027AA                     	if	0	;tblptru may be non-zero
 10888  0027AA                     	endif
 10889  0027AA                     	if	0	;tblptru may be non-zero
 10890  0027AA                     	endif
 10891  0027AA  0008               	tblrd		*
 10892  0027AC  50F5               	movf	tablat,w,c
 10893  0027AE  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10894  0027B0  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10895  0027B2  5189               	movf	??_atoi& (0+255),w,b
 10896  0027B4  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10897  0027B6  518A               	movf	(??_atoi+1)& (0+255),w,b
 10898  0027B8  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10899  0027BA  518C               	movf	(??_atoi+3)& (0+255),w,b
 10900  0027BC  E104               	bnz	u7120
 10901  0027BE  0E05               	movlw	5
 10902  0027C0  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10903  0027C2  A0D8               	btfss	status,0,c
 10904  0027C4  D002               	goto	l6594
 10905  0027C6                     u7120:
 10906                           
 10907                           ; BSR set to: 0
 10908  0027C6  0E00               	movlw	0
 10909  0027C8  6F93               	movwf	_atoi$1585& (0+255),b
 10910  0027CA                     l6594:
 10911                           
 10912                           ; BSR set to: 0
 10913  0027CA  C093  F08F         	movff	_atoi$1585,_atoi$1584
 10914  0027CE  6B90               	clrf	(_atoi$1584+1)& (0+255),b
 10915                           
 10916                           ; BSR set to: 0
 10917  0027D0  518F               	movf	_atoi$1584& (0+255),w,b
 10918  0027D2  1190               	iorwf	(_atoi$1584+1)& (0+255),w,b
 10919  0027D4  B4D8               	btfsc	status,2,c
 10920  0027D6  D008               	goto	l6604
 10921  0027D8  D7D3               	goto	l6584
 10922  0027DA                     l6600:
 10923                           
 10924                           ; BSR set to: 0
 10925  0027DA  0E00               	movlw	0
 10926  0027DC  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10927  0027DE  0E01               	movlw	1
 10928  0027E0  6F8D               	movwf	atoi@neg& (0+255),b
 10929  0027E2                     l6602:
 10930                           
 10931                           ; BSR set to: 0
 10932  0027E2  4B87               	infsnz	atoi@s& (0+255),f,b
 10933  0027E4  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10934  0027E6  D02F               	goto	l6610
 10935  0027E8                     l6604:
 10936                           
 10937                           ; BSR set to: 0
 10938  0027E8  C087  FFF6         	movff	atoi@s,tblptrl
 10939  0027EC  C088  FFF7         	movff	atoi@s+1,tblptrh
 10940  0027F0                     	if	0	;tblptru may be non-zero
 10941  0027F0                     	endif
 10942  0027F0                     	if	0	;tblptru may be non-zero
 10943  0027F0                     	endif
 10944  0027F0  0008               	tblrd		*
 10945  0027F2  50F5               	movf	tablat,w,c
 10946  0027F4  6F89               	movwf	??_atoi& (0+255),b
 10947  0027F6  6B8A               	clrf	(??_atoi+1)& (0+255),b
 10948                           
 10949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10950                           ; Switch size 1, requested type "simple"
 10951                           ; Number of cases is 1, Range of values is 0 to 0
 10952                           ; switch strategies available:
 10953                           ; Name         Instructions Cycles
 10954                           ; simple_byte            4     3 (average)
 10955                           ;	Chosen strategy is simple_byte
 10956  0027F8  518A               	movf	(??_atoi+1)& (0+255),w,b
 10957  0027FA  0A00               	xorlw	0	; case 0
 10958  0027FC  A4D8               	btfss	status,2,c
 10959  0027FE  D023               	goto	l6610
 10960                           
 10961                           ; BSR set to: 0
 10962                           ; Switch size 1, requested type "simple"
 10963                           ; Number of cases is 2, Range of values is 43 to 45
 10964                           ; switch strategies available:
 10965                           ; Name         Instructions Cycles
 10966                           ; simple_byte            7     4 (average)
 10967                           ;	Chosen strategy is simple_byte
 10968  002800  5189               	movf	??_atoi& (0+255),w,b
 10969  002802  0A2B               	xorlw	43	; case 43
 10970  002804  B4D8               	btfsc	status,2,c
 10971  002806  D7ED               	goto	l6602
 10972  002808  0A06               	xorlw	6	; case 45
 10973  00280A  B4D8               	btfsc	status,2,c
 10974  00280C  D7E6               	goto	l6600
 10975  00280E  D01B               	goto	l6610
 10976  002810                     l6606:
 10977                           
 10978                           ; BSR set to: 0
 10979  002810  C094  F080         	movff	atoi@n,___wmul@multiplier
 10980  002814  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 10981  002818  0E00               	movlw	0
 10982  00281A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10983  00281C  0E0A               	movlw	10
 10984  00281E  6F82               	movwf	___wmul@multiplicand& (0+255),b
 10985  002820  EC4C  F01D         	call	___wmul	;wreg free
 10986  002824  C087  FFF6         	movff	atoi@s,tblptrl
 10987  002828  C088  FFF7         	movff	atoi@s+1,tblptrh
 10988  00282C                     	if	0	;tblptru may be non-zero
 10989  00282C                     	endif
 10990  00282C                     	if	0	;tblptru may be non-zero
 10991  00282C                     	endif
 10992  00282C  0008               	tblrd		*
 10993  00282E  50F5               	movf	tablat,w,c
 10994  002830  0100               	movlb	0	; () banked
 10995  002832  5F80               	subwf	?___wmul& (0+255),f,b
 10996  002834  0E00               	movlw	0
 10997  002836  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 10998  002838  0E30               	movlw	48
 10999  00283A  2580               	addwf	?___wmul& (0+255),w,b
 11000  00283C  6F94               	movwf	atoi@n& (0+255),b
 11001  00283E  0E00               	movlw	0
 11002  002840  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 11003  002842  6F95               	movwf	(atoi@n+1)& (0+255),b
 11004  002844  D7CE               	goto	l6602
 11005  002846                     l6610:
 11006                           
 11007                           ; BSR set to: 0
 11008  002846  0ED0               	movlw	208
 11009  002848  6F89               	movwf	??_atoi& (0+255),b
 11010  00284A  0EFF               	movlw	255
 11011  00284C  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11012  00284E  C087  FFF6         	movff	atoi@s,tblptrl
 11013  002852  C088  FFF7         	movff	atoi@s+1,tblptrh
 11014  002856                     	if	0	;tblptru may be non-zero
 11015  002856                     	endif
 11016  002856                     	if	0	;tblptru may be non-zero
 11017  002856                     	endif
 11018  002856  0008               	tblrd		*
 11019  002858  50F5               	movf	tablat,w,c
 11020  00285A  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11021  00285C  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11022  00285E  5189               	movf	??_atoi& (0+255),w,b
 11023  002860  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11024  002862  518A               	movf	(??_atoi+1)& (0+255),w,b
 11025  002864  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11026  002866  518C               	movf	(??_atoi+3)& (0+255),w,b
 11027  002868  E106               	bnz	u7140
 11028  00286A  0E0A               	movlw	10
 11029  00286C  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11030  00286E  B0D8               	btfsc	status,0,c
 11031  002870  D002               	goto	u7140
 11032  002872  0E01               	movlw	1
 11033  002874  D001               	goto	u7150
 11034  002876                     u7140:
 11035  002876  0E00               	movlw	0
 11036  002878                     u7150:
 11037  002878  6F91               	movwf	_atoi$1586& (0+255),b
 11038  00287A  6B92               	clrf	(_atoi$1586+1)& (0+255),b
 11039                           
 11040                           ; BSR set to: 0
 11041  00287C  5191               	movf	_atoi$1586& (0+255),w,b
 11042  00287E  1192               	iorwf	(_atoi$1586+1)& (0+255),w,b
 11043  002880  A4D8               	btfss	status,2,c
 11044  002882  D7C6               	goto	l6606
 11045                           
 11046                           ; BSR set to: 0
 11047  002884  518D               	movf	atoi@neg& (0+255),w,b
 11048  002886  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11049  002888  A4D8               	btfss	status,2,c
 11050  00288A  D00D               	goto	l1389
 11051                           
 11052                           ; BSR set to: 0
 11053  00288C  C094  F089         	movff	atoi@n,??_atoi
 11054  002890  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11055  002894  1F89               	comf	??_atoi& (0+255),f,b
 11056  002896  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11057  002898  4B89               	infsnz	??_atoi& (0+255),f,b
 11058  00289A  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11059  00289C  C089  F087         	movff	??_atoi,?_atoi
 11060  0028A0  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11061  0028A4  0012               	return	
 11062  0028A6                     l1389:
 11063                           
 11064                           ; BSR set to: 0
 11065  0028A6  C094  F087         	movff	atoi@n,?_atoi
 11066  0028AA  C095  F088         	movff	atoi@n+1,?_atoi+1
 11067                           
 11068                           ; BSR set to: 0
 11069  0028AE  0012               	return		;funcret
 11070  0028B0                     __end_of_atoi:
 11071                           	opt callstack 0
 11072                           
 11073 ;; *************** function _isspace *****************
 11074 ;; Defined at:
 11075 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;  c               2    0[BANK0 ] int 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;		None
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  2    0[BANK0 ] int 
 11082 ;; Registers used:
 11083 ;;		wreg, status,2, status,0
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11092 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11093 ;;Total ram usage:        7 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; Hardware stack levels required when called:    3
 11096 ;; This function calls:
 11097 ;;		Nothing
 11098 ;; This function is called by:
 11099 ;;		_atoi
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text38
 11104  0037D2                     __ptext38:
 11105                           	opt callstack 0
 11106  0037D2                     _isspace:
 11107                           	opt callstack 22
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;incstack = 0
 11111  0037D2  0E01               	movlw	1
 11112  0037D4  0100               	movlb	0	; () banked
 11113  0037D6  6F86               	movwf	_isspace$1611& (0+255),b
 11114                           
 11115                           ; BSR set to: 0
 11116  0037D8  0E20               	movlw	32
 11117  0037DA  1980               	xorwf	isspace@c& (0+255),w,b
 11118  0037DC  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11119  0037DE  B4D8               	btfsc	status,2,c
 11120  0037E0  D014               	goto	l6450
 11121                           
 11122                           ; BSR set to: 0
 11123  0037E2  0EF7               	movlw	247
 11124  0037E4  6F82               	movwf	??_isspace& (0+255),b
 11125  0037E6  0EFF               	movlw	255
 11126  0037E8  6F83               	movwf	(??_isspace+1)& (0+255),b
 11127  0037EA  C080  F084         	movff	isspace@c,??_isspace+2
 11128  0037EE  C081  F085         	movff	isspace@c+1,??_isspace+3
 11129  0037F2  5182               	movf	??_isspace& (0+255),w,b
 11130  0037F4  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11131  0037F6  5183               	movf	(??_isspace+1)& (0+255),w,b
 11132  0037F8  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11133  0037FA  5185               	movf	(??_isspace+3)& (0+255),w,b
 11134  0037FC  E104               	bnz	u6780
 11135  0037FE  0E05               	movlw	5
 11136  003800  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11137  003802  A0D8               	btfss	status,0,c
 11138  003804  D002               	goto	l6450
 11139  003806                     u6780:
 11140                           
 11141                           ; BSR set to: 0
 11142  003806  0E00               	movlw	0
 11143  003808  6F86               	movwf	_isspace$1611& (0+255),b
 11144  00380A                     l6450:
 11145                           
 11146                           ; BSR set to: 0
 11147  00380A  C086  F080         	movff	_isspace$1611,?_isspace
 11148  00380E  6B81               	clrf	(?_isspace+1)& (0+255),b
 11149                           
 11150                           ; BSR set to: 0
 11151  003810  0012               	return		;funcret
 11152  003812                     __end_of_isspace:
 11153                           	opt callstack 0
 11154                           
 11155 ;; *************** function _isdigit *****************
 11156 ;; Defined at:
 11157 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;  c               2    0[BANK0 ] int 
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;		None
 11162 ;; Return value:  Size  Location     Type
 11163 ;;                  2    0[BANK0 ] int 
 11164 ;; Registers used:
 11165 ;;		wreg, status,2, status,0
 11166 ;; Tracked objects:
 11167 ;;		On entry : 0/0
 11168 ;;		On exit  : 0/0
 11169 ;;		Unchanged: 0/0
 11170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11173 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11174 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;Total ram usage:        6 bytes
 11176 ;; Hardware stack levels used:    1
 11177 ;; Hardware stack levels required when called:    3
 11178 ;; This function calls:
 11179 ;;		Nothing
 11180 ;; This function is called by:
 11181 ;;		_vfpfcnvrt
 11182 ;;		_atoi
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           	psect	text39
 11187  00398C                     __ptext39:
 11188                           	opt callstack 0
 11189  00398C                     _isdigit:
 11190                           	opt callstack 23
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;incstack = 0
 11194  00398C  0ED0               	movlw	208
 11195  00398E  0100               	movlb	0	; () banked
 11196  003990  6F82               	movwf	??_isdigit& (0+255),b
 11197  003992  0EFF               	movlw	255
 11198  003994  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11199  003996  C080  F084         	movff	isdigit@c,??_isdigit+2
 11200  00399A  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11201  00399E  5182               	movf	??_isdigit& (0+255),w,b
 11202  0039A0  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11203  0039A2  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11204  0039A4  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11205  0039A6  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11206  0039A8  E106               	bnz	u6620
 11207  0039AA  0E0A               	movlw	10
 11208  0039AC  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11209  0039AE  B0D8               	btfsc	status,0,c
 11210  0039B0  D002               	goto	u6620
 11211  0039B2  0E01               	movlw	1
 11212  0039B4  D001               	goto	u6630
 11213  0039B6                     u6620:
 11214  0039B6  0E00               	movlw	0
 11215  0039B8                     u6630:
 11216  0039B8  6F80               	movwf	?_isdigit& (0+255),b
 11217  0039BA  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11218                           
 11219                           ; BSR set to: 0
 11220  0039BC  0012               	return		;funcret
 11221  0039BE                     __end_of_isdigit:
 11222                           	opt callstack 0
 11223                           
 11224 ;; *************** function ___wmul *****************
 11225 ;; Defined at:
 11226 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11227 ;; Parameters:    Size  Location     Type
 11228 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11229 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;  product         2    4[BANK0 ] unsigned int 
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  2    0[BANK0 ] unsigned int 
 11234 ;; Registers used:
 11235 ;;		wreg, status,2, status,0, prodl, prodh
 11236 ;; Tracked objects:
 11237 ;;		On entry : 0/0
 11238 ;;		On exit  : 0/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11241 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11244 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11245 ;;Total ram usage:        6 bytes
 11246 ;; Hardware stack levels used:    1
 11247 ;; Hardware stack levels required when called:    3
 11248 ;; This function calls:
 11249 ;;		Nothing
 11250 ;; This function is called by:
 11251 ;;		_main
 11252 ;;		_atoi
 11253 ;; This function uses a non-reentrant model
 11254 ;;
 11255                           
 11256                           	psect	text40
 11257  003A98                     __ptext40:
 11258                           	opt callstack 0
 11259  003A98                     ___wmul:
 11260                           	opt callstack 22
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;incstack = 0
 11264  003A98  0100               	movlb	0	; () banked
 11265  003A9A  5180               	movf	___wmul@multiplier& (0+255),w,b
 11266  003A9C  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11267  003A9E  CFF3 F084          	movff	prodl,___wmul@product
 11268  003AA2  CFF4 F085          	movff	prodh,___wmul@product+1
 11269  003AA6  5180               	movf	___wmul@multiplier& (0+255),w,b
 11270  003AA8  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11271  003AAA  50F3               	movf	prodl,w,c
 11272  003AAC  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11273  003AAE  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11274  003AB0  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11275  003AB2  50F3               	movf	prodl,w,c
 11276  003AB4  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11277                           
 11278                           ; BSR set to: 0
 11279  003AB6  C084  F080         	movff	___wmul@product,?___wmul
 11280  003ABA  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11281                           
 11282                           ; BSR set to: 0
 11283  003ABE  0012               	return		;funcret
 11284  003AC0                     __end_of___wmul:
 11285                           	opt callstack 0
 11286                           
 11287 ;; *************** function _initLCD *****************
 11288 ;; Defined at:
 11289 ;;		line 69 in file "lcd.c"
 11290 ;; Parameters:    Size  Location     Type
 11291 ;;		None
 11292 ;; Auto vars:     Size  Location     Type
 11293 ;;		None
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  1    wreg      void 
 11296 ;; Registers used:
 11297 ;;		wreg, status,2, status,0, cstack
 11298 ;; Tracked objects:
 11299 ;;		On entry : 0/0
 11300 ;;		On exit  : 0/0
 11301 ;;		Unchanged: 0/0
 11302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11305 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11306 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;Total ram usage:        1 bytes
 11308 ;; Hardware stack levels used:    1
 11309 ;; Hardware stack levels required when called:    7
 11310 ;; This function calls:
 11311 ;;		_lcdInst
 11312 ;;		_send_byte
 11313 ;;		_send_nibble
 11314 ;; This function is called by:
 11315 ;;		_actuators_main
 11316 ;;		_UI_main
 11317 ;;		_main
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text41
 11322  00343C                     __ptext41:
 11323                           	opt callstack 0
 11324  00343C                     _initLCD:
 11325                           	opt callstack 23
 11326                           
 11327                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;incstack = 0
 11331  00343C  0E31               	movlw	49
 11332  00343E  0100               	movlb	0	; () banked
 11333  003440  6F84               	movwf	??_initLCD& (0+255),b
 11334  003442  0EB2               	movlw	178
 11335  003444                     u9547:
 11336  003444  2EE8               	decfsz	wreg,f,c
 11337  003446  D7FE               	bra	u9547
 11338  003448  2F84               	decfsz	??_initLCD& (0+255),f,b
 11339  00344A  D7FC               	bra	u9547
 11340  00344C  F000               	nop	
 11341                           
 11342                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11343  00344E  948C               	bcf	3980,2,c	;volatile
 11344                           
 11345                           ;lcd.c: 74:     send_nibble(0b0011);
 11346  003450  0E03               	movlw	3
 11347  003452  EC73  F01D         	call	_send_nibble
 11348                           
 11349                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11350  003456  0E11               	movlw	17
 11351  003458  0100               	movlb	0	; () banked
 11352  00345A  6F84               	movwf	??_initLCD& (0+255),b
 11353  00345C  0E3A               	movlw	58
 11354  00345E                     u9557:
 11355  00345E  2EE8               	decfsz	wreg,f,c
 11356  003460  D7FE               	bra	u9557
 11357  003462  2F84               	decfsz	??_initLCD& (0+255),f,b
 11358  003464  D7FC               	bra	u9557
 11359  003466  F000               	nop	
 11360                           
 11361                           ;lcd.c: 76:     send_nibble(0b0011);
 11362  003468  0E03               	movlw	3
 11363  00346A  EC73  F01D         	call	_send_nibble
 11364                           
 11365                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 11366  00346E  0E7D               	movlw	125
 11367  003470                     u9567:
 11368  003470  2EE8               	decfsz	wreg,f,c
 11369  003472  D7FE               	bra	u9567
 11370                           
 11371                           ;lcd.c: 78:     send_byte(0b00110010);
 11372  003474  0E32               	movlw	50
 11373  003476  EC80  F01D         	call	_send_byte
 11374                           
 11375                           ;lcd.c: 80:     send_byte(0b00101000);
 11376  00347A  0E28               	movlw	40
 11377  00347C  EC80  F01D         	call	_send_byte
 11378                           
 11379                           ;lcd.c: 81:     send_byte(0b00001000);
 11380  003480  0E08               	movlw	8
 11381  003482  EC80  F01D         	call	_send_byte
 11382                           
 11383                           ;lcd.c: 82:     send_byte(0b00000001);
 11384  003486  0E01               	movlw	1
 11385  003488  EC80  F01D         	call	_send_byte
 11386                           
 11387                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11388  00348C  0E11               	movlw	17
 11389  00348E  0100               	movlb	0	; () banked
 11390  003490  6F84               	movwf	??_initLCD& (0+255),b
 11391  003492  0E3A               	movlw	58
 11392  003494                     u9577:
 11393  003494  2EE8               	decfsz	wreg,f,c
 11394  003496  D7FE               	bra	u9577
 11395  003498  2F84               	decfsz	??_initLCD& (0+255),f,b
 11396  00349A  D7FC               	bra	u9577
 11397  00349C  F000               	nop	
 11398                           
 11399                           ;lcd.c: 84:     send_byte(0b00000110);
 11400  00349E  0E06               	movlw	6
 11401  0034A0  EC80  F01D         	call	_send_byte
 11402                           
 11403                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 11404  0034A4  0E0F               	movlw	15
 11405  0034A6  EC9E  F01D         	call	_lcdInst
 11406  0034AA  0012               	return		;funcret
 11407  0034AC                     __end_of_initLCD:
 11408                           	opt callstack 0
 11409                           
 11410 ;; *************** function _lcdInst *****************
 11411 ;; Defined at:
 11412 ;;		line 64 in file "lcd.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;  data            1    wreg     unsigned char 
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;  data            1    3[BANK0 ] unsigned char 
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  1    wreg      void 
 11419 ;; Registers used:
 11420 ;;		wreg, status,2, status,0, cstack
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11429 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11430 ;;Total ram usage:        1 bytes
 11431 ;; Hardware stack levels used:    1
 11432 ;; Hardware stack levels required when called:    6
 11433 ;; This function calls:
 11434 ;;		_send_byte
 11435 ;; This function is called by:
 11436 ;;		_actuators_main
 11437 ;;		_stepper2
 11438 ;;		_stepper2_back
 11439 ;;		_initLCD
 11440 ;;		_print_echo
 11441 ;;		_ultrasonic_main
 11442 ;;		_number_deploy
 11443 ;;		_UI_main
 11444 ;;		_brake
 11445 ;;		_main
 11446 ;;		_lcd_shift_cursor
 11447 ;;		_lcd_shift_display
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text42
 11452  003B3C                     __ptext42:
 11453                           	opt callstack 0
 11454  003B3C                     _lcdInst:
 11455                           	opt callstack 22
 11456                           
 11457                           ;incstack = 0
 11458                           ;lcdInst@data stored from wreg
 11459  003B3C  0100               	movlb	0	; () banked
 11460  003B3E  6F83               	movwf	lcdInst@data& (0+255),b
 11461                           
 11462                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 11463  003B40  948C               	bcf	3980,2,c	;volatile
 11464                           
 11465                           ;lcd.c: 66:     send_byte(data);
 11466  003B42  0100               	movlb	0	; () banked
 11467  003B44  5183               	movf	lcdInst@data& (0+255),w,b
 11468  003B46  EC80  F01D         	call	_send_byte
 11469  003B4A  0012               	return		;funcret
 11470  003B4C                     __end_of_lcdInst:
 11471                           	opt callstack 0
 11472                           
 11473 ;; *************** function _send_byte *****************
 11474 ;; Defined at:
 11475 ;;		line 55 in file "lcd.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  data            1    wreg     unsigned char 
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;  data            1    2[BANK0 ] unsigned char 
 11480 ;; Return value:  Size  Location     Type
 11481 ;;                  1    wreg      void 
 11482 ;; Registers used:
 11483 ;;		wreg, status,2, status,0, cstack
 11484 ;; Tracked objects:
 11485 ;;		On entry : 0/0
 11486 ;;		On exit  : 0/0
 11487 ;;		Unchanged: 0/0
 11488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11492 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11493 ;;Total ram usage:        1 bytes
 11494 ;; Hardware stack levels used:    1
 11495 ;; Hardware stack levels required when called:    5
 11496 ;; This function calls:
 11497 ;;		_send_nibble
 11498 ;; This function is called by:
 11499 ;;		_lcdInst
 11500 ;;		_initLCD
 11501 ;;		_putch
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text43
 11506  003B00                     __ptext43:
 11507                           	opt callstack 0
 11508  003B00                     _send_byte:
 11509                           	opt callstack 16
 11510                           
 11511                           ;incstack = 0
 11512                           ;send_byte@data stored from wreg
 11513  003B00  0100               	movlb	0	; () banked
 11514  003B02  6F82               	movwf	send_byte@data& (0+255),b
 11515                           
 11516                           ;lcd.c: 57:     send_nibble(data >> 4);
 11517  003B04  0100               	movlb	0	; () banked
 11518  003B06  3982               	swapf	send_byte@data& (0+255),w,b
 11519  003B08  0B0F               	andlw	15
 11520  003B0A  EC73  F01D         	call	_send_nibble
 11521                           
 11522                           ;lcd.c: 60:     send_nibble(data);
 11523  003B0E  0100               	movlb	0	; () banked
 11524  003B10  5182               	movf	send_byte@data& (0+255),w,b
 11525  003B12  EC73  F01D         	call	_send_nibble
 11526  003B16  0012               	return		;funcret
 11527  003B18                     __end_of_send_byte:
 11528                           	opt callstack 0
 11529                           
 11530 ;; *************** function _send_nibble *****************
 11531 ;; Defined at:
 11532 ;;		line 44 in file "lcd.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;  data            1    wreg     unsigned char 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  data            1    1[BANK0 ] unsigned char 
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  1    wreg      void 
 11539 ;; Registers used:
 11540 ;;		wreg, status,2, status,0, cstack
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11549 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11550 ;;Total ram usage:        1 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:    4
 11553 ;; This function calls:
 11554 ;;		_pulse_e
 11555 ;; This function is called by:
 11556 ;;		_send_byte
 11557 ;;		_initLCD
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           	psect	text44
 11562  003AE6                     __ptext44:
 11563                           	opt callstack 0
 11564  003AE6                     _send_nibble:
 11565                           	opt callstack 16
 11566                           
 11567                           ;incstack = 0
 11568                           ;send_nibble@data stored from wreg
 11569  003AE6  0100               	movlb	0	; () banked
 11570  003AE8  6F81               	movwf	send_nibble@data& (0+255),b
 11571                           
 11572                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 11573  003AEA  508C               	movf	3980,w,c	;volatile
 11574  003AEC  0B0F               	andlw	15
 11575  003AEE  6E8C               	movwf	3980,c	;volatile
 11576                           
 11577                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 11578  003AF0  0100               	movlb	0	; () banked
 11579  003AF2  3981               	swapf	send_nibble@data& (0+255),w,b
 11580  003AF4  0BF0               	andlw	240
 11581  003AF6  108C               	iorwf	3980,w,c	;volatile
 11582  003AF8  6E8C               	movwf	3980,c	;volatile
 11583                           
 11584                           ; BSR set to: 0
 11585                           ;lcd.c: 48:     pulse_e();
 11586  003AFA  ECF6  F01C         	call	_pulse_e	;wreg free
 11587  003AFE  0012               	return		;funcret
 11588  003B00                     __end_of_send_nibble:
 11589                           	opt callstack 0
 11590                           
 11591 ;; *************** function _pulse_e *****************
 11592 ;; Defined at:
 11593 ;;		line 28 in file "lcd.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;		None
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      void 
 11600 ;; Registers used:
 11601 ;;		wreg
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11611 ;;Total ram usage:        1 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:    3
 11614 ;; This function calls:
 11615 ;;		Nothing
 11616 ;; This function is called by:
 11617 ;;		_send_nibble
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text45
 11622  0039EC                     __ptext45:
 11623                           	opt callstack 0
 11624  0039EC                     _pulse_e:
 11625                           	opt callstack 16
 11626                           
 11627                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 11628                           
 11629                           ;incstack = 0
 11630  0039EC  0E00               	movlw	0
 11631  0039EE  BEF2               	btfsc	4082,7,c	;volatile
 11632  0039F0  0E01               	movlw	1
 11633  0039F2  0100               	movlb	0	; () banked
 11634  0039F4  6F80               	movwf	pulse_e@interruptState& (0+255),b
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 11638  0039F6  9EF2               	bcf	4082,7,c	;volatile
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 11642  0039F8  868C               	bsf	3980,3,c	;volatile
 11643                           
 11644                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 11645  0039FA  0E14               	movlw	20
 11646  0039FC                     u9587:
 11647  0039FC  2EE8               	decfsz	wreg,f,c
 11648  0039FE  D7FE               	bra	u9587
 11649  003A00  D000               	nop2	
 11650                           
 11651                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 11652  003A02  968C               	bcf	3980,3,c	;volatile
 11653                           
 11654                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 11655  003A04  0E53               	movlw	83
 11656  003A06                     u9597:
 11657  003A06  2EE8               	decfsz	wreg,f,c
 11658  003A08  D7FE               	bra	u9597
 11659  003A0A  F000               	nop	
 11660                           
 11661                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 11662  003A0C  0100               	movlb	0	; () banked
 11663  003A0E  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 11664  003A10  D002               	bra	u6415
 11665  003A12  9EF2               	bcf	4082,7,c	;volatile
 11666  003A14  D001               	bra	u6416
 11667  003A16                     u6415:
 11668  003A16  8EF2               	bsf	4082,7,c	;volatile
 11669  003A18                     u6416:
 11670  003A18  0012               	return		;funcret
 11671  003A1A                     __end_of_pulse_e:
 11672                           	opt callstack 0
 11673                           
 11674 ;; *************** function ___llmod *****************
 11675 ;; Defined at:
 11676 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  dividend        4    0[BANK0 ] unsigned long 
 11679 ;;  divisor         4    4[BANK0 ] unsigned long 
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;  counter         1    8[BANK0 ] unsigned char 
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  4    0[BANK0 ] unsigned long 
 11684 ;; Registers used:
 11685 ;;		wreg, status,2, status,0
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11691 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11694 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11695 ;;Total ram usage:        9 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; Hardware stack levels required when called:    3
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_UI_main
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text46
 11706  00351A                     __ptext46:
 11707                           	opt callstack 0
 11708  00351A                     ___llmod:
 11709                           	opt callstack 26
 11710                           
 11711                           ;incstack = 0
 11712  00351A  0100               	movlb	0	; () banked
 11713  00351C  5184               	movf	___llmod@divisor& (0+255),w,b
 11714  00351E  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11715  003520  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11716  003522  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11717  003524  B4D8               	btfsc	status,2,c
 11718  003526  D024               	goto	l1103
 11719                           
 11720                           ; BSR set to: 0
 11721  003528  0E01               	movlw	1
 11722  00352A  6F88               	movwf	___llmod@counter& (0+255),b
 11723  00352C  D006               	goto	l7380
 11724  00352E                     l7378:
 11725                           
 11726                           ; BSR set to: 0
 11727  00352E  90D8               	bcf	status,0,c
 11728  003530  3784               	rlcf	___llmod@divisor& (0+255),f,b
 11729  003532  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11730  003534  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11731  003536  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11732  003538  2B88               	incf	___llmod@counter& (0+255),f,b
 11733  00353A                     l7380:
 11734                           
 11735                           ; BSR set to: 0
 11736  00353A  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11737  00353C  D7F8               	goto	l7378
 11738  00353E                     u7950:
 11739                           
 11740                           ; BSR set to: 0
 11741  00353E  5184               	movf	___llmod@divisor& (0+255),w,b
 11742  003540  5D80               	subwf	___llmod@dividend& (0+255),w,b
 11743  003542  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11744  003544  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11745  003546  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11746  003548  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11747  00354A  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11748  00354C  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11749  00354E  A0D8               	btfss	status,0,c
 11750  003550  D008               	goto	l7386
 11751                           
 11752                           ; BSR set to: 0
 11753  003552  5184               	movf	___llmod@divisor& (0+255),w,b
 11754  003554  5F80               	subwf	___llmod@dividend& (0+255),f,b
 11755  003556  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11756  003558  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11757  00355A  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11758  00355C  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11759  00355E  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11760  003560  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11761  003562                     l7386:
 11762                           
 11763                           ; BSR set to: 0
 11764  003562  90D8               	bcf	status,0,c
 11765  003564  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11766  003566  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11767  003568  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11768  00356A  3384               	rrcf	___llmod@divisor& (0+255),f,b
 11769                           
 11770                           ; BSR set to: 0
 11771  00356C  2F88               	decfsz	___llmod@counter& (0+255),f,b
 11772  00356E  D7E7               	goto	u7950
 11773  003570                     l1103:
 11774                           
 11775                           ; BSR set to: 0
 11776  003570  C080  F080         	movff	___llmod@dividend,?___llmod
 11777  003574  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 11778  003578  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 11779  00357C  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 11780                           
 11781                           ; BSR set to: 0
 11782  003580  0012               	return		;funcret
 11783  003582                     __end_of___llmod:
 11784                           	opt callstack 0
 11785                           
 11786 ;; *************** function _I2C_Master_Write *****************
 11787 ;; Defined at:
 11788 ;;		line 70 in file "I2C.c"
 11789 ;; Parameters:    Size  Location     Type
 11790 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;		None
 11793 ;; Return value:  Size  Location     Type
 11794 ;;                  1    wreg      void 
 11795 ;; Registers used:
 11796 ;;		wreg, status,2, status,0, cstack
 11797 ;; Tracked objects:
 11798 ;;		On entry : 0/0
 11799 ;;		On exit  : 0/0
 11800 ;;		Unchanged: 0/0
 11801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11806 ;;Total ram usage:        2 bytes
 11807 ;; Hardware stack levels used:    1
 11808 ;; Hardware stack levels required when called:    4
 11809 ;; This function calls:
 11810 ;;		_I2C_Master_Wait
 11811 ;; This function is called by:
 11812 ;;		_UI_main
 11813 ;;		_brake
 11814 ;;		_start
 11815 ;;		_backwards
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           	psect	text47
 11820  003B4C                     __ptext47:
 11821                           	opt callstack 0
 11822  003B4C                     _I2C_Master_Write:
 11823                           	opt callstack 25
 11824                           
 11825                           ;I2C.c: 71:     I2C_Master_Wait();
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;incstack = 0
 11829  003B4C  EC8C  F01D         	call	_I2C_Master_Wait	;wreg free
 11830                           
 11831                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 11832  003B50  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 11833  003B54  0012               	return		;funcret
 11834  003B56                     __end_of_I2C_Master_Write:
 11835                           	opt callstack 0
 11836                           
 11837 ;; *************** function _I2C_Master_Stop *****************
 11838 ;; Defined at:
 11839 ;;		line 65 in file "I2C.c"
 11840 ;; Parameters:    Size  Location     Type
 11841 ;;		None
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;		None
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      void 
 11846 ;; Registers used:
 11847 ;;		wreg, status,2, status,0, cstack
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11857 ;;Total ram usage:        0 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; Hardware stack levels required when called:    4
 11860 ;; This function calls:
 11861 ;;		_I2C_Master_Wait
 11862 ;; This function is called by:
 11863 ;;		_UI_main
 11864 ;;		_brake
 11865 ;;		_start
 11866 ;;		_backwards
 11867 ;; This function uses a non-reentrant model
 11868 ;;
 11869                           
 11870                           	psect	text48
 11871  003B56                     __ptext48:
 11872                           	opt callstack 0
 11873  003B56                     _I2C_Master_Stop:
 11874                           	opt callstack 25
 11875                           
 11876                           ;I2C.c: 66:     I2C_Master_Wait();
 11877                           
 11878                           ;incstack = 0
 11879  003B56  EC8C  F01D         	call	_I2C_Master_Wait	;wreg free
 11880                           
 11881                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 11882  003B5A  84C5               	bsf	4037,2,c	;volatile
 11883  003B5C  0012               	return		;funcret
 11884  003B5E                     __end_of_I2C_Master_Stop:
 11885                           	opt callstack 0
 11886                           
 11887 ;; *************** function _I2C_Master_Start *****************
 11888 ;; Defined at:
 11889 ;;		line 55 in file "I2C.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;		None
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;		None
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  1    wreg      void 
 11896 ;; Registers used:
 11897 ;;		wreg, status,2, status,0, cstack
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11907 ;;Total ram usage:        0 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; Hardware stack levels required when called:    4
 11910 ;; This function calls:
 11911 ;;		_I2C_Master_Wait
 11912 ;; This function is called by:
 11913 ;;		_UI_main
 11914 ;;		_brake
 11915 ;;		_start
 11916 ;;		_backwards
 11917 ;; This function uses a non-reentrant model
 11918 ;;
 11919                           
 11920                           	psect	text49
 11921  003B5E                     __ptext49:
 11922                           	opt callstack 0
 11923  003B5E                     _I2C_Master_Start:
 11924                           	opt callstack 25
 11925                           
 11926                           ;I2C.c: 56:     I2C_Master_Wait();
 11927                           
 11928                           ;incstack = 0
 11929  003B5E  EC8C  F01D         	call	_I2C_Master_Wait	;wreg free
 11930                           
 11931                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 11932  003B62  80C5               	bsf	4037,0,c	;volatile
 11933  003B64  0012               	return		;funcret
 11934  003B66                     __end_of_I2C_Master_Start:
 11935                           	opt callstack 0
 11936                           
 11937 ;; *************** function _I2C_Master_Read *****************
 11938 ;; Defined at:
 11939 ;;		line 77 in file "I2C.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  ackBit          1    wreg     unsigned char 
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;  ackBit          1    1[BANK0 ] unsigned char 
 11944 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1    wreg      unsigned char 
 11947 ;; Registers used:
 11948 ;;		wreg, status,2, status,0, cstack
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11955 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;Total ram usage:        2 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; Hardware stack levels required when called:    4
 11961 ;; This function calls:
 11962 ;;		_I2C_Master_Wait
 11963 ;; This function is called by:
 11964 ;;		_UI_main
 11965 ;;		_brake
 11966 ;; This function uses a non-reentrant model
 11967 ;;
 11968                           
 11969                           	psect	text50
 11970  003A46                     __ptext50:
 11971                           	opt callstack 0
 11972  003A46                     _I2C_Master_Read:
 11973                           	opt callstack 25
 11974                           
 11975                           ;incstack = 0
 11976                           ;I2C_Master_Read@ackBit stored from wreg
 11977  003A46  0100               	movlb	0	; () banked
 11978  003A48  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 11979                           
 11980                           ;I2C.c: 78:     I2C_Master_Wait();
 11981  003A4A  EC8C  F01D         	call	_I2C_Master_Wait	;wreg free
 11982                           
 11983                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 11984  003A4E  86C5               	bsf	4037,3,c	;volatile
 11985                           
 11986                           ;I2C.c: 81:     I2C_Master_Wait();
 11987  003A50  EC8C  F01D         	call	_I2C_Master_Wait	;wreg free
 11988                           
 11989                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 11990  003A54  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 11991                           
 11992                           ;I2C.c: 86:     I2C_Master_Wait();
 11993  003A58  EC8C  F01D         	call	_I2C_Master_Wait	;wreg free
 11994                           
 11995                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 11996  003A5C  0100               	movlb	0	; () banked
 11997  003A5E  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 11998  003A60  D002               	bra	u7495
 11999  003A62  9AC5               	bcf	4037,5,c	;volatile
 12000  003A64  D001               	bra	u7496
 12001  003A66                     u7495:
 12002  003A66  8AC5               	bsf	4037,5,c	;volatile
 12003  003A68                     u7496:
 12004                           
 12005                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 12006  003A68  88C5               	bsf	4037,4,c	;volatile
 12007                           
 12008                           ;I2C.c: 90:     return receivedByte;
 12009  003A6A  0100               	movlb	0	; () banked
 12010  003A6C  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 12011                           
 12012                           ; BSR set to: 0
 12013  003A6E  0012               	return		;funcret
 12014  003A70                     __end_of_I2C_Master_Read:
 12015                           	opt callstack 0
 12016                           
 12017 ;; *************** function _I2C_Master_Wait *****************
 12018 ;; Defined at:
 12019 ;;		line 21 in file "I2C.c"
 12020 ;; Parameters:    Size  Location     Type
 12021 ;;		None
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;		None
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  1    wreg      void 
 12026 ;; Registers used:
 12027 ;;		wreg, status,2, status,0
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12035 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;Total ram usage:        1 bytes
 12038 ;; Hardware stack levels used:    1
 12039 ;; Hardware stack levels required when called:    3
 12040 ;; This function calls:
 12041 ;;		Nothing
 12042 ;; This function is called by:
 12043 ;;		_I2C_Master_Start
 12044 ;;		_I2C_Master_Stop
 12045 ;;		_I2C_Master_Write
 12046 ;;		_I2C_Master_Read
 12047 ;;		_I2C_Master_RepeatedStart
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text51
 12052  003B18                     __ptext51:
 12053                           	opt callstack 0
 12054  003B18                     _I2C_Master_Wait:
 12055                           	opt callstack 25
 12056                           
 12057                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12058                           
 12059                           ;I2C.c: 28:     }
 12060                           
 12061                           ; BSR set to: 0
 12062                           ;incstack = 0
 12063  003B18  B4C7               	btfsc	4039,2,c	;volatile
 12064  003B1A  D7FE               	goto	_I2C_Master_Wait
 12065  003B1C  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12066  003B20  0E1F               	movlw	31
 12067  003B22  0100               	movlb	0	; () banked
 12068  003B24  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12069  003B26  B4D8               	btfsc	status,2,c
 12070  003B28  0012               	return	
 12071  003B2A  D7F6               	goto	_I2C_Master_Wait
 12072  003B2C                     __end_of_I2C_Master_Wait:
 12073                           	opt callstack 0
 12074                           
 12075 ;; *************** function _I2C_Master_Init *****************
 12076 ;; Defined at:
 12077 ;;		line 32 in file "I2C.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;		None
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  1    wreg      void 
 12084 ;; Registers used:
 12085 ;;		wreg, status,2, status,0, cstack
 12086 ;; Tracked objects:
 12087 ;;		On entry : 0/0
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12093 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12094 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12095 ;;Total ram usage:        8 bytes
 12096 ;; Hardware stack levels used:    1
 12097 ;; Hardware stack levels required when called:    4
 12098 ;; This function calls:
 12099 ;;		___lldiv
 12100 ;; This function is called by:
 12101 ;;		_UI_main
 12102 ;;		_start
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           	psect	text52
 12107  003582                     __ptext52:
 12108                           	opt callstack 0
 12109  003582                     _I2C_Master_Init:
 12110                           	opt callstack 25
 12111                           
 12112                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12113                           
 12114                           ; BSR set to: 0
 12115                           ;incstack = 0
 12116  003582  9AC6               	bcf	4038,5,c	;volatile
 12117                           
 12118                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12119  003584  8694               	bsf	3988,3,c	;volatile
 12120                           
 12121                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12122  003586  8894               	bsf	3988,4,c	;volatile
 12123                           
 12124                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12125  003588  0E80               	movlw	128
 12126  00358A  0100               	movlb	0	; () banked
 12127  00358C  6F80               	movwf	___lldiv@dividend& (0+255),b
 12128  00358E  0E96               	movlw	150
 12129  003590  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12130  003592  0E98               	movlw	152
 12131  003594  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12132  003596  0E00               	movlw	0
 12133  003598  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12134  00359A  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12135  00359E  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12136  0035A2  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12137  0035A6  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12138  0035AA  0E02               	movlw	2
 12139  0035AC                     u7485:
 12140  0035AC  90D8               	bcf	status,0,c
 12141  0035AE  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12142  0035B0  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12143  0035B2  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12144  0035B4  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12145  0035B6  2EE8               	decfsz	wreg,f,c
 12146  0035B8  D7F9               	goto	u7485
 12147  0035BA  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12148  0035BE  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12149  0035C2  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12150  0035C6  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12151  0035CA  EC9A  F019         	call	___lldiv	;wreg free
 12152  0035CE  0100               	movlb	0	; () banked
 12153  0035D0  0580               	decf	?___lldiv& (0+255),w,b
 12154  0035D2  6EC8               	movwf	4040,c	;volatile
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12158  0035D4  0E80               	movlw	128
 12159  0035D6  6EC7               	movwf	4039,c	;volatile
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12163  0035D8  0E28               	movlw	40
 12164  0035DA  6EC6               	movwf	4038,c	;volatile
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12168  0035DC  0E00               	movlw	0
 12169  0035DE  6EC5               	movwf	4037,c	;volatile
 12170                           
 12171                           ; BSR set to: 0
 12172  0035E0  0012               	return		;funcret
 12173  0035E2                     __end_of_I2C_Master_Init:
 12174                           	opt callstack 0
 12175                           
 12176 ;; *************** function ___lldiv *****************
 12177 ;; Defined at:
 12178 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;  dividend        4    0[BANK0 ] unsigned long 
 12181 ;;  divisor         4    4[BANK0 ] unsigned long 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;  quotient        4    8[BANK0 ] unsigned long 
 12184 ;;  counter         1   12[BANK0 ] unsigned char 
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  4    0[BANK0 ] unsigned long 
 12187 ;; Registers used:
 12188 ;;		wreg, status,2, status,0
 12189 ;; Tracked objects:
 12190 ;;		On entry : 0/0
 12191 ;;		On exit  : 0/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12194 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12197 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12198 ;;Total ram usage:       13 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; Hardware stack levels required when called:    3
 12201 ;; This function calls:
 12202 ;;		Nothing
 12203 ;; This function is called by:
 12204 ;;		_I2C_Master_Init
 12205 ;; This function uses a non-reentrant model
 12206 ;;
 12207                           
 12208                           	psect	text53
 12209  003334                     __ptext53:
 12210                           	opt callstack 0
 12211  003334                     ___lldiv:
 12212                           	opt callstack 25
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;incstack = 0
 12216  003334  0E00               	movlw	0
 12217  003336  0100               	movlb	0	; () banked
 12218  003338  6F88               	movwf	___lldiv@quotient& (0+255),b
 12219  00333A  0E00               	movlw	0
 12220  00333C  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12221  00333E  0E00               	movlw	0
 12222  003340  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12223  003342  0E00               	movlw	0
 12224  003344  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12225                           
 12226                           ; BSR set to: 0
 12227  003346  5184               	movf	___lldiv@divisor& (0+255),w,b
 12228  003348  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12229  00334A  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12230  00334C  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12231  00334E  B4D8               	btfsc	status,2,c
 12232  003350  D02A               	goto	l710
 12233                           
 12234                           ; BSR set to: 0
 12235  003352  0E01               	movlw	1
 12236  003354  6F8C               	movwf	___lldiv@counter& (0+255),b
 12237  003356  D006               	goto	l7006
 12238  003358                     l7004:
 12239                           
 12240                           ; BSR set to: 0
 12241  003358  90D8               	bcf	status,0,c
 12242  00335A  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12243  00335C  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12244  00335E  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12245  003360  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12246  003362  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12247  003364                     l7006:
 12248                           
 12249                           ; BSR set to: 0
 12250  003364  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12251  003366  D7F8               	goto	l7004
 12252  003368                     u7460:
 12253                           
 12254                           ; BSR set to: 0
 12255  003368  90D8               	bcf	status,0,c
 12256  00336A  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12257  00336C  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12258  00336E  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12259  003370  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12260                           
 12261                           ; BSR set to: 0
 12262  003372  5184               	movf	___lldiv@divisor& (0+255),w,b
 12263  003374  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12264  003376  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12265  003378  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12266  00337A  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12267  00337C  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12268  00337E  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12269  003380  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12270  003382  A0D8               	btfss	status,0,c
 12271  003384  D009               	goto	l7016
 12272                           
 12273                           ; BSR set to: 0
 12274  003386  5184               	movf	___lldiv@divisor& (0+255),w,b
 12275  003388  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12276  00338A  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12277  00338C  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12278  00338E  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12279  003390  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12280  003392  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12281  003394  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12282                           
 12283                           ; BSR set to: 0
 12284  003396  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12285  003398                     l7016:
 12286                           
 12287                           ; BSR set to: 0
 12288  003398  90D8               	bcf	status,0,c
 12289  00339A  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12290  00339C  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12291  00339E  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12292  0033A0  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12293                           
 12294                           ; BSR set to: 0
 12295  0033A2  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12296  0033A4  D7E1               	goto	u7460
 12297  0033A6                     l710:
 12298                           
 12299                           ; BSR set to: 0
 12300  0033A6  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12301  0033AA  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12302  0033AE  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12303  0033B2  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12304                           
 12305                           ; BSR set to: 0
 12306  0033B6  0012               	return		;funcret
 12307  0033B8                     __end_of___lldiv:
 12308                           	opt callstack 0
 12309                           
 12310 ;; *************** function _ISR *****************
 12311 ;; Defined at:
 12312 ;;		line 71 in file "main.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;		None
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  1    wreg      void 
 12319 ;; Registers used:
 12320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/0
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12330 ;;Total ram usage:        2 bytes
 12331 ;; Hardware stack levels used:    1
 12332 ;; Hardware stack levels required when called:    2
 12333 ;; This function calls:
 12334 ;;		_echo
 12335 ;; This function is called by:
 12336 ;;		Interrupt level 2
 12337 ;; This function uses a non-reentrant model
 12338 ;;
 12339                           
 12340                           	psect	intcode
 12341  000008                     __pintcode:
 12342                           	opt callstack 0
 12343  000008                     _ISR:
 12344                           	opt callstack 14
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;incstack = 0
 12348  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12349  00000A  ED09  F01C         	call	int_func,f	;refresh shadow registers
 12350                           
 12351                           	psect	intcode_body
 12352  003812                     __pintcode_body:
 12353                           	opt callstack 14
 12354  003812                     int_func:
 12355                           	opt callstack 14
 12356  003812  0006               	pop		; remove dummy address from shadow register refresh
 12357  003814  CFD9 F036          	movff	fsr2l,??_ISR
 12358  003818  CFDA F037          	movff	fsr2h,??_ISR+1
 12359                           
 12360                           ;main.c: 72:  if(RBIF == 1){
 12361  00381C  A0F2               	btfss	4082,0,c	;volatile
 12362  00381E  D012               	goto	i2l365
 12363                           
 12364                           ;main.c: 73:         if (sens){
 12365  003820  5058               	movf	_sens,w,c	;volatile
 12366  003822  1059               	iorwf	_sens+1,w,c	;volatile
 12367  003824  B4D8               	btfsc	status,2,c
 12368  003826  D005               	goto	i2l5968
 12369                           
 12370                           ;main.c: 74:             RBIE = 0;
 12371  003828  96F2               	bcf	4082,3,c	;volatile
 12372                           
 12373                           ;main.c: 75:             echo();
 12374  00382A  EC13  F004         	call	_echo	;wreg free
 12375                           
 12376                           ;main.c: 76:             RBIF = 0;
 12377  00382E  90F2               	bcf	4082,0,c	;volatile
 12378                           
 12379                           ;main.c: 77:             RBIE = 1;
 12380  003830  86F2               	bsf	4082,3,c	;volatile
 12381  003832                     i2l5968:
 12382                           
 12383                           ;main.c: 79:         if (~sens){
 12384  003832  2858               	incf	_sens,w,c	;volatile
 12385  003834  E103               	bnz	i2u615_40
 12386  003836  2859               	incf	_sens+1,w,c	;volatile
 12387  003838  B4D8               	btfsc	status,2,c
 12388  00383A  D004               	goto	i2l365
 12389  00383C                     i2u615_40:
 12390                           
 12391                           ;main.c: 80:             key_was_pressed = 1;
 12392  00383C  0E01               	movlw	1
 12393  00383E  0101               	movlb	1	; () banked
 12394  003840  6F77               	movwf	_key_was_pressed& (0+255),b	;volatile
 12395                           
 12396                           ; BSR set to: 1
 12397                           ;main.c: 81:             INT1IF = 0;
 12398  003842  90F0               	bcf	4080,0,c	;volatile
 12399  003844                     i2l365:
 12400  003844  C037  FFDA         	movff	??_ISR+1,fsr2h
 12401  003848  C036  FFD9         	movff	??_ISR,fsr2l
 12402  00384C  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12403  00384E  0011               	retfie		f
 12404  003850                     __end_of_ISR:
 12405                           	opt callstack 0
 12406                           
 12407 ;; *************** function _echo *****************
 12408 ;; Defined at:
 12409 ;;		line 99 in file "main.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;		None
 12412 ;; Auto vars:     Size  Location     Type
 12413 ;;		None
 12414 ;; Return value:  Size  Location     Type
 12415 ;;                  1    wreg      void 
 12416 ;; Registers used:
 12417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12418 ;; Tracked objects:
 12419 ;;		On entry : 0/0
 12420 ;;		On exit  : 0/0
 12421 ;;		Unchanged: 0/0
 12422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12425 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12426 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12427 ;;Total ram usage:        4 bytes
 12428 ;; Hardware stack levels used:    1
 12429 ;; Hardware stack levels required when called:    1
 12430 ;; This function calls:
 12431 ;;		___fldiv
 12432 ;;		___fltol
 12433 ;;		___xxtofl
 12434 ;;		i2___awdiv
 12435 ;; This function is called by:
 12436 ;;		_ISR
 12437 ;; This function uses a non-reentrant model
 12438 ;;
 12439                           
 12440                           	psect	text55
 12441  000826                     __ptext55:
 12442                           	opt callstack 0
 12443  000826                     _echo:
 12444                           	opt callstack 14
 12445                           
 12446                           ;main.c: 100:     if (b==1){
 12447                           
 12448                           ;incstack = 0
 12449  000826  045A               	decf	_b,w,c
 12450  000828  105B               	iorwf	_b+1,w,c
 12451  00082A  A4D8               	btfss	status,2,c
 12452  00082C  D0A2               	goto	i2l5402
 12453                           
 12454                           ;main.c: 101:         if (RB7 == 1){
 12455  00082E  BE81               	btfsc	3969,7,c	;volatile
 12456                           
 12457                           ;main.c: 102:             TMR1ON = 1;
 12458  000830  80CD               	bsf	4045,0,c	;volatile
 12459                           
 12460                           ;main.c: 104:         if (RB7 == 0){
 12461                           
 12462                           ;main.c: 103:         }
 12463  000832  BE81               	btfsc	3969,7,c	;volatile
 12464  000834  D037               	goto	i2l5378
 12465                           
 12466                           ;main.c: 105:             TMR1ON = 0;
 12467  000836  90CD               	bcf	4045,0,c	;volatile
 12468                           
 12469                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 12470  000838  0EAE               	movlw	174
 12471  00083A  6E13               	movwf	___fldiv@a,c
 12472  00083C  0E47               	movlw	71
 12473  00083E  6E14               	movwf	___fldiv@a+1,c
 12474  000840  0E6B               	movlw	107
 12475  000842  6E15               	movwf	___fldiv@a+2,c
 12476  000844  0E42               	movlw	66
 12477  000846  6E16               	movwf	___fldiv@a+3,c
 12478  000848  50CF               	movf	4047,w,c	;volatile
 12479  00084A  6E33               	movwf	(??_echo+1)& (0+255),c
 12480  00084C  6A32               	clrf	??_echo& (0+255),c
 12481  00084E  50CE               	movf	4046,w,c	;volatile
 12482  000850  6E34               	movwf	(??_echo+2)& (0+255),c
 12483  000852  6A35               	clrf	(??_echo+3)& (0+255),c
 12484  000854  5032               	movf	??_echo,w,c
 12485  000856  1234               	iorwf	??_echo+2,f,c
 12486  000858  5033               	movf	??_echo+1,w,c
 12487  00085A  1235               	iorwf	??_echo+3,f,c
 12488  00085C  C034  F001         	movff	??_echo+2,___xxtofl@val
 12489  000860  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12490  000864  0E00               	movlw	0
 12491  000866  BE02               	btfsc	___xxtofl@val+1,7,c
 12492  000868  0EFF               	movlw	-1
 12493  00086A  6E03               	movwf	___xxtofl@val+2,c
 12494  00086C  6E04               	movwf	___xxtofl@val+3,c
 12495  00086E  0E01               	movlw	1
 12496  000870  EC58  F014         	call	___xxtofl
 12497  000874  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12498  000878  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12499  00087C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12500  000880  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12501  000884  ECB0  F00C         	call	___fldiv	;wreg free
 12502  000888  C00F  F028         	movff	?___fldiv,___fltol@f1
 12503  00088C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12504  000890  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12505  000894  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12506  000898  EC18  F018         	call	___fltol	;wreg free
 12507  00089C  C028  F061         	movff	?___fltol,_a
 12508  0008A0  C029  F062         	movff	?___fltol+1,_a+1
 12509  0008A4                     i2l5378:
 12510                           
 12511                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 12512  0008A4  BE62               	btfsc	_a+1,7,c
 12513  0008A6  D065               	goto	i2l5402
 12514  0008A8  5062               	movf	_a+1,w,c
 12515  0008AA  E104               	bnz	i2u528_40
 12516  0008AC  0E02               	movlw	2
 12517  0008AE  5C61               	subwf	_a,w,c
 12518  0008B0  A0D8               	btfss	status,0,c
 12519  0008B2  D05F               	goto	i2l5402
 12520  0008B4                     i2u528_40:
 12521  0008B4  BE62               	btfsc	_a+1,7,c
 12522  0008B6  D006               	goto	i2u529_40
 12523  0008B8  5062               	movf	_a+1,w,c
 12524  0008BA  E15B               	bnz	i2l5402
 12525  0008BC  0EC9               	movlw	201
 12526  0008BE  5C61               	subwf	_a,w,c
 12527  0008C0  B0D8               	btfsc	status,0,c
 12528  0008C2  D057               	goto	i2l5402
 12529  0008C4                     i2u529_40:
 12530                           
 12531                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 12532  0008C4  0440               	decf	_sumf,w,c
 12533  0008C6  B4D8               	btfsc	status,2,c
 12534  0008C8  D01B               	goto	i2l5394
 12535  0008CA  0102               	movlb	2	; () banked
 12536  0008CC  5150               	movf	_dist_final& (0+255),w,b
 12537  0008CE  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 12538  0008D0  B4D8               	btfsc	status,2,c
 12539  0008D2  D016               	goto	i2l5394
 12540                           
 12541                           ; BSR set to: 2
 12542  0008D4  5152               	movf	(_dist_final+2)& (0+255),w,b
 12543  0008D6  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 12544  0008D8  B4D8               	btfsc	status,2,c
 12545  0008DA  D012               	goto	i2l5394
 12546                           
 12547                           ; BSR set to: 2
 12548  0008DC  5154               	movf	(_dist_final+4)& (0+255),w,b
 12549  0008DE  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 12550  0008E0  B4D8               	btfsc	status,2,c
 12551  0008E2  D00E               	goto	i2l5394
 12552                           
 12553                           ; BSR set to: 2
 12554                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 12555  0008E4  5154               	movf	(_dist_final+4)& (0+255),w,b
 12556  0008E6  2552               	addwf	(_dist_final+2)& (0+255),w,b
 12557  0008E8  6E32               	movwf	??_echo& (0+255),c
 12558  0008EA  5155               	movf	(_dist_final+5)& (0+255),w,b
 12559  0008EC  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 12560  0008EE  6E33               	movwf	(??_echo+1)& (0+255),c
 12561  0008F0  5150               	movf	_dist_final& (0+255),w,b
 12562  0008F2  2432               	addwf	??_echo,w,c
 12563  0008F4  6E38               	movwf	_sum,c
 12564  0008F6  5151               	movf	(_dist_final+1)& (0+255),w,b
 12565  0008F8  2033               	addwfc	??_echo+1,w,c
 12566  0008FA  6E39               	movwf	_sum+1,c
 12567                           
 12568                           ; BSR set to: 2
 12569                           ;main.c: 113:                 sumf[0] = 1;
 12570  0008FC  0E01               	movlw	1
 12571  0008FE  6E40               	movwf	_sumf,c
 12572  000900                     i2l5394:
 12573                           
 12574                           ;main.c: 115:             if (sumf[0]){
 12575  000900  5040               	movf	_sumf,w,c
 12576  000902  B4D8               	btfsc	status,2,c
 12577  000904  D029               	goto	i2l5400
 12578                           
 12579                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 12580  000906  90D8               	bcf	status,0,c
 12581  000908  3450               	rlcf	_meas,w,c	;volatile
 12582  00090A  6ED9               	movwf	fsr2l,c
 12583  00090C  3451               	rlcf	_meas+1,w,c	;volatile
 12584  00090E  6EDA               	movwf	fsr2h,c
 12585  000910  0E50               	movlw	low _dist_final
 12586  000912  26D9               	addwf	fsr2l,f,c
 12587  000914  0E02               	movlw	high _dist_final
 12588  000916  22DA               	addwfc	fsr2h,f,c
 12589  000918  CFDE F032          	movff	postinc2,??_echo
 12590  00091C  CFDD F033          	movff	postdec2,??_echo+1
 12591  000920  C038  F034         	movff	_sum,??_echo+2
 12592  000924  C039  F035         	movff	_sum+1,??_echo+3
 12593  000928  5032               	movf	??_echo,w,c
 12594  00092A  5E34               	subwf	??_echo+2,f,c
 12595  00092C  5033               	movf	??_echo+1,w,c
 12596  00092E  5A35               	subwfb	??_echo+3,f,c
 12597  000930  5061               	movf	_a,w,c
 12598  000932  2434               	addwf	??_echo+2,w,c
 12599  000934  6E38               	movwf	_sum,c
 12600  000936  5062               	movf	_a+1,w,c
 12601  000938  2035               	addwfc	??_echo+3,w,c
 12602  00093A  6E39               	movwf	_sum+1,c
 12603                           
 12604                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 12605  00093C  C038  F001         	movff	_sum,i2___awdiv@dividend
 12606  000940  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 12607  000944  0E00               	movlw	0
 12608  000946  6E04               	movwf	i2___awdiv@divisor+1,c
 12609  000948  0E05               	movlw	5
 12610  00094A  6E03               	movwf	i2___awdiv@divisor,c
 12611  00094C  ECDC  F019         	call	i2___awdiv	;wreg free
 12612  000950  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 12613  000954  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 12614  000958                     i2l5400:
 12615                           
 12616                           ;main.c: 119:             dist_final[0][meas] = a[0];
 12617  000958  90D8               	bcf	status,0,c
 12618  00095A  3450               	rlcf	_meas,w,c	;volatile
 12619  00095C  6ED9               	movwf	fsr2l,c
 12620  00095E  3451               	rlcf	_meas+1,w,c	;volatile
 12621  000960  6EDA               	movwf	fsr2h,c
 12622  000962  0E50               	movlw	low _dist_final
 12623  000964  26D9               	addwf	fsr2l,f,c
 12624  000966  0E02               	movlw	high _dist_final
 12625  000968  22DA               	addwfc	fsr2h,f,c
 12626  00096A  C061  FFDE         	movff	_a,postinc2
 12627  00096E  C062  FFDD         	movff	_a+1,postdec2
 12628  000972                     i2l5402:
 12629                           
 12630                           ;main.c: 122:     if (b==2){
 12631  000972  0E02               	movlw	2
 12632  000974  185A               	xorwf	_b,w,c
 12633  000976  105B               	iorwf	_b+1,w,c
 12634  000978  A4D8               	btfss	status,2,c
 12635  00097A  D0A4               	goto	i2l5436
 12636                           
 12637                           ;main.c: 123:         if (RB6 == 1){
 12638  00097C  BC81               	btfsc	3969,6,c	;volatile
 12639                           
 12640                           ;main.c: 124:             TMR1ON = 1;
 12641  00097E  80CD               	bsf	4045,0,c	;volatile
 12642                           
 12643                           ;main.c: 126:         if (RB6 == 0){
 12644                           
 12645                           ;main.c: 125:         }
 12646  000980  BC81               	btfsc	3969,6,c	;volatile
 12647  000982  D037               	goto	i2l5412
 12648                           
 12649                           ;main.c: 127:             TMR1ON = 0;
 12650  000984  90CD               	bcf	4045,0,c	;volatile
 12651                           
 12652                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 12653  000986  0EAE               	movlw	174
 12654  000988  6E13               	movwf	___fldiv@a,c
 12655  00098A  0E47               	movlw	71
 12656  00098C  6E14               	movwf	___fldiv@a+1,c
 12657  00098E  0E6B               	movlw	107
 12658  000990  6E15               	movwf	___fldiv@a+2,c
 12659  000992  0E42               	movlw	66
 12660  000994  6E16               	movwf	___fldiv@a+3,c
 12661  000996  50CF               	movf	4047,w,c	;volatile
 12662  000998  6E33               	movwf	(??_echo+1)& (0+255),c
 12663  00099A  6A32               	clrf	??_echo& (0+255),c
 12664  00099C  50CE               	movf	4046,w,c	;volatile
 12665  00099E  6E34               	movwf	(??_echo+2)& (0+255),c
 12666  0009A0  6A35               	clrf	(??_echo+3)& (0+255),c
 12667  0009A2  5032               	movf	??_echo,w,c
 12668  0009A4  1234               	iorwf	??_echo+2,f,c
 12669  0009A6  5033               	movf	??_echo+1,w,c
 12670  0009A8  1235               	iorwf	??_echo+3,f,c
 12671  0009AA  C034  F001         	movff	??_echo+2,___xxtofl@val
 12672  0009AE  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12673  0009B2  0E00               	movlw	0
 12674  0009B4  BE02               	btfsc	___xxtofl@val+1,7,c
 12675  0009B6  0EFF               	movlw	-1
 12676  0009B8  6E03               	movwf	___xxtofl@val+2,c
 12677  0009BA  6E04               	movwf	___xxtofl@val+3,c
 12678  0009BC  0E01               	movlw	1
 12679  0009BE  EC58  F014         	call	___xxtofl
 12680  0009C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12681  0009C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12682  0009CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12683  0009CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12684  0009D2  ECB0  F00C         	call	___fldiv	;wreg free
 12685  0009D6  C00F  F028         	movff	?___fldiv,___fltol@f1
 12686  0009DA  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12687  0009DE  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12688  0009E2  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12689  0009E6  EC18  F018         	call	___fltol	;wreg free
 12690  0009EA  C028  F063         	movff	?___fltol,_a+2
 12691  0009EE  C029  F064         	movff	?___fltol+1,_a+3
 12692  0009F2                     i2l5412:
 12693                           
 12694                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 12695  0009F2  BE64               	btfsc	_a+3,7,c
 12696  0009F4  D067               	goto	i2l5436
 12697  0009F6  5064               	movf	_a+3,w,c
 12698  0009F8  E104               	bnz	i2u538_40
 12699  0009FA  0E02               	movlw	2
 12700  0009FC  5C63               	subwf	_a+2,w,c
 12701  0009FE  A0D8               	btfss	status,0,c
 12702  000A00  D061               	goto	i2l5436
 12703  000A02                     i2u538_40:
 12704  000A02  BE64               	btfsc	_a+3,7,c
 12705  000A04  D006               	goto	i2u539_40
 12706  000A06  5064               	movf	_a+3,w,c
 12707  000A08  E15D               	bnz	i2l5436
 12708  000A0A  0EC9               	movlw	201
 12709  000A0C  5C63               	subwf	_a+2,w,c
 12710  000A0E  B0D8               	btfsc	status,0,c
 12711  000A10  D059               	goto	i2l5436
 12712  000A12                     i2u539_40:
 12713                           
 12714                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 12715  000A12  0441               	decf	_sumf+1,w,c
 12716  000A14  B4D8               	btfsc	status,2,c
 12717  000A16  D01B               	goto	i2l5428
 12718  000A18  0102               	movlb	2	; () banked
 12719  000A1A  515C               	movf	(_dist_final+12)& (0+255),w,b
 12720  000A1C  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 12721  000A1E  B4D8               	btfsc	status,2,c
 12722  000A20  D016               	goto	i2l5428
 12723                           
 12724                           ; BSR set to: 2
 12725  000A22  515E               	movf	(_dist_final+14)& (0+255),w,b
 12726  000A24  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 12727  000A26  B4D8               	btfsc	status,2,c
 12728  000A28  D012               	goto	i2l5428
 12729                           
 12730                           ; BSR set to: 2
 12731  000A2A  5160               	movf	(_dist_final+16)& (0+255),w,b
 12732  000A2C  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 12733  000A2E  B4D8               	btfsc	status,2,c
 12734  000A30  D00E               	goto	i2l5428
 12735                           
 12736                           ; BSR set to: 2
 12737                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 12738  000A32  515E               	movf	(_dist_final+14)& (0+255),w,b
 12739  000A34  255C               	addwf	(_dist_final+12)& (0+255),w,b
 12740  000A36  6E32               	movwf	??_echo& (0+255),c
 12741  000A38  515F               	movf	(_dist_final+15)& (0+255),w,b
 12742  000A3A  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 12743  000A3C  6E33               	movwf	(??_echo+1)& (0+255),c
 12744  000A3E  5160               	movf	(_dist_final+16)& (0+255),w,b
 12745  000A40  2432               	addwf	??_echo,w,c
 12746  000A42  6E3A               	movwf	_sum+2,c
 12747  000A44  5161               	movf	(_dist_final+17)& (0+255),w,b
 12748  000A46  2033               	addwfc	??_echo+1,w,c
 12749  000A48  6E3B               	movwf	_sum+3,c
 12750                           
 12751                           ; BSR set to: 2
 12752                           ;main.c: 135:             sumf[1] = 1;
 12753  000A4A  0E01               	movlw	1
 12754  000A4C  6E41               	movwf	_sumf+1,c
 12755  000A4E                     i2l5428:
 12756                           
 12757                           ;main.c: 137:         if (sumf[1]){
 12758  000A4E  5041               	movf	_sumf+1,w,c
 12759  000A50  B4D8               	btfsc	status,2,c
 12760  000A52  D02B               	goto	i2l5434
 12761                           
 12762                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 12763  000A54  90D8               	bcf	status,0,c
 12764  000A56  3450               	rlcf	_meas,w,c	;volatile
 12765  000A58  6ED9               	movwf	fsr2l,c
 12766  000A5A  3451               	rlcf	_meas+1,w,c	;volatile
 12767  000A5C  6EDA               	movwf	fsr2h,c
 12768  000A5E  0E5C               	movlw	low (_dist_final+12)
 12769  000A60  26D9               	addwf	fsr2l,f,c
 12770  000A62  0E02               	movlw	high (_dist_final+12)
 12771  000A64  22DA               	addwfc	fsr2h,f,c
 12772  000A66  CFDE F032          	movff	postinc2,??_echo
 12773  000A6A  CFDD F033          	movff	postdec2,??_echo+1
 12774  000A6E  EE20  F03A         	lfsr	2,_sum+2
 12775  000A72  CFDE F034          	movff	postinc2,??_echo+2
 12776  000A76  CFDD F035          	movff	postdec2,??_echo+3
 12777  000A7A  5032               	movf	??_echo,w,c
 12778  000A7C  5E34               	subwf	??_echo+2,f,c
 12779  000A7E  5033               	movf	??_echo+1,w,c
 12780  000A80  5A35               	subwfb	??_echo+3,f,c
 12781  000A82  5063               	movf	_a+2,w,c
 12782  000A84  2434               	addwf	??_echo+2,w,c
 12783  000A86  6E3A               	movwf	_sum+2,c
 12784  000A88  5064               	movf	_a+3,w,c
 12785  000A8A  2035               	addwfc	??_echo+3,w,c
 12786  000A8C  6E3B               	movwf	_sum+3,c
 12787                           
 12788                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 12789  000A8E  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 12790  000A92  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 12791  000A96  0E00               	movlw	0
 12792  000A98  6E04               	movwf	i2___awdiv@divisor+1,c
 12793  000A9A  0E05               	movlw	5
 12794  000A9C  6E03               	movwf	i2___awdiv@divisor,c
 12795  000A9E  ECDC  F019         	call	i2___awdiv	;wreg free
 12796  000AA2  C001  F266         	movff	?i2___awdiv,_dist_final+22
 12797  000AA6  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 12798  000AAA                     i2l5434:
 12799                           
 12800                           ;main.c: 141:         dist_final[1][meas] = a[1];
 12801  000AAA  90D8               	bcf	status,0,c
 12802  000AAC  3450               	rlcf	_meas,w,c	;volatile
 12803  000AAE  6ED9               	movwf	fsr2l,c
 12804  000AB0  3451               	rlcf	_meas+1,w,c	;volatile
 12805  000AB2  6EDA               	movwf	fsr2h,c
 12806  000AB4  0E5C               	movlw	low (_dist_final+12)
 12807  000AB6  26D9               	addwf	fsr2l,f,c
 12808  000AB8  0E02               	movlw	high (_dist_final+12)
 12809  000ABA  22DA               	addwfc	fsr2h,f,c
 12810  000ABC  C063  FFDE         	movff	_a+2,postinc2
 12811  000AC0  C064  FFDD         	movff	_a+3,postdec2
 12812  000AC4                     i2l5436:
 12813                           
 12814                           ;main.c: 144:     if (b==3){
 12815  000AC4  0E03               	movlw	3
 12816  000AC6  185A               	xorwf	_b,w,c
 12817  000AC8  105B               	iorwf	_b+1,w,c
 12818  000ACA  A4D8               	btfss	status,2,c
 12819  000ACC  D0A4               	goto	i2l5470
 12820                           
 12821                           ;main.c: 145:         if (RB5 == 1){
 12822  000ACE  BA81               	btfsc	3969,5,c	;volatile
 12823                           
 12824                           ;main.c: 146:             TMR1ON = 1;
 12825  000AD0  80CD               	bsf	4045,0,c	;volatile
 12826                           
 12827                           ;main.c: 148:         if (RB5 == 0){
 12828                           
 12829                           ;main.c: 147:         }
 12830  000AD2  BA81               	btfsc	3969,5,c	;volatile
 12831  000AD4  D037               	goto	i2l5446
 12832                           
 12833                           ;main.c: 149:             TMR1ON = 0;
 12834  000AD6  90CD               	bcf	4045,0,c	;volatile
 12835                           
 12836                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 12837  000AD8  0EAE               	movlw	174
 12838  000ADA  6E13               	movwf	___fldiv@a,c
 12839  000ADC  0E47               	movlw	71
 12840  000ADE  6E14               	movwf	___fldiv@a+1,c
 12841  000AE0  0E6B               	movlw	107
 12842  000AE2  6E15               	movwf	___fldiv@a+2,c
 12843  000AE4  0E42               	movlw	66
 12844  000AE6  6E16               	movwf	___fldiv@a+3,c
 12845  000AE8  50CF               	movf	4047,w,c	;volatile
 12846  000AEA  6E33               	movwf	(??_echo+1)& (0+255),c
 12847  000AEC  6A32               	clrf	??_echo& (0+255),c
 12848  000AEE  50CE               	movf	4046,w,c	;volatile
 12849  000AF0  6E34               	movwf	(??_echo+2)& (0+255),c
 12850  000AF2  6A35               	clrf	(??_echo+3)& (0+255),c
 12851  000AF4  5032               	movf	??_echo,w,c
 12852  000AF6  1234               	iorwf	??_echo+2,f,c
 12853  000AF8  5033               	movf	??_echo+1,w,c
 12854  000AFA  1235               	iorwf	??_echo+3,f,c
 12855  000AFC  C034  F001         	movff	??_echo+2,___xxtofl@val
 12856  000B00  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12857  000B04  0E00               	movlw	0
 12858  000B06  BE02               	btfsc	___xxtofl@val+1,7,c
 12859  000B08  0EFF               	movlw	-1
 12860  000B0A  6E03               	movwf	___xxtofl@val+2,c
 12861  000B0C  6E04               	movwf	___xxtofl@val+3,c
 12862  000B0E  0E01               	movlw	1
 12863  000B10  EC58  F014         	call	___xxtofl
 12864  000B14  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12865  000B18  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12866  000B1C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12867  000B20  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12868  000B24  ECB0  F00C         	call	___fldiv	;wreg free
 12869  000B28  C00F  F028         	movff	?___fldiv,___fltol@f1
 12870  000B2C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12871  000B30  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12872  000B34  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12873  000B38  EC18  F018         	call	___fltol	;wreg free
 12874  000B3C  C028  F065         	movff	?___fltol,_a+4
 12875  000B40  C029  F066         	movff	?___fltol+1,_a+5
 12876  000B44                     i2l5446:
 12877                           
 12878                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 12879  000B44  BE66               	btfsc	_a+5,7,c
 12880  000B46  D067               	goto	i2l5470
 12881  000B48  5066               	movf	_a+5,w,c
 12882  000B4A  E104               	bnz	i2u548_40
 12883  000B4C  0E02               	movlw	2
 12884  000B4E  5C65               	subwf	_a+4,w,c
 12885  000B50  A0D8               	btfss	status,0,c
 12886  000B52  D061               	goto	i2l5470
 12887  000B54                     i2u548_40:
 12888  000B54  BE66               	btfsc	_a+5,7,c
 12889  000B56  D006               	goto	i2u549_40
 12890  000B58  5066               	movf	_a+5,w,c
 12891  000B5A  E15D               	bnz	i2l5470
 12892  000B5C  0EC9               	movlw	201
 12893  000B5E  5C65               	subwf	_a+4,w,c
 12894  000B60  B0D8               	btfsc	status,0,c
 12895  000B62  D059               	goto	i2l5470
 12896  000B64                     i2u549_40:
 12897                           
 12898                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 12899  000B64  0442               	decf	_sumf+2,w,c
 12900  000B66  B4D8               	btfsc	status,2,c
 12901  000B68  D01B               	goto	i2l5462
 12902  000B6A  0102               	movlb	2	; () banked
 12903  000B6C  5168               	movf	(_dist_final+24)& (0+255),w,b
 12904  000B6E  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 12905  000B70  B4D8               	btfsc	status,2,c
 12906  000B72  D016               	goto	i2l5462
 12907                           
 12908                           ; BSR set to: 2
 12909  000B74  516A               	movf	(_dist_final+26)& (0+255),w,b
 12910  000B76  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 12911  000B78  B4D8               	btfsc	status,2,c
 12912  000B7A  D012               	goto	i2l5462
 12913                           
 12914                           ; BSR set to: 2
 12915  000B7C  516C               	movf	(_dist_final+28)& (0+255),w,b
 12916  000B7E  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 12917  000B80  B4D8               	btfsc	status,2,c
 12918  000B82  D00E               	goto	i2l5462
 12919                           
 12920                           ; BSR set to: 2
 12921                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 12922  000B84  516A               	movf	(_dist_final+26)& (0+255),w,b
 12923  000B86  2568               	addwf	(_dist_final+24)& (0+255),w,b
 12924  000B88  6E32               	movwf	??_echo& (0+255),c
 12925  000B8A  516B               	movf	(_dist_final+27)& (0+255),w,b
 12926  000B8C  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 12927  000B8E  6E33               	movwf	(??_echo+1)& (0+255),c
 12928  000B90  516C               	movf	(_dist_final+28)& (0+255),w,b
 12929  000B92  2432               	addwf	??_echo,w,c
 12930  000B94  6E3C               	movwf	_sum+4,c
 12931  000B96  516D               	movf	(_dist_final+29)& (0+255),w,b
 12932  000B98  2033               	addwfc	??_echo+1,w,c
 12933  000B9A  6E3D               	movwf	_sum+5,c
 12934                           
 12935                           ; BSR set to: 2
 12936                           ;main.c: 157:             sumf[2] = 1;
 12937  000B9C  0E01               	movlw	1
 12938  000B9E  6E42               	movwf	_sumf+2,c
 12939  000BA0                     i2l5462:
 12940                           
 12941                           ;main.c: 159:         if (sumf[2]){
 12942  000BA0  5042               	movf	_sumf+2,w,c
 12943  000BA2  B4D8               	btfsc	status,2,c
 12944  000BA4  D02B               	goto	i2l5468
 12945                           
 12946                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 12947  000BA6  90D8               	bcf	status,0,c
 12948  000BA8  3450               	rlcf	_meas,w,c	;volatile
 12949  000BAA  6ED9               	movwf	fsr2l,c
 12950  000BAC  3451               	rlcf	_meas+1,w,c	;volatile
 12951  000BAE  6EDA               	movwf	fsr2h,c
 12952  000BB0  0E68               	movlw	low (_dist_final+24)
 12953  000BB2  26D9               	addwf	fsr2l,f,c
 12954  000BB4  0E02               	movlw	high (_dist_final+24)
 12955  000BB6  22DA               	addwfc	fsr2h,f,c
 12956  000BB8  CFDE F032          	movff	postinc2,??_echo
 12957  000BBC  CFDD F033          	movff	postdec2,??_echo+1
 12958  000BC0  EE20  F03C         	lfsr	2,_sum+4
 12959  000BC4  CFDE F034          	movff	postinc2,??_echo+2
 12960  000BC8  CFDD F035          	movff	postdec2,??_echo+3
 12961  000BCC  5032               	movf	??_echo,w,c
 12962  000BCE  5E34               	subwf	??_echo+2,f,c
 12963  000BD0  5033               	movf	??_echo+1,w,c
 12964  000BD2  5A35               	subwfb	??_echo+3,f,c
 12965  000BD4  5065               	movf	_a+4,w,c
 12966  000BD6  2434               	addwf	??_echo+2,w,c
 12967  000BD8  6E3C               	movwf	_sum+4,c
 12968  000BDA  5066               	movf	_a+5,w,c
 12969  000BDC  2035               	addwfc	??_echo+3,w,c
 12970  000BDE  6E3D               	movwf	_sum+5,c
 12971                           
 12972                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 12973  000BE0  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 12974  000BE4  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 12975  000BE8  0E00               	movlw	0
 12976  000BEA  6E04               	movwf	i2___awdiv@divisor+1,c
 12977  000BEC  0E05               	movlw	5
 12978  000BEE  6E03               	movwf	i2___awdiv@divisor,c
 12979  000BF0  ECDC  F019         	call	i2___awdiv	;wreg free
 12980  000BF4  C001  F272         	movff	?i2___awdiv,_dist_final+34
 12981  000BF8  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 12982  000BFC                     i2l5468:
 12983                           
 12984                           ;main.c: 163:         dist_final[2][meas] = a[2];
 12985  000BFC  90D8               	bcf	status,0,c
 12986  000BFE  3450               	rlcf	_meas,w,c	;volatile
 12987  000C00  6ED9               	movwf	fsr2l,c
 12988  000C02  3451               	rlcf	_meas+1,w,c	;volatile
 12989  000C04  6EDA               	movwf	fsr2h,c
 12990  000C06  0E68               	movlw	low (_dist_final+24)
 12991  000C08  26D9               	addwf	fsr2l,f,c
 12992  000C0A  0E02               	movlw	high (_dist_final+24)
 12993  000C0C  22DA               	addwfc	fsr2h,f,c
 12994  000C0E  C065  FFDE         	movff	_a+4,postinc2
 12995  000C12  C066  FFDD         	movff	_a+5,postdec2
 12996  000C16                     i2l5470:
 12997                           
 12998                           ;main.c: 166:     if (b==4){
 12999  000C16  0E04               	movlw	4
 13000  000C18  185A               	xorwf	_b,w,c
 13001  000C1A  105B               	iorwf	_b+1,w,c
 13002  000C1C  A4D8               	btfss	status,2,c
 13003  000C1E  0012               	return	
 13004                           
 13005                           ;main.c: 167:         if (RB4 == 1){
 13006  000C20  B881               	btfsc	3969,4,c	;volatile
 13007                           
 13008                           ;main.c: 168:             TMR1ON = 1;
 13009  000C22  80CD               	bsf	4045,0,c	;volatile
 13010                           
 13011                           ;main.c: 170:         if (RB4 == 0){
 13012                           
 13013                           ;main.c: 169:         }
 13014  000C24  B881               	btfsc	3969,4,c	;volatile
 13015  000C26  D037               	goto	i2l5480
 13016                           
 13017                           ;main.c: 171:             TMR1ON = 0;
 13018  000C28  90CD               	bcf	4045,0,c	;volatile
 13019                           
 13020                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 13021  000C2A  0EAE               	movlw	174
 13022  000C2C  6E13               	movwf	___fldiv@a,c
 13023  000C2E  0E47               	movlw	71
 13024  000C30  6E14               	movwf	___fldiv@a+1,c
 13025  000C32  0E6B               	movlw	107
 13026  000C34  6E15               	movwf	___fldiv@a+2,c
 13027  000C36  0E42               	movlw	66
 13028  000C38  6E16               	movwf	___fldiv@a+3,c
 13029  000C3A  50CF               	movf	4047,w,c	;volatile
 13030  000C3C  6E33               	movwf	(??_echo+1)& (0+255),c
 13031  000C3E  6A32               	clrf	??_echo& (0+255),c
 13032  000C40  50CE               	movf	4046,w,c	;volatile
 13033  000C42  6E34               	movwf	(??_echo+2)& (0+255),c
 13034  000C44  6A35               	clrf	(??_echo+3)& (0+255),c
 13035  000C46  5032               	movf	??_echo,w,c
 13036  000C48  1234               	iorwf	??_echo+2,f,c
 13037  000C4A  5033               	movf	??_echo+1,w,c
 13038  000C4C  1235               	iorwf	??_echo+3,f,c
 13039  000C4E  C034  F001         	movff	??_echo+2,___xxtofl@val
 13040  000C52  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13041  000C56  0E00               	movlw	0
 13042  000C58  BE02               	btfsc	___xxtofl@val+1,7,c
 13043  000C5A  0EFF               	movlw	-1
 13044  000C5C  6E03               	movwf	___xxtofl@val+2,c
 13045  000C5E  6E04               	movwf	___xxtofl@val+3,c
 13046  000C60  0E01               	movlw	1
 13047  000C62  EC58  F014         	call	___xxtofl
 13048  000C66  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13049  000C6A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13050  000C6E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13051  000C72  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13052  000C76  ECB0  F00C         	call	___fldiv	;wreg free
 13053  000C7A  C00F  F028         	movff	?___fldiv,___fltol@f1
 13054  000C7E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13055  000C82  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13056  000C86  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13057  000C8A  EC18  F018         	call	___fltol	;wreg free
 13058  000C8E  C028  F067         	movff	?___fltol,_a+6
 13059  000C92  C029  F068         	movff	?___fltol+1,_a+7
 13060  000C96                     i2l5480:
 13061                           
 13062                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13063  000C96  BE68               	btfsc	_a+7,7,c
 13064  000C98  0012               	return	
 13065  000C9A  5068               	movf	_a+7,w,c
 13066  000C9C  E104               	bnz	i2u558_40
 13067  000C9E  0E02               	movlw	2
 13068  000CA0  5C67               	subwf	_a+6,w,c
 13069  000CA2  A0D8               	btfss	status,0,c
 13070  000CA4  0012               	return	
 13071  000CA6                     i2u558_40:
 13072  000CA6  BE68               	btfsc	_a+7,7,c
 13073  000CA8  D006               	goto	i2u559_40
 13074  000CAA  5068               	movf	_a+7,w,c
 13075  000CAC  E15D               	bnz	i2l392
 13076  000CAE  0EC9               	movlw	201
 13077  000CB0  5C67               	subwf	_a+6,w,c
 13078  000CB2  B0D8               	btfsc	status,0,c
 13079  000CB4  0012               	return	
 13080  000CB6                     i2u559_40:
 13081                           
 13082                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13083  000CB6  0443               	decf	_sumf+3,w,c
 13084  000CB8  B4D8               	btfsc	status,2,c
 13085  000CBA  D01B               	goto	i2l5496
 13086  000CBC  0102               	movlb	2	; () banked
 13087  000CBE  5174               	movf	(_dist_final+36)& (0+255),w,b
 13088  000CC0  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13089  000CC2  B4D8               	btfsc	status,2,c
 13090  000CC4  D016               	goto	i2l5496
 13091                           
 13092                           ; BSR set to: 2
 13093  000CC6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13094  000CC8  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13095  000CCA  B4D8               	btfsc	status,2,c
 13096  000CCC  D012               	goto	i2l5496
 13097                           
 13098                           ; BSR set to: 2
 13099  000CCE  5178               	movf	(_dist_final+40)& (0+255),w,b
 13100  000CD0  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13101  000CD2  B4D8               	btfsc	status,2,c
 13102  000CD4  D00E               	goto	i2l5496
 13103                           
 13104                           ; BSR set to: 2
 13105                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13106  000CD6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13107  000CD8  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13108  000CDA  6E32               	movwf	??_echo& (0+255),c
 13109  000CDC  5177               	movf	(_dist_final+39)& (0+255),w,b
 13110  000CDE  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13111  000CE0  6E33               	movwf	(??_echo+1)& (0+255),c
 13112  000CE2  5178               	movf	(_dist_final+40)& (0+255),w,b
 13113  000CE4  2432               	addwf	??_echo,w,c
 13114  000CE6  6E3E               	movwf	_sum+6,c
 13115  000CE8  5179               	movf	(_dist_final+41)& (0+255),w,b
 13116  000CEA  2033               	addwfc	??_echo+1,w,c
 13117  000CEC  6E3F               	movwf	_sum+7,c
 13118                           
 13119                           ; BSR set to: 2
 13120                           ;main.c: 179:             sumf[3] = 1;
 13121  000CEE  0E01               	movlw	1
 13122  000CF0  6E43               	movwf	_sumf+3,c
 13123  000CF2                     i2l5496:
 13124                           
 13125                           ;main.c: 181:         if (sumf[3]){
 13126  000CF2  5043               	movf	_sumf+3,w,c
 13127  000CF4  B4D8               	btfsc	status,2,c
 13128  000CF6  D02B               	goto	i2l5502
 13129                           
 13130                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13131  000CF8  90D8               	bcf	status,0,c
 13132  000CFA  3450               	rlcf	_meas,w,c	;volatile
 13133  000CFC  6ED9               	movwf	fsr2l,c
 13134  000CFE  3451               	rlcf	_meas+1,w,c	;volatile
 13135  000D00  6EDA               	movwf	fsr2h,c
 13136  000D02  0E74               	movlw	low (_dist_final+36)
 13137  000D04  26D9               	addwf	fsr2l,f,c
 13138  000D06  0E02               	movlw	high (_dist_final+36)
 13139  000D08  22DA               	addwfc	fsr2h,f,c
 13140  000D0A  CFDE F032          	movff	postinc2,??_echo
 13141  000D0E  CFDD F033          	movff	postdec2,??_echo+1
 13142  000D12  EE20  F03E         	lfsr	2,_sum+6
 13143  000D16  CFDE F034          	movff	postinc2,??_echo+2
 13144  000D1A  CFDD F035          	movff	postdec2,??_echo+3
 13145  000D1E  5032               	movf	??_echo,w,c
 13146  000D20  5E34               	subwf	??_echo+2,f,c
 13147  000D22  5033               	movf	??_echo+1,w,c
 13148  000D24  5A35               	subwfb	??_echo+3,f,c
 13149  000D26  5067               	movf	_a+6,w,c
 13150  000D28  2434               	addwf	??_echo+2,w,c
 13151  000D2A  6E3E               	movwf	_sum+6,c
 13152  000D2C  5068               	movf	_a+7,w,c
 13153  000D2E  2035               	addwfc	??_echo+3,w,c
 13154  000D30  6E3F               	movwf	_sum+7,c
 13155                           
 13156                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13157  000D32  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13158  000D36  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13159  000D3A  0E00               	movlw	0
 13160  000D3C  6E04               	movwf	i2___awdiv@divisor+1,c
 13161  000D3E  0E05               	movlw	5
 13162  000D40  6E03               	movwf	i2___awdiv@divisor,c
 13163  000D42  ECDC  F019         	call	i2___awdiv	;wreg free
 13164  000D46  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13165  000D4A  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13166  000D4E                     i2l5502:
 13167                           
 13168                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13169  000D4E  90D8               	bcf	status,0,c
 13170  000D50  3450               	rlcf	_meas,w,c	;volatile
 13171  000D52  6ED9               	movwf	fsr2l,c
 13172  000D54  3451               	rlcf	_meas+1,w,c	;volatile
 13173  000D56  6EDA               	movwf	fsr2h,c
 13174  000D58  0E74               	movlw	low (_dist_final+36)
 13175  000D5A  26D9               	addwf	fsr2l,f,c
 13176  000D5C  0E02               	movlw	high (_dist_final+36)
 13177  000D5E  22DA               	addwfc	fsr2h,f,c
 13178  000D60  C067  FFDE         	movff	_a+6,postinc2
 13179  000D64  C068  FFDD         	movff	_a+7,postdec2
 13180  000D68                     i2l392:
 13181  000D68  0012               	return		;funcret
 13182  000D6A                     __end_of_echo:
 13183                           	opt callstack 0
 13184                           
 13185 ;; *************** function i2___awdiv *****************
 13186 ;; Defined at:
 13187 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13188 ;; Parameters:    Size  Location     Type
 13189 ;;  dividend        2    0[COMRAM] int 
 13190 ;;  divisor         2    2[COMRAM] int 
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  __awdiv         2    6[COMRAM] int 
 13193 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13194 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13195 ;; Return value:  Size  Location     Type
 13196 ;;                  2    0[COMRAM] int 
 13197 ;; Registers used:
 13198 ;;		wreg, status,2, status,0
 13199 ;; Tracked objects:
 13200 ;;		On entry : 0/0
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13207 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13208 ;;Total ram usage:        8 bytes
 13209 ;; Hardware stack levels used:    1
 13210 ;; This function calls:
 13211 ;;		Nothing
 13212 ;; This function is called by:
 13213 ;;		_echo
 13214 ;; This function uses a non-reentrant model
 13215 ;;
 13216                           
 13217                           	psect	text56
 13218  0033B8                     __ptext56:
 13219                           	opt callstack 0
 13220  0033B8                     i2___awdiv:
 13221                           	opt callstack 14
 13222                           
 13223                           ;incstack = 0
 13224  0033B8  0E00               	movlw	0
 13225  0033BA  6E06               	movwf	i2___awdiv@sign,c
 13226  0033BC  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13227  0033BE  D006               	goto	i2l5238
 13228  0033C0  6C03               	negf	i2___awdiv@divisor,c
 13229  0033C2  1E04               	comf	i2___awdiv@divisor+1,f,c
 13230  0033C4  B0D8               	btfsc	status,0,c
 13231  0033C6  2A04               	incf	i2___awdiv@divisor+1,f,c
 13232  0033C8  0E01               	movlw	1
 13233  0033CA  6E06               	movwf	i2___awdiv@sign,c
 13234  0033CC                     i2l5238:
 13235  0033CC  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13236  0033CE  D006               	goto	i2l5244
 13237  0033D0  6C01               	negf	i2___awdiv@dividend,c
 13238  0033D2  1E02               	comf	i2___awdiv@dividend+1,f,c
 13239  0033D4  B0D8               	btfsc	status,0,c
 13240  0033D6  2A02               	incf	i2___awdiv@dividend+1,f,c
 13241  0033D8  0E01               	movlw	1
 13242  0033DA  1A06               	xorwf	i2___awdiv@sign,f,c
 13243  0033DC                     i2l5244:
 13244  0033DC  0E00               	movlw	0
 13245  0033DE  6E08               	movwf	i2___awdiv@quotient+1,c
 13246  0033E0  0E00               	movlw	0
 13247  0033E2  6E07               	movwf	i2___awdiv@quotient,c
 13248  0033E4  5003               	movf	i2___awdiv@divisor,w,c
 13249  0033E6  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13250  0033E8  B4D8               	btfsc	status,2,c
 13251  0033EA  D01C               	goto	i2l5266
 13252  0033EC  0E01               	movlw	1
 13253  0033EE  6E05               	movwf	i2___awdiv@counter,c
 13254  0033F0  D004               	goto	i2l5252
 13255  0033F2                     i2l5250:
 13256  0033F2  90D8               	bcf	status,0,c
 13257  0033F4  3603               	rlcf	i2___awdiv@divisor,f,c
 13258  0033F6  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13259  0033F8  2A05               	incf	i2___awdiv@counter,f,c
 13260  0033FA                     i2l5252:
 13261  0033FA  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13262  0033FC  D7FA               	goto	i2l5250
 13263  0033FE                     i2u520_40:
 13264  0033FE  90D8               	bcf	status,0,c
 13265  003400  3607               	rlcf	i2___awdiv@quotient,f,c
 13266  003402  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13267  003404  5003               	movf	i2___awdiv@divisor,w,c
 13268  003406  5C01               	subwf	i2___awdiv@dividend,w,c
 13269  003408  5004               	movf	i2___awdiv@divisor+1,w,c
 13270  00340A  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13271  00340C  A0D8               	btfss	status,0,c
 13272  00340E  D005               	goto	i2l5262
 13273  003410  5003               	movf	i2___awdiv@divisor,w,c
 13274  003412  5E01               	subwf	i2___awdiv@dividend,f,c
 13275  003414  5004               	movf	i2___awdiv@divisor+1,w,c
 13276  003416  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13277  003418  8007               	bsf	i2___awdiv@quotient,0,c
 13278  00341A                     i2l5262:
 13279  00341A  90D8               	bcf	status,0,c
 13280  00341C  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13281  00341E  3203               	rrcf	i2___awdiv@divisor,f,c
 13282  003420  2E05               	decfsz	i2___awdiv@counter,f,c
 13283  003422  D7ED               	goto	i2u520_40
 13284  003424                     i2l5266:
 13285  003424  5006               	movf	i2___awdiv@sign,w,c
 13286  003426  B4D8               	btfsc	status,2,c
 13287  003428  D004               	goto	i2l5270
 13288  00342A  6C07               	negf	i2___awdiv@quotient,c
 13289  00342C  1E08               	comf	i2___awdiv@quotient+1,f,c
 13290  00342E  B0D8               	btfsc	status,0,c
 13291  003430  2A08               	incf	i2___awdiv@quotient+1,f,c
 13292  003432                     i2l5270:
 13293  003432  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13294  003436  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13295  00343A  0012               	return		;funcret
 13296  00343C                     __end_ofi2___awdiv:
 13297                           	opt callstack 0
 13298                           
 13299 ;; *************** function ___xxtofl *****************
 13300 ;; Defined at:
 13301 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;  sign            1    wreg     unsigned char 
 13304 ;;  val             4    0[COMRAM] long 
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;  sign            1    8[COMRAM] unsigned char 
 13307 ;;  arg             4   10[COMRAM] unsigned long 
 13308 ;;  exp             1    9[COMRAM] unsigned char 
 13309 ;; Return value:  Size  Location     Type
 13310 ;;                  4    0[COMRAM] unsigned char 
 13311 ;; Registers used:
 13312 ;;		wreg, status,2, status,0
 13313 ;; Tracked objects:
 13314 ;;		On entry : 0/0
 13315 ;;		On exit  : 0/0
 13316 ;;		Unchanged: 0/0
 13317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;Total ram usage:       14 bytes
 13323 ;; Hardware stack levels used:    1
 13324 ;; This function calls:
 13325 ;;		Nothing
 13326 ;; This function is called by:
 13327 ;;		_echo
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text57
 13332  0028B0                     __ptext57:
 13333                           	opt callstack 0
 13334  0028B0                     ___xxtofl:
 13335                           	opt callstack 14
 13336                           
 13337                           ;incstack = 0
 13338                           ;___xxtofl@sign stored from wreg
 13339  0028B0  6E09               	movwf	___xxtofl@sign,c
 13340  0028B2  5009               	movf	___xxtofl@sign,w,c
 13341  0028B4  A4D8               	btfss	status,2,c
 13342  0028B6  AE04               	btfss	___xxtofl@val+3,7,c
 13343  0028B8  D01A               	goto	i2l1338
 13344  0028BA  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13345  0028BE  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13346  0028C2  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13347  0028C6  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13348  0028CA  1E05               	comf	??___xxtofl,f,c
 13349  0028CC  1E06               	comf	??___xxtofl+1,f,c
 13350  0028CE  1E07               	comf	??___xxtofl+2,f,c
 13351  0028D0  1E08               	comf	??___xxtofl+3,f,c
 13352  0028D2  2A05               	incf	??___xxtofl,f,c
 13353  0028D4  0E00               	movlw	0
 13354  0028D6  2206               	addwfc	??___xxtofl+1,f,c
 13355  0028D8  2207               	addwfc	??___xxtofl+2,f,c
 13356  0028DA  2208               	addwfc	??___xxtofl+3,f,c
 13357  0028DC  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13358  0028E0  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13359  0028E4  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13360  0028E8  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13361  0028EC  D008               	goto	i2l5190
 13362  0028EE                     i2l1338:
 13363  0028EE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13364  0028F2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13365  0028F6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13366  0028FA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13367  0028FE                     i2l5190:
 13368  0028FE  5001               	movf	___xxtofl@val,w,c
 13369  002900  1002               	iorwf	___xxtofl@val+1,w,c
 13370  002902  1003               	iorwf	___xxtofl@val+2,w,c
 13371  002904  1004               	iorwf	___xxtofl@val+3,w,c
 13372  002906  A4D8               	btfss	status,2,c
 13373  002908  D009               	goto	i2l5196
 13374  00290A  0E00               	movlw	0
 13375  00290C  6E01               	movwf	?___xxtofl,c
 13376  00290E  0E00               	movlw	0
 13377  002910  6E02               	movwf	?___xxtofl+1,c
 13378  002912  0E00               	movlw	0
 13379  002914  6E03               	movwf	?___xxtofl+2,c
 13380  002916  0E00               	movlw	0
 13381  002918  6E04               	movwf	?___xxtofl+3,c
 13382  00291A  0012               	return	
 13383  00291C                     i2l5196:
 13384  00291C  0E96               	movlw	150
 13385  00291E  6E0A               	movwf	___xxtofl@exp,c
 13386  002920  D006               	goto	i2l5200
 13387  002922                     i2l5198:
 13388  002922  2A0A               	incf	___xxtofl@exp,f,c
 13389  002924  90D8               	bcf	status,0,c
 13390  002926  320E               	rrcf	___xxtofl@arg+3,f,c
 13391  002928  320D               	rrcf	___xxtofl@arg+2,f,c
 13392  00292A  320C               	rrcf	___xxtofl@arg+1,f,c
 13393  00292C  320B               	rrcf	___xxtofl@arg,f,c
 13394  00292E                     i2l5200:
 13395  00292E  0E00               	movlw	0
 13396  002930  140B               	andwf	___xxtofl@arg,w,c
 13397  002932  6E05               	movwf	??___xxtofl& (0+255),c
 13398  002934  0E00               	movlw	0
 13399  002936  140C               	andwf	___xxtofl@arg+1,w,c
 13400  002938  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13401  00293A  0E00               	movlw	0
 13402  00293C  140D               	andwf	___xxtofl@arg+2,w,c
 13403  00293E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13404  002940  0EFE               	movlw	254
 13405  002942  140E               	andwf	___xxtofl@arg+3,w,c
 13406  002944  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13407  002946  5005               	movf	??___xxtofl,w,c
 13408  002948  1006               	iorwf	??___xxtofl+1,w,c
 13409  00294A  1007               	iorwf	??___xxtofl+2,w,c
 13410  00294C  1008               	iorwf	??___xxtofl+3,w,c
 13411  00294E  B4D8               	btfsc	status,2,c
 13412  002950  D00D               	goto	i2l1345
 13413  002952  D7E7               	goto	i2l5198
 13414  002954                     i2l5202:
 13415  002954  2A0A               	incf	___xxtofl@exp,f,c
 13416  002956  0E01               	movlw	1
 13417  002958  260B               	addwf	___xxtofl@arg,f,c
 13418  00295A  0E00               	movlw	0
 13419  00295C  220C               	addwfc	___xxtofl@arg+1,f,c
 13420  00295E  220D               	addwfc	___xxtofl@arg+2,f,c
 13421  002960  220E               	addwfc	___xxtofl@arg+3,f,c
 13422  002962  90D8               	bcf	status,0,c
 13423  002964  320E               	rrcf	___xxtofl@arg+3,f,c
 13424  002966  320D               	rrcf	___xxtofl@arg+2,f,c
 13425  002968  320C               	rrcf	___xxtofl@arg+1,f,c
 13426  00296A  320B               	rrcf	___xxtofl@arg,f,c
 13427  00296C                     i2l1345:
 13428  00296C  0E00               	movlw	0
 13429  00296E  140B               	andwf	___xxtofl@arg,w,c
 13430  002970  6E05               	movwf	??___xxtofl& (0+255),c
 13431  002972  0E00               	movlw	0
 13432  002974  140C               	andwf	___xxtofl@arg+1,w,c
 13433  002976  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13434  002978  0E00               	movlw	0
 13435  00297A  140D               	andwf	___xxtofl@arg+2,w,c
 13436  00297C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13437  00297E  0EFF               	movlw	255
 13438  002980  140E               	andwf	___xxtofl@arg+3,w,c
 13439  002982  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13440  002984  5005               	movf	??___xxtofl,w,c
 13441  002986  1006               	iorwf	??___xxtofl+1,w,c
 13442  002988  1007               	iorwf	??___xxtofl+2,w,c
 13443  00298A  1008               	iorwf	??___xxtofl+3,w,c
 13444  00298C  B4D8               	btfsc	status,2,c
 13445  00298E  D007               	goto	i2l5210
 13446  002990  D7E1               	goto	i2l5202
 13447  002992                     i2l5208:
 13448  002992  060A               	decf	___xxtofl@exp,f,c
 13449  002994  90D8               	bcf	status,0,c
 13450  002996  360B               	rlcf	___xxtofl@arg,f,c
 13451  002998  360C               	rlcf	___xxtofl@arg+1,f,c
 13452  00299A  360D               	rlcf	___xxtofl@arg+2,f,c
 13453  00299C  360E               	rlcf	___xxtofl@arg+3,f,c
 13454  00299E                     i2l5210:
 13455  00299E  BE0D               	btfsc	___xxtofl@arg+2,7,c
 13456  0029A0  D003               	goto	i2u513_40
 13457  0029A2  0E02               	movlw	2
 13458  0029A4  600A               	cpfslt	___xxtofl@exp,c
 13459  0029A6  D7F5               	goto	i2l5208
 13460  0029A8                     i2u513_40:
 13461  0029A8  A00A               	btfss	___xxtofl@exp,0,c
 13462  0029AA  9E0D               	bcf	___xxtofl@arg+2,7,c
 13463  0029AC  90D8               	bcf	status,0,c
 13464  0029AE  320A               	rrcf	___xxtofl@exp,f,c
 13465  0029B0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13466  0029B4  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 13467  0029B6  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 13468  0029B8  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 13469  0029BA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13470  0029BE  6A07               	clrf	??___xxtofl+2,c
 13471  0029C0  6A06               	clrf	??___xxtofl+1,c
 13472  0029C2  6A05               	clrf	??___xxtofl,c
 13473  0029C4  5005               	movf	??___xxtofl,w,c
 13474  0029C6  120B               	iorwf	___xxtofl@arg,f,c
 13475  0029C8  5006               	movf	??___xxtofl+1,w,c
 13476  0029CA  120C               	iorwf	___xxtofl@arg+1,f,c
 13477  0029CC  5007               	movf	??___xxtofl+2,w,c
 13478  0029CE  120D               	iorwf	___xxtofl@arg+2,f,c
 13479  0029D0  5008               	movf	??___xxtofl+3,w,c
 13480  0029D2  120E               	iorwf	___xxtofl@arg+3,f,c
 13481  0029D4  5009               	movf	___xxtofl@sign,w,c
 13482  0029D6  A4D8               	btfss	status,2,c
 13483  0029D8  AE04               	btfss	___xxtofl@val+3,7,c
 13484  0029DA  D001               	goto	i2l5226
 13485  0029DC  8E0E               	bsf	___xxtofl@arg+3,7,c
 13486  0029DE                     i2l5226:
 13487  0029DE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13488  0029E2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13489  0029E6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13490  0029EA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13491  0029EE  0012               	return		;funcret
 13492  0029F0                     __end_of___xxtofl:
 13493                           	opt callstack 0
 13494                           
 13495 ;; *************** function ___fltol *****************
 13496 ;; Defined at:
 13497 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13498 ;; Parameters:    Size  Location     Type
 13499 ;;  f1              4   39[COMRAM] unsigned char 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;  exp1            1   48[COMRAM] unsigned char 
 13502 ;;  sign1           1   47[COMRAM] unsigned char 
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  4   39[COMRAM] long 
 13505 ;; Registers used:
 13506 ;;		wreg, status,2, status,0
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13514 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13515 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13516 ;;Total ram usage:       10 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; This function calls:
 13519 ;;		Nothing
 13520 ;; This function is called by:
 13521 ;;		_echo
 13522 ;; This function uses a non-reentrant model
 13523 ;;
 13524                           
 13525                           	psect	text58
 13526  003030                     __ptext58:
 13527                           	opt callstack 0
 13528  003030                     ___fltol:
 13529                           	opt callstack 14
 13530                           
 13531                           ;incstack = 0
 13532  003030  342A               	rlcf	___fltol@f1+2,w,c
 13533  003032  342B               	rlcf	___fltol@f1+3,w,c
 13534  003034  6E31               	movwf	___fltol@exp1,c
 13535  003036  5031               	movf	___fltol@exp1,w,c
 13536  003038  A4D8               	btfss	status,2,c
 13537  00303A  D009               	goto	i2l5130
 13538  00303C                     i2u497_40:
 13539  00303C  0E00               	movlw	0
 13540  00303E  6E28               	movwf	?___fltol,c
 13541  003040  0E00               	movlw	0
 13542  003042  6E29               	movwf	?___fltol+1,c
 13543  003044  0E00               	movlw	0
 13544  003046  6E2A               	movwf	?___fltol+2,c
 13545  003048  0E00               	movlw	0
 13546  00304A  6E2B               	movwf	?___fltol+3,c
 13547  00304C  0012               	return	
 13548  00304E                     i2l5130:
 13549  00304E  C028  F02C         	movff	___fltol@f1,??___fltol
 13550  003052  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 13551  003056  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 13552  00305A  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 13553  00305E  0E20               	movlw	32
 13554  003060  D005               	goto	i2u498_40
 13555  003062                     i2u498_45:
 13556  003062  90D8               	bcf	status,0,c
 13557  003064  322F               	rrcf	??___fltol+3,f,c
 13558  003066  322E               	rrcf	??___fltol+2,f,c
 13559  003068  322D               	rrcf	??___fltol+1,f,c
 13560  00306A  322C               	rrcf	??___fltol,f,c
 13561  00306C                     i2u498_40:
 13562  00306C  2EE8               	decfsz	wreg,f,c
 13563  00306E  D7F9               	goto	i2u498_45
 13564  003070  502C               	movf	??___fltol,w,c
 13565  003072  6E30               	movwf	___fltol@sign1,c
 13566  003074  8E2A               	bsf	___fltol@f1+2,7,c
 13567  003076  0EFF               	movlw	255
 13568  003078  1628               	andwf	___fltol@f1,f,c
 13569  00307A  0EFF               	movlw	255
 13570  00307C  1629               	andwf	___fltol@f1+1,f,c
 13571  00307E  0EFF               	movlw	255
 13572  003080  162A               	andwf	___fltol@f1+2,f,c
 13573  003082  0E00               	movlw	0
 13574  003084  162B               	andwf	___fltol@f1+3,f,c
 13575  003086  0E96               	movlw	150
 13576  003088  5E31               	subwf	___fltol@exp1,f,c
 13577  00308A  AE31               	btfss	___fltol@exp1,7,c
 13578  00308C  D00D               	goto	i2l5150
 13579  00308E  5031               	movf	___fltol@exp1,w,c
 13580  003090  0A80               	xorlw	128
 13581  003092  0F97               	addlw	151
 13582  003094  A0D8               	btfss	status,0,c
 13583  003096  D7D2               	goto	i2u497_40
 13584  003098                     i2l5146:
 13585  003098  90D8               	bcf	status,0,c
 13586  00309A  322B               	rrcf	___fltol@f1+3,f,c
 13587  00309C  322A               	rrcf	___fltol@f1+2,f,c
 13588  00309E  3229               	rrcf	___fltol@f1+1,f,c
 13589  0030A0  3228               	rrcf	___fltol@f1,f,c
 13590  0030A2  3E31               	incfsz	___fltol@exp1,f,c
 13591  0030A4  D7F9               	goto	i2l5146
 13592  0030A6  D00D               	goto	i2u502_40
 13593  0030A8                     i2l5150:
 13594  0030A8  0E1F               	movlw	31
 13595  0030AA  6431               	cpfsgt	___fltol@exp1,c
 13596  0030AC  D007               	goto	i2l5158
 13597  0030AE  D7C6               	goto	i2u497_40
 13598  0030B0                     i2l5156:
 13599  0030B0  90D8               	bcf	status,0,c
 13600  0030B2  3628               	rlcf	___fltol@f1,f,c
 13601  0030B4  3629               	rlcf	___fltol@f1+1,f,c
 13602  0030B6  362A               	rlcf	___fltol@f1+2,f,c
 13603  0030B8  362B               	rlcf	___fltol@f1+3,f,c
 13604  0030BA  0631               	decf	___fltol@exp1,f,c
 13605  0030BC                     i2l5158:
 13606  0030BC  5031               	movf	___fltol@exp1,w,c
 13607  0030BE  A4D8               	btfss	status,2,c
 13608  0030C0  D7F7               	goto	i2l5156
 13609  0030C2                     i2u502_40:
 13610  0030C2  5030               	movf	___fltol@sign1,w,c
 13611  0030C4  B4D8               	btfsc	status,2,c
 13612  0030C6  D008               	goto	i2l5164
 13613  0030C8  1E2B               	comf	___fltol@f1+3,f,c
 13614  0030CA  1E2A               	comf	___fltol@f1+2,f,c
 13615  0030CC  1E29               	comf	___fltol@f1+1,f,c
 13616  0030CE  6C28               	negf	___fltol@f1,c
 13617  0030D0  0E00               	movlw	0
 13618  0030D2  2229               	addwfc	___fltol@f1+1,f,c
 13619  0030D4  222A               	addwfc	___fltol@f1+2,f,c
 13620  0030D6  222B               	addwfc	___fltol@f1+3,f,c
 13621  0030D8                     i2l5164:
 13622  0030D8  C028  F028         	movff	___fltol@f1,?___fltol
 13623  0030DC  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 13624  0030E0  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 13625  0030E4  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 13626  0030E8  0012               	return		;funcret
 13627  0030EA                     __end_of___fltol:
 13628                           	opt callstack 0
 13629                           
 13630 ;; *************** function ___fldiv *****************
 13631 ;; Defined at:
 13632 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13633 ;; Parameters:    Size  Location     Type
 13634 ;;  b               4   14[COMRAM] long 
 13635 ;;  a               4   18[COMRAM] long 
 13636 ;; Auto vars:     Size  Location     Type
 13637 ;;  grs             4   33[COMRAM] unsigned long 
 13638 ;;  rem             4   26[COMRAM] unsigned long 
 13639 ;;  new_exp         2   31[COMRAM] short 
 13640 ;;  aexp            1   38[COMRAM] unsigned char 
 13641 ;;  bexp            1   37[COMRAM] unsigned char 
 13642 ;;  sign            1   30[COMRAM] unsigned char 
 13643 ;; Return value:  Size  Location     Type
 13644 ;;                  4   14[COMRAM] unsigned char 
 13645 ;; Registers used:
 13646 ;;		wreg, status,2, status,0
 13647 ;; Tracked objects:
 13648 ;;		On entry : 0/0
 13649 ;;		On exit  : 0/0
 13650 ;;		Unchanged: 0/0
 13651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13652 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13653 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13654 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13655 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13656 ;;Total ram usage:       25 bytes
 13657 ;; Hardware stack levels used:    1
 13658 ;; This function calls:
 13659 ;;		Nothing
 13660 ;; This function is called by:
 13661 ;;		_echo
 13662 ;; This function uses a non-reentrant model
 13663 ;;
 13664                           
 13665                           	psect	text59
 13666  001960                     __ptext59:
 13667                           	opt callstack 0
 13668  001960                     ___fldiv:
 13669                           	opt callstack 14
 13670                           
 13671                           ;incstack = 0
 13672  001960  5012               	movf	___fldiv@b+3,w,c
 13673  001962  0B80               	andlw	128
 13674  001964  6E1F               	movwf	___fldiv@sign,c
 13675  001966  5012               	movf	___fldiv@b+3,w,c
 13676  001968  2412               	addwf	___fldiv@b+3,w,c
 13677  00196A  6E26               	movwf	___fldiv@bexp,c
 13678  00196C  BE11               	btfsc	___fldiv@b+2,7,c
 13679  00196E  8026               	bsf	___fldiv@bexp,0,c
 13680  001970  5026               	movf	___fldiv@bexp,w,c
 13681  001972  B4D8               	btfsc	status,2,c
 13682  001974  D00D               	goto	i2l4958
 13683  001976  2826               	incf	___fldiv@bexp,w,c
 13684  001978  A4D8               	btfss	status,2,c
 13685  00197A  D008               	goto	i2l4954
 13686  00197C  0E00               	movlw	0
 13687  00197E  6E0F               	movwf	___fldiv@b,c
 13688  001980  0E00               	movlw	0
 13689  001982  6E10               	movwf	___fldiv@b+1,c
 13690  001984  0E00               	movlw	0
 13691  001986  6E11               	movwf	___fldiv@b+2,c
 13692  001988  0E00               	movlw	0
 13693  00198A  6E12               	movwf	___fldiv@b+3,c
 13694  00198C                     i2l4954:
 13695  00198C  8E11               	bsf	___fldiv@b+2,7,c
 13696  00198E  D006               	goto	L6
 13697  001990                     i2l4958:
 13698  001990  0E00               	movlw	0
 13699  001992  6E0F               	movwf	___fldiv@b,c
 13700  001994  0E00               	movlw	0
 13701  001996  6E10               	movwf	___fldiv@b+1,c
 13702  001998  0E00               	movlw	0
 13703  00199A  6E11               	movwf	___fldiv@b+2,c
 13704  00199C                     L6:
 13705  00199C  0E00               	movlw	0
 13706  00199E  6E12               	movwf	___fldiv@b+3,c
 13707  0019A0  5016               	movf	___fldiv@a+3,w,c
 13708  0019A2  0B80               	andlw	128
 13709  0019A4  1A1F               	xorwf	___fldiv@sign,f,c
 13710  0019A6  5016               	movf	___fldiv@a+3,w,c
 13711  0019A8  2416               	addwf	___fldiv@a+3,w,c
 13712  0019AA  6E27               	movwf	___fldiv@aexp,c
 13713  0019AC  BE15               	btfsc	___fldiv@a+2,7,c
 13714  0019AE  8027               	bsf	___fldiv@aexp,0,c
 13715  0019B0  5027               	movf	___fldiv@aexp,w,c
 13716  0019B2  B4D8               	btfsc	status,2,c
 13717  0019B4  D00D               	goto	i2l4978
 13718  0019B6  2827               	incf	___fldiv@aexp,w,c
 13719  0019B8  A4D8               	btfss	status,2,c
 13720  0019BA  D008               	goto	i2l4974
 13721  0019BC  0E00               	movlw	0
 13722  0019BE  6E13               	movwf	___fldiv@a,c
 13723  0019C0  0E00               	movlw	0
 13724  0019C2  6E14               	movwf	___fldiv@a+1,c
 13725  0019C4  0E00               	movlw	0
 13726  0019C6  6E15               	movwf	___fldiv@a+2,c
 13727  0019C8  0E00               	movlw	0
 13728  0019CA  6E16               	movwf	___fldiv@a+3,c
 13729  0019CC                     i2l4974:
 13730  0019CC  8E15               	bsf	___fldiv@a+2,7,c
 13731  0019CE  D006               	goto	L7
 13732  0019D0                     i2l4978:
 13733  0019D0  0E00               	movlw	0
 13734  0019D2  6E13               	movwf	___fldiv@a,c
 13735  0019D4  0E00               	movlw	0
 13736  0019D6  6E14               	movwf	___fldiv@a+1,c
 13737  0019D8  0E00               	movlw	0
 13738  0019DA  6E15               	movwf	___fldiv@a+2,c
 13739  0019DC                     L7:
 13740  0019DC  0E00               	movlw	0
 13741  0019DE  6E16               	movwf	___fldiv@a+3,c
 13742  0019E0  5013               	movf	___fldiv@a,w,c
 13743  0019E2  1014               	iorwf	___fldiv@a+1,w,c
 13744  0019E4  1015               	iorwf	___fldiv@a+2,w,c
 13745  0019E6  1016               	iorwf	___fldiv@a+3,w,c
 13746  0019E8  A4D8               	btfss	status,2,c
 13747  0019EA  D017               	goto	i2l4992
 13748  0019EC  0E00               	movlw	0
 13749  0019EE  6E0F               	movwf	___fldiv@b,c
 13750  0019F0  0E00               	movlw	0
 13751  0019F2  6E10               	movwf	___fldiv@b+1,c
 13752  0019F4  0E00               	movlw	0
 13753  0019F6  6E11               	movwf	___fldiv@b+2,c
 13754  0019F8  0E00               	movlw	0
 13755  0019FA  6E12               	movwf	___fldiv@b+3,c
 13756  0019FC  0E80               	movlw	128
 13757  0019FE  1211               	iorwf	___fldiv@b+2,f,c
 13758  001A00  0E7F               	movlw	127
 13759  001A02  1212               	iorwf	___fldiv@b+3,f,c
 13760  001A04                     i2l4986:
 13761  001A04  501F               	movf	___fldiv@sign,w,c
 13762  001A06  1212               	iorwf	___fldiv@b+3,f,c
 13763  001A08  C00F  F00F         	movff	___fldiv@b,?___fldiv
 13764  001A0C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 13765  001A10  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 13766  001A14  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 13767  001A18  0012               	return	
 13768  001A1A                     i2l4992:
 13769  001A1A  5026               	movf	___fldiv@bexp,w,c
 13770  001A1C  A4D8               	btfss	status,2,c
 13771  001A1E  D009               	goto	i2l5000
 13772  001A20  0E00               	movlw	0
 13773  001A22  6E0F               	movwf	?___fldiv,c
 13774  001A24  0E00               	movlw	0
 13775  001A26  6E10               	movwf	?___fldiv+1,c
 13776  001A28  0E00               	movlw	0
 13777  001A2A  6E11               	movwf	?___fldiv+2,c
 13778  001A2C  0E00               	movlw	0
 13779  001A2E  6E12               	movwf	?___fldiv+3,c
 13780  001A30  0012               	return	
 13781  001A32                     i2l5000:
 13782  001A32  5027               	movf	___fldiv@aexp,w,c
 13783  001A34  C026  F017         	movff	___fldiv@bexp,??___fldiv
 13784  001A38  6A18               	clrf	(??___fldiv+1)& (0+255),c
 13785  001A3A  5E17               	subwf	??___fldiv,f,c
 13786  001A3C  0E00               	movlw	0
 13787  001A3E  5A18               	subwfb	??___fldiv+1,f,c
 13788  001A40  0E7F               	movlw	127
 13789  001A42  2417               	addwf	??___fldiv,w,c
 13790  001A44  6E20               	movwf	___fldiv@new_exp,c
 13791  001A46  0E00               	movlw	0
 13792  001A48  2018               	addwfc	??___fldiv+1,w,c
 13793  001A4A  6E21               	movwf	___fldiv@new_exp+1,c
 13794  001A4C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 13795  001A50  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 13796  001A54  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 13797  001A58  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 13798  001A5C  0E00               	movlw	0
 13799  001A5E  6E0F               	movwf	___fldiv@b,c
 13800  001A60  0E00               	movlw	0
 13801  001A62  6E10               	movwf	___fldiv@b+1,c
 13802  001A64  0E00               	movlw	0
 13803  001A66  6E11               	movwf	___fldiv@b+2,c
 13804  001A68  0E00               	movlw	0
 13805  001A6A  6E12               	movwf	___fldiv@b+3,c
 13806  001A6C  0E00               	movlw	0
 13807  001A6E  6E22               	movwf	___fldiv@grs,c
 13808  001A70  0E00               	movlw	0
 13809  001A72  6E23               	movwf	___fldiv@grs+1,c
 13810  001A74  0E00               	movlw	0
 13811  001A76  6E24               	movwf	___fldiv@grs+2,c
 13812  001A78  0E00               	movlw	0
 13813  001A7A  6E25               	movwf	___fldiv@grs+3,c
 13814  001A7C  0E00               	movlw	0
 13815  001A7E  6E27               	movwf	___fldiv@aexp,c
 13816  001A80  D028               	goto	i2l1267
 13817  001A82                     i2l5010:
 13818  001A82  5027               	movf	___fldiv@aexp,w,c
 13819  001A84  B4D8               	btfsc	status,2,c
 13820  001A86  D011               	goto	i2l5018
 13821  001A88  90D8               	bcf	status,0,c
 13822  001A8A  361B               	rlcf	___fldiv@rem,f,c
 13823  001A8C  361C               	rlcf	___fldiv@rem+1,f,c
 13824  001A8E  361D               	rlcf	___fldiv@rem+2,f,c
 13825  001A90  361E               	rlcf	___fldiv@rem+3,f,c
 13826  001A92  90D8               	bcf	status,0,c
 13827  001A94  360F               	rlcf	___fldiv@b,f,c
 13828  001A96  3610               	rlcf	___fldiv@b+1,f,c
 13829  001A98  3611               	rlcf	___fldiv@b+2,f,c
 13830  001A9A  3612               	rlcf	___fldiv@b+3,f,c
 13831  001A9C  BE25               	btfsc	___fldiv@grs+3,7,c
 13832  001A9E  800F               	bsf	___fldiv@b,0,c
 13833  001AA0  90D8               	bcf	status,0,c
 13834  001AA2  3622               	rlcf	___fldiv@grs,f,c
 13835  001AA4  3623               	rlcf	___fldiv@grs+1,f,c
 13836  001AA6  3624               	rlcf	___fldiv@grs+2,f,c
 13837  001AA8  3625               	rlcf	___fldiv@grs+3,f,c
 13838  001AAA                     i2l5018:
 13839  001AAA  5013               	movf	___fldiv@a,w,c
 13840  001AAC  5C1B               	subwf	___fldiv@rem,w,c
 13841  001AAE  5014               	movf	___fldiv@a+1,w,c
 13842  001AB0  581C               	subwfb	___fldiv@rem+1,w,c
 13843  001AB2  5015               	movf	___fldiv@a+2,w,c
 13844  001AB4  581D               	subwfb	___fldiv@rem+2,w,c
 13845  001AB6  5016               	movf	___fldiv@a+3,w,c
 13846  001AB8  581E               	subwfb	___fldiv@rem+3,w,c
 13847  001ABA  A0D8               	btfss	status,0,c
 13848  001ABC  D009               	goto	i2l5024
 13849  001ABE  8C25               	bsf	___fldiv@grs+3,6,c
 13850  001AC0  5013               	movf	___fldiv@a,w,c
 13851  001AC2  5E1B               	subwf	___fldiv@rem,f,c
 13852  001AC4  5014               	movf	___fldiv@a+1,w,c
 13853  001AC6  5A1C               	subwfb	___fldiv@rem+1,f,c
 13854  001AC8  5015               	movf	___fldiv@a+2,w,c
 13855  001ACA  5A1D               	subwfb	___fldiv@rem+2,f,c
 13856  001ACC  5016               	movf	___fldiv@a+3,w,c
 13857  001ACE  5A1E               	subwfb	___fldiv@rem+3,f,c
 13858  001AD0                     i2l5024:
 13859  001AD0  2A27               	incf	___fldiv@aexp,f,c
 13860  001AD2                     i2l1267:
 13861  001AD2  0E19               	movlw	25
 13862  001AD4  6427               	cpfsgt	___fldiv@aexp,c
 13863  001AD6  D7D5               	goto	i2l5010
 13864  001AD8  501B               	movf	___fldiv@rem,w,c
 13865  001ADA  101C               	iorwf	___fldiv@rem+1,w,c
 13866  001ADC  101D               	iorwf	___fldiv@rem+2,w,c
 13867  001ADE  101E               	iorwf	___fldiv@rem+3,w,c
 13868  001AE0  B4D8               	btfsc	status,2,c
 13869  001AE2  D011               	goto	i2l5036
 13870  001AE4  8022               	bsf	___fldiv@grs,0,c
 13871  001AE6  D00F               	goto	i2l5036
 13872  001AE8                     i2l5030:
 13873  001AE8  90D8               	bcf	status,0,c
 13874  001AEA  360F               	rlcf	___fldiv@b,f,c
 13875  001AEC  3610               	rlcf	___fldiv@b+1,f,c
 13876  001AEE  3611               	rlcf	___fldiv@b+2,f,c
 13877  001AF0  3612               	rlcf	___fldiv@b+3,f,c
 13878  001AF2  BE25               	btfsc	___fldiv@grs+3,7,c
 13879  001AF4  800F               	bsf	___fldiv@b,0,c
 13880  001AF6  90D8               	bcf	status,0,c
 13881  001AF8  3622               	rlcf	___fldiv@grs,f,c
 13882  001AFA  3623               	rlcf	___fldiv@grs+1,f,c
 13883  001AFC  3624               	rlcf	___fldiv@grs+2,f,c
 13884  001AFE  3625               	rlcf	___fldiv@grs+3,f,c
 13885  001B00  0620               	decf	___fldiv@new_exp,f,c
 13886  001B02  A0D8               	btfss	status,0,c
 13887  001B04  0621               	decf	___fldiv@new_exp+1,f,c
 13888  001B06                     i2l5036:
 13889  001B06  AE11               	btfss	___fldiv@b+2,7,c
 13890  001B08  D7EF               	goto	i2l5030
 13891  001B0A  0E00               	movlw	0
 13892  001B0C  6E27               	movwf	___fldiv@aexp,c
 13893  001B0E  AE25               	btfss	___fldiv@grs+3,7,c
 13894  001B10  D017               	goto	i2l1278
 13895  001B12  0EFF               	movlw	255
 13896  001B14  1422               	andwf	___fldiv@grs,w,c
 13897  001B16  6E17               	movwf	??___fldiv& (0+255),c
 13898  001B18  0EFF               	movlw	255
 13899  001B1A  1423               	andwf	___fldiv@grs+1,w,c
 13900  001B1C  6E18               	movwf	(??___fldiv+1)& (0+255),c
 13901  001B1E  0EFF               	movlw	255
 13902  001B20  1424               	andwf	___fldiv@grs+2,w,c
 13903  001B22  6E19               	movwf	(??___fldiv+2)& (0+255),c
 13904  001B24  0E7F               	movlw	127
 13905  001B26  1425               	andwf	___fldiv@grs+3,w,c
 13906  001B28  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 13907  001B2A  5017               	movf	??___fldiv,w,c
 13908  001B2C  1018               	iorwf	??___fldiv+1,w,c
 13909  001B2E  1019               	iorwf	??___fldiv+2,w,c
 13910  001B30  101A               	iorwf	??___fldiv+3,w,c
 13911  001B32  B4D8               	btfsc	status,2,c
 13912  001B34  D003               	goto	i2l1279
 13913  001B36                     i2u484_40:
 13914  001B36  0E01               	movlw	1
 13915  001B38  6E27               	movwf	___fldiv@aexp,c
 13916  001B3A  D002               	goto	i2l1278
 13917  001B3C                     i2l1279:
 13918  001B3C  B00F               	btfsc	___fldiv@b,0,c
 13919  001B3E  D7FB               	goto	i2u484_40
 13920  001B40                     i2l1278:
 13921  001B40  5027               	movf	___fldiv@aexp,w,c
 13922  001B42  B4D8               	btfsc	status,2,c
 13923  001B44  D01F               	goto	i2l5056
 13924  001B46  0E01               	movlw	1
 13925  001B48  260F               	addwf	___fldiv@b,f,c
 13926  001B4A  0E00               	movlw	0
 13927  001B4C  2210               	addwfc	___fldiv@b+1,f,c
 13928  001B4E  2211               	addwfc	___fldiv@b+2,f,c
 13929  001B50  2212               	addwfc	___fldiv@b+3,f,c
 13930  001B52  A012               	btfss	___fldiv@b+3,0,c
 13931  001B54  D017               	goto	i2l5056
 13932  001B56  C00F  F017         	movff	___fldiv@b,??___fldiv
 13933  001B5A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13934  001B5E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13935  001B62  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13936  001B66  341A               	rlcf	??___fldiv+3,w,c
 13937  001B68  321A               	rrcf	??___fldiv+3,f,c
 13938  001B6A  3219               	rrcf	??___fldiv+2,f,c
 13939  001B6C  3218               	rrcf	??___fldiv+1,f,c
 13940  001B6E  3217               	rrcf	??___fldiv,f,c
 13941  001B70  C017  F00F         	movff	??___fldiv,___fldiv@b
 13942  001B74  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13943  001B78  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13944  001B7C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13945  001B80  4A20               	infsnz	___fldiv@new_exp,f,c
 13946  001B82  2A21               	incf	___fldiv@new_exp+1,f,c
 13947  001B84                     i2l5056:
 13948  001B84  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13949  001B86  D010               	goto	i2l5060
 13950  001B88  5021               	movf	___fldiv@new_exp+1,w,c
 13951  001B8A  E103               	bnz	i2u488_40
 13952  001B8C  2820               	incf	___fldiv@new_exp,w,c
 13953  001B8E  A0D8               	btfss	status,0,c
 13954  001B90  D00B               	goto	i2l5060
 13955  001B92                     i2u488_40:
 13956  001B92  0E00               	movlw	0
 13957  001B94  6E21               	movwf	___fldiv@new_exp+1,c
 13958  001B96  6820               	setf	___fldiv@new_exp,c
 13959  001B98  0E00               	movlw	0
 13960  001B9A  6E0F               	movwf	___fldiv@b,c
 13961  001B9C  0E00               	movlw	0
 13962  001B9E  6E10               	movwf	___fldiv@b+1,c
 13963  001BA0  0E00               	movlw	0
 13964  001BA2  6E11               	movwf	___fldiv@b+2,c
 13965  001BA4  0E00               	movlw	0
 13966  001BA6  6E12               	movwf	___fldiv@b+3,c
 13967  001BA8                     i2l5060:
 13968  001BA8  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13969  001BAA  D005               	goto	i2u489_40
 13970  001BAC  5021               	movf	___fldiv@new_exp+1,w,c
 13971  001BAE  E111               	bnz	i2l5064
 13972  001BB0  0420               	decf	___fldiv@new_exp,w,c
 13973  001BB2  B0D8               	btfsc	status,0,c
 13974  001BB4  D00E               	goto	i2l5064
 13975  001BB6                     i2u489_40:
 13976  001BB6  0E00               	movlw	0
 13977  001BB8  6E21               	movwf	___fldiv@new_exp+1,c
 13978  001BBA  0E00               	movlw	0
 13979  001BBC  6E20               	movwf	___fldiv@new_exp,c
 13980  001BBE  0E00               	movlw	0
 13981  001BC0  6E0F               	movwf	___fldiv@b,c
 13982  001BC2  0E00               	movlw	0
 13983  001BC4  6E10               	movwf	___fldiv@b+1,c
 13984  001BC6  0E00               	movlw	0
 13985  001BC8  6E11               	movwf	___fldiv@b+2,c
 13986  001BCA  0E00               	movlw	0
 13987  001BCC  6E12               	movwf	___fldiv@b+3,c
 13988  001BCE  0E00               	movlw	0
 13989  001BD0  6E1F               	movwf	___fldiv@sign,c
 13990  001BD2                     i2l5064:
 13991  001BD2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13992  001BD6  A026               	btfss	___fldiv@bexp,0,c
 13993  001BD8  D002               	goto	i2l5070
 13994  001BDA  8E11               	bsf	___fldiv@b+2,7,c
 13995  001BDC  D001               	goto	i2l5072
 13996  001BDE                     i2l5070:
 13997  001BDE  9E11               	bcf	___fldiv@b+2,7,c
 13998  001BE0                     i2l5072:
 13999  001BE0  90D8               	bcf	status,0,c
 14000  001BE2  3026               	rrcf	___fldiv@bexp,w,c
 14001  001BE4  6E12               	movwf	___fldiv@b+3,c
 14002  001BE6  D70E               	goto	i2l4986
 14003  001BE8                     __end_of___fldiv:
 14004                           	opt callstack 0
 14005                           
 14006                           	psect	rparam
 14007  0000                     
 14008                           	psect	temp
 14009  00006E                     btemp:
 14010                           	opt callstack 0
 14011  00006E                     	ds	1
 14012  0000                     int$flags	set	btemp
 14013  0000                     wtemp8	set	btemp+1
 14014  0000                     ttemp5	set	btemp+1
 14015  0000                     ttemp6	set	btemp+4
 14016  0000                     ttemp7	set	btemp+8
 14017                           tosu	equ	0xFFF
 14018                           tosh	equ	0xFFE
 14019                           tosl	equ	0xFFD
 14020                           stkptr	equ	0xFFC
 14021                           pclatu	equ	0xFFB
 14022                           pclath	equ	0xFFA
 14023                           pcl	equ	0xFF9
 14024                           tblptru	equ	0xFF8
 14025                           tblptrh	equ	0xFF7
 14026                           tblptrl	equ	0xFF6
 14027                           tablat	equ	0xFF5
 14028                           prodh	equ	0xFF4
 14029                           prodl	equ	0xFF3
 14030                           indf0	equ	0xFEF
 14031                           postinc0	equ	0xFEE
 14032                           postdec0	equ	0xFED
 14033                           preinc0	equ	0xFEC
 14034                           plusw0	equ	0xFEB
 14035                           fsr0h	equ	0xFEA
 14036                           fsr0l	equ	0xFE9
 14037                           wreg	equ	0xFE8
 14038                           indf1	equ	0xFE7
 14039                           postinc1	equ	0xFE6
 14040                           postdec1	equ	0xFE5
 14041                           preinc1	equ	0xFE4
 14042                           plusw1	equ	0xFE3
 14043                           fsr1h	equ	0xFE2
 14044                           fsr1l	equ	0xFE1
 14045                           bsr	equ	0xFE0
 14046                           indf2	equ	0xFDF
 14047                           postinc2	equ	0xFDE
 14048                           postdec2	equ	0xFDD
 14049                           preinc2	equ	0xFDC
 14050                           plusw2	equ	0xFDB
 14051                           fsr2h	equ	0xFDA
 14052                           fsr2l	equ	0xFD9
 14053                           status	equ	0xFD8


Data Sizes:
    Strings     560
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256     92     152
    BANK2           256    108     236
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_62(CODE[10]), STR_61(CODE[11]), STR_60(CODE[11]), STR_59(CODE[12]), 
		 -> STR_58(CODE[12]), STR_57(CODE[10]), STR_56(CODE[10]), STR_55(CODE[13]), 
		 -> STR_54(CODE[8]), STR_53(CODE[3]), STR_52(CODE[4]), STR_51(CODE[17]), 
		 -> STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), 
		 -> STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), 
		 -> STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), 
		 -> STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), 
		 -> STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), 
		 -> STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), 
		 -> STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), 
		 -> STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), 
		 -> STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), 
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1624_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_62(CODE[10]), STR_61(CODE[11]), STR_60(CODE[11]), STR_59(CODE[12]), 
		 -> STR_58(CODE[12]), STR_57(CODE[10]), STR_56(CODE[10]), STR_55(CODE[13]), 
		 -> STR_54(CODE[8]), STR_53(CODE[3]), STR_52(CODE[4]), STR_51(CODE[17]), 
		 -> STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), 
		 -> STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), 
		 -> STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), 
		 -> STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), 
		 -> STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), 
		 -> STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), 
		 -> STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), 
		 -> STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), 
		 -> STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), 
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_62(CODE[10]), STR_61(CODE[11]), STR_60(CODE[11]), STR_59(CODE[12]), 
		 -> STR_58(CODE[12]), STR_57(CODE[10]), STR_56(CODE[10]), STR_55(CODE[13]), 
		 -> STR_54(CODE[8]), STR_53(CODE[3]), STR_52(CODE[4]), STR_51(CODE[17]), 
		 -> STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), 
		 -> STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), 
		 -> STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), 
		 -> STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), 
		 -> STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), 
		 -> STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), 
		 -> STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), 
		 -> STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), 
		 -> STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), 
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_62(CODE[10]), STR_61(CODE[11]), STR_60(CODE[11]), STR_59(CODE[12]), 
		 -> STR_58(CODE[12]), STR_57(CODE[10]), STR_56(CODE[10]), STR_55(CODE[13]), 
		 -> STR_54(CODE[8]), STR_53(CODE[3]), STR_52(CODE[4]), STR_51(CODE[17]), 
		 -> STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), 
		 -> STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), 
		 -> STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), 
		 -> STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), 
		 -> STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), 
		 -> STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), 
		 -> STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), 
		 -> STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), 
		 -> STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), 
		 -> STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), 
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _actuators_main->_stepper
    _actuators_main->_stepper2
    _actuators_main->_stepper2_back
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper2

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  295511
                                             90 BANK1      2     2      0
                                              0 BANK2    108   108      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   47556
                                            122 BANK0      4     2      2
                                              0 BANK1     10    10      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23143
                                            121 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25094
                                            121 BANK0      6     2      4
                                              0 BANK1      6     6      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24499
                                            121 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       8     4      4  142764
                                             12 BANK1      8     4      4
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   47114
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47399
                                            125 BANK0      2     0      2
                                              0 BANK1     12    12      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   24039
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23714
                                            121 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0     136
                                              3 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26850
                                            121 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   22985
                                            109 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     6C      EC       9       92.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5C      98       7       59.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     271      34        0.0%
DATA                 0      0     271       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 07 05:25:59 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 016D                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             ___wmul@multiplicand 0082  
                   __CFG_BORV$3 000000                 ??_number_deploy 00FD               stepper2@direction 010B  
                 servoRotate0@i 0081                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                     __CFG_OSC$HS 000000  
           __end_of_system_init 3928                             l112 3740                             l117 3642  
               _ultrasonic_main 2476                             l433 25CA                             l710 33A6  
                           l526 1008                             l616 1E4E                             l618 1E56  
                           l580 31BA                             l591 1C5C                             l488 0290  
                           l593 1C64                             _GIE 007F97                    __CFG_CPB$OFF 000000  
                           _RB2 007C0A                             _RC1 007C11                             _RB3 007C0B  
                           _RC2 007C12                             _RB4 007C0C                             _RD0 007C18  
                           _RB5 007C0D                             _RD1 007C19                             _RB6 007C0E  
                           _RB7 007C0F                             _ISR 0008          __size_of_stepper2_back 00A0  
                           _abs 38C2                             _cnt 0175                             _pad 318A  
                           _min 2C4C                             _sum 0038                  stepper2_back@i 0104  
                           wreg 000FE8                    __CFG_LVP$OFF 000000                            ?_ISR 0001  
                  ___fltol@exp1 0031                    __CFG_WDT$OFF 000000                            l1103 3570  
                          ?_abs 0092                            l1358 38EC                            l1456 37C8  
                          l1389 28A6                            l7004 3358                            l7006 3364  
                          ?_pad 0094                            l7016 3398                            l6320 31B2  
                          l6402 274A                            l6330 320A                            l6322 31C4  
                          l7210 2DAA                            l6316 31A2                            l7108 3280  
                          l7124 2E7C                            l7220 2DDE                            l6430 2BEE  
                          l6422 2B92                            l6414 2B54                            l6326 31DE  
                          l7134 2ECC                            l7230 2E12                            l8102 114E  
                          l6600 27DA                            l6424 2BA6                            l6512 1E06  
                          l7144 2F10                            l7128 2E94                            l7312 2C82  
                          l7240 2E46                            l8112 11B4                            l8008 0E60  
                          l8120 11DE                            l6450 380A                            l6610 2846  
                          l6602 27E2                            l6370 2650                            l6434 2C04  
                          l6418 2B78                            l7314 2C8C                            l8106 115E  
                          l8018 0E90                            l6604 27E8                            l6292 3874  
                          l6508 1DEE                            l6460 1C40                            l6540 1EC0  
                          l6532 1E9E                            l7148 2F28                            l7172 3144  
                          l7404 2A4A                            l7252 22DE                            l8116 11BA  
                          l8052 0F6E                            l8060 0FA6                            l8036 0F1C  
                          ?_min 0080                            l6606 2810                            l6382 269E  
                          l6438 2C2A                            l6278 34C6                            l6526 1E6C  
                          l7094 3244                            l7350 32EA                            l7326 2D3A  
                          l7510 2502                            l8142 127A                            l8070 0FE8  
                          l6384 26B2                            l6376 2678                            l6288 385C  
                          l6296 39C8                            l6712 15D6                            l7352 32F2  
                          l7344 32D4                            l7328 2D3E                            l7504 24EA  
                          l8064 0FCA                            l6394 270E                            l6298 39CE  
                          l6474 1C7E                            l6554 1F4E                            l6562 1FC6  
                          l6706 159A                            l6650 12EA                            l6642 12E2  
                          l6634 12CC                            l6722 15FA                            l7370 332A  
                          l7362 3312                            l7338 32C4                            l7602 2102  
                          l7290 23FC                            l7282 23C8                            l7274 2384  
                          l7266 2350                            l7258 230C                            l7530 2574  
                          l7506 24F2                            l8058 0F8C                            l7380 353A  
                          l6716 15E2                            l6636 12CE                            l6660 133A  
                          l6900 1832                            l7612 214C                            l6398 2724  
                          l6478 1C8E                            l6654 12EE                            l6646 12E6  
                          l6638 12DE                            l6742 36A0                            l6806 16A8  
                          l6822 1714                            l7366 331C                            l7614 2156  
                          l7198 2D70                            l7534 25A2                            l7542 25BA  
                          l8094 10F2                            l6584 2780                            l6488 1D88  
                          l6672 13A6                            l6744 36C8                            l7712 015E  
                          l7480 2B1C                            l7386 3562                            l7378 352E  
                          l6594 27CA                            l6586 2784                            l6578 203C  
                          l6674 13C4                            l6658 12F8                            l7626 21A2  
                          l7298 2440                            l8098 1102                            l6692 14CC  
                          l6676 13D2                            l7900 0816                            l7804 0378  
                          l7740 01EA                            l7644 226E                            l7548 25D0  
                          l6942 18CA                            l6862 17A8                            l7762 0270  
                          l7850 06A6                            l7682 00BC                            l7594 20BC  
                          l7828 051A                            l7772 02B0                            l6980 194A  
                          l7588 2082                            l7854 06CC                            l7598 20EE  
                          l7882 0780                            l7788 0310                            l7878 0778  
                          l7888 079A                            l7992 0E06                            l7984 0DD2  
                          l7898 0808                            STR_1 FFD4                            STR_2 FF05  
                          STR_3 FF6F                            STR_4 FFD4                            STR_5 FFCA  
                          STR_6 FFEF                            STR_7 FEDD                            STR_8 FFD4  
                          STR_9 FFF5                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            _LATD 000F8C                            _LATE 000F8D  
                          u7010 1F2C                            u7020 1F2E                            _RBIE 007F93  
                          u7120 27C6                            u7040 1FA2                            u8000 256C  
                          _RBIF 007F90                            u7050 1FD8                            u8010 2584  
                          u7140 2876                            u6500 38D2                            u8100 2122  
                          u7045 1F90                            u7150 2878                            u6430 34BE  
                          u7070 1FFA                            u7230 140C                            u8110 2132  
                          u8030 25D0                            u6415 3A16                            u7071 1FF8  
                          u6416 3A18                            u6600 37B2                            u7080 2008  
                          u7240 140E                            u8120 2142                            u6450 3506  
                          u7090 200C                            u7250 141A                            u6620 39B6  
                          u7340 3784                            u8140 216E                            u8060 20B2  
                          u6630 39B8                            u6550 3984                            u7270 144E  
                          u7350 368C                            u7510 326A                            u8150 217E  
                          u8070 20E4                            u9007 2FE8                            u6800 1C14  
                          u6560 3986                            u6480 3952                            u8160 218E  
                          u9017 301C                            u6570 38BA                            u6490 3954  
                          u7290 1500                            u7530 32A6                            u8170 219E  
                          u8090 2112                            u9107 1678                            u9027 2A10  
                          u7460 3368                            u6740 2BAA                            u6900 1DCC  
                          u6580 38BC                            u8340 02AC                            u7700 232C  
                          u6661 267E                            u9117 168C                            u9037 2A3C  
                          u6830 1C52                            u6590 37B0                            u8430 081C  
                          u8190 227E                            u7710 2360                            u9207 176A  
                          u9127 16A0                            u9047 2A9E                            u6680 26B6  
                          u6920 1DD8                            u7800 2460                            u7720 2370  
                          u7640 2E5C                            u9217 1784                            u9137 16BC  
                          u9057 2AC8                            u6850 1C78                            u8370 038A  
                          u8290 0200                            u7810 2C72                            u7730 2394  
                          u7650 22B0                            u9307 1892                            u9227 179E  
                          u9147 16D0                            u9067 3106                            u6780 3806  
                          u6860 1D98                            u8380 039A                            u7580 316C  
                          u7740 23A4                            u7660 22C0                            u7485 35AC  
                          u8381 0398                            u9317 18AA                            u9237 17C0  
                          u9157 16E4                            u9077 2EE0                            u6790 1C12  
                          u6950 1E42                            u7910 32F6                            u7750 23D8  
                          u7670 22EE                            u7590 2D6E                            u7495 3A66  
                          u9407 365A                            u9327 18C2                            u9247 17DA  
                          u9167 16F8                            u9087 1650                            u7496 3A68  
                          u6880 1DBA                            u7760 23E8                            u7680 22FE  
                          u8640 0F46                            u8560 0DBC                            u6881 1DB8  
                          u9417 366E                            u9337 18E2                            u9257 17F4  
                          u9177 170C                            u9097 1664                            u6890 1DC8  
                          u6970 1EBC                            u7850 2CFA                            u7770 240C  
                          u7690 231C                            u8650 0F56                            u9507 0328  
                          u9427 374C                            u9347 18FA                            u9267 180E  
                          u9187 1736                            u8555 0DAA                            u6980 1EF2  
                          u7860 2D20                            u7780 241C                            u8660 0FA6  
                          u8580 0DEE                            u9517 03B4                            u9437 3758  
                          u9357 1912                            u9277 1828                            u9197 1750  
                          u8581 0DEC                            u8557 0DAC                            u7950 353E  
                          u6990 1EF4                            u7790 2450                            u8670 0FB8  
                          u9527 0540                            u9447 3766                            u9367 192A  
                          u9287 1862                            u8807 1214                            u8727 0E1E  
                          u8591 0E04                            u8575 0DDA                            u8680 1002  
                          u9537 070E                            u9457 007A                            u9377 1942  
                          u9297 187A                            u8817 1248                            u8737 0E48  
                          u8577 0DDC                            u9547 3444                            u9467 011E  
                          u9387 3A32                            u8907 2DBA                            u8827 126C  
                          u8747 0E72                            u9557 345E                            u9477 0192  
                          u9397 3648                            u8917 2DD0                            u8837 2488  
                          u8757 0EA6                            u9567 3470                            u9487 0228  
                          u8927 2DEE                            u8847 24B2                            u8767 0ED8  
                          u9577 3494                            u9497 02C8                            u8937 2E04  
                          u8857 253A                            u8777 10AA                            u9587 39FC  
                          u8947 2E22                            u8867 25DE                            u8787 11C6  
                          u9597 3A06                            u8957 2E38                            u8877 260A  
                          u8797 11F0                            u8967 2296                            u8887 2D86  
                          u8977 221A                            u8897 2D9C                            u8987 224E  
                          u8997 2F8C                            _Pole 0200              main@poles_detected 02E6  
                   main@t_count 02E0                            abs@a 0092                            _data 005E  
                          _echo 0826                            _dbuf 0178                            _disp 016F  
                          _atoi 276C                            _main 0D6A                            _dtoa 1BE8  
                          _meas 0050                            _keys FDB7                            _send 006D  
                          _tick 0056                            _prec 004C                            _sens 0058  
                          _temp 00FF                            _time 0164                            _nout 0048  
                          pad@i 009B                            pad@p 0098                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 009D                            fsr2l 000FD9                            _trig 2D5C  
                          _sumf 0040                            btemp 006E                            min@i 0089  
                          _xtoa 1E30                            prodh 000FF4                            prodl 000FF3  
                          start 000E         __size_of_actuators_main 0136                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 0020                 __end_of_UI_main 0826                 servoRotate180@i 0081  
                 __CFG_MCLRE$ON 000000                    main@act_done 02DA                    ___param_bank 000000  
                         ??_ISR 0036                           ??_abs 0094                           ??_pad 009A  
                         ??_min 0084           actuators_main@act_cnt 0112           I2C_Master_Read@ackBit 0081  
              ?_I2C_Master_Init 008D                ?_I2C_Master_Read 0001                ?_I2C_Master_Wait 0001  
              ?_I2C_Master_Stop 0001                           ?_echo 0001                   ___fltol@sign1 0030  
               __end_of___aodiv 276C                           ?_atoi 0087                           ?_main 0001  
                         ?_dtoa 009F                 __end_of___aomod 2C4C                 __end_of___fldiv 1BE8  
               __end_of___awdiv 3334                           STR_10 FE02                           STR_11 FF7A  
                         STR_20 FF59                           STR_12 FE56                           STR_13 FF84  
                         STR_21 FF1E                           STR_14 FE66                           STR_22 FE46  
                         STR_30 FDE0                           STR_31 FFDE                           STR_23 FFC0  
                         STR_15 FF8E                           STR_32 FECC                           STR_24 FF42  
                         STR_16 FE13                           STR_40 FDCE                           STR_33 FE25  
                         STR_17 FF98                           STR_41 FE85                           STR_25 FE76  
                         STR_34 FFDE                           STR_26 FFC0                           STR_18 FFE7  
                         STR_42 FF36                           STR_50 FEB2                           STR_51 FDE0  
                         STR_43 FE35                           STR_35 FECC                           STR_27 FF42  
                         STR_19 FEEB                           STR_28 FE76                           STR_44 FDCE  
                         STR_52 FFFA                           STR_60 FF4E                           STR_36 FE24  
                         STR_53 FECC                           STR_45 FE85                           STR_61 FF64  
                         STR_37 FECF                           STR_29 FE94                           STR_46 FF36  
                         STR_54 FEFD                           STR_62 FFAC                           STR_38 FEC1  
                         STR_55 FEF8                           STR_39 FE35                           STR_47 FDF1  
                         STR_56 FFB6                           STR_48 FF12                           STR_57 FFA2  
                         STR_49 FEA3                           STR_58 FF1E                           STR_59 FF2A  
               __end_of___fltol 30EA                           ?_trig 0001                 __end_of___lldiv 33B8  
               ___awdiv@divisor 0082                           ?_xtoa 009F                           _T1CON 000FCD  
               __end_of___llmod 3582                           i2l365 3844                           i2l392 0D68  
               ___awdiv@counter 0084                    vfpfcnvrt@fmt 00C8                    vfpfcnvrt@llu 00D8  
                         _TMR1H 000FCF                           _TMR1L 000FCE                           _PORTB 000F81  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                 __end_of_lcdInst 3B4C                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                 __end_of_initLCD 34AC                  __CFG_EBTRB$OFF 000000  
                         _brake 2F5A                           _flags 004E                           _dists 0069  
                         _fputc 34AC                 __end_of_isalpha 38C2                           _fputs 3850  
               __end_of_isdigit 39BE                           _servo 3A1A                           atoi@n 0094  
                         pad@fp 0094                           atoi@s 0087                           _width 004A  
                         _state 0171                           _putch 3B2C                           _start 36E4  
                         main@i 02D6                           main@k 02DE                           dtoa@d 00A1  
                         dtoa@i 00C1                           dtoa@n 00B9                           dtoa@p 00B3  
                         dtoa@s 00B7                           dtoa@w 00B5                 __end_of_islower 395A  
               __end_of_isspace 3812                 __end_of_isupper 398C                           tablat 000FF5  
               send_nibble@data 0081                           plusw2 000FDB                 __end_of_pulse_e 3A1A  
                         ttemp5 006F                           ttemp6 0072                           ttemp7 0076  
                         status 000FD8     I2C_Master_Read@receivedByte 0082                 __end_of_stepper 32AE  
                         wtemp8 006F                           xtoa@c 00C4                           xtoa@d 00A1  
                         xtoa@i 00C2                           xtoa@n 00BA                           xtoa@p 00B6  
                         xtoa@w 00B8                           xtoa@x 00A9                   _stepper2_back 30EA  
               __end_of_toupper 37D2                ??_servoRotate180 0080              __size_ofi2___awdiv 0084  
                __CFG_PBADEN$ON 000000                    _toupper$1676 008C                 __initialization 35E2  
                  __end_of_echo 0D6A                     _system_init 38F6                    __end_of_atoi 28B0  
                  __end_of_main 1286                    __end_of_dtoa 1E30                    __end_of_keys FDC8  
       __end_of_ultrasonic_main 2622                    __end_of_trig 2E5E                    __end_of_xtoa 2066  
                        ??_echo 0032                          ??_atoi 0089                          ??_main 015A  
                        ??_dtoa 00A9                          ??_trig 0080                          ??_xtoa 00AA  
                 __activetblptr 000002            number_deploy@t_count 0104               ?_I2C_Master_Start 0001  
             ?_I2C_Master_Write 0081            number_deploy@tires_t 0100              ??_I2C_Master_Start 0081  
                        ?_brake 0001                          _ADCON1 000FC1              ??_I2C_Master_Write 0083  
                  ?_send_nibble 0001                          ?_fputc 0084                ___llmod@dividend 0080  
                        ?_fputs 008D                ___awdiv@dividend 0080                          ?_servo 0001  
                        ?_putch 0001                          ?_start 0001                          _INT1IE 007F83  
                        _INT1IF 007F80              stepper2@steps2_adj 00FD                          i2l1345 296C  
                        i2l1338 28EE                          i2l1267 1AD2                          i2l1278 1B40  
                        i2l1279 1B3C                          i2l5000 1A32                          i2l5010 1A82  
                        i2l5030 1AE8                          i2l5024 1AD0                          i2l5200 292E  
                        i2l5018 1AAA                          i2l5130 304E                          i2l5210 299E  
                        i2l5202 2954                          i2l5060 1BA8                          i2l5036 1B06  
                        i2l5070 1BDE                          i2l5150 30A8                          i2l5072 1BE0  
                        i2l5064 1BD2                          i2l5056 1B84                          i2l5208 2992  
                        i2l5400 0958                          i2l5146 3098                          i2l5226 29DE  
                        i2l5250 33F2                          i2l5402 0972                          i2l5164 30D8  
                        i2l5156 30B0                          i2l5252 33FA                          i2l5244 33DC  
                        i2l5412 09F2                          i2l5158 30BC                          i2l5190 28FE  
                        i2l5270 3432                          i2l5262 341A                          i2l5238 33CC  
                        i2l5502 0D4E                          i2l5266 3424                          i2l5434 0AAA  
                        i2l5196 291C                          i2l5428 0A4E                          i2l5436 0AC4  
                        i2l5198 2922                          i2l5462 0BA0                          i2l5446 0B44  
                        i2l5470 0C16                          i2l5480 0C96                          i2l5394 0900  
                        i2l5378 08A4                          i2l5468 0BFC                          i2l5496 0CF2  
                        i2l4954 198C                          i2l4974 19CC                          i2l4958 1990  
                        i2l4992 1A1A                          i2l4986 1A04                          i2l4978 19D0  
                        i2l5968 3832                       ??_UI_main 0100                   vfpfcnvrt@done 00E1  
                        _TMR1ON 007E68                  ?_stepper2_back 00FD                          _SSPADD 000FC8  
                        _SSPBUF 000FC9                __end_of___xxtofl 29F0     number_deploy@poles_detected 00FB  
                __CFG_XINST$OFF 000000                    vfprintf@cfmt 00EB                       ??___aodiv 0090  
                     ??___aomod 0090                          ___wmul 3A98                       ??___fldiv 0017  
                     ??___awdiv 0084                       ??___fltol 002C                       ??___lldiv 0088  
                     ??___llmod 0088                          clear_0 3608                          clear_1 3614  
                        clear_2 3624                ___awdiv@quotient 0086                       ??_lcdInst 0083  
                        _printf 3A70                          pad@buf 0096                          dtoa@fp 009F  
                        _strlen 39BE                  i2___awdiv@sign 0006                       ??_initLCD 0084  
                        fputc@c 0084                          fputs@c 0091                          fputs@i 0092  
                  __pdataCOMRAM 0069                          fputs@s 008D                       ??_isalpha 0082  
                     ??_isdigit 0082               __end_ofi2___awdiv 343C                       ??_islower 0082  
                  __mediumconst FDB6                       ??_isspace 0082                          tblptrh 000FF7  
                     ??_isupper 0082                          tblptrl 000FF6                          tblptru 000FF8  
              __end_of_vfprintf 36E4                       ??_pulse_e 0080                __end_of_stepper2 2F5A  
ultrasonic_main@min_us_dist_914 0108                       ??_stepper 00FF                          xtoa@fp 009F  
                     ??_toupper 0088                    ___xxtofl@arg 000B           pulse_e@interruptState 0080  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                      __accesstop 0080  
       __end_of__initialization 362A                  _actuators_main 29F0                   ___rparam_used 000001  
                    ___fltol@f1 0028                    stepper@i_376 0104              __size_of_backwards 0026  
           full_drive@direction 00FC                  __pcstackCOMRAM 0001                    stepper@stack 00FD  
              ?_ultrasonic_main 00FA                   __end_of_brake 3030                   __end_of_fputc 351A  
                 __end_of_fputs 388C                   __end_of_servo 3A46                   __end_of_putch 3B3C  
                 __end_of_start 3736                 _key_was_pressed 0177           number_deploy@avg_dist 00F9  
                       ??_brake 00F9                         ??_fputc 0088                         ??_fputs 0091  
                       ??_servo 0083                         ??_putch 0083                         ??_start 0095  
               ??_stepper2_back 0100                      __pbssBANK0 00FF                      __pbssBANK1 015C  
                    __pbssBANK2 0200          __end_of_actuators_main 2B26                         ?___wmul 0080  
            __size_of_send_byte 0018                         ?_printf 00ED          stepper2_back@direction 0101  
                       ?_strlen 0080           __end_of_number_deploy 2288                       ?___xxtofl 0001  
             __end_of_backwards 3AE6              __size_of_vfpfcnvrt 03AA                      _dist_final 0250  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _SSPSTAT 000FC7  
                       _UI_main 0012            __size_of_send_nibble 001A                 ?_actuators_main 010C  
                       __Hparam 0000                         __Lparam 0000                    ?_system_init 0001  
                       ___aodiv 2622                         ___aomod 2B26                         ___fldiv 1960  
                       ___awdiv 32AE                         ___fltol 3030                         ___lldiv 3334  
               __size_of___wmul 0028                         ___llmod 351A                       ?_vfprintf 00E5  
                     ?_stepper2 00FD                 __CFG_STVREN$OFF 000000                         __pcinit 35E2  
                    _full_drive 1630                         __ramtop 1000                         _lcdInst 3B3C  
                       __ptext0 0D6A                         __ptext1 2476                         __ptext2 2D5C  
                       __ptext3 2288                         __ptext4 2C4C                         __ptext5 36E4  
                       __ptext6 2066                         __ptext7 32AE                         __ptext8 2F5A  
                       __ptext9 3AC0                 __size_of_printf 0028                 __size_of_strlen 002E  
                       _initLCD 343C                    __size_of_ISR 3848                         _counter 0060  
                  __size_of_abs 0034                    __size_of_pad 009C                         _isalpha 388C  
                  __size_of_min 0110                         _isdigit 398C                      ??___xxtofl 0005  
                       _islower 3928                         _isspace 37D2                         _isupper 395A  
      __size_of_I2C_Master_Init 0060        __size_of_I2C_Master_Read 002A        __size_of_I2C_Master_Wait 0014  
      __size_of_I2C_Master_Stop 0008                 _prev_dist_final 015C                         _pressed 016B  
                       atoi@neg 008D                         _pulse_e 39EC                         _stepper 3226  
                __pintcode_body 3812                         _toupper 3786            end_of_initialization 362A  
                       min@size 0082             main@arduino_stopped 02DB           __end_of_LCD_SIZE_HORZ FDCD  
             __end_of_send_byte 3B18           __end_of_LCD_SIZE_VERT FDCC                         fputc@fp 0086  
                 __Lmediumconst FDB6                         int_func 3812                         fputs@fp 008F  
     __size_of_I2C_Master_Start 0008       __size_of_I2C_Master_Write 000A                 ___lldiv@divisor 0084  
               ___lldiv@counter 008C               __end_of_vfpfcnvrt 1630                   ?_servoRotate0 0001  
                main@steps2_adj 02D4                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_vfprintf 00EB                      ??_stepper2 0100                         strlen@a 0082  
                       strlen@s 0080                       _PORTAbits 000F80                      _print_echo 2288  
                 stepper2@i_384 0107                   ___xxtofl@sign 0009                       _TRISAbits 000F92  
                     _TRISBbits 000F93                       _TRISCbits 000F94                     ___fldiv@grs 0022  
                   ___fldiv@rem 001B                      main@i_1027 02E4                      main@i_1019 02D8  
                     i2___awdiv 33B8     ultrasonic_main@step2_offset 0104                   send_byte@data 0082  
            i2___awdiv@dividend 0001           UI_main@poles_detected 00FB                  ??_servoRotate0 0080  
   number_deploy@tires_detected 0102                     vfpfcnvrt@ap 00CA                     vfpfcnvrt@fp 00C6  
                   vfpfcnvrt@ll 00D0                  __end_of___wmul 3AC0                     ?_full_drive 00F9  
       __size_of_servoRotate180 0056                   __pidataCOMRAM 3B66                  __end_of_printf 3A98  
                __end_of_strlen 39EC             start_initialization 35E2                      min@minimum 0087  
            i2___awdiv@quotient 0007                     __end_of_ISR 3850                     __end_of_abs 38F6  
                   __end_of_pad 3226                     __end_of_min 2D5C           stepper2@count_stepper 0109  
                    ?i2___awdiv 0001               ??_I2C_Master_Init 0091               ??_I2C_Master_Read 0081  
             ??_I2C_Master_Wait 0080               ??_I2C_Master_Stop 0081               main@prev_avg_dist 02E8  
                _poles_detected 0052                 ___llmod@divisor 0084                 ___llmod@counter 0088  
                  UI_main@t_dep 00F9                     vfprintf@fmt 00E7                        ??___wmul 0084  
      I2C_Master_Init@clockFreq 008D                __CFG_LPT1OSC$OFF 000000            __size_of_system_init 0032  
                      ??_printf 00F5                        ??_strlen 0082                     ?_print_echo 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F        __size_of_ultrasonic_main 01AC  
                   __pbssCOMRAM 0038                   __pcstackBANK0 0080                   __pcstackBANK1 0100  
                 __pcstackBANK2 0280                ___aodiv@dividend 0080                ??_actuators_main 0110  
             __size_of___xxtofl 0140                       _backwards 3AC0                        ?_UI_main 00F9  
         __end_of_stepper2_back 318A             __size_of_full_drive 0330                       _atoi$1584 008F  
                     _atoi$1585 0093                       _atoi$1586 0091                _I2C_Master_Start 3B5E  
              _I2C_Master_Write 3B4C                       _dtoa$1100 00B1               __CFG_CCP2MX$PORTC 000000  
                     __pintcode 0008                   __pmediumconst FDB6                        ?___aodiv 0080  
                      ?___aomod 0080                        ?___fldiv 000F                        ?___awdiv 0080  
              ___aodiv@quotient 0092                        ?___fltol 0028                        ?___lldiv 0080  
                      ?___llmod 0080                        ?_lcdInst 0001               __size_of_vfprintf 0056  
             __size_of_stepper2 00FC            full_drive@stepper_no 00F9                        ?_initLCD 0001  
                      ?_isalpha 0080                        ?_isdigit 0080                        ?_islower 0080  
                      ?_isspace 0080                        ?_isupper 0080            __end_of_servoRotate0 3786  
                 ??_send_nibble 0081                        ?_pulse_e 0001                  __size_of_brake 00D6  
                   ??i2___awdiv 0005                        ?_stepper 00FD                  __size_of_fputc 006E  
                __size_of_fputs 003C                        ?_toupper 0086                  __size_of_servo 002C  
                    ?_backwards 0001                  __size_of_putch 0010                  __size_of_start 0052  
                ___wmul@product 0084                        _LATAbits 000F89                        _LATBbits 000F8A  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      UI_main@i 0159                main@pole_cl_dist 02D2                       _send_byte 3B00  
           __size_of_print_echo 01EE          __size_of_number_deploy 0222                  _LCD_LINE1_ADDR FDCA  
                _LCD_LINE2_ADDR FDCD                  _LCD_LINE3_ADDR FDC9                  _LCD_LINE4_ADDR FDC8  
                      i2u502_40 30C2                        i2u520_40 33FE                        i2u513_40 29A8  
                      i2u615_40 383C                        i2u528_40 08B4                        i2u529_40 08C4  
                      i2u538_40 0A02                        i2u539_40 0A12                        i2u484_40 1B36  
                      i2u548_40 0B54                        i2u549_40 0B64                        i2u558_40 0CA6  
                      i2u559_40 0CB6                        i2u488_40 1B92                        i2u489_40 1BB6  
                      i2u497_40 303C                        i2u498_40 306C                        i2u498_45 3062  
              __CFG_WDTPS$32768 000000      stepper2_back@count_stepper 0102                  _servoRotate180 3638  
                     _vfpfcnvrt 1286                       _xtoa$1111 00B2                       _xtoa$1112 00B4  
             ___wmul@multiplier 0080                       main@t_dep 02E2               i2___awdiv@divisor 0003  
                     main@stack 02DC               i2___awdiv@counter 0005                    _isspace$1611 0086  
                    vfpfcnvrt@c 00E0             actuators_main@stack 010C                       copy_data0 35F6  
             ??_ultrasonic_main 00FC                 UI_main@keypress 0154          __end_of_LCD_LINE1_ADDR FDCB  
              __size_of_UI_main 0814          __end_of_LCD_LINE2_ADDR FDCE          __end_of_LCD_LINE3_ADDR FDCA  
        __end_of_LCD_LINE4_ADDR FDC9             __end_of_send_nibble 3B00                      ?_send_byte 0001  
                   UI_main@Pole 0104                        __Hrparam 0000                     UI_main@tick 0155  
                    vfprintf@ap 00E9                        __Lrparam 0000                      vfprintf@fp 00E5  
            __CFG_BOREN$SBORDIS 000000          __end_of_servoRotate180 368E                __size_of___aodiv 014A  
              __size_of___aomod 0126                __size_of___fldiv 0288                __size_of___awdiv 0086  
              __size_of___fltol 00BA                __size_of___lldiv 0084                __size_of___llmod 0068  
                  ??_full_drive 00FB                      ?_vfpfcnvrt 00C6                 ___aodiv@divisor 0088  
               ___aodiv@counter 0090                __size_of_lcdInst 0010        actuators_main@steps2_adj 010E  
                 _number_deploy 2066                 _I2C_Master_Init 3582                 _I2C_Master_Read 3A46  
              __size_of_initLCD 0070                        ___xxtofl 28B0                 _I2C_Master_Wait 3B18  
               _I2C_Master_Stop 3B56                __size_of_isalpha 0036                __size_of_isdigit 0032  
              __size_of_islower 0032                __size_of_isspace 0040                        __ptext10 29F0  
                      __ptext11 38F6                        __ptext20 3A70                        __ptext12 30EA  
                      __ptext21 368E                        __ptext13 2E5E                        __ptext30 39BE  
                      __ptext22 1286                        __ptext14 3226                        __ptext31 3850  
                      __ptext23 1E30                        __ptext15 1630                        __ptext40 3A98  
                      __ptext32 34AC                        __ptext24 3786                        __ptext16 3A1A  
                      __ptext41 343C                        __ptext33 3B2C                        __ptext25 3928  
                      __ptext17 3638                        __ptext50 3A46                        __ptext42 3B3C  
                      __ptext34 38C2                        __ptext26 395A                        __ptext18 3736  
                      __ptext51 3B18                        __ptext43 3B00                        __ptext35 2B26  
                      __ptext27 388C                        __ptext19 0012                        __ptext52 3582  
                      __ptext44 3AE6                        __ptext36 2622                        __ptext28 1BE8  
                      __ptext53 3334                        __ptext45 39EC                        __ptext37 276C  
                      __ptext29 318A                        __ptext46 351A                        __ptext38 37D2  
                      __ptext55 0826                        __ptext47 3B4C                        __ptext39 398C  
                      __ptext56 33B8                        __ptext48 3B56                        __ptext57 28B0  
                      __ptext49 3B5E                        __ptext58 3030                        __ptext59 1960  
              __size_of_isupper 0032                        _avg_dist 0044                __size_of_pulse_e 002E  
                   ??_backwards 0083                __size_of_stepper 0088                __size_of_toupper 004C  
                 __size_of_echo 0544                   __size_of_atoi 0144                   __size_of_main 051C  
                 __size_of_dtoa 0248         stepper2_back@steps2_adj 00FD                   __size_of_trig 0102  
                 __size_of_xtoa 0236              __end_of_full_drive 1960                        _keypress 005F  
                      _temp_int 0173                 ?_servoRotate180 0001                        int$flags 006E  
                      _vfprintf 368E                        main@Pole 0280                        _stepper2 2E5E  
                     printf@fmt 00ED     I2C_Master_Write@byteToWrite 0081                ___aomod@dividend 0080  
         __size_of_servoRotate0 0050                        min@array 0080                    ??_print_echo 00F9  
                ?_number_deploy 00F9                       putch@data 0083                  _vfpfcnvrt$1126 00E3  
      __end_of_I2C_Master_Start 3B66        __end_of_I2C_Master_Write 3B56                      _INTCONbits 000FF2  
         ultrasonic_main@sensed 0102                        isalpha@c 0080                        isdigit@c 0080  
                     stepper2@i 0105                     _send_nibble 3AE6                        intlevel2 0000  
                 _LCD_SIZE_HORZ FDCC                        islower@c 0080                   _LCD_SIZE_VERT FDCB  
                      isspace@c 0080                ___lldiv@dividend 0080                     ??_send_byte 0082  
                      isupper@c 0080                  _tires_deployed 0054              __end_of_print_echo 2476  
                 ??_system_init 0080                    _servoRotate0 3736                        printf@ap 00F7  
       __end_of_I2C_Master_Init 35E2                 ___aomod@divisor 0088         __end_of_I2C_Master_Read 3A70  
       __end_of_I2C_Master_Wait 3B2C         __end_of_I2C_Master_Stop 3B5E                     ??_vfpfcnvrt 00CC  
                   lcdInst@data 0083                 ___aomod@counter 0090                        stepper@i 0102  
     ultrasonic_main@steps2_adj 0106                ___lldiv@quotient 0088                        toupper@c 0086  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                     _timer_count 005C  
                  ___aodiv@sign 0091                    ___aomod@sign 0091            stepper@count_stepper 0100  
