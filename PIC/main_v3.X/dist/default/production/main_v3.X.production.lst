

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 14:13:31 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataCOMRAM
   119  0041BE                     __pidataCOMRAM:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for _dists
   123  0041BE  0000               	dw	0
   124  0041C0  FFFF               	dw	65535
   125                           
   126                           ;initializer for _send
   127  0041C2  01                 	db	1
   128                           
   129                           	psect	mediumconst
   130  00FD80                     __pmediumconst:
   131                           	opt callstack 0
   132  00FD80  00                 	db	0
   133  00FD81                     _keys:
   134                           	opt callstack 0
   135  00FD81  31                 	db	49
   136  00FD82  32                 	db	50
   137  00FD83  33                 	db	51
   138  00FD84  41                 	db	65
   139  00FD85  34                 	db	52
   140  00FD86  35                 	db	53
   141  00FD87  36                 	db	54
   142  00FD88  42                 	db	66
   143  00FD89  37                 	db	55
   144  00FD8A  38                 	db	56
   145  00FD8B  39                 	db	57
   146  00FD8C  43                 	db	67
   147  00FD8D  2A                 	db	42
   148  00FD8E  30                 	db	48
   149  00FD8F  23                 	db	35
   150  00FD90  44                 	db	68
   151  00FD91  00                 	db	0
   152  00FD92                     __end_of_keys:
   153                           	opt callstack 0
   154  00FD92  50                 	db	80
   155  00FD93                     __end_of_LCD_LINE4_ADDR:
   156                           	opt callstack 0
   157  00FD93  10                 	db	16
   158  00FD94                     __end_of_LCD_LINE3_ADDR:
   159                           	opt callstack 0
   160  00FD94                     _LCD_LINE1_ADDR:
   161                           	opt callstack 0
   162  00FD94  00                 	db	0
   163  00FD95                     __end_of_LCD_LINE1_ADDR:
   164                           	opt callstack 0
   165  00FD95                     _LCD_SIZE_VERT:
   166                           	opt callstack 0
   167  00FD95  04                 	db	4
   168  00FD96                     __end_of_LCD_SIZE_VERT:
   169                           	opt callstack 0
   170  00FD96                     _LCD_SIZE_HORZ:
   171                           	opt callstack 0
   172  00FD96  10                 	db	16
   173  00FD97                     __end_of_LCD_SIZE_HORZ:
   174                           	opt callstack 0
   175  00FD97  40                 	db	64
   176  00FD98                     __end_of_LCD_LINE2_ADDR:
   177                           	opt callstack 0
   178  0000                     _EECON2	set	4007
   179  0000                     _EECON1bits	set	4006
   180  0000                     _EEADR	set	4009
   181  0000                     _EEDATA	set	4008
   182  0000                     _PORTAbits	set	3968
   183  0000                     _TRISAbits	set	3986
   184  0000                     _T1CON	set	4045
   185  0000                     _PORTB	set	3969
   186  0000                     _TMR1H	set	4047
   187  0000                     _TMR1L	set	4046
   188  0000                     _LATDbits	set	3980
   189  0000                     _INTCONbits	set	4082
   190  0000                     _LATBbits	set	3978
   191  0000                     _TRISBbits	set	3987
   192  0000                     _LATE	set	3981
   193  0000                     _TRISE	set	3990
   194  0000                     _LATC	set	3979
   195  0000                     _TRISC	set	3988
   196  0000                     _ADCON1	set	4033
   197  0000                     _TRISD	set	3989
   198  0000                     _LATD	set	3980
   199  0000                     _TRISA	set	3986
   200  0000                     _LATB	set	3978
   201  0000                     _TRISB	set	3987
   202  0000                     _LATAbits	set	3977
   203  0000                     _LATEbits	set	3981
   204  0000                     _LATCbits	set	3979
   205  0000                     _LATA	set	3977
   206  0000                     _SSPBUF	set	4041
   207  0000                     _SSPCON2bits	set	4037
   208  0000                     _SSPCON1	set	4038
   209  0000                     _SSPADD	set	4040
   210  0000                     _TRISCbits	set	3988
   211  0000                     _SSPCON1bits	set	4038
   212  0000                     _SSPCON2	set	4037
   213  0000                     _SSPSTAT	set	4039
   214  0000                     _GIE	set	32663
   215  0000                     _INT1IE	set	32643
   216  0000                     _RB2	set	31754
   217  0000                     _RB3	set	31755
   218  0000                     _RB4	set	31756
   219  0000                     _RB5	set	31757
   220  0000                     _RB6	set	31758
   221  0000                     _TMR1ON	set	32360
   222  0000                     _RB7	set	31759
   223  0000                     _INT1IF	set	32640
   224  0000                     _RBIE	set	32659
   225  0000                     _RBIF	set	32656
   226  0000                     _RD0	set	31768
   227  0000                     _RD1	set	31769
   228  0000                     _RC2	set	31762
   229  0000                     _RC1	set	31761
   230  00FD98                     STR_41:
   231  00FD98  50                 	db	80	;'P'
   232  00FD99  25                 	db	37
   233  00FD9A  64                 	db	100	;'d'
   234  00FD9B  20                 	db	32
   235  00FD9C  44                 	db	68	;'D'
   236  00FD9D  65                 	db	101	;'e'
   237  00FD9E  70                 	db	112	;'p'
   238  00FD9F  3A                 	db	58	;':'
   239  00FDA0  25                 	db	37
   240  00FDA1  64                 	db	100	;'d'
   241  00FDA2  2C                 	db	44
   242  00FDA3  54                 	db	84	;'T'
   243  00FDA4  6F                 	db	111	;'o'
   244  00FDA5  74                 	db	116	;'t'
   245  00FDA6  3A                 	db	58	;':'
   246  00FDA7  25                 	db	37
   247  00FDA8  64                 	db	100	;'d'
   248  00FDA9  00                 	db	0
   249  00FDAA                     STR_31:
   250  00FDAA  20                 	db	32
   251  00FDAB  20                 	db	32
   252  00FDAC  20                 	db	32
   253  00FDAD  20                 	db	32
   254  00FDAE  20                 	db	32
   255  00FDAF  30                 	db	48	;'0'
   256  00FDB0  2D                 	db	45
   257  00FDB1  4D                 	db	77	;'M'
   258  00FDB2  65                 	db	101	;'e'
   259  00FDB3  6E                 	db	110	;'n'
   260  00FDB4  75                 	db	117	;'u'
   261  00FDB5  20                 	db	32
   262  00FDB6  20                 	db	32
   263  00FDB7  20                 	db	32
   264  00FDB8  20                 	db	32
   265  00FDB9  20                 	db	32
   266  00FDBA  00                 	db	0
   267  00FDBB                     STR_48:
   268  00FDBB  3C                 	db	60	;'<'
   269  00FDBC  2A                 	db	42
   270  00FDBD  20                 	db	32
   271  00FDBE  20                 	db	32
   272  00FDBF  20                 	db	32
   273  00FDC0  30                 	db	48	;'0'
   274  00FDC1  2D                 	db	45
   275  00FDC2  4D                 	db	77	;'M'
   276  00FDC3  65                 	db	101	;'e'
   277  00FDC4  6E                 	db	110	;'n'
   278  00FDC5  75                 	db	117	;'u'
   279  00FDC6  20                 	db	32
   280  00FDC7  20                 	db	32
   281  00FDC8  20                 	db	32
   282  00FDC9  20                 	db	32
   283  00FDCA  20                 	db	32
   284  00FDCB  00                 	db	0
   285  00FDCC                     STR_10:
   286  00FDCC  44                 	db	68	;'D'
   287  00FDCD  69                 	db	105	;'i'
   288  00FDCE  73                 	db	115	;'s'
   289  00FDCF  74                 	db	116	;'t'
   290  00FDD0  31                 	db	49	;'1'
   291  00FDD1  3D                 	db	61	;'='
   292  00FDD2  25                 	db	37
   293  00FDD3  64                 	db	100	;'d'
   294  00FDD4  2C                 	db	44
   295  00FDD5  41                 	db	65	;'A'
   296  00FDD6  76                 	db	118	;'v'
   297  00FDD7  67                 	db	103	;'g'
   298  00FDD8  3D                 	db	61	;'='
   299  00FDD9  25                 	db	37
   300  00FDDA  64                 	db	100	;'d'
   301  00FDDB  20                 	db	32
   302  00FDDC  00                 	db	0
   303  00FDDD                     STR_16:
   304  00FDDD  44                 	db	68	;'D'
   305  00FDDE  69                 	db	105	;'i'
   306  00FDDF  73                 	db	115	;'s'
   307  00FDE0  74                 	db	116	;'t'
   308  00FDE1  34                 	db	52	;'4'
   309  00FDE2  3D                 	db	61	;'='
   310  00FDE3  25                 	db	37
   311  00FDE4  64                 	db	100	;'d'
   312  00FDE5  2C                 	db	44
   313  00FDE6  41                 	db	65	;'A'
   314  00FDE7  76                 	db	118	;'v'
   315  00FDE8  67                 	db	103	;'g'
   316  00FDE9  3D                 	db	61	;'='
   317  00FDEA  25                 	db	37
   318  00FDEB  64                 	db	100	;'d'
   319  00FDEC  20                 	db	32
   320  00FDED  00                 	db	0
   321  00FDEE                     STR_37:
   322  00FDEE  20                 	db	32
   323  00FDEF  20                 	db	32
   324  00FDF0  20                 	db	32
   325  00FDF1  20                 	db	32
   326  00FDF2  20                 	db	32
   327  00FDF3  30                 	db	48	;'0'
   328  00FDF4  2D                 	db	45
   329  00FDF5  4D                 	db	77	;'M'
   330  00FDF6  65                 	db	101	;'e'
   331  00FDF7  6E                 	db	110	;'n'
   332  00FDF8  75                 	db	117	;'u'
   333  00FDF9  20                 	db	32
   334  00FDFA  20                 	db	32
   335  00FDFB  20                 	db	32
   336  00FDFC  23                 	db	35
   337  00FDFD  3E                 	db	62	;'>'
   338  00FDFE  00                 	db	0
   339  00FDFF                     STR_40:
   340  00FDFF  3C                 	db	60	;'<'
   341  00FE00  2A                 	db	42
   342  00FE01  20                 	db	32
   343  00FE02  20                 	db	32
   344  00FE03  20                 	db	32
   345  00FE04  30                 	db	48	;'0'
   346  00FE05  2D                 	db	45
   347  00FE06  4D                 	db	77	;'M'
   348  00FE07  65                 	db	101	;'e'
   349  00FE08  6E                 	db	110	;'n'
   350  00FE09  75                 	db	117	;'u'
   351  00FE0A  20                 	db	32
   352  00FE0B  20                 	db	32
   353  00FE0C  20                 	db	32
   354  00FE0D  23                 	db	35
   355  00FE0E  3E                 	db	62	;'>'
   356  00FE0F  00                 	db	0
   357  00FE10                     STR_58:
   358  00FE10  64                 	db	100	;'d'
   359  00FE11  69                 	db	105	;'i'
   360  00FE12  73                 	db	115	;'s'
   361  00FE13  74                 	db	116	;'t'
   362  00FE14  20                 	db	32
   363  00FE15  70                 	db	112	;'p'
   364  00FE16  5B                 	db	91	;'['
   365  00FE17  25                 	db	37
   366  00FE18  64                 	db	100	;'d'
   367  00FE19  5D                 	db	93	;']'
   368  00FE1A  3A                 	db	58	;':'
   369  00FE1B  25                 	db	37
   370  00FE1C  64                 	db	100	;'d'
   371  00FE1D  2C                 	db	44
   372  00FE1E  25                 	db	37
   373  00FE1F  64                 	db	100	;'d'
   374  00FE20  00                 	db	0
   375  00FE21                     STR_60:
   376  00FE21  70                 	db	112	;'p'
   377  00FE22  5B                 	db	91	;'['
   378  00FE23  25                 	db	37
   379  00FE24  64                 	db	100	;'d'
   380  00FE25  5D                 	db	93	;']'
   381  00FE26  2C                 	db	44
   382  00FE27  74                 	db	116	;'t'
   383  00FE28  64                 	db	100	;'d'
   384  00FE29  65                 	db	101	;'e'
   385  00FE2A  70                 	db	112	;'p'
   386  00FE2B  20                 	db	32
   387  00FE2C  3A                 	db	58	;':'
   388  00FE2D  20                 	db	32
   389  00FE2E  25                 	db	37
   390  00FE2F  64                 	db	100	;'d'
   391  00FE30  00                 	db	0
   392  00FE31                     STR_61:
   393  00FE31  70                 	db	112	;'p'
   394  00FE32  5B                 	db	91	;'['
   395  00FE33  25                 	db	37
   396  00FE34  64                 	db	100	;'d'
   397  00FE35  5D                 	db	93	;']'
   398  00FE36  20                 	db	32
   399  00FE37  74                 	db	116	;'t'
   400  00FE38  63                 	db	99	;'c'
   401  00FE39  6E                 	db	110	;'n'
   402  00FE3A  74                 	db	116	;'t'
   403  00FE3B  20                 	db	32
   404  00FE3C  3A                 	db	58	;':'
   405  00FE3D  20                 	db	32
   406  00FE3E  25                 	db	37
   407  00FE3F  64                 	db	100	;'d'
   408  00FE40  00                 	db	0
   409  00FE41                     STR_22:
   410  00FE41  64                 	db	100	;'d'
   411  00FE42  65                 	db	101	;'e'
   412  00FE43  74                 	db	116	;'t'
   413  00FE44  2C                 	db	44
   414  00FE45  25                 	db	37
   415  00FE46  64                 	db	100	;'d'
   416  00FE47  2C                 	db	44
   417  00FE48  20                 	db	32
   418  00FE49  74                 	db	116	;'t'
   419  00FE4A  63                 	db	99	;'c'
   420  00FE4B  6E                 	db	110	;'n'
   421  00FE4C  74                 	db	116	;'t'
   422  00FE4D  20                 	db	32
   423  00FE4E  25                 	db	37
   424  00FE4F  64                 	db	100	;'d'
   425  00FE50  00                 	db	0
   426  00FE51                     STR_12:
   427  00FE51  44                 	db	68	;'D'
   428  00FE52  69                 	db	105	;'i'
   429  00FE53  73                 	db	115	;'s'
   430  00FE54  74                 	db	116	;'t'
   431  00FE55  32                 	db	50	;'2'
   432  00FE56  3D                 	db	61	;'='
   433  00FE57  25                 	db	37
   434  00FE58  64                 	db	100	;'d'
   435  00FE59  2C                 	db	44
   436  00FE5A  41                 	db	65	;'A'
   437  00FE5B  76                 	db	118	;'v'
   438  00FE5C  67                 	db	103	;'g'
   439  00FE5D  3D                 	db	61	;'='
   440  00FE5E  25                 	db	37
   441  00FE5F  64                 	db	100	;'d'
   442  00FE60  00                 	db	0
   443  00FE61                     STR_14:
   444  00FE61  44                 	db	68	;'D'
   445  00FE62  69                 	db	105	;'i'
   446  00FE63  73                 	db	115	;'s'
   447  00FE64  74                 	db	116	;'t'
   448  00FE65  33                 	db	51	;'3'
   449  00FE66  3D                 	db	61	;'='
   450  00FE67  25                 	db	37
   451  00FE68  64                 	db	100	;'d'
   452  00FE69  2C                 	db	44
   453  00FE6A  41                 	db	65	;'A'
   454  00FE6B  76                 	db	118	;'v'
   455  00FE6C  67                 	db	103	;'g'
   456  00FE6D  3D                 	db	61	;'='
   457  00FE6E  25                 	db	37
   458  00FE6F  64                 	db	100	;'d'
   459  00FE70  00                 	db	0
   460  00FE71                     STR_25:
   461  00FE71  33                 	db	51	;'3'
   462  00FE72  20                 	db	32
   463  00FE73  2D                 	db	45
   464  00FE74  20                 	db	32
   465  00FE75  44                 	db	68	;'D'
   466  00FE76  61                 	db	97	;'a'
   467  00FE77  74                 	db	116	;'t'
   468  00FE78  65                 	db	101	;'e'
   469  00FE79  26                 	db	38
   470  00FE7A  54                 	db	84	;'T'
   471  00FE7B  69                 	db	105	;'i'
   472  00FE7C  6D                 	db	109	;'m'
   473  00FE7D  65                 	db	101	;'e'
   474  00FE7E  20                 	db	32
   475  00FE7F  00                 	db	0
   476  00FE80                     STR_42:
   477  00FE80  44                 	db	68	;'D'
   478  00FE81  69                 	db	105	;'i'
   479  00FE82  73                 	db	115	;'s'
   480  00FE83  74                 	db	116	;'t'
   481  00FE84  54                 	db	84	;'T'
   482  00FE85  6F                 	db	111	;'o'
   483  00FE86  53                 	db	83	;'S'
   484  00FE87  74                 	db	116	;'t'
   485  00FE88  61                 	db	97	;'a'
   486  00FE89  72                 	db	114	;'r'
   487  00FE8A  74                 	db	116	;'t'
   488  00FE8B  3A                 	db	58	;':'
   489  00FE8C  25                 	db	37
   490  00FE8D  64                 	db	100	;'d'
   491  00FE8E  00                 	db	0
   492  00FE8F                     STR_30:
   493  00FE8F  4D                 	db	77	;'M'
   494  00FE90  61                 	db	97	;'a'
   495  00FE91  63                 	db	99	;'c'
   496  00FE92  68                 	db	104	;'h'
   497  00FE93  69                 	db	105	;'i'
   498  00FE94  6E                 	db	110	;'n'
   499  00FE95  65                 	db	101	;'e'
   500  00FE96  20                 	db	32
   501  00FE97  49                 	db	73	;'I'
   502  00FE98  6E                 	db	110	;'n'
   503  00FE99  20                 	db	32
   504  00FE9A  55                 	db	85	;'U'
   505  00FE9B  73                 	db	115	;'s'
   506  00FE9C  65                 	db	101	;'e'
   507  00FE9D  00                 	db	0
   508  00FE9E                     STR_50:
   509  00FE9E  25                 	db	37
   510  00FE9F  30                 	db	48	;'0'
   511  00FEA0  32                 	db	50	;'2'
   512  00FEA1  78                 	db	120	;'x'
   513  00FEA2  2F                 	db	47
   514  00FEA3  25                 	db	37
   515  00FEA4  30                 	db	48	;'0'
   516  00FEA5  32                 	db	50	;'2'
   517  00FEA6  78                 	db	120	;'x'
   518  00FEA7  2F                 	db	47
   519  00FEA8  25                 	db	37
   520  00FEA9  30                 	db	48	;'0'
   521  00FEAA  32                 	db	50	;'2'
   522  00FEAB  78                 	db	120	;'x'
   523  00FEAC  00                 	db	0
   524  00FEAD                     STR_51:
   525  00FEAD  25                 	db	37
   526  00FEAE  30                 	db	48	;'0'
   527  00FEAF  32                 	db	50	;'2'
   528  00FEB0  78                 	db	120	;'x'
   529  00FEB1  3A                 	db	58	;':'
   530  00FEB2  25                 	db	37
   531  00FEB3  30                 	db	48	;'0'
   532  00FEB4  32                 	db	50	;'2'
   533  00FEB5  78                 	db	120	;'x'
   534  00FEB6  3A                 	db	58	;':'
   535  00FEB7  25                 	db	37
   536  00FEB8  30                 	db	48	;'0'
   537  00FEB9  32                 	db	50	;'2'
   538  00FEBA  78                 	db	120	;'x'
   539  00FEBB  00                 	db	0
   540  00FEBC                     STR_59:
   541  00FEBC  70                 	db	112	;'p'
   542  00FEBD  5B                 	db	91	;'['
   543  00FEBE  25                 	db	37
   544  00FEBF  64                 	db	100	;'d'
   545  00FEC0  5D                 	db	93	;']'
   546  00FEC1  20                 	db	32
   547  00FEC2  66                 	db	102	;'f'
   548  00FEC3  73                 	db	115	;'s'
   549  00FEC4  20                 	db	32
   550  00FEC5  3A                 	db	58	;':'
   551  00FEC6  20                 	db	32
   552  00FEC7  25                 	db	37
   553  00FEC8  64                 	db	100	;'d'
   554  00FEC9  00                 	db	0
   555  00FECA                     STR_39:
   556  00FECA  4E                 	db	78	;'N'
   557  00FECB  6F                 	db	111	;'o'
   558  00FECC  2E                 	db	46
   559  00FECD  20                 	db	32
   560  00FECE  50                 	db	80	;'P'
   561  00FECF  6F                 	db	111	;'o'
   562  00FED0  6C                 	db	108	;'l'
   563  00FED1  65                 	db	101	;'e'
   564  00FED2  73                 	db	115	;'s'
   565  00FED3  3A                 	db	58	;':'
   566  00FED4  20                 	db	32
   567  00FED5  25                 	db	37
   568  00FED6  64                 	db	100	;'d'
   569  00FED7  00                 	db	0
   570  00FED8                     STR_38:
   571  00FED8  4E                 	db	78	;'N'
   572  00FED9  6F                 	db	111	;'o'
   573  00FEDA  2E                 	db	46
   574  00FEDB  20                 	db	32
   575  00FEDC  54                 	db	84	;'T'
   576  00FEDD  69                 	db	105	;'i'
   577  00FEDE  72                 	db	114	;'r'
   578  00FEDF  65                 	db	101	;'e'
   579  00FEE0  73                 	db	115	;'s'
   580  00FEE1  3A                 	db	58	;':'
   581  00FEE2  20                 	db	32
   582  00FEE3  25                 	db	37
   583  00FEE4  64                 	db	100	;'d'
   584  00FEE5  00                 	db	0
   585  00FEE6                     STR_7:
   586  00FEE6  53                 	db	83	;'S'
   587  00FEE7  74                 	db	116	;'t'
   588  00FEE8  65                 	db	101	;'e'
   589  00FEE9  70                 	db	112	;'p'
   590  00FEEA  20                 	db	32
   591  00FEEB  73                 	db	115	;'s'
   592  00FEEC  70                 	db	112	;'p'
   593  00FEED  65                 	db	101	;'e'
   594  00FEEE  65                 	db	101	;'e'
   595  00FEEF  64                 	db	100	;'d'
   596  00FEF0  20                 	db	32
   597  00FEF1  25                 	db	37
   598  00FEF2  64                 	db	100	;'d'
   599  00FEF3  00                 	db	0
   600  00FEF4                     STR_19:
   601  00FEF4  62                 	db	98	;'b'
   602  00FEF5  72                 	db	114	;'r'
   603  00FEF6  65                 	db	101	;'e'
   604  00FEF7  61                 	db	97	;'a'
   605  00FEF8  6B                 	db	107	;'k'
   606  00FEF9  20                 	db	32
   607  00FEFA  68                 	db	104	;'h'
   608  00FEFB  65                 	db	101	;'e'
   609  00FEFC  72                 	db	114	;'r'
   610  00FEFD  65                 	db	101	;'e'
   611  00FEFE  65                 	db	101	;'e'
   612  00FEFF  3F                 	db	63	;'?'
   613  00FF00  00                 	db	0
   614  00FF01                     STR_55:
   615  00FF01  6D                 	db	109	;'m'
   616  00FF02  6F                 	db	111	;'o'
   617  00FF03  72                 	db	114	;'r'
   618  00FF04  65                 	db	101	;'e'
   619  00FF05  20                 	db	32
   620  00FF06  77                 	db	119	;'w'
   621  00FF07  61                 	db	97	;'a'
   622  00FF08  69                 	db	105	;'i'
   623  00FF09  74                 	db	116	;'t'
   624  00FF0A  69                 	db	105	;'i'
   625  00FF0B  6E                 	db	110	;'n'
   626  00FF0C  67                 	db	103	;'g'
   627  00FF0D  00                 	db	0
   628  00FF0E                     STR_2:
   629  00FF0E  53                 	db	83	;'S'
   630  00FF0F  74                 	db	116	;'t'
   631  00FF10  65                 	db	101	;'e'
   632  00FF11  70                 	db	112	;'p'
   633  00FF12  70                 	db	112	;'p'
   634  00FF13  65                 	db	101	;'e'
   635  00FF14  72                 	db	114	;'r'
   636  00FF15  20                 	db	32
   637  00FF16  64                 	db	100	;'d'
   638  00FF17  6F                 	db	111	;'o'
   639  00FF18  6E                 	db	110	;'n'
   640  00FF19  65                 	db	101	;'e'
   641  00FF1A  00                 	db	0
   642  00FF1B                     STR_49:
   643  00FF1B  44                 	db	68	;'D'
   644  00FF1C  41                 	db	65	;'A'
   645  00FF1D  54                 	db	84	;'T'
   646  00FF1E  45                 	db	69	;'E'
   647  00FF1F  20                 	db	32
   648  00FF20  26                 	db	38
   649  00FF21  20                 	db	32
   650  00FF22  54                 	db	84	;'T'
   651  00FF23  49                 	db	73	;'I'
   652  00FF24  4D                 	db	77	;'M'
   653  00FF25  45                 	db	69	;'E'
   654  00FF26  00                 	db	0
   655  00FF27                     STR_21:
   656  00FF27  73                 	db	115	;'s'
   657  00FF28  74                 	db	116	;'t'
   658  00FF29  65                 	db	101	;'e'
   659  00FF2A  70                 	db	112	;'p'
   660  00FF2B  73                 	db	115	;'s'
   661  00FF2C  61                 	db	97	;'a'
   662  00FF2D  64                 	db	100	;'d'
   663  00FF2E  6A                 	db	106	;'j'
   664  00FF2F  20                 	db	32
   665  00FF30  25                 	db	37
   666  00FF31  64                 	db	100	;'d'
   667  00FF32  00                 	db	0
   668  00FF33                     STR_62:
   669  00FF33  61                 	db	97	;'a'
   670  00FF34  76                 	db	118	;'v'
   671  00FF35  67                 	db	103	;'g'
   672  00FF36  20                 	db	32
   673  00FF37  64                 	db	100	;'d'
   674  00FF38  69                 	db	105	;'i'
   675  00FF39  73                 	db	115	;'s'
   676  00FF3A  74                 	db	116	;'t'
   677  00FF3B  20                 	db	32
   678  00FF3C  25                 	db	37
   679  00FF3D  64                 	db	100	;'d'
   680  00FF3E  00                 	db	0
   681  00FF3F                     STR_43:
   682  00FF3F  44                 	db	68	;'D'
   683  00FF40  69                 	db	105	;'i'
   684  00FF41  73                 	db	115	;'s'
   685  00FF42  74                 	db	116	;'t'
   686  00FF43  54                 	db	84	;'T'
   687  00FF44  6F                 	db	111	;'o'
   688  00FF45  43                 	db	67	;'C'
   689  00FF46  4C                 	db	76	;'L'
   690  00FF47  3A                 	db	58	;':'
   691  00FF48  25                 	db	37
   692  00FF49  64                 	db	100	;'d'
   693  00FF4A  00                 	db	0
   694  00FF4B                     STR_24:
   695  00FF4B  32                 	db	50	;'2'
   696  00FF4C  20                 	db	32
   697  00FF4D  2D                 	db	45
   698  00FF4E  20                 	db	32
   699  00FF4F  53                 	db	83	;'S'
   700  00FF50  75                 	db	117	;'u'
   701  00FF51  6D                 	db	109	;'m'
   702  00FF52  6D                 	db	109	;'m'
   703  00FF53  61                 	db	97	;'a'
   704  00FF54  72                 	db	114	;'r'
   705  00FF55  79                 	db	121	;'y'
   706  00FF56  00                 	db	0
   707  00FF57                     STR_63:
   708  00FF57  70                 	db	112	;'p'
   709  00FF58  6F                 	db	111	;'o'
   710  00FF59  6C                 	db	108	;'l'
   711  00FF5A  65                 	db	101	;'e'
   712  00FF5B  73                 	db	115	;'s'
   713  00FF5C  20                 	db	32
   714  00FF5D  64                 	db	100	;'d'
   715  00FF5E  20                 	db	32
   716  00FF5F  25                 	db	37
   717  00FF60  64                 	db	100	;'d'
   718  00FF61  00                 	db	0
   719  00FF62                     STR_20:
   720  00FF62  6D                 	db	109	;'m'
   721  00FF63  69                 	db	105	;'i'
   722  00FF64  6E                 	db	110	;'n'
   723  00FF65  69                 	db	105	;'i'
   724  00FF66  6D                 	db	109	;'m'
   725  00FF67  75                 	db	117	;'u'
   726  00FF68  6D                 	db	109	;'m'
   727  00FF69  20                 	db	32
   728  00FF6A  25                 	db	37
   729  00FF6B  64                 	db	100	;'d'
   730  00FF6C  00                 	db	0
   731  00FF6D                     STR_64:
   732  00FF6D  70                 	db	112	;'p'
   733  00FF6E  6F                 	db	111	;'o'
   734  00FF6F  6C                 	db	108	;'l'
   735  00FF70  65                 	db	101	;'e'
   736  00FF71  73                 	db	115	;'s'
   737  00FF72  20                 	db	32
   738  00FF73  64                 	db	100	;'d'
   739  00FF74  6F                 	db	111	;'o'
   740  00FF75  6E                 	db	110	;'n'
   741  00FF76  65                 	db	101	;'e'
   742  00FF77  00                 	db	0
   743  00FF78                     STR_3:
   744  00FF78  53                 	db	83	;'S'
   745  00FF79  65                 	db	101	;'e'
   746  00FF7A  72                 	db	114	;'r'
   747  00FF7B  76                 	db	118	;'v'
   748  00FF7C  6F                 	db	111	;'o'
   749  00FF7D  20                 	db	32
   750  00FF7E  64                 	db	100	;'d'
   751  00FF7F  6F                 	db	111	;'o'
   752  00FF80  6E                 	db	110	;'n'
   753  00FF81  65                 	db	101	;'e'
   754  00FF82  00                 	db	0
   755  00FF83                     STR_11:
   756  00FF83  44                 	db	68	;'D'
   757  00FF84  69                 	db	105	;'i'
   758  00FF85  73                 	db	115	;'s'
   759  00FF86  74                 	db	116	;'t'
   760  00FF87  31                 	db	49	;'1'
   761  00FF88  20                 	db	32
   762  00FF89  3D                 	db	61	;'='
   763  00FF8A  20                 	db	32
   764  00FF8B  58                 	db	88	;'X'
   765  00FF8C  00                 	db	0
   766  00FF8D                     STR_13:
   767  00FF8D  44                 	db	68	;'D'
   768  00FF8E  69                 	db	105	;'i'
   769  00FF8F  73                 	db	115	;'s'
   770  00FF90  74                 	db	116	;'t'
   771  00FF91  32                 	db	50	;'2'
   772  00FF92  20                 	db	32
   773  00FF93  3D                 	db	61	;'='
   774  00FF94  20                 	db	32
   775  00FF95  58                 	db	88	;'X'
   776  00FF96  00                 	db	0
   777  00FF97                     STR_15:
   778  00FF97  44                 	db	68	;'D'
   779  00FF98  69                 	db	105	;'i'
   780  00FF99  73                 	db	115	;'s'
   781  00FF9A  74                 	db	116	;'t'
   782  00FF9B  33                 	db	51	;'3'
   783  00FF9C  20                 	db	32
   784  00FF9D  3D                 	db	61	;'='
   785  00FF9E  20                 	db	32
   786  00FF9F  58                 	db	88	;'X'
   787  00FFA0  00                 	db	0
   788  00FFA1                     STR_17:
   789  00FFA1  44                 	db	68	;'D'
   790  00FFA2  69                 	db	105	;'i'
   791  00FFA3  73                 	db	115	;'s'
   792  00FFA4  74                 	db	116	;'t'
   793  00FFA5  34                 	db	52	;'4'
   794  00FFA6  20                 	db	32
   795  00FFA7  3D                 	db	61	;'='
   796  00FFA8  20                 	db	32
   797  00FFA9  58                 	db	88	;'X'
   798  00FFAA  00                 	db	0
   799  00FFAB                     STR_65:
   800  00FFAB  62                 	db	98	;'b'
   801  00FFAC  61                 	db	97	;'a'
   802  00FFAD  63                 	db	99	;'c'
   803  00FFAE  6B                 	db	107	;'k'
   804  00FFAF  77                 	db	119	;'w'
   805  00FFB0  61                 	db	97	;'a'
   806  00FFB1  72                 	db	114	;'r'
   807  00FFB2  64                 	db	100	;'d'
   808  00FFB3  73                 	db	115	;'s'
   809  00FFB4  00                 	db	0
   810  00FFB5                     STR_56:
   811  00FFB5  64                 	db	100	;'d'
   812  00FFB6  6F                 	db	111	;'o'
   813  00FFB7  6E                 	db	110	;'n'
   814  00FFB8  65                 	db	101	;'e'
   815  00FFB9  20                 	db	32
   816  00FFBA  77                 	db	119	;'w'
   817  00FFBB  61                 	db	97	;'a'
   818  00FFBC  69                 	db	105	;'i'
   819  00FFBD  74                 	db	116	;'t'
   820  00FFBE  00                 	db	0
   821  00FFBF                     STR_23:
   822  00FFBF  31                 	db	49	;'1'
   823  00FFC0  20                 	db	32
   824  00FFC1  2D                 	db	45
   825  00FFC2  20                 	db	32
   826  00FFC3  53                 	db	83	;'S'
   827  00FFC4  74                 	db	116	;'t'
   828  00FFC5  61                 	db	97	;'a'
   829  00FFC6  72                 	db	114	;'r'
   830  00FFC7  74                 	db	116	;'t'
   831  00FFC8  00                 	db	0
   832  00FFC9                     STR_5:
   833  00FFC9  73                 	db	115	;'s'
   834  00FFCA  74                 	db	116	;'t'
   835  00FFCB  65                 	db	101	;'e'
   836  00FFCC  70                 	db	112	;'p'
   837  00FFCD  70                 	db	112	;'p'
   838  00FFCE  70                 	db	112	;'p'
   839  00FFCF  20                 	db	32
   840  00FFD0  25                 	db	37
   841  00FFD1  64                 	db	100	;'d'
   842  00FFD2  00                 	db	0
   843  00FFD3                     STR_1:
   844  00FFD3  63                 	db	99	;'c'
   845  00FFD4  6E                 	db	110	;'n'
   846  00FFD5  74                 	db	116	;'t'
   847  00FFD6  20                 	db	32
   848  00FFD7  69                 	db	105	;'i'
   849  00FFD8  73                 	db	115	;'s'
   850  00FFD9  20                 	db	32
   851  00FFDA  25                 	db	37
   852  00FFDB  64                 	db	100	;'d'
   853  00FFDC  00                 	db	0
   854  00FFDD                     STR_32:
   855  00FFDD  4F                 	db	79	;'O'
   856  00FFDE  70                 	db	112	;'p'
   857  00FFDF  20                 	db	32
   858  00FFE0  54                 	db	84	;'T'
   859  00FFE1  69                 	db	105	;'i'
   860  00FFE2  6D                 	db	109	;'m'
   861  00FFE3  65                 	db	101	;'e'
   862  00FFE4  3A                 	db	58	;':'
   863  00FFE5  00                 	db	0
   864  00FFE6                     STR_18:
   865  00FFE6  6F                 	db	111	;'o'
   866  00FFE7  72                 	db	114	;'r'
   867  00FFE8  20                 	db	32
   868  00FFE9  68                 	db	104	;'h'
   869  00FFEA  65                 	db	101	;'e'
   870  00FFEB  72                 	db	114	;'r'
   871  00FFEC  65                 	db	101	;'e'
   872  00FFED  00                 	db	0
   873  00FFEE                     STR_6:
   874  00FFEE  73                 	db	115	;'s'
   875  00FFEF  74                 	db	116	;'t'
   876  00FFF0  65                 	db	101	;'e'
   877  00FFF1  70                 	db	112	;'p'
   878  00FFF2  31                 	db	49	;'1'
   879  00FFF3  00                 	db	0
   880  00FFF4                     STR_26:
   881  00FFF4  62                 	db	98	;'b'
   882  00FFF5  75                 	db	117	;'u'
   883  00FFF6  62                 	db	98	;'b'
   884  00FFF7  62                 	db	98	;'b'
   885  00FFF8  00                 	db	0
   886  00FFF9                     STR_9:
   887  00FFF9  77                 	db	119	;'w'
   888  00FFFA  68                 	db	104	;'h'
   889  00FFFB  61                 	db	97	;'a'
   890  00FFFC  74                 	db	116	;'t'
   891  00FFFD  00                 	db	0
   892  0000                     
   893                           ; #config settings
   894  00FFFE  00                 	db	0	; dummy byte at the end
   895  0000                     
   896                           	psect	cinit
   897  003CD2                     __pcinit:
   898                           	opt callstack 0
   899  003CD2                     start_initialization:
   900                           	opt callstack 0
   901  003CD2                     __initialization:
   902                           	opt callstack 0
   903                           
   904                           ; Initialize objects allocated to COMRAM (5 bytes)
   905                           ; load TBLPTR registers with __pidataCOMRAM
   906  003CD2  0EBE               	movlw	low __pidataCOMRAM
   907  003CD4  6EF6               	movwf	tblptrl,c
   908  003CD6  0E41               	movlw	high __pidataCOMRAM
   909  003CD8  6EF7               	movwf	tblptrh,c
   910  003CDA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   911  003CDC  6EF8               	movwf	tblptru,c
   912  003CDE  EE00  F069         	lfsr	0,__pdataCOMRAM
   913  003CE2  EE10 F005          	lfsr	1,5
   914  003CE6                     copy_data0:
   915  003CE6  0009               	tblrd		*+
   916  003CE8  CFF5 FFEE          	movff	tablat,postinc0
   917  003CEC  50E5               	movf	postdec1,w,c
   918  003CEE  50E1               	movf	fsr1l,w,c
   919  003CF0  E1FA               	bnz	copy_data0
   920                           
   921                           ; Clear objects allocated to BANK2 (160 bytes)
   922  003CF2  EE02  F000         	lfsr	0,__pbssBANK2
   923  003CF6  0EA0               	movlw	160
   924  003CF8                     clear_0:
   925  003CF8  6AEE               	clrf	postinc0,c
   926  003CFA  06E8               	decf	wreg,f,c
   927  003CFC  E1FD               	bnz	clear_0
   928                           
   929                           ; Clear objects allocated to BANK1 (30 bytes)
   930  003CFE  EE01  F05E         	lfsr	0,__pbssBANK1
   931  003D02  0E1E               	movlw	30
   932  003D04                     clear_1:
   933  003D04  6AEE               	clrf	postinc0,c
   934  003D06  06E8               	decf	wreg,f,c
   935  003D08  E1FD               	bnz	clear_1
   936                           
   937                           ; Clear objects allocated to BANK0 (1 bytes)
   938  003D0A  0100               	movlb	0
   939  003D0C  6BFF               	clrf	__pbssBANK0& (0+255),b
   940                           
   941                           ; Clear objects allocated to COMRAM (49 bytes)
   942  003D0E  EE00  F038         	lfsr	0,__pbssCOMRAM
   943  003D12  0E31               	movlw	49
   944  003D14                     clear_2:
   945  003D14  6AEE               	clrf	postinc0,c
   946  003D16  06E8               	decf	wreg,f,c
   947  003D18  E1FD               	bnz	clear_2
   948  003D1A                     end_of_initialization:
   949                           	opt callstack 0
   950  003D1A                     __end_of__initialization:
   951                           	opt callstack 0
   952  003D1A  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   953  003D1C  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   954  003D1E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   955  003D20  6EF8               	movwf	tblptru,c
   956  003D22  0100               	movlb	0
   957  003D24  EF09  F000         	goto	_main	;jump to C main() function
   958                           
   959                           	psect	bssCOMRAM
   960  000038                     __pbssCOMRAM:
   961                           	opt callstack 0
   962  000038                     _sum:
   963                           	opt callstack 0
   964  000038                     	ds	8
   965  000040                     _sumf:
   966                           	opt callstack 0
   967  000040                     	ds	4
   968  000044                     _avg_dist:
   969                           	opt callstack 0
   970  000044                     	ds	4
   971  000048                     _nout:
   972                           	opt callstack 0
   973  000048                     	ds	2
   974  00004A                     _width:
   975                           	opt callstack 0
   976  00004A                     	ds	2
   977  00004C                     _prec:
   978                           	opt callstack 0
   979  00004C                     	ds	2
   980  00004E                     _flags:
   981                           	opt callstack 0
   982  00004E                     	ds	2
   983  000050                     _meas:
   984                           	opt callstack 0
   985  000050                     	ds	2
   986  000052                     _poles_detected:
   987                           	opt callstack 0
   988  000052                     	ds	2
   989  000054                     _tires_deployed:
   990                           	opt callstack 0
   991  000054                     	ds	2
   992  000056                     _tick:
   993                           	opt callstack 0
   994  000056                     	ds	2
   995  000058                     _sens:
   996                           	opt callstack 0
   997  000058                     	ds	2
   998  00005A                     _b:
   999                           	opt callstack 0
  1000  00005A                     	ds	2
  1001  00005C                     _timer_count:
  1002                           	opt callstack 0
  1003  00005C                     	ds	2
  1004  00005E                     _data:
  1005                           	opt callstack 0
  1006  00005E                     	ds	1
  1007  00005F                     _keypress:
  1008                           	opt callstack 0
  1009  00005F                     	ds	1
  1010  000060                     _counter:
  1011                           	opt callstack 0
  1012  000060                     	ds	1
  1013  000061                     _a:
  1014                           	opt callstack 0
  1015  000061                     	ds	8
  1016                           
  1017                           	psect	dataCOMRAM
  1018  000069                     __pdataCOMRAM:
  1019                           	opt callstack 0
  1020  000069                     _dists:
  1021                           	opt callstack 0
  1022  000069                     	ds	4
  1023  00006D                     _send:
  1024                           	opt callstack 0
  1025  00006D                     	ds	1
  1026                           
  1027                           	psect	bssBANK0
  1028  0000FF                     __pbssBANK0:
  1029                           	opt callstack 0
  1030  0000FF                     _temp:
  1031                           	opt callstack 0
  1032  0000FF                     	ds	1
  1033                           
  1034                           	psect	bssBANK1
  1035  00015E                     __pbssBANK1:
  1036                           	opt callstack 0
  1037  00015E                     _prev_dist_final:
  1038                           	opt callstack 0
  1039  00015E                     	ds	8
  1040  000166                     _time:
  1041                           	opt callstack 0
  1042  000166                     	ds	7
  1043  00016D                     _opTime:
  1044                           	opt callstack 0
  1045  00016D                     	ds	2
  1046  00016F                     _pressed:
  1047                           	opt callstack 0
  1048  00016F                     	ds	2
  1049  000171                     _i:
  1050                           	opt callstack 0
  1051  000171                     	ds	2
  1052  000173                     _disp:
  1053                           	opt callstack 0
  1054  000173                     	ds	2
  1055  000175                     _state:
  1056                           	opt callstack 0
  1057  000175                     	ds	2
  1058  000177                     _temp_int:
  1059                           	opt callstack 0
  1060  000177                     	ds	2
  1061  000179                     _cnt:
  1062                           	opt callstack 0
  1063  000179                     	ds	2
  1064  00017B                     _key_was_pressed:
  1065                           	opt callstack 0
  1066  00017B                     	ds	1
  1067                           
  1068                           	psect	bssBANK2
  1069  000200                     __pbssBANK2:
  1070                           	opt callstack 0
  1071  000200                     _Pole:
  1072                           	opt callstack 0
  1073  000200                     	ds	80
  1074  000250                     _dist_final:
  1075                           	opt callstack 0
  1076  000250                     	ds	48
  1077  000280                     _dbuf:
  1078                           	opt callstack 0
  1079  000280                     	ds	32
  1080                           
  1081                           	psect	cstackBANK3
  1082  000300                     __pcstackBANK3:
  1083                           	opt callstack 0
  1084  000300                     	ds	2
  1085  000302                     main@pole_cl_dist:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x2
  1089  000302                     	ds	2
  1090  000304                     main@Pole:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 80 bytes @ 0x4
  1094  000304                     	ds	80
  1095  000354                     main@i:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x54
  1099  000354                     	ds	2
  1100  000356                     main@i_1087:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x56
  1104  000356                     	ds	2
  1105  000358                     main@i_1104:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x58
  1109  000358                     	ds	2
  1110  00035A                     main@i_1105:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x5A
  1114  00035A                     	ds	2
  1115  00035C                     main@i_1106:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x5C
  1119  00035C                     	ds	2
  1120  00035E                     main@i_1107:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x5E
  1124  00035E                     	ds	2
  1125  000360                     _main$1077:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x60
  1129  000360                     	ds	1
  1130  000361                     _main$1078:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x61
  1134  000361                     	ds	1
  1135  000362                     _main$1079:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x62
  1139  000362                     	ds	1
  1140  000363                     main@act_done:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x63
  1144  000363                     	ds	1
  1145  000364                     main@arduino_stopped:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x64
  1149  000364                     	ds	1
  1150  000365                     main@stack:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x65
  1154  000365                     	ds	2
  1155  000367                     main@steps2_adj:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x67
  1159  000367                     	ds	2
  1160  000369                     main@k:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x69
  1164  000369                     	ds	2
  1165  00036B                     main@data_g:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x6B
  1169  00036B                     	ds	2
  1170  00036D                     main@t_count:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x6D
  1174  00036D                     	ds	2
  1175  00036F                     main@addr:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x6F
  1179  00036F                     	ds	1
  1180  000370                     main@i_1099:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x70
  1184  000370                     	ds	2
  1185  000372                     main@t_dep:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x72
  1189  000372                     	ds	2
  1190  000374                     main@prev_avg_dist:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x74
  1194  000374                     	ds	4
  1195  000378                     main@t_det:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x78
  1199  000378                     	ds	2
  1200  00037A                     main@dist_tot:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x7A
  1204  00037A                     	ds	2
  1205  00037C                     main@data:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 8 bytes @ 0x7C
  1209  00037C                     	ds	8
  1210  000384                     main@poles_detected:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x84
  1214  000384                     	ds	2
  1215                           
  1216                           	psect	cstackBANK1
  1217  000100                     __pcstackBANK1:
  1218                           	opt callstack 0
  1219  000100                     ??_ultrasonic_main:
  1220  000100                     ??_UI_main:
  1221  000100                     ?_number_deploy:
  1222                           	opt callstack 0
  1223  000100                     stepper@stack:
  1224                           	opt callstack 0
  1225  000100                     stepper2@steps2_adj:
  1226                           	opt callstack 0
  1227  000100                     stepper2_back@steps2_adj:
  1228                           	opt callstack 0
  1229  000100                     number_deploy@avg_dist:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x0
  1233  000100                     	ds	2
  1234  000102                     ??_stepper2:
  1235  000102                     ??_stepper2_back:
  1236  000102                     stepper@t_dep:
  1237                           	opt callstack 0
  1238  000102                     number_deploy@poles_detected:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x2
  1242  000102                     	ds	1
  1243  000103                     stepper2_back@direction:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x3
  1247  000103                     	ds	1
  1248  000104                     ??_stepper:
  1249  000104                     stepper2_back@count_stepper:
  1250                           	opt callstack 0
  1251  000104                     ultrasonic_main@sensed:
  1252                           	opt callstack 0
  1253  000104                     number_deploy@tires_detected:
  1254                           	opt callstack 0
  1255  000104                     UI_main@Pole:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 80 bytes @ 0x4
  1259  000104                     	ds	2
  1260  000106                     stepper2_back@i:
  1261                           	opt callstack 0
  1262  000106                     ultrasonic_main@step2_offset:
  1263                           	opt callstack 0
  1264  000106                     number_deploy@tires_t:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x6
  1268  000106                     	ds	1
  1269  000107                     stepper2@i:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x7
  1273  000107                     	ds	1
  1274  000108                     stepper@count_stepper:
  1275                           	opt callstack 0
  1276  000108                     ultrasonic_main@steps2_adj:
  1277                           	opt callstack 0
  1278  000108                     number_deploy@t_count:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x8
  1282  000108                     	ds	1
  1283  000109                     stepper2@i_489:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x9
  1287  000109                     	ds	1
  1288  00010A                     stepper@i:
  1289                           	opt callstack 0
  1290  00010A                     ultrasonic_main@min_us_dist_975:
  1291                           	opt callstack 0
  1292                           
  1293                           ; 2 bytes @ 0xA
  1294  00010A                     	ds	1
  1295  00010B                     stepper2@count_stepper:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 2 bytes @ 0xB
  1299  00010B                     	ds	1
  1300  00010C                     stepper@i_479:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 2 bytes @ 0xC
  1304  00010C                     	ds	1
  1305  00010D                     stepper2@direction:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 1 bytes @ 0xD
  1309  00010D                     	ds	1
  1310  00010E                     stepper@i_480:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 2 bytes @ 0xE
  1314  00010E                     	ds	2
  1315  000110                     stepper@i_481:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x10
  1319  000110                     	ds	2
  1320  000112                     actuators_main@stack:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x12
  1324  000112                     	ds	2
  1325  000114                     actuators_main@steps2_adj:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x14
  1329  000114                     	ds	2
  1330  000116                     actuators_main@t_dep:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x16
  1334  000116                     	ds	2
  1335  000118                     ??_actuators_main:
  1336                           
  1337                           ; 1 bytes @ 0x18
  1338  000118                     	ds	2
  1339  00011A                     actuators_main@act_cnt:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x1A
  1343  00011A                     	ds	58
  1344  000154                     UI_main@keypress:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 1 bytes @ 0x54
  1348  000154                     	ds	1
  1349  000155                     UI_main@tick:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 4 bytes @ 0x55
  1353  000155                     	ds	4
  1354  000159                     UI_main@i:
  1355                           	opt callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x59
  1358  000159                     	ds	1
  1359  00015A                     ??_main:
  1360                           
  1361                           ; 1 bytes @ 0x5A
  1362  00015A                     	ds	4
  1363                           
  1364                           	psect	cstackBANK0
  1365  000080                     __pcstackBANK0:
  1366                           	opt callstack 0
  1367  000080                     ??_I2C_Master_Wait:
  1368  000080                     ??_trig:
  1369  000080                     ?_strlen:
  1370                           	opt callstack 0
  1371  000080                     ?_isupper:
  1372                           	opt callstack 0
  1373  000080                     ?_isalpha:
  1374                           	opt callstack 0
  1375  000080                     ?_isdigit:
  1376                           	opt callstack 0
  1377  000080                     ?_isspace:
  1378                           	opt callstack 0
  1379  000080                     ?_islower:
  1380                           	opt callstack 0
  1381  000080                     ?_min:
  1382                           	opt callstack 0
  1383  000080                     ?___wmul:
  1384                           	opt callstack 0
  1385  000080                     ?___lldiv:
  1386                           	opt callstack 0
  1387  000080                     ?___llmod:
  1388                           	opt callstack 0
  1389  000080                     ?___aodiv:
  1390                           	opt callstack 0
  1391  000080                     ?___aomod:
  1392                           	opt callstack 0
  1393  000080                     pulse_e@interruptState:
  1394                           	opt callstack 0
  1395  000080                     servoRotate0@servo:
  1396                           	opt callstack 0
  1397  000080                     servoRotate180@servo:
  1398                           	opt callstack 0
  1399  000080                     min@array:
  1400                           	opt callstack 0
  1401  000080                     ee_write_byte@_data:
  1402                           	opt callstack 0
  1403  000080                     ___wmul@multiplier:
  1404                           	opt callstack 0
  1405  000080                     isalpha@c:
  1406                           	opt callstack 0
  1407  000080                     isdigit@c:
  1408                           	opt callstack 0
  1409  000080                     isspace@c:
  1410                           	opt callstack 0
  1411  000080                     isupper@c:
  1412                           	opt callstack 0
  1413  000080                     strlen@s:
  1414                           	opt callstack 0
  1415  000080                     islower@c:
  1416                           	opt callstack 0
  1417  000080                     ___lldiv@dividend:
  1418                           	opt callstack 0
  1419  000080                     ___llmod@dividend:
  1420                           	opt callstack 0
  1421  000080                     ___aodiv@dividend:
  1422                           	opt callstack 0
  1423  000080                     ___aomod@dividend:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 8 bytes @ 0x0
  1427  000080                     	ds	1
  1428  000081                     I2C_Master_Read@ackBit:
  1429                           	opt callstack 0
  1430  000081                     send_nibble@data:
  1431                           	opt callstack 0
  1432  000081                     I2C_Master_Write@byteToWrite:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x1
  1436  000081                     	ds	1
  1437  000082                     ??_isupper:
  1438  000082                     ??_isalpha:
  1439  000082                     ??_isdigit:
  1440  000082                     ??_isspace:
  1441  000082                     ??_islower:
  1442  000082                     ??_servoRotate0:
  1443  000082                     ??_servoRotate180:
  1444  000082                     I2C_Master_Read@receivedByte:
  1445                           	opt callstack 0
  1446  000082                     send_byte@data:
  1447                           	opt callstack 0
  1448  000082                     ee_write_byte@address:
  1449                           	opt callstack 0
  1450  000082                     min@size:
  1451                           	opt callstack 0
  1452  000082                     ___wmul@multiplicand:
  1453                           	opt callstack 0
  1454  000082                     strlen@a:
  1455                           	opt callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x2
  1458  000082                     	ds	1
  1459  000083                     lcdInst@data:
  1460                           	opt callstack 0
  1461  000083                     putch@data:
  1462                           	opt callstack 0
  1463  000083                     servoRotate0@i:
  1464                           	opt callstack 0
  1465  000083                     servoRotate180@i:
  1466                           	opt callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x3
  1469  000083                     	ds	1
  1470  000084                     ??_initLCD:
  1471  000084                     ??_min:
  1472  000084                     ___wmul@product:
  1473                           	opt callstack 0
  1474  000084                     fputc@c:
  1475                           	opt callstack 0
  1476  000084                     ___lldiv@divisor:
  1477                           	opt callstack 0
  1478  000084                     ___llmod@divisor:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 4 bytes @ 0x4
  1482  000084                     	ds	1
  1483  000085                     ??_servo:
  1484                           
  1485                           ; 1 bytes @ 0x5
  1486  000085                     	ds	1
  1487  000086                     ?_toupper:
  1488                           	opt callstack 0
  1489  000086                     _isspace$1761:
  1490                           	opt callstack 0
  1491  000086                     fputc@fp:
  1492                           	opt callstack 0
  1493  000086                     toupper@c:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x6
  1497  000086                     	ds	1
  1498  000087                     ?_atoi:
  1499                           	opt callstack 0
  1500  000087                     min@minimum:
  1501                           	opt callstack 0
  1502  000087                     atoi@s:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x7
  1506  000087                     	ds	1
  1507  000088                     ??_fputc:
  1508  000088                     ??_toupper:
  1509  000088                     ___llmod@counter:
  1510                           	opt callstack 0
  1511  000088                     ___lldiv@quotient:
  1512                           	opt callstack 0
  1513  000088                     ___aodiv@divisor:
  1514                           	opt callstack 0
  1515  000088                     ___aomod@divisor:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 8 bytes @ 0x8
  1519  000088                     	ds	1
  1520  000089                     ??_atoi:
  1521  000089                     min@i:
  1522                           	opt callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x9
  1525  000089                     	ds	3
  1526  00008C                     ___lldiv@counter:
  1527                           	opt callstack 0
  1528  00008C                     _toupper$1826:
  1529                           	opt callstack 0
  1530                           
  1531                           ; 2 bytes @ 0xC
  1532  00008C                     	ds	1
  1533  00008D                     atoi@neg:
  1534                           	opt callstack 0
  1535  00008D                     fputs@s:
  1536                           	opt callstack 0
  1537  00008D                     I2C_Master_Init@clockFreq:
  1538                           	opt callstack 0
  1539                           
  1540                           ; 4 bytes @ 0xD
  1541  00008D                     	ds	2
  1542  00008F                     _atoi$1734:
  1543                           	opt callstack 0
  1544  00008F                     fputs@fp:
  1545                           	opt callstack 0
  1546                           
  1547                           ; 2 bytes @ 0xF
  1548  00008F                     	ds	1
  1549  000090                     ___aodiv@counter:
  1550                           	opt callstack 0
  1551  000090                     ___aomod@counter:
  1552                           	opt callstack 0
  1553                           
  1554                           ; 1 bytes @ 0x10
  1555  000090                     	ds	1
  1556  000091                     ??_I2C_Master_Init:
  1557  000091                     ___aodiv@sign:
  1558                           	opt callstack 0
  1559  000091                     ___aomod@sign:
  1560                           	opt callstack 0
  1561  000091                     fputs@c:
  1562                           	opt callstack 0
  1563  000091                     _atoi$1736:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x11
  1567  000091                     	ds	1
  1568  000092                     ?_abs:
  1569                           	opt callstack 0
  1570  000092                     abs@a:
  1571                           	opt callstack 0
  1572  000092                     fputs@i:
  1573                           	opt callstack 0
  1574  000092                     ___aodiv@quotient:
  1575                           	opt callstack 0
  1576                           
  1577                           ; 8 bytes @ 0x12
  1578  000092                     	ds	1
  1579  000093                     _atoi$1735:
  1580                           	opt callstack 0
  1581                           
  1582                           ; 1 bytes @ 0x13
  1583  000093                     	ds	1
  1584  000094                     ??_abs:
  1585  000094                     ?_pad:
  1586                           	opt callstack 0
  1587  000094                     pad@fp:
  1588                           	opt callstack 0
  1589  000094                     atoi@n:
  1590                           	opt callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x14
  1593  000094                     	ds	1
  1594  000095                     
  1595                           ; 1 bytes @ 0x15
  1596  000095                     	ds	1
  1597  000096                     pad@buf:
  1598                           	opt callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x16
  1601  000096                     	ds	2
  1602  000098                     pad@p:
  1603                           	opt callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x18
  1606  000098                     	ds	2
  1607  00009A                     ??_pad:
  1608                           
  1609                           ; 1 bytes @ 0x1A
  1610  00009A                     	ds	1
  1611  00009B                     pad@i:
  1612                           	opt callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x1B
  1615  00009B                     	ds	2
  1616  00009D                     pad@w:
  1617                           	opt callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x1D
  1620  00009D                     	ds	2
  1621  00009F                     ?_dtoa:
  1622                           	opt callstack 0
  1623  00009F                     ?_xtoa:
  1624                           	opt callstack 0
  1625  00009F                     dtoa@fp:
  1626                           	opt callstack 0
  1627  00009F                     xtoa@fp:
  1628                           	opt callstack 0
  1629                           
  1630                           ; 2 bytes @ 0x1F
  1631  00009F                     	ds	2
  1632  0000A1                     dtoa@d:
  1633                           	opt callstack 0
  1634  0000A1                     xtoa@d:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 8 bytes @ 0x21
  1638  0000A1                     	ds	8
  1639  0000A9                     ??_dtoa:
  1640  0000A9                     xtoa@x:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x29
  1644  0000A9                     	ds	1
  1645  0000AA                     ??_xtoa:
  1646                           
  1647                           ; 1 bytes @ 0x2A
  1648  0000AA                     	ds	7
  1649  0000B1                     _dtoa$1250:
  1650                           	opt callstack 0
  1651                           
  1652                           ; 2 bytes @ 0x31
  1653  0000B1                     	ds	1
  1654  0000B2                     _xtoa$1261:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 2 bytes @ 0x32
  1658  0000B2                     	ds	1
  1659  0000B3                     dtoa@p:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 2 bytes @ 0x33
  1663  0000B3                     	ds	1
  1664  0000B4                     _xtoa$1262:
  1665                           	opt callstack 0
  1666                           
  1667                           ; 2 bytes @ 0x34
  1668  0000B4                     	ds	1
  1669  0000B5                     dtoa@w:
  1670                           	opt callstack 0
  1671                           
  1672                           ; 2 bytes @ 0x35
  1673  0000B5                     	ds	1
  1674  0000B6                     xtoa@p:
  1675                           	opt callstack 0
  1676                           
  1677                           ; 2 bytes @ 0x36
  1678  0000B6                     	ds	1
  1679  0000B7                     dtoa@s:
  1680                           	opt callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x37
  1683  0000B7                     	ds	1
  1684  0000B8                     xtoa@w:
  1685                           	opt callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x38
  1688  0000B8                     	ds	1
  1689  0000B9                     dtoa@n:
  1690                           	opt callstack 0
  1691                           
  1692                           ; 8 bytes @ 0x39
  1693  0000B9                     	ds	1
  1694  0000BA                     xtoa@n:
  1695                           	opt callstack 0
  1696                           
  1697                           ; 8 bytes @ 0x3A
  1698  0000BA                     	ds	7
  1699  0000C1                     dtoa@i:
  1700                           	opt callstack 0
  1701                           
  1702                           ; 2 bytes @ 0x41
  1703  0000C1                     	ds	1
  1704  0000C2                     xtoa@i:
  1705                           	opt callstack 0
  1706                           
  1707                           ; 2 bytes @ 0x42
  1708  0000C2                     	ds	2
  1709  0000C4                     xtoa@c:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x44
  1713  0000C4                     	ds	2
  1714  0000C6                     ?_vfpfcnvrt:
  1715                           	opt callstack 0
  1716  0000C6                     vfpfcnvrt@fp:
  1717                           	opt callstack 0
  1718                           
  1719                           ; 2 bytes @ 0x46
  1720  0000C6                     	ds	2
  1721  0000C8                     vfpfcnvrt@fmt:
  1722                           	opt callstack 0
  1723                           
  1724                           ; 2 bytes @ 0x48
  1725  0000C8                     	ds	2
  1726  0000CA                     vfpfcnvrt@ap:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 2 bytes @ 0x4A
  1730  0000CA                     	ds	2
  1731  0000CC                     ??_vfpfcnvrt:
  1732                           
  1733                           ; 1 bytes @ 0x4C
  1734  0000CC                     	ds	4
  1735  0000D0                     vfpfcnvrt@ll:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 8 bytes @ 0x50
  1739  0000D0                     	ds	8
  1740  0000D8                     vfpfcnvrt@llu:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 8 bytes @ 0x58
  1744  0000D8                     	ds	8
  1745  0000E0                     vfpfcnvrt@c:
  1746                           	opt callstack 0
  1747                           
  1748                           ; 1 bytes @ 0x60
  1749  0000E0                     	ds	1
  1750  0000E1                     vfpfcnvrt@done:
  1751                           	opt callstack 0
  1752                           
  1753                           ; 2 bytes @ 0x61
  1754  0000E1                     	ds	2
  1755  0000E3                     _vfpfcnvrt$1276:
  1756                           	opt callstack 0
  1757                           
  1758                           ; 2 bytes @ 0x63
  1759  0000E3                     	ds	2
  1760  0000E5                     ?_vfprintf:
  1761                           	opt callstack 0
  1762  0000E5                     vfprintf@fp:
  1763                           	opt callstack 0
  1764                           
  1765                           ; 2 bytes @ 0x65
  1766  0000E5                     	ds	2
  1767  0000E7                     vfprintf@fmt:
  1768                           	opt callstack 0
  1769                           
  1770                           ; 2 bytes @ 0x67
  1771  0000E7                     	ds	2
  1772  0000E9                     vfprintf@ap:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 2 bytes @ 0x69
  1776  0000E9                     	ds	2
  1777  0000EB                     vfprintf@cfmt:
  1778                           	opt callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x6B
  1781  0000EB                     	ds	2
  1782  0000ED                     ?_printf:
  1783                           	opt callstack 0
  1784  0000ED                     printf@fmt:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x6D
  1788  0000ED                     	ds	10
  1789  0000F7                     
  1790                           ; 1 bytes @ 0x77
  1791  0000F7                     	ds	2
  1792  0000F9                     printf@ap:
  1793                           	opt callstack 0
  1794                           
  1795                           ; 2 bytes @ 0x79
  1796  0000F9                     	ds	2
  1797  0000FB                     ??_brake:
  1798  0000FB                     ??_print_echo:
  1799  0000FB                     ??_number_deploy:
  1800  0000FB                     full_drive@stepper_no:
  1801                           	opt callstack 0
  1802  0000FB                     UI_main@t_dep:
  1803                           	opt callstack 0
  1804                           
  1805                           ; 2 bytes @ 0x7B
  1806  0000FB                     	ds	1
  1807  0000FC                     ?_ultrasonic_main:
  1808                           	opt callstack 0
  1809                           
  1810                           ; 2 bytes @ 0x7C
  1811  0000FC                     	ds	1
  1812  0000FD                     ??_full_drive:
  1813  0000FD                     UI_main@poles_detected:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 2 bytes @ 0x7D
  1817  0000FD                     	ds	1
  1818  0000FE                     full_drive@direction:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 1 bytes @ 0x7E
  1822  0000FE                     	ds	1
  1823                           
  1824                           	psect	cstackCOMRAM
  1825  000001                     __pcstackCOMRAM:
  1826                           	opt callstack 0
  1827  000001                     ?___awdiv:
  1828                           	opt callstack 0
  1829  000001                     ?___xxtofl:
  1830                           	opt callstack 0
  1831  000001                     ___awdiv@dividend:
  1832                           	opt callstack 0
  1833  000001                     ___xxtofl@val:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 4 bytes @ 0x0
  1837  000001                     	ds	2
  1838  000003                     ___awdiv@divisor:
  1839                           	opt callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x2
  1842  000003                     	ds	2
  1843  000005                     ??___xxtofl:
  1844  000005                     ___awdiv@counter:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 1 bytes @ 0x4
  1848  000005                     	ds	1
  1849  000006                     ___awdiv@sign:
  1850                           	opt callstack 0
  1851                           
  1852                           ; 1 bytes @ 0x5
  1853  000006                     	ds	1
  1854  000007                     ___awdiv@quotient:
  1855                           	opt callstack 0
  1856                           
  1857                           ; 2 bytes @ 0x6
  1858  000007                     	ds	2
  1859  000009                     ___xxtofl@sign:
  1860                           	opt callstack 0
  1861                           
  1862                           ; 1 bytes @ 0x8
  1863  000009                     	ds	1
  1864  00000A                     ___xxtofl@exp:
  1865                           	opt callstack 0
  1866                           
  1867                           ; 1 bytes @ 0x9
  1868  00000A                     	ds	1
  1869  00000B                     ___xxtofl@arg:
  1870                           	opt callstack 0
  1871                           
  1872                           ; 4 bytes @ 0xA
  1873  00000B                     	ds	4
  1874  00000F                     ?___fldiv:
  1875                           	opt callstack 0
  1876  00000F                     ___fldiv@b:
  1877                           	opt callstack 0
  1878                           
  1879                           ; 4 bytes @ 0xE
  1880  00000F                     	ds	4
  1881  000013                     ___fldiv@a:
  1882                           	opt callstack 0
  1883                           
  1884                           ; 4 bytes @ 0x12
  1885  000013                     	ds	4
  1886  000017                     ??___fldiv:
  1887                           
  1888                           ; 1 bytes @ 0x16
  1889  000017                     	ds	4
  1890  00001B                     ___fldiv@rem:
  1891                           	opt callstack 0
  1892                           
  1893                           ; 4 bytes @ 0x1A
  1894  00001B                     	ds	4
  1895  00001F                     ___fldiv@sign:
  1896                           	opt callstack 0
  1897                           
  1898                           ; 1 bytes @ 0x1E
  1899  00001F                     	ds	1
  1900  000020                     ___fldiv@new_exp:
  1901                           	opt callstack 0
  1902                           
  1903                           ; 2 bytes @ 0x1F
  1904  000020                     	ds	2
  1905  000022                     ___fldiv@grs:
  1906                           	opt callstack 0
  1907                           
  1908                           ; 4 bytes @ 0x21
  1909  000022                     	ds	4
  1910  000026                     ___fldiv@bexp:
  1911                           	opt callstack 0
  1912                           
  1913                           ; 1 bytes @ 0x25
  1914  000026                     	ds	1
  1915  000027                     ___fldiv@aexp:
  1916                           	opt callstack 0
  1917                           
  1918                           ; 1 bytes @ 0x26
  1919  000027                     	ds	1
  1920  000028                     ?___fltol:
  1921                           	opt callstack 0
  1922  000028                     ___fltol@f1:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 4 bytes @ 0x27
  1926  000028                     	ds	4
  1927  00002C                     ??___fltol:
  1928                           
  1929                           ; 1 bytes @ 0x2B
  1930  00002C                     	ds	4
  1931  000030                     ___fltol@sign1:
  1932                           	opt callstack 0
  1933                           
  1934                           ; 1 bytes @ 0x2F
  1935  000030                     	ds	1
  1936  000031                     ___fltol@exp1:
  1937                           	opt callstack 0
  1938                           
  1939                           ; 1 bytes @ 0x30
  1940  000031                     	ds	1
  1941  000032                     ??_echo:
  1942                           
  1943                           ; 1 bytes @ 0x31
  1944  000032                     	ds	4
  1945  000036                     ??_ISR:
  1946                           
  1947                           ; 1 bytes @ 0x35
  1948  000036                     	ds	2
  1949                           
  1950 ;;
  1951 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1952 ;;
  1953 ;; *************** function _main *****************
  1954 ;; Defined at:
  1955 ;;		line 723 in file "main.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  k               2  105[BANK3 ] int 
  1960 ;;  i               2   86[BANK3 ] int 
  1961 ;;  i               2   84[BANK3 ] int 
  1962 ;;  i               2  112[BANK3 ] int 
  1963 ;;  i               2   94[BANK3 ] int 
  1964 ;;  i               2   92[BANK3 ] int 
  1965 ;;  i               2   90[BANK3 ] int 
  1966 ;;  i               2   88[BANK3 ] int 
  1967 ;;  addr            1  111[BANK3 ] unsigned char 
  1968 ;;  from_eeprom     1    0        unsigned char 
  1969 ;;  pole_cl_dist    2    2[BANK3 ] int 
  1970 ;;  Pole           80    4[BANK3 ] struct Poles[10]
  1971 ;;  data            8  124[BANK3 ] volatile int [4]
  1972 ;;  prev_avg_dis    4  116[BANK3 ] volatile long 
  1973 ;;  poles_detect    2  132[BANK3 ] int 
  1974 ;;  t_dep           2  114[BANK3 ] int 
  1975 ;;  t_count         2  109[BANK3 ] int 
  1976 ;;  data_g          2  107[BANK3 ] unsigned int 
  1977 ;;  steps2_adj      2  103[BANK3 ] int 
  1978 ;;  stack           2  101[BANK3 ] int 
  1979 ;;  dist_tot        2  122[BANK3 ] volatile int 
  1980 ;;  t_det           2  120[BANK3 ] volatile int 
  1981 ;;  read            2    0        int 
  1982 ;;  arduino_stop    1  100[BANK3 ] _Bool 
  1983 ;;  act_done        1   99[BANK3 ] _Bool 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0     134       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Totals:         0       0       4       0     134       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;Total ram usage:      138 bytes
  1998 ;; Hardware stack levels required when called:   17
  1999 ;; This function calls:
  2000 ;;		_I2C_Master_Read
  2001 ;;		_I2C_Master_RepeatedStart
  2002 ;;		_I2C_Master_Stop
  2003 ;;		_I2C_Master_Write
  2004 ;;		_UI_main
  2005 ;;		___wmul
  2006 ;;		_actuators_main
  2007 ;;		_backwards
  2008 ;;		_brake
  2009 ;;		_ee_write_byte
  2010 ;;		_initLCD
  2011 ;;		_lcdInst
  2012 ;;		_number_deploy
  2013 ;;		_printf
  2014 ;;		_start
  2015 ;;		_ultrasonic_main
  2016 ;; This function is called by:
  2017 ;;		Startup code after reset
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text0
  2022  000012                     __ptext0:
  2023                           	opt callstack 0
  2024  000012                     _main:
  2025                           	opt callstack 14
  2026                           
  2027                           ;main.c: 725:     int t_dep=0;
  2028                           
  2029                           ;incstack = 0
  2030  000012  0E00               	movlw	0
  2031  000014  0103               	movlb	3	; () banked
  2032  000016  6F73               	movwf	(main@t_dep+1)& (0+255),b
  2033  000018  0E00               	movlw	0
  2034  00001A  6F72               	movwf	main@t_dep& (0+255),b
  2035                           
  2036                           ;main.c: 726:     int t_count;;main.c: 727:  TRISD = 0x00;
  2037  00001C  0E00               	movlw	0
  2038  00001E  6E95               	movwf	3989,c	;volatile
  2039                           
  2040                           ; BSR set to: 3
  2041                           ;main.c: 728:  GIE = 1;
  2042  000020  8EF2               	bsf	4082,7,c	;volatile
  2043                           
  2044                           ;main.c: 729:     int steps2_adj =0;
  2045  000022  0E00               	movlw	0
  2046  000024  6F68               	movwf	(main@steps2_adj+1)& (0+255),b
  2047  000026  0E00               	movlw	0
  2048  000028  6F67               	movwf	main@steps2_adj& (0+255),b
  2049                           
  2050                           ;main.c: 730:     ADCON1=0x0F;
  2051  00002A  0E0F               	movlw	15
  2052  00002C  6EC1               	movwf	4033,c	;volatile
  2053                           
  2054                           ; BSR set to: 3
  2055                           ;main.c: 732:  initLCD();
  2056  00002E  EC96  F01D         	call	_initLCD	;wreg free
  2057                           
  2058                           ;main.c: 734:  T1CON = 0x10;
  2059  000032  0E10               	movlw	16
  2060  000034  6ECD               	movwf	4045,c	;volatile
  2061                           
  2062                           ;main.c: 735:     int poles_detected=0;
  2063  000036  0E00               	movlw	0
  2064  000038  0103               	movlb	3	; () banked
  2065  00003A  6F85               	movwf	(main@poles_detected+1)& (0+255),b
  2066  00003C  0E00               	movlw	0
  2067  00003E  6F84               	movwf	main@poles_detected& (0+255),b
  2068                           
  2069                           ; BSR set to: 3
  2070                           ;main.c: 737:     volatile long prev_avg_dist=0;
  2071                           
  2072                           ; BSR set to: 3
  2073  000040  0E00               	movlw	0
  2074  000042  6F74               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  2075  000044  0E00               	movlw	0
  2076  000046  6F75               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  2077  000048  0E00               	movlw	0
  2078  00004A  6F76               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  2079  00004C  0E00               	movlw	0
  2080  00004E  6F77               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  2081                           
  2082                           ; BSR set to: 3
  2083                           ;main.c: 738:     volatile int data[4];;main.c: 739:     unsigned int data_g;;main.c: 74
      +                          0:     TRISAbits.RA4 = 0;
  2084  000050  9892               	bcf	3986,4,c	;volatile
  2085                           
  2086                           ; BSR set to: 3
  2087                           ;main.c: 741:     PORTAbits.RA4 = LATAbits.LATA4;
  2088  000052  A889               	btfss	3977,4,c	;volatile
  2089  000054  D002               	bra	u8925
  2090  000056  8880               	bsf	3968,4,c	;volatile
  2091  000058  D001               	bra	u8927
  2092  00005A                     u8925:
  2093  00005A  9880               	bcf	3968,4,c	;volatile
  2094  00005C                     u8927:
  2095                           
  2096                           ;main.c: 744:     _Bool arduino_stopped = 0;
  2097  00005C  0E00               	movlw	0
  2098  00005E  0103               	movlb	3	; () banked
  2099  000060  6F64               	movwf	main@arduino_stopped& (0+255),b
  2100                           
  2101                           ; BSR set to: 3
  2102                           ;main.c: 745:     volatile int t_det = 0;
  2103  000062  0E00               	movlw	0
  2104  000064  6F79               	movwf	(main@t_det+1)& (0+255),b	;volatile
  2105  000066  0E00               	movlw	0
  2106  000068  6F78               	movwf	main@t_det& (0+255),b	;volatile
  2107                           
  2108                           ; BSR set to: 3
  2109                           ;main.c: 746:     volatile int dist_tot = 0;
  2110  00006A  0E00               	movlw	0
  2111  00006C  6F7B               	movwf	(main@dist_tot+1)& (0+255),b	;volatile
  2112  00006E  0E00               	movlw	0
  2113  000070  6F7A               	movwf	main@dist_tot& (0+255),b	;volatile
  2114                           
  2115                           ; BSR set to: 3
  2116                           ;main.c: 747:     Poles Pole[10];;main.c: 755:     if (~sens){
  2117  000072  2858               	incf	_sens,w,c	;volatile
  2118  000074  E103               	bnz	u8930
  2119  000076  2859               	incf	_sens+1,w,c	;volatile
  2120  000078  B4D8               	btfsc	status,2,c
  2121  00007A  D011               	goto	l8494
  2122  00007C                     u8930:
  2123                           
  2124                           ; BSR set to: 3
  2125                           ;main.c: 759:         TRISBbits.RB0 = 0;
  2126  00007C  9093               	bcf	3987,0,c	;volatile
  2127                           
  2128                           ;main.c: 760:         LATBbits.LATB0 = 0;
  2129  00007E  908A               	bcf	3978,0,c	;volatile
  2130                           
  2131                           ;main.c: 762:         GIE = 1;
  2132  000080  8EF2               	bsf	4082,7,c	;volatile
  2133                           
  2134                           ;main.c: 763:         TRISB = 0b11111111;
  2135  000082  6893               	setf	3987,c	;volatile
  2136                           
  2137                           ; BSR set to: 3
  2138                           ;main.c: 764:         send = 1;
  2139  000084  0E01               	movlw	1
  2140  000086  6E6D               	movwf	_send,c
  2141                           
  2142                           ; BSR set to: 3
  2143                           ;main.c: 765:         UI_main( t_dep, poles_detected);
  2144  000088  0E00               	movlw	0
  2145  00008A  0100               	movlb	0	; () banked
  2146  00008C  6FFC               	movwf	(UI_main@t_dep+1)& (0+255),b
  2147  00008E  0E00               	movlw	0
  2148  000090  6FFB               	movwf	UI_main@t_dep& (0+255),b
  2149  000092  0E00               	movlw	0
  2150  000094  6FFE               	movwf	(UI_main@poles_detected+1)& (0+255),b
  2151  000096  0E00               	movlw	0
  2152  000098  6FFD               	movwf	UI_main@poles_detected& (0+255),b
  2153  00009A  EC00  F005         	call	_UI_main	;wreg free
  2154  00009E                     l8494:
  2155                           
  2156                           ;main.c: 768:         PORTAbits.RA4 = LATAbits.LATA4;
  2157  00009E  A889               	btfss	3977,4,c	;volatile
  2158  0000A0  D002               	bra	u8945
  2159  0000A2  8880               	bsf	3968,4,c	;volatile
  2160  0000A4  D001               	bra	u8947
  2161  0000A6                     u8945:
  2162  0000A6  9880               	bcf	3968,4,c	;volatile
  2163  0000A8                     u8947:
  2164                           
  2165                           ;main.c: 776:         if ((poles_detected <10)&&(dist_tot <4000)){
  2166  0000A8  0103               	movlb	3	; () banked
  2167  0000AA  BF85               	btfsc	(main@poles_detected+1)& (0+255),7,b
  2168  0000AC  D006               	goto	u8950
  2169  0000AE  5185               	movf	(main@poles_detected+1)& (0+255),w,b
  2170  0000B0  E103               	bnz	u8951
  2171  0000B2  0E0A               	movlw	10
  2172  0000B4  5D84               	subwf	main@poles_detected& (0+255),w,b
  2173  0000B6  B0D8               	btfsc	status,0,c
  2174  0000B8                     u8951:
  2175  0000B8  D37E               	goto	l8692
  2176  0000BA                     u8950:
  2177                           
  2178                           ; BSR set to: 3
  2179  0000BA  BF7B               	btfsc	(main@dist_tot+1)& (0+255),7,b	;volatile
  2180  0000BC  D105               	goto	l8582
  2181  0000BE  0EA0               	movlw	160
  2182  0000C0  5D7A               	subwf	main@dist_tot& (0+255),w,b	;volatile
  2183  0000C2  0E0F               	movlw	15
  2184  0000C4  597B               	subwfb	(main@dist_tot+1)& (0+255),w,b	;volatile
  2185  0000C6  A0D8               	btfss	status,0,c
  2186  0000C8  D0FF               	goto	l8582
  2187  0000CA  D375               	goto	l8692
  2188  0000CC                     l8502:
  2189                           
  2190                           ;main.c: 787:                 t_count = 5;
  2191  0000CC  0E00               	movlw	0
  2192  0000CE  0103               	movlb	3	; () banked
  2193  0000D0  6F6E               	movwf	(main@t_count+1)& (0+255),b
  2194  0000D2  0E05               	movlw	5
  2195  0000D4  6F6D               	movwf	main@t_count& (0+255),b
  2196                           
  2197                           ; BSR set to: 3
  2198                           ;main.c: 788:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2199  0000D6  0E01               	movlw	1
  2200  0000D8  ECC6  F020         	call	_lcdInst
  2201  0000DC  0E11               	movlw	17
  2202  0000DE  0101               	movlb	1	; () banked
  2203  0000E0  6F5A               	movwf	??_main& (0+255),b
  2204  0000E2  0E3A               	movlw	58
  2205  0000E4                     u9207:
  2206  0000E4  2EE8               	decfsz	wreg,f,c
  2207  0000E6  D7FE               	bra	u9207
  2208  0000E8  2F5A               	decfsz	??_main& (0+255),f,b
  2209  0000EA  D7FC               	bra	u9207
  2210  0000EC  F000               	nop	
  2211                           
  2212                           ;main.c: 789:                     printf("waiting");
  2213  0000EE  0E06               	movlw	low (STR_55+5)
  2214  0000F0  0100               	movlb	0	; () banked
  2215  0000F2  6FED               	movwf	printf@fmt& (0+255),b
  2216  0000F4  0EFF               	movlw	high (STR_55+5)
  2217  0000F6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2218  0000F8  EC60  F020         	call	_printf	;wreg free
  2219                           
  2220                           ;main.c: 791:                     if (!PORTAbits.RA4){
  2221  0000FC  B880               	btfsc	3968,4,c	;volatile
  2222  0000FE  D013               	goto	l8518
  2223                           
  2224                           ;main.c: 792:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2225  000100  0E01               	movlw	1
  2226  000102  ECC6  F020         	call	_lcdInst
  2227  000106  0E11               	movlw	17
  2228  000108  0101               	movlb	1	; () banked
  2229  00010A  6F5A               	movwf	??_main& (0+255),b
  2230  00010C  0E3A               	movlw	58
  2231  00010E                     u9217:
  2232  00010E  2EE8               	decfsz	wreg,f,c
  2233  000110  D7FE               	bra	u9217
  2234  000112  2F5A               	decfsz	??_main& (0+255),f,b
  2235  000114  D7FC               	bra	u9217
  2236  000116  F000               	nop	
  2237                           
  2238                           ;main.c: 793:                         printf("more waiting");
  2239  000118  0E01               	movlw	low STR_55
  2240  00011A  0100               	movlb	0	; () banked
  2241  00011C  6FED               	movwf	printf@fmt& (0+255),b
  2242  00011E  0EFF               	movlw	high STR_55
  2243  000120  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2244  000122  EC60  F020         	call	_printf	;wreg free
  2245  000126                     l8518:
  2246                           
  2247                           ;main.c: 795:                     if (PORTAbits.RA4){
  2248  000126  A880               	btfss	3968,4,c	;volatile
  2249  000128  D098               	goto	l8568
  2250                           
  2251                           ;main.c: 798:                         I2C_Master_RepeatedStart();
  2252  00012A  ECDB  F020         	call	_I2C_Master_RepeatedStart	;wreg free
  2253                           
  2254                           ;main.c: 799:                         I2C_Master_Write(0b00010001);
  2255  00012E  0E00               	movlw	0
  2256  000130  0100               	movlb	0	; () banked
  2257  000132  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2258  000134  0E11               	movlw	17
  2259  000136  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2260  000138  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  2261                           
  2262                           ;main.c: 800:                         data[0] = I2C_Master_Read(0);
  2263  00013C  0E00               	movlw	0
  2264  00013E  EC4B  F020         	call	_I2C_Master_Read
  2265  000142  0101               	movlb	1	; () banked
  2266  000144  6F5A               	movwf	??_main& (0+255),b
  2267  000146  515A               	movf	??_main& (0+255),w,b
  2268  000148  0103               	movlb	3	; () banked
  2269  00014A  6F7C               	movwf	main@data& (0+255),b	;volatile
  2270  00014C  6B7D               	clrf	(main@data+1)& (0+255),b	;volatile
  2271                           
  2272                           ;main.c: 801:                         data[1] = I2C_Master_Read(0);
  2273  00014E  0E00               	movlw	0
  2274  000150  EC4B  F020         	call	_I2C_Master_Read
  2275  000154  0101               	movlb	1	; () banked
  2276  000156  6F5A               	movwf	??_main& (0+255),b
  2277  000158  515A               	movf	??_main& (0+255),w,b
  2278  00015A  0103               	movlb	3	; () banked
  2279  00015C  6F7E               	movwf	(main@data+2)& (0+255),b	;volatile
  2280  00015E  6B7F               	clrf	(main@data+3)& (0+255),b	;volatile
  2281                           
  2282                           ;main.c: 802:                         data[2] = I2C_Master_Read(0);
  2283  000160  0E00               	movlw	0
  2284  000162  EC4B  F020         	call	_I2C_Master_Read
  2285  000166  0101               	movlb	1	; () banked
  2286  000168  6F5A               	movwf	??_main& (0+255),b
  2287  00016A  515A               	movf	??_main& (0+255),w,b
  2288  00016C  0103               	movlb	3	; () banked
  2289  00016E  6F80               	movwf	(main@data+4)& (0+255),b	;volatile
  2290  000170  6B81               	clrf	(main@data+5)& (0+255),b	;volatile
  2291                           
  2292                           ;main.c: 803:                         data[3] = I2C_Master_Read(1);
  2293  000172  0E01               	movlw	1
  2294  000174  EC4B  F020         	call	_I2C_Master_Read
  2295  000178  0101               	movlb	1	; () banked
  2296  00017A  6F5A               	movwf	??_main& (0+255),b
  2297  00017C  515A               	movf	??_main& (0+255),w,b
  2298  00017E  0103               	movlb	3	; () banked
  2299  000180  6F82               	movwf	(main@data+6)& (0+255),b	;volatile
  2300  000182  6B83               	clrf	(main@data+7)& (0+255),b	;volatile
  2301                           
  2302                           ; BSR set to: 3
  2303                           ;main.c: 805:                         data_g = data[0];
  2304  000184  C37C  F36B         	movff	main@data,main@data_g	;volatile
  2305  000188  C37D  F36C         	movff	main@data+1,main@data_g+1	;volatile
  2306                           
  2307                           ; BSR set to: 3
  2308                           ;main.c: 806:                         data_g = (data_g<<8)||(data[1]);
  2309  00018C  0E01               	movlw	1
  2310  00018E  6F60               	movwf	_main$1077& (0+255),b
  2311                           
  2312                           ; BSR set to: 3
  2313  000190  516B               	movf	main@data_g& (0+255),w,b
  2314  000192  0101               	movlb	1	; () banked
  2315  000194  6F5B               	movwf	(??_main+1)& (0+255),b
  2316  000196  6B5A               	clrf	??_main& (0+255),b
  2317  000198  515A               	movf	??_main& (0+255),w,b
  2318  00019A  115B               	iorwf	(??_main+1)& (0+255),w,b
  2319  00019C  A4D8               	btfss	status,2,c
  2320  00019E  D007               	goto	l8532
  2321                           
  2322                           ; BSR set to: 1
  2323  0001A0  0103               	movlb	3	; () banked
  2324  0001A2  517E               	movf	(main@data+2)& (0+255),w,b	;volatile
  2325  0001A4  117F               	iorwf	(main@data+3)& (0+255),w,b	;volatile
  2326  0001A6  A4D8               	btfss	status,2,c
  2327  0001A8  D002               	goto	l8532
  2328                           
  2329                           ; BSR set to: 3
  2330  0001AA  0E00               	movlw	0
  2331  0001AC  6F60               	movwf	_main$1077& (0+255),b
  2332  0001AE                     l8532:
  2333  0001AE  C360  F36B         	movff	_main$1077,main@data_g
  2334  0001B2  0103               	movlb	3	; () banked
  2335  0001B4  6B6C               	clrf	(main@data_g+1)& (0+255),b
  2336                           
  2337                           ;main.c: 807:                         data_g = (data_g<<8)||(data[2]);
  2338  0001B6  0E01               	movlw	1
  2339  0001B8  6F61               	movwf	_main$1078& (0+255),b
  2340                           
  2341                           ; BSR set to: 3
  2342  0001BA  516B               	movf	main@data_g& (0+255),w,b
  2343  0001BC  0101               	movlb	1	; () banked
  2344  0001BE  6F5B               	movwf	(??_main+1)& (0+255),b
  2345  0001C0  6B5A               	clrf	??_main& (0+255),b
  2346  0001C2  515A               	movf	??_main& (0+255),w,b
  2347  0001C4  115B               	iorwf	(??_main+1)& (0+255),w,b
  2348  0001C6  A4D8               	btfss	status,2,c
  2349  0001C8  D007               	goto	l8540
  2350                           
  2351                           ; BSR set to: 1
  2352  0001CA  0103               	movlb	3	; () banked
  2353  0001CC  5180               	movf	(main@data+4)& (0+255),w,b	;volatile
  2354  0001CE  1181               	iorwf	(main@data+5)& (0+255),w,b	;volatile
  2355  0001D0  A4D8               	btfss	status,2,c
  2356  0001D2  D002               	goto	l8540
  2357                           
  2358                           ; BSR set to: 3
  2359  0001D4  0E00               	movlw	0
  2360  0001D6  6F61               	movwf	_main$1078& (0+255),b
  2361  0001D8                     l8540:
  2362  0001D8  C361  F36B         	movff	_main$1078,main@data_g
  2363  0001DC  0103               	movlb	3	; () banked
  2364  0001DE  6B6C               	clrf	(main@data_g+1)& (0+255),b
  2365                           
  2366                           ;main.c: 808:                         data_g = (data_g<<8)||(data[3]);
  2367  0001E0  0E01               	movlw	1
  2368  0001E2  6F62               	movwf	_main$1079& (0+255),b
  2369                           
  2370                           ; BSR set to: 3
  2371  0001E4  516B               	movf	main@data_g& (0+255),w,b
  2372  0001E6  0101               	movlb	1	; () banked
  2373  0001E8  6F5B               	movwf	(??_main+1)& (0+255),b
  2374  0001EA  6B5A               	clrf	??_main& (0+255),b
  2375  0001EC  515A               	movf	??_main& (0+255),w,b
  2376  0001EE  115B               	iorwf	(??_main+1)& (0+255),w,b
  2377  0001F0  A4D8               	btfss	status,2,c
  2378  0001F2  D007               	goto	l8548
  2379                           
  2380                           ; BSR set to: 1
  2381  0001F4  0103               	movlb	3	; () banked
  2382  0001F6  5182               	movf	(main@data+6)& (0+255),w,b	;volatile
  2383  0001F8  1183               	iorwf	(main@data+7)& (0+255),w,b	;volatile
  2384  0001FA  A4D8               	btfss	status,2,c
  2385  0001FC  D002               	goto	l8548
  2386                           
  2387                           ; BSR set to: 3
  2388  0001FE  0E00               	movlw	0
  2389  000200  6F62               	movwf	_main$1079& (0+255),b
  2390  000202                     l8548:
  2391  000202  C362  F36B         	movff	_main$1079,main@data_g
  2392  000206  0103               	movlb	3	; () banked
  2393  000208  6B6C               	clrf	(main@data_g+1)& (0+255),b
  2394                           
  2395                           ; BSR set to: 3
  2396                           ;main.c: 809:                         I2C_Master_Stop();
  2397  00020A  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  2398                           
  2399                           ;main.c: 810:                         t_det = data[1];
  2400  00020E  C37E  F378         	movff	main@data+2,main@t_det	;volatile
  2401  000212  C37F  F379         	movff	main@data+3,main@t_det+1	;volatile
  2402                           
  2403                           ;main.c: 811:                         opTime = data[3];
  2404  000216  C382  F16D         	movff	main@data+6,_opTime	;volatile
  2405  00021A  C383  F16E         	movff	main@data+7,_opTime+1	;volatile
  2406                           
  2407                           ;main.c: 812:                         if (data[2]==1){
  2408  00021E  0103               	movlb	3	; () banked
  2409  000220  0580               	decf	(main@data+4)& (0+255),w,b	;volatile
  2410  000222  1181               	iorwf	(main@data+5)& (0+255),w,b	;volatile
  2411  000224  A4D8               	btfss	status,2,c
  2412  000226  D003               	goto	l8560
  2413                           
  2414                           ; BSR set to: 3
  2415                           ;main.c: 813:                             brake();
  2416  000228  EC1C  F01C         	call	_brake	;wreg free
  2417                           
  2418                           ;main.c: 814:                             break;
  2419  00022C  D051               	goto	u9070
  2420  00022E                     l8560:
  2421                           
  2422                           ; BSR set to: 3
  2423                           ;main.c: 816:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2424  00022E  0E01               	movlw	1
  2425  000230  ECC6  F020         	call	_lcdInst
  2426  000234  0E11               	movlw	17
  2427  000236  0101               	movlb	1	; () banked
  2428  000238  6F5A               	movwf	??_main& (0+255),b
  2429  00023A  0E3A               	movlw	58
  2430  00023C                     u9227:
  2431  00023C  2EE8               	decfsz	wreg,f,c
  2432  00023E  D7FE               	bra	u9227
  2433  000240  2F5A               	decfsz	??_main& (0+255),f,b
  2434  000242  D7FC               	bra	u9227
  2435  000244  F000               	nop	
  2436                           
  2437                           ;main.c: 817:                         printf("done wait");
  2438  000246  0EB5               	movlw	low STR_56
  2439  000248  0100               	movlb	0	; () banked
  2440  00024A  6FED               	movwf	printf@fmt& (0+255),b
  2441  00024C  0EFF               	movlw	high STR_56
  2442  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2443  000250  EC60  F020         	call	_printf	;wreg free
  2444                           
  2445                           ;main.c: 818:                         arduino_stopped = 1;
  2446  000254  0E01               	movlw	1
  2447  000256  0103               	movlb	3	; () banked
  2448  000258  6F64               	movwf	main@arduino_stopped& (0+255),b
  2449  00025A                     l8568:
  2450                           
  2451                           ;main.c: 820:                     if (arduino_stopped){
  2452  00025A  0103               	movlb	3	; () banked
  2453  00025C  5164               	movf	main@arduino_stopped& (0+255),w,b
  2454  00025E  B4D8               	btfsc	status,2,c
  2455  000260  D033               	goto	l8582
  2456                           
  2457                           ; BSR set to: 3
  2458                           ;main.c: 823:                         steps2_adj=ultrasonic_main();
  2459  000262  ECA7  F013         	call	_ultrasonic_main	;wreg free
  2460  000266  C0FC  F367         	movff	?_ultrasonic_main,main@steps2_adj
  2461  00026A  C0FD  F368         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2462                           
  2463                           ;main.c: 824:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2464  00026E  0E01               	movlw	1
  2465  000270  ECC6  F020         	call	_lcdInst
  2466  000274  0E11               	movlw	17
  2467  000276  0101               	movlb	1	; () banked
  2468  000278  6F5A               	movwf	??_main& (0+255),b
  2469  00027A  0E3A               	movlw	58
  2470  00027C                     u9237:
  2471  00027C  2EE8               	decfsz	wreg,f,c
  2472  00027E  D7FE               	bra	u9237
  2473  000280  2F5A               	decfsz	??_main& (0+255),f,b
  2474  000282  D7FC               	bra	u9237
  2475  000284  F000               	nop	
  2476                           
  2477                           ;main.c: 825:                         printf("stepsadj %d", steps2_adj);
  2478  000286  0E27               	movlw	low STR_21
  2479  000288  0100               	movlb	0	; () banked
  2480  00028A  6FED               	movwf	printf@fmt& (0+255),b
  2481  00028C  0EFF               	movlw	high STR_21
  2482  00028E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2483  000290  C367  F0EF         	movff	main@steps2_adj,?_printf+2
  2484  000294  C368  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2485  000298  EC60  F020         	call	_printf	;wreg free
  2486                           
  2487                           ;main.c: 826:                         t_count = number_deploy(avg_dist, poles_detected,t
      +                          _det);
  2488  00029C  C044  F100         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2489  0002A0  C045  F101         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2490  0002A4  C384  F102         	movff	main@poles_detected,number_deploy@poles_detected
  2491  0002A8  C385  F103         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2492  0002AC  C378  F104         	movff	main@t_det,number_deploy@tires_detected	;volatile
  2493  0002B0  C379  F105         	movff	main@t_det+1,number_deploy@tires_detected+1	;volatile
  2494  0002B4  ECC5  F017         	call	_number_deploy	;wreg free
  2495  0002B8  C100  F36D         	movff	?_number_deploy,main@t_count
  2496  0002BC  C101  F36E         	movff	?_number_deploy+1,main@t_count+1
  2497                           
  2498                           ;main.c: 827:                         sens = 0;
  2499  0002C0  0E00               	movlw	0
  2500  0002C2  6E59               	movwf	_sens+1,c	;volatile
  2501  0002C4  0E00               	movlw	0
  2502  0002C6  6E58               	movwf	_sens,c	;volatile
  2503  0002C8                     l8582:
  2504                           
  2505                           ;main.c: 784:             while (sens){
  2506  0002C8  5058               	movf	_sens,w,c	;volatile
  2507  0002CA  1059               	iorwf	_sens+1,w,c	;volatile
  2508  0002CC  A4D8               	btfss	status,2,c
  2509  0002CE  D6FE               	goto	l8502
  2510  0002D0                     u9070:
  2511                           
  2512                           ;main.c: 830:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  2513  0002D0  0103               	movlb	3	; () banked
  2514  0002D2  5174               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2515  0002D4  5C44               	subwf	_avg_dist,w,c	;volatile
  2516  0002D6  6F02               	movwf	main@pole_cl_dist& (0+255),b
  2517  0002D8  5175               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2518  0002DA  5845               	subwfb	_avg_dist+1,w,c	;volatile
  2519  0002DC  6F03               	movwf	(main@pole_cl_dist+1)& (0+255),b
  2520                           
  2521                           ; BSR set to: 3
  2522                           ;main.c: 836:             act_done = 0;
  2523  0002DE  0E00               	movlw	0
  2524  0002E0  6F63               	movwf	main@act_done& (0+255),b
  2525                           
  2526                           ; BSR set to: 3
  2527                           ;main.c: 837:             if (t_count<=2){
  2528  0002E2  BF6E               	btfsc	(main@t_count+1)& (0+255),7,b
  2529  0002E4  D006               	goto	u9080
  2530  0002E6  516E               	movf	(main@t_count+1)& (0+255),w,b
  2531  0002E8  E16D               	bnz	l566
  2532  0002EA  0E03               	movlw	3
  2533  0002EC  5D6D               	subwf	main@t_count& (0+255),w,b
  2534  0002EE  B0D8               	btfsc	status,0,c
  2535  0002F0  D069               	goto	l566
  2536  0002F2                     u9080:
  2537                           
  2538                           ; BSR set to: 3
  2539                           ;main.c: 838:                 if (t_dep <8){
  2540  0002F2  BF73               	btfsc	(main@t_dep+1)& (0+255),7,b
  2541  0002F4  D006               	goto	u9090
  2542  0002F6  5173               	movf	(main@t_dep+1)& (0+255),w,b
  2543  0002F8  E130               	bnz	l8606
  2544  0002FA  0E08               	movlw	8
  2545  0002FC  5D72               	subwf	main@t_dep& (0+255),w,b
  2546  0002FE  B0D8               	btfsc	status,0,c
  2547  000300  D02C               	goto	u9100
  2548  000302                     u9090:
  2549                           
  2550                           ; BSR set to: 3
  2551                           ;main.c: 841:                     stack = 1;
  2552  000302  0E00               	movlw	0
  2553  000304  6F66               	movwf	(main@stack+1)& (0+255),b
  2554  000306  0E01               	movlw	1
  2555  000308  6F65               	movwf	main@stack& (0+255),b
  2556                           
  2557                           ; BSR set to: 3
  2558                           ;main.c: 842:                     brake();
  2559  00030A  EC1C  F01C         	call	_brake	;wreg free
  2560                           
  2561                           ;main.c: 844:                     for(int i=0; i<(t_count); i++){
  2562  00030E  0E00               	movlw	0
  2563  000310  0103               	movlb	3	; () banked
  2564  000312  6F55               	movwf	(main@i+1)& (0+255),b
  2565  000314  0E00               	movlw	0
  2566  000316  6F54               	movwf	main@i& (0+255),b
  2567  000318  D013               	goto	l8604
  2568  00031A                     l8598:
  2569                           
  2570                           ; BSR set to: 1
  2571                           ;main.c: 845:                         actuators_main(stack, steps2_adj, t_dep);
  2572  00031A  C365  F112         	movff	main@stack,actuators_main@stack
  2573  00031E  C366  F113         	movff	main@stack+1,actuators_main@stack+1
  2574  000322  C367  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2575  000326  C368  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2576  00032A  C372  F116         	movff	main@t_dep,actuators_main@t_dep
  2577  00032E  C373  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2578  000332  EC91  F014         	call	_actuators_main	;wreg free
  2579                           
  2580                           ;main.c: 847:                         t_dep++;
  2581  000336  0103               	movlb	3	; () banked
  2582  000338  4B72               	infsnz	main@t_dep& (0+255),f,b
  2583  00033A  2B73               	incf	(main@t_dep+1)& (0+255),f,b
  2584                           
  2585                           ; BSR set to: 3
  2586                           ;main.c: 848:                     }
  2587  00033C  4B54               	infsnz	main@i& (0+255),f,b
  2588  00033E  2B55               	incf	(main@i+1)& (0+255),f,b
  2589  000340                     l8604:
  2590                           
  2591                           ; BSR set to: 3
  2592  000340  516D               	movf	main@t_count& (0+255),w,b
  2593  000342  5D54               	subwf	main@i& (0+255),w,b
  2594  000344  5155               	movf	(main@i+1)& (0+255),w,b
  2595  000346  0A80               	xorlw	128
  2596  000348  0101               	movlb	1	; () banked
  2597  00034A  6F5A               	movwf	??_main& (0+255),b
  2598  00034C  0103               	movlb	3	; () banked
  2599  00034E  516E               	movf	(main@t_count+1)& (0+255),w,b
  2600  000350  0A80               	xorlw	128
  2601  000352  0101               	movlb	1	; () banked
  2602  000354  595A               	subwfb	??_main& (0+255),w,b
  2603  000356  A0D8               	btfss	status,0,c
  2604  000358  D7E0               	goto	l8598
  2605  00035A                     u9100:
  2606  00035A                     l8606:
  2607                           
  2608                           ;main.c: 850:                 if (t_dep >= 8){
  2609  00035A  0103               	movlb	3	; () banked
  2610  00035C  BF73               	btfsc	(main@t_dep+1)& (0+255),7,b
  2611  00035E  D02F               	goto	u9120
  2612  000360  5173               	movf	(main@t_dep+1)& (0+255),w,b
  2613  000362  E104               	bnz	u9110
  2614  000364  0E08               	movlw	8
  2615  000366  5D72               	subwf	main@t_dep& (0+255),w,b
  2616  000368  A0D8               	btfss	status,0,c
  2617  00036A  D029               	goto	u9120
  2618  00036C                     u9110:
  2619                           
  2620                           ; BSR set to: 3
  2621                           ;main.c: 851:                     stack = 2;
  2622  00036C  0E00               	movlw	0
  2623  00036E  6F66               	movwf	(main@stack+1)& (0+255),b
  2624  000370  0E02               	movlw	2
  2625  000372  6F65               	movwf	main@stack& (0+255),b
  2626                           
  2627                           ;main.c: 852:                     for(int i=0; i<(t_count); i++){
  2628  000374  0E00               	movlw	0
  2629  000376  6F57               	movwf	(main@i_1087+1)& (0+255),b
  2630  000378  0E00               	movlw	0
  2631  00037A  6F56               	movwf	main@i_1087& (0+255),b
  2632  00037C  D013               	goto	l8616
  2633  00037E                     l8610:
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;main.c: 853:                         actuators_main(stack, steps2_adj, t_dep);
  2637  00037E  C365  F112         	movff	main@stack,actuators_main@stack
  2638  000382  C366  F113         	movff	main@stack+1,actuators_main@stack+1
  2639  000386  C367  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2640  00038A  C368  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2641  00038E  C372  F116         	movff	main@t_dep,actuators_main@t_dep
  2642  000392  C373  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2643  000396  EC91  F014         	call	_actuators_main	;wreg free
  2644                           
  2645                           ;main.c: 855:                         t_dep++;
  2646  00039A  0103               	movlb	3	; () banked
  2647  00039C  4B72               	infsnz	main@t_dep& (0+255),f,b
  2648  00039E  2B73               	incf	(main@t_dep+1)& (0+255),f,b
  2649                           
  2650                           ; BSR set to: 3
  2651                           ;main.c: 856:                     }
  2652  0003A0  4B56               	infsnz	main@i_1087& (0+255),f,b
  2653  0003A2  2B57               	incf	(main@i_1087+1)& (0+255),f,b
  2654  0003A4                     l8616:
  2655                           
  2656                           ; BSR set to: 3
  2657  0003A4  516D               	movf	main@t_count& (0+255),w,b
  2658  0003A6  5D56               	subwf	main@i_1087& (0+255),w,b
  2659  0003A8  5157               	movf	(main@i_1087+1)& (0+255),w,b
  2660  0003AA  0A80               	xorlw	128
  2661  0003AC  0101               	movlb	1	; () banked
  2662  0003AE  6F5A               	movwf	??_main& (0+255),b
  2663  0003B0  0103               	movlb	3	; () banked
  2664  0003B2  516E               	movf	(main@t_count+1)& (0+255),w,b
  2665  0003B4  0A80               	xorlw	128
  2666  0003B6  0101               	movlb	1	; () banked
  2667  0003B8  595A               	subwfb	??_main& (0+255),w,b
  2668  0003BA  A0D8               	btfss	status,0,c
  2669  0003BC  D7E0               	goto	l8610
  2670  0003BE                     u9120:
  2671                           
  2672                           ;main.c: 858:                 act_done = 1;
  2673  0003BE  0E01               	movlw	1
  2674  0003C0  0103               	movlb	3	; () banked
  2675  0003C2  6F63               	movwf	main@act_done& (0+255),b
  2676  0003C4                     l566:
  2677                           
  2678                           ; BSR set to: 3
  2679                           ;main.c: 860:             if (act_done){
  2680  0003C4  5163               	movf	main@act_done& (0+255),w,b
  2681  0003C6  B4D8               	btfsc	status,2,c
  2682  0003C8  D314               	goto	l8756
  2683                           
  2684                           ; BSR set to: 3
  2685                           ;main.c: 862:             dist_tot = dist_tot + avg_dist;
  2686  0003CA  5044               	movf	_avg_dist,w,c	;volatile
  2687  0003CC  257A               	addwf	main@dist_tot& (0+255),w,b
  2688  0003CE  6F7A               	movwf	main@dist_tot& (0+255),b	;volatile
  2689  0003D0  5045               	movf	_avg_dist+1,w,c	;volatile
  2690  0003D2  217B               	addwfc	(main@dist_tot+1)& (0+255),w,b
  2691  0003D4  6F7B               	movwf	(main@dist_tot+1)& (0+255),b	;volatile
  2692                           
  2693                           ; BSR set to: 3
  2694                           ;main.c: 863:             Pole[poles_detected].dist_from_cl = avg_dist;
  2695  0003D6  C384  F15A         	movff	main@poles_detected,??_main
  2696  0003DA  C385  F15B         	movff	main@poles_detected+1,??_main+1
  2697  0003DE  0101               	movlb	1	; () banked
  2698  0003E0  90D8               	bcf	status,0,c
  2699  0003E2  375A               	rlcf	??_main& (0+255),f,b
  2700  0003E4  375B               	rlcf	(??_main+1)& (0+255),f,b
  2701  0003E6  90D8               	bcf	status,0,c
  2702  0003E8  375A               	rlcf	??_main& (0+255),f,b
  2703  0003EA  375B               	rlcf	(??_main+1)& (0+255),f,b
  2704  0003EC  90D8               	bcf	status,0,c
  2705  0003EE  375A               	rlcf	??_main& (0+255),f,b
  2706  0003F0  375B               	rlcf	(??_main+1)& (0+255),f,b
  2707  0003F2  0E06               	movlw	6
  2708  0003F4  275A               	addwf	??_main& (0+255),f,b
  2709  0003F6  0E00               	movlw	0
  2710  0003F8  235B               	addwfc	(??_main+1)& (0+255),f,b
  2711  0003FA  0E04               	movlw	low main@Pole
  2712  0003FC  255A               	addwf	??_main& (0+255),w,b
  2713  0003FE  6ED9               	movwf	fsr2l,c
  2714  000400  0E03               	movlw	high main@Pole
  2715  000402  215B               	addwfc	(??_main+1)& (0+255),w,b
  2716  000404  6EDA               	movwf	fsr2h,c
  2717  000406  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2718  00040A  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2719                           
  2720                           ; BSR set to: 1
  2721                           ;main.c: 864:             Pole[poles_detected].dist_from_start = avg_dist+prev_avg_dist;
  2722  00040E  0103               	movlb	3	; () banked
  2723  000410  5174               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2724  000412  2444               	addwf	_avg_dist,w,c	;volatile
  2725  000414  0101               	movlb	1	; () banked
  2726  000416  6F5A               	movwf	??_main& (0+255),b
  2727  000418  0103               	movlb	3	; () banked
  2728  00041A  5175               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2729  00041C  2045               	addwfc	_avg_dist+1,w,c	;volatile
  2730  00041E  0101               	movlb	1	; () banked
  2731  000420  6F5B               	movwf	(??_main+1)& (0+255),b
  2732  000422  C384  F15C         	movff	main@poles_detected,??_main+2
  2733  000426  C385  F15D         	movff	main@poles_detected+1,??_main+3
  2734  00042A  90D8               	bcf	status,0,c
  2735  00042C  375C               	rlcf	(??_main+2)& (0+255),f,b
  2736  00042E  375D               	rlcf	(??_main+3)& (0+255),f,b
  2737  000430  90D8               	bcf	status,0,c
  2738  000432  375C               	rlcf	(??_main+2)& (0+255),f,b
  2739  000434  375D               	rlcf	(??_main+3)& (0+255),f,b
  2740  000436  90D8               	bcf	status,0,c
  2741  000438  375C               	rlcf	(??_main+2)& (0+255),f,b
  2742  00043A  375D               	rlcf	(??_main+3)& (0+255),f,b
  2743  00043C  0E04               	movlw	4
  2744  00043E  275C               	addwf	(??_main+2)& (0+255),f,b
  2745  000440  0E00               	movlw	0
  2746  000442  235D               	addwfc	(??_main+3)& (0+255),f,b
  2747  000444  0E04               	movlw	low main@Pole
  2748  000446  255C               	addwf	(??_main+2)& (0+255),w,b
  2749  000448  6ED9               	movwf	fsr2l,c
  2750  00044A  0E03               	movlw	high main@Pole
  2751  00044C  215D               	addwfc	(??_main+3)& (0+255),w,b
  2752  00044E  6EDA               	movwf	fsr2h,c
  2753  000450  C15A  FFDE         	movff	??_main,postinc2
  2754  000454  C15B  FFDD         	movff	??_main+1,postdec2
  2755                           
  2756                           ; BSR set to: 1
  2757                           ;main.c: 867:             Pole[poles_detected].tires_deployed = t_count;
  2758  000458  C384  F15A         	movff	main@poles_detected,??_main
  2759  00045C  C385  F15B         	movff	main@poles_detected+1,??_main+1
  2760  000460  90D8               	bcf	status,0,c
  2761  000462  375A               	rlcf	??_main& (0+255),f,b
  2762  000464  375B               	rlcf	(??_main+1)& (0+255),f,b
  2763  000466  90D8               	bcf	status,0,c
  2764  000468  375A               	rlcf	??_main& (0+255),f,b
  2765  00046A  375B               	rlcf	(??_main+1)& (0+255),f,b
  2766  00046C  90D8               	bcf	status,0,c
  2767  00046E  375A               	rlcf	??_main& (0+255),f,b
  2768  000470  375B               	rlcf	(??_main+1)& (0+255),f,b
  2769  000472  0E04               	movlw	low main@Pole
  2770  000474  255A               	addwf	??_main& (0+255),w,b
  2771  000476  6ED9               	movwf	fsr2l,c
  2772  000478  0E03               	movlw	high main@Pole
  2773  00047A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2774  00047C  6EDA               	movwf	fsr2h,c
  2775  00047E  C36D  FFDE         	movff	main@t_count,postinc2
  2776  000482  C36E  FFDD         	movff	main@t_count+1,postdec2
  2777                           
  2778                           ; BSR set to: 1
  2779                           ;main.c: 868:             Pole[poles_detected].tires_final = t_det + t_dep;
  2780  000486  0103               	movlb	3	; () banked
  2781  000488  5172               	movf	main@t_dep& (0+255),w,b
  2782  00048A  2578               	addwf	main@t_det& (0+255),w,b	;volatile
  2783  00048C  0101               	movlb	1	; () banked
  2784  00048E  6F5A               	movwf	??_main& (0+255),b
  2785  000490  0103               	movlb	3	; () banked
  2786  000492  5173               	movf	(main@t_dep+1)& (0+255),w,b
  2787  000494  2179               	addwfc	(main@t_det+1)& (0+255),w,b	;volatile
  2788  000496  0101               	movlb	1	; () banked
  2789  000498  6F5B               	movwf	(??_main+1)& (0+255),b
  2790  00049A  C384  F15C         	movff	main@poles_detected,??_main+2
  2791  00049E  C385  F15D         	movff	main@poles_detected+1,??_main+3
  2792  0004A2  90D8               	bcf	status,0,c
  2793  0004A4  375C               	rlcf	(??_main+2)& (0+255),f,b
  2794  0004A6  375D               	rlcf	(??_main+3)& (0+255),f,b
  2795  0004A8  90D8               	bcf	status,0,c
  2796  0004AA  375C               	rlcf	(??_main+2)& (0+255),f,b
  2797  0004AC  375D               	rlcf	(??_main+3)& (0+255),f,b
  2798  0004AE  90D8               	bcf	status,0,c
  2799  0004B0  375C               	rlcf	(??_main+2)& (0+255),f,b
  2800  0004B2  375D               	rlcf	(??_main+3)& (0+255),f,b
  2801  0004B4  0E02               	movlw	2
  2802  0004B6  275C               	addwf	(??_main+2)& (0+255),f,b
  2803  0004B8  0E00               	movlw	0
  2804  0004BA  235D               	addwfc	(??_main+3)& (0+255),f,b
  2805  0004BC  0E04               	movlw	low main@Pole
  2806  0004BE  255C               	addwf	(??_main+2)& (0+255),w,b
  2807  0004C0  6ED9               	movwf	fsr2l,c
  2808  0004C2  0E03               	movlw	high main@Pole
  2809  0004C4  215D               	addwfc	(??_main+3)& (0+255),w,b
  2810  0004C6  6EDA               	movwf	fsr2h,c
  2811  0004C8  C15A  FFDE         	movff	??_main,postinc2
  2812  0004CC  C15B  FFDD         	movff	??_main+1,postdec2
  2813                           
  2814                           ; BSR set to: 1
  2815                           ;main.c: 870:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2816  0004D0  0E01               	movlw	1
  2817  0004D2  ECC6  F020         	call	_lcdInst
  2818  0004D6  0E11               	movlw	17
  2819  0004D8  0101               	movlb	1	; () banked
  2820  0004DA  6F5A               	movwf	??_main& (0+255),b
  2821  0004DC  0E3A               	movlw	58
  2822  0004DE                     u9247:
  2823  0004DE  2EE8               	decfsz	wreg,f,c
  2824  0004E0  D7FE               	bra	u9247
  2825  0004E2  2F5A               	decfsz	??_main& (0+255),f,b
  2826  0004E4  D7FC               	bra	u9247
  2827  0004E6  F000               	nop	
  2828                           
  2829                           ;main.c: 871:             printf("dist p[%d]:%d,%d", poles_detected,Pole[poles_detected]
      +                          .dist_from_cl, avg_dist);
  2830  0004E8  0E10               	movlw	low STR_58
  2831  0004EA  0100               	movlb	0	; () banked
  2832  0004EC  6FED               	movwf	printf@fmt& (0+255),b
  2833  0004EE  0EFE               	movlw	high STR_58
  2834  0004F0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2835  0004F2  C384  F0EF         	movff	main@poles_detected,?_printf+2
  2836  0004F6  C385  F0F0         	movff	main@poles_detected+1,?_printf+3
  2837  0004FA  C384  F15A         	movff	main@poles_detected,??_main
  2838  0004FE  C385  F15B         	movff	main@poles_detected+1,??_main+1
  2839  000502  0101               	movlb	1	; () banked
  2840  000504  90D8               	bcf	status,0,c
  2841  000506  375A               	rlcf	??_main& (0+255),f,b
  2842  000508  375B               	rlcf	(??_main+1)& (0+255),f,b
  2843  00050A  90D8               	bcf	status,0,c
  2844  00050C  375A               	rlcf	??_main& (0+255),f,b
  2845  00050E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2846  000510  90D8               	bcf	status,0,c
  2847  000512  375A               	rlcf	??_main& (0+255),f,b
  2848  000514  375B               	rlcf	(??_main+1)& (0+255),f,b
  2849  000516  0E06               	movlw	6
  2850  000518  275A               	addwf	??_main& (0+255),f,b
  2851  00051A  0E00               	movlw	0
  2852  00051C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2853  00051E  0E04               	movlw	low main@Pole
  2854  000520  255A               	addwf	??_main& (0+255),w,b
  2855  000522  6ED9               	movwf	fsr2l,c
  2856  000524  0E03               	movlw	high main@Pole
  2857  000526  215B               	addwfc	(??_main+1)& (0+255),w,b
  2858  000528  6EDA               	movwf	fsr2h,c
  2859  00052A  CFDE F0F1          	movff	postinc2,?_printf+4
  2860  00052E  CFDD F0F2          	movff	postdec2,?_printf+5
  2861  000532  C044  F0F3         	movff	_avg_dist,?_printf+6	;volatile
  2862  000536  C045  F0F4         	movff	_avg_dist+1,?_printf+7	;volatile
  2863  00053A  C046  F0F5         	movff	_avg_dist+2,?_printf+8	;volatile
  2864  00053E  C047  F0F6         	movff	_avg_dist+3,?_printf+9	;volatile
  2865  000542  EC60  F020         	call	_printf	;wreg free
  2866  000546  0EC0               	movlw	192
  2867  000548  ECC6  F020         	call	_lcdInst
  2868                           
  2869                           ;main.c: 873:             printf("p[%d] fs : %d",poles_detected, Pole[poles_detected].di
      +                          st_from_start);
  2870  00054C  0EBC               	movlw	low STR_59
  2871  00054E  0100               	movlb	0	; () banked
  2872  000550  6FED               	movwf	printf@fmt& (0+255),b
  2873  000552  0EFE               	movlw	high STR_59
  2874  000554  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2875  000556  C384  F0EF         	movff	main@poles_detected,?_printf+2
  2876  00055A  C385  F0F0         	movff	main@poles_detected+1,?_printf+3
  2877  00055E  C384  F15A         	movff	main@poles_detected,??_main
  2878  000562  C385  F15B         	movff	main@poles_detected+1,??_main+1
  2879  000566  0101               	movlb	1	; () banked
  2880  000568  90D8               	bcf	status,0,c
  2881  00056A  375A               	rlcf	??_main& (0+255),f,b
  2882  00056C  375B               	rlcf	(??_main+1)& (0+255),f,b
  2883  00056E  90D8               	bcf	status,0,c
  2884  000570  375A               	rlcf	??_main& (0+255),f,b
  2885  000572  375B               	rlcf	(??_main+1)& (0+255),f,b
  2886  000574  90D8               	bcf	status,0,c
  2887  000576  375A               	rlcf	??_main& (0+255),f,b
  2888  000578  375B               	rlcf	(??_main+1)& (0+255),f,b
  2889  00057A  0E04               	movlw	4
  2890  00057C  275A               	addwf	??_main& (0+255),f,b
  2891  00057E  0E00               	movlw	0
  2892  000580  235B               	addwfc	(??_main+1)& (0+255),f,b
  2893  000582  0E04               	movlw	low main@Pole
  2894  000584  255A               	addwf	??_main& (0+255),w,b
  2895  000586  6ED9               	movwf	fsr2l,c
  2896  000588  0E03               	movlw	high main@Pole
  2897  00058A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2898  00058C  6EDA               	movwf	fsr2h,c
  2899  00058E  CFDE F0F1          	movff	postinc2,?_printf+4
  2900  000592  CFDD F0F2          	movff	postdec2,?_printf+5
  2901  000596  EC60  F020         	call	_printf	;wreg free
  2902  00059A  0E90               	movlw	144
  2903  00059C  ECC6  F020         	call	_lcdInst
  2904                           
  2905                           ;main.c: 875:             printf("p[%d],tdep : %d",poles_detected, Pole[poles_detected].
      +                          tires_deployed);
  2906  0005A0  0E21               	movlw	low STR_60
  2907  0005A2  0100               	movlb	0	; () banked
  2908  0005A4  6FED               	movwf	printf@fmt& (0+255),b
  2909  0005A6  0EFE               	movlw	high STR_60
  2910  0005A8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2911  0005AA  C384  F0EF         	movff	main@poles_detected,?_printf+2
  2912  0005AE  C385  F0F0         	movff	main@poles_detected+1,?_printf+3
  2913  0005B2  C384  F15A         	movff	main@poles_detected,??_main
  2914  0005B6  C385  F15B         	movff	main@poles_detected+1,??_main+1
  2915  0005BA  0101               	movlb	1	; () banked
  2916  0005BC  90D8               	bcf	status,0,c
  2917  0005BE  375A               	rlcf	??_main& (0+255),f,b
  2918  0005C0  375B               	rlcf	(??_main+1)& (0+255),f,b
  2919  0005C2  90D8               	bcf	status,0,c
  2920  0005C4  375A               	rlcf	??_main& (0+255),f,b
  2921  0005C6  375B               	rlcf	(??_main+1)& (0+255),f,b
  2922  0005C8  90D8               	bcf	status,0,c
  2923  0005CA  375A               	rlcf	??_main& (0+255),f,b
  2924  0005CC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2925  0005CE  0E04               	movlw	low main@Pole
  2926  0005D0  255A               	addwf	??_main& (0+255),w,b
  2927  0005D2  6ED9               	movwf	fsr2l,c
  2928  0005D4  0E03               	movlw	high main@Pole
  2929  0005D6  215B               	addwfc	(??_main+1)& (0+255),w,b
  2930  0005D8  6EDA               	movwf	fsr2h,c
  2931  0005DA  CFDE F0F1          	movff	postinc2,?_printf+4
  2932  0005DE  CFDD F0F2          	movff	postdec2,?_printf+5
  2933  0005E2  EC60  F020         	call	_printf	;wreg free
  2934  0005E6  0ED0               	movlw	208
  2935  0005E8  ECC6  F020         	call	_lcdInst
  2936                           
  2937                           ;main.c: 877:             printf("p[%d] tcnt : %d",poles_detected, Pole[poles_detected].
      +                          tires_final);
  2938  0005EC  0E31               	movlw	low STR_61
  2939  0005EE  0100               	movlb	0	; () banked
  2940  0005F0  6FED               	movwf	printf@fmt& (0+255),b
  2941  0005F2  0EFE               	movlw	high STR_61
  2942  0005F4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2943  0005F6  C384  F0EF         	movff	main@poles_detected,?_printf+2
  2944  0005FA  C385  F0F0         	movff	main@poles_detected+1,?_printf+3
  2945  0005FE  C384  F15A         	movff	main@poles_detected,??_main
  2946  000602  C385  F15B         	movff	main@poles_detected+1,??_main+1
  2947  000606  0101               	movlb	1	; () banked
  2948  000608  90D8               	bcf	status,0,c
  2949  00060A  375A               	rlcf	??_main& (0+255),f,b
  2950  00060C  375B               	rlcf	(??_main+1)& (0+255),f,b
  2951  00060E  90D8               	bcf	status,0,c
  2952  000610  375A               	rlcf	??_main& (0+255),f,b
  2953  000612  375B               	rlcf	(??_main+1)& (0+255),f,b
  2954  000614  90D8               	bcf	status,0,c
  2955  000616  375A               	rlcf	??_main& (0+255),f,b
  2956  000618  375B               	rlcf	(??_main+1)& (0+255),f,b
  2957  00061A  0E02               	movlw	2
  2958  00061C  275A               	addwf	??_main& (0+255),f,b
  2959  00061E  0E00               	movlw	0
  2960  000620  235B               	addwfc	(??_main+1)& (0+255),f,b
  2961  000622  0E04               	movlw	low main@Pole
  2962  000624  255A               	addwf	??_main& (0+255),w,b
  2963  000626  6ED9               	movwf	fsr2l,c
  2964  000628  0E03               	movlw	high main@Pole
  2965  00062A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2966  00062C  6EDA               	movwf	fsr2h,c
  2967  00062E  CFDE F0F1          	movff	postinc2,?_printf+4
  2968  000632  CFDD F0F2          	movff	postdec2,?_printf+5
  2969  000636  EC60  F020         	call	_printf	;wreg free
  2970                           
  2971                           ;main.c: 879:             _delay((unsigned long)((2000)*(10000000/4000.0)));
  2972  00063A  0E1A               	movlw	26
  2973  00063C  0101               	movlb	1	; () banked
  2974  00063E  6F5B               	movwf	(??_main+1)& (0+255),b
  2975  000640  0E5E               	movlw	94
  2976  000642  6F5A               	movwf	??_main& (0+255),b
  2977  000644  0E6E               	movlw	110
  2978  000646                     u9257:
  2979  000646  2EE8               	decfsz	wreg,f,c
  2980  000648  D7FE               	bra	u9257
  2981  00064A  2F5A               	decfsz	??_main& (0+255),f,b
  2982  00064C  D7FC               	bra	u9257
  2983  00064E  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2984  000650  D7FA               	bra	u9257
  2985  000652  F000               	nop	
  2986                           
  2987                           ;main.c: 882:             prev_avg_dist = avg_dist ;
  2988  000654  C044  F374         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2989  000658  C045  F375         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2990  00065C  C046  F376         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2991  000660  C047  F377         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2992                           
  2993                           ;main.c: 883:             poles_detected++;
  2994  000664  0103               	movlb	3	; () banked
  2995  000666  4B84               	infsnz	main@poles_detected& (0+255),f,b
  2996  000668  2B85               	incf	(main@poles_detected+1)& (0+255),f,b
  2997                           
  2998                           ; BSR set to: 3
  2999                           ;main.c: 884:             start();
  3000  00066A  ECBF  F01E         	call	_start	;wreg free
  3001                           
  3002                           ;main.c: 885:             arduino_stopped = 0;
  3003  00066E  0E00               	movlw	0
  3004  000670  0103               	movlb	3	; () banked
  3005  000672  6F64               	movwf	main@arduino_stopped& (0+255),b
  3006                           
  3007                           ; BSR set to: 3
  3008                           ;main.c: 887:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  3009  000674  0E01               	movlw	1
  3010  000676  ECC6  F020         	call	_lcdInst
  3011  00067A  0E11               	movlw	17
  3012  00067C  0101               	movlb	1	; () banked
  3013  00067E  6F5A               	movwf	??_main& (0+255),b
  3014  000680  0E3A               	movlw	58
  3015  000682                     u9267:
  3016  000682  2EE8               	decfsz	wreg,f,c
  3017  000684  D7FE               	bra	u9267
  3018  000686  2F5A               	decfsz	??_main& (0+255),f,b
  3019  000688  D7FC               	bra	u9267
  3020  00068A  F000               	nop	
  3021                           
  3022                           ;main.c: 888:             printf("avg dist %d", avg_dist);
  3023  00068C  0E33               	movlw	low STR_62
  3024  00068E  0100               	movlb	0	; () banked
  3025  000690  6FED               	movwf	printf@fmt& (0+255),b
  3026  000692  0EFF               	movlw	high STR_62
  3027  000694  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3028  000696  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  3029  00069A  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  3030  00069E  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  3031  0006A2  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  3032  0006A6  EC60  F020         	call	_printf	;wreg free
  3033                           
  3034                           ;main.c: 889:             printf("poles d %d", poles_detected);
  3035  0006AA  0E57               	movlw	low STR_63
  3036  0006AC  0100               	movlb	0	; () banked
  3037  0006AE  6FED               	movwf	printf@fmt& (0+255),b
  3038  0006B0  0EFF               	movlw	high STR_63
  3039  0006B2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3040  0006B4  C384  F0EF         	movff	main@poles_detected,?_printf+2
  3041  0006B8  C385  F0F0         	movff	main@poles_detected+1,?_printf+3
  3042  0006BC  EC60  F020         	call	_printf	;wreg free
  3043                           
  3044                           ;main.c: 890:             for (int i=0;i<4;i++){
  3045  0006C0  0E00               	movlw	0
  3046  0006C2  0103               	movlb	3	; () banked
  3047  0006C4  6F71               	movwf	(main@i_1099+1)& (0+255),b
  3048  0006C6  0E00               	movlw	0
  3049  0006C8  6F70               	movwf	main@i_1099& (0+255),b
  3050  0006CA                     l8666:
  3051                           
  3052                           ; BSR set to: 3
  3053  0006CA  BF71               	btfsc	(main@i_1099+1)& (0+255),7,b
  3054  0006CC  D006               	goto	l8670
  3055  0006CE  5171               	movf	(main@i_1099+1)& (0+255),w,b
  3056  0006D0  E160               	bnz	l8688
  3057  0006D2  0E04               	movlw	4
  3058  0006D4  5D70               	subwf	main@i_1099& (0+255),w,b
  3059  0006D6  B0D8               	btfsc	status,0,c
  3060  0006D8  D05C               	goto	l8688
  3061  0006DA                     l8670:
  3062                           
  3063                           ; BSR set to: 3
  3064                           ;main.c: 891:                 sum[i] = 0 ;
  3065  0006DA  90D8               	bcf	status,0,c
  3066  0006DC  3570               	rlcf	main@i_1099& (0+255),w,b
  3067  0006DE  6ED9               	movwf	fsr2l,c
  3068  0006E0  3571               	rlcf	(main@i_1099+1)& (0+255),w,b
  3069  0006E2  6EDA               	movwf	fsr2h,c
  3070  0006E4  0E38               	movlw	low _sum
  3071  0006E6  26D9               	addwf	fsr2l,f,c
  3072  0006E8  0E00               	movlw	high _sum
  3073  0006EA  22DA               	addwfc	fsr2h,f,c
  3074  0006EC  0E00               	movlw	0
  3075  0006EE  6EDE               	movwf	postinc2,c
  3076  0006F0  0E00               	movlw	0
  3077  0006F2  6EDD               	movwf	postdec2,c
  3078                           
  3079                           ;main.c: 892:                 a[i] =0 ;
  3080  0006F4  90D8               	bcf	status,0,c
  3081  0006F6  3570               	rlcf	main@i_1099& (0+255),w,b
  3082  0006F8  6ED9               	movwf	fsr2l,c
  3083  0006FA  3571               	rlcf	(main@i_1099+1)& (0+255),w,b
  3084  0006FC  6EDA               	movwf	fsr2h,c
  3085  0006FE  0E61               	movlw	low _a
  3086  000700  26D9               	addwf	fsr2l,f,c
  3087  000702  0E00               	movlw	high _a
  3088  000704  22DA               	addwfc	fsr2h,f,c
  3089  000706  0E00               	movlw	0
  3090  000708  6EDE               	movwf	postinc2,c
  3091  00070A  0E00               	movlw	0
  3092  00070C  6EDD               	movwf	postdec2,c
  3093                           
  3094                           ;main.c: 893:                 sumf[i] = 0 ;
  3095  00070E  0E40               	movlw	low _sumf
  3096  000710  2570               	addwf	main@i_1099& (0+255),w,b
  3097  000712  6ED9               	movwf	fsr2l,c
  3098  000714  0E00               	movlw	high _sumf
  3099  000716  2171               	addwfc	(main@i_1099+1)& (0+255),w,b
  3100  000718  6EDA               	movwf	fsr2h,c
  3101  00071A  0E00               	movlw	0
  3102  00071C  6EDF               	movwf	indf2,c
  3103                           
  3104                           ; BSR set to: 3
  3105                           ;main.c: 894:                 for (int k=0;k<6;k++){
  3106  00071E  0E00               	movlw	0
  3107  000720  6F6A               	movwf	(main@k+1)& (0+255),b
  3108  000722  0E00               	movlw	0
  3109  000724  6F69               	movwf	main@k& (0+255),b
  3110  000726                     l8674:
  3111                           
  3112                           ; BSR set to: 3
  3113  000726  BF6A               	btfsc	(main@k+1)& (0+255),7,b
  3114  000728  D006               	goto	l8678
  3115  00072A  516A               	movf	(main@k+1)& (0+255),w,b
  3116  00072C  E12F               	bnz	l8684
  3117  00072E  0E06               	movlw	6
  3118  000730  5D69               	subwf	main@k& (0+255),w,b
  3119  000732  B0D8               	btfsc	status,0,c
  3120  000734  D02B               	goto	l8684
  3121  000736                     l8678:
  3122                           
  3123                           ; BSR set to: 3
  3124                           ;main.c: 895:                     dist_final[i][k] = 0;
  3125  000736  C370  F080         	movff	main@i_1099,___wmul@multiplier
  3126  00073A  C371  F081         	movff	main@i_1099+1,___wmul@multiplier+1
  3127  00073E  0E00               	movlw	0
  3128  000740  0100               	movlb	0	; () banked
  3129  000742  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3130  000744  0E0C               	movlw	12
  3131  000746  6F82               	movwf	___wmul@multiplicand& (0+255),b
  3132  000748  EC74  F020         	call	___wmul	;wreg free
  3133  00074C  0E50               	movlw	low _dist_final
  3134  00074E  0101               	movlb	1	; () banked
  3135  000750  6F5A               	movwf	??_main& (0+255),b
  3136  000752  0E02               	movlw	high _dist_final
  3137  000754  6F5B               	movwf	(??_main+1)& (0+255),b
  3138  000756  0100               	movlb	0	; () banked
  3139  000758  5180               	movf	?___wmul& (0+255),w,b
  3140  00075A  0101               	movlb	1	; () banked
  3141  00075C  275A               	addwf	??_main& (0+255),f,b
  3142  00075E  0100               	movlb	0	; () banked
  3143  000760  5181               	movf	(?___wmul+1)& (0+255),w,b
  3144  000762  0101               	movlb	1	; () banked
  3145  000764  235B               	addwfc	(??_main+1)& (0+255),f,b
  3146  000766  90D8               	bcf	status,0,c
  3147  000768  0103               	movlb	3	; () banked
  3148  00076A  3569               	rlcf	main@k& (0+255),w,b
  3149  00076C  6ED9               	movwf	fsr2l,c
  3150  00076E  356A               	rlcf	(main@k+1)& (0+255),w,b
  3151  000770  6EDA               	movwf	fsr2h,c
  3152  000772  0101               	movlb	1	; () banked
  3153  000774  515A               	movf	??_main& (0+255),w,b
  3154  000776  26D9               	addwf	fsr2l,f,c
  3155  000778  515B               	movf	(??_main+1)& (0+255),w,b
  3156  00077A  22DA               	addwfc	fsr2h,f,c
  3157  00077C  0E00               	movlw	0
  3158  00077E  6EDE               	movwf	postinc2,c
  3159  000780  0E00               	movlw	0
  3160  000782  6EDD               	movwf	postdec2,c
  3161                           
  3162                           ; BSR set to: 1
  3163                           ;main.c: 896:                     }
  3164  000784  0103               	movlb	3	; () banked
  3165  000786  4B69               	infsnz	main@k& (0+255),f,b
  3166  000788  2B6A               	incf	(main@k+1)& (0+255),f,b
  3167  00078A  D7CD               	goto	l8674
  3168  00078C                     l8684:
  3169                           
  3170                           ; BSR set to: 3
  3171                           ;main.c: 897:                 }
  3172  00078C  4B70               	infsnz	main@i_1099& (0+255),f,b
  3173  00078E  2B71               	incf	(main@i_1099+1)& (0+255),f,b
  3174  000790  D79C               	goto	l8666
  3175  000792                     l8688:
  3176                           
  3177                           ; BSR set to: 3
  3178                           ;main.c: 898:                 _delay((unsigned long)((1000)*(10000000/4000.0)));
  3179  000792  0E0D               	movlw	13
  3180  000794  0101               	movlb	1	; () banked
  3181  000796  6F5B               	movwf	(??_main+1)& (0+255),b
  3182  000798  0EAF               	movlw	175
  3183  00079A  6F5A               	movwf	??_main& (0+255),b
  3184  00079C  0EB6               	movlw	182
  3185  00079E                     u9277:
  3186  00079E  2EE8               	decfsz	wreg,f,c
  3187  0007A0  D7FE               	bra	u9277
  3188  0007A2  2F5A               	decfsz	??_main& (0+255),f,b
  3189  0007A4  D7FC               	bra	u9277
  3190  0007A6  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  3191  0007A8  D7FA               	bra	u9277
  3192  0007AA  F000               	nop	
  3193                           
  3194                           ;main.c: 899:                 sens = 1;
  3195  0007AC  0E00               	movlw	0
  3196  0007AE  6E59               	movwf	_sens+1,c	;volatile
  3197  0007B0  0E01               	movlw	1
  3198  0007B2  6E58               	movwf	_sens,c	;volatile
  3199  0007B4  D11E               	goto	l8756
  3200  0007B6                     l8692:
  3201                           
  3202                           ; BSR set to: 3
  3203                           ;main.c: 903:             brake();
  3204  0007B6  EC1C  F01C         	call	_brake	;wreg free
  3205                           
  3206                           ;main.c: 904:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  3207  0007BA  0E01               	movlw	1
  3208  0007BC  ECC6  F020         	call	_lcdInst
  3209  0007C0  0E11               	movlw	17
  3210  0007C2  0101               	movlb	1	; () banked
  3211  0007C4  6F5A               	movwf	??_main& (0+255),b
  3212  0007C6  0E3A               	movlw	58
  3213  0007C8                     u9287:
  3214  0007C8  2EE8               	decfsz	wreg,f,c
  3215  0007CA  D7FE               	bra	u9287
  3216  0007CC  2F5A               	decfsz	??_main& (0+255),f,b
  3217  0007CE  D7FC               	bra	u9287
  3218  0007D0  F000               	nop	
  3219                           
  3220                           ;main.c: 905:             printf("poles done");
  3221  0007D2  0E6D               	movlw	low STR_64
  3222  0007D4  0100               	movlb	0	; () banked
  3223  0007D6  6FED               	movwf	printf@fmt& (0+255),b
  3224  0007D8  0EFF               	movlw	high STR_64
  3225  0007DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3226  0007DC  EC60  F020         	call	_printf	;wreg free
  3227                           
  3228                           ;main.c: 906:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  3229  0007E0  0E0D               	movlw	13
  3230  0007E2  0101               	movlb	1	; () banked
  3231  0007E4  6F5B               	movwf	(??_main+1)& (0+255),b
  3232  0007E6  0EAF               	movlw	175
  3233  0007E8  6F5A               	movwf	??_main& (0+255),b
  3234  0007EA  0EB6               	movlw	182
  3235  0007EC                     u9297:
  3236  0007EC  2EE8               	decfsz	wreg,f,c
  3237  0007EE  D7FE               	bra	u9297
  3238  0007F0  2F5A               	decfsz	??_main& (0+255),f,b
  3239  0007F2  D7FC               	bra	u9297
  3240  0007F4  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  3241  0007F6  D7FA               	bra	u9297
  3242  0007F8  F000               	nop	
  3243                           
  3244                           ;main.c: 908:             unsigned char addr = 0x00;
  3245  0007FA  0E00               	movlw	0
  3246  0007FC  0103               	movlb	3	; () banked
  3247  0007FE  6F6F               	movwf	main@addr& (0+255),b
  3248                           
  3249                           ; BSR set to: 3
  3250                           ;main.c: 909:             char from_eeprom;;main.c: 911:             for (int i=0; i<pol
      +                          es_detected; i++){
  3251  000800  0E00               	movlw	0
  3252  000802  6F59               	movwf	(main@i_1104+1)& (0+255),b
  3253  000804  0E00               	movlw	0
  3254  000806  6F58               	movwf	main@i_1104& (0+255),b
  3255  000808  D01E               	goto	l8712
  3256  00080A                     l8706:
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;main.c: 912:                 ee_write_byte(addr, &(Pole[poles_detected].tires_deployed)
      +                          );
  3260  00080A  C384  F15A         	movff	main@poles_detected,??_main
  3261  00080E  C385  F15B         	movff	main@poles_detected+1,??_main+1
  3262  000812  90D8               	bcf	status,0,c
  3263  000814  375A               	rlcf	??_main& (0+255),f,b
  3264  000816  375B               	rlcf	(??_main+1)& (0+255),f,b
  3265  000818  90D8               	bcf	status,0,c
  3266  00081A  375A               	rlcf	??_main& (0+255),f,b
  3267  00081C  375B               	rlcf	(??_main+1)& (0+255),f,b
  3268  00081E  90D8               	bcf	status,0,c
  3269  000820  375A               	rlcf	??_main& (0+255),f,b
  3270  000822  375B               	rlcf	(??_main+1)& (0+255),f,b
  3271  000824  0E04               	movlw	low main@Pole
  3272  000826  255A               	addwf	??_main& (0+255),w,b
  3273  000828  0100               	movlb	0	; () banked
  3274  00082A  6F80               	movwf	ee_write_byte@_data& (0+255),b
  3275  00082C  0E03               	movlw	high main@Pole
  3276  00082E  0101               	movlb	1	; () banked
  3277  000830  215B               	addwfc	(??_main+1)& (0+255),w,b
  3278  000832  0100               	movlb	0	; () banked
  3279  000834  6F81               	movwf	(ee_write_byte@_data+1)& (0+255),b
  3280  000836  0103               	movlb	3	; () banked
  3281  000838  516F               	movf	main@addr& (0+255),w,b
  3282  00083A  ECA0  F01F         	call	_ee_write_byte
  3283                           
  3284                           ;main.c: 913:                 addr++;
  3285  00083E  0103               	movlb	3	; () banked
  3286  000840  2B6F               	incf	main@addr& (0+255),f,b
  3287                           
  3288                           ; BSR set to: 3
  3289                           ;main.c: 914:             }
  3290  000842  4B58               	infsnz	main@i_1104& (0+255),f,b
  3291  000844  2B59               	incf	(main@i_1104+1)& (0+255),f,b
  3292  000846                     l8712:
  3293                           
  3294                           ; BSR set to: 3
  3295  000846  5184               	movf	main@poles_detected& (0+255),w,b
  3296  000848  5D58               	subwf	main@i_1104& (0+255),w,b
  3297  00084A  5159               	movf	(main@i_1104+1)& (0+255),w,b
  3298  00084C  0A80               	xorlw	128
  3299  00084E  0101               	movlb	1	; () banked
  3300  000850  6F5A               	movwf	??_main& (0+255),b
  3301  000852  0103               	movlb	3	; () banked
  3302  000854  5185               	movf	(main@poles_detected+1)& (0+255),w,b
  3303  000856  0A80               	xorlw	128
  3304  000858  0101               	movlb	1	; () banked
  3305  00085A  595A               	subwfb	??_main& (0+255),w,b
  3306  00085C  A0D8               	btfss	status,0,c
  3307  00085E  D7D5               	goto	l8706
  3308                           
  3309                           ; BSR set to: 1
  3310                           ;main.c: 915:             for (int i=0; i<poles_detected; i++){
  3311  000860  0E00               	movlw	0
  3312  000862  0103               	movlb	3	; () banked
  3313  000864  6F5B               	movwf	(main@i_1105+1)& (0+255),b
  3314  000866  0E00               	movlw	0
  3315  000868  6F5A               	movwf	main@i_1105& (0+255),b
  3316  00086A  D022               	goto	l8722
  3317  00086C                     l8716:
  3318                           
  3319                           ; BSR set to: 1
  3320                           ;main.c: 916:                 ee_write_byte(addr, &(Pole[poles_detected].tires_final));
  3321  00086C  C384  F15A         	movff	main@poles_detected,??_main
  3322  000870  C385  F15B         	movff	main@poles_detected+1,??_main+1
  3323  000874  90D8               	bcf	status,0,c
  3324  000876  375A               	rlcf	??_main& (0+255),f,b
  3325  000878  375B               	rlcf	(??_main+1)& (0+255),f,b
  3326  00087A  90D8               	bcf	status,0,c
  3327  00087C  375A               	rlcf	??_main& (0+255),f,b
  3328  00087E  375B               	rlcf	(??_main+1)& (0+255),f,b
  3329  000880  90D8               	bcf	status,0,c
  3330  000882  375A               	rlcf	??_main& (0+255),f,b
  3331  000884  375B               	rlcf	(??_main+1)& (0+255),f,b
  3332  000886  0E02               	movlw	2
  3333  000888  275A               	addwf	??_main& (0+255),f,b
  3334  00088A  0E00               	movlw	0
  3335  00088C  235B               	addwfc	(??_main+1)& (0+255),f,b
  3336  00088E  0E04               	movlw	low main@Pole
  3337  000890  255A               	addwf	??_main& (0+255),w,b
  3338  000892  0100               	movlb	0	; () banked
  3339  000894  6F80               	movwf	ee_write_byte@_data& (0+255),b
  3340  000896  0E03               	movlw	high main@Pole
  3341  000898  0101               	movlb	1	; () banked
  3342  00089A  215B               	addwfc	(??_main+1)& (0+255),w,b
  3343  00089C  0100               	movlb	0	; () banked
  3344  00089E  6F81               	movwf	(ee_write_byte@_data+1)& (0+255),b
  3345  0008A0  0103               	movlb	3	; () banked
  3346  0008A2  516F               	movf	main@addr& (0+255),w,b
  3347  0008A4  ECA0  F01F         	call	_ee_write_byte
  3348                           
  3349                           ;main.c: 917:                 addr++;
  3350  0008A8  0103               	movlb	3	; () banked
  3351  0008AA  2B6F               	incf	main@addr& (0+255),f,b
  3352                           
  3353                           ; BSR set to: 3
  3354                           ;main.c: 918:             }
  3355  0008AC  4B5A               	infsnz	main@i_1105& (0+255),f,b
  3356  0008AE  2B5B               	incf	(main@i_1105+1)& (0+255),f,b
  3357  0008B0                     l8722:
  3358                           
  3359                           ; BSR set to: 3
  3360  0008B0  5184               	movf	main@poles_detected& (0+255),w,b
  3361  0008B2  5D5A               	subwf	main@i_1105& (0+255),w,b
  3362  0008B4  515B               	movf	(main@i_1105+1)& (0+255),w,b
  3363  0008B6  0A80               	xorlw	128
  3364  0008B8  0101               	movlb	1	; () banked
  3365  0008BA  6F5A               	movwf	??_main& (0+255),b
  3366  0008BC  0103               	movlb	3	; () banked
  3367  0008BE  5185               	movf	(main@poles_detected+1)& (0+255),w,b
  3368  0008C0  0A80               	xorlw	128
  3369  0008C2  0101               	movlb	1	; () banked
  3370  0008C4  595A               	subwfb	??_main& (0+255),w,b
  3371  0008C6  A0D8               	btfss	status,0,c
  3372  0008C8  D7D1               	goto	l8716
  3373                           
  3374                           ; BSR set to: 1
  3375                           ;main.c: 919:             for (int i=0; i<poles_detected; i++){
  3376  0008CA  0E00               	movlw	0
  3377  0008CC  0103               	movlb	3	; () banked
  3378  0008CE  6F5D               	movwf	(main@i_1106+1)& (0+255),b
  3379  0008D0  0E00               	movlw	0
  3380  0008D2  6F5C               	movwf	main@i_1106& (0+255),b
  3381  0008D4  D022               	goto	l8732
  3382  0008D6                     l8726:
  3383                           
  3384                           ; BSR set to: 1
  3385                           ;main.c: 920:                 ee_write_byte(addr, &(Pole[poles_detected].dist_from_start
      +                          ));
  3386  0008D6  C384  F15A         	movff	main@poles_detected,??_main
  3387  0008DA  C385  F15B         	movff	main@poles_detected+1,??_main+1
  3388  0008DE  90D8               	bcf	status,0,c
  3389  0008E0  375A               	rlcf	??_main& (0+255),f,b
  3390  0008E2  375B               	rlcf	(??_main+1)& (0+255),f,b
  3391  0008E4  90D8               	bcf	status,0,c
  3392  0008E6  375A               	rlcf	??_main& (0+255),f,b
  3393  0008E8  375B               	rlcf	(??_main+1)& (0+255),f,b
  3394  0008EA  90D8               	bcf	status,0,c
  3395  0008EC  375A               	rlcf	??_main& (0+255),f,b
  3396  0008EE  375B               	rlcf	(??_main+1)& (0+255),f,b
  3397  0008F0  0E04               	movlw	4
  3398  0008F2  275A               	addwf	??_main& (0+255),f,b
  3399  0008F4  0E00               	movlw	0
  3400  0008F6  235B               	addwfc	(??_main+1)& (0+255),f,b
  3401  0008F8  0E04               	movlw	low main@Pole
  3402  0008FA  255A               	addwf	??_main& (0+255),w,b
  3403  0008FC  0100               	movlb	0	; () banked
  3404  0008FE  6F80               	movwf	ee_write_byte@_data& (0+255),b
  3405  000900  0E03               	movlw	high main@Pole
  3406  000902  0101               	movlb	1	; () banked
  3407  000904  215B               	addwfc	(??_main+1)& (0+255),w,b
  3408  000906  0100               	movlb	0	; () banked
  3409  000908  6F81               	movwf	(ee_write_byte@_data+1)& (0+255),b
  3410  00090A  0103               	movlb	3	; () banked
  3411  00090C  516F               	movf	main@addr& (0+255),w,b
  3412  00090E  ECA0  F01F         	call	_ee_write_byte
  3413                           
  3414                           ;main.c: 921:                 addr++;
  3415  000912  0103               	movlb	3	; () banked
  3416  000914  2B6F               	incf	main@addr& (0+255),f,b
  3417                           
  3418                           ; BSR set to: 3
  3419                           ;main.c: 922:             }
  3420  000916  4B5C               	infsnz	main@i_1106& (0+255),f,b
  3421  000918  2B5D               	incf	(main@i_1106+1)& (0+255),f,b
  3422  00091A                     l8732:
  3423                           
  3424                           ; BSR set to: 3
  3425  00091A  5184               	movf	main@poles_detected& (0+255),w,b
  3426  00091C  5D5C               	subwf	main@i_1106& (0+255),w,b
  3427  00091E  515D               	movf	(main@i_1106+1)& (0+255),w,b
  3428  000920  0A80               	xorlw	128
  3429  000922  0101               	movlb	1	; () banked
  3430  000924  6F5A               	movwf	??_main& (0+255),b
  3431  000926  0103               	movlb	3	; () banked
  3432  000928  5185               	movf	(main@poles_detected+1)& (0+255),w,b
  3433  00092A  0A80               	xorlw	128
  3434  00092C  0101               	movlb	1	; () banked
  3435  00092E  595A               	subwfb	??_main& (0+255),w,b
  3436  000930  A0D8               	btfss	status,0,c
  3437  000932  D7D1               	goto	l8726
  3438                           
  3439                           ; BSR set to: 1
  3440                           ;main.c: 923:             for (int i=0; i<poles_detected; i++){
  3441  000934  0E00               	movlw	0
  3442  000936  0103               	movlb	3	; () banked
  3443  000938  6F5F               	movwf	(main@i_1107+1)& (0+255),b
  3444  00093A  0E00               	movlw	0
  3445  00093C  6F5E               	movwf	main@i_1107& (0+255),b
  3446  00093E  D022               	goto	l8742
  3447  000940                     l8736:
  3448                           
  3449                           ; BSR set to: 1
  3450                           ;main.c: 924:                 ee_write_byte(addr, &(Pole[poles_detected].dist_from_cl));
  3451  000940  C384  F15A         	movff	main@poles_detected,??_main
  3452  000944  C385  F15B         	movff	main@poles_detected+1,??_main+1
  3453  000948  90D8               	bcf	status,0,c
  3454  00094A  375A               	rlcf	??_main& (0+255),f,b
  3455  00094C  375B               	rlcf	(??_main+1)& (0+255),f,b
  3456  00094E  90D8               	bcf	status,0,c
  3457  000950  375A               	rlcf	??_main& (0+255),f,b
  3458  000952  375B               	rlcf	(??_main+1)& (0+255),f,b
  3459  000954  90D8               	bcf	status,0,c
  3460  000956  375A               	rlcf	??_main& (0+255),f,b
  3461  000958  375B               	rlcf	(??_main+1)& (0+255),f,b
  3462  00095A  0E06               	movlw	6
  3463  00095C  275A               	addwf	??_main& (0+255),f,b
  3464  00095E  0E00               	movlw	0
  3465  000960  235B               	addwfc	(??_main+1)& (0+255),f,b
  3466  000962  0E04               	movlw	low main@Pole
  3467  000964  255A               	addwf	??_main& (0+255),w,b
  3468  000966  0100               	movlb	0	; () banked
  3469  000968  6F80               	movwf	ee_write_byte@_data& (0+255),b
  3470  00096A  0E03               	movlw	high main@Pole
  3471  00096C  0101               	movlb	1	; () banked
  3472  00096E  215B               	addwfc	(??_main+1)& (0+255),w,b
  3473  000970  0100               	movlb	0	; () banked
  3474  000972  6F81               	movwf	(ee_write_byte@_data+1)& (0+255),b
  3475  000974  0103               	movlb	3	; () banked
  3476  000976  516F               	movf	main@addr& (0+255),w,b
  3477  000978  ECA0  F01F         	call	_ee_write_byte
  3478                           
  3479                           ;main.c: 925:                 addr++;
  3480  00097C  0103               	movlb	3	; () banked
  3481  00097E  2B6F               	incf	main@addr& (0+255),f,b
  3482                           
  3483                           ; BSR set to: 3
  3484                           ;main.c: 926:             }
  3485  000980  4B5E               	infsnz	main@i_1107& (0+255),f,b
  3486  000982  2B5F               	incf	(main@i_1107+1)& (0+255),f,b
  3487  000984                     l8742:
  3488                           
  3489                           ; BSR set to: 3
  3490  000984  5184               	movf	main@poles_detected& (0+255),w,b
  3491  000986  5D5E               	subwf	main@i_1107& (0+255),w,b
  3492  000988  515F               	movf	(main@i_1107+1)& (0+255),w,b
  3493  00098A  0A80               	xorlw	128
  3494  00098C  0101               	movlb	1	; () banked
  3495  00098E  6F5A               	movwf	??_main& (0+255),b
  3496  000990  0103               	movlb	3	; () banked
  3497  000992  5185               	movf	(main@poles_detected+1)& (0+255),w,b
  3498  000994  0A80               	xorlw	128
  3499  000996  0101               	movlb	1	; () banked
  3500  000998  595A               	subwfb	??_main& (0+255),w,b
  3501  00099A  A0D8               	btfss	status,0,c
  3502  00099C  D7D1               	goto	l8736
  3503                           
  3504                           ; BSR set to: 1
  3505                           ;main.c: 933:             backwards();
  3506  00099E  EC88  F020         	call	_backwards	;wreg free
  3507                           
  3508                           ;main.c: 934:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  3509  0009A2  0E01               	movlw	1
  3510  0009A4  ECC6  F020         	call	_lcdInst
  3511  0009A8  0E11               	movlw	17
  3512  0009AA  0101               	movlb	1	; () banked
  3513  0009AC  6F5A               	movwf	??_main& (0+255),b
  3514  0009AE  0E3A               	movlw	58
  3515  0009B0                     u9307:
  3516  0009B0  2EE8               	decfsz	wreg,f,c
  3517  0009B2  D7FE               	bra	u9307
  3518  0009B4  2F5A               	decfsz	??_main& (0+255),f,b
  3519  0009B6  D7FC               	bra	u9307
  3520  0009B8  F000               	nop	
  3521                           
  3522                           ;main.c: 935:             printf("backwards");
  3523  0009BA  0EAB               	movlw	low STR_65
  3524  0009BC  0100               	movlb	0	; () banked
  3525  0009BE  6FED               	movwf	printf@fmt& (0+255),b
  3526  0009C0  0EFF               	movlw	high STR_65
  3527  0009C2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3528  0009C4  EC60  F020         	call	_printf	;wreg free
  3529                           
  3530                           ;main.c: 936:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  3531  0009C8  0E0D               	movlw	13
  3532  0009CA  0101               	movlb	1	; () banked
  3533  0009CC  6F5B               	movwf	(??_main+1)& (0+255),b
  3534  0009CE  0EAF               	movlw	175
  3535  0009D0  6F5A               	movwf	??_main& (0+255),b
  3536  0009D2  0EB6               	movlw	182
  3537  0009D4                     u9317:
  3538  0009D4  2EE8               	decfsz	wreg,f,c
  3539  0009D6  D7FE               	bra	u9317
  3540  0009D8  2F5A               	decfsz	??_main& (0+255),f,b
  3541  0009DA  D7FC               	bra	u9317
  3542  0009DC  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  3543  0009DE  D7FA               	bra	u9317
  3544  0009E0  F000               	nop	
  3545                           
  3546                           ;main.c: 937:             sens = 0;
  3547  0009E2  0E00               	movlw	0
  3548  0009E4  6E59               	movwf	_sens+1,c	;volatile
  3549  0009E6  0E00               	movlw	0
  3550  0009E8  6E58               	movwf	_sens,c	;volatile
  3551                           
  3552                           ;main.c: 938:             send = 1;
  3553  0009EA  0E01               	movlw	1
  3554  0009EC  6E6D               	movwf	_send,c
  3555                           
  3556                           ;main.c: 939:             break;
  3557  0009EE  EF07  F000         	goto	start
  3558  0009F2                     l8756:
  3559                           
  3560                           ;main.c: 941:         t_count = 5;
  3561  0009F2  0E00               	movlw	0
  3562  0009F4  0103               	movlb	3	; () banked
  3563  0009F6  6F6E               	movwf	(main@t_count+1)& (0+255),b
  3564  0009F8  0E05               	movlw	5
  3565  0009FA  6F6D               	movwf	main@t_count& (0+255),b
  3566  0009FC  EF4F  F000         	goto	l8494
  3567  000A00                     __end_of_main:
  3568                           	opt callstack 0
  3569                           
  3570 ;; *************** function _ultrasonic_main *****************
  3571 ;; Defined at:
  3572 ;;		line 294 in file "main.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  min_us_dist     2   10[BANK1 ] int 
  3577 ;;  steps2_adj      2    8[BANK1 ] int 
  3578 ;;  step2_offset    2    6[BANK1 ] int 
  3579 ;;  sensed          2    4[BANK1 ] int 
  3580 ;;  min_us_dist     2    0        int 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  2  124[BANK0 ] int 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;Total ram usage:       14 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:   15
  3597 ;; This function calls:
  3598 ;;		_abs
  3599 ;;		_lcdInst
  3600 ;;		_min
  3601 ;;		_print_echo
  3602 ;;		_printf
  3603 ;;		_trig
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text1
  3610  00274E                     __ptext1:
  3611                           	opt callstack 0
  3612  00274E                     _ultrasonic_main:
  3613                           	opt callstack 15
  3614                           
  3615                           ;main.c: 295:     TRISBbits.RB0 = 0;
  3616                           
  3617                           ;incstack = 0
  3618  00274E  9093               	bcf	3987,0,c	;volatile
  3619                           
  3620                           ;main.c: 296:     LATBbits.LATB0 = 1;
  3621  002750  808A               	bsf	3978,0,c	;volatile
  3622                           
  3623                           ;main.c: 298:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3624  002752  0E01               	movlw	1
  3625  002754  ECC6  F020         	call	_lcdInst
  3626  002758  0E11               	movlw	17
  3627  00275A  0101               	movlb	1	; () banked
  3628  00275C  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3629  00275E  0E3A               	movlw	58
  3630  002760                     u9327:
  3631  002760  2EE8               	decfsz	wreg,f,c
  3632  002762  D7FE               	bra	u9327
  3633  002764  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3634  002766  D7FC               	bra	u9327
  3635  002768  F000               	nop	
  3636                           
  3637                           ;main.c: 299:     printf("or here");
  3638  00276A  0EE6               	movlw	low STR_18
  3639  00276C  0100               	movlb	0	; () banked
  3640  00276E  6FED               	movwf	printf@fmt& (0+255),b
  3641  002770  0EFF               	movlw	high STR_18
  3642  002772  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3643  002774  EC60  F020         	call	_printf	;wreg free
  3644                           
  3645                           ;main.c: 300:  TRISB = 0b11110000;
  3646  002778  0EF0               	movlw	240
  3647  00277A  6E93               	movwf	3987,c	;volatile
  3648                           
  3649                           ;main.c: 301:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3650  00277C  0E01               	movlw	1
  3651  00277E  ECC6  F020         	call	_lcdInst
  3652  002782  0E11               	movlw	17
  3653  002784  0101               	movlb	1	; () banked
  3654  002786  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3655  002788  0E3A               	movlw	58
  3656  00278A                     u9337:
  3657  00278A  2EE8               	decfsz	wreg,f,c
  3658  00278C  D7FE               	bra	u9337
  3659  00278E  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3660  002790  D7FC               	bra	u9337
  3661  002792  F000               	nop	
  3662                           
  3663                           ;main.c: 302:     printf("break heree?");
  3664  002794  0EF4               	movlw	low STR_19
  3665  002796  0100               	movlb	0	; () banked
  3666  002798  6FED               	movwf	printf@fmt& (0+255),b
  3667  00279A  0EFE               	movlw	high STR_19
  3668  00279C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3669  00279E  EC60  F020         	call	_printf	;wreg free
  3670                           
  3671                           ;main.c: 303:     RBIF = 0;
  3672  0027A2  90F2               	bcf	4082,0,c	;volatile
  3673                           
  3674                           ;main.c: 304:  RBIE = 1;
  3675  0027A4  86F2               	bsf	4082,3,c	;volatile
  3676                           
  3677                           ;main.c: 306:     int sensed = 0;
  3678  0027A6  0E00               	movlw	0
  3679  0027A8  0101               	movlb	1	; () banked
  3680  0027AA  6F05               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  3681  0027AC  0E00               	movlw	0
  3682  0027AE  6F04               	movwf	ultrasonic_main@sensed& (0+255),b
  3683                           
  3684                           ;main.c: 308:     int steps2_adj=0;
  3685  0027B0  0E00               	movlw	0
  3686  0027B2  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3687  0027B4  0E00               	movlw	0
  3688  0027B6  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3689                           
  3690                           ;main.c: 309:     int step2_offset=0;
  3691  0027B8  0E00               	movlw	0
  3692  0027BA  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3693  0027BC  0E00               	movlw	0
  3694  0027BE  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3695                           
  3696                           ;main.c: 310:     while(send){
  3697  0027C0  D084               	goto	l470
  3698  0027C2                     l8014:
  3699                           
  3700                           ; BSR set to: 1
  3701                           ;main.c: 311:         for (meas=0; meas<3;meas++){
  3702  0027C2  0E00               	movlw	0
  3703  0027C4  6E51               	movwf	_meas+1,c	;volatile
  3704  0027C6  0E00               	movlw	0
  3705  0027C8  6E50               	movwf	_meas,c	;volatile
  3706  0027CA                     l8016:
  3707                           
  3708                           ; BSR set to: 1
  3709  0027CA  BE51               	btfsc	_meas+1,7,c	;volatile
  3710  0027CC  D006               	goto	l8020
  3711  0027CE  5051               	movf	_meas+1,w,c	;volatile
  3712  0027D0  E174               	bnz	l8058
  3713  0027D2  0E03               	movlw	3
  3714  0027D4  5C50               	subwf	_meas,w,c	;volatile
  3715  0027D6  B0D8               	btfsc	status,0,c
  3716  0027D8  D070               	goto	l8058
  3717  0027DA                     l8020:
  3718                           
  3719                           ; BSR set to: 1
  3720                           ;main.c: 312:         trig();
  3721  0027DA  EC74  F019         	call	_trig	;wreg free
  3722                           
  3723                           ;main.c: 313:         RBIE = 0;
  3724  0027DE  96F2               	bcf	4082,3,c	;volatile
  3725                           
  3726                           ;main.c: 314:         print_echo();
  3727  0027E0  ECB0  F012         	call	_print_echo	;wreg free
  3728                           
  3729                           ;main.c: 315:         RBIE = 1;
  3730  0027E4  86F2               	bsf	4082,3,c	;volatile
  3731                           
  3732                           ;main.c: 316:         int min_us_dist = min(a, 4);
  3733  0027E6  0E61               	movlw	low _a
  3734  0027E8  0100               	movlb	0	; () banked
  3735  0027EA  6F80               	movwf	min@array& (0+255),b
  3736  0027EC  0E00               	movlw	high _a
  3737  0027EE  6F81               	movwf	(min@array+1)& (0+255),b
  3738  0027F0  0E00               	movlw	0
  3739  0027F2  6F83               	movwf	(min@size+1)& (0+255),b
  3740  0027F4  0E04               	movlw	4
  3741  0027F6  6F82               	movwf	min@size& (0+255),b
  3742  0027F8  ECEC  F018         	call	_min	;wreg free
  3743  0027FC  C080  F10A         	movff	?_min,ultrasonic_main@min_us_dist_975
  3744  002800  C081  F10B         	movff	?_min+1,ultrasonic_main@min_us_dist_975+1
  3745                           
  3746                           ;main.c: 317:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3747  002804  0E01               	movlw	1
  3748  002806  ECC6  F020         	call	_lcdInst
  3749  00280A  0E11               	movlw	17
  3750  00280C  0101               	movlb	1	; () banked
  3751  00280E  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3752  002810  0E3A               	movlw	58
  3753  002812                     u9347:
  3754  002812  2EE8               	decfsz	wreg,f,c
  3755  002814  D7FE               	bra	u9347
  3756  002816  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3757  002818  D7FC               	bra	u9347
  3758  00281A  F000               	nop	
  3759                           
  3760                           ;main.c: 318:         printf("minimum %d", min_us_dist);
  3761  00281C  0E62               	movlw	low STR_20
  3762  00281E  0100               	movlb	0	; () banked
  3763  002820  6FED               	movwf	printf@fmt& (0+255),b
  3764  002822  0EFF               	movlw	high STR_20
  3765  002824  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3766  002826  C10A  F0EF         	movff	ultrasonic_main@min_us_dist_975,?_printf+2
  3767  00282A  C10B  F0F0         	movff	ultrasonic_main@min_us_dist_975+1,?_printf+3
  3768  00282E  EC60  F020         	call	_printf	;wreg free
  3769                           
  3770                           ;main.c: 320:         if (min_us_dist<14){
  3771  002832  0101               	movlb	1	; () banked
  3772  002834  BF0B               	btfsc	(ultrasonic_main@min_us_dist_975+1)& (0+255),7,b
  3773  002836  D006               	goto	u8430
  3774  002838  510B               	movf	(ultrasonic_main@min_us_dist_975+1)& (0+255),w,b
  3775  00283A  E108               	bnz	l8040
  3776  00283C  0E0E               	movlw	14
  3777  00283E  5D0A               	subwf	ultrasonic_main@min_us_dist_975& (0+255),w,b
  3778  002840  B0D8               	btfsc	status,0,c
  3779  002842  D004               	goto	l8040
  3780  002844                     u8430:
  3781                           
  3782                           ; BSR set to: 1
  3783                           ;main.c: 321:             step2_offset = 0;
  3784  002844  0E00               	movlw	0
  3785  002846  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3786  002848  0E00               	movlw	0
  3787  00284A  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3788  00284C                     l8040:
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;main.c: 323:         if ((min_us_dist>=14)&&(min_us_dist<=26)){
  3792  00284C  BF0B               	btfsc	(ultrasonic_main@min_us_dist_975+1)& (0+255),7,b
  3793  00284E  D01D               	goto	l8046
  3794  002850  510B               	movf	(ultrasonic_main@min_us_dist_975+1)& (0+255),w,b
  3795  002852  E104               	bnz	u8440
  3796  002854  0E0E               	movlw	14
  3797  002856  5D0A               	subwf	ultrasonic_main@min_us_dist_975& (0+255),w,b
  3798  002858  A0D8               	btfss	status,0,c
  3799  00285A  D017               	goto	l8046
  3800  00285C                     u8440:
  3801                           
  3802                           ; BSR set to: 1
  3803  00285C  BF0B               	btfsc	(ultrasonic_main@min_us_dist_975+1)& (0+255),7,b
  3804  00285E  D006               	goto	u8450
  3805  002860  510B               	movf	(ultrasonic_main@min_us_dist_975+1)& (0+255),w,b
  3806  002862  E113               	bnz	l8046
  3807  002864  0E1B               	movlw	27
  3808  002866  5D0A               	subwf	ultrasonic_main@min_us_dist_975& (0+255),w,b
  3809  002868  B0D8               	btfsc	status,0,c
  3810  00286A  D00F               	goto	l8046
  3811  00286C                     u8450:
  3812                           
  3813                           ; BSR set to: 1
  3814                           ;main.c: 324:         step2_offset = abs(min_us_dist - 14);
  3815  00286C  0EF2               	movlw	242
  3816  00286E  250A               	addwf	ultrasonic_main@min_us_dist_975& (0+255),w,b
  3817  002870  0100               	movlb	0	; () banked
  3818  002872  6F92               	movwf	abs@a& (0+255),b
  3819  002874  0EFF               	movlw	255
  3820  002876  0101               	movlb	1	; () banked
  3821  002878  210B               	addwfc	(ultrasonic_main@min_us_dist_975+1)& (0+255),w,b
  3822  00287A  0100               	movlb	0	; () banked
  3823  00287C  6F93               	movwf	(abs@a+1)& (0+255),b
  3824  00287E  EC86  F01F         	call	_abs	;wreg free
  3825  002882  C092  F106         	movff	?_abs,ultrasonic_main@step2_offset
  3826  002886  C093  F107         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  3827  00288A                     l8046:
  3828                           
  3829                           ;main.c: 326:         if (min_us_dist>26){
  3830  00288A  0101               	movlb	1	; () banked
  3831  00288C  BF0B               	btfsc	(ultrasonic_main@min_us_dist_975+1)& (0+255),7,b
  3832  00288E  D00A               	goto	l8050
  3833  002890  510B               	movf	(ultrasonic_main@min_us_dist_975+1)& (0+255),w,b
  3834  002892  E104               	bnz	u8460
  3835  002894  0E1B               	movlw	27
  3836  002896  5D0A               	subwf	ultrasonic_main@min_us_dist_975& (0+255),w,b
  3837  002898  A0D8               	btfss	status,0,c
  3838  00289A  D004               	goto	l8050
  3839  00289C                     u8460:
  3840                           
  3841                           ; BSR set to: 1
  3842                           ;main.c: 327:             step2_offset = 10;
  3843  00289C  0E00               	movlw	0
  3844  00289E  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3845  0028A0  0E0A               	movlw	10
  3846  0028A2  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3847  0028A4                     l8050:
  3848                           
  3849                           ; BSR set to: 1
  3850                           ;main.c: 329:         steps2_adj = 110 + step2_offset;
  3851  0028A4  0E6E               	movlw	110
  3852  0028A6  2506               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  3853  0028A8  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3854  0028AA  0E00               	movlw	0
  3855  0028AC  2107               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  3856  0028AE  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3857                           
  3858                           ; BSR set to: 1
  3859                           ;main.c: 330:         sensed++;
  3860  0028B0  4B04               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  3861  0028B2  2B05               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  3862                           
  3863                           ; BSR set to: 1
  3864                           ;main.c: 333:         }
  3865  0028B4  4A50               	infsnz	_meas,f,c	;volatile
  3866  0028B6  2A51               	incf	_meas+1,f,c	;volatile
  3867  0028B8  D788               	goto	l8016
  3868  0028BA                     l8058:
  3869                           
  3870                           ; BSR set to: 1
  3871                           ;main.c: 334:         if (sensed>2){
  3872  0028BA  BF05               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  3873  0028BC  D006               	goto	l470
  3874  0028BE  5105               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  3875  0028C0  E107               	bnz	l8064
  3876  0028C2  0E03               	movlw	3
  3877  0028C4  5D04               	subwf	ultrasonic_main@sensed& (0+255),w,b
  3878  0028C6  B0D8               	btfsc	status,0,c
  3879  0028C8  D003               	goto	u8480
  3880  0028CA                     l470:
  3881                           
  3882                           ; BSR set to: 1
  3883                           ;main.c: 310:     while(send){
  3884  0028CA  506D               	movf	_send,w,c
  3885  0028CC  A4D8               	btfss	status,2,c
  3886  0028CE  D779               	goto	l8014
  3887  0028D0                     u8480:
  3888  0028D0                     l8064:
  3889                           
  3890                           ; BSR set to: 1
  3891                           ;main.c: 381:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3892  0028D0  0E01               	movlw	1
  3893  0028D2  ECC6  F020         	call	_lcdInst
  3894  0028D6  0E11               	movlw	17
  3895  0028D8  0101               	movlb	1	; () banked
  3896  0028DA  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3897  0028DC  0E3A               	movlw	58
  3898  0028DE                     u9357:
  3899  0028DE  2EE8               	decfsz	wreg,f,c
  3900  0028E0  D7FE               	bra	u9357
  3901  0028E2  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3902  0028E4  D7FC               	bra	u9357
  3903  0028E6  F000               	nop	
  3904                           
  3905                           ;main.c: 382:     printf("stepsadj %d", steps2_adj);
  3906  0028E8  0E27               	movlw	low STR_21
  3907  0028EA  0100               	movlb	0	; () banked
  3908  0028EC  6FED               	movwf	printf@fmt& (0+255),b
  3909  0028EE  0EFF               	movlw	high STR_21
  3910  0028F0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3911  0028F2  C108  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3912  0028F6  C109  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3913  0028FA  EC60  F020         	call	_printf	;wreg free
  3914                           
  3915                           ;main.c: 383:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3916  0028FE  0E0D               	movlw	13
  3917  002900  0101               	movlb	1	; () banked
  3918  002902  6F01               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3919  002904  0EAF               	movlw	175
  3920  002906  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3921  002908  0EB6               	movlw	182
  3922  00290A                     u9367:
  3923  00290A  2EE8               	decfsz	wreg,f,c
  3924  00290C  D7FE               	bra	u9367
  3925  00290E  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3926  002910  D7FC               	bra	u9367
  3927  002912  2F01               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3928  002914  D7FA               	bra	u9367
  3929  002916  F000               	nop	
  3930                           
  3931                           ;main.c: 384:     return steps2_adj;
  3932  002918  C108  F0FC         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3933  00291C  C109  F0FD         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3934  002920  0012               	return		;funcret
  3935  002922                     __end_of_ultrasonic_main:
  3936                           	opt callstack 0
  3937                           
  3938 ;; *************** function _trig *****************
  3939 ;; Defined at:
  3940 ;;		line 193 in file "main.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;Total ram usage:        2 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    3
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_ultrasonic_main
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text2
  3969  0032E8                     __ptext2:
  3970                           	opt callstack 0
  3971  0032E8                     _trig:
  3972                           	opt callstack 26
  3973                           
  3974                           ;main.c: 194:     for(b=1; b<5; b++){
  3975                           
  3976                           ;incstack = 0
  3977  0032E8  0E00               	movlw	0
  3978  0032EA  6E5B               	movwf	_b+1,c
  3979  0032EC  0E01               	movlw	1
  3980  0032EE  6E5A               	movwf	_b,c
  3981  0032F0  BE5B               	btfsc	_b+1,7,c
  3982  0032F2  D004               	goto	l7744
  3983  0032F4  505B               	movf	_b+1,w,c
  3984  0032F6  E101               	bnz	u8070
  3985  0032F8  D072               	goto	L1
  3986  0032FA                     u8070:
  3987  0032FA  0012               	return	
  3988  0032FC                     l7744:
  3989                           
  3990                           ;main.c: 195:         TMR1H = 0;
  3991  0032FC  0E00               	movlw	0
  3992  0032FE  6ECF               	movwf	4047,c	;volatile
  3993                           
  3994                           ;main.c: 196:         TMR1L = 0;
  3995  003300  0E00               	movlw	0
  3996  003302  6ECE               	movwf	4046,c	;volatile
  3997                           
  3998                           ;main.c: 197:         if(b==1){
  3999  003304  045A               	decf	_b,w,c
  4000  003306  105B               	iorwf	_b+1,w,c
  4001  003308  A4D8               	btfss	status,2,c
  4002  00330A  D015               	goto	l7756
  4003                           
  4004                           ;main.c: 198:             RBIE = 0;
  4005  00330C  96F2               	bcf	4082,3,c	;volatile
  4006                           
  4007                           ;main.c: 199:             RD1 = 1;
  4008  00330E  8283               	bsf	3971,1,c	;volatile
  4009                           
  4010                           ;main.c: 200:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  4011  003310  0E08               	movlw	8
  4012  003312                     u9377:
  4013  003312  2EE8               	decfsz	wreg,f,c
  4014  003314  D7FE               	bra	u9377
  4015  003316  F000               	nop	
  4016                           
  4017                           ;main.c: 201:             RD1 = 0;
  4018  003318  9283               	bcf	3971,1,c	;volatile
  4019                           
  4020                           ;main.c: 203:             RBIE = 1;
  4021  00331A  86F2               	bsf	4082,3,c	;volatile
  4022                           
  4023                           ;main.c: 204:             _delay((unsigned long)((135)*(10000000/4000.0)));
  4024  00331C  0E02               	movlw	2
  4025  00331E  0100               	movlb	0	; () banked
  4026  003320  6F81               	movwf	(??_trig+1)& (0+255),b
  4027  003322  0EB7               	movlw	183
  4028  003324  6F80               	movwf	??_trig& (0+255),b
  4029  003326  0E4C               	movlw	76
  4030  003328                     u9387:
  4031  003328  2EE8               	decfsz	wreg,f,c
  4032  00332A  D7FE               	bra	u9387
  4033  00332C  2F80               	decfsz	??_trig& (0+255),f,b
  4034  00332E  D7FC               	bra	u9387
  4035  003330  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  4036  003332  D7FA               	bra	u9387
  4037  003334  F000               	nop	
  4038  003336                     l7756:
  4039                           
  4040                           ;main.c: 206:         if(b==2){
  4041  003336  0E02               	movlw	2
  4042  003338  185A               	xorwf	_b,w,c
  4043  00333A  105B               	iorwf	_b+1,w,c
  4044  00333C  A4D8               	btfss	status,2,c
  4045  00333E  D015               	goto	l7766
  4046                           
  4047                           ;main.c: 207:             RBIE = 0;
  4048  003340  96F2               	bcf	4082,3,c	;volatile
  4049                           
  4050                           ;main.c: 208:             RD0 = 1;
  4051  003342  8083               	bsf	3971,0,c	;volatile
  4052                           
  4053                           ;main.c: 209:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  4054  003344  0E08               	movlw	8
  4055  003346                     u9397:
  4056  003346  2EE8               	decfsz	wreg,f,c
  4057  003348  D7FE               	bra	u9397
  4058  00334A  F000               	nop	
  4059                           
  4060                           ;main.c: 210:             RD0 = 0;
  4061  00334C  9083               	bcf	3971,0,c	;volatile
  4062                           
  4063                           ;main.c: 212:             RBIE = 1;
  4064  00334E  86F2               	bsf	4082,3,c	;volatile
  4065                           
  4066                           ;main.c: 213:             _delay((unsigned long)((135)*(10000000/4000.0)));
  4067  003350  0E02               	movlw	2
  4068  003352  0100               	movlb	0	; () banked
  4069  003354  6F81               	movwf	(??_trig+1)& (0+255),b
  4070  003356  0EB7               	movlw	183
  4071  003358  6F80               	movwf	??_trig& (0+255),b
  4072  00335A  0E4C               	movlw	76
  4073  00335C                     u9407:
  4074  00335C  2EE8               	decfsz	wreg,f,c
  4075  00335E  D7FE               	bra	u9407
  4076  003360  2F80               	decfsz	??_trig& (0+255),f,b
  4077  003362  D7FC               	bra	u9407
  4078  003364  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  4079  003366  D7FA               	bra	u9407
  4080  003368  F000               	nop	
  4081  00336A                     l7766:
  4082                           
  4083                           ;main.c: 215:         if(b==3){
  4084  00336A  0E03               	movlw	3
  4085  00336C  185A               	xorwf	_b,w,c
  4086  00336E  105B               	iorwf	_b+1,w,c
  4087  003370  A4D8               	btfss	status,2,c
  4088  003372  D015               	goto	l7776
  4089                           
  4090                           ;main.c: 216:             RBIE = 0;
  4091  003374  96F2               	bcf	4082,3,c	;volatile
  4092                           
  4093                           ;main.c: 217:             RB3 = 1;
  4094  003376  8681               	bsf	3969,3,c	;volatile
  4095                           
  4096                           ;main.c: 218:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  4097  003378  0E08               	movlw	8
  4098  00337A                     u9417:
  4099  00337A  2EE8               	decfsz	wreg,f,c
  4100  00337C  D7FE               	bra	u9417
  4101  00337E  F000               	nop	
  4102                           
  4103                           ;main.c: 219:             RB3 = 0;
  4104  003380  9681               	bcf	3969,3,c	;volatile
  4105                           
  4106                           ;main.c: 221:             RBIE = 1;
  4107  003382  86F2               	bsf	4082,3,c	;volatile
  4108                           
  4109                           ;main.c: 222:             _delay((unsigned long)((135)*(10000000/4000.0)));
  4110  003384  0E02               	movlw	2
  4111  003386  0100               	movlb	0	; () banked
  4112  003388  6F81               	movwf	(??_trig+1)& (0+255),b
  4113  00338A  0EB7               	movlw	183
  4114  00338C  6F80               	movwf	??_trig& (0+255),b
  4115  00338E  0E4C               	movlw	76
  4116  003390                     u9427:
  4117  003390  2EE8               	decfsz	wreg,f,c
  4118  003392  D7FE               	bra	u9427
  4119  003394  2F80               	decfsz	??_trig& (0+255),f,b
  4120  003396  D7FC               	bra	u9427
  4121  003398  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  4122  00339A  D7FA               	bra	u9427
  4123  00339C  F000               	nop	
  4124  00339E                     l7776:
  4125                           
  4126                           ;main.c: 224:         if(b==4){
  4127  00339E  0E04               	movlw	4
  4128  0033A0  185A               	xorwf	_b,w,c
  4129  0033A2  105B               	iorwf	_b+1,w,c
  4130  0033A4  A4D8               	btfss	status,2,c
  4131  0033A6  D015               	goto	l7786
  4132                           
  4133                           ;main.c: 225:             RBIE = 0;
  4134  0033A8  96F2               	bcf	4082,3,c	;volatile
  4135                           
  4136                           ;main.c: 226:             RB2 = 1;
  4137  0033AA  8481               	bsf	3969,2,c	;volatile
  4138                           
  4139                           ;main.c: 227:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  4140  0033AC  0E08               	movlw	8
  4141  0033AE                     u9437:
  4142  0033AE  2EE8               	decfsz	wreg,f,c
  4143  0033B0  D7FE               	bra	u9437
  4144  0033B2  F000               	nop	
  4145                           
  4146                           ;main.c: 228:             RB2 = 0;
  4147  0033B4  9481               	bcf	3969,2,c	;volatile
  4148                           
  4149                           ;main.c: 230:             RBIE = 1;
  4150  0033B6  86F2               	bsf	4082,3,c	;volatile
  4151                           
  4152                           ;main.c: 231:             _delay((unsigned long)((135)*(10000000/4000.0)));
  4153  0033B8  0E02               	movlw	2
  4154  0033BA  0100               	movlb	0	; () banked
  4155  0033BC  6F81               	movwf	(??_trig+1)& (0+255),b
  4156  0033BE  0EB7               	movlw	183
  4157  0033C0  6F80               	movwf	??_trig& (0+255),b
  4158  0033C2  0E4C               	movlw	76
  4159  0033C4                     u9447:
  4160  0033C4  2EE8               	decfsz	wreg,f,c
  4161  0033C6  D7FE               	bra	u9447
  4162  0033C8  2F80               	decfsz	??_trig& (0+255),f,b
  4163  0033CA  D7FC               	bra	u9447
  4164  0033CC  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  4165  0033CE  D7FA               	bra	u9447
  4166  0033D0  F000               	nop	
  4167  0033D2                     l7786:
  4168                           
  4169                           ;main.c: 233:     }
  4170  0033D2  4A5A               	infsnz	_b,f,c
  4171  0033D4  2A5B               	incf	_b+1,f,c
  4172  0033D6  BE5B               	btfsc	_b+1,7,c
  4173  0033D8  D791               	goto	l7744
  4174  0033DA  505B               	movf	_b+1,w,c
  4175  0033DC  E105               	bnz	u8120
  4176  0033DE                     L1:
  4177  0033DE  0E05               	movlw	5
  4178  0033E0  5C5A               	subwf	_b,w,c
  4179  0033E2  B0D8               	btfsc	status,0,c
  4180  0033E4  0012               	return	
  4181  0033E6  D78A               	goto	l7744
  4182  0033E8                     u8120:
  4183  0033E8  0012               	return		;funcret
  4184  0033EA                     __end_of_trig:
  4185                           	opt callstack 0
  4186                           
  4187 ;; *************** function _print_echo *****************
  4188 ;; Defined at:
  4189 ;;		line 236 in file "main.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;Total ram usage:        1 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:   14
  4210 ;; This function calls:
  4211 ;;		_lcdInst
  4212 ;;		_printf
  4213 ;; This function is called by:
  4214 ;;		_ultrasonic_main
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text3
  4219  002560                     __ptext3:
  4220                           	opt callstack 0
  4221  002560                     _print_echo:
  4222                           	opt callstack 15
  4223                           
  4224                           ;main.c: 237:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4225                           
  4226                           ;incstack = 0
  4227  002560  0E01               	movlw	1
  4228  002562  ECC6  F020         	call	_lcdInst
  4229  002566  0E11               	movlw	17
  4230  002568  0100               	movlb	0	; () banked
  4231  00256A  6FFB               	movwf	??_print_echo& (0+255),b
  4232  00256C  0E3A               	movlw	58
  4233  00256E                     u9457:
  4234  00256E  2EE8               	decfsz	wreg,f,c
  4235  002570  D7FE               	bra	u9457
  4236  002572  2FFB               	decfsz	??_print_echo& (0+255),f,b
  4237  002574  D7FC               	bra	u9457
  4238  002576  F000               	nop	
  4239                           
  4240                           ;main.c: 238:     if(a[0]>=2 && a[0]<=400){
  4241  002578  BE62               	btfsc	_a+1,7,c
  4242  00257A  D01D               	goto	l7798
  4243  00257C  5062               	movf	_a+1,w,c
  4244  00257E  E104               	bnz	u8130
  4245  002580  0E02               	movlw	2
  4246  002582  5C61               	subwf	_a,w,c
  4247  002584  A0D8               	btfss	status,0,c
  4248  002586  D017               	goto	l7798
  4249  002588                     u8130:
  4250  002588  BE62               	btfsc	_a+1,7,c
  4251  00258A  D006               	goto	u8140
  4252  00258C  0E91               	movlw	145
  4253  00258E  5C61               	subwf	_a,w,c
  4254  002590  0E01               	movlw	1
  4255  002592  5862               	subwfb	_a+1,w,c
  4256  002594  B0D8               	btfsc	status,0,c
  4257  002596  D00F               	goto	l7798
  4258  002598                     u8140:
  4259                           
  4260                           ;main.c: 239:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  4261  002598  0ECC               	movlw	low STR_10
  4262  00259A  0100               	movlb	0	; () banked
  4263  00259C  6FED               	movwf	printf@fmt& (0+255),b
  4264  00259E  0EFD               	movlw	high STR_10
  4265  0025A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4266  0025A2  C061  F0EF         	movff	_a,?_printf+2
  4267  0025A6  C062  F0F0         	movff	_a+1,?_printf+3
  4268  0025AA  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  4269  0025AE  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  4270  0025B2  EC60  F020         	call	_printf	;wreg free
  4271  0025B6                     l7798:
  4272                           
  4273                           ;main.c: 241:     if(!(a[0]>=2 && a[0]<=400)){
  4274  0025B6  BE62               	btfsc	_a+1,7,c
  4275  0025B8  D00E               	goto	u8160
  4276  0025BA  5062               	movf	_a+1,w,c
  4277  0025BC  E104               	bnz	u8150
  4278  0025BE  0E02               	movlw	2
  4279  0025C0  5C61               	subwf	_a,w,c
  4280  0025C2  A0D8               	btfss	status,0,c
  4281  0025C4  D008               	goto	u8160
  4282  0025C6                     u8150:
  4283  0025C6  BE62               	btfsc	_a+1,7,c
  4284  0025C8  D00D               	goto	l7804
  4285  0025CA  0E91               	movlw	145
  4286  0025CC  5C61               	subwf	_a,w,c
  4287  0025CE  0E01               	movlw	1
  4288  0025D0  5862               	subwfb	_a+1,w,c
  4289  0025D2  A0D8               	btfss	status,0,c
  4290  0025D4  D007               	goto	l7804
  4291  0025D6                     u8160:
  4292                           
  4293                           ;main.c: 242:         printf("Dist1 = X");
  4294  0025D6  0E83               	movlw	low STR_11
  4295  0025D8  0100               	movlb	0	; () banked
  4296  0025DA  6FED               	movwf	printf@fmt& (0+255),b
  4297  0025DC  0EFF               	movlw	high STR_11
  4298  0025DE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4299  0025E0  EC60  F020         	call	_printf	;wreg free
  4300  0025E4                     l7804:
  4301                           
  4302                           ;main.c: 244:     if(a[1]>=2 && a[1]<=400){
  4303  0025E4  BE64               	btfsc	_a+3,7,c
  4304  0025E6  D020               	goto	l7812
  4305  0025E8  5064               	movf	_a+3,w,c
  4306  0025EA  E104               	bnz	u8170
  4307  0025EC  0E02               	movlw	2
  4308  0025EE  5C63               	subwf	_a+2,w,c
  4309  0025F0  A0D8               	btfss	status,0,c
  4310  0025F2  D01A               	goto	l7812
  4311  0025F4                     u8170:
  4312  0025F4  BE64               	btfsc	_a+3,7,c
  4313  0025F6  D006               	goto	u8180
  4314  0025F8  0E91               	movlw	145
  4315  0025FA  5C63               	subwf	_a+2,w,c
  4316  0025FC  0E01               	movlw	1
  4317  0025FE  5864               	subwfb	_a+3,w,c
  4318  002600  B0D8               	btfsc	status,0,c
  4319  002602  D012               	goto	l7812
  4320  002604                     u8180:
  4321  002604  0EC0               	movlw	192
  4322  002606  ECC6  F020         	call	_lcdInst
  4323                           
  4324                           ;main.c: 246:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  4325  00260A  0E51               	movlw	low STR_12
  4326  00260C  0100               	movlb	0	; () banked
  4327  00260E  6FED               	movwf	printf@fmt& (0+255),b
  4328  002610  0EFE               	movlw	high STR_12
  4329  002612  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4330  002614  C063  F0EF         	movff	_a+2,?_printf+2
  4331  002618  C064  F0F0         	movff	_a+3,?_printf+3
  4332  00261C  C266  F0F1         	movff	_dist_final+22,?_printf+4
  4333  002620  C267  F0F2         	movff	_dist_final+23,?_printf+5
  4334  002624  EC60  F020         	call	_printf	;wreg free
  4335  002628                     l7812:
  4336                           
  4337                           ;main.c: 248:     if(!(a[1]>=2 && a[1]<=400)){
  4338  002628  BE64               	btfsc	_a+3,7,c
  4339  00262A  D00E               	goto	u8200
  4340  00262C  5064               	movf	_a+3,w,c
  4341  00262E  E104               	bnz	u8190
  4342  002630  0E02               	movlw	2
  4343  002632  5C63               	subwf	_a+2,w,c
  4344  002634  A0D8               	btfss	status,0,c
  4345  002636  D008               	goto	u8200
  4346  002638                     u8190:
  4347  002638  BE64               	btfsc	_a+3,7,c
  4348  00263A  D010               	goto	l7820
  4349  00263C  0E91               	movlw	145
  4350  00263E  5C63               	subwf	_a+2,w,c
  4351  002640  0E01               	movlw	1
  4352  002642  5864               	subwfb	_a+3,w,c
  4353  002644  A0D8               	btfss	status,0,c
  4354  002646  D00A               	goto	l7820
  4355  002648                     u8200:
  4356  002648  0EC0               	movlw	192
  4357  00264A  ECC6  F020         	call	_lcdInst
  4358                           
  4359                           ;main.c: 250:         printf("Dist2 = X");
  4360  00264E  0E8D               	movlw	low STR_13
  4361  002650  0100               	movlb	0	; () banked
  4362  002652  6FED               	movwf	printf@fmt& (0+255),b
  4363  002654  0EFF               	movlw	high STR_13
  4364  002656  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4365  002658  EC60  F020         	call	_printf	;wreg free
  4366  00265C                     l7820:
  4367                           
  4368                           ;main.c: 252:     if(a[2]>=2 && a[2]<=400){
  4369  00265C  BE66               	btfsc	_a+5,7,c
  4370  00265E  D020               	goto	l7828
  4371  002660  5066               	movf	_a+5,w,c
  4372  002662  E104               	bnz	u8210
  4373  002664  0E02               	movlw	2
  4374  002666  5C65               	subwf	_a+4,w,c
  4375  002668  A0D8               	btfss	status,0,c
  4376  00266A  D01A               	goto	l7828
  4377  00266C                     u8210:
  4378  00266C  BE66               	btfsc	_a+5,7,c
  4379  00266E  D006               	goto	u8220
  4380  002670  0E91               	movlw	145
  4381  002672  5C65               	subwf	_a+4,w,c
  4382  002674  0E01               	movlw	1
  4383  002676  5866               	subwfb	_a+5,w,c
  4384  002678  B0D8               	btfsc	status,0,c
  4385  00267A  D012               	goto	l7828
  4386  00267C                     u8220:
  4387  00267C  0E90               	movlw	144
  4388  00267E  ECC6  F020         	call	_lcdInst
  4389                           
  4390                           ;main.c: 254:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  4391  002682  0E61               	movlw	low STR_14
  4392  002684  0100               	movlb	0	; () banked
  4393  002686  6FED               	movwf	printf@fmt& (0+255),b
  4394  002688  0EFE               	movlw	high STR_14
  4395  00268A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4396  00268C  C065  F0EF         	movff	_a+4,?_printf+2
  4397  002690  C066  F0F0         	movff	_a+5,?_printf+3
  4398  002694  C272  F0F1         	movff	_dist_final+34,?_printf+4
  4399  002698  C273  F0F2         	movff	_dist_final+35,?_printf+5
  4400  00269C  EC60  F020         	call	_printf	;wreg free
  4401  0026A0                     l7828:
  4402                           
  4403                           ;main.c: 256:     if(!(a[2]>=2 && a[2]<=400)){
  4404  0026A0  BE66               	btfsc	_a+5,7,c
  4405  0026A2  D00E               	goto	u8240
  4406  0026A4  5066               	movf	_a+5,w,c
  4407  0026A6  E104               	bnz	u8230
  4408  0026A8  0E02               	movlw	2
  4409  0026AA  5C65               	subwf	_a+4,w,c
  4410  0026AC  A0D8               	btfss	status,0,c
  4411  0026AE  D008               	goto	u8240
  4412  0026B0                     u8230:
  4413  0026B0  BE66               	btfsc	_a+5,7,c
  4414  0026B2  D010               	goto	l7836
  4415  0026B4  0E91               	movlw	145
  4416  0026B6  5C65               	subwf	_a+4,w,c
  4417  0026B8  0E01               	movlw	1
  4418  0026BA  5866               	subwfb	_a+5,w,c
  4419  0026BC  A0D8               	btfss	status,0,c
  4420  0026BE  D00A               	goto	l7836
  4421  0026C0                     u8240:
  4422  0026C0  0E90               	movlw	144
  4423  0026C2  ECC6  F020         	call	_lcdInst
  4424                           
  4425                           ;main.c: 258:         printf("Dist3 = X");
  4426  0026C6  0E97               	movlw	low STR_15
  4427  0026C8  0100               	movlb	0	; () banked
  4428  0026CA  6FED               	movwf	printf@fmt& (0+255),b
  4429  0026CC  0EFF               	movlw	high STR_15
  4430  0026CE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4431  0026D0  EC60  F020         	call	_printf	;wreg free
  4432  0026D4                     l7836:
  4433                           
  4434                           ;main.c: 260:     if(a[3]>=2 && a[3]<=400){
  4435  0026D4  BE68               	btfsc	_a+7,7,c
  4436  0026D6  D020               	goto	l7844
  4437  0026D8  5068               	movf	_a+7,w,c
  4438  0026DA  E104               	bnz	u8250
  4439  0026DC  0E02               	movlw	2
  4440  0026DE  5C67               	subwf	_a+6,w,c
  4441  0026E0  A0D8               	btfss	status,0,c
  4442  0026E2  D01A               	goto	l7844
  4443  0026E4                     u8250:
  4444  0026E4  BE68               	btfsc	_a+7,7,c
  4445  0026E6  D006               	goto	u8260
  4446  0026E8  0E91               	movlw	145
  4447  0026EA  5C67               	subwf	_a+6,w,c
  4448  0026EC  0E01               	movlw	1
  4449  0026EE  5868               	subwfb	_a+7,w,c
  4450  0026F0  B0D8               	btfsc	status,0,c
  4451  0026F2  D012               	goto	l7844
  4452  0026F4                     u8260:
  4453  0026F4  0ED0               	movlw	208
  4454  0026F6  ECC6  F020         	call	_lcdInst
  4455                           
  4456                           ;main.c: 262:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  4457  0026FA  0EDD               	movlw	low STR_16
  4458  0026FC  0100               	movlb	0	; () banked
  4459  0026FE  6FED               	movwf	printf@fmt& (0+255),b
  4460  002700  0EFD               	movlw	high STR_16
  4461  002702  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4462  002704  C067  F0EF         	movff	_a+6,?_printf+2
  4463  002708  C068  F0F0         	movff	_a+7,?_printf+3
  4464  00270C  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  4465  002710  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  4466  002714  EC60  F020         	call	_printf	;wreg free
  4467  002718                     l7844:
  4468                           
  4469                           ;main.c: 265:     if(!(a[3]>=2 && a[3]<=400)){
  4470  002718  BE68               	btfsc	_a+7,7,c
  4471  00271A  D00E               	goto	u8280
  4472  00271C  5068               	movf	_a+7,w,c
  4473  00271E  E104               	bnz	u8270
  4474  002720  0E02               	movlw	2
  4475  002722  5C67               	subwf	_a+6,w,c
  4476  002724  A0D8               	btfss	status,0,c
  4477  002726  D008               	goto	u8280
  4478  002728                     u8270:
  4479  002728  BE68               	btfsc	_a+7,7,c
  4480  00272A  0012               	return	
  4481  00272C  0E91               	movlw	145
  4482  00272E  5C67               	subwf	_a+6,w,c
  4483  002730  0E01               	movlw	1
  4484  002732  5868               	subwfb	_a+7,w,c
  4485  002734  A0D8               	btfss	status,0,c
  4486  002736  0012               	return	
  4487  002738                     u8280:
  4488  002738  0ED0               	movlw	208
  4489  00273A  ECC6  F020         	call	_lcdInst
  4490                           
  4491                           ;main.c: 267:         printf("Dist4 = X");
  4492  00273E  0EA1               	movlw	low STR_17
  4493  002740  0100               	movlb	0	; () banked
  4494  002742  6FED               	movwf	printf@fmt& (0+255),b
  4495  002744  0EFF               	movlw	high STR_17
  4496  002746  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4497  002748  EC60  F020         	call	_printf	;wreg free
  4498  00274C  0012               	return		;funcret
  4499  00274E                     __end_of_print_echo:
  4500                           	opt callstack 0
  4501                           
  4502 ;; *************** function _min *****************
  4503 ;; Defined at:
  4504 ;;		line 270 in file "main.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  array           2    0[BANK0 ] PTR int 
  4507 ;;		 -> a(8), 
  4508 ;;  size            2    2[BANK0 ] int 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  i               2    9[BANK0 ] int 
  4511 ;;  minimum         2    7[BANK0 ] int 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  2    0[BANK0 ] int 
  4514 ;; Registers used:
  4515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;Total ram usage:       11 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    3
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_ultrasonic_main
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text4
  4536  0031D8                     __ptext4:
  4537                           	opt callstack 0
  4538  0031D8                     _min:
  4539                           	opt callstack 26
  4540                           
  4541                           ;main.c: 271:     int minimum =0 ;
  4542                           
  4543                           ;incstack = 0
  4544  0031D8  0E00               	movlw	0
  4545  0031DA  0100               	movlb	0	; () banked
  4546  0031DC  6F88               	movwf	(min@minimum+1)& (0+255),b
  4547  0031DE  0E00               	movlw	0
  4548  0031E0  6F87               	movwf	min@minimum& (0+255),b
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;main.c: 272:     if (array[0]<=23){
  4552  0031E2  C080  FFD9         	movff	min@array,fsr2l
  4553  0031E6  C081  FFDA         	movff	min@array+1,fsr2h
  4554  0031EA  0E01               	movlw	1
  4555  0031EC  BEDB               	btfsc	plusw2,7,c
  4556  0031EE  D007               	goto	u8290
  4557  0031F0  0E01               	movlw	1
  4558  0031F2  50DB               	movf	plusw2,w,c
  4559  0031F4  E10C               	bnz	l7858
  4560  0031F6  0E18               	movlw	24
  4561  0031F8  5CDE               	subwf	postinc2,w,c
  4562  0031FA  B0D8               	btfsc	status,0,c
  4563  0031FC  D008               	goto	l7858
  4564  0031FE                     u8290:
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;main.c: 273:          minimum = array[0];}
  4568  0031FE  C080  FFD9         	movff	min@array,fsr2l
  4569  003202  C081  FFDA         	movff	min@array+1,fsr2h
  4570  003206  CFDE F087          	movff	postinc2,min@minimum
  4571  00320A  CFDD F088          	movff	postdec2,min@minimum+1
  4572  00320E                     l7858:
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;main.c: 277:     for (int i = 0; i<size; i++){
  4576  00320E  0E00               	movlw	0
  4577  003210  6F8A               	movwf	(min@i+1)& (0+255),b
  4578  003212  0E00               	movlw	0
  4579  003214  6F89               	movwf	min@i& (0+255),b
  4580  003216  D059               	goto	l7874
  4581  003218                     l7860:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;main.c: 281:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  4585  003218  5187               	movf	min@minimum& (0+255),w,b
  4586  00321A  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  4587  00321C  B4D8               	btfsc	status,2,c
  4588  00321E  D046               	goto	u8340
  4589                           
  4590                           ; BSR set to: 0
  4591  003220  90D8               	bcf	status,0,c
  4592  003222  3589               	rlcf	min@i& (0+255),w,b
  4593  003224  6ED9               	movwf	fsr2l,c
  4594  003226  358A               	rlcf	(min@i+1)& (0+255),w,b
  4595  003228  6EDA               	movwf	fsr2h,c
  4596  00322A  5180               	movf	min@array& (0+255),w,b
  4597  00322C  26D9               	addwf	fsr2l,f,c
  4598  00322E  5181               	movf	(min@array+1)& (0+255),w,b
  4599  003230  22DA               	addwfc	fsr2h,f,c
  4600  003232  50DE               	movf	postinc2,w,c
  4601  003234  5D87               	subwf	min@minimum& (0+255),w,b
  4602  003236  5188               	movf	(min@minimum+1)& (0+255),w,b
  4603  003238  0A80               	xorlw	128
  4604  00323A  6F86               	movwf	(??_min+2)& (0+255),b
  4605  00323C  50DE               	movf	postinc2,w,c
  4606  00323E  0A80               	xorlw	128
  4607  003240  5986               	subwfb	(??_min+2)& (0+255),w,b
  4608  003242  A0D8               	btfss	status,0,c
  4609  003244  D040               	goto	l7872
  4610                           
  4611                           ; BSR set to: 0
  4612  003246  90D8               	bcf	status,0,c
  4613  003248  3589               	rlcf	min@i& (0+255),w,b
  4614  00324A  6ED9               	movwf	fsr2l,c
  4615  00324C  358A               	rlcf	(min@i+1)& (0+255),w,b
  4616  00324E  6EDA               	movwf	fsr2h,c
  4617  003250  5180               	movf	min@array& (0+255),w,b
  4618  003252  26D9               	addwf	fsr2l,f,c
  4619  003254  5181               	movf	(min@array+1)& (0+255),w,b
  4620  003256  22DA               	addwfc	fsr2h,f,c
  4621  003258  50DE               	movf	postinc2,w,c
  4622  00325A  10DE               	iorwf	postinc2,w,c
  4623  00325C  B4D8               	btfsc	status,2,c
  4624  00325E  D033               	goto	l7872
  4625                           
  4626                           ; BSR set to: 0
  4627  003260  90D8               	bcf	status,0,c
  4628  003262  3589               	rlcf	min@i& (0+255),w,b
  4629  003264  6ED9               	movwf	fsr2l,c
  4630  003266  358A               	rlcf	(min@i+1)& (0+255),w,b
  4631  003268  6EDA               	movwf	fsr2h,c
  4632  00326A  5180               	movf	min@array& (0+255),w,b
  4633  00326C  26D9               	addwf	fsr2l,f,c
  4634  00326E  5181               	movf	(min@array+1)& (0+255),w,b
  4635  003270  22DA               	addwfc	fsr2h,f,c
  4636  003272  0E01               	movlw	1
  4637  003274  BEDB               	btfsc	plusw2,7,c
  4638  003276  D027               	goto	l7872
  4639  003278  0E01               	movlw	1
  4640  00327A  50DB               	movf	plusw2,w,c
  4641  00327C  E104               	bnz	u8330
  4642  00327E  0E0E               	movlw	14
  4643  003280  5CDE               	subwf	postinc2,w,c
  4644  003282  A0D8               	btfss	status,0,c
  4645  003284  D020               	goto	l7872
  4646  003286                     u8330:
  4647                           
  4648                           ; BSR set to: 0
  4649  003286  90D8               	bcf	status,0,c
  4650  003288  3589               	rlcf	min@i& (0+255),w,b
  4651  00328A  6ED9               	movwf	fsr2l,c
  4652  00328C  358A               	rlcf	(min@i+1)& (0+255),w,b
  4653  00328E  6EDA               	movwf	fsr2h,c
  4654  003290  5180               	movf	min@array& (0+255),w,b
  4655  003292  26D9               	addwf	fsr2l,f,c
  4656  003294  5181               	movf	(min@array+1)& (0+255),w,b
  4657  003296  22DA               	addwfc	fsr2h,f,c
  4658  003298  0E01               	movlw	1
  4659  00329A  BEDB               	btfsc	plusw2,7,c
  4660  00329C  D007               	goto	u8340
  4661  00329E  0E01               	movlw	1
  4662  0032A0  50DB               	movf	plusw2,w,c
  4663  0032A2  E111               	bnz	l7872
  4664  0032A4  0E18               	movlw	24
  4665  0032A6  5CDE               	subwf	postinc2,w,c
  4666  0032A8  B0D8               	btfsc	status,0,c
  4667  0032AA  D00D               	goto	l7872
  4668  0032AC                     u8340:
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;main.c: 285:             minimum = array[i];
  4672  0032AC  90D8               	bcf	status,0,c
  4673  0032AE  3589               	rlcf	min@i& (0+255),w,b
  4674  0032B0  6ED9               	movwf	fsr2l,c
  4675  0032B2  358A               	rlcf	(min@i+1)& (0+255),w,b
  4676  0032B4  6EDA               	movwf	fsr2h,c
  4677  0032B6  5180               	movf	min@array& (0+255),w,b
  4678  0032B8  26D9               	addwf	fsr2l,f,c
  4679  0032BA  5181               	movf	(min@array+1)& (0+255),w,b
  4680  0032BC  22DA               	addwfc	fsr2h,f,c
  4681  0032BE  CFDE F087          	movff	postinc2,min@minimum
  4682  0032C2  CFDD F088          	movff	postdec2,min@minimum+1
  4683  0032C6                     l7872:
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;main.c: 290:     }
  4687  0032C6  4B89               	infsnz	min@i& (0+255),f,b
  4688  0032C8  2B8A               	incf	(min@i+1)& (0+255),f,b
  4689  0032CA                     l7874:
  4690                           
  4691                           ; BSR set to: 0
  4692  0032CA  5182               	movf	min@size& (0+255),w,b
  4693  0032CC  5D89               	subwf	min@i& (0+255),w,b
  4694  0032CE  518A               	movf	(min@i+1)& (0+255),w,b
  4695  0032D0  0A80               	xorlw	128
  4696  0032D2  6F84               	movwf	??_min& (0+255),b
  4697  0032D4  5183               	movf	(min@size+1)& (0+255),w,b
  4698  0032D6  0A80               	xorlw	128
  4699  0032D8  5984               	subwfb	??_min& (0+255),w,b
  4700  0032DA  A0D8               	btfss	status,0,c
  4701  0032DC  D79D               	goto	l7860
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;main.c: 291:     return minimum;
  4705  0032DE  C087  F080         	movff	min@minimum,?_min
  4706  0032E2  C088  F081         	movff	min@minimum+1,?_min+1
  4707                           
  4708                           ; BSR set to: 0
  4709  0032E6  0012               	return		;funcret
  4710  0032E8                     __end_of_min:
  4711                           	opt callstack 0
  4712                           
  4713 ;; *************** function _start *****************
  4714 ;; Defined at:
  4715 ;;		line 705 in file "main.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    5
  4736 ;; This function calls:
  4737 ;;		_I2C_Master_Init
  4738 ;;		_I2C_Master_Start
  4739 ;;		_I2C_Master_Stop
  4740 ;;		_I2C_Master_Write
  4741 ;; This function is called by:
  4742 ;;		_main
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746                           	psect	text5
  4747  003D7E                     __ptext5:
  4748                           	opt callstack 0
  4749  003D7E                     _start:
  4750                           	opt callstack 25
  4751                           
  4752                           ;main.c: 706:     I2C_Master_Init(100000);
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;incstack = 0
  4756  003D7E  0EA0               	movlw	160
  4757  003D80  0100               	movlb	0	; () banked
  4758  003D82  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  4759  003D84  0E86               	movlw	134
  4760  003D86  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  4761  003D88  0E01               	movlw	1
  4762  003D8A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  4763  003D8C  0E00               	movlw	0
  4764  003D8E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  4765  003D90  EC39  F01E         	call	_I2C_Master_Init	;wreg free
  4766                           
  4767                           ;main.c: 707:     I2C_Master_Start();
  4768  003D94  ECD7  F020         	call	_I2C_Master_Start	;wreg free
  4769                           
  4770                           ;main.c: 708:     I2C_Master_Write(0b00010000);
  4771  003D98  0E00               	movlw	0
  4772  003D9A  0100               	movlb	0	; () banked
  4773  003D9C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4774  003D9E  0E10               	movlw	16
  4775  003DA0  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4776  003DA2  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  4777                           
  4778                           ;main.c: 709:     I2C_Master_Stop();
  4779  003DA6  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  4780                           
  4781                           ;main.c: 711:     I2C_Master_Start();
  4782  003DAA  ECD7  F020         	call	_I2C_Master_Start	;wreg free
  4783                           
  4784                           ;main.c: 712:     I2C_Master_Write(0b00010000);
  4785  003DAE  0E00               	movlw	0
  4786  003DB0  0100               	movlb	0	; () banked
  4787  003DB2  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4788  003DB4  0E10               	movlw	16
  4789  003DB6  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4790  003DB8  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  4791                           
  4792                           ;main.c: 713:     I2C_Master_Write('2');
  4793  003DBC  0E00               	movlw	0
  4794  003DBE  0100               	movlb	0	; () banked
  4795  003DC0  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4796  003DC2  0E32               	movlw	50
  4797  003DC4  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4798  003DC6  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  4799                           
  4800                           ;main.c: 714:     I2C_Master_Stop();
  4801  003DCA  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  4802  003DCE  0012               	return		;funcret
  4803  003DD0                     __end_of_start:
  4804                           	opt callstack 0
  4805                           
  4806 ;; *************** function _number_deploy *****************
  4807 ;; Defined at:
  4808 ;;		line 422 in file "main.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  avg_dist        2    0[BANK1 ] int 
  4811 ;;  poles_detect    2    2[BANK1 ] int 
  4812 ;;  tires_detect    2    4[BANK1 ] int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  t_count         2    8[BANK1 ] int 
  4815 ;;  tires_t         2    6[BANK1 ] int 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  2    0[BANK1 ] int 
  4818 ;; Registers used:
  4819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4825 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;Total ram usage:       12 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:   14
  4832 ;; This function calls:
  4833 ;;		_lcdInst
  4834 ;;		_printf
  4835 ;; This function is called by:
  4836 ;;		_main
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text6
  4841  002F8A                     __ptext6:
  4842                           	opt callstack 0
  4843  002F8A                     _number_deploy:
  4844                           	opt callstack 16
  4845                           
  4846                           ;main.c: 423:     int tires_t=0;
  4847                           
  4848                           ;incstack = 0
  4849  002F8A  0E00               	movlw	0
  4850  002F8C  0101               	movlb	1	; () banked
  4851  002F8E  6F07               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4852  002F90  0E00               	movlw	0
  4853  002F92  6F06               	movwf	number_deploy@tires_t& (0+255),b
  4854                           
  4855                           ;main.c: 425:     int t_count = 0;
  4856  002F94  0E00               	movlw	0
  4857  002F96  6F09               	movwf	(number_deploy@t_count+1)& (0+255),b
  4858  002F98  0E00               	movlw	0
  4859  002F9A  6F08               	movwf	number_deploy@t_count& (0+255),b
  4860                           
  4861                           ;main.c: 428:     while (t_count<3){
  4862  002F9C  D07D               	goto	l8122
  4863  002F9E                     l8092:
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;main.c: 429:   if (poles_detected != 0){
  4867  002F9E  5102               	movf	number_deploy@poles_detected& (0+255),w,b
  4868  002FA0  1103               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4869  002FA2  B4D8               	btfsc	status,2,c
  4870  002FA4  D018               	goto	l8102
  4871                           
  4872                           ; BSR set to: 1
  4873                           ;main.c: 430:    if ((avg_dist)<30){
  4874  002FA6  BF01               	btfsc	(number_deploy@avg_dist+1)& (0+255),7,b
  4875  002FA8  D006               	goto	u8510
  4876  002FAA  5101               	movf	(number_deploy@avg_dist+1)& (0+255),w,b
  4877  002FAC  E108               	bnz	l8098
  4878  002FAE  0E1E               	movlw	30
  4879  002FB0  5D00               	subwf	number_deploy@avg_dist& (0+255),w,b
  4880  002FB2  B0D8               	btfsc	status,0,c
  4881  002FB4  D004               	goto	l8098
  4882  002FB6                     u8510:
  4883                           
  4884                           ; BSR set to: 1
  4885                           ;main.c: 432:     tires_t = 1;
  4886  002FB6  0E00               	movlw	0
  4887  002FB8  6F07               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4888  002FBA  0E01               	movlw	1
  4889  002FBC  6F06               	movwf	number_deploy@tires_t& (0+255),b
  4890  002FBE                     l8098:
  4891                           
  4892                           ; BSR set to: 1
  4893                           ;main.c: 434:    if ((avg_dist)>30){
  4894  002FBE  BF01               	btfsc	(number_deploy@avg_dist+1)& (0+255),7,b
  4895  002FC0  D00A               	goto	l8102
  4896  002FC2  5101               	movf	(number_deploy@avg_dist+1)& (0+255),w,b
  4897  002FC4  E104               	bnz	u8520
  4898  002FC6  0E1F               	movlw	31
  4899  002FC8  5D00               	subwf	number_deploy@avg_dist& (0+255),w,b
  4900  002FCA  A0D8               	btfss	status,0,c
  4901  002FCC  D004               	goto	l8102
  4902  002FCE                     u8520:
  4903                           
  4904                           ; BSR set to: 1
  4905                           ;main.c: 435:     tires_t = 2;
  4906  002FCE  0E00               	movlw	0
  4907  002FD0  6F07               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4908  002FD2  0E02               	movlw	2
  4909  002FD4  6F06               	movwf	number_deploy@tires_t& (0+255),b
  4910  002FD6                     l8102:
  4911                           
  4912                           ; BSR set to: 1
  4913                           ;main.c: 439:   if (poles_detected == 0){
  4914  002FD6  5102               	movf	number_deploy@poles_detected& (0+255),w,b
  4915  002FD8  1103               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4916  002FDA  A4D8               	btfss	status,2,c
  4917  002FDC  D004               	goto	l8106
  4918                           
  4919                           ; BSR set to: 1
  4920                           ;main.c: 440:    tires_t = 2;
  4921  002FDE  0E00               	movlw	0
  4922  002FE0  6F07               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4923  002FE2  0E02               	movlw	2
  4924  002FE4  6F06               	movwf	number_deploy@tires_t& (0+255),b
  4925  002FE6                     l8106:
  4926                           
  4927                           ; BSR set to: 1
  4928                           ;main.c: 459:         t_count = tires_t - tires_detected;
  4929  002FE6  5104               	movf	number_deploy@tires_detected& (0+255),w,b
  4930  002FE8  5D06               	subwf	number_deploy@tires_t& (0+255),w,b
  4931  002FEA  6F08               	movwf	number_deploy@t_count& (0+255),b
  4932  002FEC  5105               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4933  002FEE  5907               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4934  002FF0  6F09               	movwf	(number_deploy@t_count+1)& (0+255),b
  4935                           
  4936                           ; BSR set to: 1
  4937                           ;main.c: 460:         Pole[poles_detected].tires_deployed = t_count;
  4938  002FF2  C102  F0FB         	movff	number_deploy@poles_detected,??_number_deploy
  4939  002FF6  C103  F0FC         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4940  002FFA  0100               	movlb	0	; () banked
  4941  002FFC  90D8               	bcf	status,0,c
  4942  002FFE  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4943  003000  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4944  003002  90D8               	bcf	status,0,c
  4945  003004  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4946  003006  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4947  003008  90D8               	bcf	status,0,c
  4948  00300A  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4949  00300C  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4950  00300E  0E00               	movlw	low _Pole
  4951  003010  25FB               	addwf	??_number_deploy& (0+255),w,b
  4952  003012  6ED9               	movwf	fsr2l,c
  4953  003014  0E02               	movlw	high _Pole
  4954  003016  21FC               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4955  003018  6EDA               	movwf	fsr2h,c
  4956  00301A  C108  FFDE         	movff	number_deploy@t_count,postinc2
  4957  00301E  C109  FFDD         	movff	number_deploy@t_count+1,postdec2
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;main.c: 461:         Pole[poles_detected].tires_final = tires_t;
  4961  003022  C102  F0FB         	movff	number_deploy@poles_detected,??_number_deploy
  4962  003026  C103  F0FC         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4963  00302A  90D8               	bcf	status,0,c
  4964  00302C  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4965  00302E  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4966  003030  90D8               	bcf	status,0,c
  4967  003032  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4968  003034  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4969  003036  90D8               	bcf	status,0,c
  4970  003038  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4971  00303A  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4972  00303C  0E02               	movlw	low (_Pole+2)
  4973  00303E  25FB               	addwf	??_number_deploy& (0+255),w,b
  4974  003040  6ED9               	movwf	fsr2l,c
  4975  003042  0E02               	movlw	high (_Pole+2)
  4976  003044  21FC               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4977  003046  6EDA               	movwf	fsr2h,c
  4978  003048  C106  FFDE         	movff	number_deploy@tires_t,postinc2
  4979  00304C  C107  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;main.c: 462:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4983  003050  0E01               	movlw	1
  4984  003052  ECC6  F020         	call	_lcdInst
  4985  003056  0E11               	movlw	17
  4986  003058  0100               	movlb	0	; () banked
  4987  00305A  6FFB               	movwf	??_number_deploy& (0+255),b
  4988  00305C  0E3A               	movlw	58
  4989  00305E                     u9467:
  4990  00305E  2EE8               	decfsz	wreg,f,c
  4991  003060  D7FE               	bra	u9467
  4992  003062  2FFB               	decfsz	??_number_deploy& (0+255),f,b
  4993  003064  D7FC               	bra	u9467
  4994  003066  F000               	nop	
  4995                           
  4996                           ;main.c: 463:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4997  003068  0E41               	movlw	low STR_22
  4998  00306A  0100               	movlb	0	; () banked
  4999  00306C  6FED               	movwf	printf@fmt& (0+255),b
  5000  00306E  0EFE               	movlw	high STR_22
  5001  003070  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5002  003072  C104  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  5003  003076  C105  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  5004  00307A  C108  F0F1         	movff	number_deploy@t_count,?_printf+4
  5005  00307E  C109  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  5006  003082  EC60  F020         	call	_printf	;wreg free
  5007                           
  5008                           ;main.c: 466:         if (t_count<=2){
  5009  003086  0101               	movlb	1	; () banked
  5010  003088  BF09               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  5011  00308A  D00E               	goto	u8550
  5012  00308C  5109               	movf	(number_deploy@t_count+1)& (0+255),w,b
  5013  00308E  E104               	bnz	l8122
  5014  003090  0E03               	movlw	3
  5015  003092  5D08               	subwf	number_deploy@t_count& (0+255),w,b
  5016  003094  A0D8               	btfss	status,0,c
  5017  003096  D008               	goto	u8550
  5018  003098                     l8122:
  5019                           
  5020                           ; BSR set to: 1
  5021                           ;main.c: 428:     while (t_count<3){
  5022  003098  BF09               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  5023  00309A  D781               	goto	l8092
  5024  00309C  5109               	movf	(number_deploy@t_count+1)& (0+255),w,b
  5025  00309E  E104               	bnz	u8550
  5026  0030A0  0E03               	movlw	3
  5027  0030A2  5D08               	subwf	number_deploy@t_count& (0+255),w,b
  5028  0030A4  A0D8               	btfss	status,0,c
  5029  0030A6  D77B               	goto	l8092
  5030  0030A8                     u8550:
  5031                           
  5032                           ; BSR set to: 1
  5033                           ;main.c: 474:     return (int) t_count;
  5034  0030A8  C108  F100         	movff	number_deploy@t_count,?_number_deploy
  5035  0030AC  C109  F101         	movff	number_deploy@t_count+1,?_number_deploy+1
  5036                           
  5037                           ; BSR set to: 1
  5038  0030B0  0012               	return		;funcret
  5039  0030B2                     __end_of_number_deploy:
  5040                           	opt callstack 0
  5041                           
  5042 ;; *************** function _ee_write_byte *****************
  5043 ;; Defined at:
  5044 ;;		line 18 in file "EEPROM.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  address         1    wreg     unsigned char 
  5047 ;;  _data           2    0[BANK0 ] PTR unsigned char 
  5048 ;;		 -> main@Pole(80), 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  address         1    2[BANK0 ] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      void 
  5053 ;; Registers used:
  5054 ;;		wreg, fsr2l, fsr2h, status,2
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;Total ram usage:        3 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    3
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_main
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text7
  5075  003F40                     __ptext7:
  5076                           	opt callstack 0
  5077  003F40                     _ee_write_byte:
  5078                           	opt callstack 27
  5079                           
  5080                           ; BSR set to: 1
  5081                           ;incstack = 0
  5082                           ;ee_write_byte@address stored from wreg
  5083  003F40  0100               	movlb	0	; () banked
  5084  003F42  6F82               	movwf	ee_write_byte@address& (0+255),b
  5085                           
  5086                           ;EEPROM.c: 19:     EEDATA = *_data;
  5087  003F44  C080  FFD9         	movff	ee_write_byte@_data,fsr2l
  5088  003F48  C081  FFDA         	movff	ee_write_byte@_data+1,fsr2h
  5089  003F4C  50DF               	movf	indf2,w,c
  5090  003F4E  6EA8               	movwf	4008,c	;volatile
  5091                           
  5092                           ;EEPROM.c: 20:     EEADR = address;
  5093  003F50  C082  FFA9         	movff	ee_write_byte@address,4009	;volatile
  5094                           
  5095                           ;EEPROM.c: 22:     EECON1bits.EEPGD = 0;
  5096  003F54  9EA6               	bcf	4006,7,c	;volsfr
  5097                           
  5098                           ;EEPROM.c: 23:     EECON1bits.CFGS = 0;
  5099  003F56  9CA6               	bcf	4006,6,c	;volsfr
  5100                           
  5101                           ;EEPROM.c: 24:     EECON1bits.WREN = 1;
  5102  003F58  84A6               	bsf	4006,2,c	;volsfr
  5103                           
  5104                           ;EEPROM.c: 25:     INTCONbits.GIE = 0;
  5105  003F5A  9EF2               	bcf	4082,7,c	;volatile
  5106                           
  5107                           ;EEPROM.c: 26:     EECON2 = 0x55;
  5108  003F5C  0E55               	movlw	85
  5109  003F5E  6EA7               	movwf	4007,c	;volsfr
  5110                           
  5111                           ;EEPROM.c: 27:     EECON2 = 0x0AA;
  5112  003F60  0EAA               	movlw	170
  5113  003F62  6EA7               	movwf	4007,c	;volsfr
  5114                           
  5115                           ;EEPROM.c: 28:     EECON1bits.WR = 1;
  5116  003F64  82A6               	bsf	4006,1,c	;volsfr
  5117  003F66                     l608:
  5118  003F66  0004               	clrwdt		;# 
  5119                           
  5120                           ;EEPROM.c: 41:       } while(EECON1bits.WR);
  5121  003F68  B2A6               	btfsc	4006,1,c	;volsfr
  5122  003F6A  D7FD               	goto	l608
  5123                           
  5124                           ;EEPROM.c: 42:     EECON1bits.WREN = 0;
  5125  003F6C  94A6               	bcf	4006,2,c	;volsfr
  5126                           
  5127                           ;EEPROM.c: 43:     INTCONbits.GIE = 1;
  5128  003F6E  8EF2               	bsf	4082,7,c	;volatile
  5129  003F70  0012               	return		;funcret
  5130  003F72                     __end_of_ee_write_byte:
  5131                           	opt callstack 0
  5132                           
  5133 ;; *************** function _brake *****************
  5134 ;; Defined at:
  5135 ;;		line 674 in file "main.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;Total ram usage:        2 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:   14
  5156 ;; This function calls:
  5157 ;;		_I2C_Master_Read
  5158 ;;		_I2C_Master_Start
  5159 ;;		_I2C_Master_Stop
  5160 ;;		_I2C_Master_Write
  5161 ;;		_lcdInst
  5162 ;;		_printf
  5163 ;; This function is called by:
  5164 ;;		_main
  5165 ;;		_sense_tires
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text8
  5170  003838                     __ptext8:
  5171                           	opt callstack 0
  5172  003838                     _brake:
  5173                           	opt callstack 16
  5174                           
  5175                           ;main.c: 675:     I2C_Master_Start();
  5176                           
  5177                           ;incstack = 0
  5178  003838  ECD7  F020         	call	_I2C_Master_Start	;wreg free
  5179                           
  5180                           ;main.c: 676:     I2C_Master_Write(0b00010000);
  5181  00383C  0E00               	movlw	0
  5182  00383E  0100               	movlb	0	; () banked
  5183  003840  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5184  003842  0E10               	movlw	16
  5185  003844  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5186  003846  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  5187                           
  5188                           ;main.c: 677:     I2C_Master_Write('9');
  5189  00384A  0E00               	movlw	0
  5190  00384C  0100               	movlb	0	; () banked
  5191  00384E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5192  003850  0E39               	movlw	57
  5193  003852  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5194  003854  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  5195                           
  5196                           ;main.c: 678:     I2C_Master_Stop();
  5197  003858  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  5198                           
  5199                           ;main.c: 679:     I2C_Master_Start();
  5200  00385C  ECD7  F020         	call	_I2C_Master_Start	;wreg free
  5201                           
  5202                           ;main.c: 680:     I2C_Master_Write(0b00010001);
  5203  003860  0E00               	movlw	0
  5204  003862  0100               	movlb	0	; () banked
  5205  003864  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5206  003866  0E11               	movlw	17
  5207  003868  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5208  00386A  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  5209                           
  5210                           ;main.c: 681:     avg_dist = I2C_Master_Read(1);
  5211  00386E  0E01               	movlw	1
  5212  003870  EC4B  F020         	call	_I2C_Master_Read
  5213  003874  0100               	movlb	0	; () banked
  5214  003876  6FFB               	movwf	??_brake& (0+255),b
  5215  003878  51FB               	movf	??_brake& (0+255),w,b
  5216  00387A  6E44               	movwf	_avg_dist,c	;volatile
  5217  00387C  6A45               	clrf	_avg_dist+1,c	;volatile
  5218  00387E  6A46               	clrf	_avg_dist+2,c	;volatile
  5219  003880  6A47               	clrf	_avg_dist+3,c	;volatile
  5220                           
  5221                           ;main.c: 682:     I2C_Master_Stop();
  5222  003882  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  5223                           
  5224                           ;main.c: 683:     if(avg_dist){
  5225  003886  5044               	movf	_avg_dist,w,c	;volatile
  5226  003888  1045               	iorwf	_avg_dist+1,w,c	;volatile
  5227  00388A  1046               	iorwf	_avg_dist+2,w,c	;volatile
  5228  00388C  1047               	iorwf	_avg_dist+3,w,c	;volatile
  5229  00388E  B4D8               	btfsc	status,2,c
  5230  003890  0012               	return	
  5231                           
  5232                           ;main.c: 686:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  5233  003892  0E01               	movlw	1
  5234  003894  ECC6  F020         	call	_lcdInst
  5235  003898  0E11               	movlw	17
  5236  00389A  0100               	movlb	0	; () banked
  5237  00389C  6FFB               	movwf	??_brake& (0+255),b
  5238  00389E  0E3A               	movlw	58
  5239  0038A0                     u9477:
  5240  0038A0  2EE8               	decfsz	wreg,f,c
  5241  0038A2  D7FE               	bra	u9477
  5242  0038A4  2FFB               	decfsz	??_brake& (0+255),f,b
  5243  0038A6  D7FC               	bra	u9477
  5244  0038A8  F000               	nop	
  5245                           
  5246                           ;main.c: 694:         printf("%d",avg_dist);
  5247  0038AA  0E2E               	movlw	low (STR_60+13)
  5248  0038AC  0100               	movlb	0	; () banked
  5249  0038AE  6FED               	movwf	printf@fmt& (0+255),b
  5250  0038B0  0EFE               	movlw	high (STR_60+13)
  5251  0038B2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5252  0038B4  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  5253  0038B8  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  5254  0038BC  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  5255  0038C0  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  5256  0038C4  EC60  F020         	call	_printf	;wreg free
  5257                           
  5258                           ;main.c: 699:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  5259  0038C8  0E0D               	movlw	13
  5260  0038CA  0100               	movlb	0	; () banked
  5261  0038CC  6FFC               	movwf	(??_brake+1)& (0+255),b
  5262  0038CE  0EAF               	movlw	175
  5263  0038D0  6FFB               	movwf	??_brake& (0+255),b
  5264  0038D2  0EB6               	movlw	182
  5265  0038D4                     u9487:
  5266  0038D4  2EE8               	decfsz	wreg,f,c
  5267  0038D6  D7FE               	bra	u9487
  5268  0038D8  2FFB               	decfsz	??_brake& (0+255),f,b
  5269  0038DA  D7FC               	bra	u9487
  5270  0038DC  2FFC               	decfsz	(??_brake+1)& (0+255),f,b
  5271  0038DE  D7FA               	bra	u9487
  5272  0038E0  F000               	nop	
  5273                           
  5274                           ;main.c: 701:     send = 1;
  5275  0038E2  0E01               	movlw	1
  5276  0038E4  6E6D               	movwf	_send,c
  5277  0038E6  0012               	return		;funcret
  5278  0038E8                     __end_of_brake:
  5279                           	opt callstack 0
  5280                           
  5281 ;; *************** function _backwards *****************
  5282 ;; Defined at:
  5283 ;;		line 716 in file "main.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;Total ram usage:        0 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    5
  5304 ;; This function calls:
  5305 ;;		_I2C_Master_Start
  5306 ;;		_I2C_Master_Stop
  5307 ;;		_I2C_Master_Write
  5308 ;; This function is called by:
  5309 ;;		_main
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text9
  5314  004110                     __ptext9:
  5315                           	opt callstack 0
  5316  004110                     _backwards:
  5317                           	opt callstack 25
  5318                           
  5319                           ;main.c: 717:     I2C_Master_Start();
  5320                           
  5321                           ;incstack = 0
  5322  004110  ECD7  F020         	call	_I2C_Master_Start	;wreg free
  5323                           
  5324                           ;main.c: 718:     I2C_Master_Write(0b00010000);
  5325  004114  0E00               	movlw	0
  5326  004116  0100               	movlb	0	; () banked
  5327  004118  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5328  00411A  0E10               	movlw	16
  5329  00411C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5330  00411E  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  5331                           
  5332                           ;main.c: 719:     I2C_Master_Write('5');
  5333  004122  0E00               	movlw	0
  5334  004124  0100               	movlb	0	; () banked
  5335  004126  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5336  004128  0E35               	movlw	53
  5337  00412A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5338  00412C  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  5339                           
  5340                           ;main.c: 720:     I2C_Master_Stop();
  5341  004130  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  5342  004134  0012               	return		;funcret
  5343  004136                     __end_of_backwards:
  5344                           	opt callstack 0
  5345                           
  5346 ;; *************** function _actuators_main *****************
  5347 ;; Defined at:
  5348 ;;		line 3 in file "actuators_main.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  stack           2   18[BANK1 ] int 
  5351 ;;  steps2_adj      2   20[BANK1 ] int 
  5352 ;;  t_dep           2   22[BANK1 ] int 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  act_cnt         2   26[BANK1 ] int 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5364 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;Total ram usage:       10 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:   16
  5371 ;; This function calls:
  5372 ;;		_initLCD
  5373 ;;		_lcdInst
  5374 ;;		_printf
  5375 ;;		_servo
  5376 ;;		_stepper
  5377 ;;		_stepper2
  5378 ;;		_stepper2_back
  5379 ;;		_system_init
  5380 ;; This function is called by:
  5381 ;;		_main
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text10
  5386  002922                     __ptext10:
  5387                           	opt callstack 0
  5388  002922                     _actuators_main:
  5389                           	opt callstack 14
  5390                           
  5391                           ;actuators_main.c: 4:     int act_cnt = 0;
  5392                           
  5393                           ;incstack = 0
  5394  002922  0E00               	movlw	0
  5395  002924  0101               	movlb	1	; () banked
  5396  002926  6F1B               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  5397  002928  0E00               	movlw	0
  5398  00292A  6F1A               	movwf	actuators_main@act_cnt& (0+255),b
  5399                           
  5400                           ; BSR set to: 1
  5401                           ;actuators_main.c: 5:     system_init();
  5402  00292C  ECB9  F01F         	call	_system_init	;wreg free
  5403                           
  5404                           ;actuators_main.c: 6:     initLCD();
  5405  002930  EC96  F01D         	call	_initLCD	;wreg free
  5406                           
  5407                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  5408  002934  0E01               	movlw	1
  5409  002936  ECC6  F020         	call	_lcdInst
  5410  00293A  0E11               	movlw	17
  5411  00293C  0101               	movlb	1	; () banked
  5412  00293E  6F18               	movwf	??_actuators_main& (0+255),b
  5413  002940  0E3A               	movlw	58
  5414  002942                     u9497:
  5415  002942  2EE8               	decfsz	wreg,f,c
  5416  002944  D7FE               	bra	u9497
  5417  002946  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5418  002948  D7FC               	bra	u9497
  5419  00294A  F000               	nop	
  5420                           
  5421                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  5422  00294C  0ED3               	movlw	low STR_1
  5423  00294E  0100               	movlb	0	; () banked
  5424  002950  6FED               	movwf	printf@fmt& (0+255),b
  5425  002952  0EFF               	movlw	high STR_1
  5426  002954  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5427  002956  0E00               	movlw	0
  5428  002958  6FF0               	movwf	(?_printf+3)& (0+255),b
  5429  00295A  0E00               	movlw	0
  5430  00295C  6FEF               	movwf	(?_printf+2)& (0+255),b
  5431  00295E  EC60  F020         	call	_printf	;wreg free
  5432                           
  5433                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  5434  002962  0E03               	movlw	3
  5435  002964  0101               	movlb	1	; () banked
  5436  002966  6F19               	movwf	(??_actuators_main+1)& (0+255),b
  5437  002968  0E8A               	movlw	138
  5438  00296A  6F18               	movwf	??_actuators_main& (0+255),b
  5439  00296C  0E55               	movlw	85
  5440  00296E                     u9507:
  5441  00296E  2EE8               	decfsz	wreg,f,c
  5442  002970  D7FE               	bra	u9507
  5443  002972  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5444  002974  D7FC               	bra	u9507
  5445  002976  2F19               	decfsz	(??_actuators_main+1)& (0+255),f,b
  5446  002978  D7FA               	bra	u9507
  5447  00297A  D000               	nop2	
  5448  00297C                     l7910:
  5449                           
  5450                           ;actuators_main.c: 11:     if (act_cnt==0){
  5451  00297C  0101               	movlb	1	; () banked
  5452  00297E  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  5453  002980  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5454  002982  A4D8               	btfss	status,2,c
  5455  002984  D071               	goto	l7990
  5456                           
  5457                           ; BSR set to: 1
  5458                           ;actuators_main.c: 15:         stepper(stack, t_dep);
  5459  002986  C112  F100         	movff	actuators_main@stack,stepper@stack
  5460  00298A  C113  F101         	movff	actuators_main@stack+1,stepper@stack+1
  5461  00298E  C116  F102         	movff	actuators_main@t_dep,stepper@t_dep
  5462  002992  C117  F103         	movff	actuators_main@t_dep+1,stepper@t_dep+1
  5463  002996  EC39  F015         	call	_stepper	;wreg free
  5464                           
  5465                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  5466  00299A  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5467  00299E  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5468  0029A2  0E00               	movlw	0
  5469  0029A4  ECF5  F019         	call	_stepper2
  5470                           
  5471                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  5472  0029A8  C114  F100         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  5473  0029AC  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  5474  0029B0  0E01               	movlw	1
  5475  0029B2  EC74  F01C         	call	_stepper2_back
  5476                           
  5477                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  5478  0029B6  0E00               	movlw	0
  5479  0029B8  6E89               	movwf	3977,c	;volatile
  5480                           
  5481                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  5482  0029BA  908B               	bcf	3979,0,c	;volatile
  5483                           
  5484                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  5485  0029BC  908D               	bcf	3981,0,c	;volatile
  5486                           
  5487                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  5488  0029BE  928D               	bcf	3981,1,c	;volatile
  5489                           
  5490                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  5491  0029C0  948D               	bcf	3981,2,c	;volatile
  5492                           
  5493                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  5494  0029C2  9A8B               	bcf	3979,5,c	;volatile
  5495                           
  5496                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  5497  0029C4  9C8B               	bcf	3979,6,c	;volatile
  5498                           
  5499                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  5500  0029C6  9E8B               	bcf	3979,7,c	;volatile
  5501                           
  5502                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  5503  0029C8  9A89               	bcf	3977,5,c	;volatile
  5504                           
  5505                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5506  0029CA  0E01               	movlw	1
  5507  0029CC  ECC6  F020         	call	_lcdInst
  5508  0029D0  0E11               	movlw	17
  5509  0029D2  0101               	movlb	1	; () banked
  5510  0029D4  6F18               	movwf	??_actuators_main& (0+255),b
  5511  0029D6  0E3A               	movlw	58
  5512  0029D8                     u9517:
  5513  0029D8  2EE8               	decfsz	wreg,f,c
  5514  0029DA  D7FE               	bra	u9517
  5515  0029DC  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5516  0029DE  D7FC               	bra	u9517
  5517  0029E0  F000               	nop	
  5518                           
  5519                           ;actuators_main.c: 31:         printf("Stepper done");
  5520  0029E2  0E0E               	movlw	low STR_2
  5521  0029E4  0100               	movlb	0	; () banked
  5522  0029E6  6FED               	movwf	printf@fmt& (0+255),b
  5523  0029E8  0EFF               	movlw	high STR_2
  5524  0029EA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5525  0029EC  EC60  F020         	call	_printf	;wreg free
  5526                           
  5527                           ;actuators_main.c: 33:         servo();
  5528  0029F0  EC62  F01B         	call	_servo	;wreg free
  5529                           
  5530                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5531  0029F4  0E01               	movlw	1
  5532  0029F6  ECC6  F020         	call	_lcdInst
  5533  0029FA  0E11               	movlw	17
  5534  0029FC  0101               	movlb	1	; () banked
  5535  0029FE  6F18               	movwf	??_actuators_main& (0+255),b
  5536  002A00  0E3A               	movlw	58
  5537  002A02                     u9527:
  5538  002A02  2EE8               	decfsz	wreg,f,c
  5539  002A04  D7FE               	bra	u9527
  5540  002A06  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5541  002A08  D7FC               	bra	u9527
  5542  002A0A  F000               	nop	
  5543                           
  5544                           ;actuators_main.c: 35:         printf("Servo done");
  5545  002A0C  0E78               	movlw	low STR_3
  5546  002A0E  0100               	movlb	0	; () banked
  5547  002A10  6FED               	movwf	printf@fmt& (0+255),b
  5548  002A12  0EFF               	movlw	high STR_3
  5549  002A14  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5550  002A16  EC60  F020         	call	_printf	;wreg free
  5551                           
  5552                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  5553  002A1A  0E00               	movlw	0
  5554  002A1C  6E89               	movwf	3977,c	;volatile
  5555                           
  5556                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  5557  002A1E  908B               	bcf	3979,0,c	;volatile
  5558                           
  5559                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  5560  002A20  908D               	bcf	3981,0,c	;volatile
  5561                           
  5562                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  5563  002A22  928D               	bcf	3981,1,c	;volatile
  5564                           
  5565                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  5566  002A24  948D               	bcf	3981,2,c	;volatile
  5567                           
  5568                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  5569  002A26  9A8B               	bcf	3979,5,c	;volatile
  5570                           
  5571                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  5572  002A28  9C8B               	bcf	3979,6,c	;volatile
  5573                           
  5574                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  5575  002A2A  9E8B               	bcf	3979,7,c	;volatile
  5576                           
  5577                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  5578  002A2C  9A89               	bcf	3977,5,c	;volatile
  5579                           
  5580                           ;actuators_main.c: 48:         if (t_dep%2!=0){
  5581  002A2E  0101               	movlb	1	; () banked
  5582  002A30  A116               	btfss	actuators_main@t_dep& (0+255),0,b
  5583  002A32  D006               	goto	l7968
  5584                           
  5585                           ; BSR set to: 1
  5586                           ;actuators_main.c: 49:             steps2_adj = steps2_adj+1;
  5587  002A34  0E01               	movlw	1
  5588  002A36  2514               	addwf	actuators_main@steps2_adj& (0+255),w,b
  5589  002A38  6F14               	movwf	actuators_main@steps2_adj& (0+255),b
  5590  002A3A  0E00               	movlw	0
  5591  002A3C  2115               	addwfc	(actuators_main@steps2_adj+1)& (0+255),w,b
  5592  002A3E  6F15               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  5593  002A40                     l7968:
  5594                           
  5595                           ; BSR set to: 1
  5596                           ;actuators_main.c: 51:         stepper2(1, steps2_adj);
  5597  002A40  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5598  002A44  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5599  002A48  0E01               	movlw	1
  5600  002A4A  ECF5  F019         	call	_stepper2
  5601                           
  5602                           ;actuators_main.c: 52:                         LATA = 0b00000000;
  5603  002A4E  0E00               	movlw	0
  5604  002A50  6E89               	movwf	3977,c	;volatile
  5605                           
  5606                           ;actuators_main.c: 53:         LATCbits.LATC0 = 0;
  5607  002A52  908B               	bcf	3979,0,c	;volatile
  5608                           
  5609                           ;actuators_main.c: 54:         LATEbits.LATE0 = 0;
  5610  002A54  908D               	bcf	3981,0,c	;volatile
  5611                           
  5612                           ;actuators_main.c: 55:         LATEbits.LATE1 = 0;
  5613  002A56  928D               	bcf	3981,1,c	;volatile
  5614                           
  5615                           ;actuators_main.c: 56:         LATEbits.LATE2 = 0;
  5616  002A58  948D               	bcf	3981,2,c	;volatile
  5617                           
  5618                           ;actuators_main.c: 57:         LATCbits.LATC5 = 0;
  5619  002A5A  9A8B               	bcf	3979,5,c	;volatile
  5620                           
  5621                           ;actuators_main.c: 58:         LATCbits.LATC6 = 0;
  5622  002A5C  9C8B               	bcf	3979,6,c	;volatile
  5623                           
  5624                           ;actuators_main.c: 59:         LATCbits.LATC7 = 0;
  5625  002A5E  9E8B               	bcf	3979,7,c	;volatile
  5626                           
  5627                           ;actuators_main.c: 60:         LATAbits.LATA5 = 0;
  5628  002A60  9A89               	bcf	3977,5,c	;volatile
  5629                           
  5630                           ;actuators_main.c: 61:         act_cnt++;
  5631  002A62  0101               	movlb	1	; () banked
  5632  002A64  4B1A               	infsnz	actuators_main@act_cnt& (0+255),f,b
  5633  002A66  2B1B               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  5634  002A68                     l7990:
  5635                           
  5636                           ; BSR set to: 1
  5637                           ;actuators_main.c: 64:     if(act_cnt){
  5638  002A68  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  5639  002A6A  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5640  002A6C  A4D8               	btfss	status,2,c
  5641  002A6E  0012               	return	
  5642  002A70  D785               	goto	l7910
  5643  002A72                     __end_of_actuators_main:
  5644                           	opt callstack 0
  5645                           
  5646 ;; *************** function _system_init *****************
  5647 ;; Defined at:
  5648 ;;		line 74 in file "actuators_main.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;Total ram usage:        0 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    3
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_actuators_main
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text11
  5677  003F72                     __ptext11:
  5678                           	opt callstack 0
  5679  003F72                     _system_init:
  5680                           	opt callstack 26
  5681                           
  5682                           ;actuators_main.c: 75:     TRISB = 0x00;
  5683                           
  5684                           ; BSR set to: 1
  5685                           ;incstack = 0
  5686  003F72  0E00               	movlw	0
  5687  003F74  6E93               	movwf	3987,c	;volatile
  5688                           
  5689                           ;actuators_main.c: 77:     LATB = 0x0F;
  5690  003F76  0E0F               	movlw	15
  5691  003F78  6E8A               	movwf	3978,c	;volatile
  5692                           
  5693                           ;actuators_main.c: 78:     TRISA = 0x00;
  5694  003F7A  0E00               	movlw	0
  5695  003F7C  6E92               	movwf	3986,c	;volatile
  5696                           
  5697                           ;actuators_main.c: 79:     LATA = 0x0F;
  5698  003F7E  0E0F               	movlw	15
  5699  003F80  6E89               	movwf	3977,c	;volatile
  5700                           
  5701                           ;actuators_main.c: 81:     TRISCbits.TRISC1 = 0;
  5702  003F82  9294               	bcf	3988,1,c	;volatile
  5703                           
  5704                           ;actuators_main.c: 84:     TRISCbits.TRISC2 = 0;
  5705  003F84  9494               	bcf	3988,2,c	;volatile
  5706                           
  5707                           ;actuators_main.c: 87:     LATD = 0x00;
  5708  003F86  0E00               	movlw	0
  5709  003F88  6E8C               	movwf	3980,c	;volatile
  5710                           
  5711                           ;actuators_main.c: 88:     TRISD = 0x00;
  5712  003F8A  0E00               	movlw	0
  5713  003F8C  6E95               	movwf	3989,c	;volatile
  5714                           
  5715                           ;actuators_main.c: 90:     ADCON1 = 0b00001111;
  5716  003F8E  0E0F               	movlw	15
  5717  003F90  6EC1               	movwf	4033,c	;volatile
  5718                           
  5719                           ;actuators_main.c: 92:     TRISC = 0x00;
  5720  003F92  0E00               	movlw	0
  5721  003F94  6E94               	movwf	3988,c	;volatile
  5722                           
  5723                           ;actuators_main.c: 93:     LATC = 0x00;
  5724  003F96  0E00               	movlw	0
  5725  003F98  6E8B               	movwf	3979,c	;volatile
  5726                           
  5727                           ;actuators_main.c: 94:     TRISE = 0x00;
  5728  003F9A  0E00               	movlw	0
  5729  003F9C  6E96               	movwf	3990,c	;volatile
  5730                           
  5731                           ;actuators_main.c: 95:     LATE = 0x00;
  5732  003F9E  0E00               	movlw	0
  5733  003FA0  6E8D               	movwf	3981,c	;volatile
  5734  003FA2  0012               	return		;funcret
  5735  003FA4                     __end_of_system_init:
  5736                           	opt callstack 0
  5737                           
  5738 ;; *************** function _stepper2_back *****************
  5739 ;; Defined at:
  5740 ;;		line 577 in file "actuators_main.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  direction       1    wreg     unsigned char 
  5743 ;;  steps2_adj      2    0[BANK1 ] int 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  direction       1    3[BANK1 ] unsigned char 
  5746 ;;  i               2    6[BANK1 ] int 
  5747 ;;  count_steppe    2    4[BANK1 ] int 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5757 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;Total ram usage:        8 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:   15
  5764 ;; This function calls:
  5765 ;;		_full_drive
  5766 ;;		_lcdInst
  5767 ;;		_printf
  5768 ;; This function is called by:
  5769 ;;		_actuators_main
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text12
  5774  0038E8                     __ptext12:
  5775                           	opt callstack 0
  5776  0038E8                     _stepper2_back:
  5777                           	opt callstack 14
  5778                           
  5779                           ;incstack = 0
  5780                           ;stepper2_back@direction stored from wreg
  5781  0038E8  0101               	movlb	1	; () banked
  5782  0038EA  6F03               	movwf	stepper2_back@direction& (0+255),b
  5783                           
  5784                           ;actuators_main.c: 595:     int count_stepper = 0;
  5785  0038EC  0E00               	movlw	0
  5786  0038EE  0101               	movlb	1	; () banked
  5787  0038F0  6F05               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5788  0038F2  0E00               	movlw	0
  5789  0038F4  6F04               	movwf	stepper2_back@count_stepper& (0+255),b
  5790                           
  5791                           ; BSR set to: 1
  5792                           ;actuators_main.c: 598:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5793                           
  5794                           ; BSR set to: 1
  5795                           ;actuators_main.c: 597:         if (count_stepper<1){
  5796  0038F6  0E01               	movlw	1
  5797  0038F8  ECC6  F020         	call	_lcdInst
  5798  0038FC  0E11               	movlw	17
  5799  0038FE  0101               	movlb	1	; () banked
  5800  003900  6F02               	movwf	??_stepper2_back& (0+255),b
  5801  003902  0E3A               	movlw	58
  5802  003904                     u9537:
  5803  003904  2EE8               	decfsz	wreg,f,c
  5804  003906  D7FE               	bra	u9537
  5805  003908  2F02               	decfsz	??_stepper2_back& (0+255),f,b
  5806  00390A  D7FC               	bra	u9537
  5807  00390C  F000               	nop	
  5808                           
  5809                           ;actuators_main.c: 599:             printf("step1");
  5810  00390E  0EEE               	movlw	low STR_6
  5811  003910  0100               	movlb	0	; () banked
  5812  003912  6FED               	movwf	printf@fmt& (0+255),b
  5813  003914  0EFF               	movlw	high STR_6
  5814  003916  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5815  003918  EC60  F020         	call	_printf	;wreg free
  5816  00391C  0EC0               	movlw	192
  5817  00391E  ECC6  F020         	call	_lcdInst
  5818                           
  5819                           ;actuators_main.c: 601:             printf("Step speed %d",4);
  5820  003922  0EE6               	movlw	low STR_7
  5821  003924  0100               	movlb	0	; () banked
  5822  003926  6FED               	movwf	printf@fmt& (0+255),b
  5823  003928  0EFE               	movlw	high STR_7
  5824  00392A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5825  00392C  0E00               	movlw	0
  5826  00392E  6FF0               	movwf	(?_printf+3)& (0+255),b
  5827  003930  0E04               	movlw	4
  5828  003932  6FEF               	movwf	(?_printf+2)& (0+255),b
  5829  003934  EC60  F020         	call	_printf	;wreg free
  5830                           
  5831                           ;actuators_main.c: 602:             for(int i=0;i<5;i++){
  5832  003938  0E00               	movlw	0
  5833  00393A  0101               	movlb	1	; () banked
  5834  00393C  6F07               	movwf	(stepper2_back@i+1)& (0+255),b
  5835  00393E  0E00               	movlw	0
  5836  003940  6F06               	movwf	stepper2_back@i& (0+255),b
  5837  003942                     l7700:
  5838                           
  5839                           ; BSR set to: 1
  5840                           ;actuators_main.c: 604:                 full_drive(direction, 2);
  5841  003942  0E00               	movlw	0
  5842  003944  0100               	movlb	0	; () banked
  5843  003946  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5844  003948  0E02               	movlw	2
  5845  00394A  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5846  00394C  0101               	movlb	1	; () banked
  5847  00394E  5103               	movf	stepper2_back@direction& (0+255),w,b
  5848  003950  EC95  F00D         	call	_full_drive
  5849                           
  5850                           ;actuators_main.c: 606:             }
  5851  003954  0101               	movlb	1	; () banked
  5852  003956  4B06               	infsnz	stepper2_back@i& (0+255),f,b
  5853  003958  2B07               	incf	(stepper2_back@i+1)& (0+255),f,b
  5854                           
  5855                           ; BSR set to: 1
  5856  00395A  BF07               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5857  00395C  D7F2               	goto	l7700
  5858  00395E  5107               	movf	(stepper2_back@i+1)& (0+255),w,b
  5859  003960  E104               	bnz	u8060
  5860  003962  0E05               	movlw	5
  5861  003964  5D06               	subwf	stepper2_back@i& (0+255),w,b
  5862  003966  A0D8               	btfss	status,0,c
  5863  003968  D7EC               	goto	l7700
  5864  00396A                     u8060:
  5865                           
  5866                           ; BSR set to: 1
  5867                           ;actuators_main.c: 607:             printf("cnt is %d", count_stepper);
  5868  00396A  0ED3               	movlw	low STR_1
  5869  00396C  0100               	movlb	0	; () banked
  5870  00396E  6FED               	movwf	printf@fmt& (0+255),b
  5871  003970  0EFF               	movlw	high STR_1
  5872  003972  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5873  003974  C104  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5874  003978  C105  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5875  00397C  EC60  F020         	call	_printf	;wreg free
  5876                           
  5877                           ;actuators_main.c: 608:             count_stepper++;
  5878  003980  0101               	movlb	1	; () banked
  5879  003982  4B04               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5880  003984  2B05               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5881                           
  5882                           ; BSR set to: 1
  5883  003986  0012               	return		;funcret
  5884  003988                     __end_of_stepper2_back:
  5885                           	opt callstack 0
  5886                           
  5887 ;; *************** function _stepper2 *****************
  5888 ;; Defined at:
  5889 ;;		line 492 in file "actuators_main.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  direction       1    wreg     unsigned char 
  5892 ;;  steps2_adj      2    0[BANK1 ] int 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  direction       1   13[BANK1 ] unsigned char 
  5895 ;;  i               2    9[BANK1 ] int 
  5896 ;;  i               2    7[BANK1 ] int 
  5897 ;;  count_steppe    2   11[BANK1 ] int 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      void 
  5900 ;; Registers used:
  5901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5907 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5909 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;Total ram usage:       14 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:   15
  5914 ;; This function calls:
  5915 ;;		_full_drive
  5916 ;;		_lcdInst
  5917 ;;		_printf
  5918 ;; This function is called by:
  5919 ;;		_actuators_main
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text13
  5924  0033EA                     __ptext13:
  5925                           	opt callstack 0
  5926  0033EA                     _stepper2:
  5927                           	opt callstack 14
  5928                           
  5929                           ; BSR set to: 1
  5930                           ;incstack = 0
  5931                           ;stepper2@direction stored from wreg
  5932  0033EA  0101               	movlb	1	; () banked
  5933  0033EC  6F0D               	movwf	stepper2@direction& (0+255),b
  5934                           
  5935                           ;actuators_main.c: 510:     int count_stepper = 0;
  5936  0033EE  0E00               	movlw	0
  5937  0033F0  0101               	movlb	1	; () banked
  5938  0033F2  6F0C               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5939  0033F4  0E00               	movlw	0
  5940  0033F6  6F0B               	movwf	stepper2@count_stepper& (0+255),b
  5941                           
  5942                           ; BSR set to: 1
  5943                           ;actuators_main.c: 513:     if (direction == 0){
  5944                           
  5945                           ; BSR set to: 1
  5946                           ;actuators_main.c: 512:         if (count_stepper<1){
  5947  0033F8  510D               	movf	stepper2@direction& (0+255),w,b
  5948  0033FA  A4D8               	btfss	status,2,c
  5949  0033FC  D029               	goto	l7662
  5950                           
  5951                           ; BSR set to: 1
  5952                           ;actuators_main.c: 518:             for(int i=0;i<steps2_adj;i++){
  5953  0033FE  0E00               	movlw	0
  5954  003400  6F08               	movwf	(stepper2@i+1)& (0+255),b
  5955  003402  0E00               	movlw	0
  5956  003404  6F07               	movwf	stepper2@i& (0+255),b
  5957  003406  D00C               	goto	l7656
  5958  003408                     l7652:
  5959                           
  5960                           ; BSR set to: 1
  5961                           ;actuators_main.c: 520:                 full_drive(direction, 2);
  5962  003408  0E00               	movlw	0
  5963  00340A  0100               	movlb	0	; () banked
  5964  00340C  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5965  00340E  0E02               	movlw	2
  5966  003410  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5967  003412  0101               	movlb	1	; () banked
  5968  003414  510D               	movf	stepper2@direction& (0+255),w,b
  5969  003416  EC95  F00D         	call	_full_drive
  5970                           
  5971                           ;actuators_main.c: 522:             }
  5972  00341A  0101               	movlb	1	; () banked
  5973  00341C  4B07               	infsnz	stepper2@i& (0+255),f,b
  5974  00341E  2B08               	incf	(stepper2@i+1)& (0+255),f,b
  5975  003420                     l7656:
  5976                           
  5977                           ; BSR set to: 1
  5978  003420  5100               	movf	stepper2@steps2_adj& (0+255),w,b
  5979  003422  5D07               	subwf	stepper2@i& (0+255),w,b
  5980  003424  5108               	movf	(stepper2@i+1)& (0+255),w,b
  5981  003426  0A80               	xorlw	128
  5982  003428  6F02               	movwf	??_stepper2& (0+255),b
  5983  00342A  5101               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5984  00342C  0A80               	xorlw	128
  5985  00342E  5902               	subwfb	??_stepper2& (0+255),w,b
  5986  003430  A0D8               	btfss	status,0,c
  5987  003432  D7EA               	goto	l7652
  5988                           
  5989                           ; BSR set to: 1
  5990                           ;actuators_main.c: 523:             printf("cnt is %d", count_stepper);
  5991  003434  0ED3               	movlw	low STR_1
  5992  003436  0100               	movlb	0	; () banked
  5993  003438  6FED               	movwf	printf@fmt& (0+255),b
  5994  00343A  0EFF               	movlw	high STR_1
  5995  00343C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5996  00343E  C10B  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5997  003442  C10C  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5998  003446  EC60  F020         	call	_printf	;wreg free
  5999                           
  6000                           ;actuators_main.c: 524:             count_stepper++;
  6001  00344A  0101               	movlb	1	; () banked
  6002  00344C  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  6003  00344E  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  6004  003450                     l7662:
  6005                           
  6006                           ; BSR set to: 1
  6007                           ;actuators_main.c: 526:     if (direction == 1){
  6008  003450  050D               	decf	stepper2@direction& (0+255),w,b
  6009  003452  A4D8               	btfss	status,2,c
  6010  003454  0012               	return	
  6011                           
  6012                           ; BSR set to: 1
  6013                           ;actuators_main.c: 527:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  6014  003456  0E01               	movlw	1
  6015  003458  ECC6  F020         	call	_lcdInst
  6016  00345C  0E11               	movlw	17
  6017  00345E  0101               	movlb	1	; () banked
  6018  003460  6F02               	movwf	??_stepper2& (0+255),b
  6019  003462  0E3A               	movlw	58
  6020  003464                     u9547:
  6021  003464  2EE8               	decfsz	wreg,f,c
  6022  003466  D7FE               	bra	u9547
  6023  003468  2F02               	decfsz	??_stepper2& (0+255),f,b
  6024  00346A  D7FC               	bra	u9547
  6025  00346C  F000               	nop	
  6026                           
  6027                           ;actuators_main.c: 528:                         printf("steppp %d", steps2_adj-(5));
  6028  00346E  0EC9               	movlw	low STR_5
  6029  003470  0100               	movlb	0	; () banked
  6030  003472  6FED               	movwf	printf@fmt& (0+255),b
  6031  003474  0EFF               	movlw	high STR_5
  6032  003476  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6033  003478  0EFB               	movlw	251
  6034  00347A  0101               	movlb	1	; () banked
  6035  00347C  2500               	addwf	stepper2@steps2_adj& (0+255),w,b
  6036  00347E  0100               	movlb	0	; () banked
  6037  003480  6FEF               	movwf	(?_printf+2)& (0+255),b
  6038  003482  0EFF               	movlw	255
  6039  003484  0101               	movlb	1	; () banked
  6040  003486  2101               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  6041  003488  0100               	movlb	0	; () banked
  6042  00348A  6FF0               	movwf	(?_printf+3)& (0+255),b
  6043  00348C  EC60  F020         	call	_printf	;wreg free
  6044                           
  6045                           ;actuators_main.c: 530:                 for(int i=0;i<(steps2_adj-(5));i++){
  6046  003490  0E00               	movlw	0
  6047  003492  0101               	movlb	1	; () banked
  6048  003494  6F0A               	movwf	(stepper2@i_489+1)& (0+255),b
  6049  003496  0E00               	movlw	0
  6050  003498  6F09               	movwf	stepper2@i_489& (0+255),b
  6051  00349A  D00C               	goto	l7676
  6052  00349C                     l7672:
  6053                           
  6054                           ; BSR set to: 1
  6055                           ;actuators_main.c: 532:                     full_drive(direction, 2);
  6056  00349C  0E00               	movlw	0
  6057  00349E  0100               	movlb	0	; () banked
  6058  0034A0  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  6059  0034A2  0E02               	movlw	2
  6060  0034A4  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  6061  0034A6  0101               	movlb	1	; () banked
  6062  0034A8  510D               	movf	stepper2@direction& (0+255),w,b
  6063  0034AA  EC95  F00D         	call	_full_drive
  6064                           
  6065                           ;actuators_main.c: 534:                 }
  6066  0034AE  0101               	movlb	1	; () banked
  6067  0034B0  4B09               	infsnz	stepper2@i_489& (0+255),f,b
  6068  0034B2  2B0A               	incf	(stepper2@i_489+1)& (0+255),f,b
  6069  0034B4                     l7676:
  6070                           
  6071                           ; BSR set to: 1
  6072  0034B4  0EFB               	movlw	251
  6073  0034B6  6F02               	movwf	??_stepper2& (0+255),b
  6074  0034B8  0EFF               	movlw	255
  6075  0034BA  6F03               	movwf	(??_stepper2+1)& (0+255),b
  6076  0034BC  C100  F104         	movff	stepper2@steps2_adj,??_stepper2+2
  6077  0034C0  C101  F105         	movff	stepper2@steps2_adj+1,??_stepper2+3
  6078  0034C4  5102               	movf	??_stepper2& (0+255),w,b
  6079  0034C6  2704               	addwf	(??_stepper2+2)& (0+255),f,b
  6080  0034C8  5103               	movf	(??_stepper2+1)& (0+255),w,b
  6081  0034CA  2305               	addwfc	(??_stepper2+3)& (0+255),f,b
  6082  0034CC  5104               	movf	(??_stepper2+2)& (0+255),w,b
  6083  0034CE  5D09               	subwf	stepper2@i_489& (0+255),w,b
  6084  0034D0  510A               	movf	(stepper2@i_489+1)& (0+255),w,b
  6085  0034D2  0A80               	xorlw	128
  6086  0034D4  6F06               	movwf	(??_stepper2+4)& (0+255),b
  6087  0034D6  5105               	movf	(??_stepper2+3)& (0+255),w,b
  6088  0034D8  0A80               	xorlw	128
  6089  0034DA  5906               	subwfb	(??_stepper2+4)& (0+255),w,b
  6090  0034DC  A0D8               	btfss	status,0,c
  6091  0034DE  D7DE               	goto	l7672
  6092                           
  6093                           ; BSR set to: 1
  6094                           ;actuators_main.c: 535:                 count_stepper++;
  6095  0034E0  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  6096  0034E2  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  6097                           
  6098                           ; BSR set to: 1
  6099  0034E4  0012               	return		;funcret
  6100  0034E6                     __end_of_stepper2:
  6101                           	opt callstack 0
  6102                           
  6103 ;; *************** function _stepper *****************
  6104 ;; Defined at:
  6105 ;;		line 427 in file "actuators_main.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  stack           2    0[BANK1 ] int 
  6108 ;;  t_dep           2    2[BANK1 ] int 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  i               2   16[BANK1 ] int 
  6111 ;;  i               2   14[BANK1 ] int 
  6112 ;;  i               2   12[BANK1 ] int 
  6113 ;;  i               2   10[BANK1 ] int 
  6114 ;;  count_steppe    2    8[BANK1 ] int 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6124 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;Total ram usage:       18 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:   15
  6131 ;; This function calls:
  6132 ;;		_full_drive
  6133 ;; This function is called by:
  6134 ;;		_actuators_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text14
  6139  002A72                     __ptext14:
  6140                           	opt callstack 0
  6141  002A72                     _stepper:
  6142                           	opt callstack 14
  6143                           
  6144                           ;actuators_main.c: 428:     int count_stepper = 0;
  6145                           
  6146                           ; BSR set to: 1
  6147                           ;incstack = 0
  6148  002A72  0E00               	movlw	0
  6149  002A74  0101               	movlb	1	; () banked
  6150  002A76  6F09               	movwf	(stepper@count_stepper+1)& (0+255),b
  6151  002A78  0E00               	movlw	0
  6152  002A7A  6F08               	movwf	stepper@count_stepper& (0+255),b
  6153                           
  6154                           ; BSR set to: 1
  6155                           ;actuators_main.c: 437:             if (stack == 1){
  6156                           
  6157                           ; BSR set to: 1
  6158                           ;actuators_main.c: 431:         if (count_stepper<1){
  6159  002A7C  0500               	decf	stepper@stack& (0+255),w,b
  6160  002A7E  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  6161  002A80  A4D8               	btfss	status,2,c
  6162  002A82  D03E               	goto	u7960
  6163                           
  6164                           ; BSR set to: 1
  6165                           ;actuators_main.c: 438:                 if (t_dep<=3){
  6166  002A84  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  6167  002A86  D006               	goto	u7930
  6168  002A88  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  6169  002A8A  E11B               	bnz	l7598
  6170  002A8C  0E04               	movlw	4
  6171  002A8E  5D02               	subwf	stepper@t_dep& (0+255),w,b
  6172  002A90  B0D8               	btfsc	status,0,c
  6173  002A92  D017               	goto	u7940
  6174  002A94                     u7930:
  6175                           
  6176                           ; BSR set to: 1
  6177                           ;actuators_main.c: 439:                     for(int i=0;i<14;i++){
  6178  002A94  0E00               	movlw	0
  6179  002A96  6F0B               	movwf	(stepper@i+1)& (0+255),b
  6180  002A98  0E00               	movlw	0
  6181  002A9A  6F0A               	movwf	stepper@i& (0+255),b
  6182  002A9C                     l7592:
  6183                           
  6184                           ; BSR set to: 1
  6185                           ;actuators_main.c: 441:                         full_drive(0, 1);
  6186  002A9C  0E00               	movlw	0
  6187  002A9E  0100               	movlb	0	; () banked
  6188  002AA0  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  6189  002AA2  0E01               	movlw	1
  6190  002AA4  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  6191  002AA6  0E00               	movlw	0
  6192  002AA8  EC95  F00D         	call	_full_drive
  6193                           
  6194                           ;actuators_main.c: 443:                     }
  6195  002AAC  0101               	movlb	1	; () banked
  6196  002AAE  4B0A               	infsnz	stepper@i& (0+255),f,b
  6197  002AB0  2B0B               	incf	(stepper@i+1)& (0+255),f,b
  6198                           
  6199                           ; BSR set to: 1
  6200  002AB2  BF0B               	btfsc	(stepper@i+1)& (0+255),7,b
  6201  002AB4  D7F3               	goto	l7592
  6202  002AB6  510B               	movf	(stepper@i+1)& (0+255),w,b
  6203  002AB8  E104               	bnz	u7940
  6204  002ABA  0E0E               	movlw	14
  6205  002ABC  5D0A               	subwf	stepper@i& (0+255),w,b
  6206  002ABE  A0D8               	btfss	status,0,c
  6207  002AC0  D7ED               	goto	l7592
  6208  002AC2                     u7940:
  6209  002AC2                     l7598:
  6210                           
  6211                           ; BSR set to: 1
  6212                           ;actuators_main.c: 445:                 if (t_dep>3){
  6213  002AC2  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  6214  002AC4  D01D               	goto	u7960
  6215  002AC6  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  6216  002AC8  E104               	bnz	u7950
  6217  002ACA  0E04               	movlw	4
  6218  002ACC  5D02               	subwf	stepper@t_dep& (0+255),w,b
  6219  002ACE  A0D8               	btfss	status,0,c
  6220  002AD0  D017               	goto	u7960
  6221  002AD2                     u7950:
  6222                           
  6223                           ; BSR set to: 1
  6224                           ;actuators_main.c: 446:                     for(int i=0;i<14 -1;i++){
  6225  002AD2  0E00               	movlw	0
  6226  002AD4  6F0D               	movwf	(stepper@i_479+1)& (0+255),b
  6227  002AD6  0E00               	movlw	0
  6228  002AD8  6F0C               	movwf	stepper@i_479& (0+255),b
  6229  002ADA                     l7606:
  6230                           
  6231                           ; BSR set to: 1
  6232                           ;actuators_main.c: 448:                         full_drive(0, 1);
  6233  002ADA  0E00               	movlw	0
  6234  002ADC  0100               	movlb	0	; () banked
  6235  002ADE  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  6236  002AE0  0E01               	movlw	1
  6237  002AE2  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  6238  002AE4  0E00               	movlw	0
  6239  002AE6  EC95  F00D         	call	_full_drive
  6240                           
  6241                           ;actuators_main.c: 450:                     }
  6242  002AEA  0101               	movlb	1	; () banked
  6243  002AEC  4B0C               	infsnz	stepper@i_479& (0+255),f,b
  6244  002AEE  2B0D               	incf	(stepper@i_479+1)& (0+255),f,b
  6245                           
  6246                           ; BSR set to: 1
  6247  002AF0  BF0D               	btfsc	(stepper@i_479+1)& (0+255),7,b
  6248  002AF2  D7F3               	goto	l7606
  6249  002AF4  510D               	movf	(stepper@i_479+1)& (0+255),w,b
  6250  002AF6  E104               	bnz	u7960
  6251  002AF8  0E0D               	movlw	13
  6252  002AFA  5D0C               	subwf	stepper@i_479& (0+255),w,b
  6253  002AFC  A0D8               	btfss	status,0,c
  6254  002AFE  D7ED               	goto	l7606
  6255  002B00                     u7960:
  6256                           
  6257                           ; BSR set to: 1
  6258                           ;actuators_main.c: 453:             if (stack == 2){
  6259  002B00  0E02               	movlw	2
  6260  002B02  1900               	xorwf	stepper@stack& (0+255),w,b
  6261  002B04  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  6262  002B06  A4D8               	btfss	status,2,c
  6263  002B08  D056               	goto	u8010
  6264                           
  6265                           ; BSR set to: 1
  6266                           ;actuators_main.c: 454:                 if ((t_dep-8)<=3){
  6267  002B0A  0EF8               	movlw	248
  6268  002B0C  6F04               	movwf	??_stepper& (0+255),b
  6269  002B0E  0EFF               	movlw	255
  6270  002B10  6F05               	movwf	(??_stepper+1)& (0+255),b
  6271  002B12  C102  F106         	movff	stepper@t_dep,??_stepper+2
  6272  002B16  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  6273  002B1A  5104               	movf	??_stepper& (0+255),w,b
  6274  002B1C  2706               	addwf	(??_stepper+2)& (0+255),f,b
  6275  002B1E  5105               	movf	(??_stepper+1)& (0+255),w,b
  6276  002B20  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  6277  002B22  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  6278  002B24  D006               	goto	u7980
  6279  002B26  5107               	movf	(??_stepper+3)& (0+255),w,b
  6280  002B28  E11B               	bnz	l7628
  6281  002B2A  0E04               	movlw	4
  6282  002B2C  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  6283  002B2E  B0D8               	btfsc	status,0,c
  6284  002B30  D017               	goto	u7990
  6285  002B32                     u7980:
  6286                           
  6287                           ; BSR set to: 1
  6288                           ;actuators_main.c: 455:                     for(int i=0;i<14;i++){
  6289  002B32  0E00               	movlw	0
  6290  002B34  6F0F               	movwf	(stepper@i_480+1)& (0+255),b
  6291  002B36  0E00               	movlw	0
  6292  002B38  6F0E               	movwf	stepper@i_480& (0+255),b
  6293  002B3A                     l7622:
  6294                           
  6295                           ; BSR set to: 1
  6296                           ;actuators_main.c: 456:                         full_drive(0, 3);
  6297  002B3A  0E00               	movlw	0
  6298  002B3C  0100               	movlb	0	; () banked
  6299  002B3E  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  6300  002B40  0E03               	movlw	3
  6301  002B42  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  6302  002B44  0E00               	movlw	0
  6303  002B46  EC95  F00D         	call	_full_drive
  6304                           
  6305                           ;actuators_main.c: 459:                     }
  6306  002B4A  0101               	movlb	1	; () banked
  6307  002B4C  4B0E               	infsnz	stepper@i_480& (0+255),f,b
  6308  002B4E  2B0F               	incf	(stepper@i_480+1)& (0+255),f,b
  6309                           
  6310                           ; BSR set to: 1
  6311  002B50  BF0F               	btfsc	(stepper@i_480+1)& (0+255),7,b
  6312  002B52  D7F3               	goto	l7622
  6313  002B54  510F               	movf	(stepper@i_480+1)& (0+255),w,b
  6314  002B56  E104               	bnz	u7990
  6315  002B58  0E0E               	movlw	14
  6316  002B5A  5D0E               	subwf	stepper@i_480& (0+255),w,b
  6317  002B5C  A0D8               	btfss	status,0,c
  6318  002B5E  D7ED               	goto	l7622
  6319  002B60                     u7990:
  6320  002B60                     l7628:
  6321                           
  6322                           ; BSR set to: 1
  6323                           ;actuators_main.c: 461:                 if ((t_dep-8)>3){
  6324  002B60  0EF8               	movlw	248
  6325  002B62  6F04               	movwf	??_stepper& (0+255),b
  6326  002B64  0EFF               	movlw	255
  6327  002B66  6F05               	movwf	(??_stepper+1)& (0+255),b
  6328  002B68  C102  F106         	movff	stepper@t_dep,??_stepper+2
  6329  002B6C  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  6330  002B70  5104               	movf	??_stepper& (0+255),w,b
  6331  002B72  2706               	addwf	(??_stepper+2)& (0+255),f,b
  6332  002B74  5105               	movf	(??_stepper+1)& (0+255),w,b
  6333  002B76  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  6334  002B78  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  6335  002B7A  D01D               	goto	u8010
  6336  002B7C  5107               	movf	(??_stepper+3)& (0+255),w,b
  6337  002B7E  E104               	bnz	u8000
  6338  002B80  0E04               	movlw	4
  6339  002B82  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  6340  002B84  A0D8               	btfss	status,0,c
  6341  002B86  D017               	goto	u8010
  6342  002B88                     u8000:
  6343                           
  6344                           ; BSR set to: 1
  6345                           ;actuators_main.c: 462:                     for(int i=0;i<14 -1;i++){
  6346  002B88  0E00               	movlw	0
  6347  002B8A  6F11               	movwf	(stepper@i_481+1)& (0+255),b
  6348  002B8C  0E00               	movlw	0
  6349  002B8E  6F10               	movwf	stepper@i_481& (0+255),b
  6350  002B90                     l7636:
  6351                           
  6352                           ; BSR set to: 1
  6353                           ;actuators_main.c: 463:                         full_drive(0, 3);
  6354  002B90  0E00               	movlw	0
  6355  002B92  0100               	movlb	0	; () banked
  6356  002B94  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  6357  002B96  0E03               	movlw	3
  6358  002B98  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  6359  002B9A  0E00               	movlw	0
  6360  002B9C  EC95  F00D         	call	_full_drive
  6361                           
  6362                           ;actuators_main.c: 466:                     }
  6363  002BA0  0101               	movlb	1	; () banked
  6364  002BA2  4B10               	infsnz	stepper@i_481& (0+255),f,b
  6365  002BA4  2B11               	incf	(stepper@i_481+1)& (0+255),f,b
  6366                           
  6367                           ; BSR set to: 1
  6368  002BA6  BF11               	btfsc	(stepper@i_481+1)& (0+255),7,b
  6369  002BA8  D7F3               	goto	l7636
  6370  002BAA  5111               	movf	(stepper@i_481+1)& (0+255),w,b
  6371  002BAC  E104               	bnz	u8010
  6372  002BAE  0E0D               	movlw	13
  6373  002BB0  5D10               	subwf	stepper@i_481& (0+255),w,b
  6374  002BB2  A0D8               	btfss	status,0,c
  6375  002BB4  D7ED               	goto	l7636
  6376  002BB6                     u8010:
  6377                           
  6378                           ; BSR set to: 1
  6379                           ;actuators_main.c: 470:             count_stepper++;
  6380  002BB6  4B08               	infsnz	stepper@count_stepper& (0+255),f,b
  6381  002BB8  2B09               	incf	(stepper@count_stepper+1)& (0+255),f,b
  6382                           
  6383                           ; BSR set to: 1
  6384                           
  6385                           ;actuators_main.c: 471:         }
  6386  002BBA  0012               	return		;funcret
  6387  002BBC                     __end_of_stepper:
  6388                           	opt callstack 0
  6389                           
  6390 ;; *************** function _full_drive *****************
  6391 ;; Defined at:
  6392 ;;		line 626 in file "actuators_main.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  direction       1    wreg     unsigned char 
  6395 ;;  stepper_no      2  123[BANK0 ] int 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  direction       1  126[BANK0 ] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      void 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;Total ram usage:        4 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:   14
  6414 ;; This function calls:
  6415 ;;		_printf
  6416 ;; This function is called by:
  6417 ;;		_stepper
  6418 ;;		_stepper2
  6419 ;;		_stepper2_back
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text15
  6424  001B2A                     __ptext15:
  6425                           	opt callstack 0
  6426  001B2A                     _full_drive:
  6427                           	opt callstack 14
  6428                           
  6429                           ; BSR set to: 1
  6430                           ;incstack = 0
  6431                           ;full_drive@direction stored from wreg
  6432  001B2A  0100               	movlb	0	; () banked
  6433  001B2C  6FFE               	movwf	full_drive@direction& (0+255),b
  6434                           
  6435                           ;actuators_main.c: 627:     if (stepper_no == 1){
  6436  001B2E  0100               	movlb	0	; () banked
  6437  001B30  05FB               	decf	full_drive@stepper_no& (0+255),w,b
  6438  001B32  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6439  001B34  A4D8               	btfss	status,2,c
  6440  001B36  D06B               	goto	l7318
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;actuators_main.c: 628:         if (direction == 1){
  6444  001B38  05FE               	decf	full_drive@direction& (0+255),w,b
  6445  001B3A  A4D8               	btfss	status,2,c
  6446  001B3C  D032               	goto	l7302
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;actuators_main.c: 629:             LATA = 0b00000011;
  6450  001B3E  0E03               	movlw	3
  6451  001B40  6E89               	movwf	3977,c	;volatile
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;actuators_main.c: 630:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6455  001B42  0E1E               	movlw	30
  6456  001B44  0100               	movlb	0	; () banked
  6457  001B46  6FFD               	movwf	??_full_drive& (0+255),b
  6458  001B48  0E37               	movlw	55
  6459  001B4A                     u9557:
  6460  001B4A  2EE8               	decfsz	wreg,f,c
  6461  001B4C  D7FE               	bra	u9557
  6462  001B4E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6463  001B50  D7FC               	bra	u9557
  6464                           
  6465                           ;actuators_main.c: 631:             LATA = 0b00000110;
  6466  001B52  0E06               	movlw	6
  6467  001B54  6E89               	movwf	3977,c	;volatile
  6468                           
  6469                           ;actuators_main.c: 632:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6470  001B56  0E1E               	movlw	30
  6471  001B58  0100               	movlb	0	; () banked
  6472  001B5A  6FFD               	movwf	??_full_drive& (0+255),b
  6473  001B5C  0E37               	movlw	55
  6474  001B5E                     u9567:
  6475  001B5E  2EE8               	decfsz	wreg,f,c
  6476  001B60  D7FE               	bra	u9567
  6477  001B62  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6478  001B64  D7FC               	bra	u9567
  6479                           
  6480                           ;actuators_main.c: 633:             LATA = 0b00001100;
  6481  001B66  0E0C               	movlw	12
  6482  001B68  6E89               	movwf	3977,c	;volatile
  6483                           
  6484                           ;actuators_main.c: 634:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6485  001B6A  0E1E               	movlw	30
  6486  001B6C  0100               	movlb	0	; () banked
  6487  001B6E  6FFD               	movwf	??_full_drive& (0+255),b
  6488  001B70  0E37               	movlw	55
  6489  001B72                     u9577:
  6490  001B72  2EE8               	decfsz	wreg,f,c
  6491  001B74  D7FE               	bra	u9577
  6492  001B76  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6493  001B78  D7FC               	bra	u9577
  6494                           
  6495                           ;actuators_main.c: 635:             LATA = 0b00001001;
  6496  001B7A  0E09               	movlw	9
  6497  001B7C  6E89               	movwf	3977,c	;volatile
  6498                           
  6499                           ;actuators_main.c: 636:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6500  001B7E  0E1E               	movlw	30
  6501  001B80  0100               	movlb	0	; () banked
  6502  001B82  6FFD               	movwf	??_full_drive& (0+255),b
  6503  001B84  0E37               	movlw	55
  6504  001B86                     u9587:
  6505  001B86  2EE8               	decfsz	wreg,f,c
  6506  001B88  D7FE               	bra	u9587
  6507  001B8A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6508  001B8C  D7FC               	bra	u9587
  6509                           
  6510                           ;actuators_main.c: 637:             LATA = 0b00000011;
  6511  001B8E  0E03               	movlw	3
  6512  001B90  6E89               	movwf	3977,c	;volatile
  6513                           
  6514                           ;actuators_main.c: 638:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6515  001B92  0E1E               	movlw	30
  6516  001B94  0100               	movlb	0	; () banked
  6517  001B96  6FFD               	movwf	??_full_drive& (0+255),b
  6518  001B98  0E37               	movlw	55
  6519  001B9A                     u9597:
  6520  001B9A  2EE8               	decfsz	wreg,f,c
  6521  001B9C  D7FE               	bra	u9597
  6522  001B9E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6523  001BA0  D7FC               	bra	u9597
  6524  001BA2                     l7302:
  6525                           
  6526                           ;actuators_main.c: 640:         if (direction == 0){
  6527  001BA2  0100               	movlb	0	; () banked
  6528  001BA4  51FE               	movf	full_drive@direction& (0+255),w,b
  6529  001BA6  A4D8               	btfss	status,2,c
  6530  001BA8  D032               	goto	l7318
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;actuators_main.c: 641:             LATA = 0b00001001;
  6534  001BAA  0E09               	movlw	9
  6535  001BAC  6E89               	movwf	3977,c	;volatile
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;actuators_main.c: 642:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6539  001BAE  0E1E               	movlw	30
  6540  001BB0  0100               	movlb	0	; () banked
  6541  001BB2  6FFD               	movwf	??_full_drive& (0+255),b
  6542  001BB4  0E37               	movlw	55
  6543  001BB6                     u9607:
  6544  001BB6  2EE8               	decfsz	wreg,f,c
  6545  001BB8  D7FE               	bra	u9607
  6546  001BBA  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6547  001BBC  D7FC               	bra	u9607
  6548                           
  6549                           ;actuators_main.c: 643:             LATA = 0b00001100;
  6550  001BBE  0E0C               	movlw	12
  6551  001BC0  6E89               	movwf	3977,c	;volatile
  6552                           
  6553                           ;actuators_main.c: 644:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6554  001BC2  0E1E               	movlw	30
  6555  001BC4  0100               	movlb	0	; () banked
  6556  001BC6  6FFD               	movwf	??_full_drive& (0+255),b
  6557  001BC8  0E37               	movlw	55
  6558  001BCA                     u9617:
  6559  001BCA  2EE8               	decfsz	wreg,f,c
  6560  001BCC  D7FE               	bra	u9617
  6561  001BCE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6562  001BD0  D7FC               	bra	u9617
  6563                           
  6564                           ;actuators_main.c: 645:             LATA = 0b00000110;
  6565  001BD2  0E06               	movlw	6
  6566  001BD4  6E89               	movwf	3977,c	;volatile
  6567                           
  6568                           ;actuators_main.c: 646:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6569  001BD6  0E1E               	movlw	30
  6570  001BD8  0100               	movlb	0	; () banked
  6571  001BDA  6FFD               	movwf	??_full_drive& (0+255),b
  6572  001BDC  0E37               	movlw	55
  6573  001BDE                     u9627:
  6574  001BDE  2EE8               	decfsz	wreg,f,c
  6575  001BE0  D7FE               	bra	u9627
  6576  001BE2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6577  001BE4  D7FC               	bra	u9627
  6578                           
  6579                           ;actuators_main.c: 647:             LATA = 0b00000011;
  6580  001BE6  0E03               	movlw	3
  6581  001BE8  6E89               	movwf	3977,c	;volatile
  6582                           
  6583                           ;actuators_main.c: 648:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6584  001BEA  0E1E               	movlw	30
  6585  001BEC  0100               	movlb	0	; () banked
  6586  001BEE  6FFD               	movwf	??_full_drive& (0+255),b
  6587  001BF0  0E37               	movlw	55
  6588  001BF2                     u9637:
  6589  001BF2  2EE8               	decfsz	wreg,f,c
  6590  001BF4  D7FE               	bra	u9637
  6591  001BF6  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6592  001BF8  D7FC               	bra	u9637
  6593                           
  6594                           ;actuators_main.c: 649:             LATA = 0b00001001;
  6595  001BFA  0E09               	movlw	9
  6596  001BFC  6E89               	movwf	3977,c	;volatile
  6597                           
  6598                           ;actuators_main.c: 650:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6599  001BFE  0E1E               	movlw	30
  6600  001C00  0100               	movlb	0	; () banked
  6601  001C02  6FFD               	movwf	??_full_drive& (0+255),b
  6602  001C04  0E37               	movlw	55
  6603  001C06                     u9647:
  6604  001C06  2EE8               	decfsz	wreg,f,c
  6605  001C08  D7FE               	bra	u9647
  6606  001C0A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6607  001C0C  D7FC               	bra	u9647
  6608  001C0E                     l7318:
  6609                           
  6610                           ;actuators_main.c: 653:     if (stepper_no == 2){
  6611  001C0E  0E02               	movlw	2
  6612  001C10  0100               	movlb	0	; () banked
  6613  001C12  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6614  001C14  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6615  001C16  A4D8               	btfss	status,2,c
  6616  001C18  D089               	goto	l7396
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;actuators_main.c: 654:         if (direction == 1){
  6620  001C1A  05FE               	decf	full_drive@direction& (0+255),w,b
  6621  001C1C  A4D8               	btfss	status,2,c
  6622  001C1E  D041               	goto	l7358
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;actuators_main.c: 655:             LATCbits.LATC0 = 1;
  6626  001C20  808B               	bsf	3979,0,c	;volatile
  6627                           
  6628                           ;actuators_main.c: 656:             LATEbits.LATE0 = 1;
  6629  001C22  808D               	bsf	3981,0,c	;volatile
  6630                           
  6631                           ;actuators_main.c: 657:             LATEbits.LATE1 = 0;
  6632  001C24  928D               	bcf	3981,1,c	;volatile
  6633                           
  6634                           ;actuators_main.c: 658:             LATEbits.LATE2 = 0;
  6635  001C26  948D               	bcf	3981,2,c	;volatile
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;actuators_main.c: 659:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6639  001C28  0E0D               	movlw	13
  6640  001C2A  0100               	movlb	0	; () banked
  6641  001C2C  6FFD               	movwf	??_full_drive& (0+255),b
  6642  001C2E  0EFB               	movlw	251
  6643  001C30                     u9657:
  6644  001C30  2EE8               	decfsz	wreg,f,c
  6645  001C32  D7FE               	bra	u9657
  6646  001C34  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6647  001C36  D7FC               	bra	u9657
  6648  001C38  D000               	nop2	
  6649                           
  6650                           ;actuators_main.c: 660:             LATCbits.LATC0 = 0;
  6651  001C3A  908B               	bcf	3979,0,c	;volatile
  6652                           
  6653                           ;actuators_main.c: 661:             LATEbits.LATE0 = 1;
  6654  001C3C  808D               	bsf	3981,0,c	;volatile
  6655                           
  6656                           ;actuators_main.c: 662:             LATEbits.LATE1 = 1;
  6657  001C3E  828D               	bsf	3981,1,c	;volatile
  6658                           
  6659                           ;actuators_main.c: 663:             LATEbits.LATE2 = 0;
  6660  001C40  948D               	bcf	3981,2,c	;volatile
  6661                           
  6662                           ;actuators_main.c: 664:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6663  001C42  0E0D               	movlw	13
  6664  001C44  0100               	movlb	0	; () banked
  6665  001C46  6FFD               	movwf	??_full_drive& (0+255),b
  6666  001C48  0EFB               	movlw	251
  6667  001C4A                     u9667:
  6668  001C4A  2EE8               	decfsz	wreg,f,c
  6669  001C4C  D7FE               	bra	u9667
  6670  001C4E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6671  001C50  D7FC               	bra	u9667
  6672  001C52  D000               	nop2	
  6673                           
  6674                           ;actuators_main.c: 665:             LATCbits.LATC0 = 0;
  6675  001C54  908B               	bcf	3979,0,c	;volatile
  6676                           
  6677                           ;actuators_main.c: 666:             LATEbits.LATE0 = 0;
  6678  001C56  908D               	bcf	3981,0,c	;volatile
  6679                           
  6680                           ;actuators_main.c: 667:             LATEbits.LATE1 = 1;
  6681  001C58  828D               	bsf	3981,1,c	;volatile
  6682                           
  6683                           ;actuators_main.c: 668:             LATEbits.LATE2 = 1;
  6684  001C5A  848D               	bsf	3981,2,c	;volatile
  6685                           
  6686                           ;actuators_main.c: 669:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6687  001C5C  0E0D               	movlw	13
  6688  001C5E  0100               	movlb	0	; () banked
  6689  001C60  6FFD               	movwf	??_full_drive& (0+255),b
  6690  001C62  0EFB               	movlw	251
  6691  001C64                     u9677:
  6692  001C64  2EE8               	decfsz	wreg,f,c
  6693  001C66  D7FE               	bra	u9677
  6694  001C68  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6695  001C6A  D7FC               	bra	u9677
  6696  001C6C  D000               	nop2	
  6697                           
  6698                           ;actuators_main.c: 670:             LATCbits.LATC0 = 1;
  6699  001C6E  808B               	bsf	3979,0,c	;volatile
  6700                           
  6701                           ;actuators_main.c: 671:             LATEbits.LATE0 = 0;
  6702  001C70  908D               	bcf	3981,0,c	;volatile
  6703                           
  6704                           ;actuators_main.c: 672:             LATEbits.LATE1 = 0;
  6705  001C72  928D               	bcf	3981,1,c	;volatile
  6706                           
  6707                           ;actuators_main.c: 673:             LATEbits.LATE2 = 1;
  6708  001C74  848D               	bsf	3981,2,c	;volatile
  6709                           
  6710                           ;actuators_main.c: 674:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6711  001C76  0E0D               	movlw	13
  6712  001C78  0100               	movlb	0	; () banked
  6713  001C7A  6FFD               	movwf	??_full_drive& (0+255),b
  6714  001C7C  0EFB               	movlw	251
  6715  001C7E                     u9687:
  6716  001C7E  2EE8               	decfsz	wreg,f,c
  6717  001C80  D7FE               	bra	u9687
  6718  001C82  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6719  001C84  D7FC               	bra	u9687
  6720  001C86  D000               	nop2	
  6721                           
  6722                           ;actuators_main.c: 675:             LATCbits.LATC0 = 1;
  6723  001C88  808B               	bsf	3979,0,c	;volatile
  6724                           
  6725                           ;actuators_main.c: 676:             LATEbits.LATE0 = 1;
  6726  001C8A  808D               	bsf	3981,0,c	;volatile
  6727                           
  6728                           ;actuators_main.c: 677:             LATEbits.LATE1 = 0;
  6729  001C8C  928D               	bcf	3981,1,c	;volatile
  6730                           
  6731                           ;actuators_main.c: 678:             LATEbits.LATE2 = 0;
  6732  001C8E  948D               	bcf	3981,2,c	;volatile
  6733                           
  6734                           ;actuators_main.c: 679:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6735  001C90  0E0D               	movlw	13
  6736  001C92  0100               	movlb	0	; () banked
  6737  001C94  6FFD               	movwf	??_full_drive& (0+255),b
  6738  001C96  0EFB               	movlw	251
  6739  001C98                     u9697:
  6740  001C98  2EE8               	decfsz	wreg,f,c
  6741  001C9A  D7FE               	bra	u9697
  6742  001C9C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6743  001C9E  D7FC               	bra	u9697
  6744  001CA0  D000               	nop2	
  6745  001CA2                     l7358:
  6746                           
  6747                           ;actuators_main.c: 681:         if (direction == 0){
  6748  001CA2  0100               	movlb	0	; () banked
  6749  001CA4  51FE               	movf	full_drive@direction& (0+255),w,b
  6750  001CA6  A4D8               	btfss	status,2,c
  6751  001CA8  D041               	goto	l7396
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;actuators_main.c: 682:             LATCbits.LATC0 = 1;
  6755  001CAA  808B               	bsf	3979,0,c	;volatile
  6756                           
  6757                           ;actuators_main.c: 683:             LATEbits.LATE0 = 0;
  6758  001CAC  908D               	bcf	3981,0,c	;volatile
  6759                           
  6760                           ;actuators_main.c: 684:             LATEbits.LATE1 = 0;
  6761  001CAE  928D               	bcf	3981,1,c	;volatile
  6762                           
  6763                           ;actuators_main.c: 685:             LATEbits.LATE2 = 1;
  6764  001CB0  848D               	bsf	3981,2,c	;volatile
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;actuators_main.c: 686:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6768  001CB2  0E0D               	movlw	13
  6769  001CB4  0100               	movlb	0	; () banked
  6770  001CB6  6FFD               	movwf	??_full_drive& (0+255),b
  6771  001CB8  0EFB               	movlw	251
  6772  001CBA                     u9707:
  6773  001CBA  2EE8               	decfsz	wreg,f,c
  6774  001CBC  D7FE               	bra	u9707
  6775  001CBE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6776  001CC0  D7FC               	bra	u9707
  6777  001CC2  D000               	nop2	
  6778                           
  6779                           ;actuators_main.c: 687:             LATCbits.LATC0 = 0;
  6780  001CC4  908B               	bcf	3979,0,c	;volatile
  6781                           
  6782                           ;actuators_main.c: 688:             LATEbits.LATE0 = 0;
  6783  001CC6  908D               	bcf	3981,0,c	;volatile
  6784                           
  6785                           ;actuators_main.c: 689:             LATEbits.LATE1 = 1;
  6786  001CC8  828D               	bsf	3981,1,c	;volatile
  6787                           
  6788                           ;actuators_main.c: 690:             LATEbits.LATE2 = 1;
  6789  001CCA  848D               	bsf	3981,2,c	;volatile
  6790                           
  6791                           ;actuators_main.c: 691:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6792  001CCC  0E0D               	movlw	13
  6793  001CCE  0100               	movlb	0	; () banked
  6794  001CD0  6FFD               	movwf	??_full_drive& (0+255),b
  6795  001CD2  0EFB               	movlw	251
  6796  001CD4                     u9717:
  6797  001CD4  2EE8               	decfsz	wreg,f,c
  6798  001CD6  D7FE               	bra	u9717
  6799  001CD8  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6800  001CDA  D7FC               	bra	u9717
  6801  001CDC  D000               	nop2	
  6802                           
  6803                           ;actuators_main.c: 692:             LATCbits.LATC0 = 0;
  6804  001CDE  908B               	bcf	3979,0,c	;volatile
  6805                           
  6806                           ;actuators_main.c: 693:             LATEbits.LATE0 = 1;
  6807  001CE0  808D               	bsf	3981,0,c	;volatile
  6808                           
  6809                           ;actuators_main.c: 694:             LATEbits.LATE1 = 1;
  6810  001CE2  828D               	bsf	3981,1,c	;volatile
  6811                           
  6812                           ;actuators_main.c: 695:             LATEbits.LATE2 = 0;
  6813  001CE4  948D               	bcf	3981,2,c	;volatile
  6814                           
  6815                           ;actuators_main.c: 696:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6816  001CE6  0E0D               	movlw	13
  6817  001CE8  0100               	movlb	0	; () banked
  6818  001CEA  6FFD               	movwf	??_full_drive& (0+255),b
  6819  001CEC  0EFB               	movlw	251
  6820  001CEE                     u9727:
  6821  001CEE  2EE8               	decfsz	wreg,f,c
  6822  001CF0  D7FE               	bra	u9727
  6823  001CF2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6824  001CF4  D7FC               	bra	u9727
  6825  001CF6  D000               	nop2	
  6826                           
  6827                           ;actuators_main.c: 697:             LATCbits.LATC0 = 1;
  6828  001CF8  808B               	bsf	3979,0,c	;volatile
  6829                           
  6830                           ;actuators_main.c: 698:             LATEbits.LATE0 = 1;
  6831  001CFA  808D               	bsf	3981,0,c	;volatile
  6832                           
  6833                           ;actuators_main.c: 699:             LATEbits.LATE1 = 0;
  6834  001CFC  928D               	bcf	3981,1,c	;volatile
  6835                           
  6836                           ;actuators_main.c: 700:             LATEbits.LATE2 = 0;
  6837  001CFE  948D               	bcf	3981,2,c	;volatile
  6838                           
  6839                           ;actuators_main.c: 701:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6840  001D00  0E0D               	movlw	13
  6841  001D02  0100               	movlb	0	; () banked
  6842  001D04  6FFD               	movwf	??_full_drive& (0+255),b
  6843  001D06  0EFB               	movlw	251
  6844  001D08                     u9737:
  6845  001D08  2EE8               	decfsz	wreg,f,c
  6846  001D0A  D7FE               	bra	u9737
  6847  001D0C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6848  001D0E  D7FC               	bra	u9737
  6849  001D10  D000               	nop2	
  6850                           
  6851                           ;actuators_main.c: 702:             LATCbits.LATC0 = 1;
  6852  001D12  808B               	bsf	3979,0,c	;volatile
  6853                           
  6854                           ;actuators_main.c: 703:             LATEbits.LATE0 = 0;
  6855  001D14  908D               	bcf	3981,0,c	;volatile
  6856                           
  6857                           ;actuators_main.c: 704:             LATEbits.LATE1 = 0;
  6858  001D16  928D               	bcf	3981,1,c	;volatile
  6859                           
  6860                           ;actuators_main.c: 705:             LATEbits.LATE2 = 1;
  6861  001D18  848D               	bsf	3981,2,c	;volatile
  6862                           
  6863                           ;actuators_main.c: 706:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6864  001D1A  0E0D               	movlw	13
  6865  001D1C  0100               	movlb	0	; () banked
  6866  001D1E  6FFD               	movwf	??_full_drive& (0+255),b
  6867  001D20  0EFB               	movlw	251
  6868  001D22                     u9747:
  6869  001D22  2EE8               	decfsz	wreg,f,c
  6870  001D24  D7FE               	bra	u9747
  6871  001D26  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6872  001D28  D7FC               	bra	u9747
  6873  001D2A  D000               	nop2	
  6874  001D2C                     l7396:
  6875                           
  6876                           ;actuators_main.c: 709:     if (stepper_no == 3){
  6877  001D2C  0E03               	movlw	3
  6878  001D2E  0100               	movlb	0	; () banked
  6879  001D30  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6880  001D32  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6881  001D34  A4D8               	btfss	status,2,c
  6882  001D36  D086               	goto	l7476
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;actuators_main.c: 710:         printf("what");
  6886  001D38  0EF9               	movlw	low STR_9
  6887  001D3A  6FED               	movwf	printf@fmt& (0+255),b
  6888  001D3C  0EFF               	movlw	high STR_9
  6889  001D3E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6890  001D40  EC60  F020         	call	_printf	;wreg free
  6891                           
  6892                           ;actuators_main.c: 711:         if (direction == 0){
  6893  001D44  0100               	movlb	0	; () banked
  6894  001D46  51FE               	movf	full_drive@direction& (0+255),w,b
  6895  001D48  A4D8               	btfss	status,2,c
  6896  001D4A  D03C               	goto	l7438
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;actuators_main.c: 712:             LATCbits.LATC5 = 1;
  6900  001D4C  8A8B               	bsf	3979,5,c	;volatile
  6901                           
  6902                           ;actuators_main.c: 713:             LATCbits.LATC6 = 0;
  6903  001D4E  9C8B               	bcf	3979,6,c	;volatile
  6904                           
  6905                           ;actuators_main.c: 714:             LATCbits.LATC7 = 0;
  6906  001D50  9E8B               	bcf	3979,7,c	;volatile
  6907                           
  6908                           ;actuators_main.c: 715:             LATAbits.LATA5 = 1;
  6909  001D52  8A89               	bsf	3977,5,c	;volatile
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;actuators_main.c: 716:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6913  001D54  0E1E               	movlw	30
  6914  001D56  0100               	movlb	0	; () banked
  6915  001D58  6FFD               	movwf	??_full_drive& (0+255),b
  6916  001D5A  0E37               	movlw	55
  6917  001D5C                     u9757:
  6918  001D5C  2EE8               	decfsz	wreg,f,c
  6919  001D5E  D7FE               	bra	u9757
  6920  001D60  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6921  001D62  D7FC               	bra	u9757
  6922                           
  6923                           ;actuators_main.c: 717:             LATCbits.LATC5 = 1;
  6924  001D64  8A8B               	bsf	3979,5,c	;volatile
  6925                           
  6926                           ;actuators_main.c: 718:             LATCbits.LATC6 = 1;
  6927  001D66  8C8B               	bsf	3979,6,c	;volatile
  6928                           
  6929                           ;actuators_main.c: 719:             LATCbits.LATC7 = 0;
  6930  001D68  9E8B               	bcf	3979,7,c	;volatile
  6931                           
  6932                           ;actuators_main.c: 720:             LATAbits.LATA5 = 0;
  6933  001D6A  9A89               	bcf	3977,5,c	;volatile
  6934                           
  6935                           ;actuators_main.c: 721:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6936  001D6C  0E1E               	movlw	30
  6937  001D6E  0100               	movlb	0	; () banked
  6938  001D70  6FFD               	movwf	??_full_drive& (0+255),b
  6939  001D72  0E37               	movlw	55
  6940  001D74                     u9767:
  6941  001D74  2EE8               	decfsz	wreg,f,c
  6942  001D76  D7FE               	bra	u9767
  6943  001D78  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6944  001D7A  D7FC               	bra	u9767
  6945                           
  6946                           ;actuators_main.c: 722:             LATCbits.LATC5 = 0;
  6947  001D7C  9A8B               	bcf	3979,5,c	;volatile
  6948                           
  6949                           ;actuators_main.c: 723:             LATCbits.LATC6 = 1;
  6950  001D7E  8C8B               	bsf	3979,6,c	;volatile
  6951                           
  6952                           ;actuators_main.c: 724:             LATCbits.LATC7 = 1;
  6953  001D80  8E8B               	bsf	3979,7,c	;volatile
  6954                           
  6955                           ;actuators_main.c: 725:             LATAbits.LATA5 = 0;
  6956  001D82  9A89               	bcf	3977,5,c	;volatile
  6957                           
  6958                           ;actuators_main.c: 726:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6959  001D84  0E1E               	movlw	30
  6960  001D86  0100               	movlb	0	; () banked
  6961  001D88  6FFD               	movwf	??_full_drive& (0+255),b
  6962  001D8A  0E37               	movlw	55
  6963  001D8C                     u9777:
  6964  001D8C  2EE8               	decfsz	wreg,f,c
  6965  001D8E  D7FE               	bra	u9777
  6966  001D90  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6967  001D92  D7FC               	bra	u9777
  6968                           
  6969                           ;actuators_main.c: 727:             LATCbits.LATC5 = 0;
  6970  001D94  9A8B               	bcf	3979,5,c	;volatile
  6971                           
  6972                           ;actuators_main.c: 728:             LATCbits.LATC6 = 0;
  6973  001D96  9C8B               	bcf	3979,6,c	;volatile
  6974                           
  6975                           ;actuators_main.c: 729:             LATCbits.LATC7 = 1;
  6976  001D98  8E8B               	bsf	3979,7,c	;volatile
  6977                           
  6978                           ;actuators_main.c: 730:             LATAbits.LATA5 = 1;
  6979  001D9A  8A89               	bsf	3977,5,c	;volatile
  6980                           
  6981                           ;actuators_main.c: 731:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6982  001D9C  0E1E               	movlw	30
  6983  001D9E  0100               	movlb	0	; () banked
  6984  001DA0  6FFD               	movwf	??_full_drive& (0+255),b
  6985  001DA2  0E37               	movlw	55
  6986  001DA4                     u9787:
  6987  001DA4  2EE8               	decfsz	wreg,f,c
  6988  001DA6  D7FE               	bra	u9787
  6989  001DA8  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6990  001DAA  D7FC               	bra	u9787
  6991                           
  6992                           ;actuators_main.c: 732:             LATCbits.LATC5 = 1;
  6993  001DAC  8A8B               	bsf	3979,5,c	;volatile
  6994                           
  6995                           ;actuators_main.c: 733:             LATCbits.LATC6 = 0;
  6996  001DAE  9C8B               	bcf	3979,6,c	;volatile
  6997                           
  6998                           ;actuators_main.c: 734:             LATCbits.LATC7 = 0;
  6999  001DB0  9E8B               	bcf	3979,7,c	;volatile
  7000                           
  7001                           ;actuators_main.c: 735:             LATAbits.LATA5 = 1;
  7002  001DB2  8A89               	bsf	3977,5,c	;volatile
  7003                           
  7004                           ;actuators_main.c: 736:             _delay((unsigned long)((9)*(10000000/4000.0)));
  7005  001DB4  0E1E               	movlw	30
  7006  001DB6  0100               	movlb	0	; () banked
  7007  001DB8  6FFD               	movwf	??_full_drive& (0+255),b
  7008  001DBA  0E37               	movlw	55
  7009  001DBC                     u9797:
  7010  001DBC  2EE8               	decfsz	wreg,f,c
  7011  001DBE  D7FE               	bra	u9797
  7012  001DC0  2FFD               	decfsz	??_full_drive& (0+255),f,b
  7013  001DC2  D7FC               	bra	u9797
  7014  001DC4                     l7438:
  7015                           
  7016                           ;actuators_main.c: 738:         if (direction == 1){
  7017  001DC4  0100               	movlb	0	; () banked
  7018  001DC6  05FE               	decf	full_drive@direction& (0+255),w,b
  7019  001DC8  A4D8               	btfss	status,2,c
  7020  001DCA  D03C               	goto	l7476
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;actuators_main.c: 739:             LATCbits.LATC5 = 1;
  7024  001DCC  8A8B               	bsf	3979,5,c	;volatile
  7025                           
  7026                           ;actuators_main.c: 740:             LATCbits.LATC6 = 1;
  7027  001DCE  8C8B               	bsf	3979,6,c	;volatile
  7028                           
  7029                           ;actuators_main.c: 741:             LATCbits.LATC7 = 0;
  7030  001DD0  9E8B               	bcf	3979,7,c	;volatile
  7031                           
  7032                           ;actuators_main.c: 742:             LATAbits.LATA5 = 0;
  7033  001DD2  9A89               	bcf	3977,5,c	;volatile
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;actuators_main.c: 743:             _delay((unsigned long)((9)*(10000000/4000.0)));
  7037  001DD4  0E1E               	movlw	30
  7038  001DD6  0100               	movlb	0	; () banked
  7039  001DD8  6FFD               	movwf	??_full_drive& (0+255),b
  7040  001DDA  0E37               	movlw	55
  7041  001DDC                     u9807:
  7042  001DDC  2EE8               	decfsz	wreg,f,c
  7043  001DDE  D7FE               	bra	u9807
  7044  001DE0  2FFD               	decfsz	??_full_drive& (0+255),f,b
  7045  001DE2  D7FC               	bra	u9807
  7046                           
  7047                           ;actuators_main.c: 744:             LATCbits.LATC5 = 0;
  7048  001DE4  9A8B               	bcf	3979,5,c	;volatile
  7049                           
  7050                           ;actuators_main.c: 745:             LATCbits.LATC6 = 1;
  7051  001DE6  8C8B               	bsf	3979,6,c	;volatile
  7052                           
  7053                           ;actuators_main.c: 746:             LATCbits.LATC7 = 1;
  7054  001DE8  8E8B               	bsf	3979,7,c	;volatile
  7055                           
  7056                           ;actuators_main.c: 747:             LATAbits.LATA5 = 0;
  7057  001DEA  9A89               	bcf	3977,5,c	;volatile
  7058                           
  7059                           ;actuators_main.c: 748:             _delay((unsigned long)((9)*(10000000/4000.0)));
  7060  001DEC  0E1E               	movlw	30
  7061  001DEE  0100               	movlb	0	; () banked
  7062  001DF0  6FFD               	movwf	??_full_drive& (0+255),b
  7063  001DF2  0E37               	movlw	55
  7064  001DF4                     u9817:
  7065  001DF4  2EE8               	decfsz	wreg,f,c
  7066  001DF6  D7FE               	bra	u9817
  7067  001DF8  2FFD               	decfsz	??_full_drive& (0+255),f,b
  7068  001DFA  D7FC               	bra	u9817
  7069                           
  7070                           ;actuators_main.c: 749:             LATCbits.LATC5 = 0;
  7071  001DFC  9A8B               	bcf	3979,5,c	;volatile
  7072                           
  7073                           ;actuators_main.c: 750:             LATCbits.LATC6 = 0;
  7074  001DFE  9C8B               	bcf	3979,6,c	;volatile
  7075                           
  7076                           ;actuators_main.c: 751:             LATCbits.LATC7 = 1;
  7077  001E00  8E8B               	bsf	3979,7,c	;volatile
  7078                           
  7079                           ;actuators_main.c: 752:             LATAbits.LATA5 = 1;
  7080  001E02  8A89               	bsf	3977,5,c	;volatile
  7081                           
  7082                           ;actuators_main.c: 753:             _delay((unsigned long)((9)*(10000000/4000.0)));
  7083  001E04  0E1E               	movlw	30
  7084  001E06  0100               	movlb	0	; () banked
  7085  001E08  6FFD               	movwf	??_full_drive& (0+255),b
  7086  001E0A  0E37               	movlw	55
  7087  001E0C                     u9827:
  7088  001E0C  2EE8               	decfsz	wreg,f,c
  7089  001E0E  D7FE               	bra	u9827
  7090  001E10  2FFD               	decfsz	??_full_drive& (0+255),f,b
  7091  001E12  D7FC               	bra	u9827
  7092                           
  7093                           ;actuators_main.c: 754:             LATCbits.LATC5 = 1;
  7094  001E14  8A8B               	bsf	3979,5,c	;volatile
  7095                           
  7096                           ;actuators_main.c: 755:             LATCbits.LATC6 = 0;
  7097  001E16  9C8B               	bcf	3979,6,c	;volatile
  7098                           
  7099                           ;actuators_main.c: 756:             LATCbits.LATC7 = 0;
  7100  001E18  9E8B               	bcf	3979,7,c	;volatile
  7101                           
  7102                           ;actuators_main.c: 757:             LATAbits.LATA5 = 1;
  7103  001E1A  8A89               	bsf	3977,5,c	;volatile
  7104                           
  7105                           ;actuators_main.c: 758:             _delay((unsigned long)((9)*(10000000/4000.0)));
  7106  001E1C  0E1E               	movlw	30
  7107  001E1E  0100               	movlb	0	; () banked
  7108  001E20  6FFD               	movwf	??_full_drive& (0+255),b
  7109  001E22  0E37               	movlw	55
  7110  001E24                     u9837:
  7111  001E24  2EE8               	decfsz	wreg,f,c
  7112  001E26  D7FE               	bra	u9837
  7113  001E28  2FFD               	decfsz	??_full_drive& (0+255),f,b
  7114  001E2A  D7FC               	bra	u9837
  7115                           
  7116                           ;actuators_main.c: 759:             LATCbits.LATC5 = 1;
  7117  001E2C  8A8B               	bsf	3979,5,c	;volatile
  7118                           
  7119                           ;actuators_main.c: 760:             LATCbits.LATC6 = 1;
  7120  001E2E  8C8B               	bsf	3979,6,c	;volatile
  7121                           
  7122                           ;actuators_main.c: 761:             LATCbits.LATC7 = 0;
  7123  001E30  9E8B               	bcf	3979,7,c	;volatile
  7124                           
  7125                           ;actuators_main.c: 762:             LATAbits.LATA5 = 0;
  7126  001E32  9A89               	bcf	3977,5,c	;volatile
  7127                           
  7128                           ;actuators_main.c: 763:             _delay((unsigned long)((9)*(10000000/4000.0)));
  7129  001E34  0E1E               	movlw	30
  7130  001E36  0100               	movlb	0	; () banked
  7131  001E38  6FFD               	movwf	??_full_drive& (0+255),b
  7132  001E3A  0E37               	movlw	55
  7133  001E3C                     u9847:
  7134  001E3C  2EE8               	decfsz	wreg,f,c
  7135  001E3E  D7FE               	bra	u9847
  7136  001E40  2FFD               	decfsz	??_full_drive& (0+255),f,b
  7137  001E42  D7FC               	bra	u9847
  7138  001E44                     l7476:
  7139                           
  7140                           ;actuators_main.c: 766:                     LATA = 0b00000000;
  7141  001E44  0E00               	movlw	0
  7142  001E46  6E89               	movwf	3977,c	;volatile
  7143                           
  7144                           ;actuators_main.c: 767:         LATCbits.LATC0 = 0;
  7145  001E48  908B               	bcf	3979,0,c	;volatile
  7146                           
  7147                           ;actuators_main.c: 768:         LATEbits.LATE0 = 0;
  7148  001E4A  908D               	bcf	3981,0,c	;volatile
  7149                           
  7150                           ;actuators_main.c: 769:         LATEbits.LATE1 = 0;
  7151  001E4C  928D               	bcf	3981,1,c	;volatile
  7152                           
  7153                           ;actuators_main.c: 770:         LATEbits.LATE2 = 0;
  7154  001E4E  948D               	bcf	3981,2,c	;volatile
  7155                           
  7156                           ;actuators_main.c: 771:         LATCbits.LATC5 = 0;
  7157  001E50  9A8B               	bcf	3979,5,c	;volatile
  7158                           
  7159                           ;actuators_main.c: 772:         LATCbits.LATC6 = 0;
  7160  001E52  9C8B               	bcf	3979,6,c	;volatile
  7161                           
  7162                           ;actuators_main.c: 773:         LATCbits.LATC7 = 0;
  7163  001E54  9E8B               	bcf	3979,7,c	;volatile
  7164                           
  7165                           ;actuators_main.c: 774:         LATAbits.LATA5 = 0;
  7166  001E56  9A89               	bcf	3977,5,c	;volatile
  7167  001E58  0012               	return		;funcret
  7168  001E5A                     __end_of_full_drive:
  7169                           	opt callstack 0
  7170                           
  7171 ;; *************** function _servo *****************
  7172 ;; Defined at:
  7173 ;;		line 191 in file "actuators_main.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg, status,2, status,0, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;Total ram usage:        2 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    4
  7194 ;; This function calls:
  7195 ;;		_servoRotate0
  7196 ;;		_servoRotate180
  7197 ;; This function is called by:
  7198 ;;		_actuators_main
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text16
  7203  0036C4                     __ptext16:
  7204                           	opt callstack 0
  7205  0036C4                     _servo:
  7206                           	opt callstack 25
  7207                           
  7208                           ;actuators_main.c: 193:   TRISB = 0;
  7209                           
  7210                           ;incstack = 0
  7211  0036C4  0E00               	movlw	0
  7212  0036C6  6E93               	movwf	3987,c	;volatile
  7213                           
  7214                           ;actuators_main.c: 194:     TRISC = 0;
  7215  0036C8  0E00               	movlw	0
  7216  0036CA  6E94               	movwf	3988,c	;volatile
  7217                           
  7218                           ;actuators_main.c: 195:     TRISD = 0;
  7219  0036CC  0E00               	movlw	0
  7220  0036CE  6E95               	movwf	3989,c	;volatile
  7221                           
  7222                           ;actuators_main.c: 197:       TRISBbits.RB0 = 0;
  7223  0036D0  9093               	bcf	3987,0,c	;volatile
  7224                           
  7225                           ;actuators_main.c: 198:     LATBbits.LATB0 = 1;
  7226  0036D2  808A               	bsf	3978,0,c	;volatile
  7227                           
  7228                           ;actuators_main.c: 199:     {;actuators_main.c: 201:     servoRotate0(1);
  7229  0036D4  0E00               	movlw	0
  7230  0036D6  0100               	movlb	0	; () banked
  7231  0036D8  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  7232  0036DA  0E01               	movlw	1
  7233  0036DC  6F80               	movwf	servoRotate0@servo& (0+255),b
  7234  0036DE  ECEC  F01A         	call	_servoRotate0	;wreg free
  7235                           
  7236                           ;actuators_main.c: 205:     servoRotate180(1);
  7237  0036E2  0E00               	movlw	0
  7238  0036E4  0100               	movlb	0	; () banked
  7239  0036E6  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  7240  0036E8  0E01               	movlw	1
  7241  0036EA  6F80               	movwf	servoRotate180@servo& (0+255),b
  7242  0036EC  EC73  F01A         	call	_servoRotate180	;wreg free
  7243                           
  7244                           ;actuators_main.c: 206:     _delay((unsigned long)((400)*(10000000/4000.0)));
  7245  0036F0  0E06               	movlw	6
  7246  0036F2  0100               	movlb	0	; () banked
  7247  0036F4  6F86               	movwf	(??_servo+1)& (0+255),b
  7248  0036F6  0E13               	movlw	19
  7249  0036F8  6F85               	movwf	??_servo& (0+255),b
  7250  0036FA  0EAD               	movlw	173
  7251  0036FC                     u9857:
  7252  0036FC  2EE8               	decfsz	wreg,f,c
  7253  0036FE  D7FE               	bra	u9857
  7254  003700  2F85               	decfsz	??_servo& (0+255),f,b
  7255  003702  D7FC               	bra	u9857
  7256  003704  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  7257  003706  D7FA               	bra	u9857
  7258  003708  D000               	nop2	
  7259                           
  7260                           ;actuators_main.c: 207:     servoRotate0(1);
  7261  00370A  0E00               	movlw	0
  7262  00370C  0100               	movlb	0	; () banked
  7263  00370E  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  7264  003710  0E01               	movlw	1
  7265  003712  6F80               	movwf	servoRotate0@servo& (0+255),b
  7266  003714  ECEC  F01A         	call	_servoRotate0	;wreg free
  7267                           
  7268                           ;actuators_main.c: 209:     servoRotate180(2);
  7269  003718  0E00               	movlw	0
  7270  00371A  0100               	movlb	0	; () banked
  7271  00371C  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  7272  00371E  0E02               	movlw	2
  7273  003720  6F80               	movwf	servoRotate180@servo& (0+255),b
  7274  003722  EC73  F01A         	call	_servoRotate180	;wreg free
  7275                           
  7276                           ;actuators_main.c: 210:     servoRotate0(2);
  7277  003726  0E00               	movlw	0
  7278  003728  0100               	movlb	0	; () banked
  7279  00372A  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  7280  00372C  0E02               	movlw	2
  7281  00372E  6F80               	movwf	servoRotate0@servo& (0+255),b
  7282  003730  ECEC  F01A         	call	_servoRotate0	;wreg free
  7283                           
  7284                           ;actuators_main.c: 211:     servoRotate180(2);
  7285  003734  0E00               	movlw	0
  7286  003736  0100               	movlb	0	; () banked
  7287  003738  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  7288  00373A  0E02               	movlw	2
  7289  00373C  6F80               	movwf	servoRotate180@servo& (0+255),b
  7290  00373E  EC73  F01A         	call	_servoRotate180	;wreg free
  7291                           
  7292                           ;actuators_main.c: 213:     _delay((unsigned long)((50)*(10000000/4000.0)));
  7293  003742  0EA3               	movlw	163
  7294  003744  0100               	movlb	0	; () banked
  7295  003746  6F85               	movwf	??_servo& (0+255),b
  7296  003748  0E55               	movlw	85
  7297  00374A                     u9867:
  7298  00374A  2EE8               	decfsz	wreg,f,c
  7299  00374C  D7FE               	bra	u9867
  7300  00374E  2F85               	decfsz	??_servo& (0+255),f,b
  7301  003750  D7FC               	bra	u9867
  7302                           
  7303                           ;actuators_main.c: 214:     servoRotate180(3);
  7304  003752  0E00               	movlw	0
  7305  003754  0100               	movlb	0	; () banked
  7306  003756  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  7307  003758  0E03               	movlw	3
  7308  00375A  6F80               	movwf	servoRotate180@servo& (0+255),b
  7309  00375C  EC73  F01A         	call	_servoRotate180	;wreg free
  7310                           
  7311                           ;actuators_main.c: 215:     servoRotate0(3);
  7312  003760  0E00               	movlw	0
  7313  003762  0100               	movlb	0	; () banked
  7314  003764  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  7315  003766  0E03               	movlw	3
  7316  003768  6F80               	movwf	servoRotate0@servo& (0+255),b
  7317  00376A  ECEC  F01A         	call	_servoRotate0	;wreg free
  7318                           
  7319                           ;actuators_main.c: 216:     servoRotate180(3);
  7320  00376E  0E00               	movlw	0
  7321  003770  0100               	movlb	0	; () banked
  7322  003772  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  7323  003774  0E03               	movlw	3
  7324  003776  6F80               	movwf	servoRotate180@servo& (0+255),b
  7325  003778  EC73  F01A         	call	_servoRotate180	;wreg free
  7326  00377C  0012               	return		;funcret
  7327  00377E                     __end_of_servo:
  7328                           	opt callstack 0
  7329                           
  7330 ;; *************** function _servoRotate180 *****************
  7331 ;; Defined at:
  7332 ;;		line 143 in file "actuators_main.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  servo           2    0[BANK0 ] int 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  i               2    3[BANK0 ] unsigned int 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7350 ;;Total ram usage:        5 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    3
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		_servo
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text17
  7361  0034E6                     __ptext17:
  7362                           	opt callstack 0
  7363  0034E6                     _servoRotate180:
  7364                           	opt callstack 25
  7365                           
  7366                           ;actuators_main.c: 143: void servoRotate180(int servo);actuators_main.c: 144: {;actuator
      +                          s_main.c: 145:   unsigned int i;;actuators_main.c: 146:     if (servo==1){
  7367                           
  7368                           ;incstack = 0
  7369  0034E6  0100               	movlb	0	; () banked
  7370  0034E8  0580               	decf	servoRotate180@servo& (0+255),w,b
  7371  0034EA  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7372  0034EC  A4D8               	btfss	status,2,c
  7373  0034EE  D027               	goto	u7730
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;actuators_main.c: 147:     for(i=0;i<30;i++)
  7377  0034F0  0E00               	movlw	0
  7378  0034F2  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7379  0034F4  0E00               	movlw	0
  7380  0034F6  6F83               	movwf	servoRotate180@i& (0+255),b
  7381  0034F8                     l134:
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;actuators_main.c: 148:         {;actuators_main.c: 149:           RC1 = 1;
  7385  0034F8  8282               	bsf	3970,1,c	;volatile
  7386                           
  7387                           ;actuators_main.c: 150:             RC2 = 1;
  7388  0034FA  8482               	bsf	3970,2,c	;volatile
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;actuators_main.c: 151:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  7392  0034FC  0EE1               	movlw	225
  7393  0034FE                     u9877:
  7394  0034FE  D000               	nop2	
  7395  003500  2EE8               	decfsz	wreg,f,c
  7396  003502  D7FD               	bra	u9877
  7397                           
  7398                           ;actuators_main.c: 153:           RC2 =0;
  7399  003504  9482               	bcf	3970,2,c	;volatile
  7400                           
  7401                           ;actuators_main.c: 154:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  7402  003506  0E07               	movlw	7
  7403  003508  0100               	movlb	0	; () banked
  7404  00350A  6F82               	movwf	??_servoRotate180& (0+255),b
  7405  00350C  0ED0               	movlw	208
  7406  00350E                     u9887:
  7407  00350E  2EE8               	decfsz	wreg,f,c
  7408  003510  D7FE               	bra	u9887
  7409  003512  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7410  003514  D7FC               	bra	u9887
  7411  003516  F000               	nop	
  7412                           
  7413                           ;actuators_main.c: 156:           RC1 = 0;
  7414  003518  9282               	bcf	3970,1,c	;volatile
  7415                           
  7416                           ;actuators_main.c: 157:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  7417  00351A  0E2C               	movlw	44
  7418  00351C  0100               	movlb	0	; () banked
  7419  00351E  6F82               	movwf	??_servoRotate180& (0+255),b
  7420  003520  0EFD               	movlw	253
  7421  003522                     u9897:
  7422  003522  2EE8               	decfsz	wreg,f,c
  7423  003524  D7FE               	bra	u9897
  7424  003526  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7425  003528  D7FC               	bra	u9897
  7426  00352A  F000               	nop	
  7427                           
  7428                           ;actuators_main.c: 158:         }
  7429  00352C  0100               	movlb	0	; () banked
  7430  00352E  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7431  003530  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7432  003532  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7433  003534  E104               	bnz	u7730
  7434  003536  0E1E               	movlw	30
  7435  003538  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7436  00353A  A0D8               	btfss	status,0,c
  7437  00353C  D7DD               	goto	l134
  7438  00353E                     u7730:
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;actuators_main.c: 160:   if (servo==2){
  7442  00353E  0E02               	movlw	2
  7443  003540  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  7444  003542  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7445  003544  A4D8               	btfss	status,2,c
  7446  003546  D020               	goto	u7750
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;actuators_main.c: 161:     for(i=0;i<30;i++)
  7450  003548  0E00               	movlw	0
  7451  00354A  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7452  00354C  0E00               	movlw	0
  7453  00354E  6F83               	movwf	servoRotate180@i& (0+255),b
  7454  003550                     l137:
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;actuators_main.c: 162:           {;actuators_main.c: 164:     RD1 = 1;
  7458  003550  8283               	bsf	3971,1,c	;volatile
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;actuators_main.c: 168:     _delay((unsigned long)((950)*(10000000/4000000.0)));
  7462  003552  0E04               	movlw	4
  7463  003554  0100               	movlb	0	; () banked
  7464  003556  6F82               	movwf	??_servoRotate180& (0+255),b
  7465  003558  0E14               	movlw	20
  7466  00355A                     u9907:
  7467  00355A  2EE8               	decfsz	wreg,f,c
  7468  00355C  D7FE               	bra	u9907
  7469  00355E  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7470  003560  D7FC               	bra	u9907
  7471                           
  7472                           ;actuators_main.c: 170:     RD1 = 0;
  7473  003562  9283               	bcf	3971,1,c	;volatile
  7474                           
  7475                           ;actuators_main.c: 173:     _delay((unsigned long)((26650)*(10000000/4000000.0)));
  7476  003564  0E57               	movlw	87
  7477  003566  0100               	movlb	0	; () banked
  7478  003568  6F82               	movwf	??_servoRotate180& (0+255),b
  7479  00356A  0E85               	movlw	133
  7480  00356C                     u9917:
  7481  00356C  2EE8               	decfsz	wreg,f,c
  7482  00356E  D7FE               	bra	u9917
  7483  003570  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7484  003572  D7FC               	bra	u9917
  7485  003574  F000               	nop	
  7486                           
  7487                           ;actuators_main.c: 175:           }
  7488  003576  0100               	movlb	0	; () banked
  7489  003578  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7490  00357A  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7491  00357C  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7492  00357E  E104               	bnz	u7750
  7493  003580  0E1E               	movlw	30
  7494  003582  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7495  003584  A0D8               	btfss	status,0,c
  7496  003586  D7E4               	goto	l137
  7497  003588                     u7750:
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;actuators_main.c: 177:     if (servo==3){
  7501  003588  0E03               	movlw	3
  7502  00358A  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  7503  00358C  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7504  00358E  A4D8               	btfss	status,2,c
  7505  003590  0012               	return	
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;actuators_main.c: 178:       for(i=0;i<30;i++)
  7509  003592  0E00               	movlw	0
  7510  003594  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7511  003596  0E00               	movlw	0
  7512  003598  6F83               	movwf	servoRotate180@i& (0+255),b
  7513  00359A                     l140:
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;actuators_main.c: 179:         {;actuators_main.c: 180:         RD0 = 1;
  7517  00359A  8083               	bsf	3971,0,c	;volatile
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;actuators_main.c: 182:         _delay((unsigned long)((2500)*(10000000/4000000.0)));
  7521  00359C  0E09               	movlw	9
  7522  00359E  0100               	movlb	0	; () banked
  7523  0035A0  6F82               	movwf	??_servoRotate180& (0+255),b
  7524  0035A2  0E1C               	movlw	28
  7525  0035A4                     u9927:
  7526  0035A4  2EE8               	decfsz	wreg,f,c
  7527  0035A6  D7FE               	bra	u9927
  7528  0035A8  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7529  0035AA  D7FC               	bra	u9927
  7530  0035AC  F000               	nop	
  7531                           
  7532                           ;actuators_main.c: 185:             RD0 = 0;
  7533  0035AE  9083               	bcf	3971,0,c	;volatile
  7534                           
  7535                           ;actuators_main.c: 187:         _delay((unsigned long)((10500)*(10000000/4000000.0)));
  7536  0035B0  0E23               	movlw	35
  7537  0035B2  0100               	movlb	0	; () banked
  7538  0035B4  6F82               	movwf	??_servoRotate180& (0+255),b
  7539  0035B6  0E15               	movlw	21
  7540  0035B8                     u9937:
  7541  0035B8  2EE8               	decfsz	wreg,f,c
  7542  0035BA  D7FE               	bra	u9937
  7543  0035BC  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7544  0035BE  D7FC               	bra	u9937
  7545  0035C0  D000               	nop2	
  7546                           
  7547                           ;actuators_main.c: 188:         }
  7548  0035C2  0100               	movlb	0	; () banked
  7549  0035C4  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7550  0035C6  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7551  0035C8  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7552  0035CA  E105               	bnz	u7770
  7553  0035CC  0E1E               	movlw	30
  7554  0035CE  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7555  0035D0  B0D8               	btfsc	status,0,c
  7556  0035D2  0012               	return	
  7557  0035D4  D7E2               	goto	l140
  7558  0035D6                     u7770:
  7559                           
  7560                           ; BSR set to: 0
  7561  0035D6  0012               	return		;funcret
  7562  0035D8                     __end_of_servoRotate180:
  7563                           	opt callstack 0
  7564                           
  7565 ;; *************** function _servoRotate0 *****************
  7566 ;; Defined at:
  7567 ;;		line 98 in file "actuators_main.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  servo           2    0[BANK0 ] int 
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;  i               2    3[BANK0 ] unsigned int 
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      void 
  7574 ;; Registers used:
  7575 ;;		wreg, status,2, status,0
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7582 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7584 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7585 ;;Total ram usage:        5 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    3
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_servo
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text18
  7596  0035D8                     __ptext18:
  7597                           	opt callstack 0
  7598  0035D8                     _servoRotate0:
  7599                           	opt callstack 25
  7600                           
  7601                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 100:     if (servo==1){
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;incstack = 0
  7605  0035D8  0100               	movlb	0	; () banked
  7606  0035DA  0580               	decf	servoRotate0@servo& (0+255),w,b
  7607  0035DC  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7608  0035DE  A4D8               	btfss	status,2,c
  7609  0035E0  D025               	goto	u7670
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;actuators_main.c: 101:       for(i=0;i<30;i++)
  7613  0035E2  0E00               	movlw	0
  7614  0035E4  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7615  0035E6  0E00               	movlw	0
  7616  0035E8  6F83               	movwf	servoRotate0@i& (0+255),b
  7617  0035EA                     l122:
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;actuators_main.c: 102:           {;actuators_main.c: 103:             RC1 = 1;
  7621  0035EA  8282               	bsf	3970,1,c	;volatile
  7622                           
  7623                           ;actuators_main.c: 104:             RC2 = 1;
  7624  0035EC  8482               	bsf	3970,2,c	;volatile
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;actuators_main.c: 105:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  7628  0035EE  0E04               	movlw	4
  7629  0035F0  0100               	movlb	0	; () banked
  7630  0035F2  6F82               	movwf	??_servoRotate0& (0+255),b
  7631  0035F4  0E91               	movlw	145
  7632  0035F6                     u9947:
  7633  0035F6  2EE8               	decfsz	wreg,f,c
  7634  0035F8  D7FE               	bra	u9947
  7635  0035FA  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7636  0035FC  D7FC               	bra	u9947
  7637                           
  7638                           ;actuators_main.c: 106:             RC2 = 0;
  7639  0035FE  9482               	bcf	3970,2,c	;volatile
  7640                           
  7641                           ;actuators_main.c: 107:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  7642  003600  0EFA               	movlw	250
  7643  003602                     u9957:
  7644  003602  2EE8               	decfsz	wreg,f,c
  7645  003604  D7FE               	bra	u9957
  7646                           
  7647                           ;actuators_main.c: 108:             RC1 = 0;
  7648  003606  9282               	bcf	3970,1,c	;volatile
  7649                           
  7650                           ;actuators_main.c: 112:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  7651  003608  0E3D               	movlw	61
  7652  00360A  0100               	movlb	0	; () banked
  7653  00360C  6F82               	movwf	??_servoRotate0& (0+255),b
  7654  00360E  0E62               	movlw	98
  7655  003610                     u9967:
  7656  003610  2EE8               	decfsz	wreg,f,c
  7657  003612  D7FE               	bra	u9967
  7658  003614  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7659  003616  D7FC               	bra	u9967
  7660  003618  F000               	nop	
  7661                           
  7662                           ;actuators_main.c: 113:           }
  7663  00361A  0100               	movlb	0	; () banked
  7664  00361C  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7665  00361E  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7666  003620  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7667  003622  E104               	bnz	u7670
  7668  003624  0E1E               	movlw	30
  7669  003626  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7670  003628  A0D8               	btfss	status,0,c
  7671  00362A  D7DF               	goto	l122
  7672  00362C                     u7670:
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;actuators_main.c: 115:     if (servo==2){
  7676  00362C  0E02               	movlw	2
  7677  00362E  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7678  003630  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7679  003632  A4D8               	btfss	status,2,c
  7680  003634  D020               	goto	u7690
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;actuators_main.c: 116:       for(i=0;i<30;i++)
  7684  003636  0E00               	movlw	0
  7685  003638  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7686  00363A  0E00               	movlw	0
  7687  00363C  6F83               	movwf	servoRotate0@i& (0+255),b
  7688  00363E                     l125:
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;actuators_main.c: 117:         {;actuators_main.c: 119:         RD1 = 1;
  7692  00363E  8283               	bsf	3971,1,c	;volatile
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;actuators_main.c: 121:           _delay((unsigned long)((1350)*(10000000/4000000.0)));
  7696  003640  0E05               	movlw	5
  7697  003642  0100               	movlb	0	; () banked
  7698  003644  6F82               	movwf	??_servoRotate0& (0+255),b
  7699  003646  0E60               	movlw	96
  7700  003648                     u9977:
  7701  003648  2EE8               	decfsz	wreg,f,c
  7702  00364A  D7FE               	bra	u9977
  7703  00364C  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7704  00364E  D7FC               	bra	u9977
  7705  003650  D000               	nop2	
  7706                           
  7707                           ;actuators_main.c: 125:         RD1 = 0;
  7708  003652  9283               	bcf	3971,1,c	;volatile
  7709                           
  7710                           ;actuators_main.c: 127:           _delay((unsigned long)((16850)*(10000000/4000000.0)));
  7711  003654  0E37               	movlw	55
  7712  003656  0100               	movlb	0	; () banked
  7713  003658  6F82               	movwf	??_servoRotate0& (0+255),b
  7714  00365A  0EB4               	movlw	180
  7715  00365C                     u9987:
  7716  00365C  2EE8               	decfsz	wreg,f,c
  7717  00365E  D7FE               	bra	u9987
  7718  003660  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7719  003662  D7FC               	bra	u9987
  7720                           
  7721                           ;actuators_main.c: 129:         }
  7722  003664  0100               	movlb	0	; () banked
  7723  003666  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7724  003668  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7725  00366A  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7726  00366C  E104               	bnz	u7690
  7727  00366E  0E1E               	movlw	30
  7728  003670  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7729  003672  A0D8               	btfss	status,0,c
  7730  003674  D7E4               	goto	l125
  7731  003676                     u7690:
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;actuators_main.c: 131:     if (servo==3){
  7735  003676  0E03               	movlw	3
  7736  003678  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7737  00367A  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7738  00367C  A4D8               	btfss	status,2,c
  7739  00367E  0012               	return	
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;actuators_main.c: 132:       for(i=0;i<30;i++)
  7743  003680  0E00               	movlw	0
  7744  003682  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7745  003684  0E00               	movlw	0
  7746  003686  6F83               	movwf	servoRotate0@i& (0+255),b
  7747  003688                     l128:
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;actuators_main.c: 133:         {;actuators_main.c: 134:         RD0 = 1;
  7751  003688  8083               	bsf	3971,0,c	;volatile
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;actuators_main.c: 135:         _delay((unsigned long)((2000)*(10000000/4000000.0)));
  7755  00368A  0E07               	movlw	7
  7756  00368C  0100               	movlb	0	; () banked
  7757  00368E  6F82               	movwf	??_servoRotate0& (0+255),b
  7758  003690  0E7D               	movlw	125
  7759  003692                     u9997:
  7760  003692  2EE8               	decfsz	wreg,f,c
  7761  003694  D7FE               	bra	u9997
  7762  003696  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7763  003698  D7FC               	bra	u9997
  7764                           
  7765                           ;actuators_main.c: 138:         RD0 = 0;
  7766  00369A  9083               	bcf	3971,0,c	;volatile
  7767                           
  7768                           ;actuators_main.c: 139:         _delay((unsigned long)((11000)*(10000000/4000000.0)));
  7769  00369C  0E24               	movlw	36
  7770  00369E  0100               	movlb	0	; () banked
  7771  0036A0  6F82               	movwf	??_servoRotate0& (0+255),b
  7772  0036A2  0EB5               	movlw	181
  7773  0036A4                     u10007:
  7774  0036A4  2EE8               	decfsz	wreg,f,c
  7775  0036A6  D7FE               	bra	u10007
  7776  0036A8  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7777  0036AA  D7FC               	bra	u10007
  7778  0036AC  D000               	nop2	
  7779                           
  7780                           ;actuators_main.c: 140:         }
  7781  0036AE  0100               	movlb	0	; () banked
  7782  0036B0  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7783  0036B2  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7784  0036B4  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7785  0036B6  E105               	bnz	u7710
  7786  0036B8  0E1E               	movlw	30
  7787  0036BA  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7788  0036BC  B0D8               	btfsc	status,0,c
  7789  0036BE  0012               	return	
  7790  0036C0  D7E3               	goto	l128
  7791  0036C2                     u7710:
  7792                           
  7793                           ; BSR set to: 0
  7794  0036C2  0012               	return		;funcret
  7795  0036C4                     __end_of_servoRotate0:
  7796                           	opt callstack 0
  7797                           
  7798 ;; *************** function _UI_main *****************
  7799 ;; Defined at:
  7800 ;;		line 488 in file "main.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  t_dep           2  123[BANK0 ] int 
  7803 ;;  poles_detect    2  125[BANK0 ] int 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  i               1   89[BANK1 ] unsigned char 
  7806 ;;  keypress        1   84[BANK1 ] unsigned char 
  7807 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  7808 ;;  tick            4   85[BANK1 ] unsigned long 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      void 
  7811 ;; Registers used:
  7812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7818 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7819 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;Total ram usage:       94 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:   14
  7825 ;; This function calls:
  7826 ;;		_I2C_Master_Init
  7827 ;;		_I2C_Master_Read
  7828 ;;		_I2C_Master_Start
  7829 ;;		_I2C_Master_Stop
  7830 ;;		_I2C_Master_Write
  7831 ;;		___llmod
  7832 ;;		_initLCD
  7833 ;;		_lcdInst
  7834 ;;		_printf
  7835 ;; This function is called by:
  7836 ;;		_main
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text19
  7841  000A00                     __ptext19:
  7842                           	opt callstack 0
  7843  000A00                     _UI_main:
  7844                           	opt callstack 16
  7845                           
  7846                           ;main.c: 489:     sens = 0;
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;incstack = 0
  7850  000A00  0E00               	movlw	0
  7851  000A02  6E59               	movwf	_sens+1,c	;volatile
  7852  000A04  0E00               	movlw	0
  7853  000A06  6E58               	movwf	_sens,c	;volatile
  7854                           
  7855                           ;main.c: 494:     LATD = 0x00;
  7856  000A08  0E00               	movlw	0
  7857  000A0A  6E8C               	movwf	3980,c	;volatile
  7858                           
  7859                           ;main.c: 495:     TRISD = 0x00;
  7860  000A0C  0E00               	movlw	0
  7861  000A0E  6E95               	movwf	3989,c	;volatile
  7862                           
  7863                           ;main.c: 498:     TRISD = 0x00;
  7864  000A10  0E00               	movlw	0
  7865  000A12  6E95               	movwf	3989,c	;volatile
  7866                           
  7867                           ;main.c: 501:     INT1IE = 1;
  7868  000A14  86F0               	bsf	4080,3,c	;volatile
  7869                           
  7870                           ;main.c: 504:     initLCD();
  7871  000A16  EC96  F01D         	call	_initLCD	;wreg free
  7872                           
  7873                           ;main.c: 507:     (INTCONbits.GIE = 1);
  7874  000A1A  8EF2               	bsf	4082,7,c	;volatile
  7875                           
  7876                           ;main.c: 509:     I2C_Master_Init(100000);
  7877  000A1C  0EA0               	movlw	160
  7878  000A1E  0100               	movlb	0	; () banked
  7879  000A20  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7880  000A22  0E86               	movlw	134
  7881  000A24  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7882  000A26  0E01               	movlw	1
  7883  000A28  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7884  000A2A  0E00               	movlw	0
  7885  000A2C  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7886  000A2E  EC39  F01E         	call	_I2C_Master_Init	;wreg free
  7887                           
  7888                           ;main.c: 510:     I2C_Master_Start();
  7889  000A32  ECD7  F020         	call	_I2C_Master_Start	;wreg free
  7890                           
  7891                           ;main.c: 511:     I2C_Master_Write(0b00010000);
  7892  000A36  0E00               	movlw	0
  7893  000A38  0100               	movlb	0	; () banked
  7894  000A3A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7895  000A3C  0E10               	movlw	16
  7896  000A3E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7897  000A40  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  7898                           
  7899                           ;main.c: 512:     I2C_Master_Stop();
  7900  000A44  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  7901                           
  7902                           ;main.c: 522:     if((pressed == 0)&&(sens==0)){
  7903  000A48  0101               	movlb	1	; () banked
  7904  000A4A  516F               	movf	_pressed& (0+255),w,b
  7905  000A4C  1170               	iorwf	(_pressed+1)& (0+255),w,b
  7906  000A4E  A4D8               	btfss	status,2,c
  7907  000A50  D3F0               	goto	u8790
  7908                           
  7909                           ; BSR set to: 1
  7910  000A52  5058               	movf	_sens,w,c	;volatile
  7911  000A54  1059               	iorwf	_sens+1,w,c	;volatile
  7912  000A56  A4D8               	btfss	status,2,c
  7913  000A58  D3EC               	goto	u8790
  7914                           
  7915                           ; BSR set to: 1
  7916                           ;main.c: 523:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7917  000A5A  0E01               	movlw	1
  7918  000A5C  ECC6  F020         	call	_lcdInst
  7919  000A60  0E11               	movlw	17
  7920  000A62  0101               	movlb	1	; () banked
  7921  000A64  6F00               	movwf	??_UI_main& (0+255),b
  7922  000A66  0E3A               	movlw	58
  7923  000A68                     u10017:
  7924  000A68  2EE8               	decfsz	wreg,f,c
  7925  000A6A  D7FE               	bra	u10017
  7926  000A6C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7927  000A6E  D7FC               	bra	u10017
  7928  000A70  F000               	nop	
  7929                           
  7930                           ;main.c: 524:         printf("1 - Start");
  7931  000A72  0EBF               	movlw	low STR_23
  7932  000A74  0100               	movlb	0	; () banked
  7933  000A76  6FED               	movwf	printf@fmt& (0+255),b
  7934  000A78  0EFF               	movlw	high STR_23
  7935  000A7A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7936  000A7C  EC60  F020         	call	_printf	;wreg free
  7937  000A80  0EC0               	movlw	192
  7938  000A82  ECC6  F020         	call	_lcdInst
  7939                           
  7940                           ;main.c: 526:         printf("2 - Summary");
  7941  000A86  0E4B               	movlw	low STR_24
  7942  000A88  0100               	movlb	0	; () banked
  7943  000A8A  6FED               	movwf	printf@fmt& (0+255),b
  7944  000A8C  0EFF               	movlw	high STR_24
  7945  000A8E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7946  000A90  EC60  F020         	call	_printf	;wreg free
  7947  000A94  0E90               	movlw	144
  7948  000A96  ECC6  F020         	call	_lcdInst
  7949                           
  7950                           ;main.c: 528:         printf("3 - Date&Time ");
  7951  000A9A  0E71               	movlw	low STR_25
  7952  000A9C  0100               	movlb	0	; () banked
  7953  000A9E  6FED               	movwf	printf@fmt& (0+255),b
  7954  000AA0  0EFE               	movlw	high STR_25
  7955  000AA2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7956  000AA4  EC60  F020         	call	_printf	;wreg free
  7957  000AA8  D3C4               	goto	u8790
  7958  000AAA                     l8160:
  7959                           
  7960                           ;main.c: 539:         if (send){
  7961  000AAA  506D               	movf	_send,w,c
  7962  000AAC  B4D8               	btfsc	status,2,c
  7963  000AAE  D3C1               	goto	u8790
  7964                           
  7965                           ;main.c: 540:         if(key_was_pressed){
  7966  000AB0  0101               	movlb	1	; () banked
  7967  000AB2  517B               	movf	_key_was_pressed& (0+255),w,b	;volatile
  7968  000AB4  B4D8               	btfsc	status,2,c
  7969  000AB6  D3BD               	goto	u8790
  7970                           
  7971                           ; BSR set to: 1
  7972                           ;main.c: 541:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  7973  000AB8  0E01               	movlw	1
  7974  000ABA  ECC6  F020         	call	_lcdInst
  7975  000ABE  0E11               	movlw	17
  7976  000AC0  0101               	movlb	1	; () banked
  7977  000AC2  6F00               	movwf	??_UI_main& (0+255),b
  7978  000AC4  0E3A               	movlw	58
  7979  000AC6                     u10027:
  7980  000AC6  2EE8               	decfsz	wreg,f,c
  7981  000AC8  D7FE               	bra	u10027
  7982  000ACA  2F00               	decfsz	??_UI_main& (0+255),f,b
  7983  000ACC  D7FC               	bra	u10027
  7984  000ACE  F000               	nop	
  7985                           
  7986                           ;main.c: 542:             printf("bubb");
  7987  000AD0  0EF4               	movlw	low STR_26
  7988  000AD2  0100               	movlb	0	; () banked
  7989  000AD4  6FED               	movwf	printf@fmt& (0+255),b
  7990  000AD6  0EFF               	movlw	high STR_26
  7991  000AD8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7992  000ADA  EC60  F020         	call	_printf	;wreg free
  7993                           
  7994                           ;main.c: 543:             pressed = 1;
  7995  000ADE  0E00               	movlw	0
  7996  000AE0  0101               	movlb	1	; () banked
  7997  000AE2  6F70               	movwf	(_pressed+1)& (0+255),b
  7998  000AE4  0E01               	movlw	1
  7999  000AE6  6F6F               	movwf	_pressed& (0+255),b
  8000                           
  8001                           ; BSR set to: 1
  8002                           ;main.c: 544:             key_was_pressed = 0;
  8003  000AE8  0E00               	movlw	0
  8004  000AEA  6F7B               	movwf	_key_was_pressed& (0+255),b	;volatile
  8005                           
  8006                           ; BSR set to: 1
  8007                           ;main.c: 545:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  8008  000AEC  3881               	swapf	3969,w,c	;volatile
  8009  000AEE  0B0F               	andlw	15
  8010  000AF0  0B0F               	andlw	15
  8011  000AF2  6F54               	movwf	UI_main@keypress& (0+255),b
  8012                           
  8013                           ; BSR set to: 1
  8014                           ;main.c: 546:             temp = keys[keypress];
  8015  000AF4  0E81               	movlw	low _keys
  8016  000AF6  2554               	addwf	UI_main@keypress& (0+255),w,b
  8017  000AF8  6EF6               	movwf	tblptrl,c
  8018  000AFA  6AF7               	clrf	tblptrh,c
  8019  000AFC  0EFD               	movlw	high _keys
  8020  000AFE  22F7               	addwfc	tblptrh,f,c
  8021  000B00                     	if	0	;There are less than 3 active tblptr bytes
  8022  000B00                     	endif
  8023  000B00  0008               	tblrd		*
  8024  000B02  CFF5 F0FF          	movff	tablat,_temp
  8025                           
  8026                           ; BSR set to: 1
  8027                           ;main.c: 547:             temp_int = (temp-'0');
  8028  000B06  0ED0               	movlw	208
  8029  000B08  0100               	movlb	0	; () banked
  8030  000B0A  25FF               	addwf	_temp& (0+255),w,b
  8031  000B0C  0101               	movlb	1	; () banked
  8032  000B0E  6F77               	movwf	_temp_int& (0+255),b
  8033  000B10  6B78               	clrf	(_temp_int+1)& (0+255),b
  8034  000B12  0EFF               	movlw	255
  8035  000B14  2378               	addwfc	(_temp_int+1)& (0+255),f,b
  8036                           
  8037                           ; BSR set to: 1
  8038                           ;main.c: 549:             if (temp_int == 0){
  8039  000B16  5177               	movf	_temp_int& (0+255),w,b
  8040  000B18  1178               	iorwf	(_temp_int+1)& (0+255),w,b
  8041  000B1A  A4D8               	btfss	status,2,c
  8042  000B1C  D02B               	goto	l8198
  8043                           
  8044                           ; BSR set to: 1
  8045                           ;main.c: 550:                 state = 0;
  8046  000B1E  0E00               	movlw	0
  8047  000B20  6F76               	movwf	(_state+1)& (0+255),b
  8048  000B22  0E00               	movlw	0
  8049  000B24  6F75               	movwf	_state& (0+255),b
  8050                           
  8051                           ; BSR set to: 1
  8052                           ;main.c: 551:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  8053  000B26  0E01               	movlw	1
  8054  000B28  ECC6  F020         	call	_lcdInst
  8055  000B2C  0E11               	movlw	17
  8056  000B2E  0101               	movlb	1	; () banked
  8057  000B30  6F00               	movwf	??_UI_main& (0+255),b
  8058  000B32  0E3A               	movlw	58
  8059  000B34                     u10037:
  8060  000B34  2EE8               	decfsz	wreg,f,c
  8061  000B36  D7FE               	bra	u10037
  8062  000B38  2F00               	decfsz	??_UI_main& (0+255),f,b
  8063  000B3A  D7FC               	bra	u10037
  8064  000B3C  F000               	nop	
  8065                           
  8066                           ;main.c: 552:                 printf("1 - Start");
  8067  000B3E  0EBF               	movlw	low STR_23
  8068  000B40  0100               	movlb	0	; () banked
  8069  000B42  6FED               	movwf	printf@fmt& (0+255),b
  8070  000B44  0EFF               	movlw	high STR_23
  8071  000B46  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8072  000B48  EC60  F020         	call	_printf	;wreg free
  8073  000B4C  0EC0               	movlw	192
  8074  000B4E  ECC6  F020         	call	_lcdInst
  8075                           
  8076                           ;main.c: 554:                 printf("2 - Summary");
  8077  000B52  0E4B               	movlw	low STR_24
  8078  000B54  0100               	movlb	0	; () banked
  8079  000B56  6FED               	movwf	printf@fmt& (0+255),b
  8080  000B58  0EFF               	movlw	high STR_24
  8081  000B5A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8082  000B5C  EC60  F020         	call	_printf	;wreg free
  8083  000B60  0E90               	movlw	144
  8084  000B62  ECC6  F020         	call	_lcdInst
  8085                           
  8086                           ;main.c: 556:                 printf("3 - Date&Time ");
  8087  000B66  0E71               	movlw	low STR_25
  8088  000B68  0100               	movlb	0	; () banked
  8089  000B6A  6FED               	movwf	printf@fmt& (0+255),b
  8090  000B6C  0EFE               	movlw	high STR_25
  8091  000B6E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8092  000B70  EC60  F020         	call	_printf	;wreg free
  8093  000B74                     l8198:
  8094                           
  8095                           ;main.c: 559:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  8096  000B74  0101               	movlb	1	; () banked
  8097  000B76  0577               	decf	_temp_int& (0+255),w,b
  8098  000B78  1178               	iorwf	(_temp_int+1)& (0+255),w,b
  8099  000B7A  A4D8               	btfss	status,2,c
  8100  000B7C  D041               	goto	l8226
  8101                           
  8102                           ; BSR set to: 1
  8103  000B7E  0E2A               	movlw	42
  8104  000B80  0100               	movlb	0	; () banked
  8105  000B82  19FF               	xorwf	_temp& (0+255),w,b
  8106  000B84  B4D8               	btfsc	status,2,c
  8107  000B86  D03C               	goto	l8226
  8108                           
  8109                           ; BSR set to: 0
  8110  000B88  0E23               	movlw	35
  8111  000B8A  19FF               	xorwf	_temp& (0+255),w,b
  8112  000B8C  B4D8               	btfsc	status,2,c
  8113  000B8E  D038               	goto	l8226
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;main.c: 560:                 state = 0;
  8117  000B90  0E00               	movlw	0
  8118  000B92  0101               	movlb	1	; () banked
  8119  000B94  6F76               	movwf	(_state+1)& (0+255),b
  8120  000B96  0E00               	movlw	0
  8121  000B98  6F75               	movwf	_state& (0+255),b
  8122                           
  8123                           ; BSR set to: 1
  8124                           ;main.c: 561:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  8125  000B9A  0E01               	movlw	1
  8126  000B9C  ECC6  F020         	call	_lcdInst
  8127  000BA0  0E11               	movlw	17
  8128  000BA2  0101               	movlb	1	; () banked
  8129  000BA4  6F00               	movwf	??_UI_main& (0+255),b
  8130  000BA6  0E3A               	movlw	58
  8131  000BA8                     u10047:
  8132  000BA8  2EE8               	decfsz	wreg,f,c
  8133  000BAA  D7FE               	bra	u10047
  8134  000BAC  2F00               	decfsz	??_UI_main& (0+255),f,b
  8135  000BAE  D7FC               	bra	u10047
  8136  000BB0  F000               	nop	
  8137                           
  8138                           ;main.c: 562:                 printf("Machine In Use");
  8139  000BB2  0E8F               	movlw	low STR_30
  8140  000BB4  0100               	movlb	0	; () banked
  8141  000BB6  6FED               	movwf	printf@fmt& (0+255),b
  8142  000BB8  0EFE               	movlw	high STR_30
  8143  000BBA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8144  000BBC  EC60  F020         	call	_printf	;wreg free
  8145  000BC0  0ED0               	movlw	208
  8146  000BC2  ECC6  F020         	call	_lcdInst
  8147                           
  8148                           ;main.c: 564:                 printf("     0-Menu     ");
  8149  000BC6  0EAA               	movlw	low STR_31
  8150  000BC8  0100               	movlb	0	; () banked
  8151  000BCA  6FED               	movwf	printf@fmt& (0+255),b
  8152  000BCC  0EFD               	movlw	high STR_31
  8153  000BCE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8154  000BD0  EC60  F020         	call	_printf	;wreg free
  8155                           
  8156                           ;main.c: 568:                 I2C_Master_Start();
  8157  000BD4  ECD7  F020         	call	_I2C_Master_Start	;wreg free
  8158                           
  8159                           ;main.c: 569:                 I2C_Master_Write(0b00010000);
  8160  000BD8  0E00               	movlw	0
  8161  000BDA  0100               	movlb	0	; () banked
  8162  000BDC  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8163  000BDE  0E10               	movlw	16
  8164  000BE0  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8165  000BE2  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  8166                           
  8167                           ;main.c: 570:                 I2C_Master_Write('1');
  8168  000BE6  0E00               	movlw	0
  8169  000BE8  0100               	movlb	0	; () banked
  8170  000BEA  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8171  000BEC  0E31               	movlw	49
  8172  000BEE  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8173  000BF0  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  8174                           
  8175                           ;main.c: 571:                 I2C_Master_Stop();
  8176  000BF4  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  8177                           
  8178                           ;main.c: 573:                 sens = 1;
  8179  000BF8  0E00               	movlw	0
  8180  000BFA  6E59               	movwf	_sens+1,c	;volatile
  8181  000BFC  0E01               	movlw	1
  8182  000BFE  6E58               	movwf	_sens,c	;volatile
  8183  000C00                     l8226:
  8184                           
  8185                           ;main.c: 576:                 if ((temp_int == 2)||(state == 2)){
  8186  000C00  0E02               	movlw	2
  8187  000C02  0101               	movlb	1	; () banked
  8188  000C04  1977               	xorwf	_temp_int& (0+255),w,b
  8189  000C06  1178               	iorwf	(_temp_int+1)& (0+255),w,b
  8190  000C08  B4D8               	btfsc	status,2,c
  8191  000C0A  D005               	goto	u8650
  8192                           
  8193                           ; BSR set to: 1
  8194  000C0C  0E02               	movlw	2
  8195  000C0E  1975               	xorwf	_state& (0+255),w,b
  8196  000C10  1176               	iorwf	(_state+1)& (0+255),w,b
  8197  000C12  A4D8               	btfss	status,2,c
  8198  000C14  D253               	goto	l8336
  8199  000C16                     u8650:
  8200                           
  8201                           ; BSR set to: 1
  8202                           ;main.c: 577:                     if ((temp_int == 2)){
  8203  000C16  0E02               	movlw	2
  8204  000C18  1977               	xorwf	_temp_int& (0+255),w,b
  8205  000C1A  1178               	iorwf	(_temp_int+1)& (0+255),w,b
  8206  000C1C  A4D8               	btfss	status,2,c
  8207  000C1E  D033               	goto	l8248
  8208                           
  8209                           ; BSR set to: 1
  8210                           ;main.c: 578:                         state = 2;
  8211  000C20  0E00               	movlw	0
  8212  000C22  6F76               	movwf	(_state+1)& (0+255),b
  8213  000C24  0E02               	movlw	2
  8214  000C26  6F75               	movwf	_state& (0+255),b
  8215                           
  8216                           ;main.c: 579:                         disp = 0;
  8217  000C28  0E00               	movlw	0
  8218  000C2A  6F74               	movwf	(_disp+1)& (0+255),b
  8219  000C2C  0E00               	movlw	0
  8220  000C2E  6F73               	movwf	_disp& (0+255),b
  8221                           
  8222                           ; BSR set to: 1
  8223                           ;main.c: 580:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8224  000C30  0E01               	movlw	1
  8225  000C32  ECC6  F020         	call	_lcdInst
  8226  000C36  0E11               	movlw	17
  8227  000C38  0101               	movlb	1	; () banked
  8228  000C3A  6F00               	movwf	??_UI_main& (0+255),b
  8229  000C3C  0E3A               	movlw	58
  8230  000C3E                     u10057:
  8231  000C3E  2EE8               	decfsz	wreg,f,c
  8232  000C40  D7FE               	bra	u10057
  8233  000C42  2F00               	decfsz	??_UI_main& (0+255),f,b
  8234  000C44  D7FC               	bra	u10057
  8235  000C46  F000               	nop	
  8236                           
  8237                           ;main.c: 581:                         printf("Op Time:");
  8238  000C48  0EDD               	movlw	low STR_32
  8239  000C4A  0100               	movlb	0	; () banked
  8240  000C4C  6FED               	movwf	printf@fmt& (0+255),b
  8241  000C4E  0EFF               	movlw	high STR_32
  8242  000C50  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8243  000C52  EC60  F020         	call	_printf	;wreg free
  8244  000C56  0EC0               	movlw	192
  8245  000C58  ECC6  F020         	call	_lcdInst
  8246                           
  8247                           ;main.c: 583:                         printf("%d", opTime);
  8248  000C5C  0E2E               	movlw	low (STR_60+13)
  8249  000C5E  0100               	movlb	0	; () banked
  8250  000C60  6FED               	movwf	printf@fmt& (0+255),b
  8251  000C62  0EFE               	movlw	high (STR_60+13)
  8252  000C64  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8253  000C66  C16D  F0EF         	movff	_opTime,?_printf+2
  8254  000C6A  C16E  F0F0         	movff	_opTime+1,?_printf+3
  8255  000C6E  EC60  F020         	call	_printf	;wreg free
  8256  000C72  0ED0               	movlw	208
  8257  000C74  ECC6  F020         	call	_lcdInst
  8258                           
  8259                           ;main.c: 585:                         printf("    0-Menu   #>");
  8260  000C78  0EEF               	movlw	low (STR_37+1)
  8261  000C7A  0100               	movlb	0	; () banked
  8262  000C7C  6FED               	movwf	printf@fmt& (0+255),b
  8263  000C7E  0EFD               	movlw	high (STR_37+1)
  8264  000C80  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8265  000C82  EC60  F020         	call	_printf	;wreg free
  8266  000C86                     l8248:
  8267                           
  8268                           ;main.c: 587:                     if ((temp == '*') && (disp != 0)){
  8269  000C86  0E2A               	movlw	42
  8270  000C88  0100               	movlb	0	; () banked
  8271  000C8A  19FF               	xorwf	_temp& (0+255),w,b
  8272  000C8C  A4D8               	btfss	status,2,c
  8273  000C8E  D00B               	goto	l521
  8274                           
  8275                           ; BSR set to: 0
  8276  000C90  0101               	movlb	1	; () banked
  8277  000C92  5173               	movf	_disp& (0+255),w,b
  8278  000C94  1174               	iorwf	(_disp+1)& (0+255),w,b
  8279  000C96  B4D8               	btfsc	status,2,c
  8280  000C98  D006               	goto	l521
  8281                           
  8282                           ; BSR set to: 1
  8283                           ;main.c: 588:                         disp = disp - 1;
  8284  000C9A  0EFF               	movlw	255
  8285  000C9C  2573               	addwf	_disp& (0+255),w,b
  8286  000C9E  6F73               	movwf	_disp& (0+255),b
  8287  000CA0  0EFF               	movlw	255
  8288  000CA2  2174               	addwfc	(_disp+1)& (0+255),w,b
  8289  000CA4  6F74               	movwf	(_disp+1)& (0+255),b
  8290  000CA6                     l521:
  8291                           
  8292                           ;main.c: 590:                     if ((temp == '#')&& (disp <12)){
  8293  000CA6  0E23               	movlw	35
  8294  000CA8  0100               	movlb	0	; () banked
  8295  000CAA  19FF               	xorwf	_temp& (0+255),w,b
  8296  000CAC  A4D8               	btfss	status,2,c
  8297  000CAE  D00B               	goto	l8258
  8298                           
  8299                           ; BSR set to: 0
  8300  000CB0  0101               	movlb	1	; () banked
  8301  000CB2  BF74               	btfsc	(_disp+1)& (0+255),7,b
  8302  000CB4  D006               	goto	u8700
  8303  000CB6  5174               	movf	(_disp+1)& (0+255),w,b
  8304  000CB8  E106               	bnz	l8258
  8305  000CBA  0E0C               	movlw	12
  8306  000CBC  5D73               	subwf	_disp& (0+255),w,b
  8307  000CBE  B0D8               	btfsc	status,0,c
  8308  000CC0  D002               	goto	l8258
  8309  000CC2                     u8700:
  8310                           
  8311                           ; BSR set to: 1
  8312                           ;main.c: 591:                         disp++;
  8313  000CC2  4B73               	infsnz	_disp& (0+255),f,b
  8314  000CC4  2B74               	incf	(_disp+1)& (0+255),f,b
  8315  000CC6                     l8258:
  8316                           
  8317                           ;main.c: 593:                     if (disp == 0){
  8318  000CC6  0101               	movlb	1	; () banked
  8319  000CC8  5173               	movf	_disp& (0+255),w,b
  8320  000CCA  1174               	iorwf	(_disp+1)& (0+255),w,b
  8321  000CCC  A4D8               	btfss	status,2,c
  8322  000CCE  D02B               	goto	l8274
  8323                           
  8324                           ; BSR set to: 1
  8325                           ;main.c: 594:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8326  000CD0  0E01               	movlw	1
  8327  000CD2  ECC6  F020         	call	_lcdInst
  8328  000CD6  0E11               	movlw	17
  8329  000CD8  0101               	movlb	1	; () banked
  8330  000CDA  6F00               	movwf	??_UI_main& (0+255),b
  8331  000CDC  0E3A               	movlw	58
  8332  000CDE                     u10067:
  8333  000CDE  2EE8               	decfsz	wreg,f,c
  8334  000CE0  D7FE               	bra	u10067
  8335  000CE2  2F00               	decfsz	??_UI_main& (0+255),f,b
  8336  000CE4  D7FC               	bra	u10067
  8337  000CE6  F000               	nop	
  8338                           
  8339                           ;main.c: 595:                         printf("Op Time:");
  8340  000CE8  0EDD               	movlw	low STR_32
  8341  000CEA  0100               	movlb	0	; () banked
  8342  000CEC  6FED               	movwf	printf@fmt& (0+255),b
  8343  000CEE  0EFF               	movlw	high STR_32
  8344  000CF0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8345  000CF2  EC60  F020         	call	_printf	;wreg free
  8346  000CF6  0EC0               	movlw	192
  8347  000CF8  ECC6  F020         	call	_lcdInst
  8348                           
  8349                           ;main.c: 597:                         printf("%d", cnt);
  8350  000CFC  0E2E               	movlw	low (STR_60+13)
  8351  000CFE  0100               	movlb	0	; () banked
  8352  000D00  6FED               	movwf	printf@fmt& (0+255),b
  8353  000D02  0EFE               	movlw	high (STR_60+13)
  8354  000D04  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8355  000D06  0E00               	movlw	0
  8356  000D08  6FF0               	movwf	(?_printf+3)& (0+255),b
  8357  000D0A  0E00               	movlw	0
  8358  000D0C  6FEF               	movwf	(?_printf+2)& (0+255),b
  8359  000D0E  EC60  F020         	call	_printf	;wreg free
  8360  000D12  0ED0               	movlw	208
  8361  000D14  ECC6  F020         	call	_lcdInst
  8362                           
  8363                           ;main.c: 599:                         printf("     0-Menu   #>");
  8364  000D18  0EEE               	movlw	low STR_37
  8365  000D1A  0100               	movlb	0	; () banked
  8366  000D1C  6FED               	movwf	printf@fmt& (0+255),b
  8367  000D1E  0EFD               	movlw	high STR_37
  8368  000D20  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8369  000D22  EC60  F020         	call	_printf	;wreg free
  8370  000D26                     l8274:
  8371                           
  8372                           ;main.c: 602:                     if (disp == 1){
  8373  000D26  0101               	movlb	1	; () banked
  8374  000D28  0573               	decf	_disp& (0+255),w,b
  8375  000D2A  1174               	iorwf	(_disp+1)& (0+255),w,b
  8376  000D2C  A4D8               	btfss	status,2,c
  8377  000D2E  D02F               	goto	l8290
  8378                           
  8379                           ; BSR set to: 1
  8380                           ;main.c: 603:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8381  000D30  0E01               	movlw	1
  8382  000D32  ECC6  F020         	call	_lcdInst
  8383  000D36  0E11               	movlw	17
  8384  000D38  0101               	movlb	1	; () banked
  8385  000D3A  6F00               	movwf	??_UI_main& (0+255),b
  8386  000D3C  0E3A               	movlw	58
  8387  000D3E                     u10077:
  8388  000D3E  2EE8               	decfsz	wreg,f,c
  8389  000D40  D7FE               	bra	u10077
  8390  000D42  2F00               	decfsz	??_UI_main& (0+255),f,b
  8391  000D44  D7FC               	bra	u10077
  8392  000D46  F000               	nop	
  8393                           
  8394                           ;main.c: 604:                         printf("No. Tires: %d",t_dep);
  8395  000D48  0ED8               	movlw	low STR_38
  8396  000D4A  0100               	movlb	0	; () banked
  8397  000D4C  6FED               	movwf	printf@fmt& (0+255),b
  8398  000D4E  0EFE               	movlw	high STR_38
  8399  000D50  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8400  000D52  C0FB  F0EF         	movff	UI_main@t_dep,?_printf+2
  8401  000D56  C0FC  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  8402  000D5A  EC60  F020         	call	_printf	;wreg free
  8403  000D5E  0EC0               	movlw	192
  8404  000D60  ECC6  F020         	call	_lcdInst
  8405                           
  8406                           ;main.c: 606:                         printf("No. Poles: %d", poles_detected);
  8407  000D64  0ECA               	movlw	low STR_39
  8408  000D66  0100               	movlb	0	; () banked
  8409  000D68  6FED               	movwf	printf@fmt& (0+255),b
  8410  000D6A  0EFE               	movlw	high STR_39
  8411  000D6C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8412  000D6E  C0FD  F0EF         	movff	UI_main@poles_detected,?_printf+2
  8413  000D72  C0FE  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  8414  000D76  EC60  F020         	call	_printf	;wreg free
  8415  000D7A  0ED0               	movlw	208
  8416  000D7C  ECC6  F020         	call	_lcdInst
  8417                           
  8418                           ;main.c: 608:                         printf("<*   0-Menu   #>");
  8419  000D80  0EFF               	movlw	low STR_40
  8420  000D82  0100               	movlb	0	; () banked
  8421  000D84  6FED               	movwf	printf@fmt& (0+255),b
  8422  000D86  0EFD               	movlw	high STR_40
  8423  000D88  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8424  000D8A  EC60  F020         	call	_printf	;wreg free
  8425  000D8E                     l8290:
  8426                           
  8427                           ;main.c: 611:                     if (disp > 1 && disp <11){
  8428  000D8E  0101               	movlb	1	; () banked
  8429  000D90  BF74               	btfsc	(_disp+1)& (0+255),7,b
  8430  000D92  D0CE               	goto	l8314
  8431  000D94  5174               	movf	(_disp+1)& (0+255),w,b
  8432  000D96  E104               	bnz	u8730
  8433  000D98  0E02               	movlw	2
  8434  000D9A  5D73               	subwf	_disp& (0+255),w,b
  8435  000D9C  A0D8               	btfss	status,0,c
  8436  000D9E  D0C8               	goto	l8314
  8437  000DA0                     u8730:
  8438                           
  8439                           ; BSR set to: 1
  8440  000DA0  BF74               	btfsc	(_disp+1)& (0+255),7,b
  8441  000DA2  D006               	goto	u8740
  8442  000DA4  5174               	movf	(_disp+1)& (0+255),w,b
  8443  000DA6  E103               	bnz	u8741
  8444  000DA8  0E0B               	movlw	11
  8445  000DAA  5D73               	subwf	_disp& (0+255),w,b
  8446  000DAC  B0D8               	btfsc	status,0,c
  8447  000DAE                     u8741:
  8448  000DAE  D0C0               	goto	l8314
  8449  000DB0                     u8740:
  8450                           
  8451                           ; BSR set to: 1
  8452                           ;main.c: 612:                         i = disp - 2;
  8453  000DB0  0EFE               	movlw	254
  8454  000DB2  2573               	addwf	_disp& (0+255),w,b
  8455  000DB4  6F71               	movwf	_i& (0+255),b
  8456  000DB6  0EFF               	movlw	255
  8457  000DB8  2174               	addwfc	(_disp+1)& (0+255),w,b
  8458  000DBA  6F72               	movwf	(_i+1)& (0+255),b
  8459                           
  8460                           ; BSR set to: 1
  8461                           ;main.c: 613:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8462  000DBC  0E01               	movlw	1
  8463  000DBE  ECC6  F020         	call	_lcdInst
  8464  000DC2  0E11               	movlw	17
  8465  000DC4  0101               	movlb	1	; () banked
  8466  000DC6  6F00               	movwf	??_UI_main& (0+255),b
  8467  000DC8  0E3A               	movlw	58
  8468  000DCA                     u10087:
  8469  000DCA  2EE8               	decfsz	wreg,f,c
  8470  000DCC  D7FE               	bra	u10087
  8471  000DCE  2F00               	decfsz	??_UI_main& (0+255),f,b
  8472  000DD0  D7FC               	bra	u10087
  8473  000DD2  F000               	nop	
  8474                           
  8475                           ;main.c: 614:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  8476  000DD4  0E98               	movlw	low STR_41
  8477  000DD6  0100               	movlb	0	; () banked
  8478  000DD8  6FED               	movwf	printf@fmt& (0+255),b
  8479  000DDA  0EFD               	movlw	high STR_41
  8480  000DDC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8481  000DDE  0E01               	movlw	1
  8482  000DE0  0101               	movlb	1	; () banked
  8483  000DE2  2571               	addwf	_i& (0+255),w,b
  8484  000DE4  0100               	movlb	0	; () banked
  8485  000DE6  6FEF               	movwf	(?_printf+2)& (0+255),b
  8486  000DE8  0E00               	movlw	0
  8487  000DEA  0101               	movlb	1	; () banked
  8488  000DEC  2172               	addwfc	(_i+1)& (0+255),w,b
  8489  000DEE  0100               	movlb	0	; () banked
  8490  000DF0  6FF0               	movwf	(?_printf+3)& (0+255),b
  8491  000DF2  C171  F100         	movff	_i,??_UI_main
  8492  000DF6  C172  F101         	movff	_i+1,??_UI_main+1
  8493  000DFA  0101               	movlb	1	; () banked
  8494  000DFC  90D8               	bcf	status,0,c
  8495  000DFE  3700               	rlcf	??_UI_main& (0+255),f,b
  8496  000E00  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8497  000E02  90D8               	bcf	status,0,c
  8498  000E04  3700               	rlcf	??_UI_main& (0+255),f,b
  8499  000E06  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8500  000E08  90D8               	bcf	status,0,c
  8501  000E0A  3700               	rlcf	??_UI_main& (0+255),f,b
  8502  000E0C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8503  000E0E  0E04               	movlw	low UI_main@Pole
  8504  000E10  2500               	addwf	??_UI_main& (0+255),w,b
  8505  000E12  6ED9               	movwf	fsr2l,c
  8506  000E14  0E01               	movlw	high UI_main@Pole
  8507  000E16  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8508  000E18  6EDA               	movwf	fsr2h,c
  8509  000E1A  CFDE F0F1          	movff	postinc2,?_printf+4
  8510  000E1E  CFDD F0F2          	movff	postdec2,?_printf+5
  8511  000E22  C171  F102         	movff	_i,??_UI_main+2
  8512  000E26  C172  F103         	movff	_i+1,??_UI_main+3
  8513  000E2A  90D8               	bcf	status,0,c
  8514  000E2C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8515  000E2E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8516  000E30  90D8               	bcf	status,0,c
  8517  000E32  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8518  000E34  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8519  000E36  90D8               	bcf	status,0,c
  8520  000E38  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8521  000E3A  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8522  000E3C  0E02               	movlw	2
  8523  000E3E  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8524  000E40  0E00               	movlw	0
  8525  000E42  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8526  000E44  0E04               	movlw	low UI_main@Pole
  8527  000E46  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8528  000E48  6ED9               	movwf	fsr2l,c
  8529  000E4A  0E01               	movlw	high UI_main@Pole
  8530  000E4C  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8531  000E4E  6EDA               	movwf	fsr2h,c
  8532  000E50  CFDE F0F3          	movff	postinc2,?_printf+6
  8533  000E54  CFDD F0F4          	movff	postdec2,?_printf+7
  8534  000E58  EC60  F020         	call	_printf	;wreg free
  8535  000E5C  0EC0               	movlw	192
  8536  000E5E  ECC6  F020         	call	_lcdInst
  8537                           
  8538                           ;main.c: 616:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8539  000E62  0E80               	movlw	low STR_42
  8540  000E64  0100               	movlb	0	; () banked
  8541  000E66  6FED               	movwf	printf@fmt& (0+255),b
  8542  000E68  0EFE               	movlw	high STR_42
  8543  000E6A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8544  000E6C  0E01               	movlw	1
  8545  000E6E  0101               	movlb	1	; () banked
  8546  000E70  2571               	addwf	_i& (0+255),w,b
  8547  000E72  0100               	movlb	0	; () banked
  8548  000E74  6FEF               	movwf	(?_printf+2)& (0+255),b
  8549  000E76  0E00               	movlw	0
  8550  000E78  0101               	movlb	1	; () banked
  8551  000E7A  2172               	addwfc	(_i+1)& (0+255),w,b
  8552  000E7C  0100               	movlb	0	; () banked
  8553  000E7E  6FF0               	movwf	(?_printf+3)& (0+255),b
  8554  000E80  C171  F100         	movff	_i,??_UI_main
  8555  000E84  C172  F101         	movff	_i+1,??_UI_main+1
  8556  000E88  0101               	movlb	1	; () banked
  8557  000E8A  90D8               	bcf	status,0,c
  8558  000E8C  3700               	rlcf	??_UI_main& (0+255),f,b
  8559  000E8E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8560  000E90  90D8               	bcf	status,0,c
  8561  000E92  3700               	rlcf	??_UI_main& (0+255),f,b
  8562  000E94  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8563  000E96  90D8               	bcf	status,0,c
  8564  000E98  3700               	rlcf	??_UI_main& (0+255),f,b
  8565  000E9A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8566  000E9C  0E04               	movlw	4
  8567  000E9E  2700               	addwf	??_UI_main& (0+255),f,b
  8568  000EA0  0E00               	movlw	0
  8569  000EA2  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8570  000EA4  0E04               	movlw	low UI_main@Pole
  8571  000EA6  2500               	addwf	??_UI_main& (0+255),w,b
  8572  000EA8  6ED9               	movwf	fsr2l,c
  8573  000EAA  0E01               	movlw	high UI_main@Pole
  8574  000EAC  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8575  000EAE  6EDA               	movwf	fsr2h,c
  8576  000EB0  CFDE F0F1          	movff	postinc2,?_printf+4
  8577  000EB4  CFDD F0F2          	movff	postdec2,?_printf+5
  8578  000EB8  EC60  F020         	call	_printf	;wreg free
  8579  000EBC  0E90               	movlw	144
  8580  000EBE  ECC6  F020         	call	_lcdInst
  8581                           
  8582                           ;main.c: 618:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8583  000EC2  0E3F               	movlw	low STR_43
  8584  000EC4  0100               	movlb	0	; () banked
  8585  000EC6  6FED               	movwf	printf@fmt& (0+255),b
  8586  000EC8  0EFF               	movlw	high STR_43
  8587  000ECA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8588  000ECC  0E01               	movlw	1
  8589  000ECE  0101               	movlb	1	; () banked
  8590  000ED0  2571               	addwf	_i& (0+255),w,b
  8591  000ED2  0100               	movlb	0	; () banked
  8592  000ED4  6FEF               	movwf	(?_printf+2)& (0+255),b
  8593  000ED6  0E00               	movlw	0
  8594  000ED8  0101               	movlb	1	; () banked
  8595  000EDA  2172               	addwfc	(_i+1)& (0+255),w,b
  8596  000EDC  0100               	movlb	0	; () banked
  8597  000EDE  6FF0               	movwf	(?_printf+3)& (0+255),b
  8598  000EE0  C171  F100         	movff	_i,??_UI_main
  8599  000EE4  C172  F101         	movff	_i+1,??_UI_main+1
  8600  000EE8  0101               	movlb	1	; () banked
  8601  000EEA  90D8               	bcf	status,0,c
  8602  000EEC  3700               	rlcf	??_UI_main& (0+255),f,b
  8603  000EEE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8604  000EF0  90D8               	bcf	status,0,c
  8605  000EF2  3700               	rlcf	??_UI_main& (0+255),f,b
  8606  000EF4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8607  000EF6  90D8               	bcf	status,0,c
  8608  000EF8  3700               	rlcf	??_UI_main& (0+255),f,b
  8609  000EFA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8610  000EFC  0E06               	movlw	6
  8611  000EFE  2700               	addwf	??_UI_main& (0+255),f,b
  8612  000F00  0E00               	movlw	0
  8613  000F02  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8614  000F04  0E04               	movlw	low UI_main@Pole
  8615  000F06  2500               	addwf	??_UI_main& (0+255),w,b
  8616  000F08  6ED9               	movwf	fsr2l,c
  8617  000F0A  0E01               	movlw	high UI_main@Pole
  8618  000F0C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8619  000F0E  6EDA               	movwf	fsr2h,c
  8620  000F10  CFDE F0F1          	movff	postinc2,?_printf+4
  8621  000F14  CFDD F0F2          	movff	postdec2,?_printf+5
  8622  000F18  EC60  F020         	call	_printf	;wreg free
  8623  000F1C  0ED0               	movlw	208
  8624  000F1E  ECC6  F020         	call	_lcdInst
  8625                           
  8626                           ;main.c: 620:                         printf("<*   0-Menu   #>");
  8627  000F22  0EFF               	movlw	low STR_40
  8628  000F24  0100               	movlb	0	; () banked
  8629  000F26  6FED               	movwf	printf@fmt& (0+255),b
  8630  000F28  0EFD               	movlw	high STR_40
  8631  000F2A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8632  000F2C  EC60  F020         	call	_printf	;wreg free
  8633  000F30                     l8314:
  8634                           
  8635                           ;main.c: 622:                     if (disp == 11){
  8636  000F30  0E0B               	movlw	11
  8637  000F32  0101               	movlb	1	; () banked
  8638  000F34  1973               	xorwf	_disp& (0+255),w,b
  8639  000F36  1174               	iorwf	(_disp+1)& (0+255),w,b
  8640  000F38  A4D8               	btfss	status,2,c
  8641  000F3A  D0C0               	goto	l8336
  8642                           
  8643                           ; BSR set to: 1
  8644                           ;main.c: 623:                         i = disp - 2;
  8645  000F3C  0EFE               	movlw	254
  8646  000F3E  2573               	addwf	_disp& (0+255),w,b
  8647  000F40  6F71               	movwf	_i& (0+255),b
  8648  000F42  0EFF               	movlw	255
  8649  000F44  2174               	addwfc	(_disp+1)& (0+255),w,b
  8650  000F46  6F72               	movwf	(_i+1)& (0+255),b
  8651                           
  8652                           ; BSR set to: 1
  8653                           ;main.c: 624:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8654  000F48  0E01               	movlw	1
  8655  000F4A  ECC6  F020         	call	_lcdInst
  8656  000F4E  0E11               	movlw	17
  8657  000F50  0101               	movlb	1	; () banked
  8658  000F52  6F00               	movwf	??_UI_main& (0+255),b
  8659  000F54  0E3A               	movlw	58
  8660  000F56                     u10097:
  8661  000F56  2EE8               	decfsz	wreg,f,c
  8662  000F58  D7FE               	bra	u10097
  8663  000F5A  2F00               	decfsz	??_UI_main& (0+255),f,b
  8664  000F5C  D7FC               	bra	u10097
  8665  000F5E  F000               	nop	
  8666                           
  8667                           ;main.c: 625:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  8668  000F60  0E98               	movlw	low STR_41
  8669  000F62  0100               	movlb	0	; () banked
  8670  000F64  6FED               	movwf	printf@fmt& (0+255),b
  8671  000F66  0EFD               	movlw	high STR_41
  8672  000F68  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8673  000F6A  0E01               	movlw	1
  8674  000F6C  0101               	movlb	1	; () banked
  8675  000F6E  2571               	addwf	_i& (0+255),w,b
  8676  000F70  0100               	movlb	0	; () banked
  8677  000F72  6FEF               	movwf	(?_printf+2)& (0+255),b
  8678  000F74  0E00               	movlw	0
  8679  000F76  0101               	movlb	1	; () banked
  8680  000F78  2172               	addwfc	(_i+1)& (0+255),w,b
  8681  000F7A  0100               	movlb	0	; () banked
  8682  000F7C  6FF0               	movwf	(?_printf+3)& (0+255),b
  8683  000F7E  C171  F100         	movff	_i,??_UI_main
  8684  000F82  C172  F101         	movff	_i+1,??_UI_main+1
  8685  000F86  0101               	movlb	1	; () banked
  8686  000F88  90D8               	bcf	status,0,c
  8687  000F8A  3700               	rlcf	??_UI_main& (0+255),f,b
  8688  000F8C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8689  000F8E  90D8               	bcf	status,0,c
  8690  000F90  3700               	rlcf	??_UI_main& (0+255),f,b
  8691  000F92  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8692  000F94  90D8               	bcf	status,0,c
  8693  000F96  3700               	rlcf	??_UI_main& (0+255),f,b
  8694  000F98  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8695  000F9A  0E04               	movlw	low UI_main@Pole
  8696  000F9C  2500               	addwf	??_UI_main& (0+255),w,b
  8697  000F9E  6ED9               	movwf	fsr2l,c
  8698  000FA0  0E01               	movlw	high UI_main@Pole
  8699  000FA2  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8700  000FA4  6EDA               	movwf	fsr2h,c
  8701  000FA6  CFDE F0F1          	movff	postinc2,?_printf+4
  8702  000FAA  CFDD F0F2          	movff	postdec2,?_printf+5
  8703  000FAE  C171  F102         	movff	_i,??_UI_main+2
  8704  000FB2  C172  F103         	movff	_i+1,??_UI_main+3
  8705  000FB6  90D8               	bcf	status,0,c
  8706  000FB8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8707  000FBA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8708  000FBC  90D8               	bcf	status,0,c
  8709  000FBE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8710  000FC0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8711  000FC2  90D8               	bcf	status,0,c
  8712  000FC4  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8713  000FC6  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8714  000FC8  0E02               	movlw	2
  8715  000FCA  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8716  000FCC  0E00               	movlw	0
  8717  000FCE  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8718  000FD0  0E04               	movlw	low UI_main@Pole
  8719  000FD2  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8720  000FD4  6ED9               	movwf	fsr2l,c
  8721  000FD6  0E01               	movlw	high UI_main@Pole
  8722  000FD8  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8723  000FDA  6EDA               	movwf	fsr2h,c
  8724  000FDC  CFDE F0F3          	movff	postinc2,?_printf+6
  8725  000FE0  CFDD F0F4          	movff	postdec2,?_printf+7
  8726  000FE4  EC60  F020         	call	_printf	;wreg free
  8727  000FE8  0EC0               	movlw	192
  8728  000FEA  ECC6  F020         	call	_lcdInst
  8729                           
  8730                           ;main.c: 627:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8731  000FEE  0E80               	movlw	low STR_42
  8732  000FF0  0100               	movlb	0	; () banked
  8733  000FF2  6FED               	movwf	printf@fmt& (0+255),b
  8734  000FF4  0EFE               	movlw	high STR_42
  8735  000FF6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8736  000FF8  0E01               	movlw	1
  8737  000FFA  0101               	movlb	1	; () banked
  8738  000FFC  2571               	addwf	_i& (0+255),w,b
  8739  000FFE  0100               	movlb	0	; () banked
  8740  001000  6FEF               	movwf	(?_printf+2)& (0+255),b
  8741  001002  0E00               	movlw	0
  8742  001004  0101               	movlb	1	; () banked
  8743  001006  2172               	addwfc	(_i+1)& (0+255),w,b
  8744  001008  0100               	movlb	0	; () banked
  8745  00100A  6FF0               	movwf	(?_printf+3)& (0+255),b
  8746  00100C  C171  F100         	movff	_i,??_UI_main
  8747  001010  C172  F101         	movff	_i+1,??_UI_main+1
  8748  001014  0101               	movlb	1	; () banked
  8749  001016  90D8               	bcf	status,0,c
  8750  001018  3700               	rlcf	??_UI_main& (0+255),f,b
  8751  00101A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8752  00101C  90D8               	bcf	status,0,c
  8753  00101E  3700               	rlcf	??_UI_main& (0+255),f,b
  8754  001020  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8755  001022  90D8               	bcf	status,0,c
  8756  001024  3700               	rlcf	??_UI_main& (0+255),f,b
  8757  001026  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8758  001028  0E04               	movlw	4
  8759  00102A  2700               	addwf	??_UI_main& (0+255),f,b
  8760  00102C  0E00               	movlw	0
  8761  00102E  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8762  001030  0E04               	movlw	low UI_main@Pole
  8763  001032  2500               	addwf	??_UI_main& (0+255),w,b
  8764  001034  6ED9               	movwf	fsr2l,c
  8765  001036  0E01               	movlw	high UI_main@Pole
  8766  001038  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8767  00103A  6EDA               	movwf	fsr2h,c
  8768  00103C  CFDE F0F1          	movff	postinc2,?_printf+4
  8769  001040  CFDD F0F2          	movff	postdec2,?_printf+5
  8770  001044  EC60  F020         	call	_printf	;wreg free
  8771  001048  0E90               	movlw	144
  8772  00104A  ECC6  F020         	call	_lcdInst
  8773                           
  8774                           ;main.c: 629:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8775  00104E  0E3F               	movlw	low STR_43
  8776  001050  0100               	movlb	0	; () banked
  8777  001052  6FED               	movwf	printf@fmt& (0+255),b
  8778  001054  0EFF               	movlw	high STR_43
  8779  001056  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8780  001058  0E01               	movlw	1
  8781  00105A  0101               	movlb	1	; () banked
  8782  00105C  2571               	addwf	_i& (0+255),w,b
  8783  00105E  0100               	movlb	0	; () banked
  8784  001060  6FEF               	movwf	(?_printf+2)& (0+255),b
  8785  001062  0E00               	movlw	0
  8786  001064  0101               	movlb	1	; () banked
  8787  001066  2172               	addwfc	(_i+1)& (0+255),w,b
  8788  001068  0100               	movlb	0	; () banked
  8789  00106A  6FF0               	movwf	(?_printf+3)& (0+255),b
  8790  00106C  C171  F100         	movff	_i,??_UI_main
  8791  001070  C172  F101         	movff	_i+1,??_UI_main+1
  8792  001074  0101               	movlb	1	; () banked
  8793  001076  90D8               	bcf	status,0,c
  8794  001078  3700               	rlcf	??_UI_main& (0+255),f,b
  8795  00107A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8796  00107C  90D8               	bcf	status,0,c
  8797  00107E  3700               	rlcf	??_UI_main& (0+255),f,b
  8798  001080  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8799  001082  90D8               	bcf	status,0,c
  8800  001084  3700               	rlcf	??_UI_main& (0+255),f,b
  8801  001086  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8802  001088  0E06               	movlw	6
  8803  00108A  2700               	addwf	??_UI_main& (0+255),f,b
  8804  00108C  0E00               	movlw	0
  8805  00108E  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8806  001090  0E04               	movlw	low UI_main@Pole
  8807  001092  2500               	addwf	??_UI_main& (0+255),w,b
  8808  001094  6ED9               	movwf	fsr2l,c
  8809  001096  0E01               	movlw	high UI_main@Pole
  8810  001098  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8811  00109A  6EDA               	movwf	fsr2h,c
  8812  00109C  CFDE F0F1          	movff	postinc2,?_printf+4
  8813  0010A0  CFDD F0F2          	movff	postdec2,?_printf+5
  8814  0010A4  EC60  F020         	call	_printf	;wreg free
  8815  0010A8  0ED0               	movlw	208
  8816  0010AA  ECC6  F020         	call	_lcdInst
  8817                           
  8818                           ;main.c: 631:                         printf("<*   0-Menu     ");
  8819  0010AE  0EBB               	movlw	low STR_48
  8820  0010B0  0100               	movlb	0	; () banked
  8821  0010B2  6FED               	movwf	printf@fmt& (0+255),b
  8822  0010B4  0EFD               	movlw	high STR_48
  8823  0010B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8824  0010B8  EC60  F020         	call	_printf	;wreg free
  8825  0010BC                     l8336:
  8826                           
  8827                           ;main.c: 634:             if (temp_int == 3){
  8828  0010BC  0E03               	movlw	3
  8829  0010BE  0101               	movlb	1	; () banked
  8830  0010C0  1977               	xorwf	_temp_int& (0+255),w,b
  8831  0010C2  1178               	iorwf	(_temp_int+1)& (0+255),w,b
  8832  0010C4  A4D8               	btfss	status,2,c
  8833  0010C6  D0B5               	goto	u8790
  8834                           
  8835                           ; BSR set to: 1
  8836                           ;main.c: 635:                 state = 0;
  8837  0010C8  0E00               	movlw	0
  8838  0010CA  6F76               	movwf	(_state+1)& (0+255),b
  8839  0010CC  0E00               	movlw	0
  8840  0010CE  6F75               	movwf	_state& (0+255),b
  8841                           
  8842                           ;main.c: 636:                 tick = 0;
  8843  0010D0  0E00               	movlw	0
  8844  0010D2  6F55               	movwf	UI_main@tick& (0+255),b
  8845  0010D4  0E00               	movlw	0
  8846  0010D6  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  8847  0010D8  0E00               	movlw	0
  8848  0010DA  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  8849  0010DC  0E00               	movlw	0
  8850  0010DE  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  8851                           
  8852                           ;main.c: 637:                 while(~key_was_pressed){
  8853  0010E0  D0A5               	goto	l8386
  8854  0010E2                     l8340:
  8855                           
  8856                           ; BSR set to: 1
  8857                           ;main.c: 638:                     if(tick % 1000 == 0){
  8858  0010E2  C155  F080         	movff	UI_main@tick,___llmod@dividend
  8859  0010E6  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  8860  0010EA  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  8861  0010EE  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  8862  0010F2  0EE8               	movlw	232
  8863  0010F4  0100               	movlb	0	; () banked
  8864  0010F6  6F84               	movwf	___llmod@divisor& (0+255),b
  8865  0010F8  0E03               	movlw	3
  8866  0010FA  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  8867  0010FC  0E00               	movlw	0
  8868  0010FE  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  8869  001100  0E00               	movlw	0
  8870  001102  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  8871  001104  EC05  F01E         	call	___llmod	;wreg free
  8872  001108  0100               	movlb	0	; () banked
  8873  00110A  5180               	movf	?___llmod& (0+255),w,b
  8874  00110C  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  8875  00110E  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  8876  001110  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  8877  001112  A4D8               	btfss	status,2,c
  8878  001114  D084               	goto	l8384
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;main.c: 639:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8882  001116  0E01               	movlw	1
  8883  001118  ECC6  F020         	call	_lcdInst
  8884  00111C  0E11               	movlw	17
  8885  00111E  0101               	movlb	1	; () banked
  8886  001120  6F00               	movwf	??_UI_main& (0+255),b
  8887  001122  0E3A               	movlw	58
  8888  001124                     u10107:
  8889  001124  2EE8               	decfsz	wreg,f,c
  8890  001126  D7FE               	bra	u10107
  8891  001128  2F00               	decfsz	??_UI_main& (0+255),f,b
  8892  00112A  D7FC               	bra	u10107
  8893  00112C  F000               	nop	
  8894                           
  8895                           ;main.c: 640:                         printf("DATE & TIME");
  8896  00112E  0E1B               	movlw	low STR_49
  8897  001130  0100               	movlb	0	; () banked
  8898  001132  6FED               	movwf	printf@fmt& (0+255),b
  8899  001134  0EFF               	movlw	high STR_49
  8900  001136  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8901  001138  EC60  F020         	call	_printf	;wreg free
  8902                           
  8903                           ;main.c: 641:                         I2C_Master_Init(100000);
  8904  00113C  0EA0               	movlw	160
  8905  00113E  0100               	movlb	0	; () banked
  8906  001140  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  8907  001142  0E86               	movlw	134
  8908  001144  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  8909  001146  0E01               	movlw	1
  8910  001148  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  8911  00114A  0E00               	movlw	0
  8912  00114C  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  8913  00114E  EC39  F01E         	call	_I2C_Master_Init	;wreg free
  8914                           
  8915                           ;main.c: 642:                         I2C_Master_Start();
  8916  001152  ECD7  F020         	call	_I2C_Master_Start	;wreg free
  8917                           
  8918                           ;main.c: 643:                         I2C_Master_Write(0b11010000);
  8919  001156  0E00               	movlw	0
  8920  001158  0100               	movlb	0	; () banked
  8921  00115A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8922  00115C  0ED0               	movlw	208
  8923  00115E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8924  001160  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  8925                           
  8926                           ;main.c: 644:                         I2C_Master_Write(0x00);
  8927  001164  0E00               	movlw	0
  8928  001166  0100               	movlb	0	; () banked
  8929  001168  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8930  00116A  0E00               	movlw	0
  8931  00116C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8932  00116E  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  8933                           
  8934                           ;main.c: 645:                         I2C_Master_Stop();
  8935  001172  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  8936                           
  8937                           ;main.c: 647:                         I2C_Master_Start();
  8938  001176  ECD7  F020         	call	_I2C_Master_Start	;wreg free
  8939                           
  8940                           ;main.c: 648:                         I2C_Master_Write(0b11010001);
  8941  00117A  0E00               	movlw	0
  8942  00117C  0100               	movlb	0	; () banked
  8943  00117E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8944  001180  0ED1               	movlw	209
  8945  001182  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8946  001184  ECCE  F020         	call	_I2C_Master_Write	;wreg free
  8947                           
  8948                           ;main.c: 649:                         for(unsigned char i = 0; i < 6; i++){
  8949  001188  0E00               	movlw	0
  8950  00118A  0101               	movlb	1	; () banked
  8951  00118C  6F59               	movwf	UI_main@i& (0+255),b
  8952  00118E                     l8364:
  8953                           
  8954                           ; BSR set to: 1
  8955  00118E  0E05               	movlw	5
  8956  001190  6559               	cpfsgt	UI_main@i& (0+255),b
  8957  001192  D001               	goto	l8368
  8958  001194  D00D               	goto	l8374
  8959  001196                     l8368:
  8960                           
  8961                           ; BSR set to: 1
  8962                           ;main.c: 650:                             time[i] = I2C_Master_Read(0);
  8963  001196  0E66               	movlw	low _time
  8964  001198  2559               	addwf	UI_main@i& (0+255),w,b
  8965  00119A  6ED9               	movwf	fsr2l,c
  8966  00119C  6ADA               	clrf	fsr2h,c
  8967  00119E  0E01               	movlw	high _time
  8968  0011A0  22DA               	addwfc	fsr2h,f,c
  8969  0011A2  0E00               	movlw	0
  8970  0011A4  EC4B  F020         	call	_I2C_Master_Read
  8971  0011A8  6EDF               	movwf	indf2,c
  8972                           
  8973                           ;main.c: 651:                         }
  8974  0011AA  0101               	movlb	1	; () banked
  8975  0011AC  2B59               	incf	UI_main@i& (0+255),f,b
  8976  0011AE  D7EF               	goto	l8364
  8977  0011B0                     l8374:
  8978                           
  8979                           ; BSR set to: 1
  8980                           ;main.c: 652:                         time[6] = I2C_Master_Read(1);
  8981  0011B0  0E01               	movlw	1
  8982  0011B2  EC4B  F020         	call	_I2C_Master_Read
  8983  0011B6  0101               	movlb	1	; () banked
  8984  0011B8  6F6C               	movwf	(_time+6)& (0+255),b
  8985                           
  8986                           ;main.c: 653:                         I2C_Master_Stop();
  8987  0011BA  ECD3  F020         	call	_I2C_Master_Stop	;wreg free
  8988  0011BE  0EC0               	movlw	192
  8989  0011C0  ECC6  F020         	call	_lcdInst
  8990                           
  8991                           ;main.c: 657:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  8992  0011C4  0E9E               	movlw	low STR_50
  8993  0011C6  0100               	movlb	0	; () banked
  8994  0011C8  6FED               	movwf	printf@fmt& (0+255),b
  8995  0011CA  0EFE               	movlw	high STR_50
  8996  0011CC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8997  0011CE  C16C  F0EF         	movff	_time+6,?_printf+2
  8998  0011D2  6BF0               	clrf	(?_printf+3)& (0+255),b
  8999  0011D4  C16B  F0F1         	movff	_time+5,?_printf+4
  9000  0011D8  6BF2               	clrf	(?_printf+5)& (0+255),b
  9001  0011DA  C16A  F0F3         	movff	_time+4,?_printf+6
  9002  0011DE  6BF4               	clrf	(?_printf+7)& (0+255),b
  9003  0011E0  EC60  F020         	call	_printf	;wreg free
  9004  0011E4  0E90               	movlw	144
  9005  0011E6  ECC6  F020         	call	_lcdInst
  9006                           
  9007                           ;main.c: 659:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  9008  0011EA  0EAD               	movlw	low STR_51
  9009  0011EC  0100               	movlb	0	; () banked
  9010  0011EE  6FED               	movwf	printf@fmt& (0+255),b
  9011  0011F0  0EFE               	movlw	high STR_51
  9012  0011F2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  9013  0011F4  C168  F0EF         	movff	_time+2,?_printf+2
  9014  0011F8  6BF0               	clrf	(?_printf+3)& (0+255),b
  9015  0011FA  C167  F0F1         	movff	_time+1,?_printf+4
  9016  0011FE  6BF2               	clrf	(?_printf+5)& (0+255),b
  9017  001200  C166  F0F3         	movff	_time,?_printf+6
  9018  001204  6BF4               	clrf	(?_printf+7)& (0+255),b
  9019  001206  EC60  F020         	call	_printf	;wreg free
  9020  00120A  0ED0               	movlw	208
  9021  00120C  ECC6  F020         	call	_lcdInst
  9022                           
  9023                           ;main.c: 661:                         printf("     0-Menu     ");
  9024  001210  0EAA               	movlw	low STR_31
  9025  001212  0100               	movlb	0	; () banked
  9026  001214  6FED               	movwf	printf@fmt& (0+255),b
  9027  001216  0EFD               	movlw	high STR_31
  9028  001218  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  9029  00121A  EC60  F020         	call	_printf	;wreg free
  9030  00121E                     l8384:
  9031                           
  9032                           ;main.c: 664:                     tick++;
  9033  00121E  0E01               	movlw	1
  9034  001220  0101               	movlb	1	; () banked
  9035  001222  2755               	addwf	UI_main@tick& (0+255),f,b
  9036  001224  0E00               	movlw	0
  9037  001226  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  9038  001228  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  9039  00122A  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  9040  00122C                     l8386:
  9041                           
  9042                           ; BSR set to: 1
  9043                           ;main.c: 637:                 while(~key_was_pressed){
  9044  00122C  057B               	decf	_key_was_pressed& (0+255),w,b	;volatile
  9045  00122E  A4D8               	btfss	status,2,c
  9046  001230  D758               	goto	l8340
  9047  001232                     u8790:
  9048                           
  9049                           ;main.c: 530:     while(sens==0){
  9050  001232  5058               	movf	_sens,w,c	;volatile
  9051  001234  1059               	iorwf	_sens+1,w,c	;volatile
  9052  001236  A4D8               	btfss	status,2,c
  9053  001238  0012               	return	
  9054  00123A  D437               	goto	l8160
  9055  00123C                     __end_of_UI_main:
  9056                           	opt callstack 0
  9057                           
  9058 ;; *************** function _printf *****************
  9059 ;; Defined at:
  9060 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  9063 ;;		 -> STR_65(10), STR_64(11), STR_63(11), STR_62(12), 
  9064 ;;		 -> STR_61(16), STR_60(16), STR_59(14), STR_58(17), 
  9065 ;;		 -> STR_57(12), STR_56(10), STR_55(13), STR_54(8), 
  9066 ;;		 -> STR_53(3), STR_52(17), STR_51(15), STR_50(15), 
  9067 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
  9068 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
  9069 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
  9070 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
  9071 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
  9072 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(5), 
  9073 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  9074 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  9075 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  9076 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  9077 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  9078 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  9079 ;;		 -> STR_1(10), 
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  ap              2  121[BANK0 ] PTR void [1]
  9082 ;;		 -> ?_printf(2), 
  9083 ;;  ret             2    0        int 
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  2  109[BANK0 ] int 
  9086 ;; Registers used:
  9087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9093 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9094 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9096 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9097 ;;Total ram usage:       14 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; Hardware stack levels required when called:   13
  9100 ;; This function calls:
  9101 ;;		_vfprintf
  9102 ;; This function is called by:
  9103 ;;		_actuators_main
  9104 ;;		_stepper2
  9105 ;;		_stepper2_back
  9106 ;;		_full_drive
  9107 ;;		_print_echo
  9108 ;;		_ultrasonic_main
  9109 ;;		_number_deploy
  9110 ;;		_UI_main
  9111 ;;		_brake
  9112 ;;		_main
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116                           	psect	text20
  9117  0040C0                     __ptext20:
  9118                           	opt callstack 0
  9119  0040C0                     _printf:
  9120                           	opt callstack 16
  9121                           
  9122                           ;incstack = 0
  9123  0040C0  0EEF               	movlw	low (?_printf+2)
  9124  0040C2  0100               	movlb	0	; () banked
  9125  0040C4  6FF9               	movwf	printf@ap& (0+255),b
  9126  0040C6  0E00               	movlw	high (?_printf+2)
  9127  0040C8  6FFA               	movwf	(printf@ap+1)& (0+255),b
  9128                           
  9129                           ; BSR set to: 0
  9130  0040CA  0E00               	movlw	0
  9131  0040CC  6FE5               	movwf	vfprintf@fp& (0+255),b
  9132  0040CE  0E00               	movlw	0
  9133  0040D0  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  9134  0040D2  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  9135  0040D6  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  9136  0040DA  0EF9               	movlw	low printf@ap
  9137  0040DC  6FE9               	movwf	vfprintf@ap& (0+255),b
  9138  0040DE  0E00               	movlw	high printf@ap
  9139  0040E0  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  9140  0040E2  EC94  F01E         	call	_vfprintf	;wreg free
  9141  0040E6  0012               	return		;funcret
  9142  0040E8                     __end_of_printf:
  9143                           	opt callstack 0
  9144                           
  9145 ;; *************** function _vfprintf *****************
  9146 ;; Defined at:
  9147 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  9150 ;;		 -> NULL(0), 
  9151 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  9152 ;;		 -> STR_65(10), STR_64(11), STR_63(11), STR_62(12), 
  9153 ;;		 -> STR_61(16), STR_60(16), STR_59(14), STR_58(17), 
  9154 ;;		 -> STR_57(12), STR_56(10), STR_55(13), STR_54(8), 
  9155 ;;		 -> STR_53(3), STR_52(17), STR_51(15), STR_50(15), 
  9156 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
  9157 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
  9158 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
  9159 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
  9160 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
  9161 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(5), 
  9162 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  9163 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  9164 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  9165 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  9166 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  9167 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  9168 ;;		 -> STR_1(10), 
  9169 ;;  ap              2  105[BANK0 ] PTR PTR void 
  9170 ;;		 -> printf@ap(2), 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  9173 ;;		 -> STR_65(10), STR_64(11), STR_63(11), STR_62(12), 
  9174 ;;		 -> STR_61(16), STR_60(16), STR_59(14), STR_58(17), 
  9175 ;;		 -> STR_57(12), STR_56(10), STR_55(13), STR_54(8), 
  9176 ;;		 -> STR_53(3), STR_52(17), STR_51(15), STR_50(15), 
  9177 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
  9178 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
  9179 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
  9180 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
  9181 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
  9182 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(5), 
  9183 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  9184 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  9185 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  9186 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  9187 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  9188 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  9189 ;;		 -> STR_1(10), 
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  2  101[BANK0 ] int 
  9192 ;; Registers used:
  9193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9199 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9200 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;Total ram usage:        8 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; Hardware stack levels required when called:   12
  9206 ;; This function calls:
  9207 ;;		_vfpfcnvrt
  9208 ;; This function is called by:
  9209 ;;		_printf
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           	psect	text21
  9214  003D28                     __ptext21:
  9215                           	opt callstack 0
  9216  003D28                     _vfprintf:
  9217                           	opt callstack 16
  9218                           
  9219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9220                           
  9221                           ;incstack = 0
  9222  003D28  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  9223  003D2C  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9224                           
  9225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9226  003D30  0E00               	movlw	0
  9227  003D32  6E49               	movwf	_nout+1,c
  9228  003D34  0E00               	movlw	0
  9229  003D36  6E48               	movwf	_nout,c
  9230                           
  9231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9232  003D38  D014               	goto	l7180
  9233  003D3A                     l7178:
  9234                           
  9235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9236  003D3A  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  9237  003D3E  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9238  003D42  0EEB               	movlw	low vfprintf@cfmt
  9239  003D44  0100               	movlb	0	; () banked
  9240  003D46  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  9241  003D48  0E00               	movlw	high vfprintf@cfmt
  9242  003D4A  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9243  003D4C  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  9244  003D50  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9245  003D54  ECC0  F00B         	call	_vfpfcnvrt	;wreg free
  9246  003D58  0100               	movlb	0	; () banked
  9247  003D5A  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  9248  003D5C  2648               	addwf	_nout,f,c
  9249  003D5E  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  9250  003D60  2249               	addwfc	_nout+1,f,c
  9251  003D62                     l7180:
  9252                           
  9253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9254  003D62  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  9255  003D66  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9256  003D6A                     	if	0	;tblptru may be non-zero
  9257  003D6A                     	endif
  9258  003D6A                     	if	0	;tblptru may be non-zero
  9259  003D6A                     	endif
  9260  003D6A  0008               	tblrd		*
  9261  003D6C  50F5               	movf	tablat,w,c
  9262  003D6E  0900               	iorlw	0
  9263  003D70  A4D8               	btfss	status,2,c
  9264  003D72  D7E3               	goto	l7178
  9265                           
  9266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  9267  003D74  C048  F0E5         	movff	_nout,?_vfprintf
  9268  003D78  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  9269  003D7C  0012               	return		;funcret
  9270  003D7E                     __end_of_vfprintf:
  9271                           	opt callstack 0
  9272                           
  9273 ;; *************** function _vfpfcnvrt *****************
  9274 ;; Defined at:
  9275 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  9278 ;;		 -> NULL(0), 
  9279 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  9280 ;;		 -> vfprintf@cfmt(2), 
  9281 ;;  ap              2   74[BANK0 ] PTR PTR void 
  9282 ;;		 -> printf@ap(2), 
  9283 ;; Auto vars:     Size  Location     Type
  9284 ;;  llu             8   88[BANK0 ] unsigned long long 
  9285 ;;  ll              8   80[BANK0 ] long long 
  9286 ;;  f               4    0        long long 
  9287 ;;  vp              3    0        PTR void 
  9288 ;;  ct              3    0        unsigned char [3]
  9289 ;;  cp              3    0        PTR unsigned char 
  9290 ;;  done            2   97[BANK0 ] int 
  9291 ;;  i               2    0        int 
  9292 ;;  c               1   96[BANK0 ] unsigned char 
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  2   70[BANK0 ] int 
  9295 ;; Registers used:
  9296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9302 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9303 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;Total ram usage:       31 bytes
  9307 ;; Hardware stack levels used:    1
  9308 ;; Hardware stack levels required when called:   11
  9309 ;; This function calls:
  9310 ;;		_atoi
  9311 ;;		_dtoa
  9312 ;;		_fputc
  9313 ;;		_isdigit
  9314 ;;		_xtoa
  9315 ;; This function is called by:
  9316 ;;		_vfprintf
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text22
  9321  001780                     __ptext22:
  9322                           	opt callstack 0
  9323  001780                     _vfpfcnvrt:
  9324                           	opt callstack 16
  9325                           
  9326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9327                           
  9328                           ;incstack = 0
  9329  001780  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9330  001784  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9331  001788  CFDE FFF6          	movff	postinc2,tblptrl
  9332  00178C  CFDD FFF7          	movff	postdec2,tblptrh
  9333  001790                     	if	0	;tblptru may be non-zero
  9334  001790                     	endif
  9335  001790                     	if	0	;tblptru may be non-zero
  9336  001790                     	endif
  9337  001790  0008               	tblrd		*
  9338  001792  50F5               	movf	tablat,w,c
  9339  001794  0A25               	xorlw	37
  9340  001796  A4D8               	btfss	status,2,c
  9341  001798  D1AD               	goto	l7158
  9342                           
  9343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9344  00179A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9345  00179E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9346  0017A2  2ADE               	incf	postinc2,f,c
  9347  0017A4  0E00               	movlw	0
  9348  0017A6  22DD               	addwfc	postdec2,f,c
  9349                           
  9350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9351  0017A8  0E00               	movlw	0
  9352  0017AA  6E4B               	movwf	_width+1,c
  9353  0017AC  0E00               	movlw	0
  9354  0017AE  6E4A               	movwf	_width,c
  9355  0017B0  C04A  F04E         	movff	_width,_flags
  9356  0017B4  C04B  F04F         	movff	_width+1,_flags+1
  9357                           
  9358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9359  0017B8  684C               	setf	_prec,c
  9360  0017BA  684D               	setf	_prec+1,c
  9361                           
  9362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  9363  0017BC  0E00               	movlw	0
  9364  0017BE  0100               	movlb	0	; () banked
  9365  0017C0  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9366  0017C2  0E00               	movlw	0
  9367  0017C4  D014               	goto	L2
  9368  0017C6                     l7070:
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  9372  0017C6  804E               	bsf	_flags,0,c
  9373  0017C8                     l7072:
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  9377  0017C8  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9378  0017CC  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9379  0017D0  2ADE               	incf	postinc2,f,c
  9380  0017D2  0E00               	movlw	0
  9381  0017D4  22DD               	addwfc	postdec2,f,c
  9382                           
  9383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  9384  0017D6  D02E               	goto	l7096
  9385  0017D8                     l7074:
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  9389  0017D8  824E               	bsf	_flags,1,c
  9390  0017DA  D7F6               	goto	l7072
  9391  0017DC                     l7078:
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9395  0017DC  844E               	bsf	_flags,2,c
  9396  0017DE  D7F4               	goto	l7072
  9397  0017E0                     l7082:
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9401  0017E0  864E               	bsf	_flags,3,c
  9402  0017E2  D7F2               	goto	l7072
  9403  0017E4                     l7086:
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9407  0017E4  884E               	bsf	_flags,4,c
  9408  0017E6  D7F0               	goto	l7072
  9409  0017E8                     l7090:
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9413  0017E8  0E00               	movlw	0
  9414  0017EA  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9415  0017EC  0E01               	movlw	1
  9416  0017EE                     L2:
  9417  0017EE  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  9418                           
  9419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9420  0017F0  D021               	goto	l7096
  9421  0017F2                     l7094:
  9422                           
  9423                           ; BSR set to: 0
  9424  0017F2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9425  0017F6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9426  0017FA  CFDE FFF6          	movff	postinc2,tblptrl
  9427  0017FE  CFDD FFF7          	movff	postdec2,tblptrh
  9428  001802                     	if	0	;tblptru may be non-zero
  9429  001802                     	endif
  9430  001802                     	if	0	;tblptru may be non-zero
  9431  001802                     	endif
  9432  001802  0008               	tblrd		*
  9433  001804  50F5               	movf	tablat,w,c
  9434  001806  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  9435  001808  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9436                           
  9437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9438                           ; Switch size 1, requested type "simple"
  9439                           ; Number of cases is 1, Range of values is 0 to 0
  9440                           ; switch strategies available:
  9441                           ; Name         Instructions Cycles
  9442                           ; simple_byte            4     3 (average)
  9443                           ;	Chosen strategy is simple_byte
  9444  00180A  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9445  00180C  0A00               	xorlw	0	; case 0
  9446  00180E  A4D8               	btfss	status,2,c
  9447  001810  D7EB               	goto	l7090
  9448                           
  9449                           ; BSR set to: 0
  9450                           ; Switch size 1, requested type "simple"
  9451                           ; Number of cases is 5, Range of values is 32 to 48
  9452                           ; switch strategies available:
  9453                           ; Name         Instructions Cycles
  9454                           ; simple_byte           16     9 (average)
  9455                           ;	Chosen strategy is simple_byte
  9456  001812  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  9457  001814  0A20               	xorlw	32	; case 32
  9458  001816  B4D8               	btfsc	status,2,c
  9459  001818  D7E3               	goto	l7082
  9460  00181A  0A03               	xorlw	3	; case 35
  9461  00181C  B4D8               	btfsc	status,2,c
  9462  00181E  D7E2               	goto	l7086
  9463  001820  0A08               	xorlw	8	; case 43
  9464  001822  B4D8               	btfsc	status,2,c
  9465  001824  D7DB               	goto	l7078
  9466  001826  0A06               	xorlw	6	; case 45
  9467  001828  B4D8               	btfsc	status,2,c
  9468  00182A  D7CD               	goto	l7070
  9469  00182C  0A1D               	xorlw	29	; case 48
  9470  00182E  B4D8               	btfsc	status,2,c
  9471  001830  D7D3               	goto	l7074
  9472  001832  D7DA               	goto	l7090
  9473  001834                     l7096:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9477  001834  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  9478  001836  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  9479  001838  B4D8               	btfsc	status,2,c
  9480  00183A  D7DB               	goto	l7094
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9484  00183C  B04E               	btfsc	_flags,0,c
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9488  00183E  924E               	bcf	_flags,1,c
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9492  001840  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9493  001844  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9494  001848  CFDE FFF6          	movff	postinc2,tblptrl
  9495  00184C  CFDD FFF7          	movff	postdec2,tblptrh
  9496  001850                     	if	0	;tblptru may be non-zero
  9497  001850                     	endif
  9498  001850                     	if	0	;tblptru may be non-zero
  9499  001850                     	endif
  9500  001850  0008               	tblrd		*
  9501  001852  50F5               	movf	tablat,w,c
  9502  001854  0A2A               	xorlw	42
  9503  001856  A4D8               	btfss	status,2,c
  9504  001858  D023               	goto	l7108
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9508  00185A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9509  00185E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9510  001862  2ADE               	incf	postinc2,f,c
  9511  001864  0E00               	movlw	0
  9512  001866  22DD               	addwfc	postdec2,f,c
  9513                           
  9514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9515  001868  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9516  00186C  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9517  001870  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9518  001874  0E02               	movlw	2
  9519  001876  26DE               	addwf	postinc2,f,c
  9520  001878  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9521  00187C  0E00               	movlw	0
  9522  00187E  22DD               	addwfc	postdec2,f,c
  9523  001880  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9524  001884  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9525  001888  CFDE F04A          	movff	postinc2,_width
  9526  00188C  CFDD F04B          	movff	postdec2,_width+1
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9530  001890  AE4B               	btfss	_width+1,7,c
  9531  001892  D040               	goto	u7570
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9535  001894  804E               	bsf	_flags,0,c
  9536                           
  9537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9538  001896  6C4A               	negf	_width,c
  9539  001898  1E4B               	comf	_width+1,f,c
  9540  00189A  B0D8               	btfsc	status,0,c
  9541  00189C  2A4B               	incf	_width+1,f,c
  9542  00189E  D03A               	goto	u7570
  9543  0018A0                     l7108:
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9547  0018A0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9548  0018A4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9549  0018A8  CFDE F087          	movff	postinc2,atoi@s
  9550  0018AC  CFDD F088          	movff	postdec2,atoi@s+1
  9551  0018B0  EC83  F016         	call	_atoi	;wreg free
  9552  0018B4  C087  F04A         	movff	?_atoi,_width
  9553  0018B8  C088  F04B         	movff	?_atoi+1,_width+1
  9554                           
  9555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9556  0018BC  D007               	goto	l7112
  9557  0018BE                     l7110:
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9561  0018BE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9562  0018C2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9563  0018C6  2ADE               	incf	postinc2,f,c
  9564  0018C8  0E00               	movlw	0
  9565  0018CA  22DD               	addwfc	postdec2,f,c
  9566  0018CC                     l7112:
  9567  0018CC  0ED0               	movlw	208
  9568  0018CE  0100               	movlb	0	; () banked
  9569  0018D0  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  9570  0018D2  0EFF               	movlw	255
  9571  0018D4  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9572  0018D6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9573  0018DA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9574  0018DE  CFDE FFF6          	movff	postinc2,tblptrl
  9575  0018E2  CFDD FFF7          	movff	postdec2,tblptrh
  9576  0018E6                     	if	0	;tblptru may be non-zero
  9577  0018E6                     	endif
  9578  0018E6                     	if	0	;tblptru may be non-zero
  9579  0018E6                     	endif
  9580  0018E6  0008               	tblrd		*
  9581  0018E8  50F5               	movf	tablat,w,c
  9582  0018EA  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9583  0018EC  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  9584  0018EE  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  9585  0018F0  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  9586  0018F2  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9587  0018F4  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  9588  0018F6  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  9589  0018F8  E106               	bnz	u7550
  9590  0018FA  0E0A               	movlw	10
  9591  0018FC  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  9592  0018FE  B0D8               	btfsc	status,0,c
  9593  001900  D002               	goto	u7550
  9594  001902  0E01               	movlw	1
  9595  001904  D001               	goto	u7560
  9596  001906                     u7550:
  9597  001906  0E00               	movlw	0
  9598  001908                     u7560:
  9599  001908  6FE3               	movwf	_vfpfcnvrt$1276& (0+255),b
  9600  00190A  6BE4               	clrf	(_vfpfcnvrt$1276+1)& (0+255),b
  9601                           
  9602                           ; BSR set to: 0
  9603  00190C  51E3               	movf	_vfpfcnvrt$1276& (0+255),w,b
  9604  00190E  11E4               	iorwf	(_vfpfcnvrt$1276+1)& (0+255),w,b
  9605  001910  A4D8               	btfss	status,2,c
  9606  001912  D7D5               	goto	l7110
  9607  001914                     u7570:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9611  001914  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9612  001918  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9613  00191C  CFDE FFF6          	movff	postinc2,tblptrl
  9614  001920  CFDD FFF7          	movff	postdec2,tblptrh
  9615  001924                     	if	0	;tblptru may be non-zero
  9616  001924                     	endif
  9617  001924                     	if	0	;tblptru may be non-zero
  9618  001924                     	endif
  9619  001924  0008               	tblrd		*
  9620  001926  50F5               	movf	tablat,w,c
  9621  001928  0A64               	xorlw	100
  9622  00192A  B4D8               	btfsc	status,2,c
  9623  00192C  D00D               	goto	u7590
  9624                           
  9625                           ; BSR set to: 0
  9626  00192E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9627  001932  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9628  001936  CFDE FFF6          	movff	postinc2,tblptrl
  9629  00193A  CFDD FFF7          	movff	postdec2,tblptrh
  9630  00193E                     	if	0	;tblptru may be non-zero
  9631  00193E                     	endif
  9632  00193E                     	if	0	;tblptru may be non-zero
  9633  00193E                     	endif
  9634  00193E  0008               	tblrd		*
  9635  001940  50F5               	movf	tablat,w,c
  9636  001942  0A69               	xorlw	105
  9637  001944  A4D8               	btfss	status,2,c
  9638  001946  D03F               	goto	l7128
  9639  001948                     u7590:
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9643  001948  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9644  00194C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9645  001950  2ADE               	incf	postinc2,f,c
  9646  001952  0E00               	movlw	0
  9647  001954  22DD               	addwfc	postdec2,f,c
  9648                           
  9649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9650  001956  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9651  00195A  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9652  00195E  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9653  001962  0E02               	movlw	2
  9654  001964  26DE               	addwf	postinc2,f,c
  9655  001966  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9656  00196A  0E00               	movlw	0
  9657  00196C  22DD               	addwfc	postdec2,f,c
  9658  00196E  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9659  001972  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9660  001976  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  9661  00197A  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  9662  00197E  0E00               	movlw	0
  9663  001980  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9664  001982  0EFF               	movlw	-1
  9665  001984  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9666  001986  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9667  001988  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9668  00198A  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9669  00198C  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9670  00198E  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9674  001990  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  9675  001994  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9676  001998  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  9677  00199C  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9678  0019A0  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9679  0019A4  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9680  0019A8  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9681  0019AC  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9682  0019B0  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9683  0019B4  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9684  0019B8  EC71  F010         	call	_dtoa	;wreg free
  9685  0019BC  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  9686  0019C0  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9687  0019C4  0012               	return	
  9688  0019C6                     l7128:
  9689                           
  9690                           ; BSR set to: 0
  9691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9692  0019C6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9693  0019CA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9694  0019CE  CFDE FFF6          	movff	postinc2,tblptrl
  9695  0019D2  CFDD FFF7          	movff	postdec2,tblptrh
  9696  0019D6                     	if	0	;tblptru may be non-zero
  9697  0019D6                     	endif
  9698  0019D6                     	if	0	;tblptru may be non-zero
  9699  0019D6                     	endif
  9700  0019D6  0008               	tblrd		*
  9701  0019D8  50F5               	movf	tablat,w,c
  9702  0019DA  0A78               	xorlw	120
  9703  0019DC  B4D8               	btfsc	status,2,c
  9704  0019DE  D00D               	goto	u7610
  9705                           
  9706                           ; BSR set to: 0
  9707  0019E0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9708  0019E4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9709  0019E8  CFDE FFF6          	movff	postinc2,tblptrl
  9710  0019EC  CFDD FFF7          	movff	postdec2,tblptrh
  9711  0019F0                     	if	0	;tblptru may be non-zero
  9712  0019F0                     	endif
  9713  0019F0                     	if	0	;tblptru may be non-zero
  9714  0019F0                     	endif
  9715  0019F0  0008               	tblrd		*
  9716  0019F2  50F5               	movf	tablat,w,c
  9717  0019F4  0A58               	xorlw	88
  9718  0019F6  A4D8               	btfss	status,2,c
  9719  0019F8  D04D               	goto	l7142
  9720  0019FA                     u7610:
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9724  0019FA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9725  0019FE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9726  001A02  CFDE FFF6          	movff	postinc2,tblptrl
  9727  001A06  CFDD FFF7          	movff	postdec2,tblptrh
  9728  001A0A                     	if	0	;tblptru may be non-zero
  9729  001A0A                     	endif
  9730  001A0A                     	if	0	;tblptru may be non-zero
  9731  001A0A                     	endif
  9732  001A0A  0008               	tblrd		*
  9733  001A0C  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9737  001A10  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9738  001A14  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9739  001A18  2ADE               	incf	postinc2,f,c
  9740  001A1A  0E00               	movlw	0
  9741  001A1C  22DD               	addwfc	postdec2,f,c
  9742                           
  9743                           ; BSR set to: 0
  9744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9745  001A1E  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9746  001A22  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9747  001A26  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9748  001A2A  0E02               	movlw	2
  9749  001A2C  26DE               	addwf	postinc2,f,c
  9750  001A2E  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9751  001A32  0E00               	movlw	0
  9752  001A34  22DD               	addwfc	postdec2,f,c
  9753  001A36  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9754  001A3A  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9755  001A3E  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  9756  001A42  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  9757  001A46  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9758  001A4A  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9759  001A4E  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9760  001A50  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9761  001A52  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9762  001A54  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9763  001A56  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9764  001A58  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9768  001A5A  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  9769  001A5E  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9770  001A62  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  9771  001A66  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9772  001A6A  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9773  001A6E  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9774  001A72  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9775  001A76  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9776  001A7A  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9777  001A7E  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9778  001A82  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  9779  001A86  EC95  F011         	call	_xtoa	;wreg free
  9780  001A8A  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  9781  001A8E  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9782  001A92  0012               	return	
  9783  001A94                     l7142:
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9787  001A94  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9788  001A98  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9789  001A9C  CFDE FFF6          	movff	postinc2,tblptrl
  9790  001AA0  CFDD FFF7          	movff	postdec2,tblptrh
  9791  001AA4                     	if	0	;tblptru may be non-zero
  9792  001AA4                     	endif
  9793  001AA4                     	if	0	;tblptru may be non-zero
  9794  001AA4                     	endif
  9795  001AA4  0008               	tblrd		*
  9796  001AA6  50F5               	movf	tablat,w,c
  9797  001AA8  0A25               	xorlw	37
  9798  001AAA  A4D8               	btfss	status,2,c
  9799  001AAC  D017               	goto	l7152
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9803  001AAE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9804  001AB2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9805  001AB6  2ADE               	incf	postinc2,f,c
  9806  001AB8  0E00               	movlw	0
  9807  001ABA  22DD               	addwfc	postdec2,f,c
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9811  001ABC  0E00               	movlw	0
  9812  001ABE  6F85               	movwf	(fputc@c+1)& (0+255),b
  9813  001AC0  0E25               	movlw	37
  9814  001AC2  6F84               	movwf	fputc@c& (0+255),b
  9815  001AC4  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9816  001AC8  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9817  001ACC  ECCE  F01D         	call	_fputc	;wreg free
  9818  001AD0                     l7148:
  9819                           
  9820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9821  001AD0  0E00               	movlw	0
  9822  001AD2  0100               	movlb	0	; () banked
  9823  001AD4  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9824  001AD6  0E01               	movlw	1
  9825  001AD8  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9826  001ADA  0012               	return	
  9827  001ADC                     l7152:
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9831  001ADC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9832  001AE0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9833  001AE4  2ADE               	incf	postinc2,f,c
  9834  001AE6  0E00               	movlw	0
  9835  001AE8  22DD               	addwfc	postdec2,f,c
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9839  001AEA  0E00               	movlw	0
  9840  001AEC  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9841  001AEE  0E00               	movlw	0
  9842  001AF0  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9843  001AF2  0012               	return	
  9844  001AF4                     l7158:
  9845                           
  9846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9847  001AF4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9848  001AF8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9849  001AFC  CFDE FFF6          	movff	postinc2,tblptrl
  9850  001B00  CFDD FFF7          	movff	postdec2,tblptrh
  9851  001B04                     	if	0	;tblptru may be non-zero
  9852  001B04                     	endif
  9853  001B04                     	if	0	;tblptru may be non-zero
  9854  001B04                     	endif
  9855  001B04  0008               	tblrd		*
  9856  001B06  50F5               	movf	tablat,w,c
  9857  001B08  0100               	movlb	0	; () banked
  9858  001B0A  6F84               	movwf	fputc@c& (0+255),b
  9859  001B0C  6B85               	clrf	(fputc@c+1)& (0+255),b
  9860  001B0E  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9861  001B12  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9862  001B16  ECCE  F01D         	call	_fputc	;wreg free
  9863                           
  9864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9865  001B1A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9866  001B1E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9867  001B22  2ADE               	incf	postinc2,f,c
  9868  001B24  0E00               	movlw	0
  9869  001B26  22DD               	addwfc	postdec2,f,c
  9870  001B28  D7D3               	goto	l7148
  9871  001B2A                     __end_of_vfpfcnvrt:
  9872                           	opt callstack 0
  9873                           
  9874 ;; *************** function _xtoa *****************
  9875 ;; Defined at:
  9876 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9879 ;;		 -> NULL(0), 
  9880 ;;  d               8   33[BANK0 ] unsigned long long 
  9881 ;;  x               1   41[BANK0 ] unsigned char 
  9882 ;; Auto vars:     Size  Location     Type
  9883 ;;  n               8   58[BANK0 ] unsigned long long 
  9884 ;;  c               2   68[BANK0 ] int 
  9885 ;;  i               2   66[BANK0 ] int 
  9886 ;;  w               2   56[BANK0 ] int 
  9887 ;;  p               2   54[BANK0 ] int 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  2   31[BANK0 ] int 
  9890 ;; Registers used:
  9891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9897 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9898 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9899 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9900 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9901 ;;Total ram usage:       39 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; Hardware stack levels required when called:   10
  9904 ;; This function calls:
  9905 ;;		_isalpha
  9906 ;;		_isupper
  9907 ;;		_pad
  9908 ;;		_toupper
  9909 ;; This function is called by:
  9910 ;;		_vfpfcnvrt
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text23
  9915  00232A                     __ptext23:
  9916                           	opt callstack 0
  9917  00232A                     _xtoa:
  9918                           	opt callstack 16
  9919                           
  9920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9921                           
  9922                           ;incstack = 0
  9923  00232A  AE4D               	btfss	_prec+1,7,c
  9924                           
  9925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9926  00232C  924E               	bcf	_flags,1,c
  9927                           
  9928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9929  00232E  BE4D               	btfsc	_prec+1,7,c
  9930  002330  D005               	goto	u7270
  9931  002332  504D               	movf	_prec+1,w,c
  9932  002334  E109               	bnz	l686
  9933  002336  044C               	decf	_prec,w,c
  9934  002338  B0D8               	btfsc	status,0,c
  9935  00233A  D006               	goto	l686
  9936  00233C                     u7270:
  9937  00233C  0E00               	movlw	0
  9938  00233E  0100               	movlb	0	; () banked
  9939  002340  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  9940  002342  0E01               	movlw	1
  9941  002344  6FB6               	movwf	xtoa@p& (0+255),b
  9942  002346  D004               	goto	l688
  9943  002348                     l686:
  9944  002348  C04C  F0B6         	movff	_prec,xtoa@p
  9945  00234C  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  9946  002350                     l688:
  9947                           
  9948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9949  002350  C04A  F0B8         	movff	_width,xtoa@w
  9950  002354  C04B  F0B9         	movff	_width+1,xtoa@w+1
  9951                           
  9952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9953  002358  A84E               	btfss	_flags,4,c
  9954  00235A  D005               	goto	l6962
  9955                           
  9956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9957  00235C  0100               	movlb	0	; () banked
  9958  00235E  0EFE               	movlw	254
  9959  002360  27B8               	addwf	xtoa@w& (0+255),f,b
  9960  002362  0EFF               	movlw	255
  9961  002364  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  9962  002366                     l6962:
  9963                           
  9964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9965  002366  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  9966  00236A  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  9967  00236E  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  9968  002372  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  9969  002376  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  9970  00237A  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  9971  00237E  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  9972  002382  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  9973                           
  9974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9975  002386  0E00               	movlw	0
  9976  002388  0100               	movlb	0	; () banked
  9977  00238A  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  9978  00238C  0E1F               	movlw	31
  9979  00238E  6FC2               	movwf	xtoa@i& (0+255),b
  9980                           
  9981                           ; BSR set to: 0
  9982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9983  002390  0E00               	movlw	0
  9984  002392  0102               	movlb	2	; () banked
  9985  002394  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9986                           
  9987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9988  002396  D094               	goto	l6998
  9989  002398                     l6968:
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9993  002398  07C2               	decf	xtoa@i& (0+255),f,b
  9994  00239A  A0D8               	btfss	status,0,c
  9995  00239C  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9999  00239E  0E0F               	movlw	15
 10000  0023A0  15BA               	andwf	xtoa@n& (0+255),w,b
 10001  0023A2  6FC4               	movwf	xtoa@c& (0+255),b
 10002  0023A4  6BC5               	clrf	(xtoa@c+1)& (0+255),b
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 10006  0023A6  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
 10007  0023A8  D008               	goto	l6976
 10008  0023AA  51C5               	movf	(xtoa@c+1)& (0+255),w,b
 10009  0023AC  E104               	bnz	u7290
 10010  0023AE  0E0A               	movlw	10
 10011  0023B0  5DC4               	subwf	xtoa@c& (0+255),w,b
 10012  0023B2  A0D8               	btfss	status,0,c
 10013  0023B4  D002               	goto	l6976
 10014  0023B6                     u7290:
 10015                           
 10016                           ; BSR set to: 0
 10017  0023B6  0E57               	movlw	87
 10018  0023B8  D001               	goto	L3
 10019  0023BA                     l6976:
 10020                           
 10021                           ; BSR set to: 0
 10022  0023BA  0E30               	movlw	48
 10023  0023BC                     L3:
 10024  0023BC  25C4               	addwf	xtoa@c& (0+255),w,b
 10025  0023BE  6FC4               	movwf	xtoa@c& (0+255),b
 10026  0023C0  0E00               	movlw	0
 10027  0023C2  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
 10028  0023C4  6FC5               	movwf	(xtoa@c+1)& (0+255),b
 10029                           
 10030                           ; BSR set to: 0
 10031                           
 10032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 10033  0023C6  0EBF               	movlw	191
 10034  0023C8  6FAA               	movwf	??_xtoa& (0+255),b
 10035  0023CA  0EFF               	movlw	255
 10036  0023CC  6FAB               	movwf	(??_xtoa+1)& (0+255),b
 10037  0023CE  51A9               	movf	xtoa@x& (0+255),w,b
 10038  0023D0  6FAC               	movwf	(??_xtoa+2)& (0+255),b
 10039  0023D2  6BAD               	clrf	(??_xtoa+3)& (0+255),b
 10040  0023D4  51AA               	movf	??_xtoa& (0+255),w,b
 10041  0023D6  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
 10042  0023D8  51AB               	movf	(??_xtoa+1)& (0+255),w,b
 10043  0023DA  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
 10044  0023DC  51AD               	movf	(??_xtoa+3)& (0+255),w,b
 10045  0023DE  E106               	bnz	u7300
 10046  0023E0  0E1A               	movlw	26
 10047  0023E2  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
 10048  0023E4  B0D8               	btfsc	status,0,c
 10049  0023E6  D002               	goto	u7300
 10050  0023E8  0E01               	movlw	1
 10051  0023EA  D001               	goto	u7310
 10052  0023EC                     u7300:
 10053  0023EC  0E00               	movlw	0
 10054  0023EE                     u7310:
 10055  0023EE  6FB2               	movwf	_xtoa$1261& (0+255),b
 10056  0023F0  6BB3               	clrf	(_xtoa$1261+1)& (0+255),b
 10057                           
 10058                           ; BSR set to: 0
 10059  0023F2  51B2               	movf	_xtoa$1261& (0+255),w,b
 10060  0023F4  11B3               	iorwf	(_xtoa$1261+1)& (0+255),w,b
 10061  0023F6  B4D8               	btfsc	status,2,c
 10062  0023F8  D027               	goto	l6990
 10063                           
 10064                           ; BSR set to: 0
 10065  0023FA  0E9F               	movlw	159
 10066  0023FC  6FAA               	movwf	??_xtoa& (0+255),b
 10067  0023FE  0EFF               	movlw	255
 10068  002400  6FAB               	movwf	(??_xtoa+1)& (0+255),b
 10069  002402  0E20               	movlw	32
 10070  002404  11C4               	iorwf	xtoa@c& (0+255),w,b
 10071  002406  6FAC               	movwf	(??_xtoa+2)& (0+255),b
 10072  002408  0E00               	movlw	0
 10073  00240A  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
 10074  00240C  6FAD               	movwf	(??_xtoa+3)& (0+255),b
 10075  00240E  51AA               	movf	??_xtoa& (0+255),w,b
 10076  002410  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
 10077  002412  51AB               	movf	(??_xtoa+1)& (0+255),w,b
 10078  002414  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
 10079  002416  51AD               	movf	(??_xtoa+3)& (0+255),w,b
 10080  002418  E106               	bnz	u7330
 10081  00241A  0E1A               	movlw	26
 10082  00241C  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
 10083  00241E  B0D8               	btfsc	status,0,c
 10084  002420  D002               	goto	u7330
 10085  002422  0E01               	movlw	1
 10086  002424  D001               	goto	u7340
 10087  002426                     u7330:
 10088  002426  0E00               	movlw	0
 10089  002428                     u7340:
 10090  002428  6FB4               	movwf	_xtoa$1262& (0+255),b
 10091  00242A  6BB5               	clrf	(_xtoa$1262+1)& (0+255),b
 10092                           
 10093                           ; BSR set to: 0
 10094  00242C  51B4               	movf	_xtoa$1262& (0+255),w,b
 10095  00242E  11B5               	iorwf	(_xtoa$1262+1)& (0+255),w,b
 10096  002430  B4D8               	btfsc	status,2,c
 10097  002432  D00A               	goto	l6990
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 10101  002434  C0C4  F086         	movff	xtoa@c,toupper@c
 10102  002438  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
 10103  00243C  ECE8  F01E         	call	_toupper	;wreg free
 10104  002440  C086  F0C4         	movff	?_toupper,xtoa@c
 10105  002444  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
 10106  002448                     l6990:
 10107                           
 10108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 10109  002448  0E80               	movlw	low _dbuf
 10110  00244A  0100               	movlb	0	; () banked
 10111  00244C  25C2               	addwf	xtoa@i& (0+255),w,b
 10112  00244E  6ED9               	movwf	fsr2l,c
 10113  002450  0E02               	movlw	high _dbuf
 10114  002452  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
 10115  002454  6EDA               	movwf	fsr2h,c
 10116  002456  C0C4  FFDF         	movff	xtoa@c,indf2
 10117                           
 10118                           ; BSR set to: 0
 10119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 10120  00245A  07B6               	decf	xtoa@p& (0+255),f,b
 10121  00245C  A0D8               	btfss	status,0,c
 10122  00245E  07B7               	decf	(xtoa@p+1)& (0+255),f,b
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 10126  002460  07B8               	decf	xtoa@w& (0+255),f,b
 10127  002462  A0D8               	btfss	status,0,c
 10128  002464  07B9               	decf	(xtoa@w+1)& (0+255),f,b
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 10132  002466  C0BA  F0AA         	movff	xtoa@n,??_xtoa
 10133  00246A  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
 10134  00246E  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
 10135  002472  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
 10136  002476  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
 10137  00247A  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
 10138  00247E  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
 10139  002482  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
 10140  002486  0E05               	movlw	5
 10141  002488  D009               	goto	u7360
 10142  00248A                     u7365:
 10143  00248A  90D8               	bcf	status,0,c
 10144  00248C  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
 10145  00248E  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
 10146  002490  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
 10147  002492  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
 10148  002494  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
 10149  002496  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
 10150  002498  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
 10151  00249A  33AA               	rrcf	??_xtoa& (0+255),f,b
 10152  00249C                     u7360:
 10153  00249C  2EE8               	decfsz	wreg,f,c
 10154  00249E  D7F5               	goto	u7365
 10155  0024A0  C0AA  F0BA         	movff	??_xtoa,xtoa@n
 10156  0024A4  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
 10157  0024A8  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
 10158  0024AC  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
 10159  0024B0  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
 10160  0024B4  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
 10161  0024B8  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
 10162  0024BC  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
 10163  0024C0                     l6998:
 10164                           
 10165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10166  0024C0  0100               	movlb	0	; () banked
 10167  0024C2  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
 10168  0024C4  D020               	goto	u7410
 10169  0024C6  51C3               	movf	(xtoa@i+1)& (0+255),w,b
 10170  0024C8  E104               	bnz	u7370
 10171  0024CA  0E02               	movlw	2
 10172  0024CC  5DC2               	subwf	xtoa@i& (0+255),w,b
 10173  0024CE  A0D8               	btfss	status,0,c
 10174  0024D0  D01A               	goto	u7410
 10175  0024D2                     u7370:
 10176                           
 10177                           ; BSR set to: 0
 10178  0024D2  51BA               	movf	xtoa@n& (0+255),w,b
 10179  0024D4  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
 10180  0024D6  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
 10181  0024D8  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
 10182  0024DA  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
 10183  0024DC  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
 10184  0024DE  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
 10185  0024E0  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
 10186  0024E2  A4D8               	btfss	status,2,c
 10187  0024E4  D759               	goto	l6968
 10188                           
 10189                           ; BSR set to: 0
 10190  0024E6  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
 10191  0024E8  D005               	goto	u7390
 10192  0024EA  51B7               	movf	(xtoa@p+1)& (0+255),w,b
 10193  0024EC  E102               	bnz	u7391
 10194  0024EE  05B6               	decf	xtoa@p& (0+255),w,b
 10195  0024F0  B0D8               	btfsc	status,0,c
 10196  0024F2                     u7391:
 10197  0024F2  D752               	goto	l6968
 10198  0024F4                     u7390:
 10199                           
 10200                           ; BSR set to: 0
 10201  0024F4  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
 10202  0024F6  D007               	goto	u7410
 10203  0024F8  51B9               	movf	(xtoa@w+1)& (0+255),w,b
 10204  0024FA  E103               	bnz	u7400
 10205  0024FC  05B8               	decf	xtoa@w& (0+255),w,b
 10206  0024FE  A0D8               	btfss	status,0,c
 10207  002500  D002               	goto	u7410
 10208  002502                     u7400:
 10209                           
 10210                           ; BSR set to: 0
 10211  002502  B24E               	btfsc	_flags,1,c
 10212  002504  D749               	goto	l6968
 10213  002506                     u7410:
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 10217  002506  A84E               	btfss	_flags,4,c
 10218  002508  D016               	goto	l7014
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10222  00250A  07C2               	decf	xtoa@i& (0+255),f,b
 10223  00250C  A0D8               	btfss	status,0,c
 10224  00250E  07C3               	decf	(xtoa@i+1)& (0+255),f,b
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10228  002510  0E80               	movlw	low _dbuf
 10229  002512  25C2               	addwf	xtoa@i& (0+255),w,b
 10230  002514  6ED9               	movwf	fsr2l,c
 10231  002516  0E02               	movlw	high _dbuf
 10232  002518  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
 10233  00251A  6EDA               	movwf	fsr2h,c
 10234  00251C  C0A9  FFDF         	movff	xtoa@x,indf2
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10238  002520  07C2               	decf	xtoa@i& (0+255),f,b
 10239  002522  A0D8               	btfss	status,0,c
 10240  002524  07C3               	decf	(xtoa@i+1)& (0+255),f,b
 10241                           
 10242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10243  002526  0E80               	movlw	low _dbuf
 10244  002528  25C2               	addwf	xtoa@i& (0+255),w,b
 10245  00252A  6ED9               	movwf	fsr2l,c
 10246  00252C  0E02               	movlw	high _dbuf
 10247  00252E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
 10248  002530  6EDA               	movwf	fsr2h,c
 10249  002532  0E30               	movlw	48
 10250  002534  6EDF               	movwf	indf2,c
 10251  002536                     l7014:
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10255  002536  C09F  F094         	movff	xtoa@fp,pad@fp
 10256  00253A  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
 10257  00253E  0E80               	movlw	low _dbuf
 10258  002540  25C2               	addwf	xtoa@i& (0+255),w,b
 10259  002542  6F96               	movwf	pad@buf& (0+255),b
 10260  002544  0E02               	movlw	high _dbuf
 10261  002546  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
 10262  002548  6F97               	movwf	(pad@buf+1)& (0+255),b
 10263  00254A  C0B8  F098         	movff	xtoa@w,pad@p
 10264  00254E  C0B9  F099         	movff	xtoa@w+1,pad@p+1
 10265  002552  ECC4  F01C         	call	_pad	;wreg free
 10266  002556  C094  F09F         	movff	?_pad,?_xtoa
 10267  00255A  C095  F0A0         	movff	?_pad+1,?_xtoa+1
 10268  00255E  0012               	return		;funcret
 10269  002560                     __end_of_xtoa:
 10270                           	opt callstack 0
 10271                           
 10272 ;; *************** function _toupper *****************
 10273 ;; Defined at:
 10274 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  c               2    6[BANK0 ] int 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;		None
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  2    6[BANK0 ] int 
 10281 ;; Registers used:
 10282 ;;		wreg, status,2, status,0
 10283 ;; Tracked objects:
 10284 ;;		On entry : 0/0
 10285 ;;		On exit  : 0/0
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10292 ;;Total ram usage:        8 bytes
 10293 ;; Hardware stack levels used:    1
 10294 ;; Hardware stack levels required when called:    4
 10295 ;; This function calls:
 10296 ;;		_islower
 10297 ;; This function is called by:
 10298 ;;		_xtoa
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text24
 10303  003DD0                     __ptext24:
 10304                           	opt callstack 0
 10305  003DD0                     _toupper:
 10306                           	opt callstack 21
 10307                           
 10308                           ;incstack = 0
 10309  003DD0  0E9F               	movlw	159
 10310  003DD2  0100               	movlb	0	; () banked
 10311  003DD4  6F88               	movwf	??_toupper& (0+255),b
 10312  003DD6  0EFF               	movlw	255
 10313  003DD8  6F89               	movwf	(??_toupper+1)& (0+255),b
 10314  003DDA  C086  F08A         	movff	toupper@c,??_toupper+2
 10315  003DDE  C087  F08B         	movff	toupper@c+1,??_toupper+3
 10316  003DE2  5188               	movf	??_toupper& (0+255),w,b
 10317  003DE4  278A               	addwf	(??_toupper+2)& (0+255),f,b
 10318  003DE6  5189               	movf	(??_toupper+1)& (0+255),w,b
 10319  003DE8  238B               	addwfc	(??_toupper+3)& (0+255),f,b
 10320  003DEA  518B               	movf	(??_toupper+3)& (0+255),w,b
 10321  003DEC  E106               	bnz	u6910
 10322  003DEE  0E1A               	movlw	26
 10323  003DF0  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
 10324  003DF2  B0D8               	btfsc	status,0,c
 10325  003DF4  D002               	goto	u6910
 10326  003DF6  0E01               	movlw	1
 10327  003DF8  D001               	goto	u6920
 10328  003DFA                     u6910:
 10329  003DFA  0E00               	movlw	0
 10330  003DFC                     u6920:
 10331  003DFC  6F8C               	movwf	_toupper$1826& (0+255),b
 10332  003DFE  6B8D               	clrf	(_toupper$1826+1)& (0+255),b
 10333                           
 10334                           ; BSR set to: 0
 10335  003E00  518C               	movf	_toupper$1826& (0+255),w,b
 10336  003E02  118D               	iorwf	(_toupper$1826+1)& (0+255),w,b
 10337  003E04  B4D8               	btfsc	status,2,c
 10338  003E06  D005               	goto	l1526
 10339                           
 10340                           ; BSR set to: 0
 10341  003E08  0E5F               	movlw	95
 10342  003E0A  1586               	andwf	toupper@c& (0+255),w,b
 10343  003E0C  6F86               	movwf	?_toupper& (0+255),b
 10344  003E0E  6B87               	clrf	(?_toupper+1)& (0+255),b
 10345  003E10  0012               	return	
 10346  003E12                     l1526:
 10347                           
 10348                           ; BSR set to: 0
 10349  003E12  C086  F086         	movff	toupper@c,?_toupper
 10350  003E16  C087  F087         	movff	toupper@c+1,?_toupper+1
 10351                           
 10352                           ; BSR set to: 0
 10353  003E1A  0012               	return		;funcret
 10354  003E1C                     __end_of_toupper:
 10355                           	opt callstack 0
 10356                           
 10357 ;; *************** function _islower *****************
 10358 ;; Defined at:
 10359 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;  c               2    0[BANK0 ] int 
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;		None
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  2    0[BANK0 ] int 
 10366 ;; Registers used:
 10367 ;;		wreg, status,2, status,0
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10373 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10375 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10376 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10377 ;;Total ram usage:        6 bytes
 10378 ;; Hardware stack levels used:    1
 10379 ;; Hardware stack levels required when called:    3
 10380 ;; This function calls:
 10381 ;;		Nothing
 10382 ;; This function is called by:
 10383 ;;		_toupper
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           	psect	text25
 10388  003FA4                     __ptext25:
 10389                           	opt callstack 0
 10390  003FA4                     _islower:
 10391                           	opt callstack 21
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;incstack = 0
 10395  003FA4  0E9F               	movlw	159
 10396  003FA6  0100               	movlb	0	; () banked
 10397  003FA8  6F82               	movwf	??_islower& (0+255),b
 10398  003FAA  0EFF               	movlw	255
 10399  003FAC  6F83               	movwf	(??_islower+1)& (0+255),b
 10400  003FAE  C080  F084         	movff	islower@c,??_islower+2
 10401  003FB2  C081  F085         	movff	islower@c+1,??_islower+3
 10402  003FB6  5182               	movf	??_islower& (0+255),w,b
 10403  003FB8  2784               	addwf	(??_islower+2)& (0+255),f,b
 10404  003FBA  5183               	movf	(??_islower+1)& (0+255),w,b
 10405  003FBC  2385               	addwfc	(??_islower+3)& (0+255),f,b
 10406  003FBE  5185               	movf	(??_islower+3)& (0+255),w,b
 10407  003FC0  E106               	bnz	u6800
 10408  003FC2  0E1A               	movlw	26
 10409  003FC4  5D84               	subwf	(??_islower+2)& (0+255),w,b
 10410  003FC6  B0D8               	btfsc	status,0,c
 10411  003FC8  D002               	goto	u6800
 10412  003FCA  0E01               	movlw	1
 10413  003FCC  D001               	goto	u6810
 10414  003FCE                     u6800:
 10415  003FCE  0E00               	movlw	0
 10416  003FD0                     u6810:
 10417  003FD0  6F80               	movwf	?_islower& (0+255),b
 10418  003FD2  6B81               	clrf	(?_islower+1)& (0+255),b
 10419                           
 10420                           ; BSR set to: 0
 10421  003FD4  0012               	return		;funcret
 10422  003FD6                     __end_of_islower:
 10423                           	opt callstack 0
 10424                           
 10425 ;; *************** function _isupper *****************
 10426 ;; Defined at:
 10427 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  c               2    0[BANK0 ] int 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  2    0[BANK0 ] int 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2, status,0
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10445 ;;Total ram usage:        6 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    3
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_xtoa
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text26
 10456  003FD6                     __ptext26:
 10457                           	opt callstack 0
 10458  003FD6                     _isupper:
 10459                           	opt callstack 22
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;incstack = 0
 10463  003FD6  0EBF               	movlw	191
 10464  003FD8  0100               	movlb	0	; () banked
 10465  003FDA  6F82               	movwf	??_isupper& (0+255),b
 10466  003FDC  0EFF               	movlw	255
 10467  003FDE  6F83               	movwf	(??_isupper+1)& (0+255),b
 10468  003FE0  C080  F084         	movff	isupper@c,??_isupper+2
 10469  003FE4  C081  F085         	movff	isupper@c+1,??_isupper+3
 10470  003FE8  5182               	movf	??_isupper& (0+255),w,b
 10471  003FEA  2784               	addwf	(??_isupper+2)& (0+255),f,b
 10472  003FEC  5183               	movf	(??_isupper+1)& (0+255),w,b
 10473  003FEE  2385               	addwfc	(??_isupper+3)& (0+255),f,b
 10474  003FF0  5185               	movf	(??_isupper+3)& (0+255),w,b
 10475  003FF2  E106               	bnz	u6870
 10476  003FF4  0E1A               	movlw	26
 10477  003FF6  5D84               	subwf	(??_isupper+2)& (0+255),w,b
 10478  003FF8  B0D8               	btfsc	status,0,c
 10479  003FFA  D002               	goto	u6870
 10480  003FFC  0E01               	movlw	1
 10481  003FFE  D001               	goto	u6880
 10482  004000                     u6870:
 10483  004000  0E00               	movlw	0
 10484  004002                     u6880:
 10485  004002  6F80               	movwf	?_isupper& (0+255),b
 10486  004004  6B81               	clrf	(?_isupper+1)& (0+255),b
 10487                           
 10488                           ; BSR set to: 0
 10489  004006  0012               	return		;funcret
 10490  004008                     __end_of_isupper:
 10491                           	opt callstack 0
 10492                           
 10493 ;; *************** function _isalpha *****************
 10494 ;; Defined at:
 10495 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;  c               2    0[BANK0 ] int 
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;		None
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  2    0[BANK0 ] int 
 10502 ;; Registers used:
 10503 ;;		wreg, status,2, status,0
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10511 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10512 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10513 ;;Total ram usage:        6 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; Hardware stack levels required when called:    3
 10516 ;; This function calls:
 10517 ;;		Nothing
 10518 ;; This function is called by:
 10519 ;;		_xtoa
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text27
 10524  003ED6                     __ptext27:
 10525                           	opt callstack 0
 10526  003ED6                     _isalpha:
 10527                           	opt callstack 22
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;incstack = 0
 10531  003ED6  0E9F               	movlw	159
 10532  003ED8  0100               	movlb	0	; () banked
 10533  003EDA  6F82               	movwf	??_isalpha& (0+255),b
 10534  003EDC  0EFF               	movlw	255
 10535  003EDE  6F83               	movwf	(??_isalpha+1)& (0+255),b
 10536  003EE0  0E20               	movlw	32
 10537  003EE2  1180               	iorwf	isalpha@c& (0+255),w,b
 10538  003EE4  6F84               	movwf	(??_isalpha+2)& (0+255),b
 10539  003EE6  0E00               	movlw	0
 10540  003EE8  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
 10541  003EEA  6F85               	movwf	(??_isalpha+3)& (0+255),b
 10542  003EEC  5182               	movf	??_isalpha& (0+255),w,b
 10543  003EEE  2784               	addwf	(??_isalpha+2)& (0+255),f,b
 10544  003EF0  5183               	movf	(??_isalpha+1)& (0+255),w,b
 10545  003EF2  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
 10546  003EF4  5185               	movf	(??_isalpha+3)& (0+255),w,b
 10547  003EF6  E106               	bnz	u6890
 10548  003EF8  0E1A               	movlw	26
 10549  003EFA  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
 10550  003EFC  B0D8               	btfsc	status,0,c
 10551  003EFE  D002               	goto	u6890
 10552  003F00  0E01               	movlw	1
 10553  003F02  D001               	goto	u6900
 10554  003F04                     u6890:
 10555  003F04  0E00               	movlw	0
 10556  003F06                     u6900:
 10557  003F06  6F80               	movwf	?_isalpha& (0+255),b
 10558  003F08  6B81               	clrf	(?_isalpha+1)& (0+255),b
 10559                           
 10560                           ; BSR set to: 0
 10561  003F0A  0012               	return		;funcret
 10562  003F0C                     __end_of_isalpha:
 10563                           	opt callstack 0
 10564                           
 10565 ;; *************** function _dtoa *****************
 10566 ;; Defined at:
 10567 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
 10570 ;;		 -> NULL(0), 
 10571 ;;  d               8   33[BANK0 ] long long 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;  n               8   57[BANK0 ] long long 
 10574 ;;  i               2   65[BANK0 ] int 
 10575 ;;  s               2   55[BANK0 ] int 
 10576 ;;  w               2   53[BANK0 ] int 
 10577 ;;  p               2   51[BANK0 ] int 
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  2   31[BANK0 ] int 
 10580 ;; Registers used:
 10581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10587 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10588 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10590 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;Total ram usage:       36 bytes
 10592 ;; Hardware stack levels used:    1
 10593 ;; Hardware stack levels required when called:   10
 10594 ;; This function calls:
 10595 ;;		___aodiv
 10596 ;;		___aomod
 10597 ;;		_abs
 10598 ;;		_pad
 10599 ;; This function is called by:
 10600 ;;		_vfpfcnvrt
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text28
 10605  0020E2                     __ptext28:
 10606                           	opt callstack 0
 10607  0020E2                     _dtoa:
 10608                           	opt callstack 16
 10609                           
 10610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 10611                           
 10612                           ; BSR set to: 0
 10613                           ;incstack = 0
 10614  0020E2  C0A1  F0B9         	movff	dtoa@d,dtoa@n
 10615  0020E6  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
 10616  0020EA  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
 10617  0020EE  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
 10618  0020F2  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
 10619  0020F6  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
 10620  0020FA  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
 10621  0020FE  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
 10622                           
 10623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 10624  002102  0100               	movlb	0	; () banked
 10625  002104  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
 10626  002106  D002               	goto	u7110
 10627  002108  0E01               	movlw	1
 10628  00210A  D001               	goto	u7120
 10629  00210C                     u7110:
 10630  00210C  0E00               	movlw	0
 10631  00210E                     u7120:
 10632  00210E  6FB7               	movwf	dtoa@s& (0+255),b
 10633  002110  6BB8               	clrf	(dtoa@s+1)& (0+255),b
 10634                           
 10635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10636  002112  51B7               	movf	dtoa@s& (0+255),w,b
 10637  002114  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10638  002116  B4D8               	btfsc	status,2,c
 10639  002118  D010               	goto	l6896
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10643  00211A  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
 10644  00211C  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
 10645  00211E  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
 10646  002120  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
 10647  002122  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
 10648  002124  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
 10649  002126  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
 10650  002128  6DB9               	negf	dtoa@n& (0+255),b
 10651  00212A  0E00               	movlw	0
 10652  00212C  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
 10653  00212E  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
 10654  002130  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
 10655  002132  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
 10656  002134  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
 10657  002136  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
 10658  002138  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
 10659  00213A                     l6896:
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10663  00213A  AE4D               	btfss	_prec+1,7,c
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10667  00213C  924E               	bcf	_flags,1,c
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10671  00213E  BE4D               	btfsc	_prec+1,7,c
 10672  002140  D005               	goto	u7150
 10673  002142  504D               	movf	_prec+1,w,c
 10674  002144  E108               	bnz	l661
 10675  002146  044C               	decf	_prec,w,c
 10676  002148  B0D8               	btfsc	status,0,c
 10677  00214A  D005               	goto	l661
 10678  00214C                     u7150:
 10679                           
 10680                           ; BSR set to: 0
 10681  00214C  0E00               	movlw	0
 10682  00214E  6FB4               	movwf	(dtoa@p+1)& (0+255),b
 10683  002150  0E01               	movlw	1
 10684  002152  6FB3               	movwf	dtoa@p& (0+255),b
 10685  002154  D004               	goto	l663
 10686  002156                     l661:
 10687                           
 10688                           ; BSR set to: 0
 10689  002156  C04C  F0B3         	movff	_prec,dtoa@p
 10690  00215A  C04D  F0B4         	movff	_prec+1,dtoa@p+1
 10691  00215E                     l663:
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10695  00215E  C04A  F0B5         	movff	_width,dtoa@w
 10696  002162  C04B  F0B6         	movff	_width+1,dtoa@w+1
 10697                           
 10698                           ; BSR set to: 0
 10699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10700  002166  51B7               	movf	dtoa@s& (0+255),w,b
 10701  002168  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10702  00216A  A4D8               	btfss	status,2,c
 10703  00216C  D002               	goto	u7170
 10704                           
 10705                           ; BSR set to: 0
 10706  00216E  A44E               	btfss	_flags,2,c
 10707  002170  D003               	goto	l6910
 10708  002172                     u7170:
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10712  002172  07B5               	decf	dtoa@w& (0+255),f,b
 10713  002174  A0D8               	btfss	status,0,c
 10714  002176  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10715  002178                     l6910:
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10719  002178  0E00               	movlw	0
 10720  00217A  6FC2               	movwf	(dtoa@i+1)& (0+255),b
 10721  00217C  0E1F               	movlw	31
 10722  00217E  6FC1               	movwf	dtoa@i& (0+255),b
 10723                           
 10724                           ; BSR set to: 0
 10725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10726  002180  0E00               	movlw	0
 10727  002182  0102               	movlb	2	; () banked
 10728  002184  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10729                           
 10730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10731  002186  D07D               	goto	l6924
 10732  002188                     l6914:
 10733                           
 10734                           ; BSR set to: 0
 10735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10736  002188  07C1               	decf	dtoa@i& (0+255),f,b
 10737  00218A  A0D8               	btfss	status,0,c
 10738  00218C  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10739                           
 10740                           ; BSR set to: 0
 10741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10742  00218E  0E80               	movlw	low _dbuf
 10743  002190  25C1               	addwf	dtoa@i& (0+255),w,b
 10744  002192  6ED9               	movwf	fsr2l,c
 10745  002194  0E02               	movlw	high _dbuf
 10746  002196  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10747  002198  6EDA               	movwf	fsr2h,c
 10748  00219A  C0B9  F080         	movff	dtoa@n,___aomod@dividend
 10749  00219E  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
 10750  0021A2  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
 10751  0021A6  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
 10752  0021AA  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
 10753  0021AE  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
 10754  0021B2  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
 10755  0021B6  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
 10756  0021BA  0E0A               	movlw	10
 10757  0021BC  6F88               	movwf	___aomod@divisor& (0+255),b
 10758  0021BE  0E00               	movlw	0
 10759  0021C0  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
 10760  0021C2  0E00               	movlw	0
 10761  0021C4  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
 10762  0021C6  0E00               	movlw	0
 10763  0021C8  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
 10764  0021CA  0E00               	movlw	0
 10765  0021CC  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
 10766  0021CE  0E00               	movlw	0
 10767  0021D0  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
 10768  0021D2  0E00               	movlw	0
 10769  0021D4  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
 10770  0021D6  0E00               	movlw	0
 10771  0021D8  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
 10772  0021DA  EC59  F018         	call	___aomod	;wreg free
 10773  0021DE  C080  F0A9         	movff	?___aomod,??_dtoa
 10774  0021E2  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
 10775  0021E6  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
 10776  0021EA  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
 10777  0021EE  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
 10778  0021F2  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
 10779  0021F6  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
 10780  0021FA  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
 10781  0021FE  C0A9  F092         	movff	??_dtoa,abs@a
 10782  002202  C0AB  F093         	movff	??_dtoa+2,abs@a+1
 10783  002206  EC86  F01F         	call	_abs	;wreg free
 10784  00220A  0100               	movlb	0	; () banked
 10785  00220C  5192               	movf	?_abs& (0+255),w,b
 10786  00220E  0F30               	addlw	48
 10787  002210  6EDF               	movwf	indf2,c
 10788                           
 10789                           ; BSR set to: 0
 10790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10791  002212  07B3               	decf	dtoa@p& (0+255),f,b
 10792  002214  A0D8               	btfss	status,0,c
 10793  002216  07B4               	decf	(dtoa@p+1)& (0+255),f,b
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10797  002218  07B5               	decf	dtoa@w& (0+255),f,b
 10798  00221A  A0D8               	btfss	status,0,c
 10799  00221C  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10803  00221E  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
 10804  002222  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
 10805  002226  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
 10806  00222A  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
 10807  00222E  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
 10808  002232  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
 10809  002236  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
 10810  00223A  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
 10811  00223E  0E0A               	movlw	10
 10812  002240  6F88               	movwf	___aodiv@divisor& (0+255),b
 10813  002242  0E00               	movlw	0
 10814  002244  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
 10815  002246  0E00               	movlw	0
 10816  002248  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
 10817  00224A  0E00               	movlw	0
 10818  00224C  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
 10819  00224E  0E00               	movlw	0
 10820  002250  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
 10821  002252  0E00               	movlw	0
 10822  002254  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
 10823  002256  0E00               	movlw	0
 10824  002258  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
 10825  00225A  0E00               	movlw	0
 10826  00225C  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
 10827  00225E  ECDE  F015         	call	___aodiv	;wreg free
 10828  002262  C080  F0B9         	movff	?___aodiv,dtoa@n
 10829  002266  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
 10830  00226A  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
 10831  00226E  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
 10832  002272  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
 10833  002276  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
 10834  00227A  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
 10835  00227E  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
 10836  002282                     l6924:
 10837                           
 10838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10839  002282  0100               	movlb	0	; () banked
 10840  002284  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
 10841  002286  D01F               	goto	u7220
 10842  002288  51C2               	movf	(dtoa@i+1)& (0+255),w,b
 10843  00228A  E103               	bnz	u7180
 10844  00228C  05C1               	decf	dtoa@i& (0+255),w,b
 10845  00228E  A0D8               	btfss	status,0,c
 10846  002290  D01A               	goto	u7220
 10847  002292                     u7180:
 10848                           
 10849                           ; BSR set to: 0
 10850  002292  51B9               	movf	dtoa@n& (0+255),w,b
 10851  002294  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
 10852  002296  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
 10853  002298  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
 10854  00229A  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
 10855  00229C  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
 10856  00229E  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
 10857  0022A0  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
 10858  0022A2  A4D8               	btfss	status,2,c
 10859  0022A4  D771               	goto	l6914
 10860                           
 10861                           ; BSR set to: 0
 10862  0022A6  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
 10863  0022A8  D005               	goto	u7200
 10864  0022AA  51B4               	movf	(dtoa@p+1)& (0+255),w,b
 10865  0022AC  E102               	bnz	u7201
 10866  0022AE  05B3               	decf	dtoa@p& (0+255),w,b
 10867  0022B0  B0D8               	btfsc	status,0,c
 10868  0022B2                     u7201:
 10869  0022B2  D76A               	goto	l6914
 10870  0022B4                     u7200:
 10871                           
 10872                           ; BSR set to: 0
 10873  0022B4  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
 10874  0022B6  D007               	goto	u7220
 10875  0022B8  51B6               	movf	(dtoa@w+1)& (0+255),w,b
 10876  0022BA  E103               	bnz	u7210
 10877  0022BC  05B5               	decf	dtoa@w& (0+255),w,b
 10878  0022BE  A0D8               	btfss	status,0,c
 10879  0022C0  D002               	goto	u7220
 10880  0022C2                     u7210:
 10881                           
 10882                           ; BSR set to: 0
 10883  0022C2  B24E               	btfsc	_flags,1,c
 10884  0022C4  D761               	goto	l6914
 10885  0022C6                     u7220:
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10889  0022C6  51B7               	movf	dtoa@s& (0+255),w,b
 10890  0022C8  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10891  0022CA  A4D8               	btfss	status,2,c
 10892  0022CC  D002               	goto	u7240
 10893                           
 10894                           ; BSR set to: 0
 10895  0022CE  A44E               	btfss	_flags,2,c
 10896  0022D0  D017               	goto	l6948
 10897  0022D2                     u7240:
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10901  0022D2  07C1               	decf	dtoa@i& (0+255),f,b
 10902  0022D4  A0D8               	btfss	status,0,c
 10903  0022D6  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10907  0022D8  51B7               	movf	dtoa@s& (0+255),w,b
 10908  0022DA  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10909  0022DC  A4D8               	btfss	status,2,c
 10910  0022DE  D004               	goto	l6944
 10911                           
 10912                           ; BSR set to: 0
 10913  0022E0  0E00               	movlw	0
 10914  0022E2  6FB2               	movwf	(_dtoa$1250+1)& (0+255),b
 10915  0022E4  0E2B               	movlw	43
 10916  0022E6  D003               	goto	L4
 10917  0022E8                     l6944:
 10918                           
 10919                           ; BSR set to: 0
 10920  0022E8  0E00               	movlw	0
 10921  0022EA  6FB2               	movwf	(_dtoa$1250+1)& (0+255),b
 10922  0022EC  0E2D               	movlw	45
 10923  0022EE                     L4:
 10924  0022EE  6FB1               	movwf	_dtoa$1250& (0+255),b
 10925                           
 10926                           ; BSR set to: 0
 10927  0022F0  0E80               	movlw	low _dbuf
 10928  0022F2  25C1               	addwf	dtoa@i& (0+255),w,b
 10929  0022F4  6ED9               	movwf	fsr2l,c
 10930  0022F6  0E02               	movlw	high _dbuf
 10931  0022F8  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10932  0022FA  6EDA               	movwf	fsr2h,c
 10933  0022FC  C0B1  FFDF         	movff	_dtoa$1250,indf2
 10934  002300                     l6948:
 10935                           
 10936                           ; BSR set to: 0
 10937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10938  002300  C09F  F094         	movff	dtoa@fp,pad@fp
 10939  002304  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
 10940  002308  0E80               	movlw	low _dbuf
 10941  00230A  25C1               	addwf	dtoa@i& (0+255),w,b
 10942  00230C  6F96               	movwf	pad@buf& (0+255),b
 10943  00230E  0E02               	movlw	high _dbuf
 10944  002310  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10945  002312  6F97               	movwf	(pad@buf+1)& (0+255),b
 10946  002314  C0B5  F098         	movff	dtoa@w,pad@p
 10947  002318  C0B6  F099         	movff	dtoa@w+1,pad@p+1
 10948  00231C  ECC4  F01C         	call	_pad	;wreg free
 10949  002320  C094  F09F         	movff	?_pad,?_dtoa
 10950  002324  C095  F0A0         	movff	?_pad+1,?_dtoa+1
 10951  002328  0012               	return		;funcret
 10952  00232A                     __end_of_dtoa:
 10953                           	opt callstack 0
 10954                           
 10955 ;; *************** function _pad *****************
 10956 ;; Defined at:
 10957 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
 10960 ;;		 -> NULL(0), 
 10961 ;;  buf             2   22[BANK0 ] PTR unsigned char 
 10962 ;;		 -> dbuf(32), 
 10963 ;;  p               2   24[BANK0 ] int 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;  w               2   29[BANK0 ] int 
 10966 ;;  i               2   27[BANK0 ] int 
 10967 ;; Return value:  Size  Location     Type
 10968 ;;                  2   20[BANK0 ] int 
 10969 ;; Registers used:
 10970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10971 ;; Tracked objects:
 10972 ;;		On entry : 0/0
 10973 ;;		On exit  : 0/0
 10974 ;;		Unchanged: 0/0
 10975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10976 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10977 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;Total ram usage:       11 bytes
 10981 ;; Hardware stack levels used:    1
 10982 ;; Hardware stack levels required when called:    9
 10983 ;; This function calls:
 10984 ;;		_fputc
 10985 ;;		_fputs
 10986 ;;		_strlen
 10987 ;; This function is called by:
 10988 ;;		_dtoa
 10989 ;;		_xtoa
 10990 ;; This function uses a non-reentrant model
 10991 ;;
 10992                           
 10993                           	psect	text29
 10994  003988                     __ptext29:
 10995                           	opt callstack 0
 10996  003988                     _pad:
 10997                           	opt callstack 16
 10998                           
 10999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 11000                           
 11001                           ;incstack = 0
 11002  003988  A04E               	btfss	_flags,0,c
 11003  00398A  D00A               	goto	l6752
 11004                           
 11005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 11006  00398C  C096  F08D         	movff	pad@buf,fputs@s
 11007  003990  C097  F08E         	movff	pad@buf+1,fputs@s+1
 11008  003994  C094  F08F         	movff	pad@fp,fputs@fp
 11009  003998  C095  F090         	movff	pad@fp+1,fputs@fp+1
 11010  00399C  EC4D  F01F         	call	_fputs	;wreg free
 11011  0039A0                     l6752:
 11012                           
 11013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 11014  0039A0  0100               	movlb	0	; () banked
 11015  0039A2  BF99               	btfsc	(pad@p+1)& (0+255),7,b
 11016  0039A4  D005               	goto	l6756
 11017                           
 11018                           ; BSR set to: 0
 11019  0039A6  C098  F09D         	movff	pad@p,pad@w
 11020  0039AA  C099  F09E         	movff	pad@p+1,pad@w+1
 11021  0039AE  D004               	goto	l650
 11022  0039B0                     l6756:
 11023                           
 11024                           ; BSR set to: 0
 11025  0039B0  0E00               	movlw	0
 11026  0039B2  6F9E               	movwf	(pad@w+1)& (0+255),b
 11027  0039B4  0E00               	movlw	0
 11028  0039B6  6F9D               	movwf	pad@w& (0+255),b
 11029  0039B8                     l650:
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 11033  0039B8  0E00               	movlw	0
 11034  0039BA  6F9C               	movwf	(pad@i+1)& (0+255),b
 11035  0039BC  0E00               	movlw	0
 11036  0039BE  6F9B               	movwf	pad@i& (0+255),b
 11037                           
 11038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11039  0039C0  D00D               	goto	l6762
 11040  0039C2                     l6758:
 11041                           
 11042                           ; BSR set to: 0
 11043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 11044  0039C2  0E00               	movlw	0
 11045  0039C4  6F85               	movwf	(fputc@c+1)& (0+255),b
 11046  0039C6  0E20               	movlw	32
 11047  0039C8  6F84               	movwf	fputc@c& (0+255),b
 11048  0039CA  C094  F086         	movff	pad@fp,fputc@fp
 11049  0039CE  C095  F087         	movff	pad@fp+1,fputc@fp+1
 11050  0039D2  ECCE  F01D         	call	_fputc	;wreg free
 11051                           
 11052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 11053  0039D6  0100               	movlb	0	; () banked
 11054  0039D8  4B9B               	infsnz	pad@i& (0+255),f,b
 11055  0039DA  2B9C               	incf	(pad@i+1)& (0+255),f,b
 11056  0039DC                     l6762:
 11057                           
 11058                           ; BSR set to: 0
 11059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 11060  0039DC  519D               	movf	pad@w& (0+255),w,b
 11061  0039DE  5D9B               	subwf	pad@i& (0+255),w,b
 11062  0039E0  519C               	movf	(pad@i+1)& (0+255),w,b
 11063  0039E2  0A80               	xorlw	128
 11064  0039E4  6F9A               	movwf	??_pad& (0+255),b
 11065  0039E6  519E               	movf	(pad@w+1)& (0+255),w,b
 11066  0039E8  0A80               	xorlw	128
 11067  0039EA  599A               	subwfb	??_pad& (0+255),w,b
 11068  0039EC  A0D8               	btfss	status,0,c
 11069  0039EE  D7E9               	goto	l6758
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 11073  0039F0  B04E               	btfsc	_flags,0,c
 11074  0039F2  D00A               	goto	l6766
 11075                           
 11076                           ; BSR set to: 0
 11077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 11078  0039F4  C096  F08D         	movff	pad@buf,fputs@s
 11079  0039F8  C097  F08E         	movff	pad@buf+1,fputs@s+1
 11080  0039FC  C094  F08F         	movff	pad@fp,fputs@fp
 11081  003A00  C095  F090         	movff	pad@fp+1,fputs@fp+1
 11082  003A04  EC4D  F01F         	call	_fputs	;wreg free
 11083  003A08                     l6766:
 11084                           
 11085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 11086  003A08  C096  F080         	movff	pad@buf,strlen@s
 11087  003A0C  C097  F081         	movff	pad@buf+1,strlen@s+1
 11088  003A10  EC1D  F020         	call	_strlen	;wreg free
 11089  003A14  0100               	movlb	0	; () banked
 11090  003A16  519D               	movf	pad@w& (0+255),w,b
 11091  003A18  2580               	addwf	?_strlen& (0+255),w,b
 11092  003A1A  6F94               	movwf	?_pad& (0+255),b
 11093  003A1C  519E               	movf	(pad@w+1)& (0+255),w,b
 11094  003A1E  2181               	addwfc	(?_strlen+1)& (0+255),w,b
 11095  003A20  6F95               	movwf	(?_pad+1)& (0+255),b
 11096                           
 11097                           ; BSR set to: 0
 11098  003A22  0012               	return		;funcret
 11099  003A24                     __end_of_pad:
 11100                           	opt callstack 0
 11101                           
 11102 ;; *************** function _strlen *****************
 11103 ;; Defined at:
 11104 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 11107 ;;		 -> dbuf(32), 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 11110 ;;		 -> dbuf(32), 
 11111 ;; Return value:  Size  Location     Type
 11112 ;;                  2    0[BANK0 ] unsigned int 
 11113 ;; Registers used:
 11114 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11115 ;; Tracked objects:
 11116 ;;		On entry : 0/0
 11117 ;;		On exit  : 0/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11124 ;;Total ram usage:        4 bytes
 11125 ;; Hardware stack levels used:    1
 11126 ;; Hardware stack levels required when called:    3
 11127 ;; This function calls:
 11128 ;;		Nothing
 11129 ;; This function is called by:
 11130 ;;		_pad
 11131 ;; This function uses a non-reentrant model
 11132 ;;
 11133                           
 11134                           	psect	text30
 11135  00403A                     __ptext30:
 11136                           	opt callstack 0
 11137  00403A                     _strlen:
 11138                           	opt callstack 21
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;incstack = 0
 11142  00403A  C080  F082         	movff	strlen@s,strlen@a
 11143  00403E  C081  F083         	movff	strlen@s+1,strlen@a+1
 11144  004042  D003               	goto	l6734
 11145  004044                     l6732:
 11146  004044  0100               	movlb	0	; () banked
 11147  004046  4B80               	infsnz	strlen@s& (0+255),f,b
 11148  004048  2B81               	incf	(strlen@s+1)& (0+255),f,b
 11149  00404A                     l6734:
 11150  00404A  C080  FFD9         	movff	strlen@s,fsr2l
 11151  00404E  C081  FFDA         	movff	strlen@s+1,fsr2h
 11152  004052  50DF               	movf	indf2,w,c
 11153  004054  A4D8               	btfss	status,2,c
 11154  004056  D7F6               	goto	l6732
 11155  004058  0100               	movlb	0	; () banked
 11156  00405A  5182               	movf	strlen@a& (0+255),w,b
 11157  00405C  5D80               	subwf	strlen@s& (0+255),w,b
 11158  00405E  6F80               	movwf	?_strlen& (0+255),b
 11159  004060  5183               	movf	(strlen@a+1)& (0+255),w,b
 11160  004062  5981               	subwfb	(strlen@s+1)& (0+255),w,b
 11161  004064  6F81               	movwf	(?_strlen+1)& (0+255),b
 11162                           
 11163                           ; BSR set to: 0
 11164  004066  0012               	return		;funcret
 11165  004068                     __end_of_strlen:
 11166                           	opt callstack 0
 11167                           
 11168 ;; *************** function _fputs *****************
 11169 ;; Defined at:
 11170 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 11173 ;;		 -> dbuf(32), 
 11174 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 11175 ;;		 -> NULL(0), 
 11176 ;; Auto vars:     Size  Location     Type
 11177 ;;  i               2   18[BANK0 ] int 
 11178 ;;  c               1   17[BANK0 ] unsigned char 
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  2   13[BANK0 ] int 
 11181 ;; Registers used:
 11182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/0
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11188 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11189 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11191 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11192 ;;Total ram usage:        7 bytes
 11193 ;; Hardware stack levels used:    1
 11194 ;; Hardware stack levels required when called:    8
 11195 ;; This function calls:
 11196 ;;		_fputc
 11197 ;; This function is called by:
 11198 ;;		_pad
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text31
 11203  003E9A                     __ptext31:
 11204                           	opt callstack 0
 11205  003E9A                     _fputs:
 11206                           	opt callstack 16
 11207                           
 11208                           ; BSR set to: 0
 11209                           ;incstack = 0
 11210  003E9A  0E00               	movlw	0
 11211  003E9C  0100               	movlb	0	; () banked
 11212  003E9E  6F93               	movwf	(fputs@i+1)& (0+255),b
 11213  003EA0  0E00               	movlw	0
 11214  003EA2  6F92               	movwf	fputs@i& (0+255),b
 11215  003EA4  D00C               	goto	l6728
 11216  003EA6                     l6724:
 11217                           
 11218                           ; BSR set to: 0
 11219  003EA6  C091  F084         	movff	fputs@c,fputc@c
 11220  003EAA  6B85               	clrf	(fputc@c+1)& (0+255),b
 11221  003EAC  C08F  F086         	movff	fputs@fp,fputc@fp
 11222  003EB0  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 11223  003EB4  ECCE  F01D         	call	_fputc	;wreg free
 11224  003EB8  0100               	movlb	0	; () banked
 11225  003EBA  4B92               	infsnz	fputs@i& (0+255),f,b
 11226  003EBC  2B93               	incf	(fputs@i+1)& (0+255),f,b
 11227  003EBE                     l6728:
 11228                           
 11229                           ; BSR set to: 0
 11230  003EBE  5192               	movf	fputs@i& (0+255),w,b
 11231  003EC0  258D               	addwf	fputs@s& (0+255),w,b
 11232  003EC2  6ED9               	movwf	fsr2l,c
 11233  003EC4  5193               	movf	(fputs@i+1)& (0+255),w,b
 11234  003EC6  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 11235  003EC8  6EDA               	movwf	fsr2h,c
 11236  003ECA  50DF               	movf	indf2,w,c
 11237  003ECC  6F91               	movwf	fputs@c& (0+255),b
 11238  003ECE  5191               	movf	fputs@c& (0+255),w,b
 11239  003ED0  B4D8               	btfsc	status,2,c
 11240  003ED2  0012               	return	
 11241  003ED4  D7E8               	goto	l6724
 11242  003ED6                     __end_of_fputs:
 11243                           	opt callstack 0
 11244                           
 11245 ;; *************** function _fputc *****************
 11246 ;; Defined at:
 11247 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;  c               2    4[BANK0 ] int 
 11250 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 11251 ;;		 -> NULL(0), 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;		None
 11254 ;; Return value:  Size  Location     Type
 11255 ;;                  2    4[BANK0 ] int 
 11256 ;; Registers used:
 11257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11263 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11267 ;;Total ram usage:        9 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; Hardware stack levels required when called:    7
 11270 ;; This function calls:
 11271 ;;		_putch
 11272 ;; This function is called by:
 11273 ;;		_pad
 11274 ;;		_vfpfcnvrt
 11275 ;;		_fputs
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           	psect	text32
 11280  003B9C                     __ptext32:
 11281                           	opt callstack 0
 11282  003B9C                     _fputc:
 11283                           	opt callstack 16
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;incstack = 0
 11287  003B9C  0100               	movlb	0	; () banked
 11288  003B9E  5186               	movf	fputc@fp& (0+255),w,b
 11289  003BA0  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 11290  003BA2  B4D8               	btfsc	status,2,c
 11291  003BA4  D004               	goto	u6750
 11292                           
 11293                           ; BSR set to: 0
 11294  003BA6  5186               	movf	fputc@fp& (0+255),w,b
 11295  003BA8  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 11296  003BAA  A4D8               	btfss	status,2,c
 11297  003BAC  D004               	goto	l6714
 11298  003BAE                     u6750:
 11299                           
 11300                           ; BSR set to: 0
 11301  003BAE  5184               	movf	fputc@c& (0+255),w,b
 11302  003BB0  ECBE  F020         	call	_putch
 11303  003BB4  0012               	return	
 11304  003BB6                     l6714:
 11305                           
 11306                           ; BSR set to: 0
 11307  003BB6  EE20 F004          	lfsr	2,4
 11308  003BBA  5186               	movf	fputc@fp& (0+255),w,b
 11309  003BBC  26D9               	addwf	fsr2l,f,c
 11310  003BBE  5187               	movf	(fputc@fp+1)& (0+255),w,b
 11311  003BC0  22DA               	addwfc	fsr2h,f,c
 11312  003BC2  50DE               	movf	postinc2,w,c
 11313  003BC4  10DE               	iorwf	postinc2,w,c
 11314  003BC6  B4D8               	btfsc	status,2,c
 11315  003BC8  D016               	goto	u6770
 11316                           
 11317                           ; BSR set to: 0
 11318  003BCA  EE20 F004          	lfsr	2,4
 11319  003BCE  5186               	movf	fputc@fp& (0+255),w,b
 11320  003BD0  26D9               	addwf	fsr2l,f,c
 11321  003BD2  5187               	movf	(fputc@fp+1)& (0+255),w,b
 11322  003BD4  22DA               	addwfc	fsr2h,f,c
 11323  003BD6  EE10 F002          	lfsr	1,2
 11324  003BDA  5186               	movf	fputc@fp& (0+255),w,b
 11325  003BDC  26E1               	addwf	fsr1l,f,c
 11326  003BDE  5187               	movf	(fputc@fp+1)& (0+255),w,b
 11327  003BE0  22E2               	addwfc	fsr1h,f,c
 11328  003BE2  50DE               	movf	postinc2,w,c
 11329  003BE4  5CE6               	subwf	postinc1,w,c
 11330  003BE6  50E6               	movf	postinc1,w,c
 11331  003BE8  0A80               	xorlw	128
 11332  003BEA  6F8C               	movwf	(??_fputc+4)& (0+255),b
 11333  003BEC  50DE               	movf	postinc2,w,c
 11334  003BEE  0A80               	xorlw	128
 11335  003BF0  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 11336  003BF2  B0D8               	btfsc	status,0,c
 11337  003BF4  0012               	return	
 11338  003BF6                     u6770:
 11339                           
 11340                           ; BSR set to: 0
 11341  003BF6  EE20 F002          	lfsr	2,2
 11342  003BFA  5186               	movf	fputc@fp& (0+255),w,b
 11343  003BFC  26D9               	addwf	fsr2l,f,c
 11344  003BFE  5187               	movf	(fputc@fp+1)& (0+255),w,b
 11345  003C00  22DA               	addwfc	fsr2h,f,c
 11346  003C02  2ADE               	incf	postinc2,f,c
 11347  003C04  0E00               	movlw	0
 11348  003C06  22DD               	addwfc	postdec2,f,c
 11349  003C08  0012               	return		;funcret
 11350  003C0A                     __end_of_fputc:
 11351                           	opt callstack 0
 11352                           
 11353 ;; *************** function _putch *****************
 11354 ;; Defined at:
 11355 ;;		line 102 in file "lcd.c"
 11356 ;; Parameters:    Size  Location     Type
 11357 ;;  data            1    wreg     unsigned char 
 11358 ;; Auto vars:     Size  Location     Type
 11359 ;;  data            1    3[BANK0 ] unsigned char 
 11360 ;; Return value:  Size  Location     Type
 11361 ;;                  1    wreg      void 
 11362 ;; Registers used:
 11363 ;;		wreg, status,2, status,0, cstack
 11364 ;; Tracked objects:
 11365 ;;		On entry : 0/0
 11366 ;;		On exit  : 0/0
 11367 ;;		Unchanged: 0/0
 11368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11372 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11373 ;;Total ram usage:        1 bytes
 11374 ;; Hardware stack levels used:    1
 11375 ;; Hardware stack levels required when called:    6
 11376 ;; This function calls:
 11377 ;;		_send_byte
 11378 ;; This function is called by:
 11379 ;;		_fputc
 11380 ;; This function uses a non-reentrant model
 11381 ;;
 11382                           
 11383                           	psect	text33
 11384  00417C                     __ptext33:
 11385                           	opt callstack 0
 11386  00417C                     _putch:
 11387                           	opt callstack 16
 11388                           
 11389                           ;incstack = 0
 11390                           ;putch@data stored from wreg
 11391  00417C  0100               	movlb	0	; () banked
 11392  00417E  6F83               	movwf	putch@data& (0+255),b
 11393                           
 11394                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 11395  004180  848C               	bsf	3980,2,c	;volatile
 11396                           
 11397                           ;lcd.c: 104:     send_byte((unsigned char)data);
 11398  004182  0100               	movlb	0	; () banked
 11399  004184  5183               	movf	putch@data& (0+255),w,b
 11400  004186  ECA8  F020         	call	_send_byte
 11401  00418A  0012               	return		;funcret
 11402  00418C                     __end_of_putch:
 11403                           	opt callstack 0
 11404                           
 11405 ;; *************** function _abs *****************
 11406 ;; Defined at:
 11407 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 11408 ;; Parameters:    Size  Location     Type
 11409 ;;  a               2   18[BANK0 ] int 
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;		None
 11412 ;; Return value:  Size  Location     Type
 11413 ;;                  2   18[BANK0 ] int 
 11414 ;; Registers used:
 11415 ;;		wreg, status,2, status,0
 11416 ;; Tracked objects:
 11417 ;;		On entry : 0/0
 11418 ;;		On exit  : 0/0
 11419 ;;		Unchanged: 0/0
 11420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11421 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11424 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11425 ;;Total ram usage:        4 bytes
 11426 ;; Hardware stack levels used:    1
 11427 ;; Hardware stack levels required when called:    3
 11428 ;; This function calls:
 11429 ;;		Nothing
 11430 ;; This function is called by:
 11431 ;;		_ultrasonic_main
 11432 ;;		_dtoa
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text34
 11437  003F0C                     __ptext34:
 11438                           	opt callstack 0
 11439  003F0C                     _abs:
 11440                           	opt callstack 22
 11441                           
 11442                           ;incstack = 0
 11443  003F0C  0100               	movlb	0	; () banked
 11444  003F0E  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 11445  003F10  D005               	goto	u6820
 11446  003F12  5193               	movf	(abs@a+1)& (0+255),w,b
 11447  003F14  E110               	bnz	l1428
 11448  003F16  0592               	decf	abs@a& (0+255),w,b
 11449  003F18  B0D8               	btfsc	status,0,c
 11450  003F1A  D00D               	goto	l1428
 11451  003F1C                     u6820:
 11452                           
 11453                           ; BSR set to: 0
 11454  003F1C  C092  F094         	movff	abs@a,??_abs
 11455  003F20  C093  F095         	movff	abs@a+1,??_abs+1
 11456  003F24  1F94               	comf	??_abs& (0+255),f,b
 11457  003F26  1F95               	comf	(??_abs+1)& (0+255),f,b
 11458  003F28  4B94               	infsnz	??_abs& (0+255),f,b
 11459  003F2A  2B95               	incf	(??_abs+1)& (0+255),f,b
 11460  003F2C  C094  F092         	movff	??_abs,?_abs
 11461  003F30  C095  F093         	movff	??_abs+1,?_abs+1
 11462  003F34  0012               	return	
 11463  003F36                     l1428:
 11464                           
 11465                           ; BSR set to: 0
 11466  003F36  C092  F092         	movff	abs@a,?_abs
 11467  003F3A  C093  F093         	movff	abs@a+1,?_abs+1
 11468                           
 11469                           ; BSR set to: 0
 11470  003F3E  0012               	return		;funcret
 11471  003F40                     __end_of_abs:
 11472                           	opt callstack 0
 11473                           
 11474 ;; *************** function ___aomod *****************
 11475 ;; Defined at:
 11476 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;  dividend        8    0[BANK0 ] long long 
 11479 ;;  divisor         8    8[BANK0 ] long long 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  sign            1   17[BANK0 ] unsigned char 
 11482 ;;  counter         1   16[BANK0 ] unsigned char 
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  8    0[BANK0 ] long long 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2, status,0
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11492 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;Total ram usage:       18 bytes
 11497 ;; Hardware stack levels used:    1
 11498 ;; Hardware stack levels required when called:    3
 11499 ;; This function calls:
 11500 ;;		Nothing
 11501 ;; This function is called by:
 11502 ;;		_dtoa
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           	psect	text35
 11507  0030B2                     __ptext35:
 11508                           	opt callstack 0
 11509  0030B2                     ___aomod:
 11510                           	opt callstack 22
 11511                           
 11512                           ; BSR set to: 0
 11513                           ;incstack = 0
 11514  0030B2  0E00               	movlw	0
 11515  0030B4  0100               	movlb	0	; () banked
 11516  0030B6  6F91               	movwf	___aomod@sign& (0+255),b
 11517                           
 11518                           ; BSR set to: 0
 11519  0030B8  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 11520  0030BA  D012               	goto	l6850
 11521                           
 11522                           ; BSR set to: 0
 11523  0030BC  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11524  0030BE  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11525  0030C0  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11526  0030C2  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11527  0030C4  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11528  0030C6  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11529  0030C8  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11530  0030CA  6D80               	negf	___aomod@dividend& (0+255),b
 11531  0030CC  0E00               	movlw	0
 11532  0030CE  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11533  0030D0  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11534  0030D2  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11535  0030D4  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11536  0030D6  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11537  0030D8  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11538  0030DA  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11539                           
 11540                           ; BSR set to: 0
 11541  0030DC  0E01               	movlw	1
 11542  0030DE  6F91               	movwf	___aomod@sign& (0+255),b
 11543  0030E0                     l6850:
 11544                           
 11545                           ; BSR set to: 0
 11546  0030E0  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11547  0030E2  D010               	goto	l6854
 11548                           
 11549                           ; BSR set to: 0
 11550  0030E4  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 11551  0030E6  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 11552  0030E8  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 11553  0030EA  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 11554  0030EC  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 11555  0030EE  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 11556  0030F0  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 11557  0030F2  6D88               	negf	___aomod@divisor& (0+255),b
 11558  0030F4  0E00               	movlw	0
 11559  0030F6  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 11560  0030F8  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 11561  0030FA  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 11562  0030FC  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 11563  0030FE  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 11564  003100  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 11565  003102  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 11566  003104                     l6854:
 11567                           
 11568                           ; BSR set to: 0
 11569  003104  5188               	movf	___aomod@divisor& (0+255),w,b
 11570  003106  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 11571  003108  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 11572  00310A  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 11573  00310C  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 11574  00310E  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 11575  003110  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 11576  003112  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 11577  003114  B4D8               	btfsc	status,2,c
 11578  003116  D03C               	goto	l6870
 11579                           
 11580                           ; BSR set to: 0
 11581  003118  0E01               	movlw	1
 11582  00311A  6F90               	movwf	___aomod@counter& (0+255),b
 11583  00311C  D00A               	goto	l6860
 11584  00311E                     l6858:
 11585                           
 11586                           ; BSR set to: 0
 11587  00311E  90D8               	bcf	status,0,c
 11588  003120  3788               	rlcf	___aomod@divisor& (0+255),f,b
 11589  003122  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 11590  003124  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 11591  003126  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 11592  003128  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 11593  00312A  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 11594  00312C  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 11595  00312E  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 11596  003130  2B90               	incf	___aomod@counter& (0+255),f,b
 11597  003132                     l6860:
 11598                           
 11599                           ; BSR set to: 0
 11600  003132  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11601  003134  D7F4               	goto	l6858
 11602  003136                     u7060:
 11603                           
 11604                           ; BSR set to: 0
 11605  003136  5188               	movf	___aomod@divisor& (0+255),w,b
 11606  003138  5D80               	subwf	___aomod@dividend& (0+255),w,b
 11607  00313A  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11608  00313C  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 11609  00313E  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11610  003140  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 11611  003142  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11612  003144  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 11613  003146  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11614  003148  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 11615  00314A  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11616  00314C  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 11617  00314E  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11618  003150  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 11619  003152  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11620  003154  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 11621  003156  A0D8               	btfss	status,0,c
 11622  003158  D010               	goto	l6866
 11623                           
 11624                           ; BSR set to: 0
 11625  00315A  5188               	movf	___aomod@divisor& (0+255),w,b
 11626  00315C  5F80               	subwf	___aomod@dividend& (0+255),f,b
 11627  00315E  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11628  003160  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 11629  003162  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11630  003164  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 11631  003166  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11632  003168  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 11633  00316A  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11634  00316C  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 11635  00316E  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11636  003170  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 11637  003172  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11638  003174  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 11639  003176  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11640  003178  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 11641  00317A                     l6866:
 11642                           
 11643                           ; BSR set to: 0
 11644  00317A  90D8               	bcf	status,0,c
 11645  00317C  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 11646  00317E  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 11647  003180  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 11648  003182  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 11649  003184  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 11650  003186  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 11651  003188  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 11652  00318A  3388               	rrcf	___aomod@divisor& (0+255),f,b
 11653                           
 11654                           ; BSR set to: 0
 11655  00318C  2F90               	decfsz	___aomod@counter& (0+255),f,b
 11656  00318E  D7D3               	goto	u7060
 11657  003190                     l6870:
 11658                           
 11659                           ; BSR set to: 0
 11660  003190  5191               	movf	___aomod@sign& (0+255),w,b
 11661  003192  B4D8               	btfsc	status,2,c
 11662  003194  D010               	goto	l6874
 11663                           
 11664                           ; BSR set to: 0
 11665  003196  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11666  003198  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11667  00319A  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11668  00319C  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11669  00319E  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11670  0031A0  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11671  0031A2  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11672  0031A4  6D80               	negf	___aomod@dividend& (0+255),b
 11673  0031A6  0E00               	movlw	0
 11674  0031A8  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11675  0031AA  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11676  0031AC  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11677  0031AE  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11678  0031B0  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11679  0031B2  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11680  0031B4  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11681  0031B6                     l6874:
 11682                           
 11683                           ; BSR set to: 0
 11684  0031B6  C080  F080         	movff	___aomod@dividend,?___aomod
 11685  0031BA  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 11686  0031BE  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 11687  0031C2  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 11688  0031C6  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 11689  0031CA  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 11690  0031CE  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 11691  0031D2  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 11692                           
 11693                           ; BSR set to: 0
 11694  0031D6  0012               	return		;funcret
 11695  0031D8                     __end_of___aomod:
 11696                           	opt callstack 0
 11697                           
 11698 ;; *************** function ___aodiv *****************
 11699 ;; Defined at:
 11700 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;  dividend        8    0[BANK0 ] long long 
 11703 ;;  divisor         8    8[BANK0 ] long long 
 11704 ;; Auto vars:     Size  Location     Type
 11705 ;;  quotient        8   18[BANK0 ] long long 
 11706 ;;  sign            1   17[BANK0 ] unsigned char 
 11707 ;;  counter         1   16[BANK0 ] unsigned char 
 11708 ;; Return value:  Size  Location     Type
 11709 ;;                  8    0[BANK0 ] long long 
 11710 ;; Registers used:
 11711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11712 ;; Tracked objects:
 11713 ;;		On entry : 0/0
 11714 ;;		On exit  : 0/0
 11715 ;;		Unchanged: 0/0
 11716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11717 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11720 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11721 ;;Total ram usage:       26 bytes
 11722 ;; Hardware stack levels used:    1
 11723 ;; Hardware stack levels required when called:    3
 11724 ;; This function calls:
 11725 ;;		Nothing
 11726 ;; This function is called by:
 11727 ;;		_dtoa
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text36
 11732  002BBC                     __ptext36:
 11733                           	opt callstack 0
 11734  002BBC                     ___aodiv:
 11735                           	opt callstack 22
 11736                           
 11737                           ; BSR set to: 0
 11738                           ;incstack = 0
 11739  002BBC  0E00               	movlw	0
 11740  002BBE  0100               	movlb	0	; () banked
 11741  002BC0  6F91               	movwf	___aodiv@sign& (0+255),b
 11742                           
 11743                           ; BSR set to: 0
 11744  002BC2  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11745  002BC4  D012               	goto	l6806
 11746                           
 11747                           ; BSR set to: 0
 11748  002BC6  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 11749  002BC8  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 11750  002BCA  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 11751  002BCC  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 11752  002BCE  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 11753  002BD0  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 11754  002BD2  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 11755  002BD4  6D88               	negf	___aodiv@divisor& (0+255),b
 11756  002BD6  0E00               	movlw	0
 11757  002BD8  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 11758  002BDA  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 11759  002BDC  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 11760  002BDE  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 11761  002BE0  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 11762  002BE2  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 11763  002BE4  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 11764                           
 11765                           ; BSR set to: 0
 11766  002BE6  0E01               	movlw	1
 11767  002BE8  6F91               	movwf	___aodiv@sign& (0+255),b
 11768  002BEA                     l6806:
 11769                           
 11770                           ; BSR set to: 0
 11771  002BEA  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 11772  002BEC  D012               	goto	l6812
 11773                           
 11774                           ; BSR set to: 0
 11775  002BEE  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 11776  002BF0  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 11777  002BF2  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 11778  002BF4  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 11779  002BF6  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 11780  002BF8  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 11781  002BFA  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 11782  002BFC  6D80               	negf	___aodiv@dividend& (0+255),b
 11783  002BFE  0E00               	movlw	0
 11784  002C00  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 11785  002C02  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 11786  002C04  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 11787  002C06  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 11788  002C08  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 11789  002C0A  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 11790  002C0C  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 11791                           
 11792                           ; BSR set to: 0
 11793  002C0E  0E01               	movlw	1
 11794  002C10  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 11795  002C12                     l6812:
 11796                           
 11797                           ; BSR set to: 0
 11798  002C12  EE20  F092         	lfsr	2,___aodiv@quotient
 11799  002C16  0E07               	movlw	7
 11800  002C18                     u6981:
 11801  002C18  6ADE               	clrf	postinc2,c
 11802  002C1A  06E8               	decf	wreg,f,c
 11803  002C1C  E2FD               	bc	u6981
 11804                           
 11805                           ; BSR set to: 0
 11806  002C1E  5188               	movf	___aodiv@divisor& (0+255),w,b
 11807  002C20  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 11808  002C22  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 11809  002C24  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 11810  002C26  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 11811  002C28  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 11812  002C2A  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 11813  002C2C  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 11814  002C2E  B4D8               	btfsc	status,2,c
 11815  002C30  D046               	goto	l6834
 11816                           
 11817                           ; BSR set to: 0
 11818  002C32  0E01               	movlw	1
 11819  002C34  6F90               	movwf	___aodiv@counter& (0+255),b
 11820  002C36  D00A               	goto	l6820
 11821  002C38                     l6818:
 11822                           
 11823                           ; BSR set to: 0
 11824  002C38  90D8               	bcf	status,0,c
 11825  002C3A  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 11826  002C3C  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 11827  002C3E  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 11828  002C40  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 11829  002C42  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 11830  002C44  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 11831  002C46  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 11832  002C48  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 11833  002C4A  2B90               	incf	___aodiv@counter& (0+255),f,b
 11834  002C4C                     l6820:
 11835                           
 11836                           ; BSR set to: 0
 11837  002C4C  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11838  002C4E  D7F4               	goto	l6818
 11839  002C50                     u7000:
 11840                           
 11841                           ; BSR set to: 0
 11842  002C50  90D8               	bcf	status,0,c
 11843  002C52  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 11844  002C54  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 11845  002C56  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 11846  002C58  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 11847  002C5A  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 11848  002C5C  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 11849  002C5E  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 11850  002C60  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 11851                           
 11852                           ; BSR set to: 0
 11853  002C62  5188               	movf	___aodiv@divisor& (0+255),w,b
 11854  002C64  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 11855  002C66  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11856  002C68  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 11857  002C6A  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11858  002C6C  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 11859  002C6E  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11860  002C70  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 11861  002C72  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11862  002C74  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 11863  002C76  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11864  002C78  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 11865  002C7A  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11866  002C7C  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 11867  002C7E  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11868  002C80  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 11869  002C82  A0D8               	btfss	status,0,c
 11870  002C84  D011               	goto	l6830
 11871                           
 11872                           ; BSR set to: 0
 11873  002C86  5188               	movf	___aodiv@divisor& (0+255),w,b
 11874  002C88  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 11875  002C8A  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11876  002C8C  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 11877  002C8E  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11878  002C90  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 11879  002C92  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11880  002C94  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 11881  002C96  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11882  002C98  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 11883  002C9A  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11884  002C9C  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 11885  002C9E  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11886  002CA0  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 11887  002CA2  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11888  002CA4  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 11889                           
 11890                           ; BSR set to: 0
 11891  002CA6  8192               	bsf	___aodiv@quotient& (0+255),0,b
 11892  002CA8                     l6830:
 11893                           
 11894                           ; BSR set to: 0
 11895  002CA8  90D8               	bcf	status,0,c
 11896  002CAA  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 11897  002CAC  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 11898  002CAE  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 11899  002CB0  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 11900  002CB2  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 11901  002CB4  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 11902  002CB6  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 11903  002CB8  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 11904                           
 11905                           ; BSR set to: 0
 11906  002CBA  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 11907  002CBC  D7C9               	goto	u7000
 11908  002CBE                     l6834:
 11909                           
 11910                           ; BSR set to: 0
 11911  002CBE  5191               	movf	___aodiv@sign& (0+255),w,b
 11912  002CC0  B4D8               	btfsc	status,2,c
 11913  002CC2  D010               	goto	l6838
 11914                           
 11915                           ; BSR set to: 0
 11916  002CC4  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 11917  002CC6  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 11918  002CC8  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 11919  002CCA  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 11920  002CCC  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 11921  002CCE  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 11922  002CD0  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 11923  002CD2  6D92               	negf	___aodiv@quotient& (0+255),b
 11924  002CD4  0E00               	movlw	0
 11925  002CD6  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 11926  002CD8  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 11927  002CDA  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 11928  002CDC  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 11929  002CDE  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 11930  002CE0  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 11931  002CE2  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 11932  002CE4                     l6838:
 11933                           
 11934                           ; BSR set to: 0
 11935  002CE4  C092  F080         	movff	___aodiv@quotient,?___aodiv
 11936  002CE8  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 11937  002CEC  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 11938  002CF0  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 11939  002CF4  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 11940  002CF8  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 11941  002CFC  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 11942  002D00  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 11943                           
 11944                           ; BSR set to: 0
 11945  002D04  0012               	return		;funcret
 11946  002D06                     __end_of___aodiv:
 11947                           	opt callstack 0
 11948                           
 11949 ;; *************** function _atoi *****************
 11950 ;; Defined at:
 11951 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 11954 ;;		 -> STR_65(10), STR_64(11), STR_63(11), STR_62(12), 
 11955 ;;		 -> STR_61(16), STR_60(16), STR_59(14), STR_58(17), 
 11956 ;;		 -> STR_57(12), STR_56(10), STR_55(13), STR_54(8), 
 11957 ;;		 -> STR_53(3), STR_52(17), STR_51(15), STR_50(15), 
 11958 ;;		 -> STR_49(12), STR_48(17), STR_47(12), STR_46(15), 
 11959 ;;		 -> STR_45(18), STR_44(17), STR_43(12), STR_42(15), 
 11960 ;;		 -> STR_41(18), STR_40(17), STR_39(14), STR_38(14), 
 11961 ;;		 -> STR_37(17), STR_36(3), STR_35(9), STR_34(16), 
 11962 ;;		 -> STR_33(3), STR_32(9), STR_31(17), STR_30(15), 
 11963 ;;		 -> STR_29(15), STR_28(12), STR_27(10), STR_26(5), 
 11964 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
 11965 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
 11966 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
 11967 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
 11968 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
 11969 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
 11970 ;;		 -> STR_1(10), 
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;  n               2   20[BANK0 ] int 
 11973 ;;  neg             2   13[BANK0 ] int 
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  2    7[BANK0 ] int 
 11976 ;; Registers used:
 11977 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;Total ram usage:       15 bytes
 11988 ;; Hardware stack levels used:    1
 11989 ;; Hardware stack levels required when called:    4
 11990 ;; This function calls:
 11991 ;;		___wmul
 11992 ;;		_isdigit
 11993 ;;		_isspace
 11994 ;; This function is called by:
 11995 ;;		_vfpfcnvrt
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           	psect	text37
 12000  002D06                     __ptext37:
 12001                           	opt callstack 0
 12002  002D06                     _atoi:
 12003                           	opt callstack 22
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;incstack = 0
 12007  002D06  0E00               	movlw	0
 12008  002D08  0100               	movlb	0	; () banked
 12009  002D0A  6F95               	movwf	(atoi@n+1)& (0+255),b
 12010  002D0C  0E00               	movlw	0
 12011  002D0E  6F94               	movwf	atoi@n& (0+255),b
 12012  002D10  0E00               	movlw	0
 12013  002D12  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 12014  002D14  0E00               	movlw	0
 12015  002D16  6F8D               	movwf	atoi@neg& (0+255),b
 12016  002D18  D002               	goto	l7022
 12017  002D1A                     l7020:
 12018                           
 12019                           ; BSR set to: 0
 12020  002D1A  4B87               	infsnz	atoi@s& (0+255),f,b
 12021  002D1C  2B88               	incf	(atoi@s+1)& (0+255),f,b
 12022  002D1E                     l7022:
 12023                           
 12024                           ; BSR set to: 0
 12025  002D1E  0E01               	movlw	1
 12026  002D20  6F93               	movwf	_atoi$1735& (0+255),b
 12027                           
 12028                           ; BSR set to: 0
 12029  002D22  C087  FFF6         	movff	atoi@s,tblptrl
 12030  002D26  C088  FFF7         	movff	atoi@s+1,tblptrh
 12031  002D2A                     	if	0	;tblptru may be non-zero
 12032  002D2A                     	endif
 12033  002D2A                     	if	0	;tblptru may be non-zero
 12034  002D2A                     	endif
 12035  002D2A  0008               	tblrd		*
 12036  002D2C  50F5               	movf	tablat,w,c
 12037  002D2E  0A20               	xorlw	32
 12038  002D30  B4D8               	btfsc	status,2,c
 12039  002D32  D018               	goto	l7030
 12040                           
 12041                           ; BSR set to: 0
 12042  002D34  0EF7               	movlw	247
 12043  002D36  6F89               	movwf	??_atoi& (0+255),b
 12044  002D38  0EFF               	movlw	255
 12045  002D3A  6F8A               	movwf	(??_atoi+1)& (0+255),b
 12046  002D3C  C087  FFF6         	movff	atoi@s,tblptrl
 12047  002D40  C088  FFF7         	movff	atoi@s+1,tblptrh
 12048  002D44                     	if	0	;tblptru may be non-zero
 12049  002D44                     	endif
 12050  002D44                     	if	0	;tblptru may be non-zero
 12051  002D44                     	endif
 12052  002D44  0008               	tblrd		*
 12053  002D46  50F5               	movf	tablat,w,c
 12054  002D48  6F8B               	movwf	(??_atoi+2)& (0+255),b
 12055  002D4A  6B8C               	clrf	(??_atoi+3)& (0+255),b
 12056  002D4C  5189               	movf	??_atoi& (0+255),w,b
 12057  002D4E  278B               	addwf	(??_atoi+2)& (0+255),f,b
 12058  002D50  518A               	movf	(??_atoi+1)& (0+255),w,b
 12059  002D52  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 12060  002D54  518C               	movf	(??_atoi+3)& (0+255),w,b
 12061  002D56  E104               	bnz	u7440
 12062  002D58  0E05               	movlw	5
 12063  002D5A  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 12064  002D5C  A0D8               	btfss	status,0,c
 12065  002D5E  D002               	goto	l7030
 12066  002D60                     u7440:
 12067                           
 12068                           ; BSR set to: 0
 12069  002D60  0E00               	movlw	0
 12070  002D62  6F93               	movwf	_atoi$1735& (0+255),b
 12071  002D64                     l7030:
 12072                           
 12073                           ; BSR set to: 0
 12074  002D64  C093  F08F         	movff	_atoi$1735,_atoi$1734
 12075  002D68  6B90               	clrf	(_atoi$1734+1)& (0+255),b
 12076                           
 12077                           ; BSR set to: 0
 12078  002D6A  518F               	movf	_atoi$1734& (0+255),w,b
 12079  002D6C  1190               	iorwf	(_atoi$1734+1)& (0+255),w,b
 12080  002D6E  B4D8               	btfsc	status,2,c
 12081  002D70  D008               	goto	l7040
 12082  002D72  D7D3               	goto	l7020
 12083  002D74                     l7036:
 12084                           
 12085                           ; BSR set to: 0
 12086  002D74  0E00               	movlw	0
 12087  002D76  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 12088  002D78  0E01               	movlw	1
 12089  002D7A  6F8D               	movwf	atoi@neg& (0+255),b
 12090  002D7C                     l7038:
 12091                           
 12092                           ; BSR set to: 0
 12093  002D7C  4B87               	infsnz	atoi@s& (0+255),f,b
 12094  002D7E  2B88               	incf	(atoi@s+1)& (0+255),f,b
 12095  002D80  D02F               	goto	l7046
 12096  002D82                     l7040:
 12097                           
 12098                           ; BSR set to: 0
 12099  002D82  C087  FFF6         	movff	atoi@s,tblptrl
 12100  002D86  C088  FFF7         	movff	atoi@s+1,tblptrh
 12101  002D8A                     	if	0	;tblptru may be non-zero
 12102  002D8A                     	endif
 12103  002D8A                     	if	0	;tblptru may be non-zero
 12104  002D8A                     	endif
 12105  002D8A  0008               	tblrd		*
 12106  002D8C  50F5               	movf	tablat,w,c
 12107  002D8E  6F89               	movwf	??_atoi& (0+255),b
 12108  002D90  6B8A               	clrf	(??_atoi+1)& (0+255),b
 12109                           
 12110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12111                           ; Switch size 1, requested type "simple"
 12112                           ; Number of cases is 1, Range of values is 0 to 0
 12113                           ; switch strategies available:
 12114                           ; Name         Instructions Cycles
 12115                           ; simple_byte            4     3 (average)
 12116                           ;	Chosen strategy is simple_byte
 12117  002D92  518A               	movf	(??_atoi+1)& (0+255),w,b
 12118  002D94  0A00               	xorlw	0	; case 0
 12119  002D96  A4D8               	btfss	status,2,c
 12120  002D98  D023               	goto	l7046
 12121                           
 12122                           ; BSR set to: 0
 12123                           ; Switch size 1, requested type "simple"
 12124                           ; Number of cases is 2, Range of values is 43 to 45
 12125                           ; switch strategies available:
 12126                           ; Name         Instructions Cycles
 12127                           ; simple_byte            7     4 (average)
 12128                           ;	Chosen strategy is simple_byte
 12129  002D9A  5189               	movf	??_atoi& (0+255),w,b
 12130  002D9C  0A2B               	xorlw	43	; case 43
 12131  002D9E  B4D8               	btfsc	status,2,c
 12132  002DA0  D7ED               	goto	l7038
 12133  002DA2  0A06               	xorlw	6	; case 45
 12134  002DA4  B4D8               	btfsc	status,2,c
 12135  002DA6  D7E6               	goto	l7036
 12136  002DA8  D01B               	goto	l7046
 12137  002DAA                     l7042:
 12138                           
 12139                           ; BSR set to: 0
 12140  002DAA  C094  F080         	movff	atoi@n,___wmul@multiplier
 12141  002DAE  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 12142  002DB2  0E00               	movlw	0
 12143  002DB4  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12144  002DB6  0E0A               	movlw	10
 12145  002DB8  6F82               	movwf	___wmul@multiplicand& (0+255),b
 12146  002DBA  EC74  F020         	call	___wmul	;wreg free
 12147  002DBE  C087  FFF6         	movff	atoi@s,tblptrl
 12148  002DC2  C088  FFF7         	movff	atoi@s+1,tblptrh
 12149  002DC6                     	if	0	;tblptru may be non-zero
 12150  002DC6                     	endif
 12151  002DC6                     	if	0	;tblptru may be non-zero
 12152  002DC6                     	endif
 12153  002DC6  0008               	tblrd		*
 12154  002DC8  50F5               	movf	tablat,w,c
 12155  002DCA  0100               	movlb	0	; () banked
 12156  002DCC  5F80               	subwf	?___wmul& (0+255),f,b
 12157  002DCE  0E00               	movlw	0
 12158  002DD0  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 12159  002DD2  0E30               	movlw	48
 12160  002DD4  2580               	addwf	?___wmul& (0+255),w,b
 12161  002DD6  6F94               	movwf	atoi@n& (0+255),b
 12162  002DD8  0E00               	movlw	0
 12163  002DDA  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 12164  002DDC  6F95               	movwf	(atoi@n+1)& (0+255),b
 12165  002DDE  D7CE               	goto	l7038
 12166  002DE0                     l7046:
 12167                           
 12168                           ; BSR set to: 0
 12169  002DE0  0ED0               	movlw	208
 12170  002DE2  6F89               	movwf	??_atoi& (0+255),b
 12171  002DE4  0EFF               	movlw	255
 12172  002DE6  6F8A               	movwf	(??_atoi+1)& (0+255),b
 12173  002DE8  C087  FFF6         	movff	atoi@s,tblptrl
 12174  002DEC  C088  FFF7         	movff	atoi@s+1,tblptrh
 12175  002DF0                     	if	0	;tblptru may be non-zero
 12176  002DF0                     	endif
 12177  002DF0                     	if	0	;tblptru may be non-zero
 12178  002DF0                     	endif
 12179  002DF0  0008               	tblrd		*
 12180  002DF2  50F5               	movf	tablat,w,c
 12181  002DF4  6F8B               	movwf	(??_atoi+2)& (0+255),b
 12182  002DF6  6B8C               	clrf	(??_atoi+3)& (0+255),b
 12183  002DF8  5189               	movf	??_atoi& (0+255),w,b
 12184  002DFA  278B               	addwf	(??_atoi+2)& (0+255),f,b
 12185  002DFC  518A               	movf	(??_atoi+1)& (0+255),w,b
 12186  002DFE  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 12187  002E00  518C               	movf	(??_atoi+3)& (0+255),w,b
 12188  002E02  E106               	bnz	u7460
 12189  002E04  0E0A               	movlw	10
 12190  002E06  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 12191  002E08  B0D8               	btfsc	status,0,c
 12192  002E0A  D002               	goto	u7460
 12193  002E0C  0E01               	movlw	1
 12194  002E0E  D001               	goto	u7470
 12195  002E10                     u7460:
 12196  002E10  0E00               	movlw	0
 12197  002E12                     u7470:
 12198  002E12  6F91               	movwf	_atoi$1736& (0+255),b
 12199  002E14  6B92               	clrf	(_atoi$1736+1)& (0+255),b
 12200                           
 12201                           ; BSR set to: 0
 12202  002E16  5191               	movf	_atoi$1736& (0+255),w,b
 12203  002E18  1192               	iorwf	(_atoi$1736+1)& (0+255),w,b
 12204  002E1A  A4D8               	btfss	status,2,c
 12205  002E1C  D7C6               	goto	l7042
 12206                           
 12207                           ; BSR set to: 0
 12208  002E1E  518D               	movf	atoi@neg& (0+255),w,b
 12209  002E20  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 12210  002E22  A4D8               	btfss	status,2,c
 12211  002E24  D00D               	goto	l1459
 12212                           
 12213                           ; BSR set to: 0
 12214  002E26  C094  F089         	movff	atoi@n,??_atoi
 12215  002E2A  C095  F08A         	movff	atoi@n+1,??_atoi+1
 12216  002E2E  1F89               	comf	??_atoi& (0+255),f,b
 12217  002E30  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 12218  002E32  4B89               	infsnz	??_atoi& (0+255),f,b
 12219  002E34  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 12220  002E36  C089  F087         	movff	??_atoi,?_atoi
 12221  002E3A  C08A  F088         	movff	??_atoi+1,?_atoi+1
 12222  002E3E  0012               	return	
 12223  002E40                     l1459:
 12224                           
 12225                           ; BSR set to: 0
 12226  002E40  C094  F087         	movff	atoi@n,?_atoi
 12227  002E44  C095  F088         	movff	atoi@n+1,?_atoi+1
 12228                           
 12229                           ; BSR set to: 0
 12230  002E48  0012               	return		;funcret
 12231  002E4A                     __end_of_atoi:
 12232                           	opt callstack 0
 12233                           
 12234 ;; *************** function _isspace *****************
 12235 ;; Defined at:
 12236 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 12237 ;; Parameters:    Size  Location     Type
 12238 ;;  c               2    0[BANK0 ] int 
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;		None
 12241 ;; Return value:  Size  Location     Type
 12242 ;;                  2    0[BANK0 ] int 
 12243 ;; Registers used:
 12244 ;;		wreg, status,2, status,0
 12245 ;; Tracked objects:
 12246 ;;		On entry : 0/0
 12247 ;;		On exit  : 0/0
 12248 ;;		Unchanged: 0/0
 12249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;Total ram usage:        7 bytes
 12255 ;; Hardware stack levels used:    1
 12256 ;; Hardware stack levels required when called:    3
 12257 ;; This function calls:
 12258 ;;		Nothing
 12259 ;; This function is called by:
 12260 ;;		_atoi
 12261 ;; This function uses a non-reentrant model
 12262 ;;
 12263                           
 12264                           	psect	text38
 12265  003E1C                     __ptext38:
 12266                           	opt callstack 0
 12267  003E1C                     _isspace:
 12268                           	opt callstack 22
 12269                           
 12270                           ; BSR set to: 0
 12271                           ;incstack = 0
 12272  003E1C  0E01               	movlw	1
 12273  003E1E  0100               	movlb	0	; () banked
 12274  003E20  6F86               	movwf	_isspace$1761& (0+255),b
 12275                           
 12276                           ; BSR set to: 0
 12277  003E22  0E20               	movlw	32
 12278  003E24  1980               	xorwf	isspace@c& (0+255),w,b
 12279  003E26  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 12280  003E28  B4D8               	btfsc	status,2,c
 12281  003E2A  D014               	goto	l6886
 12282                           
 12283                           ; BSR set to: 0
 12284  003E2C  0EF7               	movlw	247
 12285  003E2E  6F82               	movwf	??_isspace& (0+255),b
 12286  003E30  0EFF               	movlw	255
 12287  003E32  6F83               	movwf	(??_isspace+1)& (0+255),b
 12288  003E34  C080  F084         	movff	isspace@c,??_isspace+2
 12289  003E38  C081  F085         	movff	isspace@c+1,??_isspace+3
 12290  003E3C  5182               	movf	??_isspace& (0+255),w,b
 12291  003E3E  2784               	addwf	(??_isspace+2)& (0+255),f,b
 12292  003E40  5183               	movf	(??_isspace+1)& (0+255),w,b
 12293  003E42  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 12294  003E44  5185               	movf	(??_isspace+3)& (0+255),w,b
 12295  003E46  E104               	bnz	u7100
 12296  003E48  0E05               	movlw	5
 12297  003E4A  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 12298  003E4C  A0D8               	btfss	status,0,c
 12299  003E4E  D002               	goto	l6886
 12300  003E50                     u7100:
 12301                           
 12302                           ; BSR set to: 0
 12303  003E50  0E00               	movlw	0
 12304  003E52  6F86               	movwf	_isspace$1761& (0+255),b
 12305  003E54                     l6886:
 12306                           
 12307                           ; BSR set to: 0
 12308  003E54  C086  F080         	movff	_isspace$1761,?_isspace
 12309  003E58  6B81               	clrf	(?_isspace+1)& (0+255),b
 12310                           
 12311                           ; BSR set to: 0
 12312  003E5A  0012               	return		;funcret
 12313  003E5C                     __end_of_isspace:
 12314                           	opt callstack 0
 12315                           
 12316 ;; *************** function _isdigit *****************
 12317 ;; Defined at:
 12318 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;  c               2    0[BANK0 ] int 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;		None
 12323 ;; Return value:  Size  Location     Type
 12324 ;;                  2    0[BANK0 ] int 
 12325 ;; Registers used:
 12326 ;;		wreg, status,2, status,0
 12327 ;; Tracked objects:
 12328 ;;		On entry : 0/0
 12329 ;;		On exit  : 0/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12334 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12335 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;Total ram usage:        6 bytes
 12337 ;; Hardware stack levels used:    1
 12338 ;; Hardware stack levels required when called:    3
 12339 ;; This function calls:
 12340 ;;		Nothing
 12341 ;; This function is called by:
 12342 ;;		_vfpfcnvrt
 12343 ;;		_atoi
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           	psect	text39
 12348  004008                     __ptext39:
 12349                           	opt callstack 0
 12350  004008                     _isdigit:
 12351                           	opt callstack 23
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;incstack = 0
 12355  004008  0ED0               	movlw	208
 12356  00400A  0100               	movlb	0	; () banked
 12357  00400C  6F82               	movwf	??_isdigit& (0+255),b
 12358  00400E  0EFF               	movlw	255
 12359  004010  6F83               	movwf	(??_isdigit+1)& (0+255),b
 12360  004012  C080  F084         	movff	isdigit@c,??_isdigit+2
 12361  004016  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 12362  00401A  5182               	movf	??_isdigit& (0+255),w,b
 12363  00401C  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 12364  00401E  5183               	movf	(??_isdigit+1)& (0+255),w,b
 12365  004020  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 12366  004022  5185               	movf	(??_isdigit+3)& (0+255),w,b
 12367  004024  E106               	bnz	u6940
 12368  004026  0E0A               	movlw	10
 12369  004028  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 12370  00402A  B0D8               	btfsc	status,0,c
 12371  00402C  D002               	goto	u6940
 12372  00402E  0E01               	movlw	1
 12373  004030  D001               	goto	u6950
 12374  004032                     u6940:
 12375  004032  0E00               	movlw	0
 12376  004034                     u6950:
 12377  004034  6F80               	movwf	?_isdigit& (0+255),b
 12378  004036  6B81               	clrf	(?_isdigit+1)& (0+255),b
 12379                           
 12380                           ; BSR set to: 0
 12381  004038  0012               	return		;funcret
 12382  00403A                     __end_of_isdigit:
 12383                           	opt callstack 0
 12384                           
 12385 ;; *************** function ___wmul *****************
 12386 ;; Defined at:
 12387 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12390 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12391 ;; Auto vars:     Size  Location     Type
 12392 ;;  product         2    4[BANK0 ] unsigned int 
 12393 ;; Return value:  Size  Location     Type
 12394 ;;                  2    0[BANK0 ] unsigned int 
 12395 ;; Registers used:
 12396 ;;		wreg, status,2, status,0, prodl, prodh
 12397 ;; Tracked objects:
 12398 ;;		On entry : 0/0
 12399 ;;		On exit  : 0/0
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12403 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12405 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12406 ;;Total ram usage:        6 bytes
 12407 ;; Hardware stack levels used:    1
 12408 ;; Hardware stack levels required when called:    3
 12409 ;; This function calls:
 12410 ;;		Nothing
 12411 ;; This function is called by:
 12412 ;;		_main
 12413 ;;		_atoi
 12414 ;; This function uses a non-reentrant model
 12415 ;;
 12416                           
 12417                           	psect	text40
 12418  0040E8                     __ptext40:
 12419                           	opt callstack 0
 12420  0040E8                     ___wmul:
 12421                           	opt callstack 22
 12422                           
 12423                           ; BSR set to: 0
 12424                           ;incstack = 0
 12425  0040E8  0100               	movlb	0	; () banked
 12426  0040EA  5180               	movf	___wmul@multiplier& (0+255),w,b
 12427  0040EC  0382               	mulwf	___wmul@multiplicand& (0+255),b
 12428  0040EE  CFF3 F084          	movff	prodl,___wmul@product
 12429  0040F2  CFF4 F085          	movff	prodh,___wmul@product+1
 12430  0040F6  5180               	movf	___wmul@multiplier& (0+255),w,b
 12431  0040F8  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12432  0040FA  50F3               	movf	prodl,w,c
 12433  0040FC  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 12434  0040FE  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12435  004100  0382               	mulwf	___wmul@multiplicand& (0+255),b
 12436  004102  50F3               	movf	prodl,w,c
 12437  004104  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 12438                           
 12439                           ; BSR set to: 0
 12440  004106  C084  F080         	movff	___wmul@product,?___wmul
 12441  00410A  C085  F081         	movff	___wmul@product+1,?___wmul+1
 12442                           
 12443                           ; BSR set to: 0
 12444  00410E  0012               	return		;funcret
 12445  004110                     __end_of___wmul:
 12446                           	opt callstack 0
 12447                           
 12448 ;; *************** function _initLCD *****************
 12449 ;; Defined at:
 12450 ;;		line 69 in file "lcd.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;		None
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;		None
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  1    wreg      void 
 12457 ;; Registers used:
 12458 ;;		wreg, status,2, status,0, cstack
 12459 ;; Tracked objects:
 12460 ;;		On entry : 0/0
 12461 ;;		On exit  : 0/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12466 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12467 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12468 ;;Total ram usage:        1 bytes
 12469 ;; Hardware stack levels used:    1
 12470 ;; Hardware stack levels required when called:    7
 12471 ;; This function calls:
 12472 ;;		_lcdInst
 12473 ;;		_send_byte
 12474 ;;		_send_nibble
 12475 ;; This function is called by:
 12476 ;;		_actuators_main
 12477 ;;		_UI_main
 12478 ;;		_main
 12479 ;; This function uses a non-reentrant model
 12480 ;;
 12481                           
 12482                           	psect	text41
 12483  003B2C                     __ptext41:
 12484                           	opt callstack 0
 12485  003B2C                     _initLCD:
 12486                           	opt callstack 23
 12487                           
 12488                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;incstack = 0
 12492  003B2C  0E31               	movlw	49
 12493  003B2E  0100               	movlb	0	; () banked
 12494  003B30  6F84               	movwf	??_initLCD& (0+255),b
 12495  003B32  0EB2               	movlw	178
 12496  003B34                     u10117:
 12497  003B34  2EE8               	decfsz	wreg,f,c
 12498  003B36  D7FE               	bra	u10117
 12499  003B38  2F84               	decfsz	??_initLCD& (0+255),f,b
 12500  003B3A  D7FC               	bra	u10117
 12501  003B3C  F000               	nop	
 12502                           
 12503                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 12504  003B3E  948C               	bcf	3980,2,c	;volatile
 12505                           
 12506                           ;lcd.c: 74:     send_nibble(0b0011);
 12507  003B40  0E03               	movlw	3
 12508  003B42  EC9B  F020         	call	_send_nibble
 12509                           
 12510                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 12511  003B46  0E11               	movlw	17
 12512  003B48  0100               	movlb	0	; () banked
 12513  003B4A  6F84               	movwf	??_initLCD& (0+255),b
 12514  003B4C  0E3A               	movlw	58
 12515  003B4E                     u10127:
 12516  003B4E  2EE8               	decfsz	wreg,f,c
 12517  003B50  D7FE               	bra	u10127
 12518  003B52  2F84               	decfsz	??_initLCD& (0+255),f,b
 12519  003B54  D7FC               	bra	u10127
 12520  003B56  F000               	nop	
 12521                           
 12522                           ;lcd.c: 76:     send_nibble(0b0011);
 12523  003B58  0E03               	movlw	3
 12524  003B5A  EC9B  F020         	call	_send_nibble
 12525                           
 12526                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 12527  003B5E  0E7D               	movlw	125
 12528  003B60                     u10137:
 12529  003B60  2EE8               	decfsz	wreg,f,c
 12530  003B62  D7FE               	bra	u10137
 12531                           
 12532                           ;lcd.c: 78:     send_byte(0b00110010);
 12533  003B64  0E32               	movlw	50
 12534  003B66  ECA8  F020         	call	_send_byte
 12535                           
 12536                           ;lcd.c: 80:     send_byte(0b00101000);
 12537  003B6A  0E28               	movlw	40
 12538  003B6C  ECA8  F020         	call	_send_byte
 12539                           
 12540                           ;lcd.c: 81:     send_byte(0b00001000);
 12541  003B70  0E08               	movlw	8
 12542  003B72  ECA8  F020         	call	_send_byte
 12543                           
 12544                           ;lcd.c: 82:     send_byte(0b00000001);
 12545  003B76  0E01               	movlw	1
 12546  003B78  ECA8  F020         	call	_send_byte
 12547                           
 12548                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 12549  003B7C  0E11               	movlw	17
 12550  003B7E  0100               	movlb	0	; () banked
 12551  003B80  6F84               	movwf	??_initLCD& (0+255),b
 12552  003B82  0E3A               	movlw	58
 12553  003B84                     u10147:
 12554  003B84  2EE8               	decfsz	wreg,f,c
 12555  003B86  D7FE               	bra	u10147
 12556  003B88  2F84               	decfsz	??_initLCD& (0+255),f,b
 12557  003B8A  D7FC               	bra	u10147
 12558  003B8C  F000               	nop	
 12559                           
 12560                           ;lcd.c: 84:     send_byte(0b00000110);
 12561  003B8E  0E06               	movlw	6
 12562  003B90  ECA8  F020         	call	_send_byte
 12563                           
 12564                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 12565  003B94  0E0F               	movlw	15
 12566  003B96  ECC6  F020         	call	_lcdInst
 12567  003B9A  0012               	return		;funcret
 12568  003B9C                     __end_of_initLCD:
 12569                           	opt callstack 0
 12570                           
 12571 ;; *************** function _lcdInst *****************
 12572 ;; Defined at:
 12573 ;;		line 64 in file "lcd.c"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;  data            1    wreg     unsigned char 
 12576 ;; Auto vars:     Size  Location     Type
 12577 ;;  data            1    3[BANK0 ] unsigned char 
 12578 ;; Return value:  Size  Location     Type
 12579 ;;                  1    wreg      void 
 12580 ;; Registers used:
 12581 ;;		wreg, status,2, status,0, cstack
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12590 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12591 ;;Total ram usage:        1 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; Hardware stack levels required when called:    6
 12594 ;; This function calls:
 12595 ;;		_send_byte
 12596 ;; This function is called by:
 12597 ;;		_actuators_main
 12598 ;;		_stepper2
 12599 ;;		_stepper2_back
 12600 ;;		_initLCD
 12601 ;;		_print_echo
 12602 ;;		_ultrasonic_main
 12603 ;;		_number_deploy
 12604 ;;		_UI_main
 12605 ;;		_brake
 12606 ;;		_main
 12607 ;;		_lcd_shift_cursor
 12608 ;;		_lcd_shift_display
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612                           	psect	text42
 12613  00418C                     __ptext42:
 12614                           	opt callstack 0
 12615  00418C                     _lcdInst:
 12616                           	opt callstack 22
 12617                           
 12618                           ;incstack = 0
 12619                           ;lcdInst@data stored from wreg
 12620  00418C  0100               	movlb	0	; () banked
 12621  00418E  6F83               	movwf	lcdInst@data& (0+255),b
 12622                           
 12623                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12624  004190  948C               	bcf	3980,2,c	;volatile
 12625                           
 12626                           ;lcd.c: 66:     send_byte(data);
 12627  004192  0100               	movlb	0	; () banked
 12628  004194  5183               	movf	lcdInst@data& (0+255),w,b
 12629  004196  ECA8  F020         	call	_send_byte
 12630  00419A  0012               	return		;funcret
 12631  00419C                     __end_of_lcdInst:
 12632                           	opt callstack 0
 12633                           
 12634 ;; *************** function _send_byte *****************
 12635 ;; Defined at:
 12636 ;;		line 55 in file "lcd.c"
 12637 ;; Parameters:    Size  Location     Type
 12638 ;;  data            1    wreg     unsigned char 
 12639 ;; Auto vars:     Size  Location     Type
 12640 ;;  data            1    2[BANK0 ] unsigned char 
 12641 ;; Return value:  Size  Location     Type
 12642 ;;                  1    wreg      void 
 12643 ;; Registers used:
 12644 ;;		wreg, status,2, status,0, cstack
 12645 ;; Tracked objects:
 12646 ;;		On entry : 0/0
 12647 ;;		On exit  : 0/0
 12648 ;;		Unchanged: 0/0
 12649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12653 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12654 ;;Total ram usage:        1 bytes
 12655 ;; Hardware stack levels used:    1
 12656 ;; Hardware stack levels required when called:    5
 12657 ;; This function calls:
 12658 ;;		_send_nibble
 12659 ;; This function is called by:
 12660 ;;		_lcdInst
 12661 ;;		_initLCD
 12662 ;;		_putch
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           	psect	text43
 12667  004150                     __ptext43:
 12668                           	opt callstack 0
 12669  004150                     _send_byte:
 12670                           	opt callstack 16
 12671                           
 12672                           ;incstack = 0
 12673                           ;send_byte@data stored from wreg
 12674  004150  0100               	movlb	0	; () banked
 12675  004152  6F82               	movwf	send_byte@data& (0+255),b
 12676                           
 12677                           ;lcd.c: 57:     send_nibble(data >> 4);
 12678  004154  0100               	movlb	0	; () banked
 12679  004156  3982               	swapf	send_byte@data& (0+255),w,b
 12680  004158  0B0F               	andlw	15
 12681  00415A  EC9B  F020         	call	_send_nibble
 12682                           
 12683                           ;lcd.c: 60:     send_nibble(data);
 12684  00415E  0100               	movlb	0	; () banked
 12685  004160  5182               	movf	send_byte@data& (0+255),w,b
 12686  004162  EC9B  F020         	call	_send_nibble
 12687  004166  0012               	return		;funcret
 12688  004168                     __end_of_send_byte:
 12689                           	opt callstack 0
 12690                           
 12691 ;; *************** function _send_nibble *****************
 12692 ;; Defined at:
 12693 ;;		line 44 in file "lcd.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;  data            1    wreg     unsigned char 
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  data            1    1[BANK0 ] unsigned char 
 12698 ;; Return value:  Size  Location     Type
 12699 ;;                  1    wreg      void 
 12700 ;; Registers used:
 12701 ;;		wreg, status,2, status,0, cstack
 12702 ;; Tracked objects:
 12703 ;;		On entry : 0/0
 12704 ;;		On exit  : 0/0
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12711 ;;Total ram usage:        1 bytes
 12712 ;; Hardware stack levels used:    1
 12713 ;; Hardware stack levels required when called:    4
 12714 ;; This function calls:
 12715 ;;		_pulse_e
 12716 ;; This function is called by:
 12717 ;;		_send_byte
 12718 ;;		_initLCD
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text44
 12723  004136                     __ptext44:
 12724                           	opt callstack 0
 12725  004136                     _send_nibble:
 12726                           	opt callstack 16
 12727                           
 12728                           ;incstack = 0
 12729                           ;send_nibble@data stored from wreg
 12730  004136  0100               	movlb	0	; () banked
 12731  004138  6F81               	movwf	send_nibble@data& (0+255),b
 12732                           
 12733                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12734  00413A  508C               	movf	3980,w,c	;volatile
 12735  00413C  0B0F               	andlw	15
 12736  00413E  6E8C               	movwf	3980,c	;volatile
 12737                           
 12738                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12739  004140  0100               	movlb	0	; () banked
 12740  004142  3981               	swapf	send_nibble@data& (0+255),w,b
 12741  004144  0BF0               	andlw	240
 12742  004146  108C               	iorwf	3980,w,c	;volatile
 12743  004148  6E8C               	movwf	3980,c	;volatile
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;lcd.c: 48:     pulse_e();
 12747  00414A  EC34  F020         	call	_pulse_e	;wreg free
 12748  00414E  0012               	return		;funcret
 12749  004150                     __end_of_send_nibble:
 12750                           	opt callstack 0
 12751                           
 12752 ;; *************** function _pulse_e *****************
 12753 ;; Defined at:
 12754 ;;		line 28 in file "lcd.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;		None
 12757 ;; Auto vars:     Size  Location     Type
 12758 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 12759 ;; Return value:  Size  Location     Type
 12760 ;;                  1    wreg      void 
 12761 ;; Registers used:
 12762 ;;		wreg
 12763 ;; Tracked objects:
 12764 ;;		On entry : 0/0
 12765 ;;		On exit  : 0/0
 12766 ;;		Unchanged: 0/0
 12767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12771 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12772 ;;Total ram usage:        1 bytes
 12773 ;; Hardware stack levels used:    1
 12774 ;; Hardware stack levels required when called:    3
 12775 ;; This function calls:
 12776 ;;		Nothing
 12777 ;; This function is called by:
 12778 ;;		_send_nibble
 12779 ;; This function uses a non-reentrant model
 12780 ;;
 12781                           
 12782                           	psect	text45
 12783  004068                     __ptext45:
 12784                           	opt callstack 0
 12785  004068                     _pulse_e:
 12786                           	opt callstack 16
 12787                           
 12788                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12789                           
 12790                           ;incstack = 0
 12791  004068  0E00               	movlw	0
 12792  00406A  BEF2               	btfsc	4082,7,c	;volatile
 12793  00406C  0E01               	movlw	1
 12794  00406E  0100               	movlb	0	; () banked
 12795  004070  6F80               	movwf	pulse_e@interruptState& (0+255),b
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12799  004072  9EF2               	bcf	4082,7,c	;volatile
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12803  004074  868C               	bsf	3980,3,c	;volatile
 12804                           
 12805                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12806  004076  0E14               	movlw	20
 12807  004078                     u10157:
 12808  004078  2EE8               	decfsz	wreg,f,c
 12809  00407A  D7FE               	bra	u10157
 12810  00407C  D000               	nop2	
 12811                           
 12812                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12813  00407E  968C               	bcf	3980,3,c	;volatile
 12814                           
 12815                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12816  004080  0E53               	movlw	83
 12817  004082                     u10167:
 12818  004082  2EE8               	decfsz	wreg,f,c
 12819  004084  D7FE               	bra	u10167
 12820  004086  F000               	nop	
 12821                           
 12822                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12823  004088  0100               	movlb	0	; () banked
 12824  00408A  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 12825  00408C  D002               	bra	u6735
 12826  00408E  9EF2               	bcf	4082,7,c	;volatile
 12827  004090  D001               	bra	u6736
 12828  004092                     u6735:
 12829  004092  8EF2               	bsf	4082,7,c	;volatile
 12830  004094                     u6736:
 12831  004094  0012               	return		;funcret
 12832  004096                     __end_of_pulse_e:
 12833                           	opt callstack 0
 12834                           
 12835 ;; *************** function ___llmod *****************
 12836 ;; Defined at:
 12837 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;  dividend        4    0[BANK0 ] unsigned long 
 12840 ;;  divisor         4    4[BANK0 ] unsigned long 
 12841 ;; Auto vars:     Size  Location     Type
 12842 ;;  counter         1    8[BANK0 ] unsigned char 
 12843 ;; Return value:  Size  Location     Type
 12844 ;;                  4    0[BANK0 ] unsigned long 
 12845 ;; Registers used:
 12846 ;;		wreg, status,2, status,0
 12847 ;; Tracked objects:
 12848 ;;		On entry : 0/0
 12849 ;;		On exit  : 0/0
 12850 ;;		Unchanged: 0/0
 12851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12852 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;Total ram usage:        9 bytes
 12857 ;; Hardware stack levels used:    1
 12858 ;; Hardware stack levels required when called:    3
 12859 ;; This function calls:
 12860 ;;		Nothing
 12861 ;; This function is called by:
 12862 ;;		_UI_main
 12863 ;; This function uses a non-reentrant model
 12864 ;;
 12865                           
 12866                           	psect	text46
 12867  003C0A                     __ptext46:
 12868                           	opt callstack 0
 12869  003C0A                     ___llmod:
 12870                           	opt callstack 26
 12871                           
 12872                           ;incstack = 0
 12873  003C0A  0100               	movlb	0	; () banked
 12874  003C0C  5184               	movf	___llmod@divisor& (0+255),w,b
 12875  003C0E  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12876  003C10  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12877  003C12  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12878  003C14  B4D8               	btfsc	status,2,c
 12879  003C16  D024               	goto	l1173
 12880                           
 12881                           ; BSR set to: 0
 12882  003C18  0E01               	movlw	1
 12883  003C1A  6F88               	movwf	___llmod@counter& (0+255),b
 12884  003C1C  D006               	goto	l7882
 12885  003C1E                     l7880:
 12886                           
 12887                           ; BSR set to: 0
 12888  003C1E  90D8               	bcf	status,0,c
 12889  003C20  3784               	rlcf	___llmod@divisor& (0+255),f,b
 12890  003C22  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12891  003C24  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12892  003C26  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12893  003C28  2B88               	incf	___llmod@counter& (0+255),f,b
 12894  003C2A                     l7882:
 12895                           
 12896                           ; BSR set to: 0
 12897  003C2A  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12898  003C2C  D7F8               	goto	l7880
 12899  003C2E                     u8370:
 12900                           
 12901                           ; BSR set to: 0
 12902  003C2E  5184               	movf	___llmod@divisor& (0+255),w,b
 12903  003C30  5D80               	subwf	___llmod@dividend& (0+255),w,b
 12904  003C32  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12905  003C34  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12906  003C36  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12907  003C38  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12908  003C3A  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12909  003C3C  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12910  003C3E  A0D8               	btfss	status,0,c
 12911  003C40  D008               	goto	l7888
 12912                           
 12913                           ; BSR set to: 0
 12914  003C42  5184               	movf	___llmod@divisor& (0+255),w,b
 12915  003C44  5F80               	subwf	___llmod@dividend& (0+255),f,b
 12916  003C46  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12917  003C48  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12918  003C4A  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12919  003C4C  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12920  003C4E  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12921  003C50  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12922  003C52                     l7888:
 12923                           
 12924                           ; BSR set to: 0
 12925  003C52  90D8               	bcf	status,0,c
 12926  003C54  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12927  003C56  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12928  003C58  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12929  003C5A  3384               	rrcf	___llmod@divisor& (0+255),f,b
 12930                           
 12931                           ; BSR set to: 0
 12932  003C5C  2F88               	decfsz	___llmod@counter& (0+255),f,b
 12933  003C5E  D7E7               	goto	u8370
 12934  003C60                     l1173:
 12935                           
 12936                           ; BSR set to: 0
 12937  003C60  C080  F080         	movff	___llmod@dividend,?___llmod
 12938  003C64  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 12939  003C68  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 12940  003C6C  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 12941                           
 12942                           ; BSR set to: 0
 12943  003C70  0012               	return		;funcret
 12944  003C72                     __end_of___llmod:
 12945                           	opt callstack 0
 12946                           
 12947 ;; *************** function _I2C_Master_Write *****************
 12948 ;; Defined at:
 12949 ;;		line 70 in file "I2C.c"
 12950 ;; Parameters:    Size  Location     Type
 12951 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 12952 ;; Auto vars:     Size  Location     Type
 12953 ;;		None
 12954 ;; Return value:  Size  Location     Type
 12955 ;;                  1    wreg      void 
 12956 ;; Registers used:
 12957 ;;		wreg, status,2, status,0, cstack
 12958 ;; Tracked objects:
 12959 ;;		On entry : 0/0
 12960 ;;		On exit  : 0/0
 12961 ;;		Unchanged: 0/0
 12962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12967 ;;Total ram usage:        2 bytes
 12968 ;; Hardware stack levels used:    1
 12969 ;; Hardware stack levels required when called:    4
 12970 ;; This function calls:
 12971 ;;		_I2C_Master_Wait
 12972 ;; This function is called by:
 12973 ;;		_UI_main
 12974 ;;		_brake
 12975 ;;		_start
 12976 ;;		_backwards
 12977 ;;		_main
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           	psect	text47
 12982  00419C                     __ptext47:
 12983                           	opt callstack 0
 12984  00419C                     _I2C_Master_Write:
 12985                           	opt callstack 25
 12986                           
 12987                           ;I2C.c: 71:     I2C_Master_Wait();
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;incstack = 0
 12991  00419C  ECB4  F020         	call	_I2C_Master_Wait	;wreg free
 12992                           
 12993                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 12994  0041A0  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 12995  0041A4  0012               	return		;funcret
 12996  0041A6                     __end_of_I2C_Master_Write:
 12997                           	opt callstack 0
 12998                           
 12999 ;; *************** function _I2C_Master_Stop *****************
 13000 ;; Defined at:
 13001 ;;		line 65 in file "I2C.c"
 13002 ;; Parameters:    Size  Location     Type
 13003 ;;		None
 13004 ;; Auto vars:     Size  Location     Type
 13005 ;;		None
 13006 ;; Return value:  Size  Location     Type
 13007 ;;                  1    wreg      void 
 13008 ;; Registers used:
 13009 ;;		wreg, status,2, status,0, cstack
 13010 ;; Tracked objects:
 13011 ;;		On entry : 0/0
 13012 ;;		On exit  : 0/0
 13013 ;;		Unchanged: 0/0
 13014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13019 ;;Total ram usage:        0 bytes
 13020 ;; Hardware stack levels used:    1
 13021 ;; Hardware stack levels required when called:    4
 13022 ;; This function calls:
 13023 ;;		_I2C_Master_Wait
 13024 ;; This function is called by:
 13025 ;;		_UI_main
 13026 ;;		_brake
 13027 ;;		_start
 13028 ;;		_backwards
 13029 ;;		_main
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           	psect	text48
 13034  0041A6                     __ptext48:
 13035                           	opt callstack 0
 13036  0041A6                     _I2C_Master_Stop:
 13037                           	opt callstack 25
 13038                           
 13039                           ;I2C.c: 66:     I2C_Master_Wait();
 13040                           
 13041                           ;incstack = 0
 13042  0041A6  ECB4  F020         	call	_I2C_Master_Wait	;wreg free
 13043                           
 13044                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 13045  0041AA  84C5               	bsf	4037,2,c	;volatile
 13046  0041AC  0012               	return		;funcret
 13047  0041AE                     __end_of_I2C_Master_Stop:
 13048                           	opt callstack 0
 13049                           
 13050 ;; *************** function _I2C_Master_Start *****************
 13051 ;; Defined at:
 13052 ;;		line 55 in file "I2C.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;		None
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;		None
 13057 ;; Return value:  Size  Location     Type
 13058 ;;                  1    wreg      void 
 13059 ;; Registers used:
 13060 ;;		wreg, status,2, status,0, cstack
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;Total ram usage:        0 bytes
 13071 ;; Hardware stack levels used:    1
 13072 ;; Hardware stack levels required when called:    4
 13073 ;; This function calls:
 13074 ;;		_I2C_Master_Wait
 13075 ;; This function is called by:
 13076 ;;		_UI_main
 13077 ;;		_brake
 13078 ;;		_start
 13079 ;;		_backwards
 13080 ;; This function uses a non-reentrant model
 13081 ;;
 13082                           
 13083                           	psect	text49
 13084  0041AE                     __ptext49:
 13085                           	opt callstack 0
 13086  0041AE                     _I2C_Master_Start:
 13087                           	opt callstack 25
 13088                           
 13089                           ;I2C.c: 56:     I2C_Master_Wait();
 13090                           
 13091                           ;incstack = 0
 13092  0041AE  ECB4  F020         	call	_I2C_Master_Wait	;wreg free
 13093                           
 13094                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 13095  0041B2  80C5               	bsf	4037,0,c	;volatile
 13096  0041B4  0012               	return		;funcret
 13097  0041B6                     __end_of_I2C_Master_Start:
 13098                           	opt callstack 0
 13099                           
 13100 ;; *************** function _I2C_Master_Read *****************
 13101 ;; Defined at:
 13102 ;;		line 77 in file "I2C.c"
 13103 ;; Parameters:    Size  Location     Type
 13104 ;;  ackBit          1    wreg     unsigned char 
 13105 ;; Auto vars:     Size  Location     Type
 13106 ;;  ackBit          1    1[BANK0 ] unsigned char 
 13107 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  1    wreg      unsigned char 
 13110 ;; Registers used:
 13111 ;;		wreg, status,2, status,0, cstack
 13112 ;; Tracked objects:
 13113 ;;		On entry : 0/0
 13114 ;;		On exit  : 0/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13121 ;;Total ram usage:        2 bytes
 13122 ;; Hardware stack levels used:    1
 13123 ;; Hardware stack levels required when called:    4
 13124 ;; This function calls:
 13125 ;;		_I2C_Master_Wait
 13126 ;; This function is called by:
 13127 ;;		_UI_main
 13128 ;;		_brake
 13129 ;;		_main
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           
 13133                           	psect	text50
 13134  004096                     __ptext50:
 13135                           	opt callstack 0
 13136  004096                     _I2C_Master_Read:
 13137                           	opt callstack 25
 13138                           
 13139                           ;incstack = 0
 13140                           ;I2C_Master_Read@ackBit stored from wreg
 13141  004096  0100               	movlb	0	; () banked
 13142  004098  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 13143                           
 13144                           ;I2C.c: 78:     I2C_Master_Wait();
 13145  00409A  ECB4  F020         	call	_I2C_Master_Wait	;wreg free
 13146                           
 13147                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 13148  00409E  86C5               	bsf	4037,3,c	;volatile
 13149                           
 13150                           ;I2C.c: 81:     I2C_Master_Wait();
 13151  0040A0  ECB4  F020         	call	_I2C_Master_Wait	;wreg free
 13152                           
 13153                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 13154  0040A4  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 13155                           
 13156                           ;I2C.c: 86:     I2C_Master_Wait();
 13157  0040A8  ECB4  F020         	call	_I2C_Master_Wait	;wreg free
 13158                           
 13159                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 13160  0040AC  0100               	movlb	0	; () banked
 13161  0040AE  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 13162  0040B0  D002               	bra	u7915
 13163  0040B2  9AC5               	bcf	4037,5,c	;volatile
 13164  0040B4  D001               	bra	u7916
 13165  0040B6                     u7915:
 13166  0040B6  8AC5               	bsf	4037,5,c	;volatile
 13167  0040B8                     u7916:
 13168                           
 13169                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 13170  0040B8  88C5               	bsf	4037,4,c	;volatile
 13171                           
 13172                           ;I2C.c: 90:     return receivedByte;
 13173  0040BA  0100               	movlb	0	; () banked
 13174  0040BC  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 13175                           
 13176                           ; BSR set to: 0
 13177  0040BE  0012               	return		;funcret
 13178  0040C0                     __end_of_I2C_Master_Read:
 13179                           	opt callstack 0
 13180                           
 13181 ;; *************** function _I2C_Master_Init *****************
 13182 ;; Defined at:
 13183 ;;		line 32 in file "I2C.c"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;		None
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  1    wreg      void 
 13190 ;; Registers used:
 13191 ;;		wreg, status,2, status,0, cstack
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13197 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13199 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13200 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;Total ram usage:        8 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; Hardware stack levels required when called:    4
 13204 ;; This function calls:
 13205 ;;		___lldiv
 13206 ;; This function is called by:
 13207 ;;		_UI_main
 13208 ;;		_start
 13209 ;; This function uses a non-reentrant model
 13210 ;;
 13211                           
 13212                           	psect	text51
 13213  003C72                     __ptext51:
 13214                           	opt callstack 0
 13215  003C72                     _I2C_Master_Init:
 13216                           	opt callstack 25
 13217                           
 13218                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;incstack = 0
 13222  003C72  9AC6               	bcf	4038,5,c	;volatile
 13223                           
 13224                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 13225  003C74  8694               	bsf	3988,3,c	;volatile
 13226                           
 13227                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 13228  003C76  8894               	bsf	3988,4,c	;volatile
 13229                           
 13230                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 13231  003C78  0E80               	movlw	128
 13232  003C7A  0100               	movlb	0	; () banked
 13233  003C7C  6F80               	movwf	___lldiv@dividend& (0+255),b
 13234  003C7E  0E96               	movlw	150
 13235  003C80  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 13236  003C82  0E98               	movlw	152
 13237  003C84  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 13238  003C86  0E00               	movlw	0
 13239  003C88  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 13240  003C8A  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 13241  003C8E  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 13242  003C92  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 13243  003C96  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 13244  003C9A  0E02               	movlw	2
 13245  003C9C                     u7905:
 13246  003C9C  90D8               	bcf	status,0,c
 13247  003C9E  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 13248  003CA0  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 13249  003CA2  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 13250  003CA4  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 13251  003CA6  2EE8               	decfsz	wreg,f,c
 13252  003CA8  D7F9               	goto	u7905
 13253  003CAA  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 13254  003CAE  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 13255  003CB2  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 13256  003CB6  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 13257  003CBA  EC12  F01D         	call	___lldiv	;wreg free
 13258  003CBE  0100               	movlb	0	; () banked
 13259  003CC0  0580               	decf	?___lldiv& (0+255),w,b
 13260  003CC2  6EC8               	movwf	4040,c	;volatile
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 13264  003CC4  0E80               	movlw	128
 13265  003CC6  6EC7               	movwf	4039,c	;volatile
 13266                           
 13267                           ; BSR set to: 0
 13268                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 13269  003CC8  0E28               	movlw	40
 13270  003CCA  6EC6               	movwf	4038,c	;volatile
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 13274  003CCC  0E00               	movlw	0
 13275  003CCE  6EC5               	movwf	4037,c	;volatile
 13276                           
 13277                           ; BSR set to: 0
 13278  003CD0  0012               	return		;funcret
 13279  003CD2                     __end_of_I2C_Master_Init:
 13280                           	opt callstack 0
 13281                           
 13282 ;; *************** function ___lldiv *****************
 13283 ;; Defined at:
 13284 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 13285 ;; Parameters:    Size  Location     Type
 13286 ;;  dividend        4    0[BANK0 ] unsigned long 
 13287 ;;  divisor         4    4[BANK0 ] unsigned long 
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;  quotient        4    8[BANK0 ] unsigned long 
 13290 ;;  counter         1   12[BANK0 ] unsigned char 
 13291 ;; Return value:  Size  Location     Type
 13292 ;;                  4    0[BANK0 ] unsigned long 
 13293 ;; Registers used:
 13294 ;;		wreg, status,2, status,0
 13295 ;; Tracked objects:
 13296 ;;		On entry : 0/0
 13297 ;;		On exit  : 0/0
 13298 ;;		Unchanged: 0/0
 13299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13300 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13301 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13303 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13304 ;;Total ram usage:       13 bytes
 13305 ;; Hardware stack levels used:    1
 13306 ;; Hardware stack levels required when called:    3
 13307 ;; This function calls:
 13308 ;;		Nothing
 13309 ;; This function is called by:
 13310 ;;		_I2C_Master_Init
 13311 ;; This function uses a non-reentrant model
 13312 ;;
 13313                           
 13314                           	psect	text52
 13315  003A24                     __ptext52:
 13316                           	opt callstack 0
 13317  003A24                     ___lldiv:
 13318                           	opt callstack 25
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;incstack = 0
 13322  003A24  0E00               	movlw	0
 13323  003A26  0100               	movlb	0	; () banked
 13324  003A28  6F88               	movwf	___lldiv@quotient& (0+255),b
 13325  003A2A  0E00               	movlw	0
 13326  003A2C  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 13327  003A2E  0E00               	movlw	0
 13328  003A30  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 13329  003A32  0E00               	movlw	0
 13330  003A34  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 13331                           
 13332                           ; BSR set to: 0
 13333  003A36  5184               	movf	___lldiv@divisor& (0+255),w,b
 13334  003A38  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13335  003A3A  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13336  003A3C  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13337  003A3E  B4D8               	btfsc	status,2,c
 13338  003A40  D02A               	goto	l780
 13339                           
 13340                           ; BSR set to: 0
 13341  003A42  0E01               	movlw	1
 13342  003A44  6F8C               	movwf	___lldiv@counter& (0+255),b
 13343  003A46  D006               	goto	l7502
 13344  003A48                     l7500:
 13345                           
 13346                           ; BSR set to: 0
 13347  003A48  90D8               	bcf	status,0,c
 13348  003A4A  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 13349  003A4C  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13350  003A4E  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13351  003A50  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13352  003A52  2B8C               	incf	___lldiv@counter& (0+255),f,b
 13353  003A54                     l7502:
 13354                           
 13355                           ; BSR set to: 0
 13356  003A54  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13357  003A56  D7F8               	goto	l7500
 13358  003A58                     u7880:
 13359                           
 13360                           ; BSR set to: 0
 13361  003A58  90D8               	bcf	status,0,c
 13362  003A5A  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 13363  003A5C  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13364  003A5E  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13365  003A60  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13366                           
 13367                           ; BSR set to: 0
 13368  003A62  5184               	movf	___lldiv@divisor& (0+255),w,b
 13369  003A64  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 13370  003A66  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13371  003A68  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13372  003A6A  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13373  003A6C  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13374  003A6E  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13375  003A70  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13376  003A72  A0D8               	btfss	status,0,c
 13377  003A74  D009               	goto	l7512
 13378                           
 13379                           ; BSR set to: 0
 13380  003A76  5184               	movf	___lldiv@divisor& (0+255),w,b
 13381  003A78  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 13382  003A7A  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13383  003A7C  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13384  003A7E  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13385  003A80  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13386  003A82  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13387  003A84  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13388                           
 13389                           ; BSR set to: 0
 13390  003A86  8188               	bsf	___lldiv@quotient& (0+255),0,b
 13391  003A88                     l7512:
 13392                           
 13393                           ; BSR set to: 0
 13394  003A88  90D8               	bcf	status,0,c
 13395  003A8A  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13396  003A8C  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13397  003A8E  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13398  003A90  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 13399                           
 13400                           ; BSR set to: 0
 13401  003A92  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 13402  003A94  D7E1               	goto	u7880
 13403  003A96                     l780:
 13404                           
 13405                           ; BSR set to: 0
 13406  003A96  C088  F080         	movff	___lldiv@quotient,?___lldiv
 13407  003A9A  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 13408  003A9E  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 13409  003AA2  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 13410                           
 13411                           ; BSR set to: 0
 13412  003AA6  0012               	return		;funcret
 13413  003AA8                     __end_of___lldiv:
 13414                           	opt callstack 0
 13415                           
 13416 ;; *************** function _I2C_Master_RepeatedStart *****************
 13417 ;; Defined at:
 13418 ;;		line 60 in file "I2C.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;		None
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;		None
 13423 ;; Return value:  Size  Location     Type
 13424 ;;                  1    wreg      void 
 13425 ;; Registers used:
 13426 ;;		wreg, status,2, status,0, cstack
 13427 ;; Tracked objects:
 13428 ;;		On entry : 0/0
 13429 ;;		On exit  : 0/0
 13430 ;;		Unchanged: 0/0
 13431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13436 ;;Total ram usage:        0 bytes
 13437 ;; Hardware stack levels used:    1
 13438 ;; Hardware stack levels required when called:    4
 13439 ;; This function calls:
 13440 ;;		_I2C_Master_Wait
 13441 ;; This function is called by:
 13442 ;;		_main
 13443 ;; This function uses a non-reentrant model
 13444 ;;
 13445                           
 13446                           	psect	text53
 13447  0041B6                     __ptext53:
 13448                           	opt callstack 0
 13449  0041B6                     _I2C_Master_RepeatedStart:
 13450                           	opt callstack 26
 13451                           
 13452                           ;I2C.c: 61:     I2C_Master_Wait();
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;incstack = 0
 13456  0041B6  ECB4  F020         	call	_I2C_Master_Wait	;wreg free
 13457                           
 13458                           ;I2C.c: 62:     SSPCON2bits.RSEN = 1;
 13459  0041BA  82C5               	bsf	4037,1,c	;volatile
 13460  0041BC  0012               	return		;funcret
 13461  0041BE                     __end_of_I2C_Master_RepeatedStart:
 13462                           	opt callstack 0
 13463                           
 13464 ;; *************** function _I2C_Master_Wait *****************
 13465 ;; Defined at:
 13466 ;;		line 21 in file "I2C.c"
 13467 ;; Parameters:    Size  Location     Type
 13468 ;;		None
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;		None
 13471 ;; Return value:  Size  Location     Type
 13472 ;;                  1    wreg      void 
 13473 ;; Registers used:
 13474 ;;		wreg, status,2, status,0
 13475 ;; Tracked objects:
 13476 ;;		On entry : 0/0
 13477 ;;		On exit  : 0/0
 13478 ;;		Unchanged: 0/0
 13479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13482 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13484 ;;Total ram usage:        1 bytes
 13485 ;; Hardware stack levels used:    1
 13486 ;; Hardware stack levels required when called:    3
 13487 ;; This function calls:
 13488 ;;		Nothing
 13489 ;; This function is called by:
 13490 ;;		_I2C_Master_Start
 13491 ;;		_I2C_Master_RepeatedStart
 13492 ;;		_I2C_Master_Stop
 13493 ;;		_I2C_Master_Write
 13494 ;;		_I2C_Master_Read
 13495 ;; This function uses a non-reentrant model
 13496 ;;
 13497                           
 13498                           	psect	text54
 13499  004168                     __ptext54:
 13500                           	opt callstack 0
 13501  004168                     _I2C_Master_Wait:
 13502                           	opt callstack 25
 13503                           
 13504                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 13505                           
 13506                           ;I2C.c: 28:     }
 13507                           
 13508                           ;incstack = 0
 13509  004168  B4C7               	btfsc	4039,2,c	;volatile
 13510  00416A  D7FE               	goto	_I2C_Master_Wait
 13511  00416C  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 13512  004170  0E1F               	movlw	31
 13513  004172  0100               	movlb	0	; () banked
 13514  004174  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 13515  004176  B4D8               	btfsc	status,2,c
 13516  004178  0012               	return	
 13517  00417A  D7F6               	goto	_I2C_Master_Wait
 13518  00417C                     __end_of_I2C_Master_Wait:
 13519                           	opt callstack 0
 13520                           
 13521 ;; *************** function _ISR *****************
 13522 ;; Defined at:
 13523 ;;		line 74 in file "main.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;		None
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;		None
 13528 ;; Return value:  Size  Location     Type
 13529 ;;                  1    wreg      void 
 13530 ;; Registers used:
 13531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13532 ;; Tracked objects:
 13533 ;;		On entry : 0/0
 13534 ;;		On exit  : 0/0
 13535 ;;		Unchanged: 0/0
 13536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13541 ;;Total ram usage:        2 bytes
 13542 ;; Hardware stack levels used:    1
 13543 ;; Hardware stack levels required when called:    2
 13544 ;; This function calls:
 13545 ;;		_echo
 13546 ;; This function is called by:
 13547 ;;		Interrupt level 2
 13548 ;; This function uses a non-reentrant model
 13549 ;;
 13550                           
 13551                           	psect	intcode
 13552  000008                     __pintcode:
 13553                           	opt callstack 0
 13554  000008                     _ISR:
 13555                           	opt callstack 14
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;incstack = 0
 13559  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13560  00000A  ED2E  F01F         	call	int_func,f	;refresh shadow registers
 13561                           
 13562                           	psect	intcode_body
 13563  003E5C                     __pintcode_body:
 13564                           	opt callstack 14
 13565  003E5C                     int_func:
 13566                           	opt callstack 14
 13567  003E5C  0006               	pop		; remove dummy address from shadow register refresh
 13568  003E5E  CFD9 F036          	movff	fsr2l,??_ISR
 13569  003E62  CFDA F037          	movff	fsr2h,??_ISR+1
 13570                           
 13571                           ;main.c: 75:  if(RBIF == 1){
 13572  003E66  A0F2               	btfss	4082,0,c	;volatile
 13573  003E68  D012               	goto	i2l402
 13574                           
 13575                           ;main.c: 76:         if (sens){
 13576  003E6A  5058               	movf	_sens,w,c	;volatile
 13577  003E6C  1059               	iorwf	_sens+1,w,c	;volatile
 13578  003E6E  B4D8               	btfsc	status,2,c
 13579  003E70  D005               	goto	i2l6292
 13580                           
 13581                           ;main.c: 77:             RBIE = 0;
 13582  003E72  96F2               	bcf	4082,3,c	;volatile
 13583                           
 13584                           ;main.c: 78:             echo();
 13585  003E74  EC1E  F009         	call	_echo	;wreg free
 13586                           
 13587                           ;main.c: 79:             RBIF = 0;
 13588  003E78  90F2               	bcf	4082,0,c	;volatile
 13589                           
 13590                           ;main.c: 80:             RBIE = 1;
 13591  003E7A  86F2               	bsf	4082,3,c	;volatile
 13592  003E7C                     i2l6292:
 13593                           
 13594                           ;main.c: 82:         if (~sens){
 13595  003E7C  2858               	incf	_sens,w,c	;volatile
 13596  003E7E  E103               	bnz	i2u636_40
 13597  003E80  2859               	incf	_sens+1,w,c	;volatile
 13598  003E82  B4D8               	btfsc	status,2,c
 13599  003E84  D004               	goto	i2l402
 13600  003E86                     i2u636_40:
 13601                           
 13602                           ;main.c: 83:             key_was_pressed = 1;
 13603  003E86  0E01               	movlw	1
 13604  003E88  0101               	movlb	1	; () banked
 13605  003E8A  6F7B               	movwf	_key_was_pressed& (0+255),b	;volatile
 13606                           
 13607                           ; BSR set to: 1
 13608                           ;main.c: 84:             INT1IF = 0;
 13609  003E8C  90F0               	bcf	4080,0,c	;volatile
 13610  003E8E                     i2l402:
 13611  003E8E  C037  FFDA         	movff	??_ISR+1,fsr2h
 13612  003E92  C036  FFD9         	movff	??_ISR,fsr2l
 13613  003E96  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13614  003E98  0011               	retfie		f
 13615  003E9A                     __end_of_ISR:
 13616                           	opt callstack 0
 13617                           
 13618 ;; *************** function _echo *****************
 13619 ;; Defined at:
 13620 ;;		line 102 in file "main.c"
 13621 ;; Parameters:    Size  Location     Type
 13622 ;;		None
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;		None
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  1    wreg      void 
 13627 ;; Registers used:
 13628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;Total ram usage:        4 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    1
 13641 ;; This function calls:
 13642 ;;		___awdiv
 13643 ;;		___fldiv
 13644 ;;		___fltol
 13645 ;;		___xxtofl
 13646 ;; This function is called by:
 13647 ;;		_ISR
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           	psect	text56
 13652  00123C                     __ptext56:
 13653                           	opt callstack 0
 13654  00123C                     _echo:
 13655                           	opt callstack 14
 13656                           
 13657                           ;main.c: 103:     if (b==1){
 13658                           
 13659                           ;incstack = 0
 13660  00123C  045A               	decf	_b,w,c
 13661  00123E  105B               	iorwf	_b+1,w,c
 13662  001240  A4D8               	btfss	status,2,c
 13663  001242  D0A2               	goto	i2l5734
 13664                           
 13665                           ;main.c: 104:         if (RB7 == 1){
 13666  001244  BE81               	btfsc	3969,7,c	;volatile
 13667                           
 13668                           ;main.c: 105:             TMR1ON = 1;
 13669  001246  80CD               	bsf	4045,0,c	;volatile
 13670                           
 13671                           ;main.c: 107:         if (RB7 == 0){
 13672                           
 13673                           ;main.c: 106:         }
 13674  001248  BE81               	btfsc	3969,7,c	;volatile
 13675  00124A  D037               	goto	i2l5710
 13676                           
 13677                           ;main.c: 108:             TMR1ON = 0;
 13678  00124C  90CD               	bcf	4045,0,c	;volatile
 13679                           
 13680                           ;main.c: 109:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 13681  00124E  0EAE               	movlw	174
 13682  001250  6E13               	movwf	___fldiv@a,c
 13683  001252  0E47               	movlw	71
 13684  001254  6E14               	movwf	___fldiv@a+1,c
 13685  001256  0E6B               	movlw	107
 13686  001258  6E15               	movwf	___fldiv@a+2,c
 13687  00125A  0E42               	movlw	66
 13688  00125C  6E16               	movwf	___fldiv@a+3,c
 13689  00125E  50CF               	movf	4047,w,c	;volatile
 13690  001260  6E33               	movwf	(??_echo+1)& (0+255),c
 13691  001262  6A32               	clrf	??_echo& (0+255),c
 13692  001264  50CE               	movf	4046,w,c	;volatile
 13693  001266  6E34               	movwf	(??_echo+2)& (0+255),c
 13694  001268  6A35               	clrf	(??_echo+3)& (0+255),c
 13695  00126A  5032               	movf	??_echo,w,c
 13696  00126C  1234               	iorwf	??_echo+2,f,c
 13697  00126E  5033               	movf	??_echo+1,w,c
 13698  001270  1235               	iorwf	??_echo+3,f,c
 13699  001272  C034  F001         	movff	??_echo+2,___xxtofl@val
 13700  001276  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13701  00127A  0E00               	movlw	0
 13702  00127C  BE02               	btfsc	___xxtofl@val+1,7,c
 13703  00127E  0EFF               	movlw	-1
 13704  001280  6E03               	movwf	___xxtofl@val+2,c
 13705  001282  6E04               	movwf	___xxtofl@val+3,c
 13706  001284  0E01               	movlw	1
 13707  001286  EC25  F017         	call	___xxtofl
 13708  00128A  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13709  00128E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13710  001292  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13711  001296  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13712  00129A  EC2D  F00F         	call	___fldiv	;wreg free
 13713  00129E  C00F  F028         	movff	?___fldiv,___fltol@f1
 13714  0012A2  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13715  0012A6  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13716  0012AA  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13717  0012AE  ECBF  F01B         	call	___fltol	;wreg free
 13718  0012B2  C028  F061         	movff	?___fltol,_a
 13719  0012B6  C029  F062         	movff	?___fltol+1,_a+1
 13720  0012BA                     i2l5710:
 13721                           
 13722                           ;main.c: 113:         if (a[0]>=2 && a[0]<=200){
 13723  0012BA  BE62               	btfsc	_a+1,7,c
 13724  0012BC  D065               	goto	i2l5734
 13725  0012BE  5062               	movf	_a+1,w,c
 13726  0012C0  E104               	bnz	i2u555_40
 13727  0012C2  0E02               	movlw	2
 13728  0012C4  5C61               	subwf	_a,w,c
 13729  0012C6  A0D8               	btfss	status,0,c
 13730  0012C8  D05F               	goto	i2l5734
 13731  0012CA                     i2u555_40:
 13732  0012CA  BE62               	btfsc	_a+1,7,c
 13733  0012CC  D006               	goto	i2u556_40
 13734  0012CE  5062               	movf	_a+1,w,c
 13735  0012D0  E15B               	bnz	i2l5734
 13736  0012D2  0EC9               	movlw	201
 13737  0012D4  5C61               	subwf	_a,w,c
 13738  0012D6  B0D8               	btfsc	status,0,c
 13739  0012D8  D057               	goto	i2l5734
 13740  0012DA                     i2u556_40:
 13741                           
 13742                           ;main.c: 114:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 13743  0012DA  0440               	decf	_sumf,w,c
 13744  0012DC  B4D8               	btfsc	status,2,c
 13745  0012DE  D01B               	goto	i2l5726
 13746  0012E0  0102               	movlb	2	; () banked
 13747  0012E2  5150               	movf	_dist_final& (0+255),w,b
 13748  0012E4  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 13749  0012E6  B4D8               	btfsc	status,2,c
 13750  0012E8  D016               	goto	i2l5726
 13751                           
 13752                           ; BSR set to: 2
 13753  0012EA  5152               	movf	(_dist_final+2)& (0+255),w,b
 13754  0012EC  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 13755  0012EE  B4D8               	btfsc	status,2,c
 13756  0012F0  D012               	goto	i2l5726
 13757                           
 13758                           ; BSR set to: 2
 13759  0012F2  5154               	movf	(_dist_final+4)& (0+255),w,b
 13760  0012F4  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 13761  0012F6  B4D8               	btfsc	status,2,c
 13762  0012F8  D00E               	goto	i2l5726
 13763                           
 13764                           ; BSR set to: 2
 13765                           ;main.c: 115:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 13766  0012FA  5154               	movf	(_dist_final+4)& (0+255),w,b
 13767  0012FC  2552               	addwf	(_dist_final+2)& (0+255),w,b
 13768  0012FE  6E32               	movwf	??_echo& (0+255),c
 13769  001300  5155               	movf	(_dist_final+5)& (0+255),w,b
 13770  001302  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 13771  001304  6E33               	movwf	(??_echo+1)& (0+255),c
 13772  001306  5150               	movf	_dist_final& (0+255),w,b
 13773  001308  2432               	addwf	??_echo,w,c
 13774  00130A  6E38               	movwf	_sum,c
 13775  00130C  5151               	movf	(_dist_final+1)& (0+255),w,b
 13776  00130E  2033               	addwfc	??_echo+1,w,c
 13777  001310  6E39               	movwf	_sum+1,c
 13778                           
 13779                           ; BSR set to: 2
 13780                           ;main.c: 116:                 sumf[0] = 1;
 13781  001312  0E01               	movlw	1
 13782  001314  6E40               	movwf	_sumf,c
 13783  001316                     i2l5726:
 13784                           
 13785                           ;main.c: 118:             if (sumf[0]){
 13786  001316  5040               	movf	_sumf,w,c
 13787  001318  B4D8               	btfsc	status,2,c
 13788  00131A  D029               	goto	i2l5732
 13789                           
 13790                           ;main.c: 119:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 13791  00131C  90D8               	bcf	status,0,c
 13792  00131E  3450               	rlcf	_meas,w,c	;volatile
 13793  001320  6ED9               	movwf	fsr2l,c
 13794  001322  3451               	rlcf	_meas+1,w,c	;volatile
 13795  001324  6EDA               	movwf	fsr2h,c
 13796  001326  0E50               	movlw	low _dist_final
 13797  001328  26D9               	addwf	fsr2l,f,c
 13798  00132A  0E02               	movlw	high _dist_final
 13799  00132C  22DA               	addwfc	fsr2h,f,c
 13800  00132E  CFDE F032          	movff	postinc2,??_echo
 13801  001332  CFDD F033          	movff	postdec2,??_echo+1
 13802  001336  C038  F034         	movff	_sum,??_echo+2
 13803  00133A  C039  F035         	movff	_sum+1,??_echo+3
 13804  00133E  5032               	movf	??_echo,w,c
 13805  001340  5E34               	subwf	??_echo+2,f,c
 13806  001342  5033               	movf	??_echo+1,w,c
 13807  001344  5A35               	subwfb	??_echo+3,f,c
 13808  001346  5061               	movf	_a,w,c
 13809  001348  2434               	addwf	??_echo+2,w,c
 13810  00134A  6E38               	movwf	_sum,c
 13811  00134C  5062               	movf	_a+1,w,c
 13812  00134E  2035               	addwfc	??_echo+3,w,c
 13813  001350  6E39               	movwf	_sum+1,c
 13814                           
 13815                           ;main.c: 120:                 dist_final[0][5] = (sum[0]/5);
 13816  001352  C038  F001         	movff	_sum,___awdiv@dividend
 13817  001356  C039  F002         	movff	_sum+1,___awdiv@dividend+1
 13818  00135A  0E00               	movlw	0
 13819  00135C  6E04               	movwf	___awdiv@divisor+1,c
 13820  00135E  0E05               	movlw	5
 13821  001360  6E03               	movwf	___awdiv@divisor,c
 13822  001362  EC54  F01D         	call	___awdiv	;wreg free
 13823  001366  C001  F25A         	movff	?___awdiv,_dist_final+10
 13824  00136A  C002  F25B         	movff	?___awdiv+1,_dist_final+11
 13825  00136E                     i2l5732:
 13826                           
 13827                           ;main.c: 122:             dist_final[0][meas] = a[0];
 13828  00136E  90D8               	bcf	status,0,c
 13829  001370  3450               	rlcf	_meas,w,c	;volatile
 13830  001372  6ED9               	movwf	fsr2l,c
 13831  001374  3451               	rlcf	_meas+1,w,c	;volatile
 13832  001376  6EDA               	movwf	fsr2h,c
 13833  001378  0E50               	movlw	low _dist_final
 13834  00137A  26D9               	addwf	fsr2l,f,c
 13835  00137C  0E02               	movlw	high _dist_final
 13836  00137E  22DA               	addwfc	fsr2h,f,c
 13837  001380  C061  FFDE         	movff	_a,postinc2
 13838  001384  C062  FFDD         	movff	_a+1,postdec2
 13839  001388                     i2l5734:
 13840                           
 13841                           ;main.c: 125:     if (b==2){
 13842  001388  0E02               	movlw	2
 13843  00138A  185A               	xorwf	_b,w,c
 13844  00138C  105B               	iorwf	_b+1,w,c
 13845  00138E  A4D8               	btfss	status,2,c
 13846  001390  D0A4               	goto	i2l5768
 13847                           
 13848                           ;main.c: 126:         if (RB6 == 1){
 13849  001392  BC81               	btfsc	3969,6,c	;volatile
 13850                           
 13851                           ;main.c: 127:             TMR1ON = 1;
 13852  001394  80CD               	bsf	4045,0,c	;volatile
 13853                           
 13854                           ;main.c: 129:         if (RB6 == 0){
 13855                           
 13856                           ;main.c: 128:         }
 13857  001396  BC81               	btfsc	3969,6,c	;volatile
 13858  001398  D037               	goto	i2l5744
 13859                           
 13860                           ;main.c: 130:             TMR1ON = 0;
 13861  00139A  90CD               	bcf	4045,0,c	;volatile
 13862                           
 13863                           ;main.c: 131:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 13864  00139C  0EAE               	movlw	174
 13865  00139E  6E13               	movwf	___fldiv@a,c
 13866  0013A0  0E47               	movlw	71
 13867  0013A2  6E14               	movwf	___fldiv@a+1,c
 13868  0013A4  0E6B               	movlw	107
 13869  0013A6  6E15               	movwf	___fldiv@a+2,c
 13870  0013A8  0E42               	movlw	66
 13871  0013AA  6E16               	movwf	___fldiv@a+3,c
 13872  0013AC  50CF               	movf	4047,w,c	;volatile
 13873  0013AE  6E33               	movwf	(??_echo+1)& (0+255),c
 13874  0013B0  6A32               	clrf	??_echo& (0+255),c
 13875  0013B2  50CE               	movf	4046,w,c	;volatile
 13876  0013B4  6E34               	movwf	(??_echo+2)& (0+255),c
 13877  0013B6  6A35               	clrf	(??_echo+3)& (0+255),c
 13878  0013B8  5032               	movf	??_echo,w,c
 13879  0013BA  1234               	iorwf	??_echo+2,f,c
 13880  0013BC  5033               	movf	??_echo+1,w,c
 13881  0013BE  1235               	iorwf	??_echo+3,f,c
 13882  0013C0  C034  F001         	movff	??_echo+2,___xxtofl@val
 13883  0013C4  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13884  0013C8  0E00               	movlw	0
 13885  0013CA  BE02               	btfsc	___xxtofl@val+1,7,c
 13886  0013CC  0EFF               	movlw	-1
 13887  0013CE  6E03               	movwf	___xxtofl@val+2,c
 13888  0013D0  6E04               	movwf	___xxtofl@val+3,c
 13889  0013D2  0E01               	movlw	1
 13890  0013D4  EC25  F017         	call	___xxtofl
 13891  0013D8  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13892  0013DC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13893  0013E0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13894  0013E4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13895  0013E8  EC2D  F00F         	call	___fldiv	;wreg free
 13896  0013EC  C00F  F028         	movff	?___fldiv,___fltol@f1
 13897  0013F0  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13898  0013F4  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13899  0013F8  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13900  0013FC  ECBF  F01B         	call	___fltol	;wreg free
 13901  001400  C028  F063         	movff	?___fltol,_a+2
 13902  001404  C029  F064         	movff	?___fltol+1,_a+3
 13903  001408                     i2l5744:
 13904                           
 13905                           ;main.c: 134:                 if (a[1]>=2 && a[1]<=200){
 13906  001408  BE64               	btfsc	_a+3,7,c
 13907  00140A  D067               	goto	i2l5768
 13908  00140C  5064               	movf	_a+3,w,c
 13909  00140E  E104               	bnz	i2u565_40
 13910  001410  0E02               	movlw	2
 13911  001412  5C63               	subwf	_a+2,w,c
 13912  001414  A0D8               	btfss	status,0,c
 13913  001416  D061               	goto	i2l5768
 13914  001418                     i2u565_40:
 13915  001418  BE64               	btfsc	_a+3,7,c
 13916  00141A  D006               	goto	i2u566_40
 13917  00141C  5064               	movf	_a+3,w,c
 13918  00141E  E15D               	bnz	i2l5768
 13919  001420  0EC9               	movlw	201
 13920  001422  5C63               	subwf	_a+2,w,c
 13921  001424  B0D8               	btfsc	status,0,c
 13922  001426  D059               	goto	i2l5768
 13923  001428                     i2u566_40:
 13924                           
 13925                           ;main.c: 136:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 13926  001428  0441               	decf	_sumf+1,w,c
 13927  00142A  B4D8               	btfsc	status,2,c
 13928  00142C  D01B               	goto	i2l5760
 13929  00142E  0102               	movlb	2	; () banked
 13930  001430  515C               	movf	(_dist_final+12)& (0+255),w,b
 13931  001432  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 13932  001434  B4D8               	btfsc	status,2,c
 13933  001436  D016               	goto	i2l5760
 13934                           
 13935                           ; BSR set to: 2
 13936  001438  515E               	movf	(_dist_final+14)& (0+255),w,b
 13937  00143A  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 13938  00143C  B4D8               	btfsc	status,2,c
 13939  00143E  D012               	goto	i2l5760
 13940                           
 13941                           ; BSR set to: 2
 13942  001440  5160               	movf	(_dist_final+16)& (0+255),w,b
 13943  001442  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 13944  001444  B4D8               	btfsc	status,2,c
 13945  001446  D00E               	goto	i2l5760
 13946                           
 13947                           ; BSR set to: 2
 13948                           ;main.c: 137:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 13949  001448  515E               	movf	(_dist_final+14)& (0+255),w,b
 13950  00144A  255C               	addwf	(_dist_final+12)& (0+255),w,b
 13951  00144C  6E32               	movwf	??_echo& (0+255),c
 13952  00144E  515F               	movf	(_dist_final+15)& (0+255),w,b
 13953  001450  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 13954  001452  6E33               	movwf	(??_echo+1)& (0+255),c
 13955  001454  5160               	movf	(_dist_final+16)& (0+255),w,b
 13956  001456  2432               	addwf	??_echo,w,c
 13957  001458  6E3A               	movwf	_sum+2,c
 13958  00145A  5161               	movf	(_dist_final+17)& (0+255),w,b
 13959  00145C  2033               	addwfc	??_echo+1,w,c
 13960  00145E  6E3B               	movwf	_sum+3,c
 13961                           
 13962                           ; BSR set to: 2
 13963                           ;main.c: 138:             sumf[1] = 1;
 13964  001460  0E01               	movlw	1
 13965  001462  6E41               	movwf	_sumf+1,c
 13966  001464                     i2l5760:
 13967                           
 13968                           ;main.c: 140:         if (sumf[1]){
 13969  001464  5041               	movf	_sumf+1,w,c
 13970  001466  B4D8               	btfsc	status,2,c
 13971  001468  D02B               	goto	i2l5766
 13972                           
 13973                           ;main.c: 141:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 13974  00146A  90D8               	bcf	status,0,c
 13975  00146C  3450               	rlcf	_meas,w,c	;volatile
 13976  00146E  6ED9               	movwf	fsr2l,c
 13977  001470  3451               	rlcf	_meas+1,w,c	;volatile
 13978  001472  6EDA               	movwf	fsr2h,c
 13979  001474  0E5C               	movlw	low (_dist_final+12)
 13980  001476  26D9               	addwf	fsr2l,f,c
 13981  001478  0E02               	movlw	high (_dist_final+12)
 13982  00147A  22DA               	addwfc	fsr2h,f,c
 13983  00147C  CFDE F032          	movff	postinc2,??_echo
 13984  001480  CFDD F033          	movff	postdec2,??_echo+1
 13985  001484  EE20  F03A         	lfsr	2,_sum+2
 13986  001488  CFDE F034          	movff	postinc2,??_echo+2
 13987  00148C  CFDD F035          	movff	postdec2,??_echo+3
 13988  001490  5032               	movf	??_echo,w,c
 13989  001492  5E34               	subwf	??_echo+2,f,c
 13990  001494  5033               	movf	??_echo+1,w,c
 13991  001496  5A35               	subwfb	??_echo+3,f,c
 13992  001498  5063               	movf	_a+2,w,c
 13993  00149A  2434               	addwf	??_echo+2,w,c
 13994  00149C  6E3A               	movwf	_sum+2,c
 13995  00149E  5064               	movf	_a+3,w,c
 13996  0014A0  2035               	addwfc	??_echo+3,w,c
 13997  0014A2  6E3B               	movwf	_sum+3,c
 13998                           
 13999                           ;main.c: 142:             dist_final[1][5] = (sum[1]/5);
 14000  0014A4  C03A  F001         	movff	_sum+2,___awdiv@dividend
 14001  0014A8  C03B  F002         	movff	_sum+3,___awdiv@dividend+1
 14002  0014AC  0E00               	movlw	0
 14003  0014AE  6E04               	movwf	___awdiv@divisor+1,c
 14004  0014B0  0E05               	movlw	5
 14005  0014B2  6E03               	movwf	___awdiv@divisor,c
 14006  0014B4  EC54  F01D         	call	___awdiv	;wreg free
 14007  0014B8  C001  F266         	movff	?___awdiv,_dist_final+22
 14008  0014BC  C002  F267         	movff	?___awdiv+1,_dist_final+23
 14009  0014C0                     i2l5766:
 14010                           
 14011                           ;main.c: 144:         dist_final[1][meas] = a[1];
 14012  0014C0  90D8               	bcf	status,0,c
 14013  0014C2  3450               	rlcf	_meas,w,c	;volatile
 14014  0014C4  6ED9               	movwf	fsr2l,c
 14015  0014C6  3451               	rlcf	_meas+1,w,c	;volatile
 14016  0014C8  6EDA               	movwf	fsr2h,c
 14017  0014CA  0E5C               	movlw	low (_dist_final+12)
 14018  0014CC  26D9               	addwf	fsr2l,f,c
 14019  0014CE  0E02               	movlw	high (_dist_final+12)
 14020  0014D0  22DA               	addwfc	fsr2h,f,c
 14021  0014D2  C063  FFDE         	movff	_a+2,postinc2
 14022  0014D6  C064  FFDD         	movff	_a+3,postdec2
 14023  0014DA                     i2l5768:
 14024                           
 14025                           ;main.c: 147:     if (b==3){
 14026  0014DA  0E03               	movlw	3
 14027  0014DC  185A               	xorwf	_b,w,c
 14028  0014DE  105B               	iorwf	_b+1,w,c
 14029  0014E0  A4D8               	btfss	status,2,c
 14030  0014E2  D0A4               	goto	i2l5802
 14031                           
 14032                           ;main.c: 148:         if (RB5 == 1){
 14033  0014E4  BA81               	btfsc	3969,5,c	;volatile
 14034                           
 14035                           ;main.c: 149:             TMR1ON = 1;
 14036  0014E6  80CD               	bsf	4045,0,c	;volatile
 14037                           
 14038                           ;main.c: 151:         if (RB5 == 0){
 14039                           
 14040                           ;main.c: 150:         }
 14041  0014E8  BA81               	btfsc	3969,5,c	;volatile
 14042  0014EA  D037               	goto	i2l5778
 14043                           
 14044                           ;main.c: 152:             TMR1ON = 0;
 14045  0014EC  90CD               	bcf	4045,0,c	;volatile
 14046                           
 14047                           ;main.c: 153:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 14048  0014EE  0EAE               	movlw	174
 14049  0014F0  6E13               	movwf	___fldiv@a,c
 14050  0014F2  0E47               	movlw	71
 14051  0014F4  6E14               	movwf	___fldiv@a+1,c
 14052  0014F6  0E6B               	movlw	107
 14053  0014F8  6E15               	movwf	___fldiv@a+2,c
 14054  0014FA  0E42               	movlw	66
 14055  0014FC  6E16               	movwf	___fldiv@a+3,c
 14056  0014FE  50CF               	movf	4047,w,c	;volatile
 14057  001500  6E33               	movwf	(??_echo+1)& (0+255),c
 14058  001502  6A32               	clrf	??_echo& (0+255),c
 14059  001504  50CE               	movf	4046,w,c	;volatile
 14060  001506  6E34               	movwf	(??_echo+2)& (0+255),c
 14061  001508  6A35               	clrf	(??_echo+3)& (0+255),c
 14062  00150A  5032               	movf	??_echo,w,c
 14063  00150C  1234               	iorwf	??_echo+2,f,c
 14064  00150E  5033               	movf	??_echo+1,w,c
 14065  001510  1235               	iorwf	??_echo+3,f,c
 14066  001512  C034  F001         	movff	??_echo+2,___xxtofl@val
 14067  001516  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 14068  00151A  0E00               	movlw	0
 14069  00151C  BE02               	btfsc	___xxtofl@val+1,7,c
 14070  00151E  0EFF               	movlw	-1
 14071  001520  6E03               	movwf	___xxtofl@val+2,c
 14072  001522  6E04               	movwf	___xxtofl@val+3,c
 14073  001524  0E01               	movlw	1
 14074  001526  EC25  F017         	call	___xxtofl
 14075  00152A  C001  F00F         	movff	?___xxtofl,___fldiv@b
 14076  00152E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 14077  001532  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 14078  001536  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 14079  00153A  EC2D  F00F         	call	___fldiv	;wreg free
 14080  00153E  C00F  F028         	movff	?___fldiv,___fltol@f1
 14081  001542  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 14082  001546  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 14083  00154A  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 14084  00154E  ECBF  F01B         	call	___fltol	;wreg free
 14085  001552  C028  F065         	movff	?___fltol,_a+4
 14086  001556  C029  F066         	movff	?___fltol+1,_a+5
 14087  00155A                     i2l5778:
 14088                           
 14089                           ;main.c: 156:                 if (a[2]>=2 && a[2]<=200){
 14090  00155A  BE66               	btfsc	_a+5,7,c
 14091  00155C  D067               	goto	i2l5802
 14092  00155E  5066               	movf	_a+5,w,c
 14093  001560  E104               	bnz	i2u575_40
 14094  001562  0E02               	movlw	2
 14095  001564  5C65               	subwf	_a+4,w,c
 14096  001566  A0D8               	btfss	status,0,c
 14097  001568  D061               	goto	i2l5802
 14098  00156A                     i2u575_40:
 14099  00156A  BE66               	btfsc	_a+5,7,c
 14100  00156C  D006               	goto	i2u576_40
 14101  00156E  5066               	movf	_a+5,w,c
 14102  001570  E15D               	bnz	i2l5802
 14103  001572  0EC9               	movlw	201
 14104  001574  5C65               	subwf	_a+4,w,c
 14105  001576  B0D8               	btfsc	status,0,c
 14106  001578  D059               	goto	i2l5802
 14107  00157A                     i2u576_40:
 14108                           
 14109                           ;main.c: 158:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 14110  00157A  0442               	decf	_sumf+2,w,c
 14111  00157C  B4D8               	btfsc	status,2,c
 14112  00157E  D01B               	goto	i2l5794
 14113  001580  0102               	movlb	2	; () banked
 14114  001582  5168               	movf	(_dist_final+24)& (0+255),w,b
 14115  001584  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 14116  001586  B4D8               	btfsc	status,2,c
 14117  001588  D016               	goto	i2l5794
 14118                           
 14119                           ; BSR set to: 2
 14120  00158A  516A               	movf	(_dist_final+26)& (0+255),w,b
 14121  00158C  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 14122  00158E  B4D8               	btfsc	status,2,c
 14123  001590  D012               	goto	i2l5794
 14124                           
 14125                           ; BSR set to: 2
 14126  001592  516C               	movf	(_dist_final+28)& (0+255),w,b
 14127  001594  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 14128  001596  B4D8               	btfsc	status,2,c
 14129  001598  D00E               	goto	i2l5794
 14130                           
 14131                           ; BSR set to: 2
 14132                           ;main.c: 159:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 14133  00159A  516A               	movf	(_dist_final+26)& (0+255),w,b
 14134  00159C  2568               	addwf	(_dist_final+24)& (0+255),w,b
 14135  00159E  6E32               	movwf	??_echo& (0+255),c
 14136  0015A0  516B               	movf	(_dist_final+27)& (0+255),w,b
 14137  0015A2  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 14138  0015A4  6E33               	movwf	(??_echo+1)& (0+255),c
 14139  0015A6  516C               	movf	(_dist_final+28)& (0+255),w,b
 14140  0015A8  2432               	addwf	??_echo,w,c
 14141  0015AA  6E3C               	movwf	_sum+4,c
 14142  0015AC  516D               	movf	(_dist_final+29)& (0+255),w,b
 14143  0015AE  2033               	addwfc	??_echo+1,w,c
 14144  0015B0  6E3D               	movwf	_sum+5,c
 14145                           
 14146                           ; BSR set to: 2
 14147                           ;main.c: 160:             sumf[2] = 1;
 14148  0015B2  0E01               	movlw	1
 14149  0015B4  6E42               	movwf	_sumf+2,c
 14150  0015B6                     i2l5794:
 14151                           
 14152                           ;main.c: 162:         if (sumf[2]){
 14153  0015B6  5042               	movf	_sumf+2,w,c
 14154  0015B8  B4D8               	btfsc	status,2,c
 14155  0015BA  D02B               	goto	i2l5800
 14156                           
 14157                           ;main.c: 163:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 14158  0015BC  90D8               	bcf	status,0,c
 14159  0015BE  3450               	rlcf	_meas,w,c	;volatile
 14160  0015C0  6ED9               	movwf	fsr2l,c
 14161  0015C2  3451               	rlcf	_meas+1,w,c	;volatile
 14162  0015C4  6EDA               	movwf	fsr2h,c
 14163  0015C6  0E68               	movlw	low (_dist_final+24)
 14164  0015C8  26D9               	addwf	fsr2l,f,c
 14165  0015CA  0E02               	movlw	high (_dist_final+24)
 14166  0015CC  22DA               	addwfc	fsr2h,f,c
 14167  0015CE  CFDE F032          	movff	postinc2,??_echo
 14168  0015D2  CFDD F033          	movff	postdec2,??_echo+1
 14169  0015D6  EE20  F03C         	lfsr	2,_sum+4
 14170  0015DA  CFDE F034          	movff	postinc2,??_echo+2
 14171  0015DE  CFDD F035          	movff	postdec2,??_echo+3
 14172  0015E2  5032               	movf	??_echo,w,c
 14173  0015E4  5E34               	subwf	??_echo+2,f,c
 14174  0015E6  5033               	movf	??_echo+1,w,c
 14175  0015E8  5A35               	subwfb	??_echo+3,f,c
 14176  0015EA  5065               	movf	_a+4,w,c
 14177  0015EC  2434               	addwf	??_echo+2,w,c
 14178  0015EE  6E3C               	movwf	_sum+4,c
 14179  0015F0  5066               	movf	_a+5,w,c
 14180  0015F2  2035               	addwfc	??_echo+3,w,c
 14181  0015F4  6E3D               	movwf	_sum+5,c
 14182                           
 14183                           ;main.c: 164:             dist_final[2][5] = (sum[2]/5);
 14184  0015F6  C03C  F001         	movff	_sum+4,___awdiv@dividend
 14185  0015FA  C03D  F002         	movff	_sum+5,___awdiv@dividend+1
 14186  0015FE  0E00               	movlw	0
 14187  001600  6E04               	movwf	___awdiv@divisor+1,c
 14188  001602  0E05               	movlw	5
 14189  001604  6E03               	movwf	___awdiv@divisor,c
 14190  001606  EC54  F01D         	call	___awdiv	;wreg free
 14191  00160A  C001  F272         	movff	?___awdiv,_dist_final+34
 14192  00160E  C002  F273         	movff	?___awdiv+1,_dist_final+35
 14193  001612                     i2l5800:
 14194                           
 14195                           ;main.c: 166:         dist_final[2][meas] = a[2];
 14196  001612  90D8               	bcf	status,0,c
 14197  001614  3450               	rlcf	_meas,w,c	;volatile
 14198  001616  6ED9               	movwf	fsr2l,c
 14199  001618  3451               	rlcf	_meas+1,w,c	;volatile
 14200  00161A  6EDA               	movwf	fsr2h,c
 14201  00161C  0E68               	movlw	low (_dist_final+24)
 14202  00161E  26D9               	addwf	fsr2l,f,c
 14203  001620  0E02               	movlw	high (_dist_final+24)
 14204  001622  22DA               	addwfc	fsr2h,f,c
 14205  001624  C065  FFDE         	movff	_a+4,postinc2
 14206  001628  C066  FFDD         	movff	_a+5,postdec2
 14207  00162C                     i2l5802:
 14208                           
 14209                           ;main.c: 169:     if (b==4){
 14210  00162C  0E04               	movlw	4
 14211  00162E  185A               	xorwf	_b,w,c
 14212  001630  105B               	iorwf	_b+1,w,c
 14213  001632  A4D8               	btfss	status,2,c
 14214  001634  0012               	return	
 14215                           
 14216                           ;main.c: 170:         if (RB4 == 1){
 14217  001636  B881               	btfsc	3969,4,c	;volatile
 14218                           
 14219                           ;main.c: 171:             TMR1ON = 1;
 14220  001638  80CD               	bsf	4045,0,c	;volatile
 14221                           
 14222                           ;main.c: 173:         if (RB4 == 0){
 14223                           
 14224                           ;main.c: 172:         }
 14225  00163A  B881               	btfsc	3969,4,c	;volatile
 14226  00163C  D037               	goto	i2l5812
 14227                           
 14228                           ;main.c: 174:             TMR1ON = 0;
 14229  00163E  90CD               	bcf	4045,0,c	;volatile
 14230                           
 14231                           ;main.c: 175:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 14232  001640  0EAE               	movlw	174
 14233  001642  6E13               	movwf	___fldiv@a,c
 14234  001644  0E47               	movlw	71
 14235  001646  6E14               	movwf	___fldiv@a+1,c
 14236  001648  0E6B               	movlw	107
 14237  00164A  6E15               	movwf	___fldiv@a+2,c
 14238  00164C  0E42               	movlw	66
 14239  00164E  6E16               	movwf	___fldiv@a+3,c
 14240  001650  50CF               	movf	4047,w,c	;volatile
 14241  001652  6E33               	movwf	(??_echo+1)& (0+255),c
 14242  001654  6A32               	clrf	??_echo& (0+255),c
 14243  001656  50CE               	movf	4046,w,c	;volatile
 14244  001658  6E34               	movwf	(??_echo+2)& (0+255),c
 14245  00165A  6A35               	clrf	(??_echo+3)& (0+255),c
 14246  00165C  5032               	movf	??_echo,w,c
 14247  00165E  1234               	iorwf	??_echo+2,f,c
 14248  001660  5033               	movf	??_echo+1,w,c
 14249  001662  1235               	iorwf	??_echo+3,f,c
 14250  001664  C034  F001         	movff	??_echo+2,___xxtofl@val
 14251  001668  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 14252  00166C  0E00               	movlw	0
 14253  00166E  BE02               	btfsc	___xxtofl@val+1,7,c
 14254  001670  0EFF               	movlw	-1
 14255  001672  6E03               	movwf	___xxtofl@val+2,c
 14256  001674  6E04               	movwf	___xxtofl@val+3,c
 14257  001676  0E01               	movlw	1
 14258  001678  EC25  F017         	call	___xxtofl
 14259  00167C  C001  F00F         	movff	?___xxtofl,___fldiv@b
 14260  001680  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 14261  001684  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 14262  001688  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 14263  00168C  EC2D  F00F         	call	___fldiv	;wreg free
 14264  001690  C00F  F028         	movff	?___fldiv,___fltol@f1
 14265  001694  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 14266  001698  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 14267  00169C  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 14268  0016A0  ECBF  F01B         	call	___fltol	;wreg free
 14269  0016A4  C028  F067         	movff	?___fltol,_a+6
 14270  0016A8  C029  F068         	movff	?___fltol+1,_a+7
 14271  0016AC                     i2l5812:
 14272                           
 14273                           ;main.c: 178:                 if (a[3]>=2 && a[3]<=200){
 14274  0016AC  BE68               	btfsc	_a+7,7,c
 14275  0016AE  0012               	return	
 14276  0016B0  5068               	movf	_a+7,w,c
 14277  0016B2  E104               	bnz	i2u585_40
 14278  0016B4  0E02               	movlw	2
 14279  0016B6  5C67               	subwf	_a+6,w,c
 14280  0016B8  A0D8               	btfss	status,0,c
 14281  0016BA  0012               	return	
 14282  0016BC                     i2u585_40:
 14283  0016BC  BE68               	btfsc	_a+7,7,c
 14284  0016BE  D006               	goto	i2u586_40
 14285  0016C0  5068               	movf	_a+7,w,c
 14286  0016C2  E15D               	bnz	i2l429
 14287  0016C4  0EC9               	movlw	201
 14288  0016C6  5C67               	subwf	_a+6,w,c
 14289  0016C8  B0D8               	btfsc	status,0,c
 14290  0016CA  0012               	return	
 14291  0016CC                     i2u586_40:
 14292                           
 14293                           ;main.c: 180:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 14294  0016CC  0443               	decf	_sumf+3,w,c
 14295  0016CE  B4D8               	btfsc	status,2,c
 14296  0016D0  D01B               	goto	i2l5828
 14297  0016D2  0102               	movlb	2	; () banked
 14298  0016D4  5174               	movf	(_dist_final+36)& (0+255),w,b
 14299  0016D6  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 14300  0016D8  B4D8               	btfsc	status,2,c
 14301  0016DA  D016               	goto	i2l5828
 14302                           
 14303                           ; BSR set to: 2
 14304  0016DC  5176               	movf	(_dist_final+38)& (0+255),w,b
 14305  0016DE  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 14306  0016E0  B4D8               	btfsc	status,2,c
 14307  0016E2  D012               	goto	i2l5828
 14308                           
 14309                           ; BSR set to: 2
 14310  0016E4  5178               	movf	(_dist_final+40)& (0+255),w,b
 14311  0016E6  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 14312  0016E8  B4D8               	btfsc	status,2,c
 14313  0016EA  D00E               	goto	i2l5828
 14314                           
 14315                           ; BSR set to: 2
 14316                           ;main.c: 181:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 14317  0016EC  5176               	movf	(_dist_final+38)& (0+255),w,b
 14318  0016EE  2574               	addwf	(_dist_final+36)& (0+255),w,b
 14319  0016F0  6E32               	movwf	??_echo& (0+255),c
 14320  0016F2  5177               	movf	(_dist_final+39)& (0+255),w,b
 14321  0016F4  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 14322  0016F6  6E33               	movwf	(??_echo+1)& (0+255),c
 14323  0016F8  5178               	movf	(_dist_final+40)& (0+255),w,b
 14324  0016FA  2432               	addwf	??_echo,w,c
 14325  0016FC  6E3E               	movwf	_sum+6,c
 14326  0016FE  5179               	movf	(_dist_final+41)& (0+255),w,b
 14327  001700  2033               	addwfc	??_echo+1,w,c
 14328  001702  6E3F               	movwf	_sum+7,c
 14329                           
 14330                           ; BSR set to: 2
 14331                           ;main.c: 182:             sumf[3] = 1;
 14332  001704  0E01               	movlw	1
 14333  001706  6E43               	movwf	_sumf+3,c
 14334  001708                     i2l5828:
 14335                           
 14336                           ;main.c: 184:         if (sumf[3]){
 14337  001708  5043               	movf	_sumf+3,w,c
 14338  00170A  B4D8               	btfsc	status,2,c
 14339  00170C  D02B               	goto	i2l5834
 14340                           
 14341                           ;main.c: 185:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 14342  00170E  90D8               	bcf	status,0,c
 14343  001710  3450               	rlcf	_meas,w,c	;volatile
 14344  001712  6ED9               	movwf	fsr2l,c
 14345  001714  3451               	rlcf	_meas+1,w,c	;volatile
 14346  001716  6EDA               	movwf	fsr2h,c
 14347  001718  0E74               	movlw	low (_dist_final+36)
 14348  00171A  26D9               	addwf	fsr2l,f,c
 14349  00171C  0E02               	movlw	high (_dist_final+36)
 14350  00171E  22DA               	addwfc	fsr2h,f,c
 14351  001720  CFDE F032          	movff	postinc2,??_echo
 14352  001724  CFDD F033          	movff	postdec2,??_echo+1
 14353  001728  EE20  F03E         	lfsr	2,_sum+6
 14354  00172C  CFDE F034          	movff	postinc2,??_echo+2
 14355  001730  CFDD F035          	movff	postdec2,??_echo+3
 14356  001734  5032               	movf	??_echo,w,c
 14357  001736  5E34               	subwf	??_echo+2,f,c
 14358  001738  5033               	movf	??_echo+1,w,c
 14359  00173A  5A35               	subwfb	??_echo+3,f,c
 14360  00173C  5067               	movf	_a+6,w,c
 14361  00173E  2434               	addwf	??_echo+2,w,c
 14362  001740  6E3E               	movwf	_sum+6,c
 14363  001742  5068               	movf	_a+7,w,c
 14364  001744  2035               	addwfc	??_echo+3,w,c
 14365  001746  6E3F               	movwf	_sum+7,c
 14366                           
 14367                           ;main.c: 186:             dist_final[3][5] = (sum[3]/5);
 14368  001748  C03E  F001         	movff	_sum+6,___awdiv@dividend
 14369  00174C  C03F  F002         	movff	_sum+7,___awdiv@dividend+1
 14370  001750  0E00               	movlw	0
 14371  001752  6E04               	movwf	___awdiv@divisor+1,c
 14372  001754  0E05               	movlw	5
 14373  001756  6E03               	movwf	___awdiv@divisor,c
 14374  001758  EC54  F01D         	call	___awdiv	;wreg free
 14375  00175C  C001  F27E         	movff	?___awdiv,_dist_final+46
 14376  001760  C002  F27F         	movff	?___awdiv+1,_dist_final+47
 14377  001764                     i2l5834:
 14378                           
 14379                           ;main.c: 188:         dist_final[3][meas] = a[3];
 14380  001764  90D8               	bcf	status,0,c
 14381  001766  3450               	rlcf	_meas,w,c	;volatile
 14382  001768  6ED9               	movwf	fsr2l,c
 14383  00176A  3451               	rlcf	_meas+1,w,c	;volatile
 14384  00176C  6EDA               	movwf	fsr2h,c
 14385  00176E  0E74               	movlw	low (_dist_final+36)
 14386  001770  26D9               	addwf	fsr2l,f,c
 14387  001772  0E02               	movlw	high (_dist_final+36)
 14388  001774  22DA               	addwfc	fsr2h,f,c
 14389  001776  C067  FFDE         	movff	_a+6,postinc2
 14390  00177A  C068  FFDD         	movff	_a+7,postdec2
 14391  00177E                     i2l429:
 14392  00177E  0012               	return		;funcret
 14393  001780                     __end_of_echo:
 14394                           	opt callstack 0
 14395                           
 14396 ;; *************** function ___xxtofl *****************
 14397 ;; Defined at:
 14398 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  sign            1    wreg     unsigned char 
 14401 ;;  val             4    0[COMRAM] long 
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;  sign            1    8[COMRAM] unsigned char 
 14404 ;;  arg             4   10[COMRAM] unsigned long 
 14405 ;;  exp             1    9[COMRAM] unsigned char 
 14406 ;; Return value:  Size  Location     Type
 14407 ;;                  4    0[COMRAM] unsigned char 
 14408 ;; Registers used:
 14409 ;;		wreg, status,2, status,0
 14410 ;; Tracked objects:
 14411 ;;		On entry : 0/0
 14412 ;;		On exit  : 0/0
 14413 ;;		Unchanged: 0/0
 14414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14416 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14417 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14418 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14419 ;;Total ram usage:       14 bytes
 14420 ;; Hardware stack levels used:    1
 14421 ;; This function calls:
 14422 ;;		Nothing
 14423 ;; This function is called by:
 14424 ;;		_echo
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           
 14428                           	psect	text57
 14429  002E4A                     __ptext57:
 14430                           	opt callstack 0
 14431  002E4A                     ___xxtofl:
 14432                           	opt callstack 14
 14433                           
 14434                           ;incstack = 0
 14435                           ;___xxtofl@sign stored from wreg
 14436  002E4A  6E09               	movwf	___xxtofl@sign,c
 14437  002E4C  5009               	movf	___xxtofl@sign,w,c
 14438  002E4E  A4D8               	btfss	status,2,c
 14439  002E50  AE04               	btfss	___xxtofl@val+3,7,c
 14440  002E52  D01A               	goto	i2l1408
 14441  002E54  C001  F005         	movff	___xxtofl@val,??___xxtofl
 14442  002E58  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 14443  002E5C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 14444  002E60  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 14445  002E64  1E05               	comf	??___xxtofl,f,c
 14446  002E66  1E06               	comf	??___xxtofl+1,f,c
 14447  002E68  1E07               	comf	??___xxtofl+2,f,c
 14448  002E6A  1E08               	comf	??___xxtofl+3,f,c
 14449  002E6C  2A05               	incf	??___xxtofl,f,c
 14450  002E6E  0E00               	movlw	0
 14451  002E70  2206               	addwfc	??___xxtofl+1,f,c
 14452  002E72  2207               	addwfc	??___xxtofl+2,f,c
 14453  002E74  2208               	addwfc	??___xxtofl+3,f,c
 14454  002E76  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14455  002E7A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14456  002E7E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14457  002E82  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14458  002E86  D008               	goto	i2l5558
 14459  002E88                     i2l1408:
 14460  002E88  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14461  002E8C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14462  002E90  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14463  002E94  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14464  002E98                     i2l5558:
 14465  002E98  5001               	movf	___xxtofl@val,w,c
 14466  002E9A  1002               	iorwf	___xxtofl@val+1,w,c
 14467  002E9C  1003               	iorwf	___xxtofl@val+2,w,c
 14468  002E9E  1004               	iorwf	___xxtofl@val+3,w,c
 14469  002EA0  A4D8               	btfss	status,2,c
 14470  002EA2  D009               	goto	i2l5564
 14471  002EA4  0E00               	movlw	0
 14472  002EA6  6E01               	movwf	?___xxtofl,c
 14473  002EA8  0E00               	movlw	0
 14474  002EAA  6E02               	movwf	?___xxtofl+1,c
 14475  002EAC  0E00               	movlw	0
 14476  002EAE  6E03               	movwf	?___xxtofl+2,c
 14477  002EB0  0E00               	movlw	0
 14478  002EB2  6E04               	movwf	?___xxtofl+3,c
 14479  002EB4  0012               	return	
 14480  002EB6                     i2l5564:
 14481  002EB6  0E96               	movlw	150
 14482  002EB8  6E0A               	movwf	___xxtofl@exp,c
 14483  002EBA  D006               	goto	i2l5568
 14484  002EBC                     i2l5566:
 14485  002EBC  2A0A               	incf	___xxtofl@exp,f,c
 14486  002EBE  90D8               	bcf	status,0,c
 14487  002EC0  320E               	rrcf	___xxtofl@arg+3,f,c
 14488  002EC2  320D               	rrcf	___xxtofl@arg+2,f,c
 14489  002EC4  320C               	rrcf	___xxtofl@arg+1,f,c
 14490  002EC6  320B               	rrcf	___xxtofl@arg,f,c
 14491  002EC8                     i2l5568:
 14492  002EC8  0E00               	movlw	0
 14493  002ECA  140B               	andwf	___xxtofl@arg,w,c
 14494  002ECC  6E05               	movwf	??___xxtofl& (0+255),c
 14495  002ECE  0E00               	movlw	0
 14496  002ED0  140C               	andwf	___xxtofl@arg+1,w,c
 14497  002ED2  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14498  002ED4  0E00               	movlw	0
 14499  002ED6  140D               	andwf	___xxtofl@arg+2,w,c
 14500  002ED8  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14501  002EDA  0EFE               	movlw	254
 14502  002EDC  140E               	andwf	___xxtofl@arg+3,w,c
 14503  002EDE  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14504  002EE0  5005               	movf	??___xxtofl,w,c
 14505  002EE2  1006               	iorwf	??___xxtofl+1,w,c
 14506  002EE4  1007               	iorwf	??___xxtofl+2,w,c
 14507  002EE6  1008               	iorwf	??___xxtofl+3,w,c
 14508  002EE8  B4D8               	btfsc	status,2,c
 14509  002EEA  D00D               	goto	i2l1415
 14510  002EEC  D7E7               	goto	i2l5566
 14511  002EEE                     i2l5570:
 14512  002EEE  2A0A               	incf	___xxtofl@exp,f,c
 14513  002EF0  0E01               	movlw	1
 14514  002EF2  260B               	addwf	___xxtofl@arg,f,c
 14515  002EF4  0E00               	movlw	0
 14516  002EF6  220C               	addwfc	___xxtofl@arg+1,f,c
 14517  002EF8  220D               	addwfc	___xxtofl@arg+2,f,c
 14518  002EFA  220E               	addwfc	___xxtofl@arg+3,f,c
 14519  002EFC  90D8               	bcf	status,0,c
 14520  002EFE  320E               	rrcf	___xxtofl@arg+3,f,c
 14521  002F00  320D               	rrcf	___xxtofl@arg+2,f,c
 14522  002F02  320C               	rrcf	___xxtofl@arg+1,f,c
 14523  002F04  320B               	rrcf	___xxtofl@arg,f,c
 14524  002F06                     i2l1415:
 14525  002F06  0E00               	movlw	0
 14526  002F08  140B               	andwf	___xxtofl@arg,w,c
 14527  002F0A  6E05               	movwf	??___xxtofl& (0+255),c
 14528  002F0C  0E00               	movlw	0
 14529  002F0E  140C               	andwf	___xxtofl@arg+1,w,c
 14530  002F10  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14531  002F12  0E00               	movlw	0
 14532  002F14  140D               	andwf	___xxtofl@arg+2,w,c
 14533  002F16  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14534  002F18  0EFF               	movlw	255
 14535  002F1A  140E               	andwf	___xxtofl@arg+3,w,c
 14536  002F1C  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14537  002F1E  5005               	movf	??___xxtofl,w,c
 14538  002F20  1006               	iorwf	??___xxtofl+1,w,c
 14539  002F22  1007               	iorwf	??___xxtofl+2,w,c
 14540  002F24  1008               	iorwf	??___xxtofl+3,w,c
 14541  002F26  B4D8               	btfsc	status,2,c
 14542  002F28  D007               	goto	i2l5578
 14543  002F2A  D7E1               	goto	i2l5570
 14544  002F2C                     i2l5576:
 14545  002F2C  060A               	decf	___xxtofl@exp,f,c
 14546  002F2E  90D8               	bcf	status,0,c
 14547  002F30  360B               	rlcf	___xxtofl@arg,f,c
 14548  002F32  360C               	rlcf	___xxtofl@arg+1,f,c
 14549  002F34  360D               	rlcf	___xxtofl@arg+2,f,c
 14550  002F36  360E               	rlcf	___xxtofl@arg+3,f,c
 14551  002F38                     i2l5578:
 14552  002F38  BE0D               	btfsc	___xxtofl@arg+2,7,c
 14553  002F3A  D003               	goto	i2u545_40
 14554  002F3C  0E02               	movlw	2
 14555  002F3E  600A               	cpfslt	___xxtofl@exp,c
 14556  002F40  D7F5               	goto	i2l5576
 14557  002F42                     i2u545_40:
 14558  002F42  A00A               	btfss	___xxtofl@exp,0,c
 14559  002F44  9E0D               	bcf	___xxtofl@arg+2,7,c
 14560  002F46  90D8               	bcf	status,0,c
 14561  002F48  320A               	rrcf	___xxtofl@exp,f,c
 14562  002F4A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14563  002F4E  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 14564  002F50  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 14565  002F52  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 14566  002F54  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14567  002F58  6A07               	clrf	??___xxtofl+2,c
 14568  002F5A  6A06               	clrf	??___xxtofl+1,c
 14569  002F5C  6A05               	clrf	??___xxtofl,c
 14570  002F5E  5005               	movf	??___xxtofl,w,c
 14571  002F60  120B               	iorwf	___xxtofl@arg,f,c
 14572  002F62  5006               	movf	??___xxtofl+1,w,c
 14573  002F64  120C               	iorwf	___xxtofl@arg+1,f,c
 14574  002F66  5007               	movf	??___xxtofl+2,w,c
 14575  002F68  120D               	iorwf	___xxtofl@arg+2,f,c
 14576  002F6A  5008               	movf	??___xxtofl+3,w,c
 14577  002F6C  120E               	iorwf	___xxtofl@arg+3,f,c
 14578  002F6E  5009               	movf	___xxtofl@sign,w,c
 14579  002F70  A4D8               	btfss	status,2,c
 14580  002F72  AE04               	btfss	___xxtofl@val+3,7,c
 14581  002F74  D001               	goto	i2l5594
 14582  002F76  8E0E               	bsf	___xxtofl@arg+3,7,c
 14583  002F78                     i2l5594:
 14584  002F78  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14585  002F7C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14586  002F80  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14587  002F84  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14588  002F88  0012               	return		;funcret
 14589  002F8A                     __end_of___xxtofl:
 14590                           	opt callstack 0
 14591                           
 14592 ;; *************** function ___fltol *****************
 14593 ;; Defined at:
 14594 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;  f1              4   39[COMRAM] unsigned char 
 14597 ;; Auto vars:     Size  Location     Type
 14598 ;;  exp1            1   48[COMRAM] unsigned char 
 14599 ;;  sign1           1   47[COMRAM] unsigned char 
 14600 ;; Return value:  Size  Location     Type
 14601 ;;                  4   39[COMRAM] long 
 14602 ;; Registers used:
 14603 ;;		wreg, status,2, status,0
 14604 ;; Tracked objects:
 14605 ;;		On entry : 0/0
 14606 ;;		On exit  : 0/0
 14607 ;;		Unchanged: 0/0
 14608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14611 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14612 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14613 ;;Total ram usage:       10 bytes
 14614 ;; Hardware stack levels used:    1
 14615 ;; This function calls:
 14616 ;;		Nothing
 14617 ;; This function is called by:
 14618 ;;		_echo
 14619 ;; This function uses a non-reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text58
 14623  00377E                     __ptext58:
 14624                           	opt callstack 0
 14625  00377E                     ___fltol:
 14626                           	opt callstack 14
 14627                           
 14628                           ;incstack = 0
 14629  00377E  342A               	rlcf	___fltol@f1+2,w,c
 14630  003780  342B               	rlcf	___fltol@f1+3,w,c
 14631  003782  6E31               	movwf	___fltol@exp1,c
 14632  003784  5031               	movf	___fltol@exp1,w,c
 14633  003786  A4D8               	btfss	status,2,c
 14634  003788  D009               	goto	i2l5498
 14635  00378A                     i2u529_40:
 14636  00378A  0E00               	movlw	0
 14637  00378C  6E28               	movwf	?___fltol,c
 14638  00378E  0E00               	movlw	0
 14639  003790  6E29               	movwf	?___fltol+1,c
 14640  003792  0E00               	movlw	0
 14641  003794  6E2A               	movwf	?___fltol+2,c
 14642  003796  0E00               	movlw	0
 14643  003798  6E2B               	movwf	?___fltol+3,c
 14644  00379A  0012               	return	
 14645  00379C                     i2l5498:
 14646  00379C  C028  F02C         	movff	___fltol@f1,??___fltol
 14647  0037A0  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 14648  0037A4  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 14649  0037A8  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 14650  0037AC  0E20               	movlw	32
 14651  0037AE  D005               	goto	i2u530_40
 14652  0037B0                     i2u530_45:
 14653  0037B0  90D8               	bcf	status,0,c
 14654  0037B2  322F               	rrcf	??___fltol+3,f,c
 14655  0037B4  322E               	rrcf	??___fltol+2,f,c
 14656  0037B6  322D               	rrcf	??___fltol+1,f,c
 14657  0037B8  322C               	rrcf	??___fltol,f,c
 14658  0037BA                     i2u530_40:
 14659  0037BA  2EE8               	decfsz	wreg,f,c
 14660  0037BC  D7F9               	goto	i2u530_45
 14661  0037BE  502C               	movf	??___fltol,w,c
 14662  0037C0  6E30               	movwf	___fltol@sign1,c
 14663  0037C2  8E2A               	bsf	___fltol@f1+2,7,c
 14664  0037C4  0EFF               	movlw	255
 14665  0037C6  1628               	andwf	___fltol@f1,f,c
 14666  0037C8  0EFF               	movlw	255
 14667  0037CA  1629               	andwf	___fltol@f1+1,f,c
 14668  0037CC  0EFF               	movlw	255
 14669  0037CE  162A               	andwf	___fltol@f1+2,f,c
 14670  0037D0  0E00               	movlw	0
 14671  0037D2  162B               	andwf	___fltol@f1+3,f,c
 14672  0037D4  0E96               	movlw	150
 14673  0037D6  5E31               	subwf	___fltol@exp1,f,c
 14674  0037D8  AE31               	btfss	___fltol@exp1,7,c
 14675  0037DA  D00D               	goto	i2l5518
 14676  0037DC  5031               	movf	___fltol@exp1,w,c
 14677  0037DE  0A80               	xorlw	128
 14678  0037E0  0F97               	addlw	151
 14679  0037E2  A0D8               	btfss	status,0,c
 14680  0037E4  D7D2               	goto	i2u529_40
 14681  0037E6                     i2l5514:
 14682  0037E6  90D8               	bcf	status,0,c
 14683  0037E8  322B               	rrcf	___fltol@f1+3,f,c
 14684  0037EA  322A               	rrcf	___fltol@f1+2,f,c
 14685  0037EC  3229               	rrcf	___fltol@f1+1,f,c
 14686  0037EE  3228               	rrcf	___fltol@f1,f,c
 14687  0037F0  3E31               	incfsz	___fltol@exp1,f,c
 14688  0037F2  D7F9               	goto	i2l5514
 14689  0037F4  D00D               	goto	i2u534_40
 14690  0037F6                     i2l5518:
 14691  0037F6  0E1F               	movlw	31
 14692  0037F8  6431               	cpfsgt	___fltol@exp1,c
 14693  0037FA  D007               	goto	i2l5526
 14694  0037FC  D7C6               	goto	i2u529_40
 14695  0037FE                     i2l5524:
 14696  0037FE  90D8               	bcf	status,0,c
 14697  003800  3628               	rlcf	___fltol@f1,f,c
 14698  003802  3629               	rlcf	___fltol@f1+1,f,c
 14699  003804  362A               	rlcf	___fltol@f1+2,f,c
 14700  003806  362B               	rlcf	___fltol@f1+3,f,c
 14701  003808  0631               	decf	___fltol@exp1,f,c
 14702  00380A                     i2l5526:
 14703  00380A  5031               	movf	___fltol@exp1,w,c
 14704  00380C  A4D8               	btfss	status,2,c
 14705  00380E  D7F7               	goto	i2l5524
 14706  003810                     i2u534_40:
 14707  003810  5030               	movf	___fltol@sign1,w,c
 14708  003812  B4D8               	btfsc	status,2,c
 14709  003814  D008               	goto	i2l5532
 14710  003816  1E2B               	comf	___fltol@f1+3,f,c
 14711  003818  1E2A               	comf	___fltol@f1+2,f,c
 14712  00381A  1E29               	comf	___fltol@f1+1,f,c
 14713  00381C  6C28               	negf	___fltol@f1,c
 14714  00381E  0E00               	movlw	0
 14715  003820  2229               	addwfc	___fltol@f1+1,f,c
 14716  003822  222A               	addwfc	___fltol@f1+2,f,c
 14717  003824  222B               	addwfc	___fltol@f1+3,f,c
 14718  003826                     i2l5532:
 14719  003826  C028  F028         	movff	___fltol@f1,?___fltol
 14720  00382A  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 14721  00382E  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 14722  003832  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 14723  003836  0012               	return		;funcret
 14724  003838                     __end_of___fltol:
 14725                           	opt callstack 0
 14726                           
 14727 ;; *************** function ___fldiv *****************
 14728 ;; Defined at:
 14729 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14730 ;; Parameters:    Size  Location     Type
 14731 ;;  b               4   14[COMRAM] long 
 14732 ;;  a               4   18[COMRAM] long 
 14733 ;; Auto vars:     Size  Location     Type
 14734 ;;  grs             4   33[COMRAM] unsigned long 
 14735 ;;  rem             4   26[COMRAM] unsigned long 
 14736 ;;  new_exp         2   31[COMRAM] short 
 14737 ;;  aexp            1   38[COMRAM] unsigned char 
 14738 ;;  bexp            1   37[COMRAM] unsigned char 
 14739 ;;  sign            1   30[COMRAM] unsigned char 
 14740 ;; Return value:  Size  Location     Type
 14741 ;;                  4   14[COMRAM] unsigned char 
 14742 ;; Registers used:
 14743 ;;		wreg, status,2, status,0
 14744 ;; Tracked objects:
 14745 ;;		On entry : 0/0
 14746 ;;		On exit  : 0/0
 14747 ;;		Unchanged: 0/0
 14748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14749 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14750 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14751 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14752 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14753 ;;Total ram usage:       25 bytes
 14754 ;; Hardware stack levels used:    1
 14755 ;; This function calls:
 14756 ;;		Nothing
 14757 ;; This function is called by:
 14758 ;;		_echo
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761                           
 14762                           	psect	text59
 14763  001E5A                     __ptext59:
 14764                           	opt callstack 0
 14765  001E5A                     ___fldiv:
 14766                           	opt callstack 14
 14767                           
 14768                           ;incstack = 0
 14769  001E5A  5012               	movf	___fldiv@b+3,w,c
 14770  001E5C  0B80               	andlw	128
 14771  001E5E  6E1F               	movwf	___fldiv@sign,c
 14772  001E60  5012               	movf	___fldiv@b+3,w,c
 14773  001E62  2412               	addwf	___fldiv@b+3,w,c
 14774  001E64  6E26               	movwf	___fldiv@bexp,c
 14775  001E66  BE11               	btfsc	___fldiv@b+2,7,c
 14776  001E68  8026               	bsf	___fldiv@bexp,0,c
 14777  001E6A  5026               	movf	___fldiv@bexp,w,c
 14778  001E6C  B4D8               	btfsc	status,2,c
 14779  001E6E  D00D               	goto	i2l5326
 14780  001E70  2826               	incf	___fldiv@bexp,w,c
 14781  001E72  A4D8               	btfss	status,2,c
 14782  001E74  D008               	goto	i2l5322
 14783  001E76  0E00               	movlw	0
 14784  001E78  6E0F               	movwf	___fldiv@b,c
 14785  001E7A  0E00               	movlw	0
 14786  001E7C  6E10               	movwf	___fldiv@b+1,c
 14787  001E7E  0E00               	movlw	0
 14788  001E80  6E11               	movwf	___fldiv@b+2,c
 14789  001E82  0E00               	movlw	0
 14790  001E84  6E12               	movwf	___fldiv@b+3,c
 14791  001E86                     i2l5322:
 14792  001E86  8E11               	bsf	___fldiv@b+2,7,c
 14793  001E88  D006               	goto	L5
 14794  001E8A                     i2l5326:
 14795  001E8A  0E00               	movlw	0
 14796  001E8C  6E0F               	movwf	___fldiv@b,c
 14797  001E8E  0E00               	movlw	0
 14798  001E90  6E10               	movwf	___fldiv@b+1,c
 14799  001E92  0E00               	movlw	0
 14800  001E94  6E11               	movwf	___fldiv@b+2,c
 14801  001E96                     L5:
 14802  001E96  0E00               	movlw	0
 14803  001E98  6E12               	movwf	___fldiv@b+3,c
 14804  001E9A  5016               	movf	___fldiv@a+3,w,c
 14805  001E9C  0B80               	andlw	128
 14806  001E9E  1A1F               	xorwf	___fldiv@sign,f,c
 14807  001EA0  5016               	movf	___fldiv@a+3,w,c
 14808  001EA2  2416               	addwf	___fldiv@a+3,w,c
 14809  001EA4  6E27               	movwf	___fldiv@aexp,c
 14810  001EA6  BE15               	btfsc	___fldiv@a+2,7,c
 14811  001EA8  8027               	bsf	___fldiv@aexp,0,c
 14812  001EAA  5027               	movf	___fldiv@aexp,w,c
 14813  001EAC  B4D8               	btfsc	status,2,c
 14814  001EAE  D00D               	goto	i2l5346
 14815  001EB0  2827               	incf	___fldiv@aexp,w,c
 14816  001EB2  A4D8               	btfss	status,2,c
 14817  001EB4  D008               	goto	i2l5342
 14818  001EB6  0E00               	movlw	0
 14819  001EB8  6E13               	movwf	___fldiv@a,c
 14820  001EBA  0E00               	movlw	0
 14821  001EBC  6E14               	movwf	___fldiv@a+1,c
 14822  001EBE  0E00               	movlw	0
 14823  001EC0  6E15               	movwf	___fldiv@a+2,c
 14824  001EC2  0E00               	movlw	0
 14825  001EC4  6E16               	movwf	___fldiv@a+3,c
 14826  001EC6                     i2l5342:
 14827  001EC6  8E15               	bsf	___fldiv@a+2,7,c
 14828  001EC8  D006               	goto	L6
 14829  001ECA                     i2l5346:
 14830  001ECA  0E00               	movlw	0
 14831  001ECC  6E13               	movwf	___fldiv@a,c
 14832  001ECE  0E00               	movlw	0
 14833  001ED0  6E14               	movwf	___fldiv@a+1,c
 14834  001ED2  0E00               	movlw	0
 14835  001ED4  6E15               	movwf	___fldiv@a+2,c
 14836  001ED6                     L6:
 14837  001ED6  0E00               	movlw	0
 14838  001ED8  6E16               	movwf	___fldiv@a+3,c
 14839  001EDA  5013               	movf	___fldiv@a,w,c
 14840  001EDC  1014               	iorwf	___fldiv@a+1,w,c
 14841  001EDE  1015               	iorwf	___fldiv@a+2,w,c
 14842  001EE0  1016               	iorwf	___fldiv@a+3,w,c
 14843  001EE2  A4D8               	btfss	status,2,c
 14844  001EE4  D017               	goto	i2l5360
 14845  001EE6  0E00               	movlw	0
 14846  001EE8  6E0F               	movwf	___fldiv@b,c
 14847  001EEA  0E00               	movlw	0
 14848  001EEC  6E10               	movwf	___fldiv@b+1,c
 14849  001EEE  0E00               	movlw	0
 14850  001EF0  6E11               	movwf	___fldiv@b+2,c
 14851  001EF2  0E00               	movlw	0
 14852  001EF4  6E12               	movwf	___fldiv@b+3,c
 14853  001EF6  0E80               	movlw	128
 14854  001EF8  1211               	iorwf	___fldiv@b+2,f,c
 14855  001EFA  0E7F               	movlw	127
 14856  001EFC  1212               	iorwf	___fldiv@b+3,f,c
 14857  001EFE                     i2l5354:
 14858  001EFE  501F               	movf	___fldiv@sign,w,c
 14859  001F00  1212               	iorwf	___fldiv@b+3,f,c
 14860  001F02  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14861  001F06  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14862  001F0A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14863  001F0E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14864  001F12  0012               	return	
 14865  001F14                     i2l5360:
 14866  001F14  5026               	movf	___fldiv@bexp,w,c
 14867  001F16  A4D8               	btfss	status,2,c
 14868  001F18  D009               	goto	i2l5368
 14869  001F1A  0E00               	movlw	0
 14870  001F1C  6E0F               	movwf	?___fldiv,c
 14871  001F1E  0E00               	movlw	0
 14872  001F20  6E10               	movwf	?___fldiv+1,c
 14873  001F22  0E00               	movlw	0
 14874  001F24  6E11               	movwf	?___fldiv+2,c
 14875  001F26  0E00               	movlw	0
 14876  001F28  6E12               	movwf	?___fldiv+3,c
 14877  001F2A  0012               	return	
 14878  001F2C                     i2l5368:
 14879  001F2C  5027               	movf	___fldiv@aexp,w,c
 14880  001F2E  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14881  001F32  6A18               	clrf	(??___fldiv+1)& (0+255),c
 14882  001F34  5E17               	subwf	??___fldiv,f,c
 14883  001F36  0E00               	movlw	0
 14884  001F38  5A18               	subwfb	??___fldiv+1,f,c
 14885  001F3A  0E7F               	movlw	127
 14886  001F3C  2417               	addwf	??___fldiv,w,c
 14887  001F3E  6E20               	movwf	___fldiv@new_exp,c
 14888  001F40  0E00               	movlw	0
 14889  001F42  2018               	addwfc	??___fldiv+1,w,c
 14890  001F44  6E21               	movwf	___fldiv@new_exp+1,c
 14891  001F46  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14892  001F4A  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14893  001F4E  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14894  001F52  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14895  001F56  0E00               	movlw	0
 14896  001F58  6E0F               	movwf	___fldiv@b,c
 14897  001F5A  0E00               	movlw	0
 14898  001F5C  6E10               	movwf	___fldiv@b+1,c
 14899  001F5E  0E00               	movlw	0
 14900  001F60  6E11               	movwf	___fldiv@b+2,c
 14901  001F62  0E00               	movlw	0
 14902  001F64  6E12               	movwf	___fldiv@b+3,c
 14903  001F66  0E00               	movlw	0
 14904  001F68  6E22               	movwf	___fldiv@grs,c
 14905  001F6A  0E00               	movlw	0
 14906  001F6C  6E23               	movwf	___fldiv@grs+1,c
 14907  001F6E  0E00               	movlw	0
 14908  001F70  6E24               	movwf	___fldiv@grs+2,c
 14909  001F72  0E00               	movlw	0
 14910  001F74  6E25               	movwf	___fldiv@grs+3,c
 14911  001F76  0E00               	movlw	0
 14912  001F78  6E27               	movwf	___fldiv@aexp,c
 14913  001F7A  D028               	goto	i2l1337
 14914  001F7C                     i2l5378:
 14915  001F7C  5027               	movf	___fldiv@aexp,w,c
 14916  001F7E  B4D8               	btfsc	status,2,c
 14917  001F80  D011               	goto	i2l5386
 14918  001F82  90D8               	bcf	status,0,c
 14919  001F84  361B               	rlcf	___fldiv@rem,f,c
 14920  001F86  361C               	rlcf	___fldiv@rem+1,f,c
 14921  001F88  361D               	rlcf	___fldiv@rem+2,f,c
 14922  001F8A  361E               	rlcf	___fldiv@rem+3,f,c
 14923  001F8C  90D8               	bcf	status,0,c
 14924  001F8E  360F               	rlcf	___fldiv@b,f,c
 14925  001F90  3610               	rlcf	___fldiv@b+1,f,c
 14926  001F92  3611               	rlcf	___fldiv@b+2,f,c
 14927  001F94  3612               	rlcf	___fldiv@b+3,f,c
 14928  001F96  BE25               	btfsc	___fldiv@grs+3,7,c
 14929  001F98  800F               	bsf	___fldiv@b,0,c
 14930  001F9A  90D8               	bcf	status,0,c
 14931  001F9C  3622               	rlcf	___fldiv@grs,f,c
 14932  001F9E  3623               	rlcf	___fldiv@grs+1,f,c
 14933  001FA0  3624               	rlcf	___fldiv@grs+2,f,c
 14934  001FA2  3625               	rlcf	___fldiv@grs+3,f,c
 14935  001FA4                     i2l5386:
 14936  001FA4  5013               	movf	___fldiv@a,w,c
 14937  001FA6  5C1B               	subwf	___fldiv@rem,w,c
 14938  001FA8  5014               	movf	___fldiv@a+1,w,c
 14939  001FAA  581C               	subwfb	___fldiv@rem+1,w,c
 14940  001FAC  5015               	movf	___fldiv@a+2,w,c
 14941  001FAE  581D               	subwfb	___fldiv@rem+2,w,c
 14942  001FB0  5016               	movf	___fldiv@a+3,w,c
 14943  001FB2  581E               	subwfb	___fldiv@rem+3,w,c
 14944  001FB4  A0D8               	btfss	status,0,c
 14945  001FB6  D009               	goto	i2l5392
 14946  001FB8  8C25               	bsf	___fldiv@grs+3,6,c
 14947  001FBA  5013               	movf	___fldiv@a,w,c
 14948  001FBC  5E1B               	subwf	___fldiv@rem,f,c
 14949  001FBE  5014               	movf	___fldiv@a+1,w,c
 14950  001FC0  5A1C               	subwfb	___fldiv@rem+1,f,c
 14951  001FC2  5015               	movf	___fldiv@a+2,w,c
 14952  001FC4  5A1D               	subwfb	___fldiv@rem+2,f,c
 14953  001FC6  5016               	movf	___fldiv@a+3,w,c
 14954  001FC8  5A1E               	subwfb	___fldiv@rem+3,f,c
 14955  001FCA                     i2l5392:
 14956  001FCA  2A27               	incf	___fldiv@aexp,f,c
 14957  001FCC                     i2l1337:
 14958  001FCC  0E19               	movlw	25
 14959  001FCE  6427               	cpfsgt	___fldiv@aexp,c
 14960  001FD0  D7D5               	goto	i2l5378
 14961  001FD2  501B               	movf	___fldiv@rem,w,c
 14962  001FD4  101C               	iorwf	___fldiv@rem+1,w,c
 14963  001FD6  101D               	iorwf	___fldiv@rem+2,w,c
 14964  001FD8  101E               	iorwf	___fldiv@rem+3,w,c
 14965  001FDA  B4D8               	btfsc	status,2,c
 14966  001FDC  D011               	goto	i2l5404
 14967  001FDE  8022               	bsf	___fldiv@grs,0,c
 14968  001FE0  D00F               	goto	i2l5404
 14969  001FE2                     i2l5398:
 14970  001FE2  90D8               	bcf	status,0,c
 14971  001FE4  360F               	rlcf	___fldiv@b,f,c
 14972  001FE6  3610               	rlcf	___fldiv@b+1,f,c
 14973  001FE8  3611               	rlcf	___fldiv@b+2,f,c
 14974  001FEA  3612               	rlcf	___fldiv@b+3,f,c
 14975  001FEC  BE25               	btfsc	___fldiv@grs+3,7,c
 14976  001FEE  800F               	bsf	___fldiv@b,0,c
 14977  001FF0  90D8               	bcf	status,0,c
 14978  001FF2  3622               	rlcf	___fldiv@grs,f,c
 14979  001FF4  3623               	rlcf	___fldiv@grs+1,f,c
 14980  001FF6  3624               	rlcf	___fldiv@grs+2,f,c
 14981  001FF8  3625               	rlcf	___fldiv@grs+3,f,c
 14982  001FFA  0620               	decf	___fldiv@new_exp,f,c
 14983  001FFC  A0D8               	btfss	status,0,c
 14984  001FFE  0621               	decf	___fldiv@new_exp+1,f,c
 14985  002000                     i2l5404:
 14986  002000  AE11               	btfss	___fldiv@b+2,7,c
 14987  002002  D7EF               	goto	i2l5398
 14988  002004  0E00               	movlw	0
 14989  002006  6E27               	movwf	___fldiv@aexp,c
 14990  002008  AE25               	btfss	___fldiv@grs+3,7,c
 14991  00200A  D017               	goto	i2l1348
 14992  00200C  0EFF               	movlw	255
 14993  00200E  1422               	andwf	___fldiv@grs,w,c
 14994  002010  6E17               	movwf	??___fldiv& (0+255),c
 14995  002012  0EFF               	movlw	255
 14996  002014  1423               	andwf	___fldiv@grs+1,w,c
 14997  002016  6E18               	movwf	(??___fldiv+1)& (0+255),c
 14998  002018  0EFF               	movlw	255
 14999  00201A  1424               	andwf	___fldiv@grs+2,w,c
 15000  00201C  6E19               	movwf	(??___fldiv+2)& (0+255),c
 15001  00201E  0E7F               	movlw	127
 15002  002020  1425               	andwf	___fldiv@grs+3,w,c
 15003  002022  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 15004  002024  5017               	movf	??___fldiv,w,c
 15005  002026  1018               	iorwf	??___fldiv+1,w,c
 15006  002028  1019               	iorwf	??___fldiv+2,w,c
 15007  00202A  101A               	iorwf	??___fldiv+3,w,c
 15008  00202C  B4D8               	btfsc	status,2,c
 15009  00202E  D003               	goto	i2l1349
 15010  002030                     i2u516_40:
 15011  002030  0E01               	movlw	1
 15012  002032  6E27               	movwf	___fldiv@aexp,c
 15013  002034  D002               	goto	i2l1348
 15014  002036                     i2l1349:
 15015  002036  B00F               	btfsc	___fldiv@b,0,c
 15016  002038  D7FB               	goto	i2u516_40
 15017  00203A                     i2l1348:
 15018  00203A  5027               	movf	___fldiv@aexp,w,c
 15019  00203C  B4D8               	btfsc	status,2,c
 15020  00203E  D01F               	goto	i2l5424
 15021  002040  0E01               	movlw	1
 15022  002042  260F               	addwf	___fldiv@b,f,c
 15023  002044  0E00               	movlw	0
 15024  002046  2210               	addwfc	___fldiv@b+1,f,c
 15025  002048  2211               	addwfc	___fldiv@b+2,f,c
 15026  00204A  2212               	addwfc	___fldiv@b+3,f,c
 15027  00204C  A012               	btfss	___fldiv@b+3,0,c
 15028  00204E  D017               	goto	i2l5424
 15029  002050  C00F  F017         	movff	___fldiv@b,??___fldiv
 15030  002054  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 15031  002058  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 15032  00205C  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 15033  002060  341A               	rlcf	??___fldiv+3,w,c
 15034  002062  321A               	rrcf	??___fldiv+3,f,c
 15035  002064  3219               	rrcf	??___fldiv+2,f,c
 15036  002066  3218               	rrcf	??___fldiv+1,f,c
 15037  002068  3217               	rrcf	??___fldiv,f,c
 15038  00206A  C017  F00F         	movff	??___fldiv,___fldiv@b
 15039  00206E  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 15040  002072  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 15041  002076  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 15042  00207A  4A20               	infsnz	___fldiv@new_exp,f,c
 15043  00207C  2A21               	incf	___fldiv@new_exp+1,f,c
 15044  00207E                     i2l5424:
 15045  00207E  BE21               	btfsc	___fldiv@new_exp+1,7,c
 15046  002080  D010               	goto	i2l5428
 15047  002082  5021               	movf	___fldiv@new_exp+1,w,c
 15048  002084  E103               	bnz	i2u520_40
 15049  002086  2820               	incf	___fldiv@new_exp,w,c
 15050  002088  A0D8               	btfss	status,0,c
 15051  00208A  D00B               	goto	i2l5428
 15052  00208C                     i2u520_40:
 15053  00208C  0E00               	movlw	0
 15054  00208E  6E21               	movwf	___fldiv@new_exp+1,c
 15055  002090  6820               	setf	___fldiv@new_exp,c
 15056  002092  0E00               	movlw	0
 15057  002094  6E0F               	movwf	___fldiv@b,c
 15058  002096  0E00               	movlw	0
 15059  002098  6E10               	movwf	___fldiv@b+1,c
 15060  00209A  0E00               	movlw	0
 15061  00209C  6E11               	movwf	___fldiv@b+2,c
 15062  00209E  0E00               	movlw	0
 15063  0020A0  6E12               	movwf	___fldiv@b+3,c
 15064  0020A2                     i2l5428:
 15065  0020A2  BE21               	btfsc	___fldiv@new_exp+1,7,c
 15066  0020A4  D005               	goto	i2u521_40
 15067  0020A6  5021               	movf	___fldiv@new_exp+1,w,c
 15068  0020A8  E111               	bnz	i2l5432
 15069  0020AA  0420               	decf	___fldiv@new_exp,w,c
 15070  0020AC  B0D8               	btfsc	status,0,c
 15071  0020AE  D00E               	goto	i2l5432
 15072  0020B0                     i2u521_40:
 15073  0020B0  0E00               	movlw	0
 15074  0020B2  6E21               	movwf	___fldiv@new_exp+1,c
 15075  0020B4  0E00               	movlw	0
 15076  0020B6  6E20               	movwf	___fldiv@new_exp,c
 15077  0020B8  0E00               	movlw	0
 15078  0020BA  6E0F               	movwf	___fldiv@b,c
 15079  0020BC  0E00               	movlw	0
 15080  0020BE  6E10               	movwf	___fldiv@b+1,c
 15081  0020C0  0E00               	movlw	0
 15082  0020C2  6E11               	movwf	___fldiv@b+2,c
 15083  0020C4  0E00               	movlw	0
 15084  0020C6  6E12               	movwf	___fldiv@b+3,c
 15085  0020C8  0E00               	movlw	0
 15086  0020CA  6E1F               	movwf	___fldiv@sign,c
 15087  0020CC                     i2l5432:
 15088  0020CC  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 15089  0020D0  A026               	btfss	___fldiv@bexp,0,c
 15090  0020D2  D002               	goto	i2l5438
 15091  0020D4  8E11               	bsf	___fldiv@b+2,7,c
 15092  0020D6  D001               	goto	i2l5440
 15093  0020D8                     i2l5438:
 15094  0020D8  9E11               	bcf	___fldiv@b+2,7,c
 15095  0020DA                     i2l5440:
 15096  0020DA  90D8               	bcf	status,0,c
 15097  0020DC  3026               	rrcf	___fldiv@bexp,w,c
 15098  0020DE  6E12               	movwf	___fldiv@b+3,c
 15099  0020E0  D70E               	goto	i2l5354
 15100  0020E2                     __end_of___fldiv:
 15101                           	opt callstack 0
 15102                           
 15103 ;; *************** function ___awdiv *****************
 15104 ;; Defined at:
 15105 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 15106 ;; Parameters:    Size  Location     Type
 15107 ;;  dividend        2    0[COMRAM] int 
 15108 ;;  divisor         2    2[COMRAM] int 
 15109 ;; Auto vars:     Size  Location     Type
 15110 ;;  quotient        2    6[COMRAM] int 
 15111 ;;  sign            1    5[COMRAM] unsigned char 
 15112 ;;  counter         1    4[COMRAM] unsigned char 
 15113 ;; Return value:  Size  Location     Type
 15114 ;;                  2    0[COMRAM] int 
 15115 ;; Registers used:
 15116 ;;		wreg, status,2, status,0
 15117 ;; Tracked objects:
 15118 ;;		On entry : 0/0
 15119 ;;		On exit  : 0/0
 15120 ;;		Unchanged: 0/0
 15121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15123 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15125 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15126 ;;Total ram usage:        8 bytes
 15127 ;; Hardware stack levels used:    1
 15128 ;; This function calls:
 15129 ;;		Nothing
 15130 ;; This function is called by:
 15131 ;;		_echo
 15132 ;; This function uses a non-reentrant model
 15133 ;;
 15134                           
 15135                           	psect	text60
 15136  003AA8                     __ptext60:
 15137                           	opt callstack 0
 15138  003AA8                     ___awdiv:
 15139                           	opt callstack 14
 15140                           
 15141                           ;incstack = 0
 15142  003AA8  0E00               	movlw	0
 15143  003AAA  6E06               	movwf	___awdiv@sign,c
 15144  003AAC  AE04               	btfss	___awdiv@divisor+1,7,c
 15145  003AAE  D006               	goto	i2l5456
 15146  003AB0  6C03               	negf	___awdiv@divisor,c
 15147  003AB2  1E04               	comf	___awdiv@divisor+1,f,c
 15148  003AB4  B0D8               	btfsc	status,0,c
 15149  003AB6  2A04               	incf	___awdiv@divisor+1,f,c
 15150  003AB8  0E01               	movlw	1
 15151  003ABA  6E06               	movwf	___awdiv@sign,c
 15152  003ABC                     i2l5456:
 15153  003ABC  AE02               	btfss	___awdiv@dividend+1,7,c
 15154  003ABE  D006               	goto	i2l5462
 15155  003AC0  6C01               	negf	___awdiv@dividend,c
 15156  003AC2  1E02               	comf	___awdiv@dividend+1,f,c
 15157  003AC4  B0D8               	btfsc	status,0,c
 15158  003AC6  2A02               	incf	___awdiv@dividend+1,f,c
 15159  003AC8  0E01               	movlw	1
 15160  003ACA  1A06               	xorwf	___awdiv@sign,f,c
 15161  003ACC                     i2l5462:
 15162  003ACC  0E00               	movlw	0
 15163  003ACE  6E08               	movwf	___awdiv@quotient+1,c
 15164  003AD0  0E00               	movlw	0
 15165  003AD2  6E07               	movwf	___awdiv@quotient,c
 15166  003AD4  5003               	movf	___awdiv@divisor,w,c
 15167  003AD6  1004               	iorwf	___awdiv@divisor+1,w,c
 15168  003AD8  B4D8               	btfsc	status,2,c
 15169  003ADA  D01C               	goto	i2l5484
 15170  003ADC  0E01               	movlw	1
 15171  003ADE  6E05               	movwf	___awdiv@counter,c
 15172  003AE0  D004               	goto	i2l5470
 15173  003AE2                     i2l5468:
 15174  003AE2  90D8               	bcf	status,0,c
 15175  003AE4  3603               	rlcf	___awdiv@divisor,f,c
 15176  003AE6  3604               	rlcf	___awdiv@divisor+1,f,c
 15177  003AE8  2A05               	incf	___awdiv@counter,f,c
 15178  003AEA                     i2l5470:
 15179  003AEA  AE04               	btfss	___awdiv@divisor+1,7,c
 15180  003AEC  D7FA               	goto	i2l5468
 15181  003AEE                     i2u526_40:
 15182  003AEE  90D8               	bcf	status,0,c
 15183  003AF0  3607               	rlcf	___awdiv@quotient,f,c
 15184  003AF2  3608               	rlcf	___awdiv@quotient+1,f,c
 15185  003AF4  5003               	movf	___awdiv@divisor,w,c
 15186  003AF6  5C01               	subwf	___awdiv@dividend,w,c
 15187  003AF8  5004               	movf	___awdiv@divisor+1,w,c
 15188  003AFA  5802               	subwfb	___awdiv@dividend+1,w,c
 15189  003AFC  A0D8               	btfss	status,0,c
 15190  003AFE  D005               	goto	i2l5480
 15191  003B00  5003               	movf	___awdiv@divisor,w,c
 15192  003B02  5E01               	subwf	___awdiv@dividend,f,c
 15193  003B04  5004               	movf	___awdiv@divisor+1,w,c
 15194  003B06  5A02               	subwfb	___awdiv@dividend+1,f,c
 15195  003B08  8007               	bsf	___awdiv@quotient,0,c
 15196  003B0A                     i2l5480:
 15197  003B0A  90D8               	bcf	status,0,c
 15198  003B0C  3204               	rrcf	___awdiv@divisor+1,f,c
 15199  003B0E  3203               	rrcf	___awdiv@divisor,f,c
 15200  003B10  2E05               	decfsz	___awdiv@counter,f,c
 15201  003B12  D7ED               	goto	i2u526_40
 15202  003B14                     i2l5484:
 15203  003B14  5006               	movf	___awdiv@sign,w,c
 15204  003B16  B4D8               	btfsc	status,2,c
 15205  003B18  D004               	goto	i2l5488
 15206  003B1A  6C07               	negf	___awdiv@quotient,c
 15207  003B1C  1E08               	comf	___awdiv@quotient+1,f,c
 15208  003B1E  B0D8               	btfsc	status,0,c
 15209  003B20  2A08               	incf	___awdiv@quotient+1,f,c
 15210  003B22                     i2l5488:
 15211  003B22  C007  F001         	movff	___awdiv@quotient,?___awdiv
 15212  003B26  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 15213  003B2A  0012               	return		;funcret
 15214  003B2C                     __end_of___awdiv:
 15215                           	opt callstack 0
 15216                           
 15217                           	psect	rparam
 15218  0000                     
 15219                           	psect	temp
 15220  00006E                     btemp:
 15221                           	opt callstack 0
 15222  00006E                     	ds	1
 15223  0000                     int$flags	set	btemp
 15224  0000                     wtemp8	set	btemp+1
 15225  0000                     ttemp5	set	btemp+1
 15226  0000                     ttemp6	set	btemp+4
 15227  0000                     ttemp7	set	btemp+8
 15228                           tosu	equ	0xFFF
 15229                           tosh	equ	0xFFE
 15230                           tosl	equ	0xFFD
 15231                           stkptr	equ	0xFFC
 15232                           pclatu	equ	0xFFB
 15233                           pclath	equ	0xFFA
 15234                           pcl	equ	0xFF9
 15235                           tblptru	equ	0xFF8
 15236                           tblptrh	equ	0xFF7
 15237                           tblptrl	equ	0xFF6
 15238                           tablat	equ	0xFF5
 15239                           prodh	equ	0xFF4
 15240                           prodl	equ	0xFF3
 15241                           indf0	equ	0xFEF
 15242                           postinc0	equ	0xFEE
 15243                           postdec0	equ	0xFED
 15244                           preinc0	equ	0xFEC
 15245                           plusw0	equ	0xFEB
 15246                           fsr0h	equ	0xFEA
 15247                           fsr0l	equ	0xFE9
 15248                           wreg	equ	0xFE8
 15249                           indf1	equ	0xFE7
 15250                           postinc1	equ	0xFE6
 15251                           postdec1	equ	0xFE5
 15252                           preinc1	equ	0xFE4
 15253                           plusw1	equ	0xFE3
 15254                           fsr1h	equ	0xFE2
 15255                           fsr1l	equ	0xFE1
 15256                           bsr	equ	0xFE0
 15257                           indf2	equ	0xFDF
 15258                           postinc2	equ	0xFDE
 15259                           postdec2	equ	0xFDD
 15260                           preinc2	equ	0xFDC
 15261                           plusw2	equ	0xFDB
 15262                           fsr2h	equ	0xFDA
 15263                           fsr2l	equ	0xFD9
 15264                           status	equ	0xFD8


Data Sizes:
    Strings     614
    Constant    23
    Data        5
    BSS         240
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256     94     124
    BANK2           256      0     160
    BANK3           256    134     134
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_65(CODE[10]), STR_64(CODE[11]), STR_63(CODE[11]), STR_62(CODE[12]), 
		 -> STR_61(CODE[16]), STR_60(CODE[16]), STR_59(CODE[14]), STR_58(CODE[17]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[13]), STR_54(CODE[8]), 
		 -> STR_53(CODE[3]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[5]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1774_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_65(CODE[10]), STR_64(CODE[11]), STR_63(CODE[11]), STR_62(CODE[12]), 
		 -> STR_61(CODE[16]), STR_60(CODE[16]), STR_59(CODE[14]), STR_58(CODE[17]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[13]), STR_54(CODE[8]), 
		 -> STR_53(CODE[3]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[5]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_65(CODE[10]), STR_64(CODE[11]), STR_63(CODE[11]), STR_62(CODE[12]), 
		 -> STR_61(CODE[16]), STR_60(CODE[16]), STR_59(CODE[14]), STR_58(CODE[17]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[13]), STR_54(CODE[8]), 
		 -> STR_53(CODE[3]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[5]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_65(CODE[10]), STR_64(CODE[11]), STR_63(CODE[11]), STR_62(CODE[12]), 
		 -> STR_61(CODE[16]), STR_60(CODE[16]), STR_59(CODE[14]), STR_58(CODE[17]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[13]), STR_54(CODE[8]), 
		 -> STR_53(CODE[3]), STR_52(CODE[17]), STR_51(CODE[15]), STR_50(CODE[15]), 
		 -> STR_49(CODE[12]), STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[15]), 
		 -> STR_45(CODE[18]), STR_44(CODE[17]), STR_43(CODE[12]), STR_42(CODE[15]), 
		 -> STR_41(CODE[18]), STR_40(CODE[17]), STR_39(CODE[14]), STR_38(CODE[14]), 
		 -> STR_37(CODE[17]), STR_36(CODE[3]), STR_35(CODE[9]), STR_34(CODE[16]), 
		 -> STR_33(CODE[3]), STR_32(CODE[9]), STR_31(CODE[17]), STR_30(CODE[15]), 
		 -> STR_29(CODE[15]), STR_28(CODE[12]), STR_27(CODE[10]), STR_26(CODE[5]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    ee_write_byte@_data	PTR unsigned char  size(2) Largest target is 80
		 -> main@Pole(BANK3[80]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_UI_main
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv
    _I2C_Master_RepeatedStart->_I2C_Master_Wait

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               139   139      0  304107
                                             90 BANK1      4     4      0
                                              0 BANK3    134   134      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                      _ee_write_byte
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   48161
                                            124 BANK0      2     0      2
                                              0 BANK1     12    12      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23413
                                            123 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2103
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     6      6   24166
                                            123 BANK0      2     2      0
                                              0 BANK1     10     4      6
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ee_write_byte                                        3     1      2     422
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24859
                                            123 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1381
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                      10     4      6  146818
                                             18 BANK1     10     4      6
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   47834
                                              0 BANK1      8     6      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   48119
                                              0 BANK1     14    12      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                             18    14      4   24839
                                              0 BANK1     18    14      4
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   24164
                                            123 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0    1404
                                              5 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       5     3      2     747
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         5     3      2     657
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   27030
                                            123 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   23255
                                            109 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1381
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3922
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3922
                                             49 COMRAM     4     4      0
                            ___awdiv
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___awdiv                                             8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _ee_write_byte
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___awdiv
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     86      86      11       52.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5E      7C       7       48.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     28F      34        0.0%
DATA                 0      0     28F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 14:13:31 2019

                     ___fldiv@aexp 0027                       ___fldiv@bexp 0026  
                                _a 0061                                  _b 005A  
                                _i 0171                       ___fldiv@sign 001F  
                      __CFG_CPD$ON 000000                       ___awdiv@sign 0006  
              servoRotate180@servo 0080                ___wmul@multiplicand 0082  
                      __CFG_BORV$3 000000                    ??_number_deploy 00FB  
                stepper2@direction 010D                      servoRotate0@i 0083  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                __end_of_system_init 3FA4  
                              l122 35EA                                l140 359A  
                              l125 363E                                l134 34F8  
                  _ultrasonic_main 274E                                l128 3688  
                              l137 3550                                l521 0CA6  
                              l470 28CA                                l608 3F66  
                              l650 39B8                                l661 2156  
                              l566 03C4                                l663 215E  
                              l780 3A96                                l686 2348  
                              l688 2350                                _GIE 007F97  
                     __CFG_CPB$OFF 000000                                _RB2 007C0A  
                              _RC1 007C11                                _RB3 007C0B  
                              _RC2 007C12                                _RD0 007C18  
                              _RB4 007C0C                                _RD1 007C19  
                              _RB5 007C0D                                _RB6 007C0E  
                              _RB7 007C0F                                _ISR 0008  
           __size_of_stepper2_back 00A0                                _abs 3F0C  
                              _cnt 0179                                _pad 3988  
                              _min 31D8                                _sum 0038  
                   stepper2_back@i 0106                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                               ?_ISR 0001  
                     ___fltol@exp1 0031                       __CFG_WDT$OFF 000000  
                             ?_abs 0092                               l1173 3C60  
                             l1428 3F36                               l1526 3E12  
                             l1459 2E40                               l7020 2D1A  
                             l7030 2D64                               l7022 2D1E  
                             l7014 2536                               l7110 18BE  
                             ?_pad 0094                               l7040 2D82  
                             l7112 18CC                               l7042 2DAA  
                             l7036 2D74                               l7108 18A0  
                             l8020 27DA                               l7046 2DE0  
                             l7038 2D7C                               l7142 1A94  
                             l7070 17C6                               l7302 1BA2  
                             l8102 2FD6                               l8014 27C2  
                             l7152 1ADC                               l7128 19C6  
                             l7072 17C8                               l8040 284C  
                             l8016 27CA                               l7090 17E8  
                             l7082 17E0                               l7074 17D8  
                             l8106 2FE6                               l8122 3098  
                             l8050 28A4                               l7500 3A48  
                             l7148 1AD0                               l7180 3D62  
                             ?_min 0080                               l7502 3A54  
                             l7094 17F2                               l7086 17E4  
                             l7078 17DC                               l7158 1AF4  
                             l7318 1C0E                               l8046 288A  
                             l7512 3A88                               l7096 1834  
                             l8160 0AAA                               l8064 28D0  
                             l6714 3BB6                               l7178 3D3A  
                             l8314 0F30                               l8226 0C00  
                             l8058 28BA                               l6820 2C4C  
                             l6812 2C12                               l6724 3EA6  
                             l6732 4044                               l8340 10E2  
                             l7700 3942                               l8092 2F9E  
                             l6830 2CA8                               l6806 2BEA  
                             l6734 404A                               l6910 2178  
                             l7438 1DC4                               l7358 1CA2  
                             l7622 2B3A                               l7606 2ADA  
                             l8502 00CC                               l6728 3EBE  
                             l6752 39A0                               l8248 0C86  
                             l8336 10BC                               l6818 2C38  
                             l6834 2CBE                               l6850 30E0  
                             l6762 39DC                               l6914 2188  
                             l8290 0D8E                               l8274 0D26  
                             l8258 0CC6                               l8098 2FBE  
                             l8610 037E                               l6860 3132  
                             l6756 39B0                               l6924 2282  
                             l8364 118E                               l7476 1E44  
                             l7396 1D2C                               l7636 2B90  
                             l7628 2B60                               l7652 3408  
                             l7820 265C                               l7812 2628  
                             l7804 25E4                               l8604 0340  
                             l8540 01D8                               l8532 01AE  
                             l6838 2CE4                               l6870 3190  
                             l6854 3104                               l6766 3A08  
                             l6758 39C2                               l8374 11B0  
                             l8198 0B74                               l7662 3450  
                             l7910 297C                               l8606 035A  
                             l8518 0126                               l6944 22E8  
                             l8368 1196                               l8384 121E  
                             l7592 2A9C                               l7672 349C  
                             l7656 3420                               l7744 32FC  
                             l8712 0846                               l8616 03A4  
                             l8560 022E                               l6874 31B6  
                             l6866 317A                               l6858 311E  
                             l6962 2366                               l8386 122C  
                             l8722 08B0                               l8706 080A  
                             l6948 2300                               l7676 34B4  
                             l7860 3218                               l7844 2718  
                             l7836 26D4                               l7828 26A0  
                             l7756 3336                               l8732 091A  
                             l8716 086C                               l8548 0202  
                             l6886 3E54                               l6990 2448  
                             l7598 2AC2                               l7766 336A  
                             l8742 0984                               l8726 08D6  
                             l8670 06DA                               l8582 02C8  
                             l8494 009E                               l7880 3C1E  
                             l6896 213A                               l6976 23BA  
                             l6968 2398                               l7872 32C6  
                             l7776 339E                               l8736 0940  
                             l8568 025A                               l7882 3C2A  
                             l7874 32CA                               l7858 320E  
                             l7786 33D2                               l8674 0726  
                             l8666 06CA                               l8684 078C  
                             l8756 09F2                               l8692 07B6  
                             l6998 24C0                               l7990 2A68  
                             l7798 25B6                               l8678 0736  
                             l8598 031A                               l7888 3C52  
                             l7968 2A40                               l8688 0792  
                             STR_1 FFD3                               STR_2 FF0E  
                             STR_3 FF78                               STR_4 FFD3  
                             STR_5 FFC9                               STR_6 FFEE  
                             STR_7 FEE6                               STR_8 FFD3  
                             STR_9 FFF9                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u7000 2C50                               u7100 3E50  
                             u7110 210C                               _RBIE 007F93  
                             u7200 22B4                               u7120 210E  
                             u8000 2B88                               _RBIF 007F90  
                             u7201 22B2                               u7210 22C2  
                             u8010 2BB6                               u7060 3136  
                             u7220 22C6                               u7300 23EC  
                             u7150 214C                               u7310 23EE  
                             u7240 22D2                               u7400 2502  
                             u8200 2648                               u8120 33E8  
                             u7170 2172                               u7410 2506  
                             u7330 2426                               u8210 266C  
                             u8130 2588                               u7180 2292  
                             u7340 2428                               u8060 396A  
                             u8220 267C                               u8140 2598  
                             u9100 035A                               u7270 233C  
                             u8230 26B0                               u8150 25C6  
                             u8070 32FA                               u9110 036C  
                             u7440 2D60                               u6800 3FCE  
                             u7360 249C                               u8240 26C0  
                             u8160 25D6                               u9120 03BE  
                             u6810 3FD0                               u7370 24D2  
                             u7290 23B6                               u7610 19FA  
                             u8330 3286                               u8250 26E4  
                             u8170 25F4                               u7460 2E10  
                             u6820 3F1C                               u6900 3F06  
                             u8340 32AC                               u8260 26F4  
                             u8180 2604                               u7365 248A  
                             u7470 2E12                               u6750 3BAE  
                             u6910 3DFA                               u7390 24F4  
                             u7550 1906                               u7710 36C2  
                             u8510 2FB6                               u8270 2728  
                             u8190 2638                               u8430 2844  
                             u9070 02D0                               u6735 4092  
                             u7391 24F2                               u9207 00E4  
                             u6736 4094                               u6920 3DFC  
                             u7560 1908                               u8520 2FCE  
                             u8280 2738                               u8440 285C  
                             u9080 02F2                               u9217 010E  
                             u8370 3C2E                               u6770 3BF6  
                             u7570 1914                               u7730 353E  
                             u8290 31FE                               u8450 286C  
                             u9090 0302                               u9307 09B0  
                             u9227 023C                               u6940 4032  
                             u8700 0CC2                               u8460 289C  
                             u9317 09D4                               u9237 027C  
                             u6950 4034                               u6870 4000  
                             u7590 1948                               u7670 362C  
                             u7750 3588                               u8550 30A8  
                             u9407 335C                               u9327 2760  
                             u9247 04DE                               u6880 4002  
                             u8480 28D0                               u7905 3C9C  
                             u9417 337A                               u9337 278A  
                             u9257 0646                               u6890 3F04  
                             u8730 0DA0                               u8650 0C16  
                             u7690 3676                               u7770 35D6  
                             u7930 2A94                               u7915 40B6  
                             u9507 296E                               u9427 3390  
                             u9347 2812                               u9267 0682  
                             u7916 40B8                               u8740 0DB0  
                             u7940 2AC2                               u6981 2C18  
                             u8741 0DAE                               u9517 29D8  
                             u9437 33AE                               u9357 28DE  
                             u9277 079E                               u7950 2AD2  
                             u9607 1BB6                               u9527 2A02  
                             u9447 33C4                               u9367 290A  
                             u9287 07C8                               u7880 3A58  
                             u7960 2B00                               u9617 1BCA  
                             u9537 3904                               u9457 256E  
                             u9377 3312                               u9297 07EC  
                             u8930 007C                               u9707 1CBA  
                             u9627 1BDE                               u9547 3464  
                             u9467 305E                               u9387 3328  
                             u7980 2B32                               u9717 1CD4  
                             u9637 1BF2                               u9557 1B4A  
                             u9477 38A0                               u9397 3346  
                             u8925 005A                               u8790 1232  
                             u7990 2B60                               u8950 00BA  
                             u9807 1DDC                               u9727 1CEE  
                             u9647 1C06                               u9567 1B5E  
                             u9487 38D4                               u8951 00B8  
                             u8927 005C                               u9817 1DF4  
                             u9737 1D08                               u9657 1C30  
                             u9577 1B72                               u9497 2942  
                             u8945 00A6                               u9907 355A  
                             u9827 1E0C                               u9747 1D22  
                             u9667 1C4A                               u9587 1B86  
                             u8947 00A8                               u9917 356C  
                             u9837 1E24                               u9757 1D5C  
                             u9677 1C64                               u9597 1B9A  
                             u9927 35A4                               u9847 1E3C  
                             u9767 1D74                               u9687 1C7E  
                             u9937 35B8                               u9857 36FC  
                             u9777 1D8C                               u9697 1C98  
                             u9947 35F6                               u9867 374A  
                             u9787 1DA4                               u9957 3602  
                             u9877 34FE                               u9797 1DBC  
                             u9967 3610                               u9887 350E  
                             u9977 3648                               u9897 3522  
                             u9987 365C                               u9997 3692  
                             _Pole 0200                 main@poles_detected 0384  
                      main@t_count 036D                               abs@a 0092  
                             _data 005E                               _echo 123C  
                             _dbuf 0280   __end_of_I2C_Master_RepeatedStart 41BE  
                             _disp 0173                               _atoi 2D06  
                             _main 0012                               _dtoa 20E2  
                             _meas 0050                               _keys FD81  
                             _send 006D                               _tick 0056  
                             _prec 004C                               _sens 0058  
                             _temp 00FF                               _time 0166  
                             _nout 0048                               pad@i 009B  
                             pad@p 0098                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr1l 000FE1                               pad@w 009D  
                             fsr2l 000FD9                               _trig 32E8  
                             _sumf 0040                               btemp 006E  
                             min@i 0089                               _xtoa 232A  
                             prodh 000FF4                               prodl 000FF3  
                             start 000E            __size_of_actuators_main 0150  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0020  
                  __end_of_UI_main 123C                    servoRotate180@i 0083  
                    __CFG_MCLRE$ON 000000                       main@act_done 0363  
                     ___param_bank 000000                              ??_ISR 0036  
                            ??_abs 0094                              ??_pad 009A  
                            ??_min 0084              actuators_main@act_cnt 011A  
            I2C_Master_Read@ackBit 0081                   ?_I2C_Master_Init 008D  
                 ?_I2C_Master_Read 0001                   ?_I2C_Master_Wait 0001  
                 ?_I2C_Master_Stop 0001                              ?_echo 0001  
                     main@dist_tot 037A                      ___fltol@sign1 0030  
                  __end_of___aodiv 2D06                              ?_atoi 0087  
                            ?_main 0001                              ?_dtoa 009F  
                  __end_of___aomod 31D8                    __end_of___fldiv 20E2  
                  __end_of___awdiv 3B2C                              _EEADR 000FA9  
                            STR_10 FDCC                              STR_11 FF83  
                            STR_20 FF62                              STR_12 FE51  
                            STR_13 FF8D                              STR_21 FF27  
                            STR_30 FE8F                              STR_14 FE61  
                            STR_22 FE41                              STR_23 FFBF  
                            STR_15 FF97                              STR_31 FDAA  
                            STR_32 FFDD                              STR_24 FF4B  
                            STR_40 FDFF                              STR_16 FDDD  
                            STR_33 FE2E                              STR_17 FFA1  
                            STR_25 FE71                              STR_41 FD98  
                            STR_34 FDEF                              STR_26 FFF4  
                            STR_18 FFE6                              STR_50 FE9E  
                            STR_42 FE80                              STR_35 FFDD  
                            STR_27 FFBF                              STR_43 FF3F  
                            STR_19 FEF4                              STR_51 FEAD  
                            STR_52 FDAA                              STR_44 FDFF  
                            STR_36 FE2E                              STR_28 FF4B  
                            STR_60 FE21                              STR_29 FE71  
                            STR_53 FE2E                              STR_45 FD98  
                            STR_61 FE31                              STR_37 FDEE  
                            STR_46 FE80                              STR_54 FF06  
                            STR_62 FF33                              STR_38 FED8  
                            STR_47 FF3F                              STR_63 FF57  
                            STR_55 FF01                              STR_39 FECA  
                            STR_56 FFB5                              STR_64 FF6D  
                            STR_48 FDBB                              STR_57 FF27  
                            STR_65 FFAB                              STR_49 FF1B  
                            STR_58 FE10                              STR_59 FEBC  
                  __end_of___fltol 3838                              ?_trig 0001  
                  __end_of___lldiv 3AA8                              u10007 36A4  
                            u10017 0A68                              u10107 1124  
                            u10027 0AC6                              u10117 3B34  
                            u10037 0B34                              u10127 3B4E  
                            u10047 0BA8                              u10137 3B60  
                            u10057 0C3E                              u10147 3B84  
                            u10067 0CDE                              u10157 4078  
                            u10077 0D3E                              u10167 4082  
                            u10087 0DCA                              u10097 0F56  
                  ___awdiv@divisor 0003                              ?_xtoa 009F  
                            _T1CON 000FCD                    __end_of___llmod 3C72  
                            i2l402 3E8E                              i2l429 177E  
                  ___awdiv@counter 0005                       vfpfcnvrt@fmt 00C8  
                     vfpfcnvrt@llu 00D8                              _TMR1H 000FCF  
                            _TMR1L 000FCE                              _PORTB 000F81  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                  __end_of_lcdInst 419C                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                    __end_of_initLCD 3B9C  
                   __CFG_EBTRB$OFF 000000                              _brake 3838  
                            _flags 004E                              _dists 0069  
                            _fputc 3B9C                    __end_of_isalpha 3F0C  
                            _fputs 3E9A                    __end_of_isdigit 403A  
                            _servo 36C4                              atoi@n 0094  
                            pad@fp 0094                              atoi@s 0087  
                            _width 004A                              _state 0175  
                            _putch 417C                              _start 3D7E  
                            main@i 0354                              main@k 0369  
                            dtoa@d 00A1                              dtoa@i 00C1  
                            dtoa@n 00B9                              dtoa@p 00B3  
                            dtoa@s 00B7                              dtoa@w 00B5  
                  __end_of_islower 3FD6                    __end_of_isspace 3E5C  
                  __end_of_isupper 4008                              tablat 000FF5  
                  send_nibble@data 0081                              plusw2 000FDB  
                  __end_of_pulse_e 4096                              ttemp5 006F  
                            ttemp6 0072                              ttemp7 0076  
                            status 000FD8        I2C_Master_Read@receivedByte 0082  
                  __end_of_stepper 2BBC                              wtemp8 006F  
                            xtoa@c 00C4                              xtoa@d 00A1  
                            xtoa@i 00C2                              xtoa@n 00BA  
                            xtoa@p 00B6                              xtoa@w 00B8  
                            xtoa@x 00A9                      _stepper2_back 38E8  
                  __end_of_toupper 3E1C                   ??_servoRotate180 0082  
                   __CFG_PBADEN$ON 000000                       _toupper$1826 008C  
                  __initialization 3CD2                       __end_of_echo 1780  
                      _system_init 3F72                       __end_of_atoi 2E4A  
                     __end_of_main 0A00                       __end_of_dtoa 232A  
                     __end_of_keys FD92            __end_of_ultrasonic_main 2922  
                     __end_of_trig 33EA                       __end_of_xtoa 2560  
                           ??_echo 0032                             ??_atoi 0089  
                           ??_main 015A                             ??_dtoa 00A9  
                           ??_trig 0080                             ??_xtoa 00AA  
                    __activetblptr 000002               number_deploy@t_count 0108  
                ?_I2C_Master_Start 0001                  ?_I2C_Master_Write 0081  
             number_deploy@tires_t 0106                 ??_I2C_Master_Start 0081  
                           ?_brake 0001                             _ADCON1 000FC1  
               ??_I2C_Master_Write 0083                       ?_send_nibble 0001  
                           ?_fputc 0084                   ___llmod@dividend 0080  
                           ?_fputs 008D                             _EEDATA 000FA8  
                           _EECON2 000FA7                   ___awdiv@dividend 0001  
                           ?_servo 0001                             ?_putch 0001  
                           ?_start 0001                             _INT1IE 007F83  
                           _INT1IF 007F80                 stepper2@steps2_adj 0100  
                           i2l1415 2F06                             i2l1408 2E88  
                           i2l1337 1FCC                             i2l1348 203A  
                           i2l1349 2036                             i2l5322 1E86  
                           i2l5404 2000                             i2l5342 1EC6  
                           i2l5326 1E8A                             i2l5440 20DA  
                           i2l5432 20CC                             i2l5424 207E  
                           i2l5360 1F14                             i2l5354 1EFE  
                           i2l5346 1ECA                             i2l5514 37E6  
                           i2l5428 20A2                             i2l5532 3826  
                           i2l5524 37FE                             i2l5470 3AEA  
                           i2l5462 3ACC                             i2l5438 20D8  
                           i2l5526 380A                             i2l5518 37F6  
                           i2l5710 12BA                             i2l5480 3B0A  
                           i2l5456 3ABC                             i2l5392 1FCA  
                           i2l5368 1F2C                             i2l5800 1612  
                           i2l5386 1FA4                             i2l5378 1F7C  
                           i2l5570 2EEE                             i2l5802 162C  
                           i2l5468 3AE2                             i2l5484 3B14  
                           i2l5564 2EB6                             i2l5812 16AC  
                           i2l5732 136E                             i2l6292 3E7C  
                           i2l5398 1FE2                             i2l5566 2EBC  
                           i2l5558 2E98                             i2l5726 1316  
                           i2l5734 1388                             i2l5488 3B22  
                           i2l5576 2F2C                             i2l5568 2EC8  
                           i2l5760 1464                             i2l5744 1408  
                           i2l5498 379C                             i2l5594 2F78  
                           i2l5578 2F38                             i2l5834 1764  
                           i2l5828 1708                             i2l5766 14C0  
                           i2l5768 14DA                             i2l5794 15B6  
                           i2l5778 155A                          ??_UI_main 0100  
                    vfpfcnvrt@done 00E1                             _TMR1ON 007E68  
                   ?_stepper2_back 0100                             _SSPADD 000FC8  
                           _SSPBUF 000FC9                   __end_of___xxtofl 2F8A  
      number_deploy@poles_detected 0102                     __CFG_XINST$OFF 000000  
         _I2C_Master_RepeatedStart 41B6                       vfprintf@cfmt 00EB  
            __end_of_ee_write_byte 3F72                          ??___aodiv 0090  
                        ??___aomod 0090                             ___wmul 40E8  
                        ??___fldiv 0017                          ??___awdiv 0005  
                        ??___fltol 002C                          ??___lldiv 0088  
                        ??___llmod 0088                             _opTime 016D  
                           clear_0 3CF8                             clear_1 3D04  
                           clear_2 3D14                   ___awdiv@quotient 0007  
                        ??_lcdInst 0083                             _printf 40C0  
                           pad@buf 0096                             dtoa@fp 009F  
                           _strlen 403A                          ??_initLCD 0084  
                           fputc@c 0084                             fputs@c 0091  
                           fputs@i 0092                       __pdataCOMRAM 0069  
                           fputs@s 008D                          ??_isalpha 0082  
                        ??_isdigit 0082                          ??_islower 0082  
                     __mediumconst FD80                          ??_isspace 0082  
                           tblptrh 000FF7                          ??_isupper 0082  
                           tblptrl 000FF6                             tblptru 000FF8  
                 __end_of_vfprintf 3D7E                          ??_pulse_e 0080  
                 __end_of_stepper2 34E6     ultrasonic_main@min_us_dist_975 010A  
                        ??_stepper 0104                             xtoa@fp 009F  
                        ??_toupper 0088                       ___xxtofl@arg 000B  
            pulse_e@interruptState 0080                       ___xxtofl@exp 000A  
                     ___xxtofl@val 0001                         __accesstop 0080  
          __end_of__initialization 3D1A                     _actuators_main 2922  
                    ___rparam_used 000001                         ___fltol@f1 0028  
                     stepper@i_480 010E                       stepper@i_481 0110  
                     stepper@i_479 010C                 __size_of_backwards 0026  
              full_drive@direction 00FE                     __pcstackCOMRAM 0001  
                     stepper@t_dep 0102                       stepper@stack 0100  
                 ?_ultrasonic_main 00FC                      __end_of_brake 38E8  
                    __end_of_fputc 3C0A                      __end_of_fputs 3ED6  
                    __end_of_servo 377E                  servoRotate0@servo 0080  
                    __end_of_putch 418C                      __end_of_start 3DD0  
                  _key_was_pressed 017B              number_deploy@avg_dist 0100  
                          ??_brake 00FB                            ??_fputc 0088  
                          ??_fputs 0091                            ??_servo 0085  
                          ??_putch 0083                            ??_start 0095  
                  ??_stepper2_back 0102                         __pbssBANK0 00FF  
                       __pbssBANK1 015E                         __pbssBANK2 0200  
           __end_of_actuators_main 2A72                            ?___wmul 0080  
               __size_of_send_byte 0018                            ?_printf 00ED  
           stepper2_back@direction 0103                            ?_strlen 0080  
            __end_of_number_deploy 30B2                          ?___xxtofl 0001  
                __end_of_backwards 4136                 __size_of_vfpfcnvrt 03AA  
                       _dist_final 0250                            _SSPCON1 000FC6  
                          _SSPCON2 000FC5                            _SSPSTAT 000FC7  
                          _UI_main 0A00               __size_of_send_nibble 001A  
                  ?_actuators_main 0112                            __Hparam 0000  
                          __Lparam 0000                       ?_system_init 0001  
                          ___aodiv 2BBC                            ___aomod 30B2  
                          ___fldiv 1E5A                            ___awdiv 3AA8  
                          ___fltol 377E                            ___lldiv 3A24  
                  __size_of___wmul 0028                            ___llmod 3C0A  
                        ?_vfprintf 00E5                          ?_stepper2 0100  
                  __CFG_STVREN$OFF 000000                            __pcinit 3CD2  
                       _full_drive 1B2A                            __ramtop 1000  
                          _lcdInst 418C                            __ptext0 0012  
                          __ptext1 274E                            __ptext2 32E8  
                          __ptext3 2560                            __ptext4 31D8  
                          __ptext5 3D7E                            __ptext6 2F8A  
                          __ptext7 3F40                            __ptext8 3838  
                          __ptext9 4110                    __size_of_printf 0028  
                  __size_of_strlen 002E                            _initLCD 3B2C  
                     __size_of_ISR 3E92                            _counter 0060  
                     __size_of_abs 0034                       __size_of_pad 009C  
                          _isalpha 3ED6                       __size_of_min 0110  
                          _isdigit 4008                         ??___xxtofl 0005  
                          _islower 3FA4                            _isspace 3E1C  
                          _isupper 3FD6           __size_of_I2C_Master_Init 0060  
         __size_of_I2C_Master_Read 002A           __size_of_I2C_Master_Wait 0014  
         __size_of_I2C_Master_Stop 0008                    _prev_dist_final 015E  
                          _pressed 016F                            atoi@neg 008D  
                          _pulse_e 4068                            _stepper 2A72  
                   __pintcode_body 3E5C                            _toupper 3DD0  
             end_of_initialization 3D1A                            min@size 0082  
              main@arduino_stopped 0364         ??_I2C_Master_RepeatedStart 0081  
            __end_of_LCD_SIZE_HORZ FD97                  __end_of_send_byte 4168  
            __end_of_LCD_SIZE_VERT FD96                            fputc@fp 0086  
                    __Lmediumconst FD80                            int_func 3E5C  
                          fputs@fp 008F          __size_of_I2C_Master_Start 0008  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0084  
                  ___lldiv@counter 008C                  __end_of_vfpfcnvrt 1B2A  
                    ?_servoRotate0 0080                     main@steps2_adj 0367  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                         ??_vfprintf 00EB  
                       ??_stepper2 0102                            strlen@a 0082  
                          strlen@s 0080                          _PORTAbits 000F80  
                       _print_echo 2560                      stepper2@i_489 0109  
                    ___xxtofl@sign 0009                          _TRISAbits 000F92  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                      ___fldiv@grs 0022                        ___fldiv@rem 001B  
                       main@i_1104 0358                         main@i_1105 035A  
                       main@i_1106 035C                         main@i_1107 035E  
                       main@i_1087 0356                         main@i_1099 0370  
      ultrasonic_main@step2_offset 0106                         main@data_g 036B  
                    send_byte@data 0082              UI_main@poles_detected 00FD  
                   ??_servoRotate0 0082        number_deploy@tires_detected 0104  
                      vfpfcnvrt@ap 00CA                        vfpfcnvrt@fp 00C6  
                      vfpfcnvrt@ll 00D0                     __end_of___wmul 4110  
                      ?_full_drive 00FB            __size_of_servoRotate180 00F2  
                    __pidataCOMRAM 41BE                     __end_of_printf 40E8  
                   __end_of_strlen 4068                start_initialization 3CD2  
                       min@minimum 0087                        __end_of_ISR 3E9A  
                      __end_of_abs 3F40                        __end_of_pad 3A24  
                      __end_of_min 32E8              stepper2@count_stepper 010B  
           __size_of_ee_write_byte 0032                  ??_I2C_Master_Init 0091  
                ??_I2C_Master_Read 0081                  ??_I2C_Master_Wait 0080  
                ??_I2C_Master_Stop 0081                  main@prev_avg_dist 0374  
                   _poles_detected 0052                    ___llmod@divisor 0084  
                  ___llmod@counter 0088                       UI_main@t_dep 00FB  
                      vfprintf@fmt 00E7                           ??___wmul 0084  
         I2C_Master_Init@clockFreq 008D                   __CFG_LPT1OSC$OFF 000000  
             __size_of_system_init 0032                           ??_printf 00F7  
                         ??_strlen 0082                        ?_print_echo 0001  
                        ___fldiv@a 0013                          ___fldiv@b 000F  
             ee_write_byte@address 0082           __size_of_ultrasonic_main 01D4  
                      __pbssCOMRAM 0038                      __pcstackBANK0 0080  
                    __pcstackBANK1 0100                      __pcstackBANK3 0300  
                 ___aodiv@dividend 0080                   ??_actuators_main 0118  
                __size_of___xxtofl 0140                          _backwards 4110  
                         ?_UI_main 00FB              __end_of_stepper2_back 3988  
              __size_of_full_drive 0330                 ee_write_byte@_data 0080  
                        _atoi$1734 008F                          _atoi$1735 0093  
                        _atoi$1736 0091                   _I2C_Master_Start 41AE  
                 _I2C_Master_Write 419C                          _main$1077 0360  
                        _main$1078 0361                          _main$1079 0362  
                        _dtoa$1250 00B1                  __CFG_CCP2MX$PORTC 000000  
                        __pintcode 0008                      __pmediumconst FD80  
                    _ee_write_byte 3F40                           ?___aodiv 0080  
                         ?___aomod 0080                           ?___fldiv 000F  
                         ?___awdiv 0001                   ___aodiv@quotient 0092  
                         ?___fltol 0028                           ?___lldiv 0080  
                         ?___llmod 0080                           ?_lcdInst 0001  
                __size_of_vfprintf 0056                  __size_of_stepper2 00FC  
             full_drive@stepper_no 00FB                           ?_initLCD 0001  
                         ?_isalpha 0080                           ?_isdigit 0080  
                         ?_islower 0080                           ?_isspace 0080  
                         ?_isupper 0080               __end_of_servoRotate0 36C4  
                    ??_send_nibble 0081                           ?_pulse_e 0001  
                   __size_of_brake 00B0                           ?_stepper 0100  
                   __size_of_fputc 006E                     __size_of_fputs 003C  
                         ?_toupper 0086                     __size_of_servo 00BA  
                       ?_backwards 0001                     __size_of_putch 0010  
                   __size_of_start 0052                     ___wmul@product 0084  
                         _LATAbits 000F89                           _LATBbits 000F8A  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           UI_main@i 0159  
                 main@pole_cl_dist 0302                          _send_byte 4150  
              __size_of_print_echo 01EE             __size_of_number_deploy 0128  
                   _LCD_LINE1_ADDR FD94                     _LCD_LINE2_ADDR FD97  
                   _LCD_LINE3_ADDR FD93                     _LCD_LINE4_ADDR FD92  
                         i2u520_40 208C                           i2u521_40 20B0  
                         i2u530_40 37BA                           i2u530_45 37B0  
                         i2u516_40 2030                           i2u526_40 3AEE  
                         i2u534_40 3810                           i2u529_40 378A  
                         i2u545_40 2F42                           i2u555_40 12CA  
                         i2u556_40 12DA                           i2u636_40 3E86  
                         i2u565_40 1418                           i2u566_40 1428  
                         i2u575_40 156A                           i2u576_40 157A  
                         i2u585_40 16BC                           i2u586_40 16CC  
                   ?_ee_write_byte 0080                   __CFG_WDTPS$32768 000000  
       stepper2_back@count_stepper 0104                     _servoRotate180 34E6  
                        _vfpfcnvrt 1780                          _xtoa$1261 00B2  
                        _xtoa$1262 00B4                  ___wmul@multiplier 0080  
                        main@t_dep 0372                          main@t_det 0378  
                        main@stack 0365                       _isspace$1761 0086  
                       vfpfcnvrt@c 00E0                actuators_main@t_dep 0116  
              actuators_main@stack 0112                          copy_data0 3CE6  
                ??_ultrasonic_main 0100                    UI_main@keypress 0154  
           __end_of_LCD_LINE1_ADDR FD95                   __size_of_UI_main 083C  
           __end_of_LCD_LINE2_ADDR FD98             __end_of_LCD_LINE3_ADDR FD94  
           __end_of_LCD_LINE4_ADDR FD93                __end_of_send_nibble 4150  
                       _EECON1bits 000FA6                         ?_send_byte 0001  
                      UI_main@Pole 0104                           __Hrparam 0000  
                      UI_main@tick 0155                         vfprintf@ap 00E9  
                         __Lrparam 0000                         vfprintf@fp 00E5  
               __CFG_BOREN$SBORDIS 000000             __end_of_servoRotate180 35D8  
                 __size_of___aodiv 014A  __size_of_I2C_Master_RepeatedStart 0008  
                 __size_of___aomod 0126                   __size_of___fldiv 0288  
                 __size_of___awdiv 0084          ?_I2C_Master_RepeatedStart 0001  
                 __size_of___fltol 00BA                   __size_of___lldiv 0084  
                 __size_of___llmod 0068                       ??_full_drive 00FD  
                       ?_vfpfcnvrt 00C6                    ___aodiv@divisor 0088  
                  ___aodiv@counter 0090                   __size_of_lcdInst 0010  
         actuators_main@steps2_adj 0114                      _number_deploy 2F8A  
                  _I2C_Master_Init 3C72                    _I2C_Master_Read 4096  
                 __size_of_initLCD 0070                           ___xxtofl 2E4A  
                  _I2C_Master_Wait 4168                    _I2C_Master_Stop 41A6  
                 __size_of_isalpha 0036                   __size_of_isdigit 0032  
                 __size_of_islower 0032                   __size_of_isspace 0040  
                         __ptext10 2922                           __ptext11 3F72  
                         __ptext20 40C0                           __ptext12 38E8  
                         __ptext21 3D28                           __ptext13 33EA  
                         __ptext30 403A                           __ptext22 1780  
                         __ptext14 2A72                           __ptext31 3E9A  
                         __ptext23 232A                           __ptext15 1B2A  
                         __ptext40 40E8                           __ptext32 3B9C  
                         __ptext24 3DD0                           __ptext16 36C4  
                         __ptext41 3B2C                           __ptext33 417C  
                         __ptext25 3FA4                           __ptext17 34E6  
                         __ptext50 4096                           __ptext42 418C  
                         __ptext34 3F0C                           __ptext26 3FD6  
                         __ptext18 35D8                           __ptext51 3C72  
                         __ptext43 4150                           __ptext35 30B2  
                         __ptext27 3ED6                           __ptext19 0A00  
                         __ptext60 3AA8                           __ptext52 3A24  
                         __ptext44 4136                           __ptext36 2BBC  
                         __ptext28 20E2                           __ptext53 41B6  
                         __ptext45 4068                           __ptext37 2D06  
                         __ptext29 3988                           __ptext54 4168  
                         __ptext46 3C0A                           __ptext38 3E1C  
                         __ptext47 419C                           __ptext39 4008  
                         __ptext56 123C                           __ptext48 41A6  
                         __ptext57 2E4A                           __ptext49 41AE  
                         __ptext58 377E                           __ptext59 1E5A  
                 __size_of_isupper 0032                           _avg_dist 0044  
                 __size_of_pulse_e 002E                        ??_backwards 0083  
                 __size_of_stepper 014A                   __size_of_toupper 004C  
                    __size_of_echo 0544                      __size_of_atoi 0144  
                    __size_of_main 09EE                      __size_of_dtoa 0248  
          stepper2_back@steps2_adj 0100                      __size_of_trig 0102  
                    __size_of_xtoa 0236                 __end_of_full_drive 1E5A  
                         _keypress 005F                    ??_ee_write_byte 0082  
                         _temp_int 0177                    ?_servoRotate180 0080  
                         int$flags 006E                           _vfprintf 3D28  
                         main@Pole 0304                           _stepper2 33EA  
                         main@addr 036F                           main@data 037C  
                        printf@fmt 00ED        I2C_Master_Write@byteToWrite 0081  
                 ___aomod@dividend 0080              __size_of_servoRotate0 00EC  
                         min@array 0080                       ??_print_echo 00FB  
                   ?_number_deploy 0100                          putch@data 0083  
         __end_of_I2C_Master_Start 41B6                     _vfpfcnvrt$1276 00E3  
         __end_of_I2C_Master_Write 41A6                         _INTCONbits 000FF2  
            ultrasonic_main@sensed 0104                           isalpha@c 0080  
                         isdigit@c 0080                          stepper2@i 0107  
                      _send_nibble 4136                           intlevel2 0000  
                    _LCD_SIZE_HORZ FD96                           islower@c 0080  
                    _LCD_SIZE_VERT FD95                           isspace@c 0080  
                 ___lldiv@dividend 0080                        ??_send_byte 0082  
                         isupper@c 0080                     _tires_deployed 0054  
               __end_of_print_echo 274E                      ??_system_init 0080  
                     _servoRotate0 35D8                           printf@ap 00F9  
          __end_of_I2C_Master_Init 3CD2                    ___aomod@divisor 0088  
          __end_of_I2C_Master_Read 40C0            __end_of_I2C_Master_Wait 417C  
          __end_of_I2C_Master_Stop 41AE                        ??_vfpfcnvrt 00CC  
                      lcdInst@data 0083                    ___aomod@counter 0090  
                         stepper@i 010A          ultrasonic_main@steps2_adj 0108  
                 ___lldiv@quotient 0088                           toupper@c 0086  
                      _SSPCON1bits 000FC6                        _SSPCON2bits 000FC5  
                      _timer_count 005C                       ___aodiv@sign 0091  
                     ___aomod@sign 0091               stepper@count_stepper 0108  
