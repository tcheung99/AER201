

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 01:58:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4620 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  003F6C                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _dists
   122  003F6C  0000               	dw	0
   123  003F6E  FFFF               	dw	65535
   124                           
   125                           ;initializer for _send
   126  003F70  01                 	db	1
   127                           
   128                           	psect	mediumconst
   129  00FD9C                     __pmediumconst:
   130                           	opt callstack 0
   131  00FD9C  00                 	db	0
   132  00FD9D                     _keys:
   133                           	opt callstack 0
   134  00FD9D  31                 	db	49
   135  00FD9E  32                 	db	50
   136  00FD9F  33                 	db	51
   137  00FDA0  41                 	db	65
   138  00FDA1  34                 	db	52
   139  00FDA2  35                 	db	53
   140  00FDA3  36                 	db	54
   141  00FDA4  42                 	db	66
   142  00FDA5  37                 	db	55
   143  00FDA6  38                 	db	56
   144  00FDA7  39                 	db	57
   145  00FDA8  43                 	db	67
   146  00FDA9  2A                 	db	42
   147  00FDAA  30                 	db	48
   148  00FDAB  23                 	db	35
   149  00FDAC  44                 	db	68
   150  00FDAD  00                 	db	0
   151  00FDAE                     __end_of_keys:
   152                           	opt callstack 0
   153  00FDAE  50                 	db	80
   154  00FDAF                     __end_of_LCD_LINE4_ADDR:
   155                           	opt callstack 0
   156  00FDAF  10                 	db	16
   157  00FDB0                     __end_of_LCD_LINE3_ADDR:
   158                           	opt callstack 0
   159  00FDB0                     _LCD_LINE1_ADDR:
   160                           	opt callstack 0
   161  00FDB0  00                 	db	0
   162  00FDB1                     __end_of_LCD_LINE1_ADDR:
   163                           	opt callstack 0
   164  00FDB1                     _LCD_SIZE_VERT:
   165                           	opt callstack 0
   166  00FDB1  04                 	db	4
   167  00FDB2                     __end_of_LCD_SIZE_VERT:
   168                           	opt callstack 0
   169  00FDB2                     _LCD_SIZE_HORZ:
   170                           	opt callstack 0
   171  00FDB2  10                 	db	16
   172  00FDB3                     __end_of_LCD_SIZE_HORZ:
   173                           	opt callstack 0
   174  00FDB3  40                 	db	64
   175  00FDB4                     __end_of_LCD_LINE2_ADDR:
   176                           	opt callstack 0
   177  0000                     _EECON2	set	4007
   178  0000                     _EECON1bits	set	4006
   179  0000                     _EEADR	set	4009
   180  0000                     _EEDATA	set	4008
   181  0000                     _PORTAbits	set	3968
   182  0000                     _TRISAbits	set	3986
   183  0000                     _T1CON	set	4045
   184  0000                     _PORTB	set	3969
   185  0000                     _TMR1H	set	4047
   186  0000                     _TMR1L	set	4046
   187  0000                     _LATDbits	set	3980
   188  0000                     _INTCONbits	set	4082
   189  0000                     _LATBbits	set	3978
   190  0000                     _TRISBbits	set	3987
   191  0000                     _LATE	set	3981
   192  0000                     _TRISE	set	3990
   193  0000                     _LATC	set	3979
   194  0000                     _TRISC	set	3988
   195  0000                     _ADCON1	set	4033
   196  0000                     _TRISD	set	3989
   197  0000                     _LATD	set	3980
   198  0000                     _TRISA	set	3986
   199  0000                     _LATB	set	3978
   200  0000                     _TRISB	set	3987
   201  0000                     _LATAbits	set	3977
   202  0000                     _LATEbits	set	3981
   203  0000                     _LATCbits	set	3979
   204  0000                     _LATA	set	3977
   205  0000                     _SSPBUF	set	4041
   206  0000                     _SSPCON2bits	set	4037
   207  0000                     _SSPCON1	set	4038
   208  0000                     _SSPADD	set	4040
   209  0000                     _TRISCbits	set	3988
   210  0000                     _SSPCON1bits	set	4038
   211  0000                     _SSPCON2	set	4037
   212  0000                     _SSPSTAT	set	4039
   213  0000                     _GIE	set	32663
   214  0000                     _INT1IE	set	32643
   215  0000                     _RB2	set	31754
   216  0000                     _RB3	set	31755
   217  0000                     _RB4	set	31756
   218  0000                     _RB5	set	31757
   219  0000                     _RB6	set	31758
   220  0000                     _TMR1ON	set	32360
   221  0000                     _RB7	set	31759
   222  0000                     _INT1IF	set	32640
   223  0000                     _RBIE	set	32659
   224  0000                     _RBIF	set	32656
   225  0000                     _RD0	set	31768
   226  0000                     _RD1	set	31769
   227  0000                     _RC2	set	31762
   228  0000                     _RC1	set	31761
   229  00FDB4                     STR_40:
   230  00FDB4  50                 	db	80	;'P'
   231  00FDB5  25                 	db	37
   232  00FDB6  64                 	db	100	;'d'
   233  00FDB7  20                 	db	32
   234  00FDB8  44                 	db	68	;'D'
   235  00FDB9  65                 	db	101	;'e'
   236  00FDBA  70                 	db	112	;'p'
   237  00FDBB  3A                 	db	58	;':'
   238  00FDBC  25                 	db	37
   239  00FDBD  64                 	db	100	;'d'
   240  00FDBE  2C                 	db	44
   241  00FDBF  54                 	db	84	;'T'
   242  00FDC0  6F                 	db	111	;'o'
   243  00FDC1  74                 	db	116	;'t'
   244  00FDC2  3A                 	db	58	;':'
   245  00FDC3  25                 	db	37
   246  00FDC4  64                 	db	100	;'d'
   247  00FDC5  00                 	db	0
   248  00FDC6                     STR_30:
   249  00FDC6  20                 	db	32
   250  00FDC7  20                 	db	32
   251  00FDC8  20                 	db	32
   252  00FDC9  20                 	db	32
   253  00FDCA  20                 	db	32
   254  00FDCB  30                 	db	48	;'0'
   255  00FDCC  2D                 	db	45
   256  00FDCD  4D                 	db	77	;'M'
   257  00FDCE  65                 	db	101	;'e'
   258  00FDCF  6E                 	db	110	;'n'
   259  00FDD0  75                 	db	117	;'u'
   260  00FDD1  20                 	db	32
   261  00FDD2  20                 	db	32
   262  00FDD3  20                 	db	32
   263  00FDD4  20                 	db	32
   264  00FDD5  20                 	db	32
   265  00FDD6  00                 	db	0
   266  00FDD7                     STR_47:
   267  00FDD7  3C                 	db	60	;'<'
   268  00FDD8  2A                 	db	42
   269  00FDD9  20                 	db	32
   270  00FDDA  20                 	db	32
   271  00FDDB  20                 	db	32
   272  00FDDC  30                 	db	48	;'0'
   273  00FDDD  2D                 	db	45
   274  00FDDE  4D                 	db	77	;'M'
   275  00FDDF  65                 	db	101	;'e'
   276  00FDE0  6E                 	db	110	;'n'
   277  00FDE1  75                 	db	117	;'u'
   278  00FDE2  20                 	db	32
   279  00FDE3  20                 	db	32
   280  00FDE4  20                 	db	32
   281  00FDE5  20                 	db	32
   282  00FDE6  20                 	db	32
   283  00FDE7  00                 	db	0
   284  00FDE8                     STR_10:
   285  00FDE8  44                 	db	68	;'D'
   286  00FDE9  69                 	db	105	;'i'
   287  00FDEA  73                 	db	115	;'s'
   288  00FDEB  74                 	db	116	;'t'
   289  00FDEC  31                 	db	49	;'1'
   290  00FDED  3D                 	db	61	;'='
   291  00FDEE  25                 	db	37
   292  00FDEF  64                 	db	100	;'d'
   293  00FDF0  2C                 	db	44
   294  00FDF1  41                 	db	65	;'A'
   295  00FDF2  76                 	db	118	;'v'
   296  00FDF3  67                 	db	103	;'g'
   297  00FDF4  3D                 	db	61	;'='
   298  00FDF5  25                 	db	37
   299  00FDF6  64                 	db	100	;'d'
   300  00FDF7  20                 	db	32
   301  00FDF8  00                 	db	0
   302  00FDF9                     STR_16:
   303  00FDF9  44                 	db	68	;'D'
   304  00FDFA  69                 	db	105	;'i'
   305  00FDFB  73                 	db	115	;'s'
   306  00FDFC  74                 	db	116	;'t'
   307  00FDFD  34                 	db	52	;'4'
   308  00FDFE  3D                 	db	61	;'='
   309  00FDFF  25                 	db	37
   310  00FE00  64                 	db	100	;'d'
   311  00FE01  2C                 	db	44
   312  00FE02  41                 	db	65	;'A'
   313  00FE03  76                 	db	118	;'v'
   314  00FE04  67                 	db	103	;'g'
   315  00FE05  3D                 	db	61	;'='
   316  00FE06  25                 	db	37
   317  00FE07  64                 	db	100	;'d'
   318  00FE08  20                 	db	32
   319  00FE09  00                 	db	0
   320  00FE0A                     STR_36:
   321  00FE0A  20                 	db	32
   322  00FE0B  20                 	db	32
   323  00FE0C  20                 	db	32
   324  00FE0D  20                 	db	32
   325  00FE0E  20                 	db	32
   326  00FE0F  30                 	db	48	;'0'
   327  00FE10  2D                 	db	45
   328  00FE11  4D                 	db	77	;'M'
   329  00FE12  65                 	db	101	;'e'
   330  00FE13  6E                 	db	110	;'n'
   331  00FE14  75                 	db	117	;'u'
   332  00FE15  20                 	db	32
   333  00FE16  20                 	db	32
   334  00FE17  20                 	db	32
   335  00FE18  23                 	db	35
   336  00FE19  3E                 	db	62	;'>'
   337  00FE1A  00                 	db	0
   338  00FE1B                     STR_39:
   339  00FE1B  3C                 	db	60	;'<'
   340  00FE1C  2A                 	db	42
   341  00FE1D  20                 	db	32
   342  00FE1E  20                 	db	32
   343  00FE1F  20                 	db	32
   344  00FE20  30                 	db	48	;'0'
   345  00FE21  2D                 	db	45
   346  00FE22  4D                 	db	77	;'M'
   347  00FE23  65                 	db	101	;'e'
   348  00FE24  6E                 	db	110	;'n'
   349  00FE25  75                 	db	117	;'u'
   350  00FE26  20                 	db	32
   351  00FE27  20                 	db	32
   352  00FE28  20                 	db	32
   353  00FE29  23                 	db	35
   354  00FE2A  3E                 	db	62	;'>'
   355  00FE2B  00                 	db	0
   356  00FE2C                     STR_58:
   357  00FE2C  64                 	db	100	;'d'
   358  00FE2D  69                 	db	105	;'i'
   359  00FE2E  73                 	db	115	;'s'
   360  00FE2F  74                 	db	116	;'t'
   361  00FE30  20                 	db	32
   362  00FE31  70                 	db	112	;'p'
   363  00FE32  5B                 	db	91	;'['
   364  00FE33  25                 	db	37
   365  00FE34  64                 	db	100	;'d'
   366  00FE35  5D                 	db	93	;']'
   367  00FE36  3A                 	db	58	;':'
   368  00FE37  25                 	db	37
   369  00FE38  64                 	db	100	;'d'
   370  00FE39  2C                 	db	44
   371  00FE3A  25                 	db	37
   372  00FE3B  64                 	db	100	;'d'
   373  00FE3C  00                 	db	0
   374  00FE3D                     STR_22:
   375  00FE3D  64                 	db	100	;'d'
   376  00FE3E  65                 	db	101	;'e'
   377  00FE3F  74                 	db	116	;'t'
   378  00FE40  2C                 	db	44
   379  00FE41  25                 	db	37
   380  00FE42  64                 	db	100	;'d'
   381  00FE43  2C                 	db	44
   382  00FE44  20                 	db	32
   383  00FE45  74                 	db	116	;'t'
   384  00FE46  63                 	db	99	;'c'
   385  00FE47  6E                 	db	110	;'n'
   386  00FE48  74                 	db	116	;'t'
   387  00FE49  20                 	db	32
   388  00FE4A  25                 	db	37
   389  00FE4B  64                 	db	100	;'d'
   390  00FE4C  00                 	db	0
   391  00FE4D                     STR_12:
   392  00FE4D  44                 	db	68	;'D'
   393  00FE4E  69                 	db	105	;'i'
   394  00FE4F  73                 	db	115	;'s'
   395  00FE50  74                 	db	116	;'t'
   396  00FE51  32                 	db	50	;'2'
   397  00FE52  3D                 	db	61	;'='
   398  00FE53  25                 	db	37
   399  00FE54  64                 	db	100	;'d'
   400  00FE55  2C                 	db	44
   401  00FE56  41                 	db	65	;'A'
   402  00FE57  76                 	db	118	;'v'
   403  00FE58  67                 	db	103	;'g'
   404  00FE59  3D                 	db	61	;'='
   405  00FE5A  25                 	db	37
   406  00FE5B  64                 	db	100	;'d'
   407  00FE5C  00                 	db	0
   408  00FE5D                     STR_14:
   409  00FE5D  44                 	db	68	;'D'
   410  00FE5E  69                 	db	105	;'i'
   411  00FE5F  73                 	db	115	;'s'
   412  00FE60  74                 	db	116	;'t'
   413  00FE61  33                 	db	51	;'3'
   414  00FE62  3D                 	db	61	;'='
   415  00FE63  25                 	db	37
   416  00FE64  64                 	db	100	;'d'
   417  00FE65  2C                 	db	44
   418  00FE66  41                 	db	65	;'A'
   419  00FE67  76                 	db	118	;'v'
   420  00FE68  67                 	db	103	;'g'
   421  00FE69  3D                 	db	61	;'='
   422  00FE6A  25                 	db	37
   423  00FE6B  64                 	db	100	;'d'
   424  00FE6C  00                 	db	0
   425  00FE6D                     STR_25:
   426  00FE6D  33                 	db	51	;'3'
   427  00FE6E  20                 	db	32
   428  00FE6F  2D                 	db	45
   429  00FE70  20                 	db	32
   430  00FE71  44                 	db	68	;'D'
   431  00FE72  61                 	db	97	;'a'
   432  00FE73  74                 	db	116	;'t'
   433  00FE74  65                 	db	101	;'e'
   434  00FE75  26                 	db	38
   435  00FE76  54                 	db	84	;'T'
   436  00FE77  69                 	db	105	;'i'
   437  00FE78  6D                 	db	109	;'m'
   438  00FE79  65                 	db	101	;'e'
   439  00FE7A  20                 	db	32
   440  00FE7B  00                 	db	0
   441  00FE7C                     STR_41:
   442  00FE7C  44                 	db	68	;'D'
   443  00FE7D  69                 	db	105	;'i'
   444  00FE7E  73                 	db	115	;'s'
   445  00FE7F  74                 	db	116	;'t'
   446  00FE80  54                 	db	84	;'T'
   447  00FE81  6F                 	db	111	;'o'
   448  00FE82  53                 	db	83	;'S'
   449  00FE83  74                 	db	116	;'t'
   450  00FE84  61                 	db	97	;'a'
   451  00FE85  72                 	db	114	;'r'
   452  00FE86  74                 	db	116	;'t'
   453  00FE87  3A                 	db	58	;':'
   454  00FE88  25                 	db	37
   455  00FE89  64                 	db	100	;'d'
   456  00FE8A  00                 	db	0
   457  00FE8B                     STR_29:
   458  00FE8B  4D                 	db	77	;'M'
   459  00FE8C  61                 	db	97	;'a'
   460  00FE8D  63                 	db	99	;'c'
   461  00FE8E  68                 	db	104	;'h'
   462  00FE8F  69                 	db	105	;'i'
   463  00FE90  6E                 	db	110	;'n'
   464  00FE91  65                 	db	101	;'e'
   465  00FE92  20                 	db	32
   466  00FE93  49                 	db	73	;'I'
   467  00FE94  6E                 	db	110	;'n'
   468  00FE95  20                 	db	32
   469  00FE96  55                 	db	85	;'U'
   470  00FE97  73                 	db	115	;'s'
   471  00FE98  65                 	db	101	;'e'
   472  00FE99  00                 	db	0
   473  00FE9A                     STR_49:
   474  00FE9A  25                 	db	37
   475  00FE9B  30                 	db	48	;'0'
   476  00FE9C  32                 	db	50	;'2'
   477  00FE9D  78                 	db	120	;'x'
   478  00FE9E  2F                 	db	47
   479  00FE9F  25                 	db	37
   480  00FEA0  30                 	db	48	;'0'
   481  00FEA1  32                 	db	50	;'2'
   482  00FEA2  78                 	db	120	;'x'
   483  00FEA3  2F                 	db	47
   484  00FEA4  25                 	db	37
   485  00FEA5  30                 	db	48	;'0'
   486  00FEA6  32                 	db	50	;'2'
   487  00FEA7  78                 	db	120	;'x'
   488  00FEA8  00                 	db	0
   489  00FEA9                     STR_50:
   490  00FEA9  25                 	db	37
   491  00FEAA  30                 	db	48	;'0'
   492  00FEAB  32                 	db	50	;'2'
   493  00FEAC  78                 	db	120	;'x'
   494  00FEAD  3A                 	db	58	;':'
   495  00FEAE  25                 	db	37
   496  00FEAF  30                 	db	48	;'0'
   497  00FEB0  32                 	db	50	;'2'
   498  00FEB1  78                 	db	120	;'x'
   499  00FEB2  3A                 	db	58	;':'
   500  00FEB3  25                 	db	37
   501  00FEB4  30                 	db	48	;'0'
   502  00FEB5  32                 	db	50	;'2'
   503  00FEB6  78                 	db	120	;'x'
   504  00FEB7  00                 	db	0
   505  00FEB8                     STR_59:
   506  00FEB8  70                 	db	112	;'p'
   507  00FEB9  5B                 	db	91	;'['
   508  00FEBA  25                 	db	37
   509  00FEBB  64                 	db	100	;'d'
   510  00FEBC  5D                 	db	93	;']'
   511  00FEBD  20                 	db	32
   512  00FEBE  66                 	db	102	;'f'
   513  00FEBF  73                 	db	115	;'s'
   514  00FEC0  20                 	db	32
   515  00FEC1  3A                 	db	58	;':'
   516  00FEC2  20                 	db	32
   517  00FEC3  25                 	db	37
   518  00FEC4  64                 	db	100	;'d'
   519  00FEC5  00                 	db	0
   520  00FEC6                     STR_38:
   521  00FEC6  4E                 	db	78	;'N'
   522  00FEC7  6F                 	db	111	;'o'
   523  00FEC8  2E                 	db	46
   524  00FEC9  20                 	db	32
   525  00FECA  50                 	db	80	;'P'
   526  00FECB  6F                 	db	111	;'o'
   527  00FECC  6C                 	db	108	;'l'
   528  00FECD  65                 	db	101	;'e'
   529  00FECE  73                 	db	115	;'s'
   530  00FECF  3A                 	db	58	;':'
   531  00FED0  20                 	db	32
   532  00FED1  25                 	db	37
   533  00FED2  64                 	db	100	;'d'
   534  00FED3  00                 	db	0
   535  00FED4                     STR_37:
   536  00FED4  4E                 	db	78	;'N'
   537  00FED5  6F                 	db	111	;'o'
   538  00FED6  2E                 	db	46
   539  00FED7  20                 	db	32
   540  00FED8  54                 	db	84	;'T'
   541  00FED9  69                 	db	105	;'i'
   542  00FEDA  72                 	db	114	;'r'
   543  00FEDB  65                 	db	101	;'e'
   544  00FEDC  73                 	db	115	;'s'
   545  00FEDD  3A                 	db	58	;':'
   546  00FEDE  20                 	db	32
   547  00FEDF  25                 	db	37
   548  00FEE0  64                 	db	100	;'d'
   549  00FEE1  00                 	db	0
   550  00FEE2                     STR_7:
   551  00FEE2  53                 	db	83	;'S'
   552  00FEE3  74                 	db	116	;'t'
   553  00FEE4  65                 	db	101	;'e'
   554  00FEE5  70                 	db	112	;'p'
   555  00FEE6  20                 	db	32
   556  00FEE7  73                 	db	115	;'s'
   557  00FEE8  70                 	db	112	;'p'
   558  00FEE9  65                 	db	101	;'e'
   559  00FEEA  65                 	db	101	;'e'
   560  00FEEB  64                 	db	100	;'d'
   561  00FEEC  20                 	db	32
   562  00FEED  25                 	db	37
   563  00FEEE  64                 	db	100	;'d'
   564  00FEEF  00                 	db	0
   565  00FEF0                     STR_19:
   566  00FEF0  62                 	db	98	;'b'
   567  00FEF1  72                 	db	114	;'r'
   568  00FEF2  65                 	db	101	;'e'
   569  00FEF3  61                 	db	97	;'a'
   570  00FEF4  6B                 	db	107	;'k'
   571  00FEF5  20                 	db	32
   572  00FEF6  68                 	db	104	;'h'
   573  00FEF7  65                 	db	101	;'e'
   574  00FEF8  72                 	db	114	;'r'
   575  00FEF9  65                 	db	101	;'e'
   576  00FEFA  65                 	db	101	;'e'
   577  00FEFB  3F                 	db	63	;'?'
   578  00FEFC  00                 	db	0
   579  00FEFD                     STR_54:
   580  00FEFD  6D                 	db	109	;'m'
   581  00FEFE  6F                 	db	111	;'o'
   582  00FEFF  72                 	db	114	;'r'
   583  00FF00  65                 	db	101	;'e'
   584  00FF01  20                 	db	32
   585  00FF02  77                 	db	119	;'w'
   586  00FF03  61                 	db	97	;'a'
   587  00FF04  69                 	db	105	;'i'
   588  00FF05  74                 	db	116	;'t'
   589  00FF06  69                 	db	105	;'i'
   590  00FF07  6E                 	db	110	;'n'
   591  00FF08  67                 	db	103	;'g'
   592  00FF09  00                 	db	0
   593  00FF0A                     STR_2:
   594  00FF0A  53                 	db	83	;'S'
   595  00FF0B  74                 	db	116	;'t'
   596  00FF0C  65                 	db	101	;'e'
   597  00FF0D  70                 	db	112	;'p'
   598  00FF0E  70                 	db	112	;'p'
   599  00FF0F  65                 	db	101	;'e'
   600  00FF10  72                 	db	114	;'r'
   601  00FF11  20                 	db	32
   602  00FF12  64                 	db	100	;'d'
   603  00FF13  6F                 	db	111	;'o'
   604  00FF14  6E                 	db	110	;'n'
   605  00FF15  65                 	db	101	;'e'
   606  00FF16  00                 	db	0
   607  00FF17                     STR_48:
   608  00FF17  44                 	db	68	;'D'
   609  00FF18  41                 	db	65	;'A'
   610  00FF19  54                 	db	84	;'T'
   611  00FF1A  45                 	db	69	;'E'
   612  00FF1B  20                 	db	32
   613  00FF1C  26                 	db	38
   614  00FF1D  20                 	db	32
   615  00FF1E  54                 	db	84	;'T'
   616  00FF1F  49                 	db	73	;'I'
   617  00FF20  4D                 	db	77	;'M'
   618  00FF21  45                 	db	69	;'E'
   619  00FF22  00                 	db	0
   620  00FF23                     STR_21:
   621  00FF23  73                 	db	115	;'s'
   622  00FF24  74                 	db	116	;'t'
   623  00FF25  65                 	db	101	;'e'
   624  00FF26  70                 	db	112	;'p'
   625  00FF27  73                 	db	115	;'s'
   626  00FF28  61                 	db	97	;'a'
   627  00FF29  64                 	db	100	;'d'
   628  00FF2A  6A                 	db	106	;'j'
   629  00FF2B  20                 	db	32
   630  00FF2C  25                 	db	37
   631  00FF2D  64                 	db	100	;'d'
   632  00FF2E  00                 	db	0
   633  00FF2F                     STR_60:
   634  00FF2F  61                 	db	97	;'a'
   635  00FF30  76                 	db	118	;'v'
   636  00FF31  67                 	db	103	;'g'
   637  00FF32  20                 	db	32
   638  00FF33  64                 	db	100	;'d'
   639  00FF34  69                 	db	105	;'i'
   640  00FF35  73                 	db	115	;'s'
   641  00FF36  74                 	db	116	;'t'
   642  00FF37  20                 	db	32
   643  00FF38  25                 	db	37
   644  00FF39  64                 	db	100	;'d'
   645  00FF3A  00                 	db	0
   646  00FF3B                     STR_42:
   647  00FF3B  44                 	db	68	;'D'
   648  00FF3C  69                 	db	105	;'i'
   649  00FF3D  73                 	db	115	;'s'
   650  00FF3E  74                 	db	116	;'t'
   651  00FF3F  54                 	db	84	;'T'
   652  00FF40  6F                 	db	111	;'o'
   653  00FF41  43                 	db	67	;'C'
   654  00FF42  4C                 	db	76	;'L'
   655  00FF43  3A                 	db	58	;':'
   656  00FF44  25                 	db	37
   657  00FF45  64                 	db	100	;'d'
   658  00FF46  00                 	db	0
   659  00FF47                     STR_24:
   660  00FF47  32                 	db	50	;'2'
   661  00FF48  20                 	db	32
   662  00FF49  2D                 	db	45
   663  00FF4A  20                 	db	32
   664  00FF4B  53                 	db	83	;'S'
   665  00FF4C  75                 	db	117	;'u'
   666  00FF4D  6D                 	db	109	;'m'
   667  00FF4E  6D                 	db	109	;'m'
   668  00FF4F  61                 	db	97	;'a'
   669  00FF50  72                 	db	114	;'r'
   670  00FF51  79                 	db	121	;'y'
   671  00FF52  00                 	db	0
   672  00FF53                     STR_61:
   673  00FF53  70                 	db	112	;'p'
   674  00FF54  6F                 	db	111	;'o'
   675  00FF55  6C                 	db	108	;'l'
   676  00FF56  65                 	db	101	;'e'
   677  00FF57  73                 	db	115	;'s'
   678  00FF58  20                 	db	32
   679  00FF59  64                 	db	100	;'d'
   680  00FF5A  20                 	db	32
   681  00FF5B  25                 	db	37
   682  00FF5C  64                 	db	100	;'d'
   683  00FF5D  00                 	db	0
   684  00FF5E                     STR_20:
   685  00FF5E  6D                 	db	109	;'m'
   686  00FF5F  69                 	db	105	;'i'
   687  00FF60  6E                 	db	110	;'n'
   688  00FF61  69                 	db	105	;'i'
   689  00FF62  6D                 	db	109	;'m'
   690  00FF63  75                 	db	117	;'u'
   691  00FF64  6D                 	db	109	;'m'
   692  00FF65  20                 	db	32
   693  00FF66  25                 	db	37
   694  00FF67  64                 	db	100	;'d'
   695  00FF68  00                 	db	0
   696  00FF69                     STR_62:
   697  00FF69  70                 	db	112	;'p'
   698  00FF6A  6F                 	db	111	;'o'
   699  00FF6B  6C                 	db	108	;'l'
   700  00FF6C  65                 	db	101	;'e'
   701  00FF6D  73                 	db	115	;'s'
   702  00FF6E  20                 	db	32
   703  00FF6F  64                 	db	100	;'d'
   704  00FF70  6F                 	db	111	;'o'
   705  00FF71  6E                 	db	110	;'n'
   706  00FF72  65                 	db	101	;'e'
   707  00FF73  00                 	db	0
   708  00FF74                     STR_3:
   709  00FF74  53                 	db	83	;'S'
   710  00FF75  65                 	db	101	;'e'
   711  00FF76  72                 	db	114	;'r'
   712  00FF77  76                 	db	118	;'v'
   713  00FF78  6F                 	db	111	;'o'
   714  00FF79  20                 	db	32
   715  00FF7A  64                 	db	100	;'d'
   716  00FF7B  6F                 	db	111	;'o'
   717  00FF7C  6E                 	db	110	;'n'
   718  00FF7D  65                 	db	101	;'e'
   719  00FF7E  00                 	db	0
   720  00FF7F                     STR_11:
   721  00FF7F  44                 	db	68	;'D'
   722  00FF80  69                 	db	105	;'i'
   723  00FF81  73                 	db	115	;'s'
   724  00FF82  74                 	db	116	;'t'
   725  00FF83  31                 	db	49	;'1'
   726  00FF84  20                 	db	32
   727  00FF85  3D                 	db	61	;'='
   728  00FF86  20                 	db	32
   729  00FF87  58                 	db	88	;'X'
   730  00FF88  00                 	db	0
   731  00FF89                     STR_13:
   732  00FF89  44                 	db	68	;'D'
   733  00FF8A  69                 	db	105	;'i'
   734  00FF8B  73                 	db	115	;'s'
   735  00FF8C  74                 	db	116	;'t'
   736  00FF8D  32                 	db	50	;'2'
   737  00FF8E  20                 	db	32
   738  00FF8F  3D                 	db	61	;'='
   739  00FF90  20                 	db	32
   740  00FF91  58                 	db	88	;'X'
   741  00FF92  00                 	db	0
   742  00FF93                     STR_15:
   743  00FF93  44                 	db	68	;'D'
   744  00FF94  69                 	db	105	;'i'
   745  00FF95  73                 	db	115	;'s'
   746  00FF96  74                 	db	116	;'t'
   747  00FF97  33                 	db	51	;'3'
   748  00FF98  20                 	db	32
   749  00FF99  3D                 	db	61	;'='
   750  00FF9A  20                 	db	32
   751  00FF9B  58                 	db	88	;'X'
   752  00FF9C  00                 	db	0
   753  00FF9D                     STR_17:
   754  00FF9D  44                 	db	68	;'D'
   755  00FF9E  69                 	db	105	;'i'
   756  00FF9F  73                 	db	115	;'s'
   757  00FFA0  74                 	db	116	;'t'
   758  00FFA1  34                 	db	52	;'4'
   759  00FFA2  20                 	db	32
   760  00FFA3  3D                 	db	61	;'='
   761  00FFA4  20                 	db	32
   762  00FFA5  58                 	db	88	;'X'
   763  00FFA6  00                 	db	0
   764  00FFA7                     STR_56:
   765  00FFA7  64                 	db	100	;'d'
   766  00FFA8  75                 	db	117	;'u'
   767  00FFA9  6E                 	db	110	;'n'
   768  00FFAA  20                 	db	32
   769  00FFAB  62                 	db	98	;'b'
   770  00FFAC  72                 	db	114	;'r'
   771  00FFAD  65                 	db	101	;'e'
   772  00FFAE  61                 	db	97	;'a'
   773  00FFAF  6B                 	db	107	;'k'
   774  00FFB0  00                 	db	0
   775  00FFB1                     STR_63:
   776  00FFB1  62                 	db	98	;'b'
   777  00FFB2  61                 	db	97	;'a'
   778  00FFB3  63                 	db	99	;'c'
   779  00FFB4  6B                 	db	107	;'k'
   780  00FFB5  77                 	db	119	;'w'
   781  00FFB6  61                 	db	97	;'a'
   782  00FFB7  72                 	db	114	;'r'
   783  00FFB8  64                 	db	100	;'d'
   784  00FFB9  73                 	db	115	;'s'
   785  00FFBA  00                 	db	0
   786  00FFBB                     STR_55:
   787  00FFBB  64                 	db	100	;'d'
   788  00FFBC  6F                 	db	111	;'o'
   789  00FFBD  6E                 	db	110	;'n'
   790  00FFBE  65                 	db	101	;'e'
   791  00FFBF  20                 	db	32
   792  00FFC0  77                 	db	119	;'w'
   793  00FFC1  61                 	db	97	;'a'
   794  00FFC2  69                 	db	105	;'i'
   795  00FFC3  74                 	db	116	;'t'
   796  00FFC4  00                 	db	0
   797  00FFC5                     STR_23:
   798  00FFC5  31                 	db	49	;'1'
   799  00FFC6  20                 	db	32
   800  00FFC7  2D                 	db	45
   801  00FFC8  20                 	db	32
   802  00FFC9  53                 	db	83	;'S'
   803  00FFCA  74                 	db	116	;'t'
   804  00FFCB  61                 	db	97	;'a'
   805  00FFCC  72                 	db	114	;'r'
   806  00FFCD  74                 	db	116	;'t'
   807  00FFCE  00                 	db	0
   808  00FFCF                     STR_5:
   809  00FFCF  73                 	db	115	;'s'
   810  00FFD0  74                 	db	116	;'t'
   811  00FFD1  65                 	db	101	;'e'
   812  00FFD2  70                 	db	112	;'p'
   813  00FFD3  70                 	db	112	;'p'
   814  00FFD4  70                 	db	112	;'p'
   815  00FFD5  20                 	db	32
   816  00FFD6  25                 	db	37
   817  00FFD7  64                 	db	100	;'d'
   818  00FFD8  00                 	db	0
   819  00FFD9                     STR_1:
   820  00FFD9  63                 	db	99	;'c'
   821  00FFDA  6E                 	db	110	;'n'
   822  00FFDB  74                 	db	116	;'t'
   823  00FFDC  20                 	db	32
   824  00FFDD  69                 	db	105	;'i'
   825  00FFDE  73                 	db	115	;'s'
   826  00FFDF  20                 	db	32
   827  00FFE0  25                 	db	37
   828  00FFE1  64                 	db	100	;'d'
   829  00FFE2  00                 	db	0
   830  00FFE3                     STR_31:
   831  00FFE3  4F                 	db	79	;'O'
   832  00FFE4  70                 	db	112	;'p'
   833  00FFE5  20                 	db	32
   834  00FFE6  54                 	db	84	;'T'
   835  00FFE7  69                 	db	105	;'i'
   836  00FFE8  6D                 	db	109	;'m'
   837  00FFE9  65                 	db	101	;'e'
   838  00FFEA  3A                 	db	58	;':'
   839  00FFEB  00                 	db	0
   840  00FFEC                     STR_18:
   841  00FFEC  6F                 	db	111	;'o'
   842  00FFED  72                 	db	114	;'r'
   843  00FFEE  20                 	db	32
   844  00FFEF  68                 	db	104	;'h'
   845  00FFF0  65                 	db	101	;'e'
   846  00FFF1  72                 	db	114	;'r'
   847  00FFF2  65                 	db	101	;'e'
   848  00FFF3  00                 	db	0
   849  00FFF4                     STR_6:
   850  00FFF4  73                 	db	115	;'s'
   851  00FFF5  74                 	db	116	;'t'
   852  00FFF6  65                 	db	101	;'e'
   853  00FFF7  70                 	db	112	;'p'
   854  00FFF8  31                 	db	49	;'1'
   855  00FFF9  00                 	db	0
   856  00FFFA                     STR_9:
   857  00FFFA  77                 	db	119	;'w'
   858  00FFFB  68                 	db	104	;'h'
   859  00FFFC  61                 	db	97	;'a'
   860  00FFFD  74                 	db	116	;'t'
   861  00FFFE  00                 	db	0
   862  0000                     
   863                           ; #config settings
   864  00FFFF  00                 	db	0	; dummy byte at the end
   865  0000                     
   866                           	psect	cinit
   867  003AB2                     __pcinit:
   868                           	opt callstack 0
   869  003AB2                     start_initialization:
   870                           	opt callstack 0
   871  003AB2                     __initialization:
   872                           	opt callstack 0
   873                           
   874                           ; Initialize objects allocated to COMRAM (5 bytes)
   875                           ; load TBLPTR registers with __pidataCOMRAM
   876  003AB2  0E6C               	movlw	low __pidataCOMRAM
   877  003AB4  6EF6               	movwf	tblptrl,c
   878  003AB6  0E3F               	movlw	high __pidataCOMRAM
   879  003AB8  6EF7               	movwf	tblptrh,c
   880  003ABA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   881  003ABC  6EF8               	movwf	tblptru,c
   882  003ABE  EE00  F069         	lfsr	0,__pdataCOMRAM
   883  003AC2  EE10 F005          	lfsr	1,5
   884  003AC6                     copy_data0:
   885  003AC6  0009               	tblrd		*+
   886  003AC8  CFF5 FFEE          	movff	tablat,postinc0
   887  003ACC  50E5               	movf	postdec1,w,c
   888  003ACE  50E1               	movf	fsr1l,w,c
   889  003AD0  E1FA               	bnz	copy_data0
   890                           
   891                           ; Clear objects allocated to BANK2 (160 bytes)
   892  003AD2  EE02  F000         	lfsr	0,__pbssBANK2
   893  003AD6  0EA0               	movlw	160
   894  003AD8                     clear_0:
   895  003AD8  6AEE               	clrf	postinc0,c
   896  003ADA  06E8               	decf	wreg,f,c
   897  003ADC  E1FD               	bnz	clear_0
   898                           
   899                           ; Clear objects allocated to BANK1 (28 bytes)
   900  003ADE  EE01  F0D4         	lfsr	0,__pbssBANK1
   901  003AE2  0E1C               	movlw	28
   902  003AE4                     clear_1:
   903  003AE4  6AEE               	clrf	postinc0,c
   904  003AE6  06E8               	decf	wreg,f,c
   905  003AE8  E1FD               	bnz	clear_1
   906                           
   907                           ; Clear objects allocated to BANK0 (1 bytes)
   908  003AEA  0100               	movlb	0
   909  003AEC  6BFF               	clrf	__pbssBANK0& (0+255),b
   910                           
   911                           ; Clear objects allocated to COMRAM (49 bytes)
   912  003AEE  EE00  F038         	lfsr	0,__pbssCOMRAM
   913  003AF2  0E31               	movlw	49
   914  003AF4                     clear_2:
   915  003AF4  6AEE               	clrf	postinc0,c
   916  003AF6  06E8               	decf	wreg,f,c
   917  003AF8  E1FD               	bnz	clear_2
   918  003AFA                     end_of_initialization:
   919                           	opt callstack 0
   920  003AFA                     __end_of__initialization:
   921                           	opt callstack 0
   922  003AFA  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   923  003AFC  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   924  003AFE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   925  003B00  6EF8               	movwf	tblptru,c
   926  003B02  0100               	movlb	0
   927  003B04  EF13  F004         	goto	_main	;jump to C main() function
   928                           
   929                           	psect	bssCOMRAM
   930  000038                     __pbssCOMRAM:
   931                           	opt callstack 0
   932  000038                     _sum:
   933                           	opt callstack 0
   934  000038                     	ds	8
   935  000040                     _sumf:
   936                           	opt callstack 0
   937  000040                     	ds	4
   938  000044                     _avg_dist:
   939                           	opt callstack 0
   940  000044                     	ds	4
   941  000048                     _nout:
   942                           	opt callstack 0
   943  000048                     	ds	2
   944  00004A                     _width:
   945                           	opt callstack 0
   946  00004A                     	ds	2
   947  00004C                     _prec:
   948                           	opt callstack 0
   949  00004C                     	ds	2
   950  00004E                     _flags:
   951                           	opt callstack 0
   952  00004E                     	ds	2
   953  000050                     _meas:
   954                           	opt callstack 0
   955  000050                     	ds	2
   956  000052                     _poles_detected:
   957                           	opt callstack 0
   958  000052                     	ds	2
   959  000054                     _tires_deployed:
   960                           	opt callstack 0
   961  000054                     	ds	2
   962  000056                     _tick:
   963                           	opt callstack 0
   964  000056                     	ds	2
   965  000058                     _sens:
   966                           	opt callstack 0
   967  000058                     	ds	2
   968  00005A                     _b:
   969                           	opt callstack 0
   970  00005A                     	ds	2
   971  00005C                     _timer_count:
   972                           	opt callstack 0
   973  00005C                     	ds	2
   974  00005E                     _data:
   975                           	opt callstack 0
   976  00005E                     	ds	1
   977  00005F                     _keypress:
   978                           	opt callstack 0
   979  00005F                     	ds	1
   980  000060                     _counter:
   981                           	opt callstack 0
   982  000060                     	ds	1
   983  000061                     _a:
   984                           	opt callstack 0
   985  000061                     	ds	8
   986                           
   987                           	psect	dataCOMRAM
   988  000069                     __pdataCOMRAM:
   989                           	opt callstack 0
   990  000069                     _dists:
   991                           	opt callstack 0
   992  000069                     	ds	4
   993  00006D                     _send:
   994                           	opt callstack 0
   995  00006D                     	ds	1
   996                           
   997                           	psect	bssBANK0
   998  0000FF                     __pbssBANK0:
   999                           	opt callstack 0
  1000  0000FF                     _temp:
  1001                           	opt callstack 0
  1002  0000FF                     	ds	1
  1003                           
  1004                           	psect	bssBANK1
  1005  0001D4                     __pbssBANK1:
  1006                           	opt callstack 0
  1007  0001D4                     _prev_dist_final:
  1008                           	opt callstack 0
  1009  0001D4                     	ds	8
  1010  0001DC                     _time:
  1011                           	opt callstack 0
  1012  0001DC                     	ds	7
  1013  0001E3                     _pressed:
  1014                           	opt callstack 0
  1015  0001E3                     	ds	2
  1016  0001E5                     _i:
  1017                           	opt callstack 0
  1018  0001E5                     	ds	2
  1019  0001E7                     _disp:
  1020                           	opt callstack 0
  1021  0001E7                     	ds	2
  1022  0001E9                     _state:
  1023                           	opt callstack 0
  1024  0001E9                     	ds	2
  1025  0001EB                     _temp_int:
  1026                           	opt callstack 0
  1027  0001EB                     	ds	2
  1028  0001ED                     _cnt:
  1029                           	opt callstack 0
  1030  0001ED                     	ds	2
  1031  0001EF                     _key_was_pressed:
  1032                           	opt callstack 0
  1033  0001EF                     	ds	1
  1034                           
  1035                           	psect	bssBANK2
  1036  000200                     __pbssBANK2:
  1037                           	opt callstack 0
  1038  000200                     _Pole:
  1039                           	opt callstack 0
  1040  000200                     	ds	80
  1041  000250                     _dist_final:
  1042                           	opt callstack 0
  1043  000250                     	ds	48
  1044  000280                     _dbuf:
  1045                           	opt callstack 0
  1046  000280                     	ds	32
  1047                           
  1048                           	psect	cstackBANK1
  1049  000100                     __pcstackBANK1:
  1050                           	opt callstack 0
  1051  000100                     ??_ultrasonic_main:
  1052  000100                     ??_number_deploy:
  1053  000100                     ??_UI_main:
  1054  000100                     stepper@stack:
  1055                           	opt callstack 0
  1056  000100                     stepper2@steps2_adj:
  1057                           	opt callstack 0
  1058  000100                     stepper2_back@steps2_adj:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x0
  1062  000100                     	ds	2
  1063  000102                     ??_stepper2:
  1064  000102                     ??_stepper2_back:
  1065  000102                     stepper@t_dep:
  1066                           	opt callstack 0
  1067  000102                     number_deploy@tires_t:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x2
  1071  000102                     	ds	1
  1072  000103                     stepper2_back@direction:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x3
  1076  000103                     	ds	1
  1077  000104                     ??_stepper:
  1078  000104                     stepper2_back@count_stepper:
  1079                           	opt callstack 0
  1080  000104                     ultrasonic_main@sensed:
  1081                           	opt callstack 0
  1082  000104                     number_deploy@tires_detected:
  1083                           	opt callstack 0
  1084  000104                     UI_main@Pole:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 80 bytes @ 0x4
  1088  000104                     	ds	2
  1089  000106                     stepper2_back@i:
  1090                           	opt callstack 0
  1091  000106                     ultrasonic_main@step2_offset:
  1092                           	opt callstack 0
  1093  000106                     number_deploy@t_count:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x6
  1097  000106                     	ds	1
  1098  000107                     stepper2@i:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x7
  1102  000107                     	ds	1
  1103  000108                     stepper@count_stepper:
  1104                           	opt callstack 0
  1105  000108                     ultrasonic_main@steps2_adj:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x8
  1109  000108                     	ds	1
  1110  000109                     stepper2@i_489:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x9
  1114  000109                     	ds	1
  1115  00010A                     stepper@i:
  1116                           	opt callstack 0
  1117  00010A                     ultrasonic_main@min_us_dist_968:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 2 bytes @ 0xA
  1121  00010A                     	ds	1
  1122  00010B                     stepper2@count_stepper:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 2 bytes @ 0xB
  1126  00010B                     	ds	1
  1127  00010C                     stepper@i_479:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 2 bytes @ 0xC
  1131  00010C                     	ds	1
  1132  00010D                     stepper2@direction:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 1 bytes @ 0xD
  1136  00010D                     	ds	1
  1137  00010E                     stepper@i_480:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0xE
  1141  00010E                     	ds	2
  1142  000110                     stepper@i_481:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x10
  1146  000110                     	ds	2
  1147  000112                     actuators_main@stack:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x12
  1151  000112                     	ds	2
  1152  000114                     actuators_main@steps2_adj:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x14
  1156  000114                     	ds	2
  1157  000116                     actuators_main@t_dep:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x16
  1161  000116                     	ds	2
  1162  000118                     ??_actuators_main:
  1163                           
  1164                           ; 1 bytes @ 0x18
  1165  000118                     	ds	2
  1166  00011A                     actuators_main@act_cnt:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x1A
  1170  00011A                     	ds	58
  1171  000154                     UI_main@keypress:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x54
  1175  000154                     	ds	1
  1176  000155                     UI_main@tick:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x55
  1180  000155                     	ds	4
  1181  000159                     UI_main@i:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x59
  1185  000159                     	ds	1
  1186  00015A                     ??_main:
  1187                           
  1188                           ; 1 bytes @ 0x5A
  1189  00015A                     	ds	6
  1190  000160                     main@pole_cl_dist:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x60
  1194  000160                     	ds	2
  1195  000162                     main@Pole:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 80 bytes @ 0x62
  1199  000162                     	ds	80
  1200  0001B2                     main@i:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0xB2
  1204  0001B2                     	ds	2
  1205  0001B4                     main@i_1081:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 2 bytes @ 0xB4
  1209  0001B4                     	ds	2
  1210  0001B6                     _main$1071:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 1 bytes @ 0xB6
  1214  0001B6                     	ds	1
  1215  0001B7                     _main$1072:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 1 bytes @ 0xB7
  1219  0001B7                     	ds	1
  1220  0001B8                     main@act_done:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 1 bytes @ 0xB8
  1224  0001B8                     	ds	1
  1225  0001B9                     main@arduino_stopped:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 1 bytes @ 0xB9
  1229  0001B9                     	ds	1
  1230  0001BA                     main@stack:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0xBA
  1234  0001BA                     	ds	2
  1235  0001BC                     main@data_g:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0xBC
  1239  0001BC                     	ds	2
  1240  0001BE                     main@steps2_adj:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 2 bytes @ 0xBE
  1244  0001BE                     	ds	2
  1245  0001C0                     main@k:
  1246                           	opt callstack 0
  1247                           
  1248                           ; 2 bytes @ 0xC0
  1249  0001C0                     	ds	2
  1250  0001C2                     main@t_count:
  1251                           	opt callstack 0
  1252                           
  1253                           ; 2 bytes @ 0xC2
  1254  0001C2                     	ds	2
  1255  0001C4                     main@t_dep:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 2 bytes @ 0xC4
  1259  0001C4                     	ds	2
  1260  0001C6                     main@i_1087:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 2 bytes @ 0xC6
  1264  0001C6                     	ds	2
  1265  0001C8                     main@poles_detected:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 2 bytes @ 0xC8
  1269  0001C8                     	ds	2
  1270  0001CA                     main@data:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 6 bytes @ 0xCA
  1274  0001CA                     	ds	6
  1275  0001D0                     main@prev_avg_dist:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 4 bytes @ 0xD0
  1279  0001D0                     	ds	4
  1280                           
  1281                           	psect	cstackBANK0
  1282  000080                     __pcstackBANK0:
  1283                           	opt callstack 0
  1284  000080                     ??_I2C_Master_Wait:
  1285  000080                     ??_trig:
  1286  000080                     ?_strlen:
  1287                           	opt callstack 0
  1288  000080                     ?_isupper:
  1289                           	opt callstack 0
  1290  000080                     ?_isalpha:
  1291                           	opt callstack 0
  1292  000080                     ?_isdigit:
  1293                           	opt callstack 0
  1294  000080                     ?_isspace:
  1295                           	opt callstack 0
  1296  000080                     ?_islower:
  1297                           	opt callstack 0
  1298  000080                     ?_min:
  1299                           	opt callstack 0
  1300  000080                     ?___wmul:
  1301                           	opt callstack 0
  1302  000080                     ?___awdiv:
  1303                           	opt callstack 0
  1304  000080                     ?___lldiv:
  1305                           	opt callstack 0
  1306  000080                     ?___llmod:
  1307                           	opt callstack 0
  1308  000080                     ?___aodiv:
  1309                           	opt callstack 0
  1310  000080                     ?___aomod:
  1311                           	opt callstack 0
  1312  000080                     pulse_e@interruptState:
  1313                           	opt callstack 0
  1314  000080                     servoRotate0@servo:
  1315                           	opt callstack 0
  1316  000080                     servoRotate180@servo:
  1317                           	opt callstack 0
  1318  000080                     min@array:
  1319                           	opt callstack 0
  1320  000080                     ___wmul@multiplier:
  1321                           	opt callstack 0
  1322  000080                     ___awdiv@dividend:
  1323                           	opt callstack 0
  1324  000080                     isalpha@c:
  1325                           	opt callstack 0
  1326  000080                     isdigit@c:
  1327                           	opt callstack 0
  1328  000080                     isspace@c:
  1329                           	opt callstack 0
  1330  000080                     isupper@c:
  1331                           	opt callstack 0
  1332  000080                     strlen@s:
  1333                           	opt callstack 0
  1334  000080                     islower@c:
  1335                           	opt callstack 0
  1336  000080                     ___lldiv@dividend:
  1337                           	opt callstack 0
  1338  000080                     ___llmod@dividend:
  1339                           	opt callstack 0
  1340  000080                     ___aodiv@dividend:
  1341                           	opt callstack 0
  1342  000080                     ___aomod@dividend:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 8 bytes @ 0x0
  1346  000080                     	ds	1
  1347  000081                     I2C_Master_Read@ackBit:
  1348                           	opt callstack 0
  1349  000081                     send_nibble@data:
  1350                           	opt callstack 0
  1351  000081                     I2C_Master_Write@byteToWrite:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x1
  1355  000081                     	ds	1
  1356  000082                     ??_isupper:
  1357  000082                     ??_isalpha:
  1358  000082                     ??_isdigit:
  1359  000082                     ??_isspace:
  1360  000082                     ??_islower:
  1361  000082                     ??_servoRotate0:
  1362  000082                     ??_servoRotate180:
  1363  000082                     I2C_Master_Read@receivedByte:
  1364                           	opt callstack 0
  1365  000082                     send_byte@data:
  1366                           	opt callstack 0
  1367  000082                     min@size:
  1368                           	opt callstack 0
  1369  000082                     ___wmul@multiplicand:
  1370                           	opt callstack 0
  1371  000082                     ___awdiv@divisor:
  1372                           	opt callstack 0
  1373  000082                     strlen@a:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x2
  1377  000082                     	ds	1
  1378  000083                     lcdInst@data:
  1379                           	opt callstack 0
  1380  000083                     putch@data:
  1381                           	opt callstack 0
  1382  000083                     servoRotate0@i:
  1383                           	opt callstack 0
  1384  000083                     servoRotate180@i:
  1385                           	opt callstack 0
  1386                           
  1387                           ; 2 bytes @ 0x3
  1388  000083                     	ds	1
  1389  000084                     ??_initLCD:
  1390  000084                     ??_min:
  1391  000084                     ___awdiv@counter:
  1392                           	opt callstack 0
  1393  000084                     ___wmul@product:
  1394                           	opt callstack 0
  1395  000084                     fputc@c:
  1396                           	opt callstack 0
  1397  000084                     ___lldiv@divisor:
  1398                           	opt callstack 0
  1399  000084                     ___llmod@divisor:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 4 bytes @ 0x4
  1403  000084                     	ds	1
  1404  000085                     ??_servo:
  1405  000085                     ___awdiv@sign:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 1 bytes @ 0x5
  1409  000085                     	ds	1
  1410  000086                     ?_toupper:
  1411                           	opt callstack 0
  1412  000086                     _isspace$1743:
  1413                           	opt callstack 0
  1414  000086                     ___awdiv@quotient:
  1415                           	opt callstack 0
  1416  000086                     fputc@fp:
  1417                           	opt callstack 0
  1418  000086                     toupper@c:
  1419                           	opt callstack 0
  1420                           
  1421                           ; 2 bytes @ 0x6
  1422  000086                     	ds	1
  1423  000087                     ?_atoi:
  1424                           	opt callstack 0
  1425  000087                     min@minimum:
  1426                           	opt callstack 0
  1427  000087                     atoi@s:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0x7
  1431  000087                     	ds	1
  1432  000088                     ??_fputc:
  1433  000088                     ??_toupper:
  1434  000088                     ___llmod@counter:
  1435                           	opt callstack 0
  1436  000088                     ___lldiv@quotient:
  1437                           	opt callstack 0
  1438  000088                     ___aodiv@divisor:
  1439                           	opt callstack 0
  1440  000088                     ___aomod@divisor:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 8 bytes @ 0x8
  1444  000088                     	ds	1
  1445  000089                     ??_atoi:
  1446  000089                     min@i:
  1447                           	opt callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x9
  1450  000089                     	ds	3
  1451  00008C                     ___lldiv@counter:
  1452                           	opt callstack 0
  1453  00008C                     _toupper$1808:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 2 bytes @ 0xC
  1457  00008C                     	ds	1
  1458  00008D                     atoi@neg:
  1459                           	opt callstack 0
  1460  00008D                     fputs@s:
  1461                           	opt callstack 0
  1462  00008D                     I2C_Master_Init@clockFreq:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 4 bytes @ 0xD
  1466  00008D                     	ds	2
  1467  00008F                     _atoi$1716:
  1468                           	opt callstack 0
  1469  00008F                     fputs@fp:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 2 bytes @ 0xF
  1473  00008F                     	ds	1
  1474  000090                     ___aodiv@counter:
  1475                           	opt callstack 0
  1476  000090                     ___aomod@counter:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x10
  1480  000090                     	ds	1
  1481  000091                     ??_I2C_Master_Init:
  1482  000091                     ___aodiv@sign:
  1483                           	opt callstack 0
  1484  000091                     ___aomod@sign:
  1485                           	opt callstack 0
  1486  000091                     fputs@c:
  1487                           	opt callstack 0
  1488  000091                     _atoi$1718:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x11
  1492  000091                     	ds	1
  1493  000092                     ?_abs:
  1494                           	opt callstack 0
  1495  000092                     abs@a:
  1496                           	opt callstack 0
  1497  000092                     fputs@i:
  1498                           	opt callstack 0
  1499  000092                     ___aodiv@quotient:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 8 bytes @ 0x12
  1503  000092                     	ds	1
  1504  000093                     _atoi$1717:
  1505                           	opt callstack 0
  1506                           
  1507                           ; 1 bytes @ 0x13
  1508  000093                     	ds	1
  1509  000094                     ??_abs:
  1510  000094                     ?_pad:
  1511                           	opt callstack 0
  1512  000094                     pad@fp:
  1513                           	opt callstack 0
  1514  000094                     atoi@n:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x14
  1518  000094                     	ds	1
  1519  000095                     
  1520                           ; 1 bytes @ 0x15
  1521  000095                     	ds	1
  1522  000096                     pad@buf:
  1523                           	opt callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x16
  1526  000096                     	ds	2
  1527  000098                     pad@p:
  1528                           	opt callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x18
  1531  000098                     	ds	2
  1532  00009A                     ??_pad:
  1533                           
  1534                           ; 1 bytes @ 0x1A
  1535  00009A                     	ds	1
  1536  00009B                     pad@i:
  1537                           	opt callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x1B
  1540  00009B                     	ds	2
  1541  00009D                     pad@w:
  1542                           	opt callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x1D
  1545  00009D                     	ds	2
  1546  00009F                     ?_dtoa:
  1547                           	opt callstack 0
  1548  00009F                     ?_xtoa:
  1549                           	opt callstack 0
  1550  00009F                     dtoa@fp:
  1551                           	opt callstack 0
  1552  00009F                     xtoa@fp:
  1553                           	opt callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x1F
  1556  00009F                     	ds	2
  1557  0000A1                     dtoa@d:
  1558                           	opt callstack 0
  1559  0000A1                     xtoa@d:
  1560                           	opt callstack 0
  1561                           
  1562                           ; 8 bytes @ 0x21
  1563  0000A1                     	ds	8
  1564  0000A9                     ??_dtoa:
  1565  0000A9                     xtoa@x:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 1 bytes @ 0x29
  1569  0000A9                     	ds	1
  1570  0000AA                     ??_xtoa:
  1571                           
  1572                           ; 1 bytes @ 0x2A
  1573  0000AA                     	ds	7
  1574  0000B1                     _dtoa$1232:
  1575                           	opt callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x31
  1578  0000B1                     	ds	1
  1579  0000B2                     _xtoa$1243:
  1580                           	opt callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x32
  1583  0000B2                     	ds	1
  1584  0000B3                     dtoa@p:
  1585                           	opt callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x33
  1588  0000B3                     	ds	1
  1589  0000B4                     _xtoa$1244:
  1590                           	opt callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x34
  1593  0000B4                     	ds	1
  1594  0000B5                     dtoa@w:
  1595                           	opt callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x35
  1598  0000B5                     	ds	1
  1599  0000B6                     xtoa@p:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x36
  1603  0000B6                     	ds	1
  1604  0000B7                     dtoa@s:
  1605                           	opt callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x37
  1608  0000B7                     	ds	1
  1609  0000B8                     xtoa@w:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x38
  1613  0000B8                     	ds	1
  1614  0000B9                     dtoa@n:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 8 bytes @ 0x39
  1618  0000B9                     	ds	1
  1619  0000BA                     xtoa@n:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 8 bytes @ 0x3A
  1623  0000BA                     	ds	7
  1624  0000C1                     dtoa@i:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x41
  1628  0000C1                     	ds	1
  1629  0000C2                     xtoa@i:
  1630                           	opt callstack 0
  1631                           
  1632                           ; 2 bytes @ 0x42
  1633  0000C2                     	ds	2
  1634  0000C4                     xtoa@c:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 2 bytes @ 0x44
  1638  0000C4                     	ds	2
  1639  0000C6                     ?_vfpfcnvrt:
  1640                           	opt callstack 0
  1641  0000C6                     vfpfcnvrt@fp:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x46
  1645  0000C6                     	ds	2
  1646  0000C8                     vfpfcnvrt@fmt:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x48
  1650  0000C8                     	ds	2
  1651  0000CA                     vfpfcnvrt@ap:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x4A
  1655  0000CA                     	ds	2
  1656  0000CC                     ??_vfpfcnvrt:
  1657                           
  1658                           ; 1 bytes @ 0x4C
  1659  0000CC                     	ds	4
  1660  0000D0                     vfpfcnvrt@ll:
  1661                           	opt callstack 0
  1662                           
  1663                           ; 8 bytes @ 0x50
  1664  0000D0                     	ds	8
  1665  0000D8                     vfpfcnvrt@llu:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 8 bytes @ 0x58
  1669  0000D8                     	ds	8
  1670  0000E0                     vfpfcnvrt@c:
  1671                           	opt callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x60
  1674  0000E0                     	ds	1
  1675  0000E1                     vfpfcnvrt@done:
  1676                           	opt callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x61
  1679  0000E1                     	ds	2
  1680  0000E3                     _vfpfcnvrt$1258:
  1681                           	opt callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x63
  1684  0000E3                     	ds	2
  1685  0000E5                     ?_vfprintf:
  1686                           	opt callstack 0
  1687  0000E5                     vfprintf@fp:
  1688                           	opt callstack 0
  1689                           
  1690                           ; 2 bytes @ 0x65
  1691  0000E5                     	ds	2
  1692  0000E7                     vfprintf@fmt:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x67
  1696  0000E7                     	ds	2
  1697  0000E9                     vfprintf@ap:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 2 bytes @ 0x69
  1701  0000E9                     	ds	2
  1702  0000EB                     vfprintf@cfmt:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 2 bytes @ 0x6B
  1706  0000EB                     	ds	2
  1707  0000ED                     ?_printf:
  1708                           	opt callstack 0
  1709  0000ED                     printf@fmt:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x6D
  1713  0000ED                     	ds	10
  1714  0000F7                     
  1715                           ; 1 bytes @ 0x77
  1716  0000F7                     	ds	2
  1717  0000F9                     printf@ap:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x79
  1721  0000F9                     	ds	2
  1722  0000FB                     ??_brake:
  1723  0000FB                     ??_print_echo:
  1724  0000FB                     ?_number_deploy:
  1725                           	opt callstack 0
  1726  0000FB                     full_drive@stepper_no:
  1727                           	opt callstack 0
  1728  0000FB                     number_deploy@avg_dist:
  1729                           	opt callstack 0
  1730  0000FB                     UI_main@t_dep:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x7B
  1734  0000FB                     	ds	1
  1735  0000FC                     ?_ultrasonic_main:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x7C
  1739  0000FC                     	ds	1
  1740  0000FD                     ??_full_drive:
  1741  0000FD                     number_deploy@poles_detected:
  1742                           	opt callstack 0
  1743  0000FD                     UI_main@poles_detected:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 2 bytes @ 0x7D
  1747  0000FD                     	ds	1
  1748  0000FE                     full_drive@direction:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x7E
  1752  0000FE                     	ds	1
  1753                           
  1754                           	psect	cstackCOMRAM
  1755  000001                     __pcstackCOMRAM:
  1756                           	opt callstack 0
  1757  000001                     ?i2___awdiv:
  1758                           	opt callstack 0
  1759  000001                     ?___xxtofl:
  1760                           	opt callstack 0
  1761  000001                     i2___awdiv@dividend:
  1762                           	opt callstack 0
  1763  000001                     ___xxtofl@val:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 4 bytes @ 0x0
  1767  000001                     	ds	2
  1768  000003                     i2___awdiv@divisor:
  1769                           	opt callstack 0
  1770                           
  1771                           ; 2 bytes @ 0x2
  1772  000003                     	ds	2
  1773  000005                     ??___xxtofl:
  1774  000005                     i2___awdiv@counter:
  1775                           	opt callstack 0
  1776                           
  1777                           ; 1 bytes @ 0x4
  1778  000005                     	ds	1
  1779  000006                     i2___awdiv@sign:
  1780                           	opt callstack 0
  1781                           
  1782                           ; 1 bytes @ 0x5
  1783  000006                     	ds	1
  1784  000007                     i2___awdiv@quotient:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x6
  1788  000007                     	ds	2
  1789  000009                     ___xxtofl@sign:
  1790                           	opt callstack 0
  1791                           
  1792                           ; 1 bytes @ 0x8
  1793  000009                     	ds	1
  1794  00000A                     ___xxtofl@exp:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 1 bytes @ 0x9
  1798  00000A                     	ds	1
  1799  00000B                     ___xxtofl@arg:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 4 bytes @ 0xA
  1803  00000B                     	ds	4
  1804  00000F                     ?___fldiv:
  1805                           	opt callstack 0
  1806  00000F                     ___fldiv@b:
  1807                           	opt callstack 0
  1808                           
  1809                           ; 4 bytes @ 0xE
  1810  00000F                     	ds	4
  1811  000013                     ___fldiv@a:
  1812                           	opt callstack 0
  1813                           
  1814                           ; 4 bytes @ 0x12
  1815  000013                     	ds	4
  1816  000017                     ??___fldiv:
  1817                           
  1818                           ; 1 bytes @ 0x16
  1819  000017                     	ds	4
  1820  00001B                     ___fldiv@rem:
  1821                           	opt callstack 0
  1822                           
  1823                           ; 4 bytes @ 0x1A
  1824  00001B                     	ds	4
  1825  00001F                     ___fldiv@sign:
  1826                           	opt callstack 0
  1827                           
  1828                           ; 1 bytes @ 0x1E
  1829  00001F                     	ds	1
  1830  000020                     ___fldiv@new_exp:
  1831                           	opt callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x1F
  1834  000020                     	ds	2
  1835  000022                     ___fldiv@grs:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 4 bytes @ 0x21
  1839  000022                     	ds	4
  1840  000026                     ___fldiv@bexp:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 1 bytes @ 0x25
  1844  000026                     	ds	1
  1845  000027                     ___fldiv@aexp:
  1846                           	opt callstack 0
  1847                           
  1848                           ; 1 bytes @ 0x26
  1849  000027                     	ds	1
  1850  000028                     ?___fltol:
  1851                           	opt callstack 0
  1852  000028                     ___fltol@f1:
  1853                           	opt callstack 0
  1854                           
  1855                           ; 4 bytes @ 0x27
  1856  000028                     	ds	4
  1857  00002C                     ??___fltol:
  1858                           
  1859                           ; 1 bytes @ 0x2B
  1860  00002C                     	ds	4
  1861  000030                     ___fltol@sign1:
  1862                           	opt callstack 0
  1863                           
  1864                           ; 1 bytes @ 0x2F
  1865  000030                     	ds	1
  1866  000031                     ___fltol@exp1:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 1 bytes @ 0x30
  1870  000031                     	ds	1
  1871  000032                     ??_echo:
  1872                           
  1873                           ; 1 bytes @ 0x31
  1874  000032                     	ds	4
  1875  000036                     ??_ISR:
  1876                           
  1877                           ; 1 bytes @ 0x35
  1878  000036                     	ds	2
  1879                           
  1880 ;;
  1881 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1882 ;;
  1883 ;; *************** function _main *****************
  1884 ;; Defined at:
  1885 ;;		line 717 in file "main.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  k               2  192[BANK1 ] int 
  1890 ;;  i               2  180[BANK1 ] int 
  1891 ;;  i               2  178[BANK1 ] int 
  1892 ;;  i               2  198[BANK1 ] int 
  1893 ;;  pole_cl_dist    2   96[BANK1 ] int 
  1894 ;;  Pole           80   98[BANK1 ] struct Poles[10]
  1895 ;;  data            6  202[BANK1 ] volatile int [3]
  1896 ;;  prev_avg_dis    4  208[BANK1 ] volatile long 
  1897 ;;  poles_detect    2  200[BANK1 ] int 
  1898 ;;  t_dep           2  196[BANK1 ] int 
  1899 ;;  t_count         2  194[BANK1 ] int 
  1900 ;;  steps2_adj      2  190[BANK1 ] int 
  1901 ;;  data_g          2  188[BANK1 ] unsigned int 
  1902 ;;  stack           2  186[BANK1 ] int 
  1903 ;;  read            2    0        int 
  1904 ;;  arduino_stop    1  185[BANK1 ] _Bool 
  1905 ;;  act_done        1  184[BANK1 ] _Bool 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Locals:         0       0     118       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Totals:         0       0     122       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;Total ram usage:      122 bytes
  1920 ;; Hardware stack levels required when called:   17
  1921 ;; This function calls:
  1922 ;;		_I2C_Master_Read
  1923 ;;		_I2C_Master_RepeatedStart
  1924 ;;		_I2C_Master_Stop
  1925 ;;		_I2C_Master_Write
  1926 ;;		_UI_main
  1927 ;;		___wmul
  1928 ;;		_actuators_main
  1929 ;;		_backwards
  1930 ;;		_brake
  1931 ;;		_initLCD
  1932 ;;		_lcdInst
  1933 ;;		_number_deploy
  1934 ;;		_printf
  1935 ;;		_start
  1936 ;;		_ultrasonic_main
  1937 ;; This function is called by:
  1938 ;;		Startup code after reset
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text0
  1943  000826                     __ptext0:
  1944                           	opt callstack 0
  1945  000826                     _main:
  1946                           	opt callstack 14
  1947                           
  1948                           ;main.c: 719:     int t_dep=0;
  1949                           
  1950                           ;incstack = 0
  1951  000826  0E00               	movlw	0
  1952  000828  0101               	movlb	1	; () banked
  1953  00082A  6FC5               	movwf	(main@t_dep+1)& (0+255),b
  1954  00082C  0E00               	movlw	0
  1955  00082E  6FC4               	movwf	main@t_dep& (0+255),b
  1956                           
  1957                           ;main.c: 720:     int t_count;;main.c: 721:  TRISD = 0x00;
  1958  000830  0E00               	movlw	0
  1959  000832  6E95               	movwf	3989,c	;volatile
  1960                           
  1961                           ; BSR set to: 1
  1962                           ;main.c: 722:  GIE = 1;
  1963  000834  8EF2               	bsf	4082,7,c	;volatile
  1964                           
  1965                           ;main.c: 723:     int steps2_adj =0;
  1966  000836  0E00               	movlw	0
  1967  000838  6FBF               	movwf	(main@steps2_adj+1)& (0+255),b
  1968  00083A  0E00               	movlw	0
  1969  00083C  6FBE               	movwf	main@steps2_adj& (0+255),b
  1970                           
  1971                           ;main.c: 724:     ADCON1=0x0F;
  1972  00083E  0E0F               	movlw	15
  1973  000840  6EC1               	movwf	4033,c	;volatile
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main.c: 726:  initLCD();
  1977  000842  EC86  F01C         	call	_initLCD	;wreg free
  1978                           
  1979                           ;main.c: 728:  T1CON = 0x10;
  1980  000846  0E10               	movlw	16
  1981  000848  6ECD               	movwf	4045,c	;volatile
  1982                           
  1983                           ;main.c: 729:     int poles_detected=0;
  1984  00084A  0E00               	movlw	0
  1985  00084C  0101               	movlb	1	; () banked
  1986  00084E  6FC9               	movwf	(main@poles_detected+1)& (0+255),b
  1987  000850  0E00               	movlw	0
  1988  000852  6FC8               	movwf	main@poles_detected& (0+255),b
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main.c: 731:     volatile long prev_avg_dist=0;
  1992                           
  1993                           ; BSR set to: 1
  1994  000854  0E00               	movlw	0
  1995  000856  6FD0               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1996  000858  0E00               	movlw	0
  1997  00085A  6FD1               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1998  00085C  0E00               	movlw	0
  1999  00085E  6FD2               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  2000  000860  0E00               	movlw	0
  2001  000862  6FD3               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  2002                           
  2003                           ; BSR set to: 1
  2004                           ;main.c: 732:     volatile int data[3];;main.c: 733:     unsigned int data_g;;main.c: 73
      +                          4:     TRISAbits.RA4 = 0;
  2005  000864  9892               	bcf	3986,4,c	;volatile
  2006                           
  2007                           ; BSR set to: 1
  2008                           ;main.c: 735:     PORTAbits.RA4 = LATAbits.LATA4;
  2009  000866  A889               	btfss	3977,4,c	;volatile
  2010  000868  D002               	bra	u9155
  2011  00086A  8880               	bsf	3968,4,c	;volatile
  2012  00086C  D001               	bra	u9157
  2013  00086E                     u9155:
  2014  00086E  9880               	bcf	3968,4,c	;volatile
  2015  000870                     u9157:
  2016                           
  2017                           ;main.c: 738:     _Bool arduino_stopped = 0;
  2018  000870  0E00               	movlw	0
  2019  000872  0101               	movlb	1	; () banked
  2020  000874  6FB9               	movwf	main@arduino_stopped& (0+255),b
  2021                           
  2022                           ; BSR set to: 1
  2023                           ;main.c: 740:     Poles Pole[10];;main.c: 748:     if (~sens){
  2024  000876  2858               	incf	_sens,w,c	;volatile
  2025  000878  E103               	bnz	u9160
  2026  00087A  2859               	incf	_sens+1,w,c	;volatile
  2027  00087C  B4D8               	btfsc	status,2,c
  2028  00087E  D00E               	goto	l8431
  2029  000880                     u9160:
  2030                           
  2031                           ; BSR set to: 1
  2032                           ;main.c: 749:         TRISBbits.RB0 = 0;
  2033  000880  9093               	bcf	3987,0,c	;volatile
  2034                           
  2035                           ;main.c: 750:         LATBbits.LATB0 = 0;
  2036  000882  908A               	bcf	3978,0,c	;volatile
  2037                           
  2038                           ;main.c: 752:         TRISB = 0b11111111;
  2039  000884  6893               	setf	3987,c	;volatile
  2040                           
  2041                           ; BSR set to: 1
  2042                           ;main.c: 753:         UI_main( t_dep, poles_detected);
  2043  000886  0E00               	movlw	0
  2044  000888  0100               	movlb	0	; () banked
  2045  00088A  6FFC               	movwf	(UI_main@t_dep+1)& (0+255),b
  2046  00088C  0E00               	movlw	0
  2047  00088E  6FFB               	movwf	UI_main@t_dep& (0+255),b
  2048  000890  0E00               	movlw	0
  2049  000892  6FFE               	movwf	(UI_main@poles_detected+1)& (0+255),b
  2050  000894  0E00               	movlw	0
  2051  000896  6FFD               	movwf	UI_main@poles_detected& (0+255),b
  2052  000898  EC09  F000         	call	_UI_main	;wreg free
  2053  00089C                     l8431:
  2054                           
  2055                           ;main.c: 756:         PORTAbits.RA4 = LATAbits.LATA4;
  2056  00089C  A889               	btfss	3977,4,c	;volatile
  2057  00089E  D002               	bra	u9175
  2058  0008A0  8880               	bsf	3968,4,c	;volatile
  2059  0008A2  D001               	bra	u9177
  2060  0008A4                     u9175:
  2061  0008A4  9880               	bcf	3968,4,c	;volatile
  2062  0008A6                     u9177:
  2063                           
  2064                           ;main.c: 763:         if ((poles_detected <2)&&((Pole[poles_detected].dist_from_start )<
      +                          4000)){
  2065  0008A6  0101               	movlb	1	; () banked
  2066  0008A8  BFC9               	btfsc	(main@poles_detected+1)& (0+255),7,b
  2067  0008AA  D006               	goto	u9180
  2068  0008AC  51C9               	movf	(main@poles_detected+1)& (0+255),w,b
  2069  0008AE  E103               	bnz	u9181
  2070  0008B0  0E02               	movlw	2
  2071  0008B2  5DC8               	subwf	main@poles_detected& (0+255),w,b
  2072  0008B4  B0D8               	btfsc	status,0,c
  2073  0008B6                     u9181:
  2074  0008B6  D2C9               	goto	l8603
  2075  0008B8                     u9180:
  2076                           
  2077                           ; BSR set to: 1
  2078  0008B8  C1C8  F15A         	movff	main@poles_detected,??_main
  2079  0008BC  C1C9  F15B         	movff	main@poles_detected+1,??_main+1
  2080  0008C0  90D8               	bcf	status,0,c
  2081  0008C2  375A               	rlcf	??_main& (0+255),f,b
  2082  0008C4  375B               	rlcf	(??_main+1)& (0+255),f,b
  2083  0008C6  90D8               	bcf	status,0,c
  2084  0008C8  375A               	rlcf	??_main& (0+255),f,b
  2085  0008CA  375B               	rlcf	(??_main+1)& (0+255),f,b
  2086  0008CC  90D8               	bcf	status,0,c
  2087  0008CE  375A               	rlcf	??_main& (0+255),f,b
  2088  0008D0  375B               	rlcf	(??_main+1)& (0+255),f,b
  2089  0008D2  0E04               	movlw	4
  2090  0008D4  275A               	addwf	??_main& (0+255),f,b
  2091  0008D6  0E00               	movlw	0
  2092  0008D8  235B               	addwfc	(??_main+1)& (0+255),f,b
  2093  0008DA  0E62               	movlw	low main@Pole
  2094  0008DC  255A               	addwf	??_main& (0+255),w,b
  2095  0008DE  6ED9               	movwf	fsr2l,c
  2096  0008E0  0E01               	movlw	high main@Pole
  2097  0008E2  215B               	addwfc	(??_main+1)& (0+255),w,b
  2098  0008E4  6EDA               	movwf	fsr2h,c
  2099  0008E6  0E01               	movlw	1
  2100  0008E8  BEDB               	btfsc	plusw2,7,c
  2101  0008EA  D0DA               	goto	l8507
  2102  0008EC  0EA0               	movlw	160
  2103  0008EE  5CDE               	subwf	postinc2,w,c
  2104  0008F0  0E0F               	movlw	15
  2105  0008F2  58DE               	subwfb	postinc2,w,c
  2106  0008F4  A0D8               	btfss	status,0,c
  2107  0008F6  D0D4               	goto	l8507
  2108  0008F8  D2A8               	goto	l8603
  2109  0008FA                     l8439:
  2110                           
  2111                           ;main.c: 774:                 t_count = 5;
  2112  0008FA  0E00               	movlw	0
  2113  0008FC  0101               	movlb	1	; () banked
  2114  0008FE  6FC3               	movwf	(main@t_count+1)& (0+255),b
  2115  000900  0E05               	movlw	5
  2116  000902  6FC2               	movwf	main@t_count& (0+255),b
  2117                           
  2118                           ; BSR set to: 1
  2119                           ;main.c: 775:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2120  000904  0E01               	movlw	1
  2121  000906  EC9D  F01F         	call	_lcdInst
  2122  00090A  0E11               	movlw	17
  2123  00090C  0101               	movlb	1	; () banked
  2124  00090E  6F5A               	movwf	??_main& (0+255),b
  2125  000910  0E3A               	movlw	58
  2126  000912                     u9367:
  2127  000912  2EE8               	decfsz	wreg,f,c
  2128  000914  D7FE               	bra	u9367
  2129  000916  2F5A               	decfsz	??_main& (0+255),f,b
  2130  000918  D7FC               	bra	u9367
  2131  00091A  F000               	nop	
  2132                           
  2133                           ;main.c: 776:                     printf("waiting");
  2134  00091C  0E02               	movlw	low (STR_54+5)
  2135  00091E  0100               	movlb	0	; () banked
  2136  000920  6FED               	movwf	printf@fmt& (0+255),b
  2137  000922  0EFF               	movlw	high (STR_54+5)
  2138  000924  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2139  000926  EC37  F01F         	call	_printf	;wreg free
  2140                           
  2141                           ;main.c: 778:                     if (!PORTAbits.RA4){
  2142  00092A  B880               	btfsc	3968,4,c	;volatile
  2143  00092C  D013               	goto	l8455
  2144                           
  2145                           ;main.c: 779:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2146  00092E  0E01               	movlw	1
  2147  000930  EC9D  F01F         	call	_lcdInst
  2148  000934  0E11               	movlw	17
  2149  000936  0101               	movlb	1	; () banked
  2150  000938  6F5A               	movwf	??_main& (0+255),b
  2151  00093A  0E3A               	movlw	58
  2152  00093C                     u9377:
  2153  00093C  2EE8               	decfsz	wreg,f,c
  2154  00093E  D7FE               	bra	u9377
  2155  000940  2F5A               	decfsz	??_main& (0+255),f,b
  2156  000942  D7FC               	bra	u9377
  2157  000944  F000               	nop	
  2158                           
  2159                           ;main.c: 780:                         printf("more waiting");
  2160  000946  0EFD               	movlw	low STR_54
  2161  000948  0100               	movlb	0	; () banked
  2162  00094A  6FED               	movwf	printf@fmt& (0+255),b
  2163  00094C  0EFE               	movlw	high STR_54
  2164  00094E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2165  000950  EC37  F01F         	call	_printf	;wreg free
  2166  000954                     l8455:
  2167                           
  2168                           ;main.c: 782:                     if (PORTAbits.RA4){
  2169  000954  A880               	btfss	3968,4,c	;volatile
  2170  000956  D05E               	goto	l8489
  2171                           
  2172                           ;main.c: 785:                         I2C_Master_RepeatedStart();
  2173  000958  ECB2  F01F         	call	_I2C_Master_RepeatedStart	;wreg free
  2174                           
  2175                           ;main.c: 786:                         I2C_Master_Write(0b00010001);
  2176  00095C  0E00               	movlw	0
  2177  00095E  0100               	movlb	0	; () banked
  2178  000960  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2179  000962  0E11               	movlw	17
  2180  000964  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2181  000966  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  2182                           
  2183                           ;main.c: 787:                         data[0] = I2C_Master_Read(0);
  2184  00096A  0E00               	movlw	0
  2185  00096C  EC22  F01F         	call	_I2C_Master_Read
  2186  000970  0101               	movlb	1	; () banked
  2187  000972  6F5A               	movwf	??_main& (0+255),b
  2188  000974  515A               	movf	??_main& (0+255),w,b
  2189  000976  6FCA               	movwf	main@data& (0+255),b	;volatile
  2190  000978  6BCB               	clrf	(main@data+1)& (0+255),b	;volatile
  2191                           
  2192                           ;main.c: 788:                         data[1] = I2C_Master_Read(0);
  2193  00097A  0E00               	movlw	0
  2194  00097C  EC22  F01F         	call	_I2C_Master_Read
  2195  000980  0101               	movlb	1	; () banked
  2196  000982  6F5A               	movwf	??_main& (0+255),b
  2197  000984  515A               	movf	??_main& (0+255),w,b
  2198  000986  6FCC               	movwf	(main@data+2)& (0+255),b	;volatile
  2199  000988  6BCD               	clrf	(main@data+3)& (0+255),b	;volatile
  2200                           
  2201                           ;main.c: 789:                         data[2] = I2C_Master_Read(1);
  2202  00098A  0E01               	movlw	1
  2203  00098C  EC22  F01F         	call	_I2C_Master_Read
  2204  000990  0101               	movlb	1	; () banked
  2205  000992  6F5A               	movwf	??_main& (0+255),b
  2206  000994  515A               	movf	??_main& (0+255),w,b
  2207  000996  6FCE               	movwf	(main@data+4)& (0+255),b	;volatile
  2208  000998  6BCF               	clrf	(main@data+5)& (0+255),b	;volatile
  2209                           
  2210                           ; BSR set to: 1
  2211                           ;main.c: 791:                         data_g = data[0];
  2212  00099A  C1CA  F1BC         	movff	main@data,main@data_g	;volatile
  2213  00099E  C1CB  F1BD         	movff	main@data+1,main@data_g+1	;volatile
  2214                           
  2215                           ; BSR set to: 1
  2216                           ;main.c: 792:                         data_g = (data_g<<8)||(data[1]);
  2217  0009A2  0E01               	movlw	1
  2218  0009A4  6FB6               	movwf	_main$1071& (0+255),b
  2219                           
  2220                           ; BSR set to: 1
  2221  0009A6  51BC               	movf	main@data_g& (0+255),w,b
  2222  0009A8  6F5B               	movwf	(??_main+1)& (0+255),b
  2223  0009AA  6B5A               	clrf	??_main& (0+255),b
  2224  0009AC  515A               	movf	??_main& (0+255),w,b
  2225  0009AE  115B               	iorwf	(??_main+1)& (0+255),w,b
  2226  0009B0  A4D8               	btfss	status,2,c
  2227  0009B2  D006               	goto	l8469
  2228                           
  2229                           ; BSR set to: 1
  2230  0009B4  51CC               	movf	(main@data+2)& (0+255),w,b	;volatile
  2231  0009B6  11CD               	iorwf	(main@data+3)& (0+255),w,b	;volatile
  2232  0009B8  A4D8               	btfss	status,2,c
  2233  0009BA  D002               	goto	l8469
  2234                           
  2235                           ; BSR set to: 1
  2236  0009BC  0E00               	movlw	0
  2237  0009BE  6FB6               	movwf	_main$1071& (0+255),b
  2238  0009C0                     l8469:
  2239                           
  2240                           ; BSR set to: 1
  2241  0009C0  C1B6  F1BC         	movff	_main$1071,main@data_g
  2242  0009C4  6BBD               	clrf	(main@data_g+1)& (0+255),b
  2243                           
  2244                           ;main.c: 793:                         data_g = (data_g<<8)||(data[2]);
  2245  0009C6  0E01               	movlw	1
  2246  0009C8  6FB7               	movwf	_main$1072& (0+255),b
  2247                           
  2248                           ; BSR set to: 1
  2249  0009CA  51BC               	movf	main@data_g& (0+255),w,b
  2250  0009CC  6F5B               	movwf	(??_main+1)& (0+255),b
  2251  0009CE  6B5A               	clrf	??_main& (0+255),b
  2252  0009D0  515A               	movf	??_main& (0+255),w,b
  2253  0009D2  115B               	iorwf	(??_main+1)& (0+255),w,b
  2254  0009D4  A4D8               	btfss	status,2,c
  2255  0009D6  D006               	goto	l8477
  2256                           
  2257                           ; BSR set to: 1
  2258  0009D8  51CE               	movf	(main@data+4)& (0+255),w,b	;volatile
  2259  0009DA  11CF               	iorwf	(main@data+5)& (0+255),w,b	;volatile
  2260  0009DC  A4D8               	btfss	status,2,c
  2261  0009DE  D002               	goto	l8477
  2262                           
  2263                           ; BSR set to: 1
  2264  0009E0  0E00               	movlw	0
  2265  0009E2  6FB7               	movwf	_main$1072& (0+255),b
  2266  0009E4                     l8477:
  2267                           
  2268                           ; BSR set to: 1
  2269                           ;main.c: 794:                         I2C_Master_Stop();
  2270                           
  2271                           ; BSR set to: 1
  2272  0009E4  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  2273                           
  2274                           ;main.c: 800:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2275  0009E8  0E01               	movlw	1
  2276  0009EA  EC9D  F01F         	call	_lcdInst
  2277  0009EE  0E11               	movlw	17
  2278  0009F0  0101               	movlb	1	; () banked
  2279  0009F2  6F5A               	movwf	??_main& (0+255),b
  2280  0009F4  0E3A               	movlw	58
  2281  0009F6                     u9387:
  2282  0009F6  2EE8               	decfsz	wreg,f,c
  2283  0009F8  D7FE               	bra	u9387
  2284  0009FA  2F5A               	decfsz	??_main& (0+255),f,b
  2285  0009FC  D7FC               	bra	u9387
  2286  0009FE  F000               	nop	
  2287                           
  2288                           ;main.c: 801:                         printf("done wait");
  2289  000A00  0EBB               	movlw	low STR_55
  2290  000A02  0100               	movlb	0	; () banked
  2291  000A04  6FED               	movwf	printf@fmt& (0+255),b
  2292  000A06  0EFF               	movlw	high STR_55
  2293  000A08  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2294  000A0A  EC37  F01F         	call	_printf	;wreg free
  2295                           
  2296                           ;main.c: 802:                         arduino_stopped = 1;
  2297  000A0E  0E01               	movlw	1
  2298  000A10  0101               	movlb	1	; () banked
  2299  000A12  6FB9               	movwf	main@arduino_stopped& (0+255),b
  2300  000A14                     l8489:
  2301                           
  2302                           ;main.c: 804:                     if (arduino_stopped){
  2303  000A14  0101               	movlb	1	; () banked
  2304  000A16  51B9               	movf	main@arduino_stopped& (0+255),w,b
  2305  000A18  B4D8               	btfsc	status,2,c
  2306  000A1A  D042               	goto	l8507
  2307                           
  2308                           ; BSR set to: 1
  2309                           ;main.c: 805:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2310  000A1C  0E01               	movlw	1
  2311  000A1E  EC9D  F01F         	call	_lcdInst
  2312  000A22  0E11               	movlw	17
  2313  000A24  0101               	movlb	1	; () banked
  2314  000A26  6F5A               	movwf	??_main& (0+255),b
  2315  000A28  0E3A               	movlw	58
  2316  000A2A                     u9397:
  2317  000A2A  2EE8               	decfsz	wreg,f,c
  2318  000A2C  D7FE               	bra	u9397
  2319  000A2E  2F5A               	decfsz	??_main& (0+255),f,b
  2320  000A30  D7FC               	bra	u9397
  2321  000A32  F000               	nop	
  2322                           
  2323                           ;main.c: 806:                         printf("dun break");
  2324  000A34  0EA7               	movlw	low STR_56
  2325  000A36  0100               	movlb	0	; () banked
  2326  000A38  6FED               	movwf	printf@fmt& (0+255),b
  2327  000A3A  0EFF               	movlw	high STR_56
  2328  000A3C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2329  000A3E  EC37  F01F         	call	_printf	;wreg free
  2330                           
  2331                           ;main.c: 807:                         steps2_adj=ultrasonic_main();
  2332  000A42  EC10  F013         	call	_ultrasonic_main	;wreg free
  2333  000A46  C0FC  F1BE         	movff	?_ultrasonic_main,main@steps2_adj
  2334  000A4A  C0FD  F1BF         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2335                           
  2336                           ;main.c: 808:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2337  000A4E  0E01               	movlw	1
  2338  000A50  EC9D  F01F         	call	_lcdInst
  2339  000A54  0E11               	movlw	17
  2340  000A56  0101               	movlb	1	; () banked
  2341  000A58  6F5A               	movwf	??_main& (0+255),b
  2342  000A5A  0E3A               	movlw	58
  2343  000A5C                     u9407:
  2344  000A5C  2EE8               	decfsz	wreg,f,c
  2345  000A5E  D7FE               	bra	u9407
  2346  000A60  2F5A               	decfsz	??_main& (0+255),f,b
  2347  000A62  D7FC               	bra	u9407
  2348  000A64  F000               	nop	
  2349                           
  2350                           ;main.c: 809:                         printf("stepsadj %d", steps2_adj);
  2351  000A66  0E23               	movlw	low STR_21
  2352  000A68  0100               	movlb	0	; () banked
  2353  000A6A  6FED               	movwf	printf@fmt& (0+255),b
  2354  000A6C  0EFF               	movlw	high STR_21
  2355  000A6E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2356  000A70  C1BE  F0EF         	movff	main@steps2_adj,?_printf+2
  2357  000A74  C1BF  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2358  000A78  EC37  F01F         	call	_printf	;wreg free
  2359                           
  2360                           ;main.c: 810:                         t_count = number_deploy(avg_dist, poles_detected);
  2361  000A7C  C044  F0FB         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2362  000A80  C045  F0FC         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2363  000A84  C1C8  F0FD         	movff	main@poles_detected,number_deploy@poles_detected
  2364  000A88  C1C9  F0FE         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2365  000A8C  EC09  F011         	call	_number_deploy	;wreg free
  2366  000A90  C0FB  F1C2         	movff	?_number_deploy,main@t_count
  2367  000A94  C0FC  F1C3         	movff	?_number_deploy+1,main@t_count+1
  2368                           
  2369                           ;main.c: 811:                         sens = 0;
  2370  000A98  0E00               	movlw	0
  2371  000A9A  6E59               	movwf	_sens+1,c	;volatile
  2372  000A9C  0E00               	movlw	0
  2373  000A9E  6E58               	movwf	_sens,c	;volatile
  2374  000AA0                     l8507:
  2375                           
  2376                           ;main.c: 771:             while (sens){
  2377  000AA0  5058               	movf	_sens,w,c	;volatile
  2378  000AA2  1059               	iorwf	_sens+1,w,c	;volatile
  2379  000AA4  A4D8               	btfss	status,2,c
  2380  000AA6  D729               	goto	l8439
  2381                           
  2382                           ;main.c: 815:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  2383  000AA8  0101               	movlb	1	; () banked
  2384  000AAA  51D0               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2385  000AAC  5C44               	subwf	_avg_dist,w,c	;volatile
  2386  000AAE  6F60               	movwf	main@pole_cl_dist& (0+255),b
  2387  000AB0  51D1               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2388  000AB2  5845               	subwfb	_avg_dist+1,w,c	;volatile
  2389  000AB4  6F61               	movwf	(main@pole_cl_dist+1)& (0+255),b
  2390                           
  2391                           ; BSR set to: 1
  2392                           ;main.c: 821:             act_done = 0;
  2393  000AB6  0E00               	movlw	0
  2394  000AB8  6FB8               	movwf	main@act_done& (0+255),b
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;main.c: 822:             if (t_count<=2){
  2398  000ABA  BFC3               	btfsc	(main@t_count+1)& (0+255),7,b
  2399  000ABC  D006               	goto	u9280
  2400  000ABE  51C3               	movf	(main@t_count+1)& (0+255),w,b
  2401  000AC0  E165               	bnz	l563
  2402  000AC2  0E03               	movlw	3
  2403  000AC4  5DC2               	subwf	main@t_count& (0+255),w,b
  2404  000AC6  B0D8               	btfsc	status,0,c
  2405  000AC8  D061               	goto	l563
  2406  000ACA                     u9280:
  2407                           
  2408                           ; BSR set to: 1
  2409                           ;main.c: 823:                 if (t_dep <8){
  2410  000ACA  BFC5               	btfsc	(main@t_dep+1)& (0+255),7,b
  2411  000ACC  D006               	goto	u9290
  2412  000ACE  51C5               	movf	(main@t_dep+1)& (0+255),w,b
  2413  000AD0  E12D               	bnz	l8531
  2414  000AD2  0E08               	movlw	8
  2415  000AD4  5DC4               	subwf	main@t_dep& (0+255),w,b
  2416  000AD6  B0D8               	btfsc	status,0,c
  2417  000AD8  D029               	goto	u9300
  2418  000ADA                     u9290:
  2419                           
  2420                           ; BSR set to: 1
  2421                           ;main.c: 826:                     stack = 1;
  2422  000ADA  0E00               	movlw	0
  2423  000ADC  6FBB               	movwf	(main@stack+1)& (0+255),b
  2424  000ADE  0E01               	movlw	1
  2425  000AE0  6FBA               	movwf	main@stack& (0+255),b
  2426                           
  2427                           ; BSR set to: 1
  2428                           ;main.c: 827:                                     brake();
  2429  000AE2  EC81  F01A         	call	_brake	;wreg free
  2430                           
  2431                           ;main.c: 829:                     for(int i=0; i<(t_count); i++){
  2432  000AE6  0E00               	movlw	0
  2433  000AE8  0101               	movlb	1	; () banked
  2434  000AEA  6FB3               	movwf	(main@i+1)& (0+255),b
  2435  000AEC  0E00               	movlw	0
  2436  000AEE  6FB2               	movwf	main@i& (0+255),b
  2437  000AF0  D013               	goto	l8529
  2438  000AF2                     l8523:
  2439                           
  2440                           ; BSR set to: 1
  2441                           ;main.c: 830:                         actuators_main(stack, steps2_adj, t_dep);
  2442  000AF2  C1BA  F112         	movff	main@stack,actuators_main@stack
  2443  000AF6  C1BB  F113         	movff	main@stack+1,actuators_main@stack+1
  2444  000AFA  C1BE  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2445  000AFE  C1BF  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2446  000B02  C1C4  F116         	movff	main@t_dep,actuators_main@t_dep
  2447  000B06  C1C5  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2448  000B0A  ECE6  F013         	call	_actuators_main	;wreg free
  2449                           
  2450                           ;main.c: 832:                         t_dep++;
  2451  000B0E  0101               	movlb	1	; () banked
  2452  000B10  4BC4               	infsnz	main@t_dep& (0+255),f,b
  2453  000B12  2BC5               	incf	(main@t_dep+1)& (0+255),f,b
  2454                           
  2455                           ; BSR set to: 1
  2456                           ;main.c: 833:                     }
  2457  000B14  4BB2               	infsnz	main@i& (0+255),f,b
  2458  000B16  2BB3               	incf	(main@i+1)& (0+255),f,b
  2459  000B18                     l8529:
  2460                           
  2461                           ; BSR set to: 1
  2462  000B18  51C2               	movf	main@t_count& (0+255),w,b
  2463  000B1A  5DB2               	subwf	main@i& (0+255),w,b
  2464  000B1C  51B3               	movf	(main@i+1)& (0+255),w,b
  2465  000B1E  0A80               	xorlw	128
  2466  000B20  6F5A               	movwf	??_main& (0+255),b
  2467  000B22  51C3               	movf	(main@t_count+1)& (0+255),w,b
  2468  000B24  0A80               	xorlw	128
  2469  000B26  595A               	subwfb	??_main& (0+255),w,b
  2470  000B28  A0D8               	btfss	status,0,c
  2471  000B2A  D7E3               	goto	l8523
  2472  000B2C                     u9300:
  2473  000B2C                     l8531:
  2474                           
  2475                           ; BSR set to: 1
  2476                           ;main.c: 835:                 if (t_dep >= 8){
  2477  000B2C  BFC5               	btfsc	(main@t_dep+1)& (0+255),7,b
  2478  000B2E  D02C               	goto	u9320
  2479  000B30  51C5               	movf	(main@t_dep+1)& (0+255),w,b
  2480  000B32  E104               	bnz	u9310
  2481  000B34  0E08               	movlw	8
  2482  000B36  5DC4               	subwf	main@t_dep& (0+255),w,b
  2483  000B38  A0D8               	btfss	status,0,c
  2484  000B3A  D026               	goto	u9320
  2485  000B3C                     u9310:
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;main.c: 836:                     stack = 2;
  2489  000B3C  0E00               	movlw	0
  2490  000B3E  6FBB               	movwf	(main@stack+1)& (0+255),b
  2491  000B40  0E02               	movlw	2
  2492  000B42  6FBA               	movwf	main@stack& (0+255),b
  2493                           
  2494                           ;main.c: 837:                     for(int i=0; i<(t_count); i++){
  2495  000B44  0E00               	movlw	0
  2496  000B46  6FB5               	movwf	(main@i_1081+1)& (0+255),b
  2497  000B48  0E00               	movlw	0
  2498  000B4A  6FB4               	movwf	main@i_1081& (0+255),b
  2499  000B4C  D013               	goto	l8541
  2500  000B4E                     l8535:
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;main.c: 838:                         actuators_main(stack, steps2_adj, t_dep);
  2504  000B4E  C1BA  F112         	movff	main@stack,actuators_main@stack
  2505  000B52  C1BB  F113         	movff	main@stack+1,actuators_main@stack+1
  2506  000B56  C1BE  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2507  000B5A  C1BF  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2508  000B5E  C1C4  F116         	movff	main@t_dep,actuators_main@t_dep
  2509  000B62  C1C5  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2510  000B66  ECE6  F013         	call	_actuators_main	;wreg free
  2511                           
  2512                           ;main.c: 840:                         t_dep++;
  2513  000B6A  0101               	movlb	1	; () banked
  2514  000B6C  4BC4               	infsnz	main@t_dep& (0+255),f,b
  2515  000B6E  2BC5               	incf	(main@t_dep+1)& (0+255),f,b
  2516                           
  2517                           ; BSR set to: 1
  2518                           ;main.c: 841:                     }
  2519  000B70  4BB4               	infsnz	main@i_1081& (0+255),f,b
  2520  000B72  2BB5               	incf	(main@i_1081+1)& (0+255),f,b
  2521  000B74                     l8541:
  2522                           
  2523                           ; BSR set to: 1
  2524  000B74  51C2               	movf	main@t_count& (0+255),w,b
  2525  000B76  5DB4               	subwf	main@i_1081& (0+255),w,b
  2526  000B78  51B5               	movf	(main@i_1081+1)& (0+255),w,b
  2527  000B7A  0A80               	xorlw	128
  2528  000B7C  6F5A               	movwf	??_main& (0+255),b
  2529  000B7E  51C3               	movf	(main@t_count+1)& (0+255),w,b
  2530  000B80  0A80               	xorlw	128
  2531  000B82  595A               	subwfb	??_main& (0+255),w,b
  2532  000B84  A0D8               	btfss	status,0,c
  2533  000B86  D7E3               	goto	l8535
  2534  000B88                     u9320:
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;main.c: 843:                 act_done = 1;
  2538  000B88  0E01               	movlw	1
  2539  000B8A  6FB8               	movwf	main@act_done& (0+255),b
  2540  000B8C                     l563:
  2541                           
  2542                           ; BSR set to: 1
  2543                           ;main.c: 845:             if (act_done){
  2544  000B8C  51B8               	movf	main@act_done& (0+255),w,b
  2545  000B8E  B4D8               	btfsc	status,2,c
  2546  000B90  D1A8               	goto	l8623
  2547                           
  2548                           ; BSR set to: 1
  2549                           ;main.c: 846:             Pole[poles_detected].dist_from_cl = avg_dist;
  2550  000B92  C1C8  F15A         	movff	main@poles_detected,??_main
  2551  000B96  C1C9  F15B         	movff	main@poles_detected+1,??_main+1
  2552  000B9A  90D8               	bcf	status,0,c
  2553  000B9C  375A               	rlcf	??_main& (0+255),f,b
  2554  000B9E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2555  000BA0  90D8               	bcf	status,0,c
  2556  000BA2  375A               	rlcf	??_main& (0+255),f,b
  2557  000BA4  375B               	rlcf	(??_main+1)& (0+255),f,b
  2558  000BA6  90D8               	bcf	status,0,c
  2559  000BA8  375A               	rlcf	??_main& (0+255),f,b
  2560  000BAA  375B               	rlcf	(??_main+1)& (0+255),f,b
  2561  000BAC  0E06               	movlw	6
  2562  000BAE  275A               	addwf	??_main& (0+255),f,b
  2563  000BB0  0E00               	movlw	0
  2564  000BB2  235B               	addwfc	(??_main+1)& (0+255),f,b
  2565  000BB4  0E62               	movlw	low main@Pole
  2566  000BB6  255A               	addwf	??_main& (0+255),w,b
  2567  000BB8  6ED9               	movwf	fsr2l,c
  2568  000BBA  0E01               	movlw	high main@Pole
  2569  000BBC  215B               	addwfc	(??_main+1)& (0+255),w,b
  2570  000BBE  6EDA               	movwf	fsr2h,c
  2571  000BC0  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2572  000BC4  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2573                           
  2574                           ;main.c: 847:             Pole[poles_detected].dist_from_start = avg_dist+prev_avg_dist;
  2575  000BC8  51D0               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2576  000BCA  2444               	addwf	_avg_dist,w,c	;volatile
  2577  000BCC  6F5A               	movwf	??_main& (0+255),b
  2578  000BCE  51D1               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2579  000BD0  2045               	addwfc	_avg_dist+1,w,c	;volatile
  2580  000BD2  6F5B               	movwf	(??_main+1)& (0+255),b
  2581  000BD4  C1C8  F15C         	movff	main@poles_detected,??_main+2
  2582  000BD8  C1C9  F15D         	movff	main@poles_detected+1,??_main+3
  2583  000BDC  90D8               	bcf	status,0,c
  2584  000BDE  375C               	rlcf	(??_main+2)& (0+255),f,b
  2585  000BE0  375D               	rlcf	(??_main+3)& (0+255),f,b
  2586  000BE2  90D8               	bcf	status,0,c
  2587  000BE4  375C               	rlcf	(??_main+2)& (0+255),f,b
  2588  000BE6  375D               	rlcf	(??_main+3)& (0+255),f,b
  2589  000BE8  90D8               	bcf	status,0,c
  2590  000BEA  375C               	rlcf	(??_main+2)& (0+255),f,b
  2591  000BEC  375D               	rlcf	(??_main+3)& (0+255),f,b
  2592  000BEE  0E04               	movlw	4
  2593  000BF0  275C               	addwf	(??_main+2)& (0+255),f,b
  2594  000BF2  0E00               	movlw	0
  2595  000BF4  235D               	addwfc	(??_main+3)& (0+255),f,b
  2596  000BF6  0E62               	movlw	low main@Pole
  2597  000BF8  255C               	addwf	(??_main+2)& (0+255),w,b
  2598  000BFA  6ED9               	movwf	fsr2l,c
  2599  000BFC  0E01               	movlw	high main@Pole
  2600  000BFE  215D               	addwfc	(??_main+3)& (0+255),w,b
  2601  000C00  6EDA               	movwf	fsr2h,c
  2602  000C02  C15A  FFDE         	movff	??_main,postinc2
  2603  000C06  C15B  FFDD         	movff	??_main+1,postdec2
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;main.c: 849:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2607  000C0A  0E01               	movlw	1
  2608  000C0C  EC9D  F01F         	call	_lcdInst
  2609  000C10  0E11               	movlw	17
  2610  000C12  0101               	movlb	1	; () banked
  2611  000C14  6F5A               	movwf	??_main& (0+255),b
  2612  000C16  0E3A               	movlw	58
  2613  000C18                     u9417:
  2614  000C18  2EE8               	decfsz	wreg,f,c
  2615  000C1A  D7FE               	bra	u9417
  2616  000C1C  2F5A               	decfsz	??_main& (0+255),f,b
  2617  000C1E  D7FC               	bra	u9417
  2618  000C20  F000               	nop	
  2619                           
  2620                           ;main.c: 850:             printf("dist p[%d]:%d,%d", poles_detected,Pole[poles_detected]
      +                          .dist_from_cl, avg_dist);
  2621  000C22  0E2C               	movlw	low STR_58
  2622  000C24  0100               	movlb	0	; () banked
  2623  000C26  6FED               	movwf	printf@fmt& (0+255),b
  2624  000C28  0EFE               	movlw	high STR_58
  2625  000C2A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2626  000C2C  C1C8  F0EF         	movff	main@poles_detected,?_printf+2
  2627  000C30  C1C9  F0F0         	movff	main@poles_detected+1,?_printf+3
  2628  000C34  C1C8  F15A         	movff	main@poles_detected,??_main
  2629  000C38  C1C9  F15B         	movff	main@poles_detected+1,??_main+1
  2630  000C3C  0101               	movlb	1	; () banked
  2631  000C3E  90D8               	bcf	status,0,c
  2632  000C40  375A               	rlcf	??_main& (0+255),f,b
  2633  000C42  375B               	rlcf	(??_main+1)& (0+255),f,b
  2634  000C44  90D8               	bcf	status,0,c
  2635  000C46  375A               	rlcf	??_main& (0+255),f,b
  2636  000C48  375B               	rlcf	(??_main+1)& (0+255),f,b
  2637  000C4A  90D8               	bcf	status,0,c
  2638  000C4C  375A               	rlcf	??_main& (0+255),f,b
  2639  000C4E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2640  000C50  0E06               	movlw	6
  2641  000C52  275A               	addwf	??_main& (0+255),f,b
  2642  000C54  0E00               	movlw	0
  2643  000C56  235B               	addwfc	(??_main+1)& (0+255),f,b
  2644  000C58  0E62               	movlw	low main@Pole
  2645  000C5A  255A               	addwf	??_main& (0+255),w,b
  2646  000C5C  6ED9               	movwf	fsr2l,c
  2647  000C5E  0E01               	movlw	high main@Pole
  2648  000C60  215B               	addwfc	(??_main+1)& (0+255),w,b
  2649  000C62  6EDA               	movwf	fsr2h,c
  2650  000C64  CFDE F0F1          	movff	postinc2,?_printf+4
  2651  000C68  CFDD F0F2          	movff	postdec2,?_printf+5
  2652  000C6C  C044  F0F3         	movff	_avg_dist,?_printf+6	;volatile
  2653  000C70  C045  F0F4         	movff	_avg_dist+1,?_printf+7	;volatile
  2654  000C74  C046  F0F5         	movff	_avg_dist+2,?_printf+8	;volatile
  2655  000C78  C047  F0F6         	movff	_avg_dist+3,?_printf+9	;volatile
  2656  000C7C  EC37  F01F         	call	_printf	;wreg free
  2657  000C80  0EC0               	movlw	192
  2658  000C82  EC9D  F01F         	call	_lcdInst
  2659                           
  2660                           ;main.c: 852:             printf("p[%d] fs : %d",poles_detected, Pole[poles_detected].di
      +                          st_from_start);
  2661  000C86  0EB8               	movlw	low STR_59
  2662  000C88  0100               	movlb	0	; () banked
  2663  000C8A  6FED               	movwf	printf@fmt& (0+255),b
  2664  000C8C  0EFE               	movlw	high STR_59
  2665  000C8E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2666  000C90  C1C8  F0EF         	movff	main@poles_detected,?_printf+2
  2667  000C94  C1C9  F0F0         	movff	main@poles_detected+1,?_printf+3
  2668  000C98  C1C8  F15A         	movff	main@poles_detected,??_main
  2669  000C9C  C1C9  F15B         	movff	main@poles_detected+1,??_main+1
  2670  000CA0  0101               	movlb	1	; () banked
  2671  000CA2  90D8               	bcf	status,0,c
  2672  000CA4  375A               	rlcf	??_main& (0+255),f,b
  2673  000CA6  375B               	rlcf	(??_main+1)& (0+255),f,b
  2674  000CA8  90D8               	bcf	status,0,c
  2675  000CAA  375A               	rlcf	??_main& (0+255),f,b
  2676  000CAC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2677  000CAE  90D8               	bcf	status,0,c
  2678  000CB0  375A               	rlcf	??_main& (0+255),f,b
  2679  000CB2  375B               	rlcf	(??_main+1)& (0+255),f,b
  2680  000CB4  0E04               	movlw	4
  2681  000CB6  275A               	addwf	??_main& (0+255),f,b
  2682  000CB8  0E00               	movlw	0
  2683  000CBA  235B               	addwfc	(??_main+1)& (0+255),f,b
  2684  000CBC  0E62               	movlw	low main@Pole
  2685  000CBE  255A               	addwf	??_main& (0+255),w,b
  2686  000CC0  6ED9               	movwf	fsr2l,c
  2687  000CC2  0E01               	movlw	high main@Pole
  2688  000CC4  215B               	addwfc	(??_main+1)& (0+255),w,b
  2689  000CC6  6EDA               	movwf	fsr2h,c
  2690  000CC8  CFDE F0F1          	movff	postinc2,?_printf+4
  2691  000CCC  CFDD F0F2          	movff	postdec2,?_printf+5
  2692  000CD0  EC37  F01F         	call	_printf	;wreg free
  2693                           
  2694                           ;main.c: 853:             _delay((unsigned long)((3000)*(10000000/4000.0)));
  2695  000CD4  0E27               	movlw	39
  2696  000CD6  0101               	movlb	1	; () banked
  2697  000CD8  6F5B               	movwf	(??_main+1)& (0+255),b
  2698  000CDA  0E0D               	movlw	13
  2699  000CDC  6F5A               	movwf	??_main& (0+255),b
  2700  000CDE  0E26               	movlw	38
  2701  000CE0                     u9427:
  2702  000CE0  2EE8               	decfsz	wreg,f,c
  2703  000CE2  D7FE               	bra	u9427
  2704  000CE4  2F5A               	decfsz	??_main& (0+255),f,b
  2705  000CE6  D7FC               	bra	u9427
  2706  000CE8  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2707  000CEA  D7FA               	bra	u9427
  2708  000CEC  F000               	nop	
  2709                           
  2710                           ;main.c: 855:             prev_avg_dist = avg_dist ;
  2711  000CEE  C044  F1D0         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2712  000CF2  C045  F1D1         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2713  000CF6  C046  F1D2         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2714  000CFA  C047  F1D3         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2715                           
  2716                           ;main.c: 856:             poles_detected++;
  2717  000CFE  0101               	movlb	1	; () banked
  2718  000D00  4BC8               	infsnz	main@poles_detected& (0+255),f,b
  2719  000D02  2BC9               	incf	(main@poles_detected+1)& (0+255),f,b
  2720                           
  2721                           ; BSR set to: 1
  2722                           ;main.c: 857:             start();
  2723  000D04  ECAF  F01D         	call	_start	;wreg free
  2724                           
  2725                           ;main.c: 858:             arduino_stopped = 0;
  2726  000D08  0E00               	movlw	0
  2727  000D0A  0101               	movlb	1	; () banked
  2728  000D0C  6FB9               	movwf	main@arduino_stopped& (0+255),b
  2729                           
  2730                           ; BSR set to: 1
  2731                           ;main.c: 860:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2732  000D0E  0E01               	movlw	1
  2733  000D10  EC9D  F01F         	call	_lcdInst
  2734  000D14  0E11               	movlw	17
  2735  000D16  0101               	movlb	1	; () banked
  2736  000D18  6F5A               	movwf	??_main& (0+255),b
  2737  000D1A  0E3A               	movlw	58
  2738  000D1C                     u9437:
  2739  000D1C  2EE8               	decfsz	wreg,f,c
  2740  000D1E  D7FE               	bra	u9437
  2741  000D20  2F5A               	decfsz	??_main& (0+255),f,b
  2742  000D22  D7FC               	bra	u9437
  2743  000D24  F000               	nop	
  2744                           
  2745                           ;main.c: 861:             printf("avg dist %d", avg_dist);
  2746  000D26  0E2F               	movlw	low STR_60
  2747  000D28  0100               	movlb	0	; () banked
  2748  000D2A  6FED               	movwf	printf@fmt& (0+255),b
  2749  000D2C  0EFF               	movlw	high STR_60
  2750  000D2E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2751  000D30  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2752  000D34  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2753  000D38  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2754  000D3C  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2755  000D40  EC37  F01F         	call	_printf	;wreg free
  2756                           
  2757                           ;main.c: 862:             printf("poles d %d", poles_detected);
  2758  000D44  0E53               	movlw	low STR_61
  2759  000D46  0100               	movlb	0	; () banked
  2760  000D48  6FED               	movwf	printf@fmt& (0+255),b
  2761  000D4A  0EFF               	movlw	high STR_61
  2762  000D4C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2763  000D4E  C1C8  F0EF         	movff	main@poles_detected,?_printf+2
  2764  000D52  C1C9  F0F0         	movff	main@poles_detected+1,?_printf+3
  2765  000D56  EC37  F01F         	call	_printf	;wreg free
  2766                           
  2767                           ;main.c: 863:             for (int i=0;i<4;i++){
  2768  000D5A  0E00               	movlw	0
  2769  000D5C  0101               	movlb	1	; () banked
  2770  000D5E  6FC7               	movwf	(main@i_1087+1)& (0+255),b
  2771  000D60  0E00               	movlw	0
  2772  000D62  6FC6               	movwf	main@i_1087& (0+255),b
  2773  000D64                     l8577:
  2774                           
  2775                           ; BSR set to: 1
  2776  000D64  BFC7               	btfsc	(main@i_1087+1)& (0+255),7,b
  2777  000D66  D006               	goto	l8581
  2778  000D68  51C7               	movf	(main@i_1087+1)& (0+255),w,b
  2779  000D6A  E15D               	bnz	l8599
  2780  000D6C  0E04               	movlw	4
  2781  000D6E  5DC6               	subwf	main@i_1087& (0+255),w,b
  2782  000D70  B0D8               	btfsc	status,0,c
  2783  000D72  D059               	goto	l8599
  2784  000D74                     l8581:
  2785                           
  2786                           ; BSR set to: 1
  2787                           ;main.c: 864:                 sum[i] = 0 ;
  2788  000D74  90D8               	bcf	status,0,c
  2789  000D76  35C6               	rlcf	main@i_1087& (0+255),w,b
  2790  000D78  6ED9               	movwf	fsr2l,c
  2791  000D7A  35C7               	rlcf	(main@i_1087+1)& (0+255),w,b
  2792  000D7C  6EDA               	movwf	fsr2h,c
  2793  000D7E  0E38               	movlw	low _sum
  2794  000D80  26D9               	addwf	fsr2l,f,c
  2795  000D82  0E00               	movlw	high _sum
  2796  000D84  22DA               	addwfc	fsr2h,f,c
  2797  000D86  0E00               	movlw	0
  2798  000D88  6EDE               	movwf	postinc2,c
  2799  000D8A  0E00               	movlw	0
  2800  000D8C  6EDD               	movwf	postdec2,c
  2801                           
  2802                           ;main.c: 865:                 a[i] =0 ;
  2803  000D8E  90D8               	bcf	status,0,c
  2804  000D90  35C6               	rlcf	main@i_1087& (0+255),w,b
  2805  000D92  6ED9               	movwf	fsr2l,c
  2806  000D94  35C7               	rlcf	(main@i_1087+1)& (0+255),w,b
  2807  000D96  6EDA               	movwf	fsr2h,c
  2808  000D98  0E61               	movlw	low _a
  2809  000D9A  26D9               	addwf	fsr2l,f,c
  2810  000D9C  0E00               	movlw	high _a
  2811  000D9E  22DA               	addwfc	fsr2h,f,c
  2812  000DA0  0E00               	movlw	0
  2813  000DA2  6EDE               	movwf	postinc2,c
  2814  000DA4  0E00               	movlw	0
  2815  000DA6  6EDD               	movwf	postdec2,c
  2816                           
  2817                           ;main.c: 866:                 sumf[i] = 0 ;
  2818  000DA8  0E40               	movlw	low _sumf
  2819  000DAA  25C6               	addwf	main@i_1087& (0+255),w,b
  2820  000DAC  6ED9               	movwf	fsr2l,c
  2821  000DAE  0E00               	movlw	high _sumf
  2822  000DB0  21C7               	addwfc	(main@i_1087+1)& (0+255),w,b
  2823  000DB2  6EDA               	movwf	fsr2h,c
  2824  000DB4  0E00               	movlw	0
  2825  000DB6  6EDF               	movwf	indf2,c
  2826                           
  2827                           ; BSR set to: 1
  2828                           ;main.c: 867:                 for (int k=0;k<6;k++){
  2829  000DB8  0E00               	movlw	0
  2830  000DBA  6FC1               	movwf	(main@k+1)& (0+255),b
  2831  000DBC  0E00               	movlw	0
  2832  000DBE  6FC0               	movwf	main@k& (0+255),b
  2833  000DC0                     l8585:
  2834                           
  2835                           ; BSR set to: 1
  2836  000DC0  BFC1               	btfsc	(main@k+1)& (0+255),7,b
  2837  000DC2  D006               	goto	l8589
  2838  000DC4  51C1               	movf	(main@k+1)& (0+255),w,b
  2839  000DC6  E12C               	bnz	l8595
  2840  000DC8  0E06               	movlw	6
  2841  000DCA  5DC0               	subwf	main@k& (0+255),w,b
  2842  000DCC  B0D8               	btfsc	status,0,c
  2843  000DCE  D028               	goto	l8595
  2844  000DD0                     l8589:
  2845                           
  2846                           ; BSR set to: 1
  2847                           ;main.c: 868:                     dist_final[i][k] = 0;
  2848  000DD0  C1C6  F080         	movff	main@i_1087,___wmul@multiplier
  2849  000DD4  C1C7  F081         	movff	main@i_1087+1,___wmul@multiplier+1
  2850  000DD8  0E00               	movlw	0
  2851  000DDA  0100               	movlb	0	; () banked
  2852  000DDC  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2853  000DDE  0E0C               	movlw	12
  2854  000DE0  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2855  000DE2  EC4B  F01F         	call	___wmul	;wreg free
  2856  000DE6  0E50               	movlw	low _dist_final
  2857  000DE8  0101               	movlb	1	; () banked
  2858  000DEA  6F5A               	movwf	??_main& (0+255),b
  2859  000DEC  0E02               	movlw	high _dist_final
  2860  000DEE  6F5B               	movwf	(??_main+1)& (0+255),b
  2861  000DF0  0100               	movlb	0	; () banked
  2862  000DF2  5180               	movf	?___wmul& (0+255),w,b
  2863  000DF4  0101               	movlb	1	; () banked
  2864  000DF6  275A               	addwf	??_main& (0+255),f,b
  2865  000DF8  0100               	movlb	0	; () banked
  2866  000DFA  5181               	movf	(?___wmul+1)& (0+255),w,b
  2867  000DFC  0101               	movlb	1	; () banked
  2868  000DFE  235B               	addwfc	(??_main+1)& (0+255),f,b
  2869  000E00  90D8               	bcf	status,0,c
  2870  000E02  35C0               	rlcf	main@k& (0+255),w,b
  2871  000E04  6ED9               	movwf	fsr2l,c
  2872  000E06  35C1               	rlcf	(main@k+1)& (0+255),w,b
  2873  000E08  6EDA               	movwf	fsr2h,c
  2874  000E0A  515A               	movf	??_main& (0+255),w,b
  2875  000E0C  26D9               	addwf	fsr2l,f,c
  2876  000E0E  515B               	movf	(??_main+1)& (0+255),w,b
  2877  000E10  22DA               	addwfc	fsr2h,f,c
  2878  000E12  0E00               	movlw	0
  2879  000E14  6EDE               	movwf	postinc2,c
  2880  000E16  0E00               	movlw	0
  2881  000E18  6EDD               	movwf	postdec2,c
  2882                           
  2883                           ; BSR set to: 1
  2884                           ;main.c: 869:                     }
  2885  000E1A  4BC0               	infsnz	main@k& (0+255),f,b
  2886  000E1C  2BC1               	incf	(main@k+1)& (0+255),f,b
  2887  000E1E  D7D0               	goto	l8585
  2888  000E20                     l8595:
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;main.c: 870:                 }
  2892  000E20  4BC6               	infsnz	main@i_1087& (0+255),f,b
  2893  000E22  2BC7               	incf	(main@i_1087+1)& (0+255),f,b
  2894  000E24  D79F               	goto	l8577
  2895  000E26                     l8599:
  2896                           
  2897                           ; BSR set to: 1
  2898                           ;main.c: 871:                 _delay((unsigned long)((1000)*(10000000/4000.0)));
  2899  000E26  0E0D               	movlw	13
  2900  000E28  0101               	movlb	1	; () banked
  2901  000E2A  6F5B               	movwf	(??_main+1)& (0+255),b
  2902  000E2C  0EAF               	movlw	175
  2903  000E2E  6F5A               	movwf	??_main& (0+255),b
  2904  000E30  0EB6               	movlw	182
  2905  000E32                     u9447:
  2906  000E32  2EE8               	decfsz	wreg,f,c
  2907  000E34  D7FE               	bra	u9447
  2908  000E36  2F5A               	decfsz	??_main& (0+255),f,b
  2909  000E38  D7FC               	bra	u9447
  2910  000E3A  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2911  000E3C  D7FA               	bra	u9447
  2912  000E3E  F000               	nop	
  2913                           
  2914                           ;main.c: 872:                 sens = 1;
  2915  000E40  0E00               	movlw	0
  2916  000E42  6E59               	movwf	_sens+1,c	;volatile
  2917  000E44  0E01               	movlw	1
  2918  000E46  6E58               	movwf	_sens,c	;volatile
  2919  000E48  D04C               	goto	l8623
  2920  000E4A                     l8603:
  2921                           
  2922                           ; BSR set to: 1
  2923                           ;main.c: 876:             brake();
  2924  000E4A  EC81  F01A         	call	_brake	;wreg free
  2925                           
  2926                           ;main.c: 877:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2927  000E4E  0E01               	movlw	1
  2928  000E50  EC9D  F01F         	call	_lcdInst
  2929  000E54  0E11               	movlw	17
  2930  000E56  0101               	movlb	1	; () banked
  2931  000E58  6F5A               	movwf	??_main& (0+255),b
  2932  000E5A  0E3A               	movlw	58
  2933  000E5C                     u9457:
  2934  000E5C  2EE8               	decfsz	wreg,f,c
  2935  000E5E  D7FE               	bra	u9457
  2936  000E60  2F5A               	decfsz	??_main& (0+255),f,b
  2937  000E62  D7FC               	bra	u9457
  2938  000E64  F000               	nop	
  2939                           
  2940                           ;main.c: 878:             printf("poles done");
  2941  000E66  0E69               	movlw	low STR_62
  2942  000E68  0100               	movlb	0	; () banked
  2943  000E6A  6FED               	movwf	printf@fmt& (0+255),b
  2944  000E6C  0EFF               	movlw	high STR_62
  2945  000E6E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2946  000E70  EC37  F01F         	call	_printf	;wreg free
  2947                           
  2948                           ;main.c: 879:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2949  000E74  0E0D               	movlw	13
  2950  000E76  0101               	movlb	1	; () banked
  2951  000E78  6F5B               	movwf	(??_main+1)& (0+255),b
  2952  000E7A  0EAF               	movlw	175
  2953  000E7C  6F5A               	movwf	??_main& (0+255),b
  2954  000E7E  0EB6               	movlw	182
  2955  000E80                     u9467:
  2956  000E80  2EE8               	decfsz	wreg,f,c
  2957  000E82  D7FE               	bra	u9467
  2958  000E84  2F5A               	decfsz	??_main& (0+255),f,b
  2959  000E86  D7FC               	bra	u9467
  2960  000E88  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2961  000E8A  D7FA               	bra	u9467
  2962  000E8C  F000               	nop	
  2963                           
  2964                           ;main.c: 885:             backwards();
  2965  000E8E  EC5F  F01F         	call	_backwards	;wreg free
  2966                           
  2967                           ;main.c: 886:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2968  000E92  0E01               	movlw	1
  2969  000E94  EC9D  F01F         	call	_lcdInst
  2970  000E98  0E11               	movlw	17
  2971  000E9A  0101               	movlb	1	; () banked
  2972  000E9C  6F5A               	movwf	??_main& (0+255),b
  2973  000E9E  0E3A               	movlw	58
  2974  000EA0                     u9477:
  2975  000EA0  2EE8               	decfsz	wreg,f,c
  2976  000EA2  D7FE               	bra	u9477
  2977  000EA4  2F5A               	decfsz	??_main& (0+255),f,b
  2978  000EA6  D7FC               	bra	u9477
  2979  000EA8  F000               	nop	
  2980                           
  2981                           ;main.c: 887:             printf("backwards");
  2982  000EAA  0EB1               	movlw	low STR_63
  2983  000EAC  0100               	movlb	0	; () banked
  2984  000EAE  6FED               	movwf	printf@fmt& (0+255),b
  2985  000EB0  0EFF               	movlw	high STR_63
  2986  000EB2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2987  000EB4  EC37  F01F         	call	_printf	;wreg free
  2988                           
  2989                           ;main.c: 888:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2990  000EB8  0E0D               	movlw	13
  2991  000EBA  0101               	movlb	1	; () banked
  2992  000EBC  6F5B               	movwf	(??_main+1)& (0+255),b
  2993  000EBE  0EAF               	movlw	175
  2994  000EC0  6F5A               	movwf	??_main& (0+255),b
  2995  000EC2  0EB6               	movlw	182
  2996  000EC4                     u9487:
  2997  000EC4  2EE8               	decfsz	wreg,f,c
  2998  000EC6  D7FE               	bra	u9487
  2999  000EC8  2F5A               	decfsz	??_main& (0+255),f,b
  3000  000ECA  D7FC               	bra	u9487
  3001  000ECC  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  3002  000ECE  D7FA               	bra	u9487
  3003  000ED0  F000               	nop	
  3004                           
  3005                           ;main.c: 889:             sens = 0;
  3006  000ED2  0E00               	movlw	0
  3007  000ED4  6E59               	movwf	_sens+1,c	;volatile
  3008  000ED6  0E00               	movlw	0
  3009  000ED8  6E58               	movwf	_sens,c	;volatile
  3010                           
  3011                           ;main.c: 890:             send = 1;
  3012  000EDA  0E01               	movlw	1
  3013  000EDC  6E6D               	movwf	_send,c
  3014                           
  3015                           ;main.c: 891:             break;
  3016  000EDE  EF07  F000         	goto	start
  3017  000EE2                     l8623:
  3018                           
  3019                           ;main.c: 893:         t_count = 5;
  3020  000EE2  0E00               	movlw	0
  3021  000EE4  0101               	movlb	1	; () banked
  3022  000EE6  6FC3               	movwf	(main@t_count+1)& (0+255),b
  3023  000EE8  0E05               	movlw	5
  3024  000EEA  6FC2               	movwf	main@t_count& (0+255),b
  3025  000EEC  D4D7               	goto	l8431
  3026  000EEE                     __end_of_main:
  3027                           	opt callstack 0
  3028                           
  3029 ;; *************** function _ultrasonic_main *****************
  3030 ;; Defined at:
  3031 ;;		line 291 in file "main.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  min_us_dist     2   10[BANK1 ] int 
  3036 ;;  steps2_adj      2    8[BANK1 ] int 
  3037 ;;  step2_offset    2    6[BANK1 ] int 
  3038 ;;  sensed          2    4[BANK1 ] int 
  3039 ;;  min_us_dist     2    0        int 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  2  124[BANK0 ] int 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;Total ram usage:       14 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:   15
  3056 ;; This function calls:
  3057 ;;		_abs
  3058 ;;		_lcdInst
  3059 ;;		_min
  3060 ;;		_print_echo
  3061 ;;		_printf
  3062 ;;		_trig
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text1
  3069  002620                     __ptext1:
  3070                           	opt callstack 0
  3071  002620                     _ultrasonic_main:
  3072                           	opt callstack 15
  3073                           
  3074                           ;main.c: 292:     TRISBbits.RB0 = 0;
  3075                           
  3076                           ;incstack = 0
  3077  002620  9093               	bcf	3987,0,c	;volatile
  3078                           
  3079                           ;main.c: 293:     LATBbits.LATB0 = 1;
  3080  002622  808A               	bsf	3978,0,c	;volatile
  3081                           
  3082                           ;main.c: 295:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3083  002624  0E01               	movlw	1
  3084  002626  EC9D  F01F         	call	_lcdInst
  3085  00262A  0E11               	movlw	17
  3086  00262C  0101               	movlb	1	; () banked
  3087  00262E  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3088  002630  0E3A               	movlw	58
  3089  002632                     u9497:
  3090  002632  2EE8               	decfsz	wreg,f,c
  3091  002634  D7FE               	bra	u9497
  3092  002636  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3093  002638  D7FC               	bra	u9497
  3094  00263A  F000               	nop	
  3095                           
  3096                           ;main.c: 296:     printf("or here");
  3097  00263C  0EEC               	movlw	low STR_18
  3098  00263E  0100               	movlb	0	; () banked
  3099  002640  6FED               	movwf	printf@fmt& (0+255),b
  3100  002642  0EFF               	movlw	high STR_18
  3101  002644  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3102  002646  EC37  F01F         	call	_printf	;wreg free
  3103                           
  3104                           ;main.c: 297:  TRISB = 0b11110000;
  3105  00264A  0EF0               	movlw	240
  3106  00264C  6E93               	movwf	3987,c	;volatile
  3107                           
  3108                           ;main.c: 298:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3109  00264E  0E01               	movlw	1
  3110  002650  EC9D  F01F         	call	_lcdInst
  3111  002654  0E11               	movlw	17
  3112  002656  0101               	movlb	1	; () banked
  3113  002658  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3114  00265A  0E3A               	movlw	58
  3115  00265C                     u9507:
  3116  00265C  2EE8               	decfsz	wreg,f,c
  3117  00265E  D7FE               	bra	u9507
  3118  002660  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3119  002662  D7FC               	bra	u9507
  3120  002664  F000               	nop	
  3121                           
  3122                           ;main.c: 299:     printf("break heree?");
  3123  002666  0EF0               	movlw	low STR_19
  3124  002668  0100               	movlb	0	; () banked
  3125  00266A  6FED               	movwf	printf@fmt& (0+255),b
  3126  00266C  0EFE               	movlw	high STR_19
  3127  00266E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3128  002670  EC37  F01F         	call	_printf	;wreg free
  3129                           
  3130                           ;main.c: 300:     RBIF = 0;
  3131  002674  90F2               	bcf	4082,0,c	;volatile
  3132                           
  3133                           ;main.c: 301:  RBIE = 1;
  3134  002676  86F2               	bsf	4082,3,c	;volatile
  3135                           
  3136                           ;main.c: 303:     int sensed = 0;
  3137  002678  0E00               	movlw	0
  3138  00267A  0101               	movlb	1	; () banked
  3139  00267C  6F05               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  3140  00267E  0E00               	movlw	0
  3141  002680  6F04               	movwf	ultrasonic_main@sensed& (0+255),b
  3142                           
  3143                           ;main.c: 305:     int steps2_adj=0;
  3144  002682  0E00               	movlw	0
  3145  002684  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3146  002686  0E00               	movlw	0
  3147  002688  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3148                           
  3149                           ;main.c: 306:     int step2_offset=0;
  3150  00268A  0E00               	movlw	0
  3151  00268C  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3152  00268E  0E00               	movlw	0
  3153  002690  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3154                           
  3155                           ;main.c: 307:     while(send){
  3156  002692  D070               	goto	l466
  3157  002694                     l7965:
  3158                           
  3159                           ; BSR set to: 1
  3160                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  3161  002694  0E00               	movlw	0
  3162  002696  6E51               	movwf	_meas+1,c	;volatile
  3163  002698  0E00               	movlw	0
  3164  00269A  6E50               	movwf	_meas,c	;volatile
  3165  00269C                     l7967:
  3166                           
  3167                           ; BSR set to: 1
  3168  00269C  BE51               	btfsc	_meas+1,7,c	;volatile
  3169  00269E  D006               	goto	l7971
  3170  0026A0  5051               	movf	_meas+1,w,c	;volatile
  3171  0026A2  E160               	bnz	l8003
  3172  0026A4  0E03               	movlw	3
  3173  0026A6  5C50               	subwf	_meas,w,c	;volatile
  3174  0026A8  B0D8               	btfsc	status,0,c
  3175  0026AA  D05C               	goto	l8003
  3176  0026AC                     l7971:
  3177                           
  3178                           ; BSR set to: 1
  3179                           ;main.c: 309:         trig();
  3180  0026AC  EC35  F018         	call	_trig	;wreg free
  3181                           
  3182                           ;main.c: 310:         RBIE = 0;
  3183  0026B0  96F2               	bcf	4082,3,c	;volatile
  3184                           
  3185                           ;main.c: 311:         print_echo();
  3186  0026B2  EC19  F012         	call	_print_echo	;wreg free
  3187                           
  3188                           ;main.c: 312:         RBIE = 1;
  3189  0026B6  86F2               	bsf	4082,3,c	;volatile
  3190                           
  3191                           ;main.c: 313:         int min_us_dist = min(a, 4);
  3192  0026B8  0E61               	movlw	low _a
  3193  0026BA  0100               	movlb	0	; () banked
  3194  0026BC  6F80               	movwf	min@array& (0+255),b
  3195  0026BE  0E00               	movlw	high _a
  3196  0026C0  6F81               	movwf	(min@array+1)& (0+255),b
  3197  0026C2  0E00               	movlw	0
  3198  0026C4  6F83               	movwf	(min@size+1)& (0+255),b
  3199  0026C6  0E04               	movlw	4
  3200  0026C8  6F82               	movwf	min@size& (0+255),b
  3201  0026CA  ECAD  F017         	call	_min	;wreg free
  3202  0026CE  C080  F10A         	movff	?_min,ultrasonic_main@min_us_dist_968
  3203  0026D2  C081  F10B         	movff	?_min+1,ultrasonic_main@min_us_dist_968+1
  3204                           
  3205                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3206  0026D6  0E01               	movlw	1
  3207  0026D8  EC9D  F01F         	call	_lcdInst
  3208  0026DC  0E11               	movlw	17
  3209  0026DE  0101               	movlb	1	; () banked
  3210  0026E0  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3211  0026E2  0E3A               	movlw	58
  3212  0026E4                     u9517:
  3213  0026E4  2EE8               	decfsz	wreg,f,c
  3214  0026E6  D7FE               	bra	u9517
  3215  0026E8  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3216  0026EA  D7FC               	bra	u9517
  3217  0026EC  F000               	nop	
  3218                           
  3219                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  3220  0026EE  0E5E               	movlw	low STR_20
  3221  0026F0  0100               	movlb	0	; () banked
  3222  0026F2  6FED               	movwf	printf@fmt& (0+255),b
  3223  0026F4  0EFF               	movlw	high STR_20
  3224  0026F6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3225  0026F8  C10A  F0EF         	movff	ultrasonic_main@min_us_dist_968,?_printf+2
  3226  0026FC  C10B  F0F0         	movff	ultrasonic_main@min_us_dist_968+1,?_printf+3
  3227  002700  EC37  F01F         	call	_printf	;wreg free
  3228                           
  3229                           ;main.c: 317:         if (min_us_dist<14){
  3230  002704  0101               	movlb	1	; () banked
  3231  002706  BF0B               	btfsc	(ultrasonic_main@min_us_dist_968+1)& (0+255),7,b
  3232  002708  D006               	goto	u8600
  3233  00270A  510B               	movf	(ultrasonic_main@min_us_dist_968+1)& (0+255),w,b
  3234  00270C  E108               	bnz	l7991
  3235  00270E  0E0E               	movlw	14
  3236  002710  5D0A               	subwf	ultrasonic_main@min_us_dist_968& (0+255),w,b
  3237  002712  B0D8               	btfsc	status,0,c
  3238  002714  D004               	goto	l7991
  3239  002716                     u8600:
  3240                           
  3241                           ; BSR set to: 1
  3242                           ;main.c: 318:             step2_offset = 0;
  3243  002716  0E00               	movlw	0
  3244  002718  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3245  00271A  0E00               	movlw	0
  3246  00271C  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3247  00271E                     l7991:
  3248                           
  3249                           ; BSR set to: 1
  3250                           ;main.c: 320:         if (min_us_dist>=14){
  3251  00271E  BF0B               	btfsc	(ultrasonic_main@min_us_dist_968+1)& (0+255),7,b
  3252  002720  D015               	goto	l7995
  3253  002722  510B               	movf	(ultrasonic_main@min_us_dist_968+1)& (0+255),w,b
  3254  002724  E104               	bnz	u8610
  3255  002726  0E0E               	movlw	14
  3256  002728  5D0A               	subwf	ultrasonic_main@min_us_dist_968& (0+255),w,b
  3257  00272A  A0D8               	btfss	status,0,c
  3258  00272C  D00F               	goto	l7995
  3259  00272E                     u8610:
  3260                           
  3261                           ; BSR set to: 1
  3262                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  3263  00272E  0EF2               	movlw	242
  3264  002730  250A               	addwf	ultrasonic_main@min_us_dist_968& (0+255),w,b
  3265  002732  0100               	movlb	0	; () banked
  3266  002734  6F92               	movwf	abs@a& (0+255),b
  3267  002736  0EFF               	movlw	255
  3268  002738  0101               	movlb	1	; () banked
  3269  00273A  210B               	addwfc	(ultrasonic_main@min_us_dist_968+1)& (0+255),w,b
  3270  00273C  0100               	movlb	0	; () banked
  3271  00273E  6F93               	movwf	(abs@a+1)& (0+255),b
  3272  002740  EC76  F01E         	call	_abs	;wreg free
  3273  002744  C092  F106         	movff	?_abs,ultrasonic_main@step2_offset
  3274  002748  C093  F107         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  3275  00274C                     l7995:
  3276                           
  3277                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  3278  00274C  0E6E               	movlw	110
  3279  00274E  0101               	movlb	1	; () banked
  3280  002750  2506               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  3281  002752  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3282  002754  0E00               	movlw	0
  3283  002756  2107               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  3284  002758  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3285                           
  3286                           ; BSR set to: 1
  3287                           ;main.c: 324:         sensed++;
  3288  00275A  4B04               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  3289  00275C  2B05               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  3290                           
  3291                           ; BSR set to: 1
  3292                           ;main.c: 327:         }
  3293  00275E  4A50               	infsnz	_meas,f,c	;volatile
  3294  002760  2A51               	incf	_meas+1,f,c	;volatile
  3295  002762  D79C               	goto	l7967
  3296  002764                     l8003:
  3297                           
  3298                           ; BSR set to: 1
  3299                           ;main.c: 328:         if (sensed>2){
  3300  002764  BF05               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  3301  002766  D006               	goto	l466
  3302  002768  5105               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  3303  00276A  E107               	bnz	l8009
  3304  00276C  0E03               	movlw	3
  3305  00276E  5D04               	subwf	ultrasonic_main@sensed& (0+255),w,b
  3306  002770  B0D8               	btfsc	status,0,c
  3307  002772  D003               	goto	u8630
  3308  002774                     l466:
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;main.c: 307:     while(send){
  3312  002774  506D               	movf	_send,w,c
  3313  002776  A4D8               	btfss	status,2,c
  3314  002778  D78D               	goto	l7965
  3315  00277A                     u8630:
  3316  00277A                     l8009:
  3317                           
  3318                           ; BSR set to: 1
  3319                           ;main.c: 375:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3320  00277A  0E01               	movlw	1
  3321  00277C  EC9D  F01F         	call	_lcdInst
  3322  002780  0E11               	movlw	17
  3323  002782  0101               	movlb	1	; () banked
  3324  002784  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3325  002786  0E3A               	movlw	58
  3326  002788                     u9527:
  3327  002788  2EE8               	decfsz	wreg,f,c
  3328  00278A  D7FE               	bra	u9527
  3329  00278C  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3330  00278E  D7FC               	bra	u9527
  3331  002790  F000               	nop	
  3332                           
  3333                           ;main.c: 376:     printf("stepsadj %d", steps2_adj);
  3334  002792  0E23               	movlw	low STR_21
  3335  002794  0100               	movlb	0	; () banked
  3336  002796  6FED               	movwf	printf@fmt& (0+255),b
  3337  002798  0EFF               	movlw	high STR_21
  3338  00279A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3339  00279C  C108  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3340  0027A0  C109  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3341  0027A4  EC37  F01F         	call	_printf	;wreg free
  3342                           
  3343                           ;main.c: 377:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3344  0027A8  0E0D               	movlw	13
  3345  0027AA  0101               	movlb	1	; () banked
  3346  0027AC  6F01               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3347  0027AE  0EAF               	movlw	175
  3348  0027B0  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3349  0027B2  0EB6               	movlw	182
  3350  0027B4                     u9537:
  3351  0027B4  2EE8               	decfsz	wreg,f,c
  3352  0027B6  D7FE               	bra	u9537
  3353  0027B8  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3354  0027BA  D7FC               	bra	u9537
  3355  0027BC  2F01               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3356  0027BE  D7FA               	bra	u9537
  3357  0027C0  F000               	nop	
  3358                           
  3359                           ;main.c: 378:     return steps2_adj;
  3360  0027C2  C108  F0FC         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3361  0027C6  C109  F0FD         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3362  0027CA  0012               	return		;funcret
  3363  0027CC                     __end_of_ultrasonic_main:
  3364                           	opt callstack 0
  3365                           
  3366 ;; *************** function _trig *****************
  3367 ;; Defined at:
  3368 ;;		line 190 in file "main.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;Total ram usage:        2 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    3
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_ultrasonic_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text2
  3397  00306A                     __ptext2:
  3398                           	opt callstack 0
  3399  00306A                     _trig:
  3400                           	opt callstack 26
  3401                           
  3402                           ;main.c: 191:     for(b=1; b<5; b++){
  3403                           
  3404                           ;incstack = 0
  3405  00306A  0E00               	movlw	0
  3406  00306C  6E5B               	movwf	_b+1,c
  3407  00306E  0E01               	movlw	1
  3408  003070  6E5A               	movwf	_b,c
  3409  003072  BE5B               	btfsc	_b+1,7,c
  3410  003074  D004               	goto	l7651
  3411  003076  505B               	movf	_b+1,w,c
  3412  003078  E101               	bnz	u8180
  3413  00307A  D072               	goto	L1
  3414  00307C                     u8180:
  3415  00307C  0012               	return	
  3416  00307E                     l7651:
  3417                           
  3418                           ;main.c: 192:         TMR1H = 0;
  3419  00307E  0E00               	movlw	0
  3420  003080  6ECF               	movwf	4047,c	;volatile
  3421                           
  3422                           ;main.c: 193:         TMR1L = 0;
  3423  003082  0E00               	movlw	0
  3424  003084  6ECE               	movwf	4046,c	;volatile
  3425                           
  3426                           ;main.c: 194:         if(b==1){
  3427  003086  045A               	decf	_b,w,c
  3428  003088  105B               	iorwf	_b+1,w,c
  3429  00308A  A4D8               	btfss	status,2,c
  3430  00308C  D015               	goto	l7663
  3431                           
  3432                           ;main.c: 195:             RBIE = 0;
  3433  00308E  96F2               	bcf	4082,3,c	;volatile
  3434                           
  3435                           ;main.c: 196:             RD1 = 1;
  3436  003090  8283               	bsf	3971,1,c	;volatile
  3437                           
  3438                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3439  003092  0E08               	movlw	8
  3440  003094                     u9547:
  3441  003094  2EE8               	decfsz	wreg,f,c
  3442  003096  D7FE               	bra	u9547
  3443  003098  F000               	nop	
  3444                           
  3445                           ;main.c: 198:             RD1 = 0;
  3446  00309A  9283               	bcf	3971,1,c	;volatile
  3447                           
  3448                           ;main.c: 200:             RBIE = 1;
  3449  00309C  86F2               	bsf	4082,3,c	;volatile
  3450                           
  3451                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3452  00309E  0E02               	movlw	2
  3453  0030A0  0100               	movlb	0	; () banked
  3454  0030A2  6F81               	movwf	(??_trig+1)& (0+255),b
  3455  0030A4  0EB7               	movlw	183
  3456  0030A6  6F80               	movwf	??_trig& (0+255),b
  3457  0030A8  0E4C               	movlw	76
  3458  0030AA                     u9557:
  3459  0030AA  2EE8               	decfsz	wreg,f,c
  3460  0030AC  D7FE               	bra	u9557
  3461  0030AE  2F80               	decfsz	??_trig& (0+255),f,b
  3462  0030B0  D7FC               	bra	u9557
  3463  0030B2  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3464  0030B4  D7FA               	bra	u9557
  3465  0030B6  F000               	nop	
  3466  0030B8                     l7663:
  3467                           
  3468                           ;main.c: 203:         if(b==2){
  3469  0030B8  0E02               	movlw	2
  3470  0030BA  185A               	xorwf	_b,w,c
  3471  0030BC  105B               	iorwf	_b+1,w,c
  3472  0030BE  A4D8               	btfss	status,2,c
  3473  0030C0  D015               	goto	l7673
  3474                           
  3475                           ;main.c: 204:             RBIE = 0;
  3476  0030C2  96F2               	bcf	4082,3,c	;volatile
  3477                           
  3478                           ;main.c: 205:             RD0 = 1;
  3479  0030C4  8083               	bsf	3971,0,c	;volatile
  3480                           
  3481                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3482  0030C6  0E08               	movlw	8
  3483  0030C8                     u9567:
  3484  0030C8  2EE8               	decfsz	wreg,f,c
  3485  0030CA  D7FE               	bra	u9567
  3486  0030CC  F000               	nop	
  3487                           
  3488                           ;main.c: 207:             RD0 = 0;
  3489  0030CE  9083               	bcf	3971,0,c	;volatile
  3490                           
  3491                           ;main.c: 209:             RBIE = 1;
  3492  0030D0  86F2               	bsf	4082,3,c	;volatile
  3493                           
  3494                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3495  0030D2  0E02               	movlw	2
  3496  0030D4  0100               	movlb	0	; () banked
  3497  0030D6  6F81               	movwf	(??_trig+1)& (0+255),b
  3498  0030D8  0EB7               	movlw	183
  3499  0030DA  6F80               	movwf	??_trig& (0+255),b
  3500  0030DC  0E4C               	movlw	76
  3501  0030DE                     u9577:
  3502  0030DE  2EE8               	decfsz	wreg,f,c
  3503  0030E0  D7FE               	bra	u9577
  3504  0030E2  2F80               	decfsz	??_trig& (0+255),f,b
  3505  0030E4  D7FC               	bra	u9577
  3506  0030E6  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3507  0030E8  D7FA               	bra	u9577
  3508  0030EA  F000               	nop	
  3509  0030EC                     l7673:
  3510                           
  3511                           ;main.c: 212:         if(b==3){
  3512  0030EC  0E03               	movlw	3
  3513  0030EE  185A               	xorwf	_b,w,c
  3514  0030F0  105B               	iorwf	_b+1,w,c
  3515  0030F2  A4D8               	btfss	status,2,c
  3516  0030F4  D015               	goto	l7683
  3517                           
  3518                           ;main.c: 213:             RBIE = 0;
  3519  0030F6  96F2               	bcf	4082,3,c	;volatile
  3520                           
  3521                           ;main.c: 214:             RB3 = 1;
  3522  0030F8  8681               	bsf	3969,3,c	;volatile
  3523                           
  3524                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3525  0030FA  0E08               	movlw	8
  3526  0030FC                     u9587:
  3527  0030FC  2EE8               	decfsz	wreg,f,c
  3528  0030FE  D7FE               	bra	u9587
  3529  003100  F000               	nop	
  3530                           
  3531                           ;main.c: 216:             RB3 = 0;
  3532  003102  9681               	bcf	3969,3,c	;volatile
  3533                           
  3534                           ;main.c: 218:             RBIE = 1;
  3535  003104  86F2               	bsf	4082,3,c	;volatile
  3536                           
  3537                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3538  003106  0E02               	movlw	2
  3539  003108  0100               	movlb	0	; () banked
  3540  00310A  6F81               	movwf	(??_trig+1)& (0+255),b
  3541  00310C  0EB7               	movlw	183
  3542  00310E  6F80               	movwf	??_trig& (0+255),b
  3543  003110  0E4C               	movlw	76
  3544  003112                     u9597:
  3545  003112  2EE8               	decfsz	wreg,f,c
  3546  003114  D7FE               	bra	u9597
  3547  003116  2F80               	decfsz	??_trig& (0+255),f,b
  3548  003118  D7FC               	bra	u9597
  3549  00311A  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3550  00311C  D7FA               	bra	u9597
  3551  00311E  F000               	nop	
  3552  003120                     l7683:
  3553                           
  3554                           ;main.c: 221:         if(b==4){
  3555  003120  0E04               	movlw	4
  3556  003122  185A               	xorwf	_b,w,c
  3557  003124  105B               	iorwf	_b+1,w,c
  3558  003126  A4D8               	btfss	status,2,c
  3559  003128  D015               	goto	l7693
  3560                           
  3561                           ;main.c: 222:             RBIE = 0;
  3562  00312A  96F2               	bcf	4082,3,c	;volatile
  3563                           
  3564                           ;main.c: 223:             RB2 = 1;
  3565  00312C  8481               	bsf	3969,2,c	;volatile
  3566                           
  3567                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3568  00312E  0E08               	movlw	8
  3569  003130                     u9607:
  3570  003130  2EE8               	decfsz	wreg,f,c
  3571  003132  D7FE               	bra	u9607
  3572  003134  F000               	nop	
  3573                           
  3574                           ;main.c: 225:             RB2 = 0;
  3575  003136  9481               	bcf	3969,2,c	;volatile
  3576                           
  3577                           ;main.c: 227:             RBIE = 1;
  3578  003138  86F2               	bsf	4082,3,c	;volatile
  3579                           
  3580                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3581  00313A  0E02               	movlw	2
  3582  00313C  0100               	movlb	0	; () banked
  3583  00313E  6F81               	movwf	(??_trig+1)& (0+255),b
  3584  003140  0EB7               	movlw	183
  3585  003142  6F80               	movwf	??_trig& (0+255),b
  3586  003144  0E4C               	movlw	76
  3587  003146                     u9617:
  3588  003146  2EE8               	decfsz	wreg,f,c
  3589  003148  D7FE               	bra	u9617
  3590  00314A  2F80               	decfsz	??_trig& (0+255),f,b
  3591  00314C  D7FC               	bra	u9617
  3592  00314E  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3593  003150  D7FA               	bra	u9617
  3594  003152  F000               	nop	
  3595  003154                     l7693:
  3596                           
  3597                           ;main.c: 230:     }
  3598  003154  4A5A               	infsnz	_b,f,c
  3599  003156  2A5B               	incf	_b+1,f,c
  3600  003158  BE5B               	btfsc	_b+1,7,c
  3601  00315A  D791               	goto	l7651
  3602  00315C  505B               	movf	_b+1,w,c
  3603  00315E  E105               	bnz	u8230
  3604  003160                     L1:
  3605  003160  0E05               	movlw	5
  3606  003162  5C5A               	subwf	_b,w,c
  3607  003164  B0D8               	btfsc	status,0,c
  3608  003166  0012               	return	
  3609  003168  D78A               	goto	l7651
  3610  00316A                     u8230:
  3611  00316A  0012               	return		;funcret
  3612  00316C                     __end_of_trig:
  3613                           	opt callstack 0
  3614                           
  3615 ;; *************** function _print_echo *****************
  3616 ;; Defined at:
  3617 ;;		line 233 in file "main.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;Total ram usage:        1 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:   14
  3638 ;; This function calls:
  3639 ;;		_lcdInst
  3640 ;;		_printf
  3641 ;; This function is called by:
  3642 ;;		_ultrasonic_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text3
  3647  002432                     __ptext3:
  3648                           	opt callstack 0
  3649  002432                     _print_echo:
  3650                           	opt callstack 15
  3651                           
  3652                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3653                           
  3654                           ;incstack = 0
  3655  002432  0E01               	movlw	1
  3656  002434  EC9D  F01F         	call	_lcdInst
  3657  002438  0E11               	movlw	17
  3658  00243A  0100               	movlb	0	; () banked
  3659  00243C  6FFB               	movwf	??_print_echo& (0+255),b
  3660  00243E  0E3A               	movlw	58
  3661  002440                     u9627:
  3662  002440  2EE8               	decfsz	wreg,f,c
  3663  002442  D7FE               	bra	u9627
  3664  002444  2FFB               	decfsz	??_print_echo& (0+255),f,b
  3665  002446  D7FC               	bra	u9627
  3666  002448  F000               	nop	
  3667                           
  3668                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3669  00244A  BE62               	btfsc	_a+1,7,c
  3670  00244C  D01D               	goto	l7705
  3671  00244E  5062               	movf	_a+1,w,c
  3672  002450  E104               	bnz	u8240
  3673  002452  0E02               	movlw	2
  3674  002454  5C61               	subwf	_a,w,c
  3675  002456  A0D8               	btfss	status,0,c
  3676  002458  D017               	goto	l7705
  3677  00245A                     u8240:
  3678  00245A  BE62               	btfsc	_a+1,7,c
  3679  00245C  D006               	goto	u8250
  3680  00245E  0E91               	movlw	145
  3681  002460  5C61               	subwf	_a,w,c
  3682  002462  0E01               	movlw	1
  3683  002464  5862               	subwfb	_a+1,w,c
  3684  002466  B0D8               	btfsc	status,0,c
  3685  002468  D00F               	goto	l7705
  3686  00246A                     u8250:
  3687                           
  3688                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3689  00246A  0EE8               	movlw	low STR_10
  3690  00246C  0100               	movlb	0	; () banked
  3691  00246E  6FED               	movwf	printf@fmt& (0+255),b
  3692  002470  0EFD               	movlw	high STR_10
  3693  002472  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3694  002474  C061  F0EF         	movff	_a,?_printf+2
  3695  002478  C062  F0F0         	movff	_a+1,?_printf+3
  3696  00247C  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3697  002480  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3698  002484  EC37  F01F         	call	_printf	;wreg free
  3699  002488                     l7705:
  3700                           
  3701                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3702  002488  BE62               	btfsc	_a+1,7,c
  3703  00248A  D00E               	goto	u8270
  3704  00248C  5062               	movf	_a+1,w,c
  3705  00248E  E104               	bnz	u8260
  3706  002490  0E02               	movlw	2
  3707  002492  5C61               	subwf	_a,w,c
  3708  002494  A0D8               	btfss	status,0,c
  3709  002496  D008               	goto	u8270
  3710  002498                     u8260:
  3711  002498  BE62               	btfsc	_a+1,7,c
  3712  00249A  D00D               	goto	l7711
  3713  00249C  0E91               	movlw	145
  3714  00249E  5C61               	subwf	_a,w,c
  3715  0024A0  0E01               	movlw	1
  3716  0024A2  5862               	subwfb	_a+1,w,c
  3717  0024A4  A0D8               	btfss	status,0,c
  3718  0024A6  D007               	goto	l7711
  3719  0024A8                     u8270:
  3720                           
  3721                           ;main.c: 239:         printf("Dist1 = X");
  3722  0024A8  0E7F               	movlw	low STR_11
  3723  0024AA  0100               	movlb	0	; () banked
  3724  0024AC  6FED               	movwf	printf@fmt& (0+255),b
  3725  0024AE  0EFF               	movlw	high STR_11
  3726  0024B0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3727  0024B2  EC37  F01F         	call	_printf	;wreg free
  3728  0024B6                     l7711:
  3729                           
  3730                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3731  0024B6  BE64               	btfsc	_a+3,7,c
  3732  0024B8  D020               	goto	l7719
  3733  0024BA  5064               	movf	_a+3,w,c
  3734  0024BC  E104               	bnz	u8280
  3735  0024BE  0E02               	movlw	2
  3736  0024C0  5C63               	subwf	_a+2,w,c
  3737  0024C2  A0D8               	btfss	status,0,c
  3738  0024C4  D01A               	goto	l7719
  3739  0024C6                     u8280:
  3740  0024C6  BE64               	btfsc	_a+3,7,c
  3741  0024C8  D006               	goto	u8290
  3742  0024CA  0E91               	movlw	145
  3743  0024CC  5C63               	subwf	_a+2,w,c
  3744  0024CE  0E01               	movlw	1
  3745  0024D0  5864               	subwfb	_a+3,w,c
  3746  0024D2  B0D8               	btfsc	status,0,c
  3747  0024D4  D012               	goto	l7719
  3748  0024D6                     u8290:
  3749  0024D6  0EC0               	movlw	192
  3750  0024D8  EC9D  F01F         	call	_lcdInst
  3751                           
  3752                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3753  0024DC  0E4D               	movlw	low STR_12
  3754  0024DE  0100               	movlb	0	; () banked
  3755  0024E0  6FED               	movwf	printf@fmt& (0+255),b
  3756  0024E2  0EFE               	movlw	high STR_12
  3757  0024E4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3758  0024E6  C063  F0EF         	movff	_a+2,?_printf+2
  3759  0024EA  C064  F0F0         	movff	_a+3,?_printf+3
  3760  0024EE  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3761  0024F2  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3762  0024F6  EC37  F01F         	call	_printf	;wreg free
  3763  0024FA                     l7719:
  3764                           
  3765                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3766  0024FA  BE64               	btfsc	_a+3,7,c
  3767  0024FC  D00E               	goto	u8310
  3768  0024FE  5064               	movf	_a+3,w,c
  3769  002500  E104               	bnz	u8300
  3770  002502  0E02               	movlw	2
  3771  002504  5C63               	subwf	_a+2,w,c
  3772  002506  A0D8               	btfss	status,0,c
  3773  002508  D008               	goto	u8310
  3774  00250A                     u8300:
  3775  00250A  BE64               	btfsc	_a+3,7,c
  3776  00250C  D010               	goto	l7727
  3777  00250E  0E91               	movlw	145
  3778  002510  5C63               	subwf	_a+2,w,c
  3779  002512  0E01               	movlw	1
  3780  002514  5864               	subwfb	_a+3,w,c
  3781  002516  A0D8               	btfss	status,0,c
  3782  002518  D00A               	goto	l7727
  3783  00251A                     u8310:
  3784  00251A  0EC0               	movlw	192
  3785  00251C  EC9D  F01F         	call	_lcdInst
  3786                           
  3787                           ;main.c: 247:         printf("Dist2 = X");
  3788  002520  0E89               	movlw	low STR_13
  3789  002522  0100               	movlb	0	; () banked
  3790  002524  6FED               	movwf	printf@fmt& (0+255),b
  3791  002526  0EFF               	movlw	high STR_13
  3792  002528  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3793  00252A  EC37  F01F         	call	_printf	;wreg free
  3794  00252E                     l7727:
  3795                           
  3796                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3797  00252E  BE66               	btfsc	_a+5,7,c
  3798  002530  D020               	goto	l7735
  3799  002532  5066               	movf	_a+5,w,c
  3800  002534  E104               	bnz	u8320
  3801  002536  0E02               	movlw	2
  3802  002538  5C65               	subwf	_a+4,w,c
  3803  00253A  A0D8               	btfss	status,0,c
  3804  00253C  D01A               	goto	l7735
  3805  00253E                     u8320:
  3806  00253E  BE66               	btfsc	_a+5,7,c
  3807  002540  D006               	goto	u8330
  3808  002542  0E91               	movlw	145
  3809  002544  5C65               	subwf	_a+4,w,c
  3810  002546  0E01               	movlw	1
  3811  002548  5866               	subwfb	_a+5,w,c
  3812  00254A  B0D8               	btfsc	status,0,c
  3813  00254C  D012               	goto	l7735
  3814  00254E                     u8330:
  3815  00254E  0E90               	movlw	144
  3816  002550  EC9D  F01F         	call	_lcdInst
  3817                           
  3818                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3819  002554  0E5D               	movlw	low STR_14
  3820  002556  0100               	movlb	0	; () banked
  3821  002558  6FED               	movwf	printf@fmt& (0+255),b
  3822  00255A  0EFE               	movlw	high STR_14
  3823  00255C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3824  00255E  C065  F0EF         	movff	_a+4,?_printf+2
  3825  002562  C066  F0F0         	movff	_a+5,?_printf+3
  3826  002566  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3827  00256A  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3828  00256E  EC37  F01F         	call	_printf	;wreg free
  3829  002572                     l7735:
  3830                           
  3831                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3832  002572  BE66               	btfsc	_a+5,7,c
  3833  002574  D00E               	goto	u8350
  3834  002576  5066               	movf	_a+5,w,c
  3835  002578  E104               	bnz	u8340
  3836  00257A  0E02               	movlw	2
  3837  00257C  5C65               	subwf	_a+4,w,c
  3838  00257E  A0D8               	btfss	status,0,c
  3839  002580  D008               	goto	u8350
  3840  002582                     u8340:
  3841  002582  BE66               	btfsc	_a+5,7,c
  3842  002584  D010               	goto	l7743
  3843  002586  0E91               	movlw	145
  3844  002588  5C65               	subwf	_a+4,w,c
  3845  00258A  0E01               	movlw	1
  3846  00258C  5866               	subwfb	_a+5,w,c
  3847  00258E  A0D8               	btfss	status,0,c
  3848  002590  D00A               	goto	l7743
  3849  002592                     u8350:
  3850  002592  0E90               	movlw	144
  3851  002594  EC9D  F01F         	call	_lcdInst
  3852                           
  3853                           ;main.c: 255:         printf("Dist3 = X");
  3854  002598  0E93               	movlw	low STR_15
  3855  00259A  0100               	movlb	0	; () banked
  3856  00259C  6FED               	movwf	printf@fmt& (0+255),b
  3857  00259E  0EFF               	movlw	high STR_15
  3858  0025A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3859  0025A2  EC37  F01F         	call	_printf	;wreg free
  3860  0025A6                     l7743:
  3861                           
  3862                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3863  0025A6  BE68               	btfsc	_a+7,7,c
  3864  0025A8  D020               	goto	l7751
  3865  0025AA  5068               	movf	_a+7,w,c
  3866  0025AC  E104               	bnz	u8360
  3867  0025AE  0E02               	movlw	2
  3868  0025B0  5C67               	subwf	_a+6,w,c
  3869  0025B2  A0D8               	btfss	status,0,c
  3870  0025B4  D01A               	goto	l7751
  3871  0025B6                     u8360:
  3872  0025B6  BE68               	btfsc	_a+7,7,c
  3873  0025B8  D006               	goto	u8370
  3874  0025BA  0E91               	movlw	145
  3875  0025BC  5C67               	subwf	_a+6,w,c
  3876  0025BE  0E01               	movlw	1
  3877  0025C0  5868               	subwfb	_a+7,w,c
  3878  0025C2  B0D8               	btfsc	status,0,c
  3879  0025C4  D012               	goto	l7751
  3880  0025C6                     u8370:
  3881  0025C6  0ED0               	movlw	208
  3882  0025C8  EC9D  F01F         	call	_lcdInst
  3883                           
  3884                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3885  0025CC  0EF9               	movlw	low STR_16
  3886  0025CE  0100               	movlb	0	; () banked
  3887  0025D0  6FED               	movwf	printf@fmt& (0+255),b
  3888  0025D2  0EFD               	movlw	high STR_16
  3889  0025D4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3890  0025D6  C067  F0EF         	movff	_a+6,?_printf+2
  3891  0025DA  C068  F0F0         	movff	_a+7,?_printf+3
  3892  0025DE  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3893  0025E2  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3894  0025E6  EC37  F01F         	call	_printf	;wreg free
  3895  0025EA                     l7751:
  3896                           
  3897                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3898  0025EA  BE68               	btfsc	_a+7,7,c
  3899  0025EC  D00E               	goto	u8390
  3900  0025EE  5068               	movf	_a+7,w,c
  3901  0025F0  E104               	bnz	u8380
  3902  0025F2  0E02               	movlw	2
  3903  0025F4  5C67               	subwf	_a+6,w,c
  3904  0025F6  A0D8               	btfss	status,0,c
  3905  0025F8  D008               	goto	u8390
  3906  0025FA                     u8380:
  3907  0025FA  BE68               	btfsc	_a+7,7,c
  3908  0025FC  0012               	return	
  3909  0025FE  0E91               	movlw	145
  3910  002600  5C67               	subwf	_a+6,w,c
  3911  002602  0E01               	movlw	1
  3912  002604  5868               	subwfb	_a+7,w,c
  3913  002606  A0D8               	btfss	status,0,c
  3914  002608  0012               	return	
  3915  00260A                     u8390:
  3916  00260A  0ED0               	movlw	208
  3917  00260C  EC9D  F01F         	call	_lcdInst
  3918                           
  3919                           ;main.c: 264:         printf("Dist4 = X");
  3920  002610  0E9D               	movlw	low STR_17
  3921  002612  0100               	movlb	0	; () banked
  3922  002614  6FED               	movwf	printf@fmt& (0+255),b
  3923  002616  0EFF               	movlw	high STR_17
  3924  002618  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3925  00261A  EC37  F01F         	call	_printf	;wreg free
  3926  00261E  0012               	return		;funcret
  3927  002620                     __end_of_print_echo:
  3928                           	opt callstack 0
  3929                           
  3930 ;; *************** function _min *****************
  3931 ;; Defined at:
  3932 ;;		line 267 in file "main.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  array           2    0[BANK0 ] PTR int 
  3935 ;;		 -> a(8), 
  3936 ;;  size            2    2[BANK0 ] int 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  i               2    9[BANK0 ] int 
  3939 ;;  minimum         2    7[BANK0 ] int 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  2    0[BANK0 ] int 
  3942 ;; Registers used:
  3943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3949 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;Total ram usage:       11 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    3
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_ultrasonic_main
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text4
  3964  002F5A                     __ptext4:
  3965                           	opt callstack 0
  3966  002F5A                     _min:
  3967                           	opt callstack 26
  3968                           
  3969                           ;main.c: 268:     int minimum =0 ;
  3970                           
  3971                           ;incstack = 0
  3972  002F5A  0E00               	movlw	0
  3973  002F5C  0100               	movlb	0	; () banked
  3974  002F5E  6F88               	movwf	(min@minimum+1)& (0+255),b
  3975  002F60  0E00               	movlw	0
  3976  002F62  6F87               	movwf	min@minimum& (0+255),b
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;main.c: 269:     if (array[0]<=23){
  3980  002F64  C080  FFD9         	movff	min@array,fsr2l
  3981  002F68  C081  FFDA         	movff	min@array+1,fsr2h
  3982  002F6C  0E01               	movlw	1
  3983  002F6E  BEDB               	btfsc	plusw2,7,c
  3984  002F70  D007               	goto	u8400
  3985  002F72  0E01               	movlw	1
  3986  002F74  50DB               	movf	plusw2,w,c
  3987  002F76  E10C               	bnz	l7765
  3988  002F78  0E18               	movlw	24
  3989  002F7A  5CDE               	subwf	postinc2,w,c
  3990  002F7C  B0D8               	btfsc	status,0,c
  3991  002F7E  D008               	goto	l7765
  3992  002F80                     u8400:
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;main.c: 270:          minimum = array[0];}
  3996  002F80  C080  FFD9         	movff	min@array,fsr2l
  3997  002F84  C081  FFDA         	movff	min@array+1,fsr2h
  3998  002F88  CFDE F087          	movff	postinc2,min@minimum
  3999  002F8C  CFDD F088          	movff	postdec2,min@minimum+1
  4000  002F90                     l7765:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;main.c: 274:     for (int i = 0; i<size; i++){
  4004  002F90  0E00               	movlw	0
  4005  002F92  6F8A               	movwf	(min@i+1)& (0+255),b
  4006  002F94  0E00               	movlw	0
  4007  002F96  6F89               	movwf	min@i& (0+255),b
  4008  002F98  D059               	goto	l7781
  4009  002F9A                     l7767:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  4013  002F9A  5187               	movf	min@minimum& (0+255),w,b
  4014  002F9C  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  4015  002F9E  B4D8               	btfsc	status,2,c
  4016  002FA0  D046               	goto	u8450
  4017                           
  4018                           ; BSR set to: 0
  4019  002FA2  90D8               	bcf	status,0,c
  4020  002FA4  3589               	rlcf	min@i& (0+255),w,b
  4021  002FA6  6ED9               	movwf	fsr2l,c
  4022  002FA8  358A               	rlcf	(min@i+1)& (0+255),w,b
  4023  002FAA  6EDA               	movwf	fsr2h,c
  4024  002FAC  5180               	movf	min@array& (0+255),w,b
  4025  002FAE  26D9               	addwf	fsr2l,f,c
  4026  002FB0  5181               	movf	(min@array+1)& (0+255),w,b
  4027  002FB2  22DA               	addwfc	fsr2h,f,c
  4028  002FB4  50DE               	movf	postinc2,w,c
  4029  002FB6  5D87               	subwf	min@minimum& (0+255),w,b
  4030  002FB8  5188               	movf	(min@minimum+1)& (0+255),w,b
  4031  002FBA  0A80               	xorlw	128
  4032  002FBC  6F86               	movwf	(??_min+2)& (0+255),b
  4033  002FBE  50DE               	movf	postinc2,w,c
  4034  002FC0  0A80               	xorlw	128
  4035  002FC2  5986               	subwfb	(??_min+2)& (0+255),w,b
  4036  002FC4  A0D8               	btfss	status,0,c
  4037  002FC6  D040               	goto	l7779
  4038                           
  4039                           ; BSR set to: 0
  4040  002FC8  90D8               	bcf	status,0,c
  4041  002FCA  3589               	rlcf	min@i& (0+255),w,b
  4042  002FCC  6ED9               	movwf	fsr2l,c
  4043  002FCE  358A               	rlcf	(min@i+1)& (0+255),w,b
  4044  002FD0  6EDA               	movwf	fsr2h,c
  4045  002FD2  5180               	movf	min@array& (0+255),w,b
  4046  002FD4  26D9               	addwf	fsr2l,f,c
  4047  002FD6  5181               	movf	(min@array+1)& (0+255),w,b
  4048  002FD8  22DA               	addwfc	fsr2h,f,c
  4049  002FDA  50DE               	movf	postinc2,w,c
  4050  002FDC  10DE               	iorwf	postinc2,w,c
  4051  002FDE  B4D8               	btfsc	status,2,c
  4052  002FE0  D033               	goto	l7779
  4053                           
  4054                           ; BSR set to: 0
  4055  002FE2  90D8               	bcf	status,0,c
  4056  002FE4  3589               	rlcf	min@i& (0+255),w,b
  4057  002FE6  6ED9               	movwf	fsr2l,c
  4058  002FE8  358A               	rlcf	(min@i+1)& (0+255),w,b
  4059  002FEA  6EDA               	movwf	fsr2h,c
  4060  002FEC  5180               	movf	min@array& (0+255),w,b
  4061  002FEE  26D9               	addwf	fsr2l,f,c
  4062  002FF0  5181               	movf	(min@array+1)& (0+255),w,b
  4063  002FF2  22DA               	addwfc	fsr2h,f,c
  4064  002FF4  0E01               	movlw	1
  4065  002FF6  BEDB               	btfsc	plusw2,7,c
  4066  002FF8  D027               	goto	l7779
  4067  002FFA  0E01               	movlw	1
  4068  002FFC  50DB               	movf	plusw2,w,c
  4069  002FFE  E104               	bnz	u8440
  4070  003000  0E0E               	movlw	14
  4071  003002  5CDE               	subwf	postinc2,w,c
  4072  003004  A0D8               	btfss	status,0,c
  4073  003006  D020               	goto	l7779
  4074  003008                     u8440:
  4075                           
  4076                           ; BSR set to: 0
  4077  003008  90D8               	bcf	status,0,c
  4078  00300A  3589               	rlcf	min@i& (0+255),w,b
  4079  00300C  6ED9               	movwf	fsr2l,c
  4080  00300E  358A               	rlcf	(min@i+1)& (0+255),w,b
  4081  003010  6EDA               	movwf	fsr2h,c
  4082  003012  5180               	movf	min@array& (0+255),w,b
  4083  003014  26D9               	addwf	fsr2l,f,c
  4084  003016  5181               	movf	(min@array+1)& (0+255),w,b
  4085  003018  22DA               	addwfc	fsr2h,f,c
  4086  00301A  0E01               	movlw	1
  4087  00301C  BEDB               	btfsc	plusw2,7,c
  4088  00301E  D007               	goto	u8450
  4089  003020  0E01               	movlw	1
  4090  003022  50DB               	movf	plusw2,w,c
  4091  003024  E111               	bnz	l7779
  4092  003026  0E18               	movlw	24
  4093  003028  5CDE               	subwf	postinc2,w,c
  4094  00302A  B0D8               	btfsc	status,0,c
  4095  00302C  D00D               	goto	l7779
  4096  00302E                     u8450:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;main.c: 282:             minimum = array[i];
  4100  00302E  90D8               	bcf	status,0,c
  4101  003030  3589               	rlcf	min@i& (0+255),w,b
  4102  003032  6ED9               	movwf	fsr2l,c
  4103  003034  358A               	rlcf	(min@i+1)& (0+255),w,b
  4104  003036  6EDA               	movwf	fsr2h,c
  4105  003038  5180               	movf	min@array& (0+255),w,b
  4106  00303A  26D9               	addwf	fsr2l,f,c
  4107  00303C  5181               	movf	(min@array+1)& (0+255),w,b
  4108  00303E  22DA               	addwfc	fsr2h,f,c
  4109  003040  CFDE F087          	movff	postinc2,min@minimum
  4110  003044  CFDD F088          	movff	postdec2,min@minimum+1
  4111  003048                     l7779:
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;main.c: 287:     }
  4115  003048  4B89               	infsnz	min@i& (0+255),f,b
  4116  00304A  2B8A               	incf	(min@i+1)& (0+255),f,b
  4117  00304C                     l7781:
  4118                           
  4119                           ; BSR set to: 0
  4120  00304C  5182               	movf	min@size& (0+255),w,b
  4121  00304E  5D89               	subwf	min@i& (0+255),w,b
  4122  003050  518A               	movf	(min@i+1)& (0+255),w,b
  4123  003052  0A80               	xorlw	128
  4124  003054  6F84               	movwf	??_min& (0+255),b
  4125  003056  5183               	movf	(min@size+1)& (0+255),w,b
  4126  003058  0A80               	xorlw	128
  4127  00305A  5984               	subwfb	??_min& (0+255),w,b
  4128  00305C  A0D8               	btfss	status,0,c
  4129  00305E  D79D               	goto	l7767
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;main.c: 288:     return minimum;
  4133  003060  C087  F080         	movff	min@minimum,?_min
  4134  003064  C088  F081         	movff	min@minimum+1,?_min+1
  4135                           
  4136                           ; BSR set to: 0
  4137  003068  0012               	return		;funcret
  4138  00306A                     __end_of_min:
  4139                           	opt callstack 0
  4140                           
  4141 ;; *************** function _start *****************
  4142 ;; Defined at:
  4143 ;;		line 699 in file "main.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;Total ram usage:        0 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    5
  4164 ;; This function calls:
  4165 ;;		_I2C_Master_Init
  4166 ;;		_I2C_Master_Start
  4167 ;;		_I2C_Master_Stop
  4168 ;;		_I2C_Master_Write
  4169 ;; This function is called by:
  4170 ;;		_main
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text5
  4175  003B5E                     __ptext5:
  4176                           	opt callstack 0
  4177  003B5E                     _start:
  4178                           	opt callstack 25
  4179                           
  4180                           ;main.c: 700:     I2C_Master_Init(100000);
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;incstack = 0
  4184  003B5E  0EA0               	movlw	160
  4185  003B60  0100               	movlb	0	; () banked
  4186  003B62  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  4187  003B64  0E86               	movlw	134
  4188  003B66  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  4189  003B68  0E01               	movlw	1
  4190  003B6A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  4191  003B6C  0E00               	movlw	0
  4192  003B6E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  4193  003B70  EC29  F01D         	call	_I2C_Master_Init	;wreg free
  4194                           
  4195                           ;main.c: 701:     I2C_Master_Start();
  4196  003B74  ECAE  F01F         	call	_I2C_Master_Start	;wreg free
  4197                           
  4198                           ;main.c: 702:     I2C_Master_Write(0b00010000);
  4199  003B78  0E00               	movlw	0
  4200  003B7A  0100               	movlb	0	; () banked
  4201  003B7C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4202  003B7E  0E10               	movlw	16
  4203  003B80  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4204  003B82  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  4205                           
  4206                           ;main.c: 703:     I2C_Master_Stop();
  4207  003B86  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  4208                           
  4209                           ;main.c: 705:     I2C_Master_Start();
  4210  003B8A  ECAE  F01F         	call	_I2C_Master_Start	;wreg free
  4211                           
  4212                           ;main.c: 706:     I2C_Master_Write(0b00010000);
  4213  003B8E  0E00               	movlw	0
  4214  003B90  0100               	movlb	0	; () banked
  4215  003B92  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4216  003B94  0E10               	movlw	16
  4217  003B96  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4218  003B98  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  4219                           
  4220                           ;main.c: 707:     I2C_Master_Write('2');
  4221  003B9C  0E00               	movlw	0
  4222  003B9E  0100               	movlb	0	; () banked
  4223  003BA0  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4224  003BA2  0E32               	movlw	50
  4225  003BA4  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4226  003BA6  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  4227                           
  4228                           ;main.c: 708:     I2C_Master_Stop();
  4229  003BAA  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  4230  003BAE  0012               	return		;funcret
  4231  003BB0                     __end_of_start:
  4232                           	opt callstack 0
  4233                           
  4234 ;; *************** function _number_deploy *****************
  4235 ;; Defined at:
  4236 ;;		line 416 in file "main.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  avg_dist        2  123[BANK0 ] int 
  4239 ;;  poles_detect    2  125[BANK0 ] int 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  t_count         2    6[BANK1 ] int 
  4242 ;;  tires_detect    2    4[BANK1 ] int 
  4243 ;;  tires_t         2    2[BANK1 ] int 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2  123[BANK0 ] int 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:       12 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:   14
  4260 ;; This function calls:
  4261 ;;		___awdiv
  4262 ;;		_lcdInst
  4263 ;;		_printf
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text6
  4270  002212                     __ptext6:
  4271                           	opt callstack 0
  4272  002212                     _number_deploy:
  4273                           	opt callstack 16
  4274                           
  4275                           ;main.c: 417:     int tires_t=0;
  4276                           
  4277                           ;incstack = 0
  4278  002212  0E00               	movlw	0
  4279  002214  0101               	movlb	1	; () banked
  4280  002216  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4281  002218  0E00               	movlw	0
  4282  00221A  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4283                           
  4284                           ;main.c: 418:     int tires_detected=0;
  4285  00221C  0E00               	movlw	0
  4286  00221E  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4287  002220  0E00               	movlw	0
  4288  002222  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4289                           
  4290                           ;main.c: 419:     int t_count = 0;
  4291  002224  0E00               	movlw	0
  4292  002226  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4293  002228  0E00               	movlw	0
  4294  00222A  6F06               	movwf	number_deploy@t_count& (0+255),b
  4295                           
  4296                           ;main.c: 422:     while (t_count<3){
  4297  00222C  D0F5               	goto	l8093
  4298  00222E                     l8037:
  4299                           
  4300                           ; BSR set to: 1
  4301                           ;main.c: 423:   if (poles_detected != 0){
  4302  00222E  0100               	movlb	0	; () banked
  4303  002230  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4304  002232  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4305  002234  B4D8               	btfsc	status,2,c
  4306  002236  D031               	goto	l8047
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;main.c: 424:    if ((avg_dist/1000)<30){
  4310  002238  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4311  00223C  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4312  002240  0E03               	movlw	3
  4313  002242  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4314  002244  0EE8               	movlw	232
  4315  002246  6F82               	movwf	___awdiv@divisor& (0+255),b
  4316  002248  ECBF  F01B         	call	___awdiv	;wreg free
  4317  00224C  0100               	movlb	0	; () banked
  4318  00224E  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4319  002250  D006               	goto	u8660
  4320  002252  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4321  002254  E109               	bnz	l8043
  4322  002256  0E1E               	movlw	30
  4323  002258  5D80               	subwf	?___awdiv& (0+255),w,b
  4324  00225A  B0D8               	btfsc	status,0,c
  4325  00225C  D005               	goto	l8043
  4326  00225E                     u8660:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;main.c: 426:     tires_t = 1;
  4330  00225E  0E00               	movlw	0
  4331  002260  0101               	movlb	1	; () banked
  4332  002262  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4333  002264  0E01               	movlw	1
  4334  002266  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4335  002268                     l8043:
  4336                           
  4337                           ;main.c: 428:    if ((avg_dist/1000)>30){
  4338  002268  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4339  00226C  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4340  002270  0E03               	movlw	3
  4341  002272  0100               	movlb	0	; () banked
  4342  002274  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4343  002276  0EE8               	movlw	232
  4344  002278  6F82               	movwf	___awdiv@divisor& (0+255),b
  4345  00227A  ECBF  F01B         	call	___awdiv	;wreg free
  4346  00227E  0100               	movlb	0	; () banked
  4347  002280  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4348  002282  D00B               	goto	l8047
  4349  002284  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4350  002286  E104               	bnz	u8670
  4351  002288  0E1F               	movlw	31
  4352  00228A  5D80               	subwf	?___awdiv& (0+255),w,b
  4353  00228C  A0D8               	btfss	status,0,c
  4354  00228E  D005               	goto	l8047
  4355  002290                     u8670:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;main.c: 429:     tires_t = 2;
  4359  002290  0E00               	movlw	0
  4360  002292  0101               	movlb	1	; () banked
  4361  002294  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4362  002296  0E02               	movlw	2
  4363  002298  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4364  00229A                     l8047:
  4365                           
  4366                           ;main.c: 433:   if (poles_detected == 0){
  4367  00229A  0100               	movlb	0	; () banked
  4368  00229C  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4369  00229E  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4370  0022A0  A4D8               	btfss	status,2,c
  4371  0022A2  D005               	goto	l8051
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;main.c: 434:    tires_t = 2;
  4375  0022A4  0E00               	movlw	0
  4376  0022A6  0101               	movlb	1	; () banked
  4377  0022A8  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4378  0022AA  0E02               	movlw	2
  4379  0022AC  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4380  0022AE                     l8051:
  4381                           
  4382                           ;main.c: 437:   if ((a[0]>=2 && a[0] <= 15)){
  4383  0022AE  BE62               	btfsc	_a+1,7,c
  4384  0022B0  D028               	goto	l8063
  4385  0022B2  5062               	movf	_a+1,w,c
  4386  0022B4  E104               	bnz	u8690
  4387  0022B6  0E02               	movlw	2
  4388  0022B8  5C61               	subwf	_a,w,c
  4389  0022BA  A0D8               	btfss	status,0,c
  4390  0022BC  D022               	goto	l8063
  4391  0022BE                     u8690:
  4392  0022BE  BE62               	btfsc	_a+1,7,c
  4393  0022C0  D006               	goto	u8700
  4394  0022C2  5062               	movf	_a+1,w,c
  4395  0022C4  E11E               	bnz	l8063
  4396  0022C6  0E10               	movlw	16
  4397  0022C8  5C61               	subwf	_a,w,c
  4398  0022CA  B0D8               	btfsc	status,0,c
  4399  0022CC  D01A               	goto	l8063
  4400  0022CE                     u8700:
  4401                           
  4402                           ;main.c: 439:             if ((a[1]>=2 && a[1] <= 15)){
  4403  0022CE  BE64               	btfsc	_a+3,7,c
  4404  0022D0  D013               	goto	l8061
  4405  0022D2  5064               	movf	_a+3,w,c
  4406  0022D4  E104               	bnz	u8710
  4407  0022D6  0E02               	movlw	2
  4408  0022D8  5C63               	subwf	_a+2,w,c
  4409  0022DA  A0D8               	btfss	status,0,c
  4410  0022DC  D00D               	goto	l8061
  4411  0022DE                     u8710:
  4412  0022DE  BE64               	btfsc	_a+3,7,c
  4413  0022E0  D006               	goto	u8720
  4414  0022E2  5064               	movf	_a+3,w,c
  4415  0022E4  E109               	bnz	l8061
  4416  0022E6  0E10               	movlw	16
  4417  0022E8  5C63               	subwf	_a+2,w,c
  4418  0022EA  B0D8               	btfsc	status,0,c
  4419  0022EC  D005               	goto	l8061
  4420  0022EE                     u8720:
  4421                           
  4422                           ;main.c: 441:                 tires_detected = 1;
  4423  0022EE  0E00               	movlw	0
  4424  0022F0  0101               	movlb	1	; () banked
  4425  0022F2  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4426  0022F4  0E01               	movlw	1
  4427  0022F6  D004               	goto	L2
  4428  0022F8                     l8061:
  4429                           
  4430                           ;main.c: 444:                 tires_detected = 0;
  4431  0022F8  0E00               	movlw	0
  4432  0022FA  0101               	movlb	1	; () banked
  4433  0022FC  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4434  0022FE  0E00               	movlw	0
  4435  002300                     L2:
  4436  002300  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4437  002302                     l8063:
  4438                           
  4439                           ;main.c: 447:         if ((tires_detected==1)){
  4440  002302  0101               	movlb	1	; () banked
  4441  002304  0504               	decf	number_deploy@tires_detected& (0+255),w,b
  4442  002306  1105               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4443  002308  B4D8               	btfsc	status,2,c
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;main.c: 448:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4447  00230A  BE66               	btfsc	_a+5,7,c
  4448  00230C  D020               	goto	l8075
  4449  00230E  5066               	movf	_a+5,w,c
  4450  002310  E104               	bnz	u8740
  4451  002312  0E02               	movlw	2
  4452  002314  5C65               	subwf	_a+4,w,c
  4453  002316  A0D8               	btfss	status,0,c
  4454  002318  D01A               	goto	l8075
  4455  00231A                     u8740:
  4456                           
  4457                           ; BSR set to: 1
  4458  00231A  BE66               	btfsc	_a+5,7,c
  4459  00231C  D006               	goto	u8750
  4460  00231E  5066               	movf	_a+5,w,c
  4461  002320  E116               	bnz	l8075
  4462  002322  0E10               	movlw	16
  4463  002324  5C65               	subwf	_a+4,w,c
  4464  002326  B0D8               	btfsc	status,0,c
  4465  002328  D012               	goto	l8075
  4466  00232A                     u8750:
  4467                           
  4468                           ; BSR set to: 1
  4469  00232A  BE68               	btfsc	_a+7,7,c
  4470  00232C  D010               	goto	l8075
  4471  00232E  5068               	movf	_a+7,w,c
  4472  002330  E104               	bnz	u8760
  4473  002332  0E02               	movlw	2
  4474  002334  5C67               	subwf	_a+6,w,c
  4475  002336  A0D8               	btfss	status,0,c
  4476  002338  D00A               	goto	l8075
  4477  00233A                     u8760:
  4478                           
  4479                           ; BSR set to: 1
  4480  00233A  BE68               	btfsc	_a+7,7,c
  4481  00233C  D006               	goto	u8770
  4482  00233E  5068               	movf	_a+7,w,c
  4483  002340  E106               	bnz	l8075
  4484  002342  0E10               	movlw	16
  4485  002344  5C67               	subwf	_a+6,w,c
  4486  002346  B0D8               	btfsc	status,0,c
  4487  002348  D002               	goto	l8075
  4488  00234A                     u8770:
  4489                           
  4490                           ; BSR set to: 1
  4491                           ;main.c: 449:                 tires_detected++;
  4492  00234A  4B04               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4493  00234C  2B05               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4494  00234E                     l8075:
  4495                           
  4496                           ; BSR set to: 1
  4497                           ;main.c: 453:         t_count = tires_t - tires_detected;
  4498  00234E  5104               	movf	number_deploy@tires_detected& (0+255),w,b
  4499  002350  5D02               	subwf	number_deploy@tires_t& (0+255),w,b
  4500  002352  6F06               	movwf	number_deploy@t_count& (0+255),b
  4501  002354  5105               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4502  002356  5903               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4503  002358  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4504                           
  4505                           ; BSR set to: 1
  4506                           ;main.c: 454:         Pole[poles_detected].tires_deployed = t_count;
  4507  00235A  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4508  00235E  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4509  002362  90D8               	bcf	status,0,c
  4510  002364  3700               	rlcf	??_number_deploy& (0+255),f,b
  4511  002366  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4512  002368  90D8               	bcf	status,0,c
  4513  00236A  3700               	rlcf	??_number_deploy& (0+255),f,b
  4514  00236C  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4515  00236E  90D8               	bcf	status,0,c
  4516  002370  3700               	rlcf	??_number_deploy& (0+255),f,b
  4517  002372  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4518  002374  0E00               	movlw	low _Pole
  4519  002376  2500               	addwf	??_number_deploy& (0+255),w,b
  4520  002378  6ED9               	movwf	fsr2l,c
  4521  00237A  0E02               	movlw	high _Pole
  4522  00237C  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4523  00237E  6EDA               	movwf	fsr2h,c
  4524  002380  C106  FFDE         	movff	number_deploy@t_count,postinc2
  4525  002384  C107  FFDD         	movff	number_deploy@t_count+1,postdec2
  4526                           
  4527                           ; BSR set to: 1
  4528                           ;main.c: 455:         Pole[poles_detected].tires_final = tires_t;
  4529  002388  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4530  00238C  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4531  002390  90D8               	bcf	status,0,c
  4532  002392  3700               	rlcf	??_number_deploy& (0+255),f,b
  4533  002394  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4534  002396  90D8               	bcf	status,0,c
  4535  002398  3700               	rlcf	??_number_deploy& (0+255),f,b
  4536  00239A  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4537  00239C  90D8               	bcf	status,0,c
  4538  00239E  3700               	rlcf	??_number_deploy& (0+255),f,b
  4539  0023A0  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4540  0023A2  0E02               	movlw	low (_Pole+2)
  4541  0023A4  2500               	addwf	??_number_deploy& (0+255),w,b
  4542  0023A6  6ED9               	movwf	fsr2l,c
  4543  0023A8  0E02               	movlw	high (_Pole+2)
  4544  0023AA  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4545  0023AC  6EDA               	movwf	fsr2h,c
  4546  0023AE  C102  FFDE         	movff	number_deploy@tires_t,postinc2
  4547  0023B2  C103  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4548                           
  4549                           ; BSR set to: 1
  4550                           ;main.c: 456:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4551  0023B6  0E01               	movlw	1
  4552  0023B8  EC9D  F01F         	call	_lcdInst
  4553  0023BC  0E11               	movlw	17
  4554  0023BE  0101               	movlb	1	; () banked
  4555  0023C0  6F00               	movwf	??_number_deploy& (0+255),b
  4556  0023C2  0E3A               	movlw	58
  4557  0023C4                     u9637:
  4558  0023C4  2EE8               	decfsz	wreg,f,c
  4559  0023C6  D7FE               	bra	u9637
  4560  0023C8  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4561  0023CA  D7FC               	bra	u9637
  4562  0023CC  F000               	nop	
  4563                           
  4564                           ;main.c: 457:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4565  0023CE  0E3D               	movlw	low STR_22
  4566  0023D0  0100               	movlb	0	; () banked
  4567  0023D2  6FED               	movwf	printf@fmt& (0+255),b
  4568  0023D4  0EFE               	movlw	high STR_22
  4569  0023D6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4570  0023D8  C104  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4571  0023DC  C105  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4572  0023E0  C106  F0F1         	movff	number_deploy@t_count,?_printf+4
  4573  0023E4  C107  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4574  0023E8  EC37  F01F         	call	_printf	;wreg free
  4575                           
  4576                           ;main.c: 458:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4577  0023EC  0E0D               	movlw	13
  4578  0023EE  0101               	movlb	1	; () banked
  4579  0023F0  6F01               	movwf	(??_number_deploy+1)& (0+255),b
  4580  0023F2  0EAF               	movlw	175
  4581  0023F4  6F00               	movwf	??_number_deploy& (0+255),b
  4582  0023F6  0EB6               	movlw	182
  4583  0023F8                     u9647:
  4584  0023F8  2EE8               	decfsz	wreg,f,c
  4585  0023FA  D7FE               	bra	u9647
  4586  0023FC  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4587  0023FE  D7FC               	bra	u9647
  4588  002400  2F01               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4589  002402  D7FA               	bra	u9647
  4590  002404  F000               	nop	
  4591                           
  4592                           ;main.c: 460:         if (t_count<=2){
  4593  002406  0101               	movlb	1	; () banked
  4594  002408  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4595  00240A  D00E               	goto	u8790
  4596  00240C  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4597  00240E  E104               	bnz	l8093
  4598  002410  0E03               	movlw	3
  4599  002412  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4600  002414  A0D8               	btfss	status,0,c
  4601  002416  D008               	goto	u8790
  4602  002418                     l8093:
  4603                           
  4604                           ; BSR set to: 1
  4605                           ;main.c: 422:     while (t_count<3){
  4606  002418  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4607  00241A  D709               	goto	l8037
  4608  00241C  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4609  00241E  E104               	bnz	u8790
  4610  002420  0E03               	movlw	3
  4611  002422  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4612  002424  A0D8               	btfss	status,0,c
  4613  002426  D703               	goto	l8037
  4614  002428                     u8790:
  4615                           
  4616                           ; BSR set to: 1
  4617                           ;main.c: 468:     return (int) t_count;
  4618  002428  C106  F0FB         	movff	number_deploy@t_count,?_number_deploy
  4619  00242C  C107  F0FC         	movff	number_deploy@t_count+1,?_number_deploy+1
  4620                           
  4621                           ; BSR set to: 1
  4622  002430  0012               	return		;funcret
  4623  002432                     __end_of_number_deploy:
  4624                           	opt callstack 0
  4625                           
  4626 ;; *************** function ___awdiv *****************
  4627 ;; Defined at:
  4628 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  dividend        2    0[BANK0 ] int 
  4631 ;;  divisor         2    2[BANK0 ] int 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  quotient        2    6[BANK0 ] int 
  4634 ;;  sign            1    5[BANK0 ] unsigned char 
  4635 ;;  counter         1    4[BANK0 ] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  2    0[BANK0 ] int 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4645 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;Total ram usage:        8 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    3
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_number_deploy
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text7
  4660  00377E                     __ptext7:
  4661                           	opt callstack 0
  4662  00377E                     ___awdiv:
  4663                           	opt callstack 26
  4664                           
  4665                           ; BSR set to: 1
  4666                           ;incstack = 0
  4667  00377E  0E00               	movlw	0
  4668  003780  0100               	movlb	0	; () banked
  4669  003782  6F85               	movwf	___awdiv@sign& (0+255),b
  4670                           
  4671                           ; BSR set to: 0
  4672  003784  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4673  003786  D006               	goto	l7791
  4674                           
  4675                           ; BSR set to: 0
  4676  003788  6D82               	negf	___awdiv@divisor& (0+255),b
  4677  00378A  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4678  00378C  B0D8               	btfsc	status,0,c
  4679  00378E  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4680                           
  4681                           ; BSR set to: 0
  4682  003790  0E01               	movlw	1
  4683  003792  6F85               	movwf	___awdiv@sign& (0+255),b
  4684  003794                     l7791:
  4685                           
  4686                           ; BSR set to: 0
  4687  003794  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4688  003796  D006               	goto	l7797
  4689                           
  4690                           ; BSR set to: 0
  4691  003798  6D80               	negf	___awdiv@dividend& (0+255),b
  4692  00379A  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4693  00379C  B0D8               	btfsc	status,0,c
  4694  00379E  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4695                           
  4696                           ; BSR set to: 0
  4697  0037A0  0E01               	movlw	1
  4698  0037A2  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4699  0037A4                     l7797:
  4700                           
  4701                           ; BSR set to: 0
  4702  0037A4  0E00               	movlw	0
  4703  0037A6  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4704  0037A8  0E00               	movlw	0
  4705  0037AA  6F86               	movwf	___awdiv@quotient& (0+255),b
  4706                           
  4707                           ; BSR set to: 0
  4708  0037AC  5182               	movf	___awdiv@divisor& (0+255),w,b
  4709  0037AE  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4710  0037B0  B4D8               	btfsc	status,2,c
  4711  0037B2  D01C               	goto	l7819
  4712                           
  4713                           ; BSR set to: 0
  4714  0037B4  0E01               	movlw	1
  4715  0037B6  6F84               	movwf	___awdiv@counter& (0+255),b
  4716  0037B8  D004               	goto	l7805
  4717  0037BA                     l7803:
  4718                           
  4719                           ; BSR set to: 0
  4720  0037BA  90D8               	bcf	status,0,c
  4721  0037BC  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4722  0037BE  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4723  0037C0  2B84               	incf	___awdiv@counter& (0+255),f,b
  4724  0037C2                     l7805:
  4725                           
  4726                           ; BSR set to: 0
  4727  0037C2  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4728  0037C4  D7FA               	goto	l7803
  4729  0037C6                     u8500:
  4730                           
  4731                           ; BSR set to: 0
  4732  0037C6  90D8               	bcf	status,0,c
  4733  0037C8  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4734  0037CA  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4735                           
  4736                           ; BSR set to: 0
  4737  0037CC  5182               	movf	___awdiv@divisor& (0+255),w,b
  4738  0037CE  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4739  0037D0  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4740  0037D2  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4741  0037D4  A0D8               	btfss	status,0,c
  4742  0037D6  D005               	goto	l7815
  4743                           
  4744                           ; BSR set to: 0
  4745  0037D8  5182               	movf	___awdiv@divisor& (0+255),w,b
  4746  0037DA  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4747  0037DC  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4748  0037DE  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4749                           
  4750                           ; BSR set to: 0
  4751  0037E0  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4752  0037E2                     l7815:
  4753                           
  4754                           ; BSR set to: 0
  4755  0037E2  90D8               	bcf	status,0,c
  4756  0037E4  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4757  0037E6  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4758                           
  4759                           ; BSR set to: 0
  4760  0037E8  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4761  0037EA  D7ED               	goto	u8500
  4762  0037EC                     l7819:
  4763                           
  4764                           ; BSR set to: 0
  4765  0037EC  5185               	movf	___awdiv@sign& (0+255),w,b
  4766  0037EE  B4D8               	btfsc	status,2,c
  4767  0037F0  D004               	goto	l7823
  4768                           
  4769                           ; BSR set to: 0
  4770  0037F2  6D86               	negf	___awdiv@quotient& (0+255),b
  4771  0037F4  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4772  0037F6  B0D8               	btfsc	status,0,c
  4773  0037F8  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4774  0037FA                     l7823:
  4775                           
  4776                           ; BSR set to: 0
  4777  0037FA  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4778  0037FE  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4779                           
  4780                           ; BSR set to: 0
  4781  003802  0012               	return		;funcret
  4782  003804                     __end_of___awdiv:
  4783                           	opt callstack 0
  4784                           
  4785 ;; *************** function _brake *****************
  4786 ;; Defined at:
  4787 ;;		line 668 in file "main.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;Total ram usage:        2 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:   14
  4808 ;; This function calls:
  4809 ;;		_I2C_Master_Read
  4810 ;;		_I2C_Master_Start
  4811 ;;		_I2C_Master_Stop
  4812 ;;		_I2C_Master_Write
  4813 ;;		_lcdInst
  4814 ;;		_printf
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;;		_sense_tires
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text8
  4822  003502                     __ptext8:
  4823                           	opt callstack 0
  4824  003502                     _brake:
  4825                           	opt callstack 16
  4826                           
  4827                           ;main.c: 669:     I2C_Master_Start();
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;incstack = 0
  4831  003502  ECAE  F01F         	call	_I2C_Master_Start	;wreg free
  4832                           
  4833                           ;main.c: 670:     I2C_Master_Write(0b00010000);
  4834  003506  0E00               	movlw	0
  4835  003508  0100               	movlb	0	; () banked
  4836  00350A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4837  00350C  0E10               	movlw	16
  4838  00350E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4839  003510  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  4840                           
  4841                           ;main.c: 671:     I2C_Master_Write('9');
  4842  003514  0E00               	movlw	0
  4843  003516  0100               	movlb	0	; () banked
  4844  003518  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4845  00351A  0E39               	movlw	57
  4846  00351C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4847  00351E  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  4848                           
  4849                           ;main.c: 672:     I2C_Master_Stop();
  4850  003522  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  4851                           
  4852                           ;main.c: 673:     I2C_Master_Start();
  4853  003526  ECAE  F01F         	call	_I2C_Master_Start	;wreg free
  4854                           
  4855                           ;main.c: 674:     I2C_Master_Write(0b00010001);
  4856  00352A  0E00               	movlw	0
  4857  00352C  0100               	movlb	0	; () banked
  4858  00352E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4859  003530  0E11               	movlw	17
  4860  003532  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4861  003534  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  4862                           
  4863                           ;main.c: 675:     avg_dist = I2C_Master_Read(1);
  4864  003538  0E01               	movlw	1
  4865  00353A  EC22  F01F         	call	_I2C_Master_Read
  4866  00353E  0100               	movlb	0	; () banked
  4867  003540  6FFB               	movwf	??_brake& (0+255),b
  4868  003542  51FB               	movf	??_brake& (0+255),w,b
  4869  003544  6E44               	movwf	_avg_dist,c	;volatile
  4870  003546  6A45               	clrf	_avg_dist+1,c	;volatile
  4871  003548  6A46               	clrf	_avg_dist+2,c	;volatile
  4872  00354A  6A47               	clrf	_avg_dist+3,c	;volatile
  4873                           
  4874                           ;main.c: 676:     I2C_Master_Stop();
  4875  00354C  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  4876                           
  4877                           ;main.c: 677:     if(avg_dist){
  4878  003550  5044               	movf	_avg_dist,w,c	;volatile
  4879  003552  1045               	iorwf	_avg_dist+1,w,c	;volatile
  4880  003554  1046               	iorwf	_avg_dist+2,w,c	;volatile
  4881  003556  1047               	iorwf	_avg_dist+3,w,c	;volatile
  4882  003558  B4D8               	btfsc	status,2,c
  4883  00355A  0012               	return	
  4884                           
  4885                           ;main.c: 680:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4886  00355C  0E01               	movlw	1
  4887  00355E  EC9D  F01F         	call	_lcdInst
  4888  003562  0E11               	movlw	17
  4889  003564  0100               	movlb	0	; () banked
  4890  003566  6FFB               	movwf	??_brake& (0+255),b
  4891  003568  0E3A               	movlw	58
  4892  00356A                     u9657:
  4893  00356A  2EE8               	decfsz	wreg,f,c
  4894  00356C  D7FE               	bra	u9657
  4895  00356E  2FFB               	decfsz	??_brake& (0+255),f,b
  4896  003570  D7FC               	bra	u9657
  4897  003572  F000               	nop	
  4898                           
  4899                           ;main.c: 688:         printf("%d",avg_dist);
  4900  003574  0EC3               	movlw	low (STR_59+11)
  4901  003576  0100               	movlb	0	; () banked
  4902  003578  6FED               	movwf	printf@fmt& (0+255),b
  4903  00357A  0EFE               	movlw	high (STR_59+11)
  4904  00357C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4905  00357E  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  4906  003582  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  4907  003586  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  4908  00358A  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  4909  00358E  EC37  F01F         	call	_printf	;wreg free
  4910                           
  4911                           ;main.c: 693:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4912  003592  0E0D               	movlw	13
  4913  003594  0100               	movlb	0	; () banked
  4914  003596  6FFC               	movwf	(??_brake+1)& (0+255),b
  4915  003598  0EAF               	movlw	175
  4916  00359A  6FFB               	movwf	??_brake& (0+255),b
  4917  00359C  0EB6               	movlw	182
  4918  00359E                     u9667:
  4919  00359E  2EE8               	decfsz	wreg,f,c
  4920  0035A0  D7FE               	bra	u9667
  4921  0035A2  2FFB               	decfsz	??_brake& (0+255),f,b
  4922  0035A4  D7FC               	bra	u9667
  4923  0035A6  2FFC               	decfsz	(??_brake+1)& (0+255),f,b
  4924  0035A8  D7FA               	bra	u9667
  4925  0035AA  F000               	nop	
  4926                           
  4927                           ;main.c: 695:     send = 1;
  4928  0035AC  0E01               	movlw	1
  4929  0035AE  6E6D               	movwf	_send,c
  4930  0035B0  0012               	return		;funcret
  4931  0035B2                     __end_of_brake:
  4932                           	opt callstack 0
  4933                           
  4934 ;; *************** function _backwards *****************
  4935 ;; Defined at:
  4936 ;;		line 710 in file "main.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;		None
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      void 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;Total ram usage:        0 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    5
  4957 ;; This function calls:
  4958 ;;		_I2C_Master_Start
  4959 ;;		_I2C_Master_Stop
  4960 ;;		_I2C_Master_Write
  4961 ;; This function is called by:
  4962 ;;		_main
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text9
  4967  003EBE                     __ptext9:
  4968                           	opt callstack 0
  4969  003EBE                     _backwards:
  4970                           	opt callstack 25
  4971                           
  4972                           ;main.c: 711:     I2C_Master_Start();
  4973                           
  4974                           ;incstack = 0
  4975  003EBE  ECAE  F01F         	call	_I2C_Master_Start	;wreg free
  4976                           
  4977                           ;main.c: 712:     I2C_Master_Write(0b00010000);
  4978  003EC2  0E00               	movlw	0
  4979  003EC4  0100               	movlb	0	; () banked
  4980  003EC6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4981  003EC8  0E10               	movlw	16
  4982  003ECA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4983  003ECC  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  4984                           
  4985                           ;main.c: 713:     I2C_Master_Write('5');
  4986  003ED0  0E00               	movlw	0
  4987  003ED2  0100               	movlb	0	; () banked
  4988  003ED4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4989  003ED6  0E35               	movlw	53
  4990  003ED8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4991  003EDA  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  4992                           
  4993                           ;main.c: 714:     I2C_Master_Stop();
  4994  003EDE  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  4995  003EE2  0012               	return		;funcret
  4996  003EE4                     __end_of_backwards:
  4997                           	opt callstack 0
  4998                           
  4999 ;; *************** function _actuators_main *****************
  5000 ;; Defined at:
  5001 ;;		line 3 in file "actuators_main.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  stack           2   18[BANK1 ] int 
  5004 ;;  steps2_adj      2   20[BANK1 ] int 
  5005 ;;  t_dep           2   22[BANK1 ] int 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  act_cnt         2   26[BANK1 ] int 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5017 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;Total ram usage:       10 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:   16
  5024 ;; This function calls:
  5025 ;;		_initLCD
  5026 ;;		_lcdInst
  5027 ;;		_printf
  5028 ;;		_servo
  5029 ;;		_stepper
  5030 ;;		_stepper2
  5031 ;;		_stepper2_back
  5032 ;;		_system_init
  5033 ;; This function is called by:
  5034 ;;		_main
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text10
  5039  0027CC                     __ptext10:
  5040                           	opt callstack 0
  5041  0027CC                     _actuators_main:
  5042                           	opt callstack 14
  5043                           
  5044                           ;actuators_main.c: 4:     int act_cnt = 0;
  5045                           
  5046                           ;incstack = 0
  5047  0027CC  0E00               	movlw	0
  5048  0027CE  0101               	movlb	1	; () banked
  5049  0027D0  6F1B               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  5050  0027D2  0E00               	movlw	0
  5051  0027D4  6F1A               	movwf	actuators_main@act_cnt& (0+255),b
  5052                           
  5053                           ; BSR set to: 1
  5054                           ;actuators_main.c: 5:     system_init();
  5055  0027D6  EC90  F01E         	call	_system_init	;wreg free
  5056                           
  5057                           ;actuators_main.c: 6:     initLCD();
  5058  0027DA  EC86  F01C         	call	_initLCD	;wreg free
  5059                           
  5060                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  5061  0027DE  0E01               	movlw	1
  5062  0027E0  EC9D  F01F         	call	_lcdInst
  5063  0027E4  0E11               	movlw	17
  5064  0027E6  0101               	movlb	1	; () banked
  5065  0027E8  6F18               	movwf	??_actuators_main& (0+255),b
  5066  0027EA  0E3A               	movlw	58
  5067  0027EC                     u9677:
  5068  0027EC  2EE8               	decfsz	wreg,f,c
  5069  0027EE  D7FE               	bra	u9677
  5070  0027F0  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5071  0027F2  D7FC               	bra	u9677
  5072  0027F4  F000               	nop	
  5073                           
  5074                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  5075  0027F6  0ED9               	movlw	low STR_1
  5076  0027F8  0100               	movlb	0	; () banked
  5077  0027FA  6FED               	movwf	printf@fmt& (0+255),b
  5078  0027FC  0EFF               	movlw	high STR_1
  5079  0027FE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5080  002800  0E00               	movlw	0
  5081  002802  6FF0               	movwf	(?_printf+3)& (0+255),b
  5082  002804  0E00               	movlw	0
  5083  002806  6FEF               	movwf	(?_printf+2)& (0+255),b
  5084  002808  EC37  F01F         	call	_printf	;wreg free
  5085                           
  5086                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  5087  00280C  0E03               	movlw	3
  5088  00280E  0101               	movlb	1	; () banked
  5089  002810  6F19               	movwf	(??_actuators_main+1)& (0+255),b
  5090  002812  0E8A               	movlw	138
  5091  002814  6F18               	movwf	??_actuators_main& (0+255),b
  5092  002816  0E55               	movlw	85
  5093  002818                     u9687:
  5094  002818  2EE8               	decfsz	wreg,f,c
  5095  00281A  D7FE               	bra	u9687
  5096  00281C  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5097  00281E  D7FC               	bra	u9687
  5098  002820  2F19               	decfsz	(??_actuators_main+1)& (0+255),f,b
  5099  002822  D7FA               	bra	u9687
  5100  002824  D000               	nop2	
  5101  002826                     l7861:
  5102                           
  5103                           ;actuators_main.c: 11:     if (act_cnt==0){
  5104  002826  0101               	movlb	1	; () banked
  5105  002828  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  5106  00282A  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5107  00282C  A4D8               	btfss	status,2,c
  5108  00282E  D071               	goto	l7941
  5109                           
  5110                           ; BSR set to: 1
  5111                           ;actuators_main.c: 15:         stepper(stack, t_dep);
  5112  002830  C112  F100         	movff	actuators_main@stack,stepper@stack
  5113  002834  C113  F101         	movff	actuators_main@stack+1,stepper@stack+1
  5114  002838  C116  F102         	movff	actuators_main@t_dep,stepper@t_dep
  5115  00283C  C117  F103         	movff	actuators_main@t_dep+1,stepper@t_dep+1
  5116  002840  EC8E  F014         	call	_stepper	;wreg free
  5117                           
  5118                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  5119  002844  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5120  002848  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5121  00284C  0E00               	movlw	0
  5122  00284E  ECB6  F018         	call	_stepper2
  5123                           
  5124                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  5125  002852  C114  F100         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  5126  002856  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  5127  00285A  0E01               	movlw	1
  5128  00285C  ECD9  F01A         	call	_stepper2_back
  5129                           
  5130                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  5131  002860  0E00               	movlw	0
  5132  002862  6E89               	movwf	3977,c	;volatile
  5133                           
  5134                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  5135  002864  908B               	bcf	3979,0,c	;volatile
  5136                           
  5137                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  5138  002866  908D               	bcf	3981,0,c	;volatile
  5139                           
  5140                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  5141  002868  928D               	bcf	3981,1,c	;volatile
  5142                           
  5143                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  5144  00286A  948D               	bcf	3981,2,c	;volatile
  5145                           
  5146                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  5147  00286C  9A8B               	bcf	3979,5,c	;volatile
  5148                           
  5149                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  5150  00286E  9C8B               	bcf	3979,6,c	;volatile
  5151                           
  5152                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  5153  002870  9E8B               	bcf	3979,7,c	;volatile
  5154                           
  5155                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  5156  002872  9A89               	bcf	3977,5,c	;volatile
  5157                           
  5158                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5159  002874  0E01               	movlw	1
  5160  002876  EC9D  F01F         	call	_lcdInst
  5161  00287A  0E11               	movlw	17
  5162  00287C  0101               	movlb	1	; () banked
  5163  00287E  6F18               	movwf	??_actuators_main& (0+255),b
  5164  002880  0E3A               	movlw	58
  5165  002882                     u9697:
  5166  002882  2EE8               	decfsz	wreg,f,c
  5167  002884  D7FE               	bra	u9697
  5168  002886  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5169  002888  D7FC               	bra	u9697
  5170  00288A  F000               	nop	
  5171                           
  5172                           ;actuators_main.c: 31:         printf("Stepper done");
  5173  00288C  0E0A               	movlw	low STR_2
  5174  00288E  0100               	movlb	0	; () banked
  5175  002890  6FED               	movwf	printf@fmt& (0+255),b
  5176  002892  0EFF               	movlw	high STR_2
  5177  002894  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5178  002896  EC37  F01F         	call	_printf	;wreg free
  5179                           
  5180                           ;actuators_main.c: 33:         servo();
  5181  00289A  EC77  F01B         	call	_servo	;wreg free
  5182                           
  5183                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5184  00289E  0E01               	movlw	1
  5185  0028A0  EC9D  F01F         	call	_lcdInst
  5186  0028A4  0E11               	movlw	17
  5187  0028A6  0101               	movlb	1	; () banked
  5188  0028A8  6F18               	movwf	??_actuators_main& (0+255),b
  5189  0028AA  0E3A               	movlw	58
  5190  0028AC                     u9707:
  5191  0028AC  2EE8               	decfsz	wreg,f,c
  5192  0028AE  D7FE               	bra	u9707
  5193  0028B0  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5194  0028B2  D7FC               	bra	u9707
  5195  0028B4  F000               	nop	
  5196                           
  5197                           ;actuators_main.c: 35:         printf("Servo done");
  5198  0028B6  0E74               	movlw	low STR_3
  5199  0028B8  0100               	movlb	0	; () banked
  5200  0028BA  6FED               	movwf	printf@fmt& (0+255),b
  5201  0028BC  0EFF               	movlw	high STR_3
  5202  0028BE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5203  0028C0  EC37  F01F         	call	_printf	;wreg free
  5204                           
  5205                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  5206  0028C4  0E00               	movlw	0
  5207  0028C6  6E89               	movwf	3977,c	;volatile
  5208                           
  5209                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  5210  0028C8  908B               	bcf	3979,0,c	;volatile
  5211                           
  5212                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  5213  0028CA  908D               	bcf	3981,0,c	;volatile
  5214                           
  5215                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  5216  0028CC  928D               	bcf	3981,1,c	;volatile
  5217                           
  5218                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  5219  0028CE  948D               	bcf	3981,2,c	;volatile
  5220                           
  5221                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  5222  0028D0  9A8B               	bcf	3979,5,c	;volatile
  5223                           
  5224                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  5225  0028D2  9C8B               	bcf	3979,6,c	;volatile
  5226                           
  5227                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  5228  0028D4  9E8B               	bcf	3979,7,c	;volatile
  5229                           
  5230                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  5231  0028D6  9A89               	bcf	3977,5,c	;volatile
  5232                           
  5233                           ;actuators_main.c: 48:         if (t_dep%2!=0){
  5234  0028D8  0101               	movlb	1	; () banked
  5235  0028DA  A116               	btfss	actuators_main@t_dep& (0+255),0,b
  5236  0028DC  D006               	goto	l7919
  5237                           
  5238                           ; BSR set to: 1
  5239                           ;actuators_main.c: 49:             steps2_adj = steps2_adj+1;
  5240  0028DE  0E01               	movlw	1
  5241  0028E0  2514               	addwf	actuators_main@steps2_adj& (0+255),w,b
  5242  0028E2  6F14               	movwf	actuators_main@steps2_adj& (0+255),b
  5243  0028E4  0E00               	movlw	0
  5244  0028E6  2115               	addwfc	(actuators_main@steps2_adj+1)& (0+255),w,b
  5245  0028E8  6F15               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  5246  0028EA                     l7919:
  5247                           
  5248                           ; BSR set to: 1
  5249                           ;actuators_main.c: 51:         stepper2(1, steps2_adj);
  5250  0028EA  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5251  0028EE  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5252  0028F2  0E01               	movlw	1
  5253  0028F4  ECB6  F018         	call	_stepper2
  5254                           
  5255                           ;actuators_main.c: 52:                         LATA = 0b00000000;
  5256  0028F8  0E00               	movlw	0
  5257  0028FA  6E89               	movwf	3977,c	;volatile
  5258                           
  5259                           ;actuators_main.c: 53:         LATCbits.LATC0 = 0;
  5260  0028FC  908B               	bcf	3979,0,c	;volatile
  5261                           
  5262                           ;actuators_main.c: 54:         LATEbits.LATE0 = 0;
  5263  0028FE  908D               	bcf	3981,0,c	;volatile
  5264                           
  5265                           ;actuators_main.c: 55:         LATEbits.LATE1 = 0;
  5266  002900  928D               	bcf	3981,1,c	;volatile
  5267                           
  5268                           ;actuators_main.c: 56:         LATEbits.LATE2 = 0;
  5269  002902  948D               	bcf	3981,2,c	;volatile
  5270                           
  5271                           ;actuators_main.c: 57:         LATCbits.LATC5 = 0;
  5272  002904  9A8B               	bcf	3979,5,c	;volatile
  5273                           
  5274                           ;actuators_main.c: 58:         LATCbits.LATC6 = 0;
  5275  002906  9C8B               	bcf	3979,6,c	;volatile
  5276                           
  5277                           ;actuators_main.c: 59:         LATCbits.LATC7 = 0;
  5278  002908  9E8B               	bcf	3979,7,c	;volatile
  5279                           
  5280                           ;actuators_main.c: 60:         LATAbits.LATA5 = 0;
  5281  00290A  9A89               	bcf	3977,5,c	;volatile
  5282                           
  5283                           ;actuators_main.c: 61:         act_cnt++;
  5284  00290C  0101               	movlb	1	; () banked
  5285  00290E  4B1A               	infsnz	actuators_main@act_cnt& (0+255),f,b
  5286  002910  2B1B               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  5287  002912                     l7941:
  5288                           
  5289                           ; BSR set to: 1
  5290                           ;actuators_main.c: 64:     if(act_cnt){
  5291  002912  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  5292  002914  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5293  002916  A4D8               	btfss	status,2,c
  5294  002918  0012               	return	
  5295  00291A  D785               	goto	l7861
  5296  00291C                     __end_of_actuators_main:
  5297                           	opt callstack 0
  5298                           
  5299 ;; *************** function _system_init *****************
  5300 ;; Defined at:
  5301 ;;		line 74 in file "actuators_main.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5319 ;;Total ram usage:        0 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    3
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_actuators_main
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text11
  5330  003D20                     __ptext11:
  5331                           	opt callstack 0
  5332  003D20                     _system_init:
  5333                           	opt callstack 26
  5334                           
  5335                           ;actuators_main.c: 75:     TRISB = 0x00;
  5336                           
  5337                           ; BSR set to: 1
  5338                           ;incstack = 0
  5339  003D20  0E00               	movlw	0
  5340  003D22  6E93               	movwf	3987,c	;volatile
  5341                           
  5342                           ;actuators_main.c: 77:     LATB = 0x0F;
  5343  003D24  0E0F               	movlw	15
  5344  003D26  6E8A               	movwf	3978,c	;volatile
  5345                           
  5346                           ;actuators_main.c: 78:     TRISA = 0x00;
  5347  003D28  0E00               	movlw	0
  5348  003D2A  6E92               	movwf	3986,c	;volatile
  5349                           
  5350                           ;actuators_main.c: 79:     LATA = 0x0F;
  5351  003D2C  0E0F               	movlw	15
  5352  003D2E  6E89               	movwf	3977,c	;volatile
  5353                           
  5354                           ;actuators_main.c: 81:     TRISCbits.TRISC1 = 0;
  5355  003D30  9294               	bcf	3988,1,c	;volatile
  5356                           
  5357                           ;actuators_main.c: 84:     TRISCbits.TRISC2 = 0;
  5358  003D32  9494               	bcf	3988,2,c	;volatile
  5359                           
  5360                           ;actuators_main.c: 87:     LATD = 0x00;
  5361  003D34  0E00               	movlw	0
  5362  003D36  6E8C               	movwf	3980,c	;volatile
  5363                           
  5364                           ;actuators_main.c: 88:     TRISD = 0x00;
  5365  003D38  0E00               	movlw	0
  5366  003D3A  6E95               	movwf	3989,c	;volatile
  5367                           
  5368                           ;actuators_main.c: 90:     ADCON1 = 0b00001111;
  5369  003D3C  0E0F               	movlw	15
  5370  003D3E  6EC1               	movwf	4033,c	;volatile
  5371                           
  5372                           ;actuators_main.c: 92:     TRISC = 0x00;
  5373  003D40  0E00               	movlw	0
  5374  003D42  6E94               	movwf	3988,c	;volatile
  5375                           
  5376                           ;actuators_main.c: 93:     LATC = 0x00;
  5377  003D44  0E00               	movlw	0
  5378  003D46  6E8B               	movwf	3979,c	;volatile
  5379                           
  5380                           ;actuators_main.c: 94:     TRISE = 0x00;
  5381  003D48  0E00               	movlw	0
  5382  003D4A  6E96               	movwf	3990,c	;volatile
  5383                           
  5384                           ;actuators_main.c: 95:     LATE = 0x00;
  5385  003D4C  0E00               	movlw	0
  5386  003D4E  6E8D               	movwf	3981,c	;volatile
  5387  003D50  0012               	return		;funcret
  5388  003D52                     __end_of_system_init:
  5389                           	opt callstack 0
  5390                           
  5391 ;; *************** function _stepper2_back *****************
  5392 ;; Defined at:
  5393 ;;		line 576 in file "actuators_main.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  direction       1    wreg     unsigned char 
  5396 ;;  steps2_adj      2    0[BANK1 ] int 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  direction       1    3[BANK1 ] unsigned char 
  5399 ;;  i               2    6[BANK1 ] int 
  5400 ;;  count_steppe    2    4[BANK1 ] int 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5410 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5411 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;Total ram usage:        8 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:   15
  5417 ;; This function calls:
  5418 ;;		_full_drive
  5419 ;;		_lcdInst
  5420 ;;		_printf
  5421 ;; This function is called by:
  5422 ;;		_actuators_main
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text12
  5427  0035B2                     __ptext12:
  5428                           	opt callstack 0
  5429  0035B2                     _stepper2_back:
  5430                           	opt callstack 14
  5431                           
  5432                           ;incstack = 0
  5433                           ;stepper2_back@direction stored from wreg
  5434  0035B2  0101               	movlb	1	; () banked
  5435  0035B4  6F03               	movwf	stepper2_back@direction& (0+255),b
  5436                           
  5437                           ;actuators_main.c: 594:     int count_stepper = 0;
  5438  0035B6  0E00               	movlw	0
  5439  0035B8  0101               	movlb	1	; () banked
  5440  0035BA  6F05               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5441  0035BC  0E00               	movlw	0
  5442  0035BE  6F04               	movwf	stepper2_back@count_stepper& (0+255),b
  5443                           
  5444                           ; BSR set to: 1
  5445                           ;actuators_main.c: 597:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5446                           
  5447                           ; BSR set to: 1
  5448                           ;actuators_main.c: 596:         if (count_stepper<1){
  5449  0035C0  0E01               	movlw	1
  5450  0035C2  EC9D  F01F         	call	_lcdInst
  5451  0035C6  0E11               	movlw	17
  5452  0035C8  0101               	movlb	1	; () banked
  5453  0035CA  6F02               	movwf	??_stepper2_back& (0+255),b
  5454  0035CC  0E3A               	movlw	58
  5455  0035CE                     u9717:
  5456  0035CE  2EE8               	decfsz	wreg,f,c
  5457  0035D0  D7FE               	bra	u9717
  5458  0035D2  2F02               	decfsz	??_stepper2_back& (0+255),f,b
  5459  0035D4  D7FC               	bra	u9717
  5460  0035D6  F000               	nop	
  5461                           
  5462                           ;actuators_main.c: 598:             printf("step1");
  5463  0035D8  0EF4               	movlw	low STR_6
  5464  0035DA  0100               	movlb	0	; () banked
  5465  0035DC  6FED               	movwf	printf@fmt& (0+255),b
  5466  0035DE  0EFF               	movlw	high STR_6
  5467  0035E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5468  0035E2  EC37  F01F         	call	_printf	;wreg free
  5469  0035E6  0EC0               	movlw	192
  5470  0035E8  EC9D  F01F         	call	_lcdInst
  5471                           
  5472                           ;actuators_main.c: 600:             printf("Step speed %d",4);
  5473  0035EC  0EE2               	movlw	low STR_7
  5474  0035EE  0100               	movlb	0	; () banked
  5475  0035F0  6FED               	movwf	printf@fmt& (0+255),b
  5476  0035F2  0EFE               	movlw	high STR_7
  5477  0035F4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5478  0035F6  0E00               	movlw	0
  5479  0035F8  6FF0               	movwf	(?_printf+3)& (0+255),b
  5480  0035FA  0E04               	movlw	4
  5481  0035FC  6FEF               	movwf	(?_printf+2)& (0+255),b
  5482  0035FE  EC37  F01F         	call	_printf	;wreg free
  5483                           
  5484                           ;actuators_main.c: 601:             for(int i=0;i<5;i++){
  5485  003602  0E00               	movlw	0
  5486  003604  0101               	movlb	1	; () banked
  5487  003606  6F07               	movwf	(stepper2_back@i+1)& (0+255),b
  5488  003608  0E00               	movlw	0
  5489  00360A  6F06               	movwf	stepper2_back@i& (0+255),b
  5490  00360C                     l7613:
  5491                           
  5492                           ; BSR set to: 1
  5493                           ;actuators_main.c: 603:                 full_drive(direction, 2);
  5494  00360C  0E00               	movlw	0
  5495  00360E  0100               	movlb	0	; () banked
  5496  003610  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5497  003612  0E02               	movlw	2
  5498  003614  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5499  003616  0101               	movlb	1	; () banked
  5500  003618  5103               	movf	stepper2_back@direction& (0+255),w,b
  5501  00361A  ECEE  F00B         	call	_full_drive
  5502                           
  5503                           ;actuators_main.c: 605:             }
  5504  00361E  0101               	movlb	1	; () banked
  5505  003620  4B06               	infsnz	stepper2_back@i& (0+255),f,b
  5506  003622  2B07               	incf	(stepper2_back@i+1)& (0+255),f,b
  5507                           
  5508                           ; BSR set to: 1
  5509  003624  BF07               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5510  003626  D7F2               	goto	l7613
  5511  003628  5107               	movf	(stepper2_back@i+1)& (0+255),w,b
  5512  00362A  E104               	bnz	u8170
  5513  00362C  0E05               	movlw	5
  5514  00362E  5D06               	subwf	stepper2_back@i& (0+255),w,b
  5515  003630  A0D8               	btfss	status,0,c
  5516  003632  D7EC               	goto	l7613
  5517  003634                     u8170:
  5518                           
  5519                           ; BSR set to: 1
  5520                           ;actuators_main.c: 606:             printf("cnt is %d", count_stepper);
  5521  003634  0ED9               	movlw	low STR_1
  5522  003636  0100               	movlb	0	; () banked
  5523  003638  6FED               	movwf	printf@fmt& (0+255),b
  5524  00363A  0EFF               	movlw	high STR_1
  5525  00363C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5526  00363E  C104  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5527  003642  C105  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5528  003646  EC37  F01F         	call	_printf	;wreg free
  5529                           
  5530                           ;actuators_main.c: 607:             count_stepper++;
  5531  00364A  0101               	movlb	1	; () banked
  5532  00364C  4B04               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5533  00364E  2B05               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5534                           
  5535                           ; BSR set to: 1
  5536  003650  0012               	return		;funcret
  5537  003652                     __end_of_stepper2_back:
  5538                           	opt callstack 0
  5539                           
  5540 ;; *************** function _stepper2 *****************
  5541 ;; Defined at:
  5542 ;;		line 491 in file "actuators_main.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  direction       1    wreg     unsigned char 
  5545 ;;  steps2_adj      2    0[BANK1 ] int 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  direction       1   13[BANK1 ] unsigned char 
  5548 ;;  i               2    9[BANK1 ] int 
  5549 ;;  i               2    7[BANK1 ] int 
  5550 ;;  count_steppe    2   11[BANK1 ] int 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  1    wreg      void 
  5553 ;; Registers used:
  5554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5560 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;Total ram usage:       14 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:   15
  5567 ;; This function calls:
  5568 ;;		_full_drive
  5569 ;;		_lcdInst
  5570 ;;		_printf
  5571 ;; This function is called by:
  5572 ;;		_actuators_main
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text13
  5577  00316C                     __ptext13:
  5578                           	opt callstack 0
  5579  00316C                     _stepper2:
  5580                           	opt callstack 14
  5581                           
  5582                           ; BSR set to: 1
  5583                           ;incstack = 0
  5584                           ;stepper2@direction stored from wreg
  5585  00316C  0101               	movlb	1	; () banked
  5586  00316E  6F0D               	movwf	stepper2@direction& (0+255),b
  5587                           
  5588                           ;actuators_main.c: 509:     int count_stepper = 0;
  5589  003170  0E00               	movlw	0
  5590  003172  0101               	movlb	1	; () banked
  5591  003174  6F0C               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5592  003176  0E00               	movlw	0
  5593  003178  6F0B               	movwf	stepper2@count_stepper& (0+255),b
  5594                           
  5595                           ; BSR set to: 1
  5596                           ;actuators_main.c: 512:     if (direction == 0){
  5597                           
  5598                           ; BSR set to: 1
  5599                           ;actuators_main.c: 511:         if (count_stepper<1){
  5600  00317A  510D               	movf	stepper2@direction& (0+255),w,b
  5601  00317C  A4D8               	btfss	status,2,c
  5602  00317E  D029               	goto	l7575
  5603                           
  5604                           ; BSR set to: 1
  5605                           ;actuators_main.c: 517:             for(int i=0;i<steps2_adj;i++){
  5606  003180  0E00               	movlw	0
  5607  003182  6F08               	movwf	(stepper2@i+1)& (0+255),b
  5608  003184  0E00               	movlw	0
  5609  003186  6F07               	movwf	stepper2@i& (0+255),b
  5610  003188  D00C               	goto	l7569
  5611  00318A                     l7565:
  5612                           
  5613                           ; BSR set to: 1
  5614                           ;actuators_main.c: 519:                 full_drive(direction, 2);
  5615  00318A  0E00               	movlw	0
  5616  00318C  0100               	movlb	0	; () banked
  5617  00318E  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5618  003190  0E02               	movlw	2
  5619  003192  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5620  003194  0101               	movlb	1	; () banked
  5621  003196  510D               	movf	stepper2@direction& (0+255),w,b
  5622  003198  ECEE  F00B         	call	_full_drive
  5623                           
  5624                           ;actuators_main.c: 521:             }
  5625  00319C  0101               	movlb	1	; () banked
  5626  00319E  4B07               	infsnz	stepper2@i& (0+255),f,b
  5627  0031A0  2B08               	incf	(stepper2@i+1)& (0+255),f,b
  5628  0031A2                     l7569:
  5629                           
  5630                           ; BSR set to: 1
  5631  0031A2  5100               	movf	stepper2@steps2_adj& (0+255),w,b
  5632  0031A4  5D07               	subwf	stepper2@i& (0+255),w,b
  5633  0031A6  5108               	movf	(stepper2@i+1)& (0+255),w,b
  5634  0031A8  0A80               	xorlw	128
  5635  0031AA  6F02               	movwf	??_stepper2& (0+255),b
  5636  0031AC  5101               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5637  0031AE  0A80               	xorlw	128
  5638  0031B0  5902               	subwfb	??_stepper2& (0+255),w,b
  5639  0031B2  A0D8               	btfss	status,0,c
  5640  0031B4  D7EA               	goto	l7565
  5641                           
  5642                           ; BSR set to: 1
  5643                           ;actuators_main.c: 522:             printf("cnt is %d", count_stepper);
  5644  0031B6  0ED9               	movlw	low STR_1
  5645  0031B8  0100               	movlb	0	; () banked
  5646  0031BA  6FED               	movwf	printf@fmt& (0+255),b
  5647  0031BC  0EFF               	movlw	high STR_1
  5648  0031BE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5649  0031C0  C10B  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5650  0031C4  C10C  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5651  0031C8  EC37  F01F         	call	_printf	;wreg free
  5652                           
  5653                           ;actuators_main.c: 523:             count_stepper++;
  5654  0031CC  0101               	movlb	1	; () banked
  5655  0031CE  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5656  0031D0  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5657  0031D2                     l7575:
  5658                           
  5659                           ; BSR set to: 1
  5660                           ;actuators_main.c: 525:     if (direction == 1){
  5661  0031D2  050D               	decf	stepper2@direction& (0+255),w,b
  5662  0031D4  A4D8               	btfss	status,2,c
  5663  0031D6  0012               	return	
  5664                           
  5665                           ; BSR set to: 1
  5666                           ;actuators_main.c: 526:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5667  0031D8  0E01               	movlw	1
  5668  0031DA  EC9D  F01F         	call	_lcdInst
  5669  0031DE  0E11               	movlw	17
  5670  0031E0  0101               	movlb	1	; () banked
  5671  0031E2  6F02               	movwf	??_stepper2& (0+255),b
  5672  0031E4  0E3A               	movlw	58
  5673  0031E6                     u9727:
  5674  0031E6  2EE8               	decfsz	wreg,f,c
  5675  0031E8  D7FE               	bra	u9727
  5676  0031EA  2F02               	decfsz	??_stepper2& (0+255),f,b
  5677  0031EC  D7FC               	bra	u9727
  5678  0031EE  F000               	nop	
  5679                           
  5680                           ;actuators_main.c: 527:                         printf("steppp %d", steps2_adj-(5));
  5681  0031F0  0ECF               	movlw	low STR_5
  5682  0031F2  0100               	movlb	0	; () banked
  5683  0031F4  6FED               	movwf	printf@fmt& (0+255),b
  5684  0031F6  0EFF               	movlw	high STR_5
  5685  0031F8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5686  0031FA  0EFB               	movlw	251
  5687  0031FC  0101               	movlb	1	; () banked
  5688  0031FE  2500               	addwf	stepper2@steps2_adj& (0+255),w,b
  5689  003200  0100               	movlb	0	; () banked
  5690  003202  6FEF               	movwf	(?_printf+2)& (0+255),b
  5691  003204  0EFF               	movlw	255
  5692  003206  0101               	movlb	1	; () banked
  5693  003208  2101               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5694  00320A  0100               	movlb	0	; () banked
  5695  00320C  6FF0               	movwf	(?_printf+3)& (0+255),b
  5696  00320E  EC37  F01F         	call	_printf	;wreg free
  5697                           
  5698                           ;actuators_main.c: 529:                 for(int i=0;i<(steps2_adj-(5));i++){
  5699  003212  0E00               	movlw	0
  5700  003214  0101               	movlb	1	; () banked
  5701  003216  6F0A               	movwf	(stepper2@i_489+1)& (0+255),b
  5702  003218  0E00               	movlw	0
  5703  00321A  6F09               	movwf	stepper2@i_489& (0+255),b
  5704  00321C  D00C               	goto	l7589
  5705  00321E                     l7585:
  5706                           
  5707                           ; BSR set to: 1
  5708                           ;actuators_main.c: 531:                     full_drive(direction, 2);
  5709  00321E  0E00               	movlw	0
  5710  003220  0100               	movlb	0	; () banked
  5711  003222  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5712  003224  0E02               	movlw	2
  5713  003226  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5714  003228  0101               	movlb	1	; () banked
  5715  00322A  510D               	movf	stepper2@direction& (0+255),w,b
  5716  00322C  ECEE  F00B         	call	_full_drive
  5717                           
  5718                           ;actuators_main.c: 533:                 }
  5719  003230  0101               	movlb	1	; () banked
  5720  003232  4B09               	infsnz	stepper2@i_489& (0+255),f,b
  5721  003234  2B0A               	incf	(stepper2@i_489+1)& (0+255),f,b
  5722  003236                     l7589:
  5723                           
  5724                           ; BSR set to: 1
  5725  003236  0EFB               	movlw	251
  5726  003238  6F02               	movwf	??_stepper2& (0+255),b
  5727  00323A  0EFF               	movlw	255
  5728  00323C  6F03               	movwf	(??_stepper2+1)& (0+255),b
  5729  00323E  C100  F104         	movff	stepper2@steps2_adj,??_stepper2+2
  5730  003242  C101  F105         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5731  003246  5102               	movf	??_stepper2& (0+255),w,b
  5732  003248  2704               	addwf	(??_stepper2+2)& (0+255),f,b
  5733  00324A  5103               	movf	(??_stepper2+1)& (0+255),w,b
  5734  00324C  2305               	addwfc	(??_stepper2+3)& (0+255),f,b
  5735  00324E  5104               	movf	(??_stepper2+2)& (0+255),w,b
  5736  003250  5D09               	subwf	stepper2@i_489& (0+255),w,b
  5737  003252  510A               	movf	(stepper2@i_489+1)& (0+255),w,b
  5738  003254  0A80               	xorlw	128
  5739  003256  6F06               	movwf	(??_stepper2+4)& (0+255),b
  5740  003258  5105               	movf	(??_stepper2+3)& (0+255),w,b
  5741  00325A  0A80               	xorlw	128
  5742  00325C  5906               	subwfb	(??_stepper2+4)& (0+255),w,b
  5743  00325E  A0D8               	btfss	status,0,c
  5744  003260  D7DE               	goto	l7585
  5745                           
  5746                           ; BSR set to: 1
  5747                           ;actuators_main.c: 534:                 count_stepper++;
  5748  003262  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5749  003264  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5750                           
  5751                           ; BSR set to: 1
  5752  003266  0012               	return		;funcret
  5753  003268                     __end_of_stepper2:
  5754                           	opt callstack 0
  5755                           
  5756 ;; *************** function _stepper *****************
  5757 ;; Defined at:
  5758 ;;		line 426 in file "actuators_main.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  stack           2    0[BANK1 ] int 
  5761 ;;  t_dep           2    2[BANK1 ] int 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  i               2   16[BANK1 ] int 
  5764 ;;  i               2   14[BANK1 ] int 
  5765 ;;  i               2   12[BANK1 ] int 
  5766 ;;  i               2   10[BANK1 ] int 
  5767 ;;  count_steppe    2    8[BANK1 ] int 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  1    wreg      void 
  5770 ;; Registers used:
  5771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5777 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;Total ram usage:       18 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:   15
  5784 ;; This function calls:
  5785 ;;		_full_drive
  5786 ;; This function is called by:
  5787 ;;		_actuators_main
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text14
  5792  00291C                     __ptext14:
  5793                           	opt callstack 0
  5794  00291C                     _stepper:
  5795                           	opt callstack 14
  5796                           
  5797                           ;actuators_main.c: 427:     int count_stepper = 0;
  5798                           
  5799                           ; BSR set to: 1
  5800                           ;incstack = 0
  5801  00291C  0E00               	movlw	0
  5802  00291E  0101               	movlb	1	; () banked
  5803  002920  6F09               	movwf	(stepper@count_stepper+1)& (0+255),b
  5804  002922  0E00               	movlw	0
  5805  002924  6F08               	movwf	stepper@count_stepper& (0+255),b
  5806                           
  5807                           ; BSR set to: 1
  5808                           ;actuators_main.c: 436:             if (stack == 1){
  5809                           
  5810                           ; BSR set to: 1
  5811                           ;actuators_main.c: 430:         if (count_stepper<1){
  5812  002926  0500               	decf	stepper@stack& (0+255),w,b
  5813  002928  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5814  00292A  A4D8               	btfss	status,2,c
  5815  00292C  D03E               	goto	u8070
  5816                           
  5817                           ; BSR set to: 1
  5818                           ;actuators_main.c: 437:                 if (t_dep<=3){
  5819  00292E  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5820  002930  D006               	goto	u8040
  5821  002932  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5822  002934  E11B               	bnz	l7511
  5823  002936  0E04               	movlw	4
  5824  002938  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5825  00293A  B0D8               	btfsc	status,0,c
  5826  00293C  D017               	goto	u8050
  5827  00293E                     u8040:
  5828                           
  5829                           ; BSR set to: 1
  5830                           ;actuators_main.c: 438:                     for(int i=0;i<14;i++){
  5831  00293E  0E00               	movlw	0
  5832  002940  6F0B               	movwf	(stepper@i+1)& (0+255),b
  5833  002942  0E00               	movlw	0
  5834  002944  6F0A               	movwf	stepper@i& (0+255),b
  5835  002946                     l7505:
  5836                           
  5837                           ; BSR set to: 1
  5838                           ;actuators_main.c: 440:                         full_drive(0, 1);
  5839  002946  0E00               	movlw	0
  5840  002948  0100               	movlb	0	; () banked
  5841  00294A  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5842  00294C  0E01               	movlw	1
  5843  00294E  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5844  002950  0E00               	movlw	0
  5845  002952  ECEE  F00B         	call	_full_drive
  5846                           
  5847                           ;actuators_main.c: 442:                     }
  5848  002956  0101               	movlb	1	; () banked
  5849  002958  4B0A               	infsnz	stepper@i& (0+255),f,b
  5850  00295A  2B0B               	incf	(stepper@i+1)& (0+255),f,b
  5851                           
  5852                           ; BSR set to: 1
  5853  00295C  BF0B               	btfsc	(stepper@i+1)& (0+255),7,b
  5854  00295E  D7F3               	goto	l7505
  5855  002960  510B               	movf	(stepper@i+1)& (0+255),w,b
  5856  002962  E104               	bnz	u8050
  5857  002964  0E0E               	movlw	14
  5858  002966  5D0A               	subwf	stepper@i& (0+255),w,b
  5859  002968  A0D8               	btfss	status,0,c
  5860  00296A  D7ED               	goto	l7505
  5861  00296C                     u8050:
  5862  00296C                     l7511:
  5863                           
  5864                           ; BSR set to: 1
  5865                           ;actuators_main.c: 444:                 if (t_dep>3){
  5866  00296C  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5867  00296E  D01D               	goto	u8070
  5868  002970  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5869  002972  E104               	bnz	u8060
  5870  002974  0E04               	movlw	4
  5871  002976  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5872  002978  A0D8               	btfss	status,0,c
  5873  00297A  D017               	goto	u8070
  5874  00297C                     u8060:
  5875                           
  5876                           ; BSR set to: 1
  5877                           ;actuators_main.c: 445:                     for(int i=0;i<14 -1;i++){
  5878  00297C  0E00               	movlw	0
  5879  00297E  6F0D               	movwf	(stepper@i_479+1)& (0+255),b
  5880  002980  0E00               	movlw	0
  5881  002982  6F0C               	movwf	stepper@i_479& (0+255),b
  5882  002984                     l7519:
  5883                           
  5884                           ; BSR set to: 1
  5885                           ;actuators_main.c: 447:                         full_drive(0, 1);
  5886  002984  0E00               	movlw	0
  5887  002986  0100               	movlb	0	; () banked
  5888  002988  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5889  00298A  0E01               	movlw	1
  5890  00298C  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5891  00298E  0E00               	movlw	0
  5892  002990  ECEE  F00B         	call	_full_drive
  5893                           
  5894                           ;actuators_main.c: 449:                     }
  5895  002994  0101               	movlb	1	; () banked
  5896  002996  4B0C               	infsnz	stepper@i_479& (0+255),f,b
  5897  002998  2B0D               	incf	(stepper@i_479+1)& (0+255),f,b
  5898                           
  5899                           ; BSR set to: 1
  5900  00299A  BF0D               	btfsc	(stepper@i_479+1)& (0+255),7,b
  5901  00299C  D7F3               	goto	l7519
  5902  00299E  510D               	movf	(stepper@i_479+1)& (0+255),w,b
  5903  0029A0  E104               	bnz	u8070
  5904  0029A2  0E0D               	movlw	13
  5905  0029A4  5D0C               	subwf	stepper@i_479& (0+255),w,b
  5906  0029A6  A0D8               	btfss	status,0,c
  5907  0029A8  D7ED               	goto	l7519
  5908  0029AA                     u8070:
  5909                           
  5910                           ; BSR set to: 1
  5911                           ;actuators_main.c: 452:             if (stack == 2){
  5912  0029AA  0E02               	movlw	2
  5913  0029AC  1900               	xorwf	stepper@stack& (0+255),w,b
  5914  0029AE  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5915  0029B0  A4D8               	btfss	status,2,c
  5916  0029B2  D056               	goto	u8120
  5917                           
  5918                           ; BSR set to: 1
  5919                           ;actuators_main.c: 453:                 if ((t_dep-8)<=3){
  5920  0029B4  0EF8               	movlw	248
  5921  0029B6  6F04               	movwf	??_stepper& (0+255),b
  5922  0029B8  0EFF               	movlw	255
  5923  0029BA  6F05               	movwf	(??_stepper+1)& (0+255),b
  5924  0029BC  C102  F106         	movff	stepper@t_dep,??_stepper+2
  5925  0029C0  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  5926  0029C4  5104               	movf	??_stepper& (0+255),w,b
  5927  0029C6  2706               	addwf	(??_stepper+2)& (0+255),f,b
  5928  0029C8  5105               	movf	(??_stepper+1)& (0+255),w,b
  5929  0029CA  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  5930  0029CC  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  5931  0029CE  D006               	goto	u8090
  5932  0029D0  5107               	movf	(??_stepper+3)& (0+255),w,b
  5933  0029D2  E11B               	bnz	l7541
  5934  0029D4  0E04               	movlw	4
  5935  0029D6  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  5936  0029D8  B0D8               	btfsc	status,0,c
  5937  0029DA  D017               	goto	u8100
  5938  0029DC                     u8090:
  5939                           
  5940                           ; BSR set to: 1
  5941                           ;actuators_main.c: 454:                     for(int i=0;i<14;i++){
  5942  0029DC  0E00               	movlw	0
  5943  0029DE  6F0F               	movwf	(stepper@i_480+1)& (0+255),b
  5944  0029E0  0E00               	movlw	0
  5945  0029E2  6F0E               	movwf	stepper@i_480& (0+255),b
  5946  0029E4                     l7535:
  5947                           
  5948                           ; BSR set to: 1
  5949                           ;actuators_main.c: 455:                         full_drive(0, 3);
  5950  0029E4  0E00               	movlw	0
  5951  0029E6  0100               	movlb	0	; () banked
  5952  0029E8  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5953  0029EA  0E03               	movlw	3
  5954  0029EC  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5955  0029EE  0E00               	movlw	0
  5956  0029F0  ECEE  F00B         	call	_full_drive
  5957                           
  5958                           ;actuators_main.c: 458:                     }
  5959  0029F4  0101               	movlb	1	; () banked
  5960  0029F6  4B0E               	infsnz	stepper@i_480& (0+255),f,b
  5961  0029F8  2B0F               	incf	(stepper@i_480+1)& (0+255),f,b
  5962                           
  5963                           ; BSR set to: 1
  5964  0029FA  BF0F               	btfsc	(stepper@i_480+1)& (0+255),7,b
  5965  0029FC  D7F3               	goto	l7535
  5966  0029FE  510F               	movf	(stepper@i_480+1)& (0+255),w,b
  5967  002A00  E104               	bnz	u8100
  5968  002A02  0E0E               	movlw	14
  5969  002A04  5D0E               	subwf	stepper@i_480& (0+255),w,b
  5970  002A06  A0D8               	btfss	status,0,c
  5971  002A08  D7ED               	goto	l7535
  5972  002A0A                     u8100:
  5973  002A0A                     l7541:
  5974                           
  5975                           ; BSR set to: 1
  5976                           ;actuators_main.c: 460:                 if ((t_dep-8)>3){
  5977  002A0A  0EF8               	movlw	248
  5978  002A0C  6F04               	movwf	??_stepper& (0+255),b
  5979  002A0E  0EFF               	movlw	255
  5980  002A10  6F05               	movwf	(??_stepper+1)& (0+255),b
  5981  002A12  C102  F106         	movff	stepper@t_dep,??_stepper+2
  5982  002A16  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  5983  002A1A  5104               	movf	??_stepper& (0+255),w,b
  5984  002A1C  2706               	addwf	(??_stepper+2)& (0+255),f,b
  5985  002A1E  5105               	movf	(??_stepper+1)& (0+255),w,b
  5986  002A20  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  5987  002A22  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  5988  002A24  D01D               	goto	u8120
  5989  002A26  5107               	movf	(??_stepper+3)& (0+255),w,b
  5990  002A28  E104               	bnz	u8110
  5991  002A2A  0E04               	movlw	4
  5992  002A2C  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  5993  002A2E  A0D8               	btfss	status,0,c
  5994  002A30  D017               	goto	u8120
  5995  002A32                     u8110:
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;actuators_main.c: 461:                     for(int i=0;i<14 -1;i++){
  5999  002A32  0E00               	movlw	0
  6000  002A34  6F11               	movwf	(stepper@i_481+1)& (0+255),b
  6001  002A36  0E00               	movlw	0
  6002  002A38  6F10               	movwf	stepper@i_481& (0+255),b
  6003  002A3A                     l7549:
  6004                           
  6005                           ; BSR set to: 1
  6006                           ;actuators_main.c: 462:                         full_drive(0, 3);
  6007  002A3A  0E00               	movlw	0
  6008  002A3C  0100               	movlb	0	; () banked
  6009  002A3E  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  6010  002A40  0E03               	movlw	3
  6011  002A42  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  6012  002A44  0E00               	movlw	0
  6013  002A46  ECEE  F00B         	call	_full_drive
  6014                           
  6015                           ;actuators_main.c: 465:                     }
  6016  002A4A  0101               	movlb	1	; () banked
  6017  002A4C  4B10               	infsnz	stepper@i_481& (0+255),f,b
  6018  002A4E  2B11               	incf	(stepper@i_481+1)& (0+255),f,b
  6019                           
  6020                           ; BSR set to: 1
  6021  002A50  BF11               	btfsc	(stepper@i_481+1)& (0+255),7,b
  6022  002A52  D7F3               	goto	l7549
  6023  002A54  5111               	movf	(stepper@i_481+1)& (0+255),w,b
  6024  002A56  E104               	bnz	u8120
  6025  002A58  0E0D               	movlw	13
  6026  002A5A  5D10               	subwf	stepper@i_481& (0+255),w,b
  6027  002A5C  A0D8               	btfss	status,0,c
  6028  002A5E  D7ED               	goto	l7549
  6029  002A60                     u8120:
  6030                           
  6031                           ; BSR set to: 1
  6032                           ;actuators_main.c: 469:             count_stepper++;
  6033  002A60  4B08               	infsnz	stepper@count_stepper& (0+255),f,b
  6034  002A62  2B09               	incf	(stepper@count_stepper+1)& (0+255),f,b
  6035                           
  6036                           ; BSR set to: 1
  6037                           
  6038                           ;actuators_main.c: 470:         }
  6039  002A64  0012               	return		;funcret
  6040  002A66                     __end_of_stepper:
  6041                           	opt callstack 0
  6042                           
  6043 ;; *************** function _full_drive *****************
  6044 ;; Defined at:
  6045 ;;		line 625 in file "actuators_main.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  direction       1    wreg     unsigned char 
  6048 ;;  stepper_no      2  123[BANK0 ] int 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;  direction       1  126[BANK0 ] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      void 
  6053 ;; Registers used:
  6054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;Total ram usage:        4 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:   14
  6067 ;; This function calls:
  6068 ;;		_printf
  6069 ;; This function is called by:
  6070 ;;		_stepper
  6071 ;;		_stepper2
  6072 ;;		_stepper2_back
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text15
  6077  0017DC                     __ptext15:
  6078                           	opt callstack 0
  6079  0017DC                     _full_drive:
  6080                           	opt callstack 14
  6081                           
  6082                           ; BSR set to: 1
  6083                           ;incstack = 0
  6084                           ;full_drive@direction stored from wreg
  6085  0017DC  0100               	movlb	0	; () banked
  6086  0017DE  6FFE               	movwf	full_drive@direction& (0+255),b
  6087                           
  6088                           ;actuators_main.c: 626:     if (stepper_no == 1){
  6089  0017E0  0100               	movlb	0	; () banked
  6090  0017E2  05FB               	decf	full_drive@stepper_no& (0+255),w,b
  6091  0017E4  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6092  0017E6  A4D8               	btfss	status,2,c
  6093  0017E8  D06B               	goto	l7231
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;actuators_main.c: 627:         if (direction == 1){
  6097  0017EA  05FE               	decf	full_drive@direction& (0+255),w,b
  6098  0017EC  A4D8               	btfss	status,2,c
  6099  0017EE  D032               	goto	l7215
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;actuators_main.c: 628:             LATA = 0b00000011;
  6103  0017F0  0E03               	movlw	3
  6104  0017F2  6E89               	movwf	3977,c	;volatile
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;actuators_main.c: 629:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6108  0017F4  0E1E               	movlw	30
  6109  0017F6  0100               	movlb	0	; () banked
  6110  0017F8  6FFD               	movwf	??_full_drive& (0+255),b
  6111  0017FA  0E37               	movlw	55
  6112  0017FC                     u9737:
  6113  0017FC  2EE8               	decfsz	wreg,f,c
  6114  0017FE  D7FE               	bra	u9737
  6115  001800  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6116  001802  D7FC               	bra	u9737
  6117                           
  6118                           ;actuators_main.c: 630:             LATA = 0b00000110;
  6119  001804  0E06               	movlw	6
  6120  001806  6E89               	movwf	3977,c	;volatile
  6121                           
  6122                           ;actuators_main.c: 631:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6123  001808  0E1E               	movlw	30
  6124  00180A  0100               	movlb	0	; () banked
  6125  00180C  6FFD               	movwf	??_full_drive& (0+255),b
  6126  00180E  0E37               	movlw	55
  6127  001810                     u9747:
  6128  001810  2EE8               	decfsz	wreg,f,c
  6129  001812  D7FE               	bra	u9747
  6130  001814  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6131  001816  D7FC               	bra	u9747
  6132                           
  6133                           ;actuators_main.c: 632:             LATA = 0b00001100;
  6134  001818  0E0C               	movlw	12
  6135  00181A  6E89               	movwf	3977,c	;volatile
  6136                           
  6137                           ;actuators_main.c: 633:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6138  00181C  0E1E               	movlw	30
  6139  00181E  0100               	movlb	0	; () banked
  6140  001820  6FFD               	movwf	??_full_drive& (0+255),b
  6141  001822  0E37               	movlw	55
  6142  001824                     u9757:
  6143  001824  2EE8               	decfsz	wreg,f,c
  6144  001826  D7FE               	bra	u9757
  6145  001828  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6146  00182A  D7FC               	bra	u9757
  6147                           
  6148                           ;actuators_main.c: 634:             LATA = 0b00001001;
  6149  00182C  0E09               	movlw	9
  6150  00182E  6E89               	movwf	3977,c	;volatile
  6151                           
  6152                           ;actuators_main.c: 635:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6153  001830  0E1E               	movlw	30
  6154  001832  0100               	movlb	0	; () banked
  6155  001834  6FFD               	movwf	??_full_drive& (0+255),b
  6156  001836  0E37               	movlw	55
  6157  001838                     u9767:
  6158  001838  2EE8               	decfsz	wreg,f,c
  6159  00183A  D7FE               	bra	u9767
  6160  00183C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6161  00183E  D7FC               	bra	u9767
  6162                           
  6163                           ;actuators_main.c: 636:             LATA = 0b00000011;
  6164  001840  0E03               	movlw	3
  6165  001842  6E89               	movwf	3977,c	;volatile
  6166                           
  6167                           ;actuators_main.c: 637:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6168  001844  0E1E               	movlw	30
  6169  001846  0100               	movlb	0	; () banked
  6170  001848  6FFD               	movwf	??_full_drive& (0+255),b
  6171  00184A  0E37               	movlw	55
  6172  00184C                     u9777:
  6173  00184C  2EE8               	decfsz	wreg,f,c
  6174  00184E  D7FE               	bra	u9777
  6175  001850  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6176  001852  D7FC               	bra	u9777
  6177  001854                     l7215:
  6178                           
  6179                           ;actuators_main.c: 639:         if (direction == 0){
  6180  001854  0100               	movlb	0	; () banked
  6181  001856  51FE               	movf	full_drive@direction& (0+255),w,b
  6182  001858  A4D8               	btfss	status,2,c
  6183  00185A  D032               	goto	l7231
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;actuators_main.c: 640:             LATA = 0b00001001;
  6187  00185C  0E09               	movlw	9
  6188  00185E  6E89               	movwf	3977,c	;volatile
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;actuators_main.c: 641:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6192  001860  0E1E               	movlw	30
  6193  001862  0100               	movlb	0	; () banked
  6194  001864  6FFD               	movwf	??_full_drive& (0+255),b
  6195  001866  0E37               	movlw	55
  6196  001868                     u9787:
  6197  001868  2EE8               	decfsz	wreg,f,c
  6198  00186A  D7FE               	bra	u9787
  6199  00186C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6200  00186E  D7FC               	bra	u9787
  6201                           
  6202                           ;actuators_main.c: 642:             LATA = 0b00001100;
  6203  001870  0E0C               	movlw	12
  6204  001872  6E89               	movwf	3977,c	;volatile
  6205                           
  6206                           ;actuators_main.c: 643:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6207  001874  0E1E               	movlw	30
  6208  001876  0100               	movlb	0	; () banked
  6209  001878  6FFD               	movwf	??_full_drive& (0+255),b
  6210  00187A  0E37               	movlw	55
  6211  00187C                     u9797:
  6212  00187C  2EE8               	decfsz	wreg,f,c
  6213  00187E  D7FE               	bra	u9797
  6214  001880  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6215  001882  D7FC               	bra	u9797
  6216                           
  6217                           ;actuators_main.c: 644:             LATA = 0b00000110;
  6218  001884  0E06               	movlw	6
  6219  001886  6E89               	movwf	3977,c	;volatile
  6220                           
  6221                           ;actuators_main.c: 645:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6222  001888  0E1E               	movlw	30
  6223  00188A  0100               	movlb	0	; () banked
  6224  00188C  6FFD               	movwf	??_full_drive& (0+255),b
  6225  00188E  0E37               	movlw	55
  6226  001890                     u9807:
  6227  001890  2EE8               	decfsz	wreg,f,c
  6228  001892  D7FE               	bra	u9807
  6229  001894  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6230  001896  D7FC               	bra	u9807
  6231                           
  6232                           ;actuators_main.c: 646:             LATA = 0b00000011;
  6233  001898  0E03               	movlw	3
  6234  00189A  6E89               	movwf	3977,c	;volatile
  6235                           
  6236                           ;actuators_main.c: 647:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6237  00189C  0E1E               	movlw	30
  6238  00189E  0100               	movlb	0	; () banked
  6239  0018A0  6FFD               	movwf	??_full_drive& (0+255),b
  6240  0018A2  0E37               	movlw	55
  6241  0018A4                     u9817:
  6242  0018A4  2EE8               	decfsz	wreg,f,c
  6243  0018A6  D7FE               	bra	u9817
  6244  0018A8  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6245  0018AA  D7FC               	bra	u9817
  6246                           
  6247                           ;actuators_main.c: 648:             LATA = 0b00001001;
  6248  0018AC  0E09               	movlw	9
  6249  0018AE  6E89               	movwf	3977,c	;volatile
  6250                           
  6251                           ;actuators_main.c: 649:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6252  0018B0  0E1E               	movlw	30
  6253  0018B2  0100               	movlb	0	; () banked
  6254  0018B4  6FFD               	movwf	??_full_drive& (0+255),b
  6255  0018B6  0E37               	movlw	55
  6256  0018B8                     u9827:
  6257  0018B8  2EE8               	decfsz	wreg,f,c
  6258  0018BA  D7FE               	bra	u9827
  6259  0018BC  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6260  0018BE  D7FC               	bra	u9827
  6261  0018C0                     l7231:
  6262                           
  6263                           ;actuators_main.c: 652:     if (stepper_no == 2){
  6264  0018C0  0E02               	movlw	2
  6265  0018C2  0100               	movlb	0	; () banked
  6266  0018C4  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6267  0018C6  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6268  0018C8  A4D8               	btfss	status,2,c
  6269  0018CA  D089               	goto	l7309
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;actuators_main.c: 653:         if (direction == 1){
  6273  0018CC  05FE               	decf	full_drive@direction& (0+255),w,b
  6274  0018CE  A4D8               	btfss	status,2,c
  6275  0018D0  D041               	goto	l7271
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;actuators_main.c: 654:             LATCbits.LATC0 = 1;
  6279  0018D2  808B               	bsf	3979,0,c	;volatile
  6280                           
  6281                           ;actuators_main.c: 655:             LATEbits.LATE0 = 1;
  6282  0018D4  808D               	bsf	3981,0,c	;volatile
  6283                           
  6284                           ;actuators_main.c: 656:             LATEbits.LATE1 = 0;
  6285  0018D6  928D               	bcf	3981,1,c	;volatile
  6286                           
  6287                           ;actuators_main.c: 657:             LATEbits.LATE2 = 0;
  6288  0018D8  948D               	bcf	3981,2,c	;volatile
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;actuators_main.c: 658:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6292  0018DA  0E0D               	movlw	13
  6293  0018DC  0100               	movlb	0	; () banked
  6294  0018DE  6FFD               	movwf	??_full_drive& (0+255),b
  6295  0018E0  0EFB               	movlw	251
  6296  0018E2                     u9837:
  6297  0018E2  2EE8               	decfsz	wreg,f,c
  6298  0018E4  D7FE               	bra	u9837
  6299  0018E6  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6300  0018E8  D7FC               	bra	u9837
  6301  0018EA  D000               	nop2	
  6302                           
  6303                           ;actuators_main.c: 659:             LATCbits.LATC0 = 0;
  6304  0018EC  908B               	bcf	3979,0,c	;volatile
  6305                           
  6306                           ;actuators_main.c: 660:             LATEbits.LATE0 = 1;
  6307  0018EE  808D               	bsf	3981,0,c	;volatile
  6308                           
  6309                           ;actuators_main.c: 661:             LATEbits.LATE1 = 1;
  6310  0018F0  828D               	bsf	3981,1,c	;volatile
  6311                           
  6312                           ;actuators_main.c: 662:             LATEbits.LATE2 = 0;
  6313  0018F2  948D               	bcf	3981,2,c	;volatile
  6314                           
  6315                           ;actuators_main.c: 663:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6316  0018F4  0E0D               	movlw	13
  6317  0018F6  0100               	movlb	0	; () banked
  6318  0018F8  6FFD               	movwf	??_full_drive& (0+255),b
  6319  0018FA  0EFB               	movlw	251
  6320  0018FC                     u9847:
  6321  0018FC  2EE8               	decfsz	wreg,f,c
  6322  0018FE  D7FE               	bra	u9847
  6323  001900  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6324  001902  D7FC               	bra	u9847
  6325  001904  D000               	nop2	
  6326                           
  6327                           ;actuators_main.c: 664:             LATCbits.LATC0 = 0;
  6328  001906  908B               	bcf	3979,0,c	;volatile
  6329                           
  6330                           ;actuators_main.c: 665:             LATEbits.LATE0 = 0;
  6331  001908  908D               	bcf	3981,0,c	;volatile
  6332                           
  6333                           ;actuators_main.c: 666:             LATEbits.LATE1 = 1;
  6334  00190A  828D               	bsf	3981,1,c	;volatile
  6335                           
  6336                           ;actuators_main.c: 667:             LATEbits.LATE2 = 1;
  6337  00190C  848D               	bsf	3981,2,c	;volatile
  6338                           
  6339                           ;actuators_main.c: 668:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6340  00190E  0E0D               	movlw	13
  6341  001910  0100               	movlb	0	; () banked
  6342  001912  6FFD               	movwf	??_full_drive& (0+255),b
  6343  001914  0EFB               	movlw	251
  6344  001916                     u9857:
  6345  001916  2EE8               	decfsz	wreg,f,c
  6346  001918  D7FE               	bra	u9857
  6347  00191A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6348  00191C  D7FC               	bra	u9857
  6349  00191E  D000               	nop2	
  6350                           
  6351                           ;actuators_main.c: 669:             LATCbits.LATC0 = 1;
  6352  001920  808B               	bsf	3979,0,c	;volatile
  6353                           
  6354                           ;actuators_main.c: 670:             LATEbits.LATE0 = 0;
  6355  001922  908D               	bcf	3981,0,c	;volatile
  6356                           
  6357                           ;actuators_main.c: 671:             LATEbits.LATE1 = 0;
  6358  001924  928D               	bcf	3981,1,c	;volatile
  6359                           
  6360                           ;actuators_main.c: 672:             LATEbits.LATE2 = 1;
  6361  001926  848D               	bsf	3981,2,c	;volatile
  6362                           
  6363                           ;actuators_main.c: 673:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6364  001928  0E0D               	movlw	13
  6365  00192A  0100               	movlb	0	; () banked
  6366  00192C  6FFD               	movwf	??_full_drive& (0+255),b
  6367  00192E  0EFB               	movlw	251
  6368  001930                     u9867:
  6369  001930  2EE8               	decfsz	wreg,f,c
  6370  001932  D7FE               	bra	u9867
  6371  001934  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6372  001936  D7FC               	bra	u9867
  6373  001938  D000               	nop2	
  6374                           
  6375                           ;actuators_main.c: 674:             LATCbits.LATC0 = 1;
  6376  00193A  808B               	bsf	3979,0,c	;volatile
  6377                           
  6378                           ;actuators_main.c: 675:             LATEbits.LATE0 = 1;
  6379  00193C  808D               	bsf	3981,0,c	;volatile
  6380                           
  6381                           ;actuators_main.c: 676:             LATEbits.LATE1 = 0;
  6382  00193E  928D               	bcf	3981,1,c	;volatile
  6383                           
  6384                           ;actuators_main.c: 677:             LATEbits.LATE2 = 0;
  6385  001940  948D               	bcf	3981,2,c	;volatile
  6386                           
  6387                           ;actuators_main.c: 678:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6388  001942  0E0D               	movlw	13
  6389  001944  0100               	movlb	0	; () banked
  6390  001946  6FFD               	movwf	??_full_drive& (0+255),b
  6391  001948  0EFB               	movlw	251
  6392  00194A                     u9877:
  6393  00194A  2EE8               	decfsz	wreg,f,c
  6394  00194C  D7FE               	bra	u9877
  6395  00194E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6396  001950  D7FC               	bra	u9877
  6397  001952  D000               	nop2	
  6398  001954                     l7271:
  6399                           
  6400                           ;actuators_main.c: 680:         if (direction == 0){
  6401  001954  0100               	movlb	0	; () banked
  6402  001956  51FE               	movf	full_drive@direction& (0+255),w,b
  6403  001958  A4D8               	btfss	status,2,c
  6404  00195A  D041               	goto	l7309
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;actuators_main.c: 681:             LATCbits.LATC0 = 1;
  6408  00195C  808B               	bsf	3979,0,c	;volatile
  6409                           
  6410                           ;actuators_main.c: 682:             LATEbits.LATE0 = 0;
  6411  00195E  908D               	bcf	3981,0,c	;volatile
  6412                           
  6413                           ;actuators_main.c: 683:             LATEbits.LATE1 = 0;
  6414  001960  928D               	bcf	3981,1,c	;volatile
  6415                           
  6416                           ;actuators_main.c: 684:             LATEbits.LATE2 = 1;
  6417  001962  848D               	bsf	3981,2,c	;volatile
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;actuators_main.c: 685:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6421  001964  0E0D               	movlw	13
  6422  001966  0100               	movlb	0	; () banked
  6423  001968  6FFD               	movwf	??_full_drive& (0+255),b
  6424  00196A  0EFB               	movlw	251
  6425  00196C                     u9887:
  6426  00196C  2EE8               	decfsz	wreg,f,c
  6427  00196E  D7FE               	bra	u9887
  6428  001970  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6429  001972  D7FC               	bra	u9887
  6430  001974  D000               	nop2	
  6431                           
  6432                           ;actuators_main.c: 686:             LATCbits.LATC0 = 0;
  6433  001976  908B               	bcf	3979,0,c	;volatile
  6434                           
  6435                           ;actuators_main.c: 687:             LATEbits.LATE0 = 0;
  6436  001978  908D               	bcf	3981,0,c	;volatile
  6437                           
  6438                           ;actuators_main.c: 688:             LATEbits.LATE1 = 1;
  6439  00197A  828D               	bsf	3981,1,c	;volatile
  6440                           
  6441                           ;actuators_main.c: 689:             LATEbits.LATE2 = 1;
  6442  00197C  848D               	bsf	3981,2,c	;volatile
  6443                           
  6444                           ;actuators_main.c: 690:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6445  00197E  0E0D               	movlw	13
  6446  001980  0100               	movlb	0	; () banked
  6447  001982  6FFD               	movwf	??_full_drive& (0+255),b
  6448  001984  0EFB               	movlw	251
  6449  001986                     u9897:
  6450  001986  2EE8               	decfsz	wreg,f,c
  6451  001988  D7FE               	bra	u9897
  6452  00198A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6453  00198C  D7FC               	bra	u9897
  6454  00198E  D000               	nop2	
  6455                           
  6456                           ;actuators_main.c: 691:             LATCbits.LATC0 = 0;
  6457  001990  908B               	bcf	3979,0,c	;volatile
  6458                           
  6459                           ;actuators_main.c: 692:             LATEbits.LATE0 = 1;
  6460  001992  808D               	bsf	3981,0,c	;volatile
  6461                           
  6462                           ;actuators_main.c: 693:             LATEbits.LATE1 = 1;
  6463  001994  828D               	bsf	3981,1,c	;volatile
  6464                           
  6465                           ;actuators_main.c: 694:             LATEbits.LATE2 = 0;
  6466  001996  948D               	bcf	3981,2,c	;volatile
  6467                           
  6468                           ;actuators_main.c: 695:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6469  001998  0E0D               	movlw	13
  6470  00199A  0100               	movlb	0	; () banked
  6471  00199C  6FFD               	movwf	??_full_drive& (0+255),b
  6472  00199E  0EFB               	movlw	251
  6473  0019A0                     u9907:
  6474  0019A0  2EE8               	decfsz	wreg,f,c
  6475  0019A2  D7FE               	bra	u9907
  6476  0019A4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6477  0019A6  D7FC               	bra	u9907
  6478  0019A8  D000               	nop2	
  6479                           
  6480                           ;actuators_main.c: 696:             LATCbits.LATC0 = 1;
  6481  0019AA  808B               	bsf	3979,0,c	;volatile
  6482                           
  6483                           ;actuators_main.c: 697:             LATEbits.LATE0 = 1;
  6484  0019AC  808D               	bsf	3981,0,c	;volatile
  6485                           
  6486                           ;actuators_main.c: 698:             LATEbits.LATE1 = 0;
  6487  0019AE  928D               	bcf	3981,1,c	;volatile
  6488                           
  6489                           ;actuators_main.c: 699:             LATEbits.LATE2 = 0;
  6490  0019B0  948D               	bcf	3981,2,c	;volatile
  6491                           
  6492                           ;actuators_main.c: 700:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6493  0019B2  0E0D               	movlw	13
  6494  0019B4  0100               	movlb	0	; () banked
  6495  0019B6  6FFD               	movwf	??_full_drive& (0+255),b
  6496  0019B8  0EFB               	movlw	251
  6497  0019BA                     u9917:
  6498  0019BA  2EE8               	decfsz	wreg,f,c
  6499  0019BC  D7FE               	bra	u9917
  6500  0019BE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6501  0019C0  D7FC               	bra	u9917
  6502  0019C2  D000               	nop2	
  6503                           
  6504                           ;actuators_main.c: 701:             LATCbits.LATC0 = 1;
  6505  0019C4  808B               	bsf	3979,0,c	;volatile
  6506                           
  6507                           ;actuators_main.c: 702:             LATEbits.LATE0 = 0;
  6508  0019C6  908D               	bcf	3981,0,c	;volatile
  6509                           
  6510                           ;actuators_main.c: 703:             LATEbits.LATE1 = 0;
  6511  0019C8  928D               	bcf	3981,1,c	;volatile
  6512                           
  6513                           ;actuators_main.c: 704:             LATEbits.LATE2 = 1;
  6514  0019CA  848D               	bsf	3981,2,c	;volatile
  6515                           
  6516                           ;actuators_main.c: 705:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6517  0019CC  0E0D               	movlw	13
  6518  0019CE  0100               	movlb	0	; () banked
  6519  0019D0  6FFD               	movwf	??_full_drive& (0+255),b
  6520  0019D2  0EFB               	movlw	251
  6521  0019D4                     u9927:
  6522  0019D4  2EE8               	decfsz	wreg,f,c
  6523  0019D6  D7FE               	bra	u9927
  6524  0019D8  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6525  0019DA  D7FC               	bra	u9927
  6526  0019DC  D000               	nop2	
  6527  0019DE                     l7309:
  6528                           
  6529                           ;actuators_main.c: 708:     if (stepper_no == 3){
  6530  0019DE  0E03               	movlw	3
  6531  0019E0  0100               	movlb	0	; () banked
  6532  0019E2  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6533  0019E4  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6534  0019E6  A4D8               	btfss	status,2,c
  6535  0019E8  D086               	goto	l7389
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;actuators_main.c: 709:         printf("what");
  6539  0019EA  0EFA               	movlw	low STR_9
  6540  0019EC  6FED               	movwf	printf@fmt& (0+255),b
  6541  0019EE  0EFF               	movlw	high STR_9
  6542  0019F0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6543  0019F2  EC37  F01F         	call	_printf	;wreg free
  6544                           
  6545                           ;actuators_main.c: 710:         if (direction == 0){
  6546  0019F6  0100               	movlb	0	; () banked
  6547  0019F8  51FE               	movf	full_drive@direction& (0+255),w,b
  6548  0019FA  A4D8               	btfss	status,2,c
  6549  0019FC  D03C               	goto	l7351
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;actuators_main.c: 711:             LATCbits.LATC5 = 1;
  6553  0019FE  8A8B               	bsf	3979,5,c	;volatile
  6554                           
  6555                           ;actuators_main.c: 712:             LATCbits.LATC6 = 0;
  6556  001A00  9C8B               	bcf	3979,6,c	;volatile
  6557                           
  6558                           ;actuators_main.c: 713:             LATCbits.LATC7 = 0;
  6559  001A02  9E8B               	bcf	3979,7,c	;volatile
  6560                           
  6561                           ;actuators_main.c: 714:             LATAbits.LATA5 = 1;
  6562  001A04  8A89               	bsf	3977,5,c	;volatile
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;actuators_main.c: 715:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6566  001A06  0E1E               	movlw	30
  6567  001A08  0100               	movlb	0	; () banked
  6568  001A0A  6FFD               	movwf	??_full_drive& (0+255),b
  6569  001A0C  0E37               	movlw	55
  6570  001A0E                     u9937:
  6571  001A0E  2EE8               	decfsz	wreg,f,c
  6572  001A10  D7FE               	bra	u9937
  6573  001A12  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6574  001A14  D7FC               	bra	u9937
  6575                           
  6576                           ;actuators_main.c: 716:             LATCbits.LATC5 = 1;
  6577  001A16  8A8B               	bsf	3979,5,c	;volatile
  6578                           
  6579                           ;actuators_main.c: 717:             LATCbits.LATC6 = 1;
  6580  001A18  8C8B               	bsf	3979,6,c	;volatile
  6581                           
  6582                           ;actuators_main.c: 718:             LATCbits.LATC7 = 0;
  6583  001A1A  9E8B               	bcf	3979,7,c	;volatile
  6584                           
  6585                           ;actuators_main.c: 719:             LATAbits.LATA5 = 0;
  6586  001A1C  9A89               	bcf	3977,5,c	;volatile
  6587                           
  6588                           ;actuators_main.c: 720:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6589  001A1E  0E1E               	movlw	30
  6590  001A20  0100               	movlb	0	; () banked
  6591  001A22  6FFD               	movwf	??_full_drive& (0+255),b
  6592  001A24  0E37               	movlw	55
  6593  001A26                     u9947:
  6594  001A26  2EE8               	decfsz	wreg,f,c
  6595  001A28  D7FE               	bra	u9947
  6596  001A2A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6597  001A2C  D7FC               	bra	u9947
  6598                           
  6599                           ;actuators_main.c: 721:             LATCbits.LATC5 = 0;
  6600  001A2E  9A8B               	bcf	3979,5,c	;volatile
  6601                           
  6602                           ;actuators_main.c: 722:             LATCbits.LATC6 = 1;
  6603  001A30  8C8B               	bsf	3979,6,c	;volatile
  6604                           
  6605                           ;actuators_main.c: 723:             LATCbits.LATC7 = 1;
  6606  001A32  8E8B               	bsf	3979,7,c	;volatile
  6607                           
  6608                           ;actuators_main.c: 724:             LATAbits.LATA5 = 0;
  6609  001A34  9A89               	bcf	3977,5,c	;volatile
  6610                           
  6611                           ;actuators_main.c: 725:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6612  001A36  0E1E               	movlw	30
  6613  001A38  0100               	movlb	0	; () banked
  6614  001A3A  6FFD               	movwf	??_full_drive& (0+255),b
  6615  001A3C  0E37               	movlw	55
  6616  001A3E                     u9957:
  6617  001A3E  2EE8               	decfsz	wreg,f,c
  6618  001A40  D7FE               	bra	u9957
  6619  001A42  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6620  001A44  D7FC               	bra	u9957
  6621                           
  6622                           ;actuators_main.c: 726:             LATCbits.LATC5 = 0;
  6623  001A46  9A8B               	bcf	3979,5,c	;volatile
  6624                           
  6625                           ;actuators_main.c: 727:             LATCbits.LATC6 = 0;
  6626  001A48  9C8B               	bcf	3979,6,c	;volatile
  6627                           
  6628                           ;actuators_main.c: 728:             LATCbits.LATC7 = 1;
  6629  001A4A  8E8B               	bsf	3979,7,c	;volatile
  6630                           
  6631                           ;actuators_main.c: 729:             LATAbits.LATA5 = 1;
  6632  001A4C  8A89               	bsf	3977,5,c	;volatile
  6633                           
  6634                           ;actuators_main.c: 730:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6635  001A4E  0E1E               	movlw	30
  6636  001A50  0100               	movlb	0	; () banked
  6637  001A52  6FFD               	movwf	??_full_drive& (0+255),b
  6638  001A54  0E37               	movlw	55
  6639  001A56                     u9967:
  6640  001A56  2EE8               	decfsz	wreg,f,c
  6641  001A58  D7FE               	bra	u9967
  6642  001A5A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6643  001A5C  D7FC               	bra	u9967
  6644                           
  6645                           ;actuators_main.c: 731:             LATCbits.LATC5 = 1;
  6646  001A5E  8A8B               	bsf	3979,5,c	;volatile
  6647                           
  6648                           ;actuators_main.c: 732:             LATCbits.LATC6 = 0;
  6649  001A60  9C8B               	bcf	3979,6,c	;volatile
  6650                           
  6651                           ;actuators_main.c: 733:             LATCbits.LATC7 = 0;
  6652  001A62  9E8B               	bcf	3979,7,c	;volatile
  6653                           
  6654                           ;actuators_main.c: 734:             LATAbits.LATA5 = 1;
  6655  001A64  8A89               	bsf	3977,5,c	;volatile
  6656                           
  6657                           ;actuators_main.c: 735:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6658  001A66  0E1E               	movlw	30
  6659  001A68  0100               	movlb	0	; () banked
  6660  001A6A  6FFD               	movwf	??_full_drive& (0+255),b
  6661  001A6C  0E37               	movlw	55
  6662  001A6E                     u9977:
  6663  001A6E  2EE8               	decfsz	wreg,f,c
  6664  001A70  D7FE               	bra	u9977
  6665  001A72  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6666  001A74  D7FC               	bra	u9977
  6667  001A76                     l7351:
  6668                           
  6669                           ;actuators_main.c: 737:         if (direction == 1){
  6670  001A76  0100               	movlb	0	; () banked
  6671  001A78  05FE               	decf	full_drive@direction& (0+255),w,b
  6672  001A7A  A4D8               	btfss	status,2,c
  6673  001A7C  D03C               	goto	l7389
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;actuators_main.c: 738:             LATCbits.LATC5 = 1;
  6677  001A7E  8A8B               	bsf	3979,5,c	;volatile
  6678                           
  6679                           ;actuators_main.c: 739:             LATCbits.LATC6 = 1;
  6680  001A80  8C8B               	bsf	3979,6,c	;volatile
  6681                           
  6682                           ;actuators_main.c: 740:             LATCbits.LATC7 = 0;
  6683  001A82  9E8B               	bcf	3979,7,c	;volatile
  6684                           
  6685                           ;actuators_main.c: 741:             LATAbits.LATA5 = 0;
  6686  001A84  9A89               	bcf	3977,5,c	;volatile
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;actuators_main.c: 742:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6690  001A86  0E1E               	movlw	30
  6691  001A88  0100               	movlb	0	; () banked
  6692  001A8A  6FFD               	movwf	??_full_drive& (0+255),b
  6693  001A8C  0E37               	movlw	55
  6694  001A8E                     u9987:
  6695  001A8E  2EE8               	decfsz	wreg,f,c
  6696  001A90  D7FE               	bra	u9987
  6697  001A92  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6698  001A94  D7FC               	bra	u9987
  6699                           
  6700                           ;actuators_main.c: 743:             LATCbits.LATC5 = 0;
  6701  001A96  9A8B               	bcf	3979,5,c	;volatile
  6702                           
  6703                           ;actuators_main.c: 744:             LATCbits.LATC6 = 1;
  6704  001A98  8C8B               	bsf	3979,6,c	;volatile
  6705                           
  6706                           ;actuators_main.c: 745:             LATCbits.LATC7 = 1;
  6707  001A9A  8E8B               	bsf	3979,7,c	;volatile
  6708                           
  6709                           ;actuators_main.c: 746:             LATAbits.LATA5 = 0;
  6710  001A9C  9A89               	bcf	3977,5,c	;volatile
  6711                           
  6712                           ;actuators_main.c: 747:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6713  001A9E  0E1E               	movlw	30
  6714  001AA0  0100               	movlb	0	; () banked
  6715  001AA2  6FFD               	movwf	??_full_drive& (0+255),b
  6716  001AA4  0E37               	movlw	55
  6717  001AA6                     u9997:
  6718  001AA6  2EE8               	decfsz	wreg,f,c
  6719  001AA8  D7FE               	bra	u9997
  6720  001AAA  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6721  001AAC  D7FC               	bra	u9997
  6722                           
  6723                           ;actuators_main.c: 748:             LATCbits.LATC5 = 0;
  6724  001AAE  9A8B               	bcf	3979,5,c	;volatile
  6725                           
  6726                           ;actuators_main.c: 749:             LATCbits.LATC6 = 0;
  6727  001AB0  9C8B               	bcf	3979,6,c	;volatile
  6728                           
  6729                           ;actuators_main.c: 750:             LATCbits.LATC7 = 1;
  6730  001AB2  8E8B               	bsf	3979,7,c	;volatile
  6731                           
  6732                           ;actuators_main.c: 751:             LATAbits.LATA5 = 1;
  6733  001AB4  8A89               	bsf	3977,5,c	;volatile
  6734                           
  6735                           ;actuators_main.c: 752:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6736  001AB6  0E1E               	movlw	30
  6737  001AB8  0100               	movlb	0	; () banked
  6738  001ABA  6FFD               	movwf	??_full_drive& (0+255),b
  6739  001ABC  0E37               	movlw	55
  6740  001ABE                     u10007:
  6741  001ABE  2EE8               	decfsz	wreg,f,c
  6742  001AC0  D7FE               	bra	u10007
  6743  001AC2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6744  001AC4  D7FC               	bra	u10007
  6745                           
  6746                           ;actuators_main.c: 753:             LATCbits.LATC5 = 1;
  6747  001AC6  8A8B               	bsf	3979,5,c	;volatile
  6748                           
  6749                           ;actuators_main.c: 754:             LATCbits.LATC6 = 0;
  6750  001AC8  9C8B               	bcf	3979,6,c	;volatile
  6751                           
  6752                           ;actuators_main.c: 755:             LATCbits.LATC7 = 0;
  6753  001ACA  9E8B               	bcf	3979,7,c	;volatile
  6754                           
  6755                           ;actuators_main.c: 756:             LATAbits.LATA5 = 1;
  6756  001ACC  8A89               	bsf	3977,5,c	;volatile
  6757                           
  6758                           ;actuators_main.c: 757:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6759  001ACE  0E1E               	movlw	30
  6760  001AD0  0100               	movlb	0	; () banked
  6761  001AD2  6FFD               	movwf	??_full_drive& (0+255),b
  6762  001AD4  0E37               	movlw	55
  6763  001AD6                     u10017:
  6764  001AD6  2EE8               	decfsz	wreg,f,c
  6765  001AD8  D7FE               	bra	u10017
  6766  001ADA  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6767  001ADC  D7FC               	bra	u10017
  6768                           
  6769                           ;actuators_main.c: 758:             LATCbits.LATC5 = 1;
  6770  001ADE  8A8B               	bsf	3979,5,c	;volatile
  6771                           
  6772                           ;actuators_main.c: 759:             LATCbits.LATC6 = 1;
  6773  001AE0  8C8B               	bsf	3979,6,c	;volatile
  6774                           
  6775                           ;actuators_main.c: 760:             LATCbits.LATC7 = 0;
  6776  001AE2  9E8B               	bcf	3979,7,c	;volatile
  6777                           
  6778                           ;actuators_main.c: 761:             LATAbits.LATA5 = 0;
  6779  001AE4  9A89               	bcf	3977,5,c	;volatile
  6780                           
  6781                           ;actuators_main.c: 762:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6782  001AE6  0E1E               	movlw	30
  6783  001AE8  0100               	movlb	0	; () banked
  6784  001AEA  6FFD               	movwf	??_full_drive& (0+255),b
  6785  001AEC  0E37               	movlw	55
  6786  001AEE                     u10027:
  6787  001AEE  2EE8               	decfsz	wreg,f,c
  6788  001AF0  D7FE               	bra	u10027
  6789  001AF2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6790  001AF4  D7FC               	bra	u10027
  6791  001AF6                     l7389:
  6792                           
  6793                           ;actuators_main.c: 765:                     LATA = 0b00000000;
  6794  001AF6  0E00               	movlw	0
  6795  001AF8  6E89               	movwf	3977,c	;volatile
  6796                           
  6797                           ;actuators_main.c: 766:         LATCbits.LATC0 = 0;
  6798  001AFA  908B               	bcf	3979,0,c	;volatile
  6799                           
  6800                           ;actuators_main.c: 767:         LATEbits.LATE0 = 0;
  6801  001AFC  908D               	bcf	3981,0,c	;volatile
  6802                           
  6803                           ;actuators_main.c: 768:         LATEbits.LATE1 = 0;
  6804  001AFE  928D               	bcf	3981,1,c	;volatile
  6805                           
  6806                           ;actuators_main.c: 769:         LATEbits.LATE2 = 0;
  6807  001B00  948D               	bcf	3981,2,c	;volatile
  6808                           
  6809                           ;actuators_main.c: 770:         LATCbits.LATC5 = 0;
  6810  001B02  9A8B               	bcf	3979,5,c	;volatile
  6811                           
  6812                           ;actuators_main.c: 771:         LATCbits.LATC6 = 0;
  6813  001B04  9C8B               	bcf	3979,6,c	;volatile
  6814                           
  6815                           ;actuators_main.c: 772:         LATCbits.LATC7 = 0;
  6816  001B06  9E8B               	bcf	3979,7,c	;volatile
  6817                           
  6818                           ;actuators_main.c: 773:         LATAbits.LATA5 = 0;
  6819  001B08  9A89               	bcf	3977,5,c	;volatile
  6820  001B0A  0012               	return		;funcret
  6821  001B0C                     __end_of_full_drive:
  6822                           	opt callstack 0
  6823                           
  6824 ;; *************** function _servo *****************
  6825 ;; Defined at:
  6826 ;;		line 190 in file "actuators_main.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;		None
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;		None
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;Total ram usage:        2 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    4
  6847 ;; This function calls:
  6848 ;;		_servoRotate0
  6849 ;;		_servoRotate180
  6850 ;; This function is called by:
  6851 ;;		_actuators_main
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text16
  6856  0036EE                     __ptext16:
  6857                           	opt callstack 0
  6858  0036EE                     _servo:
  6859                           	opt callstack 25
  6860                           
  6861                           ;actuators_main.c: 192:   TRISB = 0;
  6862                           
  6863                           ;incstack = 0
  6864  0036EE  0E00               	movlw	0
  6865  0036F0  6E93               	movwf	3987,c	;volatile
  6866                           
  6867                           ;actuators_main.c: 193:     TRISC = 0;
  6868  0036F2  0E00               	movlw	0
  6869  0036F4  6E94               	movwf	3988,c	;volatile
  6870                           
  6871                           ;actuators_main.c: 194:     TRISD = 0;
  6872  0036F6  0E00               	movlw	0
  6873  0036F8  6E95               	movwf	3989,c	;volatile
  6874                           
  6875                           ;actuators_main.c: 196:       TRISBbits.RB0 = 0;
  6876  0036FA  9093               	bcf	3987,0,c	;volatile
  6877                           
  6878                           ;actuators_main.c: 197:     LATBbits.LATB0 = 1;
  6879  0036FC  808A               	bsf	3978,0,c	;volatile
  6880                           
  6881                           ;actuators_main.c: 198:     {;actuators_main.c: 200:     servoRotate0(1);
  6882  0036FE  0E00               	movlw	0
  6883  003700  0100               	movlb	0	; () banked
  6884  003702  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6885  003704  0E01               	movlw	1
  6886  003706  6F80               	movwf	servoRotate0@servo& (0+255),b
  6887  003708  ECAD  F019         	call	_servoRotate0	;wreg free
  6888                           
  6889                           ;actuators_main.c: 204:     servoRotate180(1);
  6890  00370C  0E00               	movlw	0
  6891  00370E  0100               	movlb	0	; () banked
  6892  003710  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6893  003712  0E01               	movlw	1
  6894  003714  6F80               	movwf	servoRotate180@servo& (0+255),b
  6895  003716  EC34  F019         	call	_servoRotate180	;wreg free
  6896                           
  6897                           ;actuators_main.c: 205:     _delay((unsigned long)((400)*(10000000/4000.0)));
  6898  00371A  0E06               	movlw	6
  6899  00371C  0100               	movlb	0	; () banked
  6900  00371E  6F86               	movwf	(??_servo+1)& (0+255),b
  6901  003720  0E13               	movlw	19
  6902  003722  6F85               	movwf	??_servo& (0+255),b
  6903  003724  0EAD               	movlw	173
  6904  003726                     u10037:
  6905  003726  2EE8               	decfsz	wreg,f,c
  6906  003728  D7FE               	bra	u10037
  6907  00372A  2F85               	decfsz	??_servo& (0+255),f,b
  6908  00372C  D7FC               	bra	u10037
  6909  00372E  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  6910  003730  D7FA               	bra	u10037
  6911  003732  D000               	nop2	
  6912                           
  6913                           ;actuators_main.c: 206:     servoRotate0(1);
  6914  003734  0E00               	movlw	0
  6915  003736  0100               	movlb	0	; () banked
  6916  003738  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6917  00373A  0E01               	movlw	1
  6918  00373C  6F80               	movwf	servoRotate0@servo& (0+255),b
  6919  00373E  ECAD  F019         	call	_servoRotate0	;wreg free
  6920                           
  6921                           ;actuators_main.c: 212:     _delay((unsigned long)((50)*(10000000/4000.0)));
  6922  003742  0EA3               	movlw	163
  6923  003744  0100               	movlb	0	; () banked
  6924  003746  6F85               	movwf	??_servo& (0+255),b
  6925  003748  0E55               	movlw	85
  6926  00374A                     u10047:
  6927  00374A  2EE8               	decfsz	wreg,f,c
  6928  00374C  D7FE               	bra	u10047
  6929  00374E  2F85               	decfsz	??_servo& (0+255),f,b
  6930  003750  D7FC               	bra	u10047
  6931                           
  6932                           ;actuators_main.c: 213:     servoRotate180(3);
  6933  003752  0E00               	movlw	0
  6934  003754  0100               	movlb	0	; () banked
  6935  003756  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6936  003758  0E03               	movlw	3
  6937  00375A  6F80               	movwf	servoRotate180@servo& (0+255),b
  6938  00375C  EC34  F019         	call	_servoRotate180	;wreg free
  6939                           
  6940                           ;actuators_main.c: 214:     servoRotate0(3);
  6941  003760  0E00               	movlw	0
  6942  003762  0100               	movlb	0	; () banked
  6943  003764  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6944  003766  0E03               	movlw	3
  6945  003768  6F80               	movwf	servoRotate0@servo& (0+255),b
  6946  00376A  ECAD  F019         	call	_servoRotate0	;wreg free
  6947                           
  6948                           ;actuators_main.c: 215:     servoRotate180(3);
  6949  00376E  0E00               	movlw	0
  6950  003770  0100               	movlb	0	; () banked
  6951  003772  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6952  003774  0E03               	movlw	3
  6953  003776  6F80               	movwf	servoRotate180@servo& (0+255),b
  6954  003778  EC34  F019         	call	_servoRotate180	;wreg free
  6955  00377C  0012               	return		;funcret
  6956  00377E                     __end_of_servo:
  6957                           	opt callstack 0
  6958                           
  6959 ;; *************** function _servoRotate180 *****************
  6960 ;; Defined at:
  6961 ;;		line 142 in file "actuators_main.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  servo           2    0[BANK0 ] int 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;  i               2    3[BANK0 ] unsigned int 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      void 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6978 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6979 ;;Total ram usage:        5 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:    3
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_servo
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text17
  6990  003268                     __ptext17:
  6991                           	opt callstack 0
  6992  003268                     _servoRotate180:
  6993                           	opt callstack 25
  6994                           
  6995                           ;actuators_main.c: 142: void servoRotate180(int servo);actuators_main.c: 143: {;actuator
      +                          s_main.c: 144:   unsigned int i;;actuators_main.c: 145:     if (servo==1){
  6996                           
  6997                           ;incstack = 0
  6998  003268  0100               	movlb	0	; () banked
  6999  00326A  0580               	decf	servoRotate180@servo& (0+255),w,b
  7000  00326C  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7001  00326E  A4D8               	btfss	status,2,c
  7002  003270  D027               	goto	u7840
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;actuators_main.c: 146:     for(i=0;i<30;i++)
  7006  003272  0E00               	movlw	0
  7007  003274  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7008  003276  0E00               	movlw	0
  7009  003278  6F83               	movwf	servoRotate180@i& (0+255),b
  7010  00327A                     l134:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;actuators_main.c: 147:         {;actuators_main.c: 148:           RC1 = 1;
  7014  00327A  8282               	bsf	3970,1,c	;volatile
  7015                           
  7016                           ;actuators_main.c: 149:             RC2 = 1;
  7017  00327C  8482               	bsf	3970,2,c	;volatile
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;actuators_main.c: 150:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  7021  00327E  0EE1               	movlw	225
  7022  003280                     u10057:
  7023  003280  D000               	nop2	
  7024  003282  2EE8               	decfsz	wreg,f,c
  7025  003284  D7FD               	bra	u10057
  7026                           
  7027                           ;actuators_main.c: 152:           RC2 =0;
  7028  003286  9482               	bcf	3970,2,c	;volatile
  7029                           
  7030                           ;actuators_main.c: 153:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  7031  003288  0E07               	movlw	7
  7032  00328A  0100               	movlb	0	; () banked
  7033  00328C  6F82               	movwf	??_servoRotate180& (0+255),b
  7034  00328E  0ED0               	movlw	208
  7035  003290                     u10067:
  7036  003290  2EE8               	decfsz	wreg,f,c
  7037  003292  D7FE               	bra	u10067
  7038  003294  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7039  003296  D7FC               	bra	u10067
  7040  003298  F000               	nop	
  7041                           
  7042                           ;actuators_main.c: 155:           RC1 = 0;
  7043  00329A  9282               	bcf	3970,1,c	;volatile
  7044                           
  7045                           ;actuators_main.c: 156:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  7046  00329C  0E2C               	movlw	44
  7047  00329E  0100               	movlb	0	; () banked
  7048  0032A0  6F82               	movwf	??_servoRotate180& (0+255),b
  7049  0032A2  0EFD               	movlw	253
  7050  0032A4                     u10077:
  7051  0032A4  2EE8               	decfsz	wreg,f,c
  7052  0032A6  D7FE               	bra	u10077
  7053  0032A8  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7054  0032AA  D7FC               	bra	u10077
  7055  0032AC  F000               	nop	
  7056                           
  7057                           ;actuators_main.c: 157:         }
  7058  0032AE  0100               	movlb	0	; () banked
  7059  0032B0  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7060  0032B2  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7061  0032B4  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7062  0032B6  E104               	bnz	u7840
  7063  0032B8  0E1E               	movlw	30
  7064  0032BA  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7065  0032BC  A0D8               	btfss	status,0,c
  7066  0032BE  D7DD               	goto	l134
  7067  0032C0                     u7840:
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;actuators_main.c: 159:   if (servo==2){
  7071  0032C0  0E02               	movlw	2
  7072  0032C2  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  7073  0032C4  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7074  0032C6  A4D8               	btfss	status,2,c
  7075  0032C8  D020               	goto	u7860
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;actuators_main.c: 160:     for(i=0;i<30;i++)
  7079  0032CA  0E00               	movlw	0
  7080  0032CC  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7081  0032CE  0E00               	movlw	0
  7082  0032D0  6F83               	movwf	servoRotate180@i& (0+255),b
  7083  0032D2                     l137:
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;actuators_main.c: 161:           {;actuators_main.c: 163:     RD1 = 1;
  7087  0032D2  8283               	bsf	3971,1,c	;volatile
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;actuators_main.c: 167:     _delay((unsigned long)((950)*(10000000/4000000.0)));
  7091  0032D4  0E04               	movlw	4
  7092  0032D6  0100               	movlb	0	; () banked
  7093  0032D8  6F82               	movwf	??_servoRotate180& (0+255),b
  7094  0032DA  0E14               	movlw	20
  7095  0032DC                     u10087:
  7096  0032DC  2EE8               	decfsz	wreg,f,c
  7097  0032DE  D7FE               	bra	u10087
  7098  0032E0  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7099  0032E2  D7FC               	bra	u10087
  7100                           
  7101                           ;actuators_main.c: 169:     RD1 = 0;
  7102  0032E4  9283               	bcf	3971,1,c	;volatile
  7103                           
  7104                           ;actuators_main.c: 172:     _delay((unsigned long)((26650)*(10000000/4000000.0)));
  7105  0032E6  0E57               	movlw	87
  7106  0032E8  0100               	movlb	0	; () banked
  7107  0032EA  6F82               	movwf	??_servoRotate180& (0+255),b
  7108  0032EC  0E85               	movlw	133
  7109  0032EE                     u10097:
  7110  0032EE  2EE8               	decfsz	wreg,f,c
  7111  0032F0  D7FE               	bra	u10097
  7112  0032F2  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7113  0032F4  D7FC               	bra	u10097
  7114  0032F6  F000               	nop	
  7115                           
  7116                           ;actuators_main.c: 174:           }
  7117  0032F8  0100               	movlb	0	; () banked
  7118  0032FA  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7119  0032FC  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7120  0032FE  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7121  003300  E104               	bnz	u7860
  7122  003302  0E1E               	movlw	30
  7123  003304  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7124  003306  A0D8               	btfss	status,0,c
  7125  003308  D7E4               	goto	l137
  7126  00330A                     u7860:
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;actuators_main.c: 176:     if (servo==3){
  7130  00330A  0E03               	movlw	3
  7131  00330C  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  7132  00330E  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7133  003310  A4D8               	btfss	status,2,c
  7134  003312  0012               	return	
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;actuators_main.c: 177:       for(i=0;i<30;i++)
  7138  003314  0E00               	movlw	0
  7139  003316  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7140  003318  0E00               	movlw	0
  7141  00331A  6F83               	movwf	servoRotate180@i& (0+255),b
  7142  00331C                     l140:
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;actuators_main.c: 178:         {;actuators_main.c: 179:         RD0 = 1;
  7146  00331C  8083               	bsf	3971,0,c	;volatile
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;actuators_main.c: 181:         _delay((unsigned long)((2500)*(10000000/4000000.0)));
  7150  00331E  0E09               	movlw	9
  7151  003320  0100               	movlb	0	; () banked
  7152  003322  6F82               	movwf	??_servoRotate180& (0+255),b
  7153  003324  0E1C               	movlw	28
  7154  003326                     u10107:
  7155  003326  2EE8               	decfsz	wreg,f,c
  7156  003328  D7FE               	bra	u10107
  7157  00332A  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7158  00332C  D7FC               	bra	u10107
  7159  00332E  F000               	nop	
  7160                           
  7161                           ;actuators_main.c: 184:             RD0 = 0;
  7162  003330  9083               	bcf	3971,0,c	;volatile
  7163                           
  7164                           ;actuators_main.c: 186:         _delay((unsigned long)((10500)*(10000000/4000000.0)));
  7165  003332  0E23               	movlw	35
  7166  003334  0100               	movlb	0	; () banked
  7167  003336  6F82               	movwf	??_servoRotate180& (0+255),b
  7168  003338  0E15               	movlw	21
  7169  00333A                     u10117:
  7170  00333A  2EE8               	decfsz	wreg,f,c
  7171  00333C  D7FE               	bra	u10117
  7172  00333E  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7173  003340  D7FC               	bra	u10117
  7174  003342  D000               	nop2	
  7175                           
  7176                           ;actuators_main.c: 187:         }
  7177  003344  0100               	movlb	0	; () banked
  7178  003346  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7179  003348  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7180  00334A  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7181  00334C  E105               	bnz	u7880
  7182  00334E  0E1E               	movlw	30
  7183  003350  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7184  003352  B0D8               	btfsc	status,0,c
  7185  003354  0012               	return	
  7186  003356  D7E2               	goto	l140
  7187  003358                     u7880:
  7188                           
  7189                           ; BSR set to: 0
  7190  003358  0012               	return		;funcret
  7191  00335A                     __end_of_servoRotate180:
  7192                           	opt callstack 0
  7193                           
  7194 ;; *************** function _servoRotate0 *****************
  7195 ;; Defined at:
  7196 ;;		line 98 in file "actuators_main.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  servo           2    0[BANK0 ] int 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  i               2    3[BANK0 ] unsigned int 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		wreg, status,2, status,0
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7210 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7211 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7212 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7213 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7214 ;;Total ram usage:        5 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:    3
  7217 ;; This function calls:
  7218 ;;		Nothing
  7219 ;; This function is called by:
  7220 ;;		_servo
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           	psect	text18
  7225  00335A                     __ptext18:
  7226                           	opt callstack 0
  7227  00335A                     _servoRotate0:
  7228                           	opt callstack 25
  7229                           
  7230                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 100:     if (servo==1){
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;incstack = 0
  7234  00335A  0100               	movlb	0	; () banked
  7235  00335C  0580               	decf	servoRotate0@servo& (0+255),w,b
  7236  00335E  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7237  003360  A4D8               	btfss	status,2,c
  7238  003362  D025               	goto	u7780
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;actuators_main.c: 101:       for(i=0;i<30;i++)
  7242  003364  0E00               	movlw	0
  7243  003366  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7244  003368  0E00               	movlw	0
  7245  00336A  6F83               	movwf	servoRotate0@i& (0+255),b
  7246  00336C                     l122:
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;actuators_main.c: 102:           {;actuators_main.c: 103:             RC1 = 1;
  7250  00336C  8282               	bsf	3970,1,c	;volatile
  7251                           
  7252                           ;actuators_main.c: 104:             RC2 = 1;
  7253  00336E  8482               	bsf	3970,2,c	;volatile
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;actuators_main.c: 105:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  7257  003370  0E04               	movlw	4
  7258  003372  0100               	movlb	0	; () banked
  7259  003374  6F82               	movwf	??_servoRotate0& (0+255),b
  7260  003376  0E91               	movlw	145
  7261  003378                     u10127:
  7262  003378  2EE8               	decfsz	wreg,f,c
  7263  00337A  D7FE               	bra	u10127
  7264  00337C  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7265  00337E  D7FC               	bra	u10127
  7266                           
  7267                           ;actuators_main.c: 106:             RC2 = 0;
  7268  003380  9482               	bcf	3970,2,c	;volatile
  7269                           
  7270                           ;actuators_main.c: 107:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  7271  003382  0EFA               	movlw	250
  7272  003384                     u10137:
  7273  003384  2EE8               	decfsz	wreg,f,c
  7274  003386  D7FE               	bra	u10137
  7275                           
  7276                           ;actuators_main.c: 108:             RC1 = 0;
  7277  003388  9282               	bcf	3970,1,c	;volatile
  7278                           
  7279                           ;actuators_main.c: 112:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  7280  00338A  0E3D               	movlw	61
  7281  00338C  0100               	movlb	0	; () banked
  7282  00338E  6F82               	movwf	??_servoRotate0& (0+255),b
  7283  003390  0E62               	movlw	98
  7284  003392                     u10147:
  7285  003392  2EE8               	decfsz	wreg,f,c
  7286  003394  D7FE               	bra	u10147
  7287  003396  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7288  003398  D7FC               	bra	u10147
  7289  00339A  F000               	nop	
  7290                           
  7291                           ;actuators_main.c: 113:           }
  7292  00339C  0100               	movlb	0	; () banked
  7293  00339E  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7294  0033A0  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7295  0033A2  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7296  0033A4  E104               	bnz	u7780
  7297  0033A6  0E1E               	movlw	30
  7298  0033A8  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7299  0033AA  A0D8               	btfss	status,0,c
  7300  0033AC  D7DF               	goto	l122
  7301  0033AE                     u7780:
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;actuators_main.c: 115:     if (servo==2){
  7305  0033AE  0E02               	movlw	2
  7306  0033B0  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7307  0033B2  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7308  0033B4  A4D8               	btfss	status,2,c
  7309  0033B6  D021               	goto	u7800
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;actuators_main.c: 116:       for(i=0;i<30;i++)
  7313  0033B8  0E00               	movlw	0
  7314  0033BA  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7315  0033BC  0E00               	movlw	0
  7316  0033BE  6F83               	movwf	servoRotate0@i& (0+255),b
  7317  0033C0                     l125:
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;actuators_main.c: 117:         {;actuators_main.c: 119:         RD1 = 1;
  7321  0033C0  8283               	bsf	3971,1,c	;volatile
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;actuators_main.c: 122:           _delay((unsigned long)((1250)*(10000000/4000000.0)));
  7325  0033C2  0E05               	movlw	5
  7326  0033C4  0100               	movlb	0	; () banked
  7327  0033C6  6F82               	movwf	??_servoRotate0& (0+255),b
  7328  0033C8  0E0D               	movlw	13
  7329  0033CA                     u10157:
  7330  0033CA  2EE8               	decfsz	wreg,f,c
  7331  0033CC  D7FE               	bra	u10157
  7332  0033CE  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7333  0033D0  D7FC               	bra	u10157
  7334  0033D2  F000               	nop	
  7335                           
  7336                           ;actuators_main.c: 124:         RD1 = 0;
  7337  0033D4  9283               	bcf	3971,1,c	;volatile
  7338                           
  7339                           ;actuators_main.c: 127:           _delay((unsigned long)((16950)*(10000000/4000000.0)));
  7340  0033D6  0E38               	movlw	56
  7341  0033D8  0100               	movlb	0	; () banked
  7342  0033DA  6F82               	movwf	??_servoRotate0& (0+255),b
  7343  0033DC  0E06               	movlw	6
  7344  0033DE                     u10167:
  7345  0033DE  2EE8               	decfsz	wreg,f,c
  7346  0033E0  D7FE               	bra	u10167
  7347  0033E2  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7348  0033E4  D7FC               	bra	u10167
  7349  0033E6  D000               	nop2	
  7350                           
  7351                           ;actuators_main.c: 128:         }
  7352  0033E8  0100               	movlb	0	; () banked
  7353  0033EA  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7354  0033EC  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7355  0033EE  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7356  0033F0  E104               	bnz	u7800
  7357  0033F2  0E1E               	movlw	30
  7358  0033F4  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7359  0033F6  A0D8               	btfss	status,0,c
  7360  0033F8  D7E3               	goto	l125
  7361  0033FA                     u7800:
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;actuators_main.c: 130:     if (servo==3){
  7365  0033FA  0E03               	movlw	3
  7366  0033FC  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7367  0033FE  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7368  003400  A4D8               	btfss	status,2,c
  7369  003402  0012               	return	
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;actuators_main.c: 131:       for(i=0;i<30;i++)
  7373  003404  0E00               	movlw	0
  7374  003406  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7375  003408  0E00               	movlw	0
  7376  00340A  6F83               	movwf	servoRotate0@i& (0+255),b
  7377  00340C                     l128:
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;actuators_main.c: 132:         {;actuators_main.c: 133:         RD0 = 1;
  7381  00340C  8083               	bsf	3971,0,c	;volatile
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;actuators_main.c: 134:         _delay((unsigned long)((2000)*(10000000/4000000.0)));
  7385  00340E  0E07               	movlw	7
  7386  003410  0100               	movlb	0	; () banked
  7387  003412  6F82               	movwf	??_servoRotate0& (0+255),b
  7388  003414  0E7D               	movlw	125
  7389  003416                     u10177:
  7390  003416  2EE8               	decfsz	wreg,f,c
  7391  003418  D7FE               	bra	u10177
  7392  00341A  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7393  00341C  D7FC               	bra	u10177
  7394                           
  7395                           ;actuators_main.c: 137:         RD0 = 0;
  7396  00341E  9083               	bcf	3971,0,c	;volatile
  7397                           
  7398                           ;actuators_main.c: 138:         _delay((unsigned long)((11000)*(10000000/4000000.0)));
  7399  003420  0E24               	movlw	36
  7400  003422  0100               	movlb	0	; () banked
  7401  003424  6F82               	movwf	??_servoRotate0& (0+255),b
  7402  003426  0EB5               	movlw	181
  7403  003428                     u10187:
  7404  003428  2EE8               	decfsz	wreg,f,c
  7405  00342A  D7FE               	bra	u10187
  7406  00342C  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7407  00342E  D7FC               	bra	u10187
  7408  003430  D000               	nop2	
  7409                           
  7410                           ;actuators_main.c: 139:         }
  7411  003432  0100               	movlb	0	; () banked
  7412  003434  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7413  003436  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7414  003438  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7415  00343A  E105               	bnz	u7820
  7416  00343C  0E1E               	movlw	30
  7417  00343E  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7418  003440  B0D8               	btfsc	status,0,c
  7419  003442  0012               	return	
  7420  003444  D7E3               	goto	l128
  7421  003446                     u7820:
  7422                           
  7423                           ; BSR set to: 0
  7424  003446  0012               	return		;funcret
  7425  003448                     __end_of_servoRotate0:
  7426                           	opt callstack 0
  7427                           
  7428 ;; *************** function _UI_main *****************
  7429 ;; Defined at:
  7430 ;;		line 482 in file "main.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  t_dep           2  123[BANK0 ] int 
  7433 ;;  poles_detect    2  125[BANK0 ] int 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  i               1   89[BANK1 ] unsigned char 
  7436 ;;  keypress        1   84[BANK1 ] unsigned char 
  7437 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  7438 ;;  tick            4   85[BANK1 ] unsigned long 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7448 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;Total ram usage:       94 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:   14
  7455 ;; This function calls:
  7456 ;;		_I2C_Master_Init
  7457 ;;		_I2C_Master_Read
  7458 ;;		_I2C_Master_Start
  7459 ;;		_I2C_Master_Stop
  7460 ;;		_I2C_Master_Write
  7461 ;;		___llmod
  7462 ;;		_initLCD
  7463 ;;		_lcdInst
  7464 ;;		_printf
  7465 ;; This function is called by:
  7466 ;;		_main
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text19
  7471  000012                     __ptext19:
  7472                           	opt callstack 0
  7473  000012                     _UI_main:
  7474                           	opt callstack 16
  7475                           
  7476                           ;main.c: 483:     sens = 0;
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;incstack = 0
  7480  000012  0E00               	movlw	0
  7481  000014  6E59               	movwf	_sens+1,c	;volatile
  7482  000016  0E00               	movlw	0
  7483  000018  6E58               	movwf	_sens,c	;volatile
  7484                           
  7485                           ;main.c: 488:     LATD = 0x00;
  7486  00001A  0E00               	movlw	0
  7487  00001C  6E8C               	movwf	3980,c	;volatile
  7488                           
  7489                           ;main.c: 489:     TRISD = 0x00;
  7490  00001E  0E00               	movlw	0
  7491  000020  6E95               	movwf	3989,c	;volatile
  7492                           
  7493                           ;main.c: 492:     TRISD = 0x00;
  7494  000022  0E00               	movlw	0
  7495  000024  6E95               	movwf	3989,c	;volatile
  7496                           
  7497                           ;main.c: 495:     INT1IE = 1;
  7498  000026  86F0               	bsf	4080,3,c	;volatile
  7499                           
  7500                           ;main.c: 498:     initLCD();
  7501  000028  EC86  F01C         	call	_initLCD	;wreg free
  7502                           
  7503                           ;main.c: 501:     (INTCONbits.GIE = 1);
  7504  00002C  8EF2               	bsf	4082,7,c	;volatile
  7505                           
  7506                           ;main.c: 503:     I2C_Master_Init(100000);
  7507  00002E  0EA0               	movlw	160
  7508  000030  0100               	movlb	0	; () banked
  7509  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7510  000034  0E86               	movlw	134
  7511  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7512  000038  0E01               	movlw	1
  7513  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7514  00003C  0E00               	movlw	0
  7515  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7516  000040  EC29  F01D         	call	_I2C_Master_Init	;wreg free
  7517                           
  7518                           ;main.c: 504:     I2C_Master_Start();
  7519  000044  ECAE  F01F         	call	_I2C_Master_Start	;wreg free
  7520                           
  7521                           ;main.c: 505:     I2C_Master_Write(0b00010000);
  7522  000048  0E00               	movlw	0
  7523  00004A  0100               	movlb	0	; () banked
  7524  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7525  00004E  0E10               	movlw	16
  7526  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7527  000052  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  7528                           
  7529                           ;main.c: 506:     I2C_Master_Stop();
  7530  000056  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  7531                           
  7532                           ;main.c: 516:     if((pressed == 0)&&(sens==0)){
  7533  00005A  0101               	movlb	1	; () banked
  7534  00005C  51E3               	movf	_pressed& (0+255),w,b
  7535  00005E  11E4               	iorwf	(_pressed+1)& (0+255),w,b
  7536  000060  A4D8               	btfss	status,2,c
  7537  000062  D3DC               	goto	u9030
  7538                           
  7539                           ; BSR set to: 1
  7540  000064  5058               	movf	_sens,w,c	;volatile
  7541  000066  1059               	iorwf	_sens+1,w,c	;volatile
  7542  000068  A4D8               	btfss	status,2,c
  7543  00006A  D3D8               	goto	u9030
  7544                           
  7545                           ; BSR set to: 1
  7546                           ;main.c: 517:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7547  00006C  0E01               	movlw	1
  7548  00006E  EC9D  F01F         	call	_lcdInst
  7549  000072  0E11               	movlw	17
  7550  000074  0101               	movlb	1	; () banked
  7551  000076  6F00               	movwf	??_UI_main& (0+255),b
  7552  000078  0E3A               	movlw	58
  7553  00007A                     u10197:
  7554  00007A  2EE8               	decfsz	wreg,f,c
  7555  00007C  D7FE               	bra	u10197
  7556  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  7557  000080  D7FC               	bra	u10197
  7558  000082  F000               	nop	
  7559                           
  7560                           ;main.c: 518:         printf("1 - Start");
  7561  000084  0EC5               	movlw	low STR_23
  7562  000086  0100               	movlb	0	; () banked
  7563  000088  6FED               	movwf	printf@fmt& (0+255),b
  7564  00008A  0EFF               	movlw	high STR_23
  7565  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7566  00008E  EC37  F01F         	call	_printf	;wreg free
  7567  000092  0EC0               	movlw	192
  7568  000094  EC9D  F01F         	call	_lcdInst
  7569                           
  7570                           ;main.c: 520:         printf("2 - Summary");
  7571  000098  0E47               	movlw	low STR_24
  7572  00009A  0100               	movlb	0	; () banked
  7573  00009C  6FED               	movwf	printf@fmt& (0+255),b
  7574  00009E  0EFF               	movlw	high STR_24
  7575  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7576  0000A2  EC37  F01F         	call	_printf	;wreg free
  7577  0000A6  0E90               	movlw	144
  7578  0000A8  EC9D  F01F         	call	_lcdInst
  7579                           
  7580                           ;main.c: 522:         printf("3 - Date&Time ");
  7581  0000AC  0E6D               	movlw	low STR_25
  7582  0000AE  0100               	movlb	0	; () banked
  7583  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  7584  0000B2  0EFE               	movlw	high STR_25
  7585  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7586  0000B6  EC37  F01F         	call	_printf	;wreg free
  7587  0000BA  D3B0               	goto	u9030
  7588  0000BC                     l8131:
  7589                           
  7590                           ;main.c: 533:         if (send){
  7591  0000BC  506D               	movf	_send,w,c
  7592  0000BE  B4D8               	btfsc	status,2,c
  7593  0000C0  D3AD               	goto	u9030
  7594                           
  7595                           ;main.c: 534:         if(key_was_pressed){
  7596  0000C2  0101               	movlb	1	; () banked
  7597  0000C4  51EF               	movf	_key_was_pressed& (0+255),w,b	;volatile
  7598  0000C6  B4D8               	btfsc	status,2,c
  7599  0000C8  D3A9               	goto	u9030
  7600                           
  7601                           ; BSR set to: 1
  7602                           ;main.c: 537:             pressed = 1;
  7603  0000CA  0E00               	movlw	0
  7604  0000CC  6FE4               	movwf	(_pressed+1)& (0+255),b
  7605  0000CE  0E01               	movlw	1
  7606  0000D0  6FE3               	movwf	_pressed& (0+255),b
  7607                           
  7608                           ;main.c: 538:             key_was_pressed = 0;
  7609  0000D2  0E00               	movlw	0
  7610  0000D4  6FEF               	movwf	_key_was_pressed& (0+255),b	;volatile
  7611                           
  7612                           ; BSR set to: 1
  7613                           ;main.c: 539:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  7614  0000D6  3881               	swapf	3969,w,c	;volatile
  7615  0000D8  0B0F               	andlw	15
  7616  0000DA  0B0F               	andlw	15
  7617  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  7618                           
  7619                           ; BSR set to: 1
  7620                           ;main.c: 540:             temp = keys[keypress];
  7621  0000DE  0E9D               	movlw	low _keys
  7622  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  7623  0000E2  6EF6               	movwf	tblptrl,c
  7624  0000E4  6AF7               	clrf	tblptrh,c
  7625  0000E6  0EFD               	movlw	high _keys
  7626  0000E8  22F7               	addwfc	tblptrh,f,c
  7627  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  7628  0000EA                     	endif
  7629  0000EA  0008               	tblrd		*
  7630  0000EC  CFF5 F0FF          	movff	tablat,_temp
  7631                           
  7632                           ; BSR set to: 1
  7633                           ;main.c: 541:             temp_int = (temp-'0');
  7634  0000F0  0ED0               	movlw	208
  7635  0000F2  0100               	movlb	0	; () banked
  7636  0000F4  25FF               	addwf	_temp& (0+255),w,b
  7637  0000F6  0101               	movlb	1	; () banked
  7638  0000F8  6FEB               	movwf	_temp_int& (0+255),b
  7639  0000FA  6BEC               	clrf	(_temp_int+1)& (0+255),b
  7640  0000FC  0EFF               	movlw	255
  7641  0000FE  23EC               	addwfc	(_temp_int+1)& (0+255),f,b
  7642                           
  7643                           ; BSR set to: 1
  7644                           ;main.c: 543:             if (temp_int == 0){
  7645  000100  51EB               	movf	_temp_int& (0+255),w,b
  7646  000102  11EC               	iorwf	(_temp_int+1)& (0+255),w,b
  7647  000104  A4D8               	btfss	status,2,c
  7648  000106  D02B               	goto	l8161
  7649                           
  7650                           ; BSR set to: 1
  7651                           ;main.c: 544:                 state = 0;
  7652  000108  0E00               	movlw	0
  7653  00010A  6FEA               	movwf	(_state+1)& (0+255),b
  7654  00010C  0E00               	movlw	0
  7655  00010E  6FE9               	movwf	_state& (0+255),b
  7656                           
  7657                           ; BSR set to: 1
  7658                           ;main.c: 545:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7659  000110  0E01               	movlw	1
  7660  000112  EC9D  F01F         	call	_lcdInst
  7661  000116  0E11               	movlw	17
  7662  000118  0101               	movlb	1	; () banked
  7663  00011A  6F00               	movwf	??_UI_main& (0+255),b
  7664  00011C  0E3A               	movlw	58
  7665  00011E                     u10207:
  7666  00011E  2EE8               	decfsz	wreg,f,c
  7667  000120  D7FE               	bra	u10207
  7668  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  7669  000124  D7FC               	bra	u10207
  7670  000126  F000               	nop	
  7671                           
  7672                           ;main.c: 546:                 printf("1 - Start");
  7673  000128  0EC5               	movlw	low STR_23
  7674  00012A  0100               	movlb	0	; () banked
  7675  00012C  6FED               	movwf	printf@fmt& (0+255),b
  7676  00012E  0EFF               	movlw	high STR_23
  7677  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7678  000132  EC37  F01F         	call	_printf	;wreg free
  7679  000136  0EC0               	movlw	192
  7680  000138  EC9D  F01F         	call	_lcdInst
  7681                           
  7682                           ;main.c: 548:                 printf("2 - Summary");
  7683  00013C  0E47               	movlw	low STR_24
  7684  00013E  0100               	movlb	0	; () banked
  7685  000140  6FED               	movwf	printf@fmt& (0+255),b
  7686  000142  0EFF               	movlw	high STR_24
  7687  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7688  000146  EC37  F01F         	call	_printf	;wreg free
  7689  00014A  0E90               	movlw	144
  7690  00014C  EC9D  F01F         	call	_lcdInst
  7691                           
  7692                           ;main.c: 550:                 printf("3 - Date&Time ");
  7693  000150  0E6D               	movlw	low STR_25
  7694  000152  0100               	movlb	0	; () banked
  7695  000154  6FED               	movwf	printf@fmt& (0+255),b
  7696  000156  0EFE               	movlw	high STR_25
  7697  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7698  00015A  EC37  F01F         	call	_printf	;wreg free
  7699  00015E                     l8161:
  7700                           
  7701                           ;main.c: 553:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  7702  00015E  0101               	movlb	1	; () banked
  7703  000160  05EB               	decf	_temp_int& (0+255),w,b
  7704  000162  11EC               	iorwf	(_temp_int+1)& (0+255),w,b
  7705  000164  A4D8               	btfss	status,2,c
  7706  000166  D041               	goto	l8189
  7707                           
  7708                           ; BSR set to: 1
  7709  000168  0E2A               	movlw	42
  7710  00016A  0100               	movlb	0	; () banked
  7711  00016C  19FF               	xorwf	_temp& (0+255),w,b
  7712  00016E  B4D8               	btfsc	status,2,c
  7713  000170  D03C               	goto	l8189
  7714                           
  7715                           ; BSR set to: 0
  7716  000172  0E23               	movlw	35
  7717  000174  19FF               	xorwf	_temp& (0+255),w,b
  7718  000176  B4D8               	btfsc	status,2,c
  7719  000178  D038               	goto	l8189
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;main.c: 554:                 state = 0;
  7723  00017A  0E00               	movlw	0
  7724  00017C  0101               	movlb	1	; () banked
  7725  00017E  6FEA               	movwf	(_state+1)& (0+255),b
  7726  000180  0E00               	movlw	0
  7727  000182  6FE9               	movwf	_state& (0+255),b
  7728                           
  7729                           ; BSR set to: 1
  7730                           ;main.c: 555:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7731  000184  0E01               	movlw	1
  7732  000186  EC9D  F01F         	call	_lcdInst
  7733  00018A  0E11               	movlw	17
  7734  00018C  0101               	movlb	1	; () banked
  7735  00018E  6F00               	movwf	??_UI_main& (0+255),b
  7736  000190  0E3A               	movlw	58
  7737  000192                     u10217:
  7738  000192  2EE8               	decfsz	wreg,f,c
  7739  000194  D7FE               	bra	u10217
  7740  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  7741  000198  D7FC               	bra	u10217
  7742  00019A  F000               	nop	
  7743                           
  7744                           ;main.c: 556:                 printf("Machine In Use");
  7745  00019C  0E8B               	movlw	low STR_29
  7746  00019E  0100               	movlb	0	; () banked
  7747  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  7748  0001A2  0EFE               	movlw	high STR_29
  7749  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7750  0001A6  EC37  F01F         	call	_printf	;wreg free
  7751  0001AA  0ED0               	movlw	208
  7752  0001AC  EC9D  F01F         	call	_lcdInst
  7753                           
  7754                           ;main.c: 558:                 printf("     0-Menu     ");
  7755  0001B0  0EC6               	movlw	low STR_30
  7756  0001B2  0100               	movlb	0	; () banked
  7757  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  7758  0001B6  0EFD               	movlw	high STR_30
  7759  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7760  0001BA  EC37  F01F         	call	_printf	;wreg free
  7761                           
  7762                           ;main.c: 562:                 I2C_Master_Start();
  7763  0001BE  ECAE  F01F         	call	_I2C_Master_Start	;wreg free
  7764                           
  7765                           ;main.c: 563:                 I2C_Master_Write(0b00010000);
  7766  0001C2  0E00               	movlw	0
  7767  0001C4  0100               	movlb	0	; () banked
  7768  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7769  0001C8  0E10               	movlw	16
  7770  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7771  0001CC  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  7772                           
  7773                           ;main.c: 564:                 I2C_Master_Write('1');
  7774  0001D0  0E00               	movlw	0
  7775  0001D2  0100               	movlb	0	; () banked
  7776  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7777  0001D6  0E31               	movlw	49
  7778  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7779  0001DA  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  7780                           
  7781                           ;main.c: 565:                 I2C_Master_Stop();
  7782  0001DE  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  7783                           
  7784                           ;main.c: 567:                 sens = 1;
  7785  0001E2  0E00               	movlw	0
  7786  0001E4  6E59               	movwf	_sens+1,c	;volatile
  7787  0001E6  0E01               	movlw	1
  7788  0001E8  6E58               	movwf	_sens,c	;volatile
  7789  0001EA                     l8189:
  7790                           
  7791                           ;main.c: 570:                 if ((temp_int == 2)||(state == 2)){
  7792  0001EA  0E02               	movlw	2
  7793  0001EC  0101               	movlb	1	; () banked
  7794  0001EE  19EB               	xorwf	_temp_int& (0+255),w,b
  7795  0001F0  11EC               	iorwf	(_temp_int+1)& (0+255),w,b
  7796  0001F2  B4D8               	btfsc	status,2,c
  7797  0001F4  D005               	goto	u8890
  7798                           
  7799                           ; BSR set to: 1
  7800  0001F6  0E02               	movlw	2
  7801  0001F8  19E9               	xorwf	_state& (0+255),w,b
  7802  0001FA  11EA               	iorwf	(_state+1)& (0+255),w,b
  7803  0001FC  A4D8               	btfss	status,2,c
  7804  0001FE  D253               	goto	l8299
  7805  000200                     u8890:
  7806                           
  7807                           ; BSR set to: 1
  7808                           ;main.c: 571:                     if ((temp_int == 2)){
  7809  000200  0E02               	movlw	2
  7810  000202  19EB               	xorwf	_temp_int& (0+255),w,b
  7811  000204  11EC               	iorwf	(_temp_int+1)& (0+255),w,b
  7812  000206  A4D8               	btfss	status,2,c
  7813  000208  D033               	goto	l8211
  7814                           
  7815                           ; BSR set to: 1
  7816                           ;main.c: 572:                         state = 2;
  7817  00020A  0E00               	movlw	0
  7818  00020C  6FEA               	movwf	(_state+1)& (0+255),b
  7819  00020E  0E02               	movlw	2
  7820  000210  6FE9               	movwf	_state& (0+255),b
  7821                           
  7822                           ;main.c: 573:                         disp = 0;
  7823  000212  0E00               	movlw	0
  7824  000214  6FE8               	movwf	(_disp+1)& (0+255),b
  7825  000216  0E00               	movlw	0
  7826  000218  6FE7               	movwf	_disp& (0+255),b
  7827                           
  7828                           ; BSR set to: 1
  7829                           ;main.c: 574:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7830  00021A  0E01               	movlw	1
  7831  00021C  EC9D  F01F         	call	_lcdInst
  7832  000220  0E11               	movlw	17
  7833  000222  0101               	movlb	1	; () banked
  7834  000224  6F00               	movwf	??_UI_main& (0+255),b
  7835  000226  0E3A               	movlw	58
  7836  000228                     u10227:
  7837  000228  2EE8               	decfsz	wreg,f,c
  7838  00022A  D7FE               	bra	u10227
  7839  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7840  00022E  D7FC               	bra	u10227
  7841  000230  F000               	nop	
  7842                           
  7843                           ;main.c: 575:                         printf("Op Time:");
  7844  000232  0EE3               	movlw	low STR_31
  7845  000234  0100               	movlb	0	; () banked
  7846  000236  6FED               	movwf	printf@fmt& (0+255),b
  7847  000238  0EFF               	movlw	high STR_31
  7848  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7849  00023C  EC37  F01F         	call	_printf	;wreg free
  7850  000240  0EC0               	movlw	192
  7851  000242  EC9D  F01F         	call	_lcdInst
  7852                           
  7853                           ;main.c: 577:                         printf("%d", cnt);
  7854  000246  0EC3               	movlw	low (STR_59+11)
  7855  000248  0100               	movlb	0	; () banked
  7856  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7857  00024C  0EFE               	movlw	high (STR_59+11)
  7858  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7859  000250  0E00               	movlw	0
  7860  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7861  000254  0E00               	movlw	0
  7862  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7863  000258  EC37  F01F         	call	_printf	;wreg free
  7864  00025C  0ED0               	movlw	208
  7865  00025E  EC9D  F01F         	call	_lcdInst
  7866                           
  7867                           ;main.c: 579:                         printf("    0-Menu   #>");
  7868  000262  0E0B               	movlw	low (STR_36+1)
  7869  000264  0100               	movlb	0	; () banked
  7870  000266  6FED               	movwf	printf@fmt& (0+255),b
  7871  000268  0EFE               	movlw	high (STR_36+1)
  7872  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7873  00026C  EC37  F01F         	call	_printf	;wreg free
  7874  000270                     l8211:
  7875                           
  7876                           ;main.c: 581:                     if ((temp == '*') && (disp != 0)){
  7877  000270  0E2A               	movlw	42
  7878  000272  0100               	movlb	0	; () banked
  7879  000274  19FF               	xorwf	_temp& (0+255),w,b
  7880  000276  A4D8               	btfss	status,2,c
  7881  000278  D00B               	goto	l521
  7882                           
  7883                           ; BSR set to: 0
  7884  00027A  0101               	movlb	1	; () banked
  7885  00027C  51E7               	movf	_disp& (0+255),w,b
  7886  00027E  11E8               	iorwf	(_disp+1)& (0+255),w,b
  7887  000280  B4D8               	btfsc	status,2,c
  7888  000282  D006               	goto	l521
  7889                           
  7890                           ; BSR set to: 1
  7891                           ;main.c: 582:                         disp = disp - 1;
  7892  000284  0EFF               	movlw	255
  7893  000286  25E7               	addwf	_disp& (0+255),w,b
  7894  000288  6FE7               	movwf	_disp& (0+255),b
  7895  00028A  0EFF               	movlw	255
  7896  00028C  21E8               	addwfc	(_disp+1)& (0+255),w,b
  7897  00028E  6FE8               	movwf	(_disp+1)& (0+255),b
  7898  000290                     l521:
  7899                           
  7900                           ;main.c: 584:                     if ((temp == '#')&& (disp <12)){
  7901  000290  0E23               	movlw	35
  7902  000292  0100               	movlb	0	; () banked
  7903  000294  19FF               	xorwf	_temp& (0+255),w,b
  7904  000296  A4D8               	btfss	status,2,c
  7905  000298  D00B               	goto	l8221
  7906                           
  7907                           ; BSR set to: 0
  7908  00029A  0101               	movlb	1	; () banked
  7909  00029C  BFE8               	btfsc	(_disp+1)& (0+255),7,b
  7910  00029E  D006               	goto	u8940
  7911  0002A0  51E8               	movf	(_disp+1)& (0+255),w,b
  7912  0002A2  E106               	bnz	l8221
  7913  0002A4  0E0C               	movlw	12
  7914  0002A6  5DE7               	subwf	_disp& (0+255),w,b
  7915  0002A8  B0D8               	btfsc	status,0,c
  7916  0002AA  D002               	goto	l8221
  7917  0002AC                     u8940:
  7918                           
  7919                           ; BSR set to: 1
  7920                           ;main.c: 585:                         disp++;
  7921  0002AC  4BE7               	infsnz	_disp& (0+255),f,b
  7922  0002AE  2BE8               	incf	(_disp+1)& (0+255),f,b
  7923  0002B0                     l8221:
  7924                           
  7925                           ;main.c: 587:                     if (disp == 0){
  7926  0002B0  0101               	movlb	1	; () banked
  7927  0002B2  51E7               	movf	_disp& (0+255),w,b
  7928  0002B4  11E8               	iorwf	(_disp+1)& (0+255),w,b
  7929  0002B6  A4D8               	btfss	status,2,c
  7930  0002B8  D02B               	goto	l8237
  7931                           
  7932                           ; BSR set to: 1
  7933                           ;main.c: 588:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7934  0002BA  0E01               	movlw	1
  7935  0002BC  EC9D  F01F         	call	_lcdInst
  7936  0002C0  0E11               	movlw	17
  7937  0002C2  0101               	movlb	1	; () banked
  7938  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7939  0002C6  0E3A               	movlw	58
  7940  0002C8                     u10237:
  7941  0002C8  2EE8               	decfsz	wreg,f,c
  7942  0002CA  D7FE               	bra	u10237
  7943  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7944  0002CE  D7FC               	bra	u10237
  7945  0002D0  F000               	nop	
  7946                           
  7947                           ;main.c: 589:                         printf("Op Time:");
  7948  0002D2  0EE3               	movlw	low STR_31
  7949  0002D4  0100               	movlb	0	; () banked
  7950  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7951  0002D8  0EFF               	movlw	high STR_31
  7952  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7953  0002DC  EC37  F01F         	call	_printf	;wreg free
  7954  0002E0  0EC0               	movlw	192
  7955  0002E2  EC9D  F01F         	call	_lcdInst
  7956                           
  7957                           ;main.c: 591:                         printf("%d", cnt);
  7958  0002E6  0EC3               	movlw	low (STR_59+11)
  7959  0002E8  0100               	movlb	0	; () banked
  7960  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7961  0002EC  0EFE               	movlw	high (STR_59+11)
  7962  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7963  0002F0  0E00               	movlw	0
  7964  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7965  0002F4  0E00               	movlw	0
  7966  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7967  0002F8  EC37  F01F         	call	_printf	;wreg free
  7968  0002FC  0ED0               	movlw	208
  7969  0002FE  EC9D  F01F         	call	_lcdInst
  7970                           
  7971                           ;main.c: 593:                         printf("     0-Menu   #>");
  7972  000302  0E0A               	movlw	low STR_36
  7973  000304  0100               	movlb	0	; () banked
  7974  000306  6FED               	movwf	printf@fmt& (0+255),b
  7975  000308  0EFE               	movlw	high STR_36
  7976  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7977  00030C  EC37  F01F         	call	_printf	;wreg free
  7978  000310                     l8237:
  7979                           
  7980                           ;main.c: 596:                     if (disp == 1){
  7981  000310  0101               	movlb	1	; () banked
  7982  000312  05E7               	decf	_disp& (0+255),w,b
  7983  000314  11E8               	iorwf	(_disp+1)& (0+255),w,b
  7984  000316  A4D8               	btfss	status,2,c
  7985  000318  D02F               	goto	l8253
  7986                           
  7987                           ; BSR set to: 1
  7988                           ;main.c: 597:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7989  00031A  0E01               	movlw	1
  7990  00031C  EC9D  F01F         	call	_lcdInst
  7991  000320  0E11               	movlw	17
  7992  000322  0101               	movlb	1	; () banked
  7993  000324  6F00               	movwf	??_UI_main& (0+255),b
  7994  000326  0E3A               	movlw	58
  7995  000328                     u10247:
  7996  000328  2EE8               	decfsz	wreg,f,c
  7997  00032A  D7FE               	bra	u10247
  7998  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7999  00032E  D7FC               	bra	u10247
  8000  000330  F000               	nop	
  8001                           
  8002                           ;main.c: 598:                         printf("No. Tires: %d",t_dep);
  8003  000332  0ED4               	movlw	low STR_37
  8004  000334  0100               	movlb	0	; () banked
  8005  000336  6FED               	movwf	printf@fmt& (0+255),b
  8006  000338  0EFE               	movlw	high STR_37
  8007  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8008  00033C  C0FB  F0EF         	movff	UI_main@t_dep,?_printf+2
  8009  000340  C0FC  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  8010  000344  EC37  F01F         	call	_printf	;wreg free
  8011  000348  0EC0               	movlw	192
  8012  00034A  EC9D  F01F         	call	_lcdInst
  8013                           
  8014                           ;main.c: 600:                         printf("No. Poles: %d", poles_detected);
  8015  00034E  0EC6               	movlw	low STR_38
  8016  000350  0100               	movlb	0	; () banked
  8017  000352  6FED               	movwf	printf@fmt& (0+255),b
  8018  000354  0EFE               	movlw	high STR_38
  8019  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8020  000358  C0FD  F0EF         	movff	UI_main@poles_detected,?_printf+2
  8021  00035C  C0FE  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  8022  000360  EC37  F01F         	call	_printf	;wreg free
  8023  000364  0ED0               	movlw	208
  8024  000366  EC9D  F01F         	call	_lcdInst
  8025                           
  8026                           ;main.c: 602:                         printf("<*   0-Menu   #>");
  8027  00036A  0E1B               	movlw	low STR_39
  8028  00036C  0100               	movlb	0	; () banked
  8029  00036E  6FED               	movwf	printf@fmt& (0+255),b
  8030  000370  0EFE               	movlw	high STR_39
  8031  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8032  000374  EC37  F01F         	call	_printf	;wreg free
  8033  000378                     l8253:
  8034                           
  8035                           ;main.c: 605:                     if (disp > 1 && disp <11){
  8036  000378  0101               	movlb	1	; () banked
  8037  00037A  BFE8               	btfsc	(_disp+1)& (0+255),7,b
  8038  00037C  D0CE               	goto	l8277
  8039  00037E  51E8               	movf	(_disp+1)& (0+255),w,b
  8040  000380  E104               	bnz	u8970
  8041  000382  0E02               	movlw	2
  8042  000384  5DE7               	subwf	_disp& (0+255),w,b
  8043  000386  A0D8               	btfss	status,0,c
  8044  000388  D0C8               	goto	l8277
  8045  00038A                     u8970:
  8046                           
  8047                           ; BSR set to: 1
  8048  00038A  BFE8               	btfsc	(_disp+1)& (0+255),7,b
  8049  00038C  D006               	goto	u8980
  8050  00038E  51E8               	movf	(_disp+1)& (0+255),w,b
  8051  000390  E103               	bnz	u8981
  8052  000392  0E0B               	movlw	11
  8053  000394  5DE7               	subwf	_disp& (0+255),w,b
  8054  000396  B0D8               	btfsc	status,0,c
  8055  000398                     u8981:
  8056  000398  D0C0               	goto	l8277
  8057  00039A                     u8980:
  8058                           
  8059                           ; BSR set to: 1
  8060                           ;main.c: 606:                         i = disp - 2;
  8061  00039A  0EFE               	movlw	254
  8062  00039C  25E7               	addwf	_disp& (0+255),w,b
  8063  00039E  6FE5               	movwf	_i& (0+255),b
  8064  0003A0  0EFF               	movlw	255
  8065  0003A2  21E8               	addwfc	(_disp+1)& (0+255),w,b
  8066  0003A4  6FE6               	movwf	(_i+1)& (0+255),b
  8067                           
  8068                           ; BSR set to: 1
  8069                           ;main.c: 607:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8070  0003A6  0E01               	movlw	1
  8071  0003A8  EC9D  F01F         	call	_lcdInst
  8072  0003AC  0E11               	movlw	17
  8073  0003AE  0101               	movlb	1	; () banked
  8074  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  8075  0003B2  0E3A               	movlw	58
  8076  0003B4                     u10257:
  8077  0003B4  2EE8               	decfsz	wreg,f,c
  8078  0003B6  D7FE               	bra	u10257
  8079  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  8080  0003BA  D7FC               	bra	u10257
  8081  0003BC  F000               	nop	
  8082                           
  8083                           ;main.c: 608:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  8084  0003BE  0EB4               	movlw	low STR_40
  8085  0003C0  0100               	movlb	0	; () banked
  8086  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  8087  0003C4  0EFD               	movlw	high STR_40
  8088  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8089  0003C8  0E01               	movlw	1
  8090  0003CA  0101               	movlb	1	; () banked
  8091  0003CC  25E5               	addwf	_i& (0+255),w,b
  8092  0003CE  0100               	movlb	0	; () banked
  8093  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  8094  0003D2  0E00               	movlw	0
  8095  0003D4  0101               	movlb	1	; () banked
  8096  0003D6  21E6               	addwfc	(_i+1)& (0+255),w,b
  8097  0003D8  0100               	movlb	0	; () banked
  8098  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  8099  0003DC  C1E5  F100         	movff	_i,??_UI_main
  8100  0003E0  C1E6  F101         	movff	_i+1,??_UI_main+1
  8101  0003E4  0101               	movlb	1	; () banked
  8102  0003E6  90D8               	bcf	status,0,c
  8103  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  8104  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8105  0003EC  90D8               	bcf	status,0,c
  8106  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  8107  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8108  0003F2  90D8               	bcf	status,0,c
  8109  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  8110  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8111  0003F8  0E04               	movlw	low UI_main@Pole
  8112  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  8113  0003FC  6ED9               	movwf	fsr2l,c
  8114  0003FE  0E01               	movlw	high UI_main@Pole
  8115  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8116  000402  6EDA               	movwf	fsr2h,c
  8117  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  8118  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  8119  00040C  C1E5  F102         	movff	_i,??_UI_main+2
  8120  000410  C1E6  F103         	movff	_i+1,??_UI_main+3
  8121  000414  90D8               	bcf	status,0,c
  8122  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8123  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8124  00041A  90D8               	bcf	status,0,c
  8125  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8126  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8127  000420  90D8               	bcf	status,0,c
  8128  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8129  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8130  000426  0E02               	movlw	2
  8131  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8132  00042A  0E00               	movlw	0
  8133  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8134  00042E  0E04               	movlw	low UI_main@Pole
  8135  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8136  000432  6ED9               	movwf	fsr2l,c
  8137  000434  0E01               	movlw	high UI_main@Pole
  8138  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8139  000438  6EDA               	movwf	fsr2h,c
  8140  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  8141  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  8142  000442  EC37  F01F         	call	_printf	;wreg free
  8143  000446  0EC0               	movlw	192
  8144  000448  EC9D  F01F         	call	_lcdInst
  8145                           
  8146                           ;main.c: 610:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8147  00044C  0E7C               	movlw	low STR_41
  8148  00044E  0100               	movlb	0	; () banked
  8149  000450  6FED               	movwf	printf@fmt& (0+255),b
  8150  000452  0EFE               	movlw	high STR_41
  8151  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8152  000456  0E01               	movlw	1
  8153  000458  0101               	movlb	1	; () banked
  8154  00045A  25E5               	addwf	_i& (0+255),w,b
  8155  00045C  0100               	movlb	0	; () banked
  8156  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  8157  000460  0E00               	movlw	0
  8158  000462  0101               	movlb	1	; () banked
  8159  000464  21E6               	addwfc	(_i+1)& (0+255),w,b
  8160  000466  0100               	movlb	0	; () banked
  8161  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  8162  00046A  C1E5  F100         	movff	_i,??_UI_main
  8163  00046E  C1E6  F101         	movff	_i+1,??_UI_main+1
  8164  000472  0101               	movlb	1	; () banked
  8165  000474  90D8               	bcf	status,0,c
  8166  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  8167  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8168  00047A  90D8               	bcf	status,0,c
  8169  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  8170  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8171  000480  90D8               	bcf	status,0,c
  8172  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  8173  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8174  000486  0E04               	movlw	4
  8175  000488  2700               	addwf	??_UI_main& (0+255),f,b
  8176  00048A  0E00               	movlw	0
  8177  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8178  00048E  0E04               	movlw	low UI_main@Pole
  8179  000490  2500               	addwf	??_UI_main& (0+255),w,b
  8180  000492  6ED9               	movwf	fsr2l,c
  8181  000494  0E01               	movlw	high UI_main@Pole
  8182  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8183  000498  6EDA               	movwf	fsr2h,c
  8184  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  8185  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  8186  0004A2  EC37  F01F         	call	_printf	;wreg free
  8187  0004A6  0E90               	movlw	144
  8188  0004A8  EC9D  F01F         	call	_lcdInst
  8189                           
  8190                           ;main.c: 612:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8191  0004AC  0E3B               	movlw	low STR_42
  8192  0004AE  0100               	movlb	0	; () banked
  8193  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  8194  0004B2  0EFF               	movlw	high STR_42
  8195  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8196  0004B6  0E01               	movlw	1
  8197  0004B8  0101               	movlb	1	; () banked
  8198  0004BA  25E5               	addwf	_i& (0+255),w,b
  8199  0004BC  0100               	movlb	0	; () banked
  8200  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  8201  0004C0  0E00               	movlw	0
  8202  0004C2  0101               	movlb	1	; () banked
  8203  0004C4  21E6               	addwfc	(_i+1)& (0+255),w,b
  8204  0004C6  0100               	movlb	0	; () banked
  8205  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  8206  0004CA  C1E5  F100         	movff	_i,??_UI_main
  8207  0004CE  C1E6  F101         	movff	_i+1,??_UI_main+1
  8208  0004D2  0101               	movlb	1	; () banked
  8209  0004D4  90D8               	bcf	status,0,c
  8210  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  8211  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8212  0004DA  90D8               	bcf	status,0,c
  8213  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  8214  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8215  0004E0  90D8               	bcf	status,0,c
  8216  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  8217  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8218  0004E6  0E06               	movlw	6
  8219  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  8220  0004EA  0E00               	movlw	0
  8221  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8222  0004EE  0E04               	movlw	low UI_main@Pole
  8223  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  8224  0004F2  6ED9               	movwf	fsr2l,c
  8225  0004F4  0E01               	movlw	high UI_main@Pole
  8226  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8227  0004F8  6EDA               	movwf	fsr2h,c
  8228  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  8229  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  8230  000502  EC37  F01F         	call	_printf	;wreg free
  8231  000506  0ED0               	movlw	208
  8232  000508  EC9D  F01F         	call	_lcdInst
  8233                           
  8234                           ;main.c: 614:                         printf("<*   0-Menu   #>");
  8235  00050C  0E1B               	movlw	low STR_39
  8236  00050E  0100               	movlb	0	; () banked
  8237  000510  6FED               	movwf	printf@fmt& (0+255),b
  8238  000512  0EFE               	movlw	high STR_39
  8239  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8240  000516  EC37  F01F         	call	_printf	;wreg free
  8241  00051A                     l8277:
  8242                           
  8243                           ;main.c: 616:                     if (disp == 11){
  8244  00051A  0E0B               	movlw	11
  8245  00051C  0101               	movlb	1	; () banked
  8246  00051E  19E7               	xorwf	_disp& (0+255),w,b
  8247  000520  11E8               	iorwf	(_disp+1)& (0+255),w,b
  8248  000522  A4D8               	btfss	status,2,c
  8249  000524  D0C0               	goto	l8299
  8250                           
  8251                           ; BSR set to: 1
  8252                           ;main.c: 617:                         i = disp - 2;
  8253  000526  0EFE               	movlw	254
  8254  000528  25E7               	addwf	_disp& (0+255),w,b
  8255  00052A  6FE5               	movwf	_i& (0+255),b
  8256  00052C  0EFF               	movlw	255
  8257  00052E  21E8               	addwfc	(_disp+1)& (0+255),w,b
  8258  000530  6FE6               	movwf	(_i+1)& (0+255),b
  8259                           
  8260                           ; BSR set to: 1
  8261                           ;main.c: 618:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8262  000532  0E01               	movlw	1
  8263  000534  EC9D  F01F         	call	_lcdInst
  8264  000538  0E11               	movlw	17
  8265  00053A  0101               	movlb	1	; () banked
  8266  00053C  6F00               	movwf	??_UI_main& (0+255),b
  8267  00053E  0E3A               	movlw	58
  8268  000540                     u10267:
  8269  000540  2EE8               	decfsz	wreg,f,c
  8270  000542  D7FE               	bra	u10267
  8271  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  8272  000546  D7FC               	bra	u10267
  8273  000548  F000               	nop	
  8274                           
  8275                           ;main.c: 619:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  8276  00054A  0EB4               	movlw	low STR_40
  8277  00054C  0100               	movlb	0	; () banked
  8278  00054E  6FED               	movwf	printf@fmt& (0+255),b
  8279  000550  0EFD               	movlw	high STR_40
  8280  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8281  000554  0E01               	movlw	1
  8282  000556  0101               	movlb	1	; () banked
  8283  000558  25E5               	addwf	_i& (0+255),w,b
  8284  00055A  0100               	movlb	0	; () banked
  8285  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  8286  00055E  0E00               	movlw	0
  8287  000560  0101               	movlb	1	; () banked
  8288  000562  21E6               	addwfc	(_i+1)& (0+255),w,b
  8289  000564  0100               	movlb	0	; () banked
  8290  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  8291  000568  C1E5  F100         	movff	_i,??_UI_main
  8292  00056C  C1E6  F101         	movff	_i+1,??_UI_main+1
  8293  000570  0101               	movlb	1	; () banked
  8294  000572  90D8               	bcf	status,0,c
  8295  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  8296  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8297  000578  90D8               	bcf	status,0,c
  8298  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  8299  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8300  00057E  90D8               	bcf	status,0,c
  8301  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  8302  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8303  000584  0E04               	movlw	low UI_main@Pole
  8304  000586  2500               	addwf	??_UI_main& (0+255),w,b
  8305  000588  6ED9               	movwf	fsr2l,c
  8306  00058A  0E01               	movlw	high UI_main@Pole
  8307  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8308  00058E  6EDA               	movwf	fsr2h,c
  8309  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  8310  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  8311  000598  C1E5  F102         	movff	_i,??_UI_main+2
  8312  00059C  C1E6  F103         	movff	_i+1,??_UI_main+3
  8313  0005A0  90D8               	bcf	status,0,c
  8314  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8315  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8316  0005A6  90D8               	bcf	status,0,c
  8317  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8318  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8319  0005AC  90D8               	bcf	status,0,c
  8320  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8321  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8322  0005B2  0E02               	movlw	2
  8323  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8324  0005B6  0E00               	movlw	0
  8325  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8326  0005BA  0E04               	movlw	low UI_main@Pole
  8327  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8328  0005BE  6ED9               	movwf	fsr2l,c
  8329  0005C0  0E01               	movlw	high UI_main@Pole
  8330  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8331  0005C4  6EDA               	movwf	fsr2h,c
  8332  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  8333  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  8334  0005CE  EC37  F01F         	call	_printf	;wreg free
  8335  0005D2  0EC0               	movlw	192
  8336  0005D4  EC9D  F01F         	call	_lcdInst
  8337                           
  8338                           ;main.c: 621:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8339  0005D8  0E7C               	movlw	low STR_41
  8340  0005DA  0100               	movlb	0	; () banked
  8341  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  8342  0005DE  0EFE               	movlw	high STR_41
  8343  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8344  0005E2  0E01               	movlw	1
  8345  0005E4  0101               	movlb	1	; () banked
  8346  0005E6  25E5               	addwf	_i& (0+255),w,b
  8347  0005E8  0100               	movlb	0	; () banked
  8348  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  8349  0005EC  0E00               	movlw	0
  8350  0005EE  0101               	movlb	1	; () banked
  8351  0005F0  21E6               	addwfc	(_i+1)& (0+255),w,b
  8352  0005F2  0100               	movlb	0	; () banked
  8353  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  8354  0005F6  C1E5  F100         	movff	_i,??_UI_main
  8355  0005FA  C1E6  F101         	movff	_i+1,??_UI_main+1
  8356  0005FE  0101               	movlb	1	; () banked
  8357  000600  90D8               	bcf	status,0,c
  8358  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  8359  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8360  000606  90D8               	bcf	status,0,c
  8361  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  8362  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8363  00060C  90D8               	bcf	status,0,c
  8364  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  8365  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8366  000612  0E04               	movlw	4
  8367  000614  2700               	addwf	??_UI_main& (0+255),f,b
  8368  000616  0E00               	movlw	0
  8369  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8370  00061A  0E04               	movlw	low UI_main@Pole
  8371  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  8372  00061E  6ED9               	movwf	fsr2l,c
  8373  000620  0E01               	movlw	high UI_main@Pole
  8374  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8375  000624  6EDA               	movwf	fsr2h,c
  8376  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  8377  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  8378  00062E  EC37  F01F         	call	_printf	;wreg free
  8379  000632  0E90               	movlw	144
  8380  000634  EC9D  F01F         	call	_lcdInst
  8381                           
  8382                           ;main.c: 623:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8383  000638  0E3B               	movlw	low STR_42
  8384  00063A  0100               	movlb	0	; () banked
  8385  00063C  6FED               	movwf	printf@fmt& (0+255),b
  8386  00063E  0EFF               	movlw	high STR_42
  8387  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8388  000642  0E01               	movlw	1
  8389  000644  0101               	movlb	1	; () banked
  8390  000646  25E5               	addwf	_i& (0+255),w,b
  8391  000648  0100               	movlb	0	; () banked
  8392  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  8393  00064C  0E00               	movlw	0
  8394  00064E  0101               	movlb	1	; () banked
  8395  000650  21E6               	addwfc	(_i+1)& (0+255),w,b
  8396  000652  0100               	movlb	0	; () banked
  8397  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  8398  000656  C1E5  F100         	movff	_i,??_UI_main
  8399  00065A  C1E6  F101         	movff	_i+1,??_UI_main+1
  8400  00065E  0101               	movlb	1	; () banked
  8401  000660  90D8               	bcf	status,0,c
  8402  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  8403  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8404  000666  90D8               	bcf	status,0,c
  8405  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  8406  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8407  00066C  90D8               	bcf	status,0,c
  8408  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  8409  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8410  000672  0E06               	movlw	6
  8411  000674  2700               	addwf	??_UI_main& (0+255),f,b
  8412  000676  0E00               	movlw	0
  8413  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8414  00067A  0E04               	movlw	low UI_main@Pole
  8415  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  8416  00067E  6ED9               	movwf	fsr2l,c
  8417  000680  0E01               	movlw	high UI_main@Pole
  8418  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8419  000684  6EDA               	movwf	fsr2h,c
  8420  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  8421  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  8422  00068E  EC37  F01F         	call	_printf	;wreg free
  8423  000692  0ED0               	movlw	208
  8424  000694  EC9D  F01F         	call	_lcdInst
  8425                           
  8426                           ;main.c: 625:                         printf("<*   0-Menu     ");
  8427  000698  0ED7               	movlw	low STR_47
  8428  00069A  0100               	movlb	0	; () banked
  8429  00069C  6FED               	movwf	printf@fmt& (0+255),b
  8430  00069E  0EFD               	movlw	high STR_47
  8431  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8432  0006A2  EC37  F01F         	call	_printf	;wreg free
  8433  0006A6                     l8299:
  8434                           
  8435                           ;main.c: 628:             if (temp_int == 3){
  8436  0006A6  0E03               	movlw	3
  8437  0006A8  0101               	movlb	1	; () banked
  8438  0006AA  19EB               	xorwf	_temp_int& (0+255),w,b
  8439  0006AC  11EC               	iorwf	(_temp_int+1)& (0+255),w,b
  8440  0006AE  A4D8               	btfss	status,2,c
  8441  0006B0  D0B5               	goto	u9030
  8442                           
  8443                           ; BSR set to: 1
  8444                           ;main.c: 629:                 state = 0;
  8445  0006B2  0E00               	movlw	0
  8446  0006B4  6FEA               	movwf	(_state+1)& (0+255),b
  8447  0006B6  0E00               	movlw	0
  8448  0006B8  6FE9               	movwf	_state& (0+255),b
  8449                           
  8450                           ;main.c: 630:                 tick = 0;
  8451  0006BA  0E00               	movlw	0
  8452  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  8453  0006BE  0E00               	movlw	0
  8454  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  8455  0006C2  0E00               	movlw	0
  8456  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  8457  0006C6  0E00               	movlw	0
  8458  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  8459                           
  8460                           ;main.c: 631:                 while(~key_was_pressed){
  8461  0006CA  D0A5               	goto	l8349
  8462  0006CC                     l8303:
  8463                           
  8464                           ; BSR set to: 1
  8465                           ;main.c: 632:                     if(tick % 1000 == 0){
  8466  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  8467  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  8468  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  8469  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  8470  0006DC  0EE8               	movlw	232
  8471  0006DE  0100               	movlb	0	; () banked
  8472  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  8473  0006E2  0E03               	movlw	3
  8474  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  8475  0006E6  0E00               	movlw	0
  8476  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  8477  0006EA  0E00               	movlw	0
  8478  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  8479  0006EE  ECF5  F01C         	call	___llmod	;wreg free
  8480  0006F2  0100               	movlb	0	; () banked
  8481  0006F4  5180               	movf	?___llmod& (0+255),w,b
  8482  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  8483  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  8484  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  8485  0006FC  A4D8               	btfss	status,2,c
  8486  0006FE  D084               	goto	l8347
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;main.c: 633:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8490  000700  0E01               	movlw	1
  8491  000702  EC9D  F01F         	call	_lcdInst
  8492  000706  0E11               	movlw	17
  8493  000708  0101               	movlb	1	; () banked
  8494  00070A  6F00               	movwf	??_UI_main& (0+255),b
  8495  00070C  0E3A               	movlw	58
  8496  00070E                     u10277:
  8497  00070E  2EE8               	decfsz	wreg,f,c
  8498  000710  D7FE               	bra	u10277
  8499  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  8500  000714  D7FC               	bra	u10277
  8501  000716  F000               	nop	
  8502                           
  8503                           ;main.c: 634:                         printf("DATE & TIME");
  8504  000718  0E17               	movlw	low STR_48
  8505  00071A  0100               	movlb	0	; () banked
  8506  00071C  6FED               	movwf	printf@fmt& (0+255),b
  8507  00071E  0EFF               	movlw	high STR_48
  8508  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8509  000722  EC37  F01F         	call	_printf	;wreg free
  8510                           
  8511                           ;main.c: 635:                         I2C_Master_Init(100000);
  8512  000726  0EA0               	movlw	160
  8513  000728  0100               	movlb	0	; () banked
  8514  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  8515  00072C  0E86               	movlw	134
  8516  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  8517  000730  0E01               	movlw	1
  8518  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  8519  000734  0E00               	movlw	0
  8520  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  8521  000738  EC29  F01D         	call	_I2C_Master_Init	;wreg free
  8522                           
  8523                           ;main.c: 636:                         I2C_Master_Start();
  8524  00073C  ECAE  F01F         	call	_I2C_Master_Start	;wreg free
  8525                           
  8526                           ;main.c: 637:                         I2C_Master_Write(0b11010000);
  8527  000740  0E00               	movlw	0
  8528  000742  0100               	movlb	0	; () banked
  8529  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8530  000746  0ED0               	movlw	208
  8531  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8532  00074A  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  8533                           
  8534                           ;main.c: 638:                         I2C_Master_Write(0x00);
  8535  00074E  0E00               	movlw	0
  8536  000750  0100               	movlb	0	; () banked
  8537  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8538  000754  0E00               	movlw	0
  8539  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8540  000758  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  8541                           
  8542                           ;main.c: 639:                         I2C_Master_Stop();
  8543  00075C  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  8544                           
  8545                           ;main.c: 641:                         I2C_Master_Start();
  8546  000760  ECAE  F01F         	call	_I2C_Master_Start	;wreg free
  8547                           
  8548                           ;main.c: 642:                         I2C_Master_Write(0b11010001);
  8549  000764  0E00               	movlw	0
  8550  000766  0100               	movlb	0	; () banked
  8551  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8552  00076A  0ED1               	movlw	209
  8553  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8554  00076E  ECA5  F01F         	call	_I2C_Master_Write	;wreg free
  8555                           
  8556                           ;main.c: 643:                         for(unsigned char i = 0; i < 6; i++){
  8557  000772  0E00               	movlw	0
  8558  000774  0101               	movlb	1	; () banked
  8559  000776  6F59               	movwf	UI_main@i& (0+255),b
  8560  000778                     l8327:
  8561                           
  8562                           ; BSR set to: 1
  8563  000778  0E05               	movlw	5
  8564  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  8565  00077C  D001               	goto	l8331
  8566  00077E  D00D               	goto	l8337
  8567  000780                     l8331:
  8568                           
  8569                           ; BSR set to: 1
  8570                           ;main.c: 644:                             time[i] = I2C_Master_Read(0);
  8571  000780  0EDC               	movlw	low _time
  8572  000782  2559               	addwf	UI_main@i& (0+255),w,b
  8573  000784  6ED9               	movwf	fsr2l,c
  8574  000786  6ADA               	clrf	fsr2h,c
  8575  000788  0E01               	movlw	high _time
  8576  00078A  22DA               	addwfc	fsr2h,f,c
  8577  00078C  0E00               	movlw	0
  8578  00078E  EC22  F01F         	call	_I2C_Master_Read
  8579  000792  6EDF               	movwf	indf2,c
  8580                           
  8581                           ;main.c: 645:                         }
  8582  000794  0101               	movlb	1	; () banked
  8583  000796  2B59               	incf	UI_main@i& (0+255),f,b
  8584  000798  D7EF               	goto	l8327
  8585  00079A                     l8337:
  8586                           
  8587                           ; BSR set to: 1
  8588                           ;main.c: 646:                         time[6] = I2C_Master_Read(1);
  8589  00079A  0E01               	movlw	1
  8590  00079C  EC22  F01F         	call	_I2C_Master_Read
  8591  0007A0  0101               	movlb	1	; () banked
  8592  0007A2  6FE2               	movwf	(_time+6)& (0+255),b
  8593                           
  8594                           ;main.c: 647:                         I2C_Master_Stop();
  8595  0007A4  ECAA  F01F         	call	_I2C_Master_Stop	;wreg free
  8596  0007A8  0EC0               	movlw	192
  8597  0007AA  EC9D  F01F         	call	_lcdInst
  8598                           
  8599                           ;main.c: 651:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  8600  0007AE  0E9A               	movlw	low STR_49
  8601  0007B0  0100               	movlb	0	; () banked
  8602  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  8603  0007B4  0EFE               	movlw	high STR_49
  8604  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8605  0007B8  C1E2  F0EF         	movff	_time+6,?_printf+2
  8606  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  8607  0007BE  C1E1  F0F1         	movff	_time+5,?_printf+4
  8608  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  8609  0007C4  C1E0  F0F3         	movff	_time+4,?_printf+6
  8610  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  8611  0007CA  EC37  F01F         	call	_printf	;wreg free
  8612  0007CE  0E90               	movlw	144
  8613  0007D0  EC9D  F01F         	call	_lcdInst
  8614                           
  8615                           ;main.c: 653:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  8616  0007D4  0EA9               	movlw	low STR_50
  8617  0007D6  0100               	movlb	0	; () banked
  8618  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  8619  0007DA  0EFE               	movlw	high STR_50
  8620  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8621  0007DE  C1DE  F0EF         	movff	_time+2,?_printf+2
  8622  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  8623  0007E4  C1DD  F0F1         	movff	_time+1,?_printf+4
  8624  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  8625  0007EA  C1DC  F0F3         	movff	_time,?_printf+6
  8626  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  8627  0007F0  EC37  F01F         	call	_printf	;wreg free
  8628  0007F4  0ED0               	movlw	208
  8629  0007F6  EC9D  F01F         	call	_lcdInst
  8630                           
  8631                           ;main.c: 655:                         printf("     0-Menu     ");
  8632  0007FA  0EC6               	movlw	low STR_30
  8633  0007FC  0100               	movlb	0	; () banked
  8634  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  8635  000800  0EFD               	movlw	high STR_30
  8636  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8637  000804  EC37  F01F         	call	_printf	;wreg free
  8638  000808                     l8347:
  8639                           
  8640                           ;main.c: 658:                     tick++;
  8641  000808  0E01               	movlw	1
  8642  00080A  0101               	movlb	1	; () banked
  8643  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  8644  00080E  0E00               	movlw	0
  8645  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  8646  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  8647  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  8648  000816                     l8349:
  8649                           
  8650                           ; BSR set to: 1
  8651                           ;main.c: 631:                 while(~key_was_pressed){
  8652  000816  05EF               	decf	_key_was_pressed& (0+255),w,b	;volatile
  8653  000818  A4D8               	btfss	status,2,c
  8654  00081A  D758               	goto	l8303
  8655  00081C                     u9030:
  8656                           
  8657                           ;main.c: 524:     while(sens==0){
  8658  00081C  5058               	movf	_sens,w,c	;volatile
  8659  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  8660  000820  A4D8               	btfss	status,2,c
  8661  000822  0012               	return	
  8662  000824  D44B               	goto	l8131
  8663  000826                     __end_of_UI_main:
  8664                           	opt callstack 0
  8665                           
  8666 ;; *************** function _printf *****************
  8667 ;; Defined at:
  8668 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  8671 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8672 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8673 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8674 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8675 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8676 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8677 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8678 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8679 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8680 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8681 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8682 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8683 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8684 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8685 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8686 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;  ap              2  121[BANK0 ] PTR void [1]
  8689 ;;		 -> ?_printf(2), 
  8690 ;;  ret             2    0        int 
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  2  109[BANK0 ] int 
  8693 ;; Registers used:
  8694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8700 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8701 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;Total ram usage:       14 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:   13
  8707 ;; This function calls:
  8708 ;;		_vfprintf
  8709 ;; This function is called by:
  8710 ;;		_actuators_main
  8711 ;;		_stepper2
  8712 ;;		_stepper2_back
  8713 ;;		_full_drive
  8714 ;;		_print_echo
  8715 ;;		_ultrasonic_main
  8716 ;;		_number_deploy
  8717 ;;		_UI_main
  8718 ;;		_brake
  8719 ;;		_main
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text20
  8724  003E6E                     __ptext20:
  8725                           	opt callstack 0
  8726  003E6E                     _printf:
  8727                           	opt callstack 16
  8728                           
  8729                           ;incstack = 0
  8730  003E6E  0EEF               	movlw	low (?_printf+2)
  8731  003E70  0100               	movlb	0	; () banked
  8732  003E72  6FF9               	movwf	printf@ap& (0+255),b
  8733  003E74  0E00               	movlw	high (?_printf+2)
  8734  003E76  6FFA               	movwf	(printf@ap+1)& (0+255),b
  8735                           
  8736                           ; BSR set to: 0
  8737  003E78  0E00               	movlw	0
  8738  003E7A  6FE5               	movwf	vfprintf@fp& (0+255),b
  8739  003E7C  0E00               	movlw	0
  8740  003E7E  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  8741  003E80  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  8742  003E84  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  8743  003E88  0EF9               	movlw	low printf@ap
  8744  003E8A  6FE9               	movwf	vfprintf@ap& (0+255),b
  8745  003E8C  0E00               	movlw	high printf@ap
  8746  003E8E  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  8747  003E90  EC84  F01D         	call	_vfprintf	;wreg free
  8748  003E94  0012               	return		;funcret
  8749  003E96                     __end_of_printf:
  8750                           	opt callstack 0
  8751                           
  8752 ;; *************** function _vfprintf *****************
  8753 ;; Defined at:
  8754 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  8757 ;;		 -> NULL(0), 
  8758 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  8759 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8760 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8761 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8762 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8763 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8764 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8765 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8766 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8767 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8768 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8769 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8770 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8771 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8772 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8773 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8774 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8775 ;;  ap              2  105[BANK0 ] PTR PTR void 
  8776 ;;		 -> printf@ap(2), 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  8779 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8780 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8781 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8782 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8783 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8784 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8785 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8786 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8787 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8788 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8789 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8790 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8791 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8792 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8793 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8794 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  2  101[BANK0 ] int 
  8797 ;; Registers used:
  8798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8804 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8805 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8807 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;Total ram usage:        8 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:   12
  8811 ;; This function calls:
  8812 ;;		_vfpfcnvrt
  8813 ;; This function is called by:
  8814 ;;		_printf
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           	psect	text21
  8819  003B08                     __ptext21:
  8820                           	opt callstack 0
  8821  003B08                     _vfprintf:
  8822                           	opt callstack 16
  8823                           
  8824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8825                           
  8826                           ;incstack = 0
  8827  003B08  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8828  003B0C  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8829                           
  8830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8831  003B10  0E00               	movlw	0
  8832  003B12  6E49               	movwf	_nout+1,c
  8833  003B14  0E00               	movlw	0
  8834  003B16  6E48               	movwf	_nout,c
  8835                           
  8836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8837  003B18  D014               	goto	l7093
  8838  003B1A                     l7091:
  8839                           
  8840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8841  003B1A  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8842  003B1E  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8843  003B22  0EEB               	movlw	low vfprintf@cfmt
  8844  003B24  0100               	movlb	0	; () banked
  8845  003B26  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8846  003B28  0E00               	movlw	high vfprintf@cfmt
  8847  003B2A  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8848  003B2C  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8849  003B30  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8850  003B34  EC19  F00A         	call	_vfpfcnvrt	;wreg free
  8851  003B38  0100               	movlb	0	; () banked
  8852  003B3A  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8853  003B3C  2648               	addwf	_nout,f,c
  8854  003B3E  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8855  003B40  2249               	addwfc	_nout+1,f,c
  8856  003B42                     l7093:
  8857                           
  8858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8859  003B42  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8860  003B46  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8861  003B4A                     	if	0	;tblptru may be non-zero
  8862  003B4A                     	endif
  8863  003B4A                     	if	0	;tblptru may be non-zero
  8864  003B4A                     	endif
  8865  003B4A  0008               	tblrd		*
  8866  003B4C  50F5               	movf	tablat,w,c
  8867  003B4E  0900               	iorlw	0
  8868  003B50  A4D8               	btfss	status,2,c
  8869  003B52  D7E3               	goto	l7091
  8870                           
  8871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8872  003B54  C048  F0E5         	movff	_nout,?_vfprintf
  8873  003B58  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8874  003B5C  0012               	return		;funcret
  8875  003B5E                     __end_of_vfprintf:
  8876                           	opt callstack 0
  8877                           
  8878 ;; *************** function _vfpfcnvrt *****************
  8879 ;; Defined at:
  8880 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8883 ;;		 -> NULL(0), 
  8884 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8885 ;;		 -> vfprintf@cfmt(2), 
  8886 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8887 ;;		 -> printf@ap(2), 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  llu             8   88[BANK0 ] unsigned long long 
  8890 ;;  ll              8   80[BANK0 ] long long 
  8891 ;;  f               4    0        long long 
  8892 ;;  vp              3    0        PTR void 
  8893 ;;  ct              3    0        unsigned char [3]
  8894 ;;  cp              3    0        PTR unsigned char 
  8895 ;;  done            2   97[BANK0 ] int 
  8896 ;;  i               2    0        int 
  8897 ;;  c               1   96[BANK0 ] unsigned char 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  2   70[BANK0 ] int 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8907 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8911 ;;Total ram usage:       31 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:   11
  8914 ;; This function calls:
  8915 ;;		_atoi
  8916 ;;		_dtoa
  8917 ;;		_fputc
  8918 ;;		_isdigit
  8919 ;;		_xtoa
  8920 ;; This function is called by:
  8921 ;;		_vfprintf
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text22
  8926  001432                     __ptext22:
  8927                           	opt callstack 0
  8928  001432                     _vfpfcnvrt:
  8929                           	opt callstack 16
  8930                           
  8931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8932                           
  8933                           ;incstack = 0
  8934  001432  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8935  001436  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8936  00143A  CFDE FFF6          	movff	postinc2,tblptrl
  8937  00143E  CFDD FFF7          	movff	postdec2,tblptrh
  8938  001442                     	if	0	;tblptru may be non-zero
  8939  001442                     	endif
  8940  001442                     	if	0	;tblptru may be non-zero
  8941  001442                     	endif
  8942  001442  0008               	tblrd		*
  8943  001444  50F5               	movf	tablat,w,c
  8944  001446  0A25               	xorlw	37
  8945  001448  A4D8               	btfss	status,2,c
  8946  00144A  D1AD               	goto	l7071
  8947                           
  8948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8949  00144C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8950  001450  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8951  001454  2ADE               	incf	postinc2,f,c
  8952  001456  0E00               	movlw	0
  8953  001458  22DD               	addwfc	postdec2,f,c
  8954                           
  8955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8956  00145A  0E00               	movlw	0
  8957  00145C  6E4B               	movwf	_width+1,c
  8958  00145E  0E00               	movlw	0
  8959  001460  6E4A               	movwf	_width,c
  8960  001462  C04A  F04E         	movff	_width,_flags
  8961  001466  C04B  F04F         	movff	_width+1,_flags+1
  8962                           
  8963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8964  00146A  684C               	setf	_prec,c
  8965  00146C  684D               	setf	_prec+1,c
  8966                           
  8967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8968  00146E  0E00               	movlw	0
  8969  001470  0100               	movlb	0	; () banked
  8970  001472  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8971  001474  0E00               	movlw	0
  8972  001476  D014               	goto	L3
  8973  001478                     l6983:
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8977  001478  804E               	bsf	_flags,0,c
  8978  00147A                     l6985:
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8982  00147A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8983  00147E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8984  001482  2ADE               	incf	postinc2,f,c
  8985  001484  0E00               	movlw	0
  8986  001486  22DD               	addwfc	postdec2,f,c
  8987                           
  8988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8989  001488  D02E               	goto	l7009
  8990  00148A                     l6987:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8994  00148A  824E               	bsf	_flags,1,c
  8995  00148C  D7F6               	goto	l6985
  8996  00148E                     l6991:
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9000  00148E  844E               	bsf	_flags,2,c
  9001  001490  D7F4               	goto	l6985
  9002  001492                     l6995:
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9006  001492  864E               	bsf	_flags,3,c
  9007  001494  D7F2               	goto	l6985
  9008  001496                     l6999:
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9012  001496  884E               	bsf	_flags,4,c
  9013  001498  D7F0               	goto	l6985
  9014  00149A                     l7003:
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9018  00149A  0E00               	movlw	0
  9019  00149C  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9020  00149E  0E01               	movlw	1
  9021  0014A0                     L3:
  9022  0014A0  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  9023                           
  9024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9025  0014A2  D021               	goto	l7009
  9026  0014A4                     l7007:
  9027                           
  9028                           ; BSR set to: 0
  9029  0014A4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9030  0014A8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9031  0014AC  CFDE FFF6          	movff	postinc2,tblptrl
  9032  0014B0  CFDD FFF7          	movff	postdec2,tblptrh
  9033  0014B4                     	if	0	;tblptru may be non-zero
  9034  0014B4                     	endif
  9035  0014B4                     	if	0	;tblptru may be non-zero
  9036  0014B4                     	endif
  9037  0014B4  0008               	tblrd		*
  9038  0014B6  50F5               	movf	tablat,w,c
  9039  0014B8  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  9040  0014BA  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9041                           
  9042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9043                           ; Switch size 1, requested type "simple"
  9044                           ; Number of cases is 1, Range of values is 0 to 0
  9045                           ; switch strategies available:
  9046                           ; Name         Instructions Cycles
  9047                           ; simple_byte            4     3 (average)
  9048                           ;	Chosen strategy is simple_byte
  9049  0014BC  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9050  0014BE  0A00               	xorlw	0	; case 0
  9051  0014C0  A4D8               	btfss	status,2,c
  9052  0014C2  D7EB               	goto	l7003
  9053                           
  9054                           ; BSR set to: 0
  9055                           ; Switch size 1, requested type "simple"
  9056                           ; Number of cases is 5, Range of values is 32 to 48
  9057                           ; switch strategies available:
  9058                           ; Name         Instructions Cycles
  9059                           ; simple_byte           16     9 (average)
  9060                           ;	Chosen strategy is simple_byte
  9061  0014C4  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  9062  0014C6  0A20               	xorlw	32	; case 32
  9063  0014C8  B4D8               	btfsc	status,2,c
  9064  0014CA  D7E3               	goto	l6995
  9065  0014CC  0A03               	xorlw	3	; case 35
  9066  0014CE  B4D8               	btfsc	status,2,c
  9067  0014D0  D7E2               	goto	l6999
  9068  0014D2  0A08               	xorlw	8	; case 43
  9069  0014D4  B4D8               	btfsc	status,2,c
  9070  0014D6  D7DB               	goto	l6991
  9071  0014D8  0A06               	xorlw	6	; case 45
  9072  0014DA  B4D8               	btfsc	status,2,c
  9073  0014DC  D7CD               	goto	l6983
  9074  0014DE  0A1D               	xorlw	29	; case 48
  9075  0014E0  B4D8               	btfsc	status,2,c
  9076  0014E2  D7D3               	goto	l6987
  9077  0014E4  D7DA               	goto	l7003
  9078  0014E6                     l7009:
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9082  0014E6  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  9083  0014E8  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  9084  0014EA  B4D8               	btfsc	status,2,c
  9085  0014EC  D7DB               	goto	l7007
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9089  0014EE  B04E               	btfsc	_flags,0,c
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9093  0014F0  924E               	bcf	_flags,1,c
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9097  0014F2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9098  0014F6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9099  0014FA  CFDE FFF6          	movff	postinc2,tblptrl
  9100  0014FE  CFDD FFF7          	movff	postdec2,tblptrh
  9101  001502                     	if	0	;tblptru may be non-zero
  9102  001502                     	endif
  9103  001502                     	if	0	;tblptru may be non-zero
  9104  001502                     	endif
  9105  001502  0008               	tblrd		*
  9106  001504  50F5               	movf	tablat,w,c
  9107  001506  0A2A               	xorlw	42
  9108  001508  A4D8               	btfss	status,2,c
  9109  00150A  D023               	goto	l7021
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9113  00150C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9114  001510  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9115  001514  2ADE               	incf	postinc2,f,c
  9116  001516  0E00               	movlw	0
  9117  001518  22DD               	addwfc	postdec2,f,c
  9118                           
  9119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9120  00151A  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9121  00151E  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9122  001522  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9123  001526  0E02               	movlw	2
  9124  001528  26DE               	addwf	postinc2,f,c
  9125  00152A  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9126  00152E  0E00               	movlw	0
  9127  001530  22DD               	addwfc	postdec2,f,c
  9128  001532  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9129  001536  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9130  00153A  CFDE F04A          	movff	postinc2,_width
  9131  00153E  CFDD F04B          	movff	postdec2,_width+1
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9135  001542  AE4B               	btfss	_width+1,7,c
  9136  001544  D040               	goto	u7680
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9140  001546  804E               	bsf	_flags,0,c
  9141                           
  9142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9143  001548  6C4A               	negf	_width,c
  9144  00154A  1E4B               	comf	_width+1,f,c
  9145  00154C  B0D8               	btfsc	status,0,c
  9146  00154E  2A4B               	incf	_width+1,f,c
  9147  001550  D03A               	goto	u7680
  9148  001552                     l7021:
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9152  001552  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9153  001556  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9154  00155A  CFDE F087          	movff	postinc2,atoi@s
  9155  00155E  CFDD F088          	movff	postdec2,atoi@s+1
  9156  001562  ECD8  F015         	call	_atoi	;wreg free
  9157  001566  C087  F04A         	movff	?_atoi,_width
  9158  00156A  C088  F04B         	movff	?_atoi+1,_width+1
  9159                           
  9160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9161  00156E  D007               	goto	l7025
  9162  001570                     l7023:
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9166  001570  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9167  001574  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9168  001578  2ADE               	incf	postinc2,f,c
  9169  00157A  0E00               	movlw	0
  9170  00157C  22DD               	addwfc	postdec2,f,c
  9171  00157E                     l7025:
  9172  00157E  0ED0               	movlw	208
  9173  001580  0100               	movlb	0	; () banked
  9174  001582  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  9175  001584  0EFF               	movlw	255
  9176  001586  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9177  001588  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9178  00158C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9179  001590  CFDE FFF6          	movff	postinc2,tblptrl
  9180  001594  CFDD FFF7          	movff	postdec2,tblptrh
  9181  001598                     	if	0	;tblptru may be non-zero
  9182  001598                     	endif
  9183  001598                     	if	0	;tblptru may be non-zero
  9184  001598                     	endif
  9185  001598  0008               	tblrd		*
  9186  00159A  50F5               	movf	tablat,w,c
  9187  00159C  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9188  00159E  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  9189  0015A0  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  9190  0015A2  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  9191  0015A4  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9192  0015A6  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  9193  0015A8  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  9194  0015AA  E106               	bnz	u7660
  9195  0015AC  0E0A               	movlw	10
  9196  0015AE  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  9197  0015B0  B0D8               	btfsc	status,0,c
  9198  0015B2  D002               	goto	u7660
  9199  0015B4  0E01               	movlw	1
  9200  0015B6  D001               	goto	u7670
  9201  0015B8                     u7660:
  9202  0015B8  0E00               	movlw	0
  9203  0015BA                     u7670:
  9204  0015BA  6FE3               	movwf	_vfpfcnvrt$1258& (0+255),b
  9205  0015BC  6BE4               	clrf	(_vfpfcnvrt$1258+1)& (0+255),b
  9206                           
  9207                           ; BSR set to: 0
  9208  0015BE  51E3               	movf	_vfpfcnvrt$1258& (0+255),w,b
  9209  0015C0  11E4               	iorwf	(_vfpfcnvrt$1258+1)& (0+255),w,b
  9210  0015C2  A4D8               	btfss	status,2,c
  9211  0015C4  D7D5               	goto	l7023
  9212  0015C6                     u7680:
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9216  0015C6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9217  0015CA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9218  0015CE  CFDE FFF6          	movff	postinc2,tblptrl
  9219  0015D2  CFDD FFF7          	movff	postdec2,tblptrh
  9220  0015D6                     	if	0	;tblptru may be non-zero
  9221  0015D6                     	endif
  9222  0015D6                     	if	0	;tblptru may be non-zero
  9223  0015D6                     	endif
  9224  0015D6  0008               	tblrd		*
  9225  0015D8  50F5               	movf	tablat,w,c
  9226  0015DA  0A64               	xorlw	100
  9227  0015DC  B4D8               	btfsc	status,2,c
  9228  0015DE  D00D               	goto	u7700
  9229                           
  9230                           ; BSR set to: 0
  9231  0015E0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9232  0015E4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9233  0015E8  CFDE FFF6          	movff	postinc2,tblptrl
  9234  0015EC  CFDD FFF7          	movff	postdec2,tblptrh
  9235  0015F0                     	if	0	;tblptru may be non-zero
  9236  0015F0                     	endif
  9237  0015F0                     	if	0	;tblptru may be non-zero
  9238  0015F0                     	endif
  9239  0015F0  0008               	tblrd		*
  9240  0015F2  50F5               	movf	tablat,w,c
  9241  0015F4  0A69               	xorlw	105
  9242  0015F6  A4D8               	btfss	status,2,c
  9243  0015F8  D03F               	goto	l7041
  9244  0015FA                     u7700:
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9248  0015FA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9249  0015FE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9250  001602  2ADE               	incf	postinc2,f,c
  9251  001604  0E00               	movlw	0
  9252  001606  22DD               	addwfc	postdec2,f,c
  9253                           
  9254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9255  001608  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9256  00160C  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9257  001610  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9258  001614  0E02               	movlw	2
  9259  001616  26DE               	addwf	postinc2,f,c
  9260  001618  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9261  00161C  0E00               	movlw	0
  9262  00161E  22DD               	addwfc	postdec2,f,c
  9263  001620  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9264  001624  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9265  001628  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  9266  00162C  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  9267  001630  0E00               	movlw	0
  9268  001632  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9269  001634  0EFF               	movlw	-1
  9270  001636  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9271  001638  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9272  00163A  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9273  00163C  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9274  00163E  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9275  001640  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9279  001642  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  9280  001646  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9281  00164A  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  9282  00164E  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9283  001652  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9284  001656  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9285  00165A  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9286  00165E  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9287  001662  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9288  001666  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9289  00166A  ECCA  F00E         	call	_dtoa	;wreg free
  9290  00166E  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  9291  001672  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9292  001676  0012               	return	
  9293  001678                     l7041:
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9297  001678  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9298  00167C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9299  001680  CFDE FFF6          	movff	postinc2,tblptrl
  9300  001684  CFDD FFF7          	movff	postdec2,tblptrh
  9301  001688                     	if	0	;tblptru may be non-zero
  9302  001688                     	endif
  9303  001688                     	if	0	;tblptru may be non-zero
  9304  001688                     	endif
  9305  001688  0008               	tblrd		*
  9306  00168A  50F5               	movf	tablat,w,c
  9307  00168C  0A78               	xorlw	120
  9308  00168E  B4D8               	btfsc	status,2,c
  9309  001690  D00D               	goto	u7720
  9310                           
  9311                           ; BSR set to: 0
  9312  001692  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9313  001696  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9314  00169A  CFDE FFF6          	movff	postinc2,tblptrl
  9315  00169E  CFDD FFF7          	movff	postdec2,tblptrh
  9316  0016A2                     	if	0	;tblptru may be non-zero
  9317  0016A2                     	endif
  9318  0016A2                     	if	0	;tblptru may be non-zero
  9319  0016A2                     	endif
  9320  0016A2  0008               	tblrd		*
  9321  0016A4  50F5               	movf	tablat,w,c
  9322  0016A6  0A58               	xorlw	88
  9323  0016A8  A4D8               	btfss	status,2,c
  9324  0016AA  D04D               	goto	l7055
  9325  0016AC                     u7720:
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9329  0016AC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9330  0016B0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9331  0016B4  CFDE FFF6          	movff	postinc2,tblptrl
  9332  0016B8  CFDD FFF7          	movff	postdec2,tblptrh
  9333  0016BC                     	if	0	;tblptru may be non-zero
  9334  0016BC                     	endif
  9335  0016BC                     	if	0	;tblptru may be non-zero
  9336  0016BC                     	endif
  9337  0016BC  0008               	tblrd		*
  9338  0016BE  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9342  0016C2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9343  0016C6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9344  0016CA  2ADE               	incf	postinc2,f,c
  9345  0016CC  0E00               	movlw	0
  9346  0016CE  22DD               	addwfc	postdec2,f,c
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9350  0016D0  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9351  0016D4  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9352  0016D8  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9353  0016DC  0E02               	movlw	2
  9354  0016DE  26DE               	addwf	postinc2,f,c
  9355  0016E0  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9356  0016E4  0E00               	movlw	0
  9357  0016E6  22DD               	addwfc	postdec2,f,c
  9358  0016E8  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9359  0016EC  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9360  0016F0  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  9361  0016F4  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  9362  0016F8  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9363  0016FC  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9364  001700  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9365  001702  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9366  001704  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9367  001706  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9368  001708  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9369  00170A  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9373  00170C  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  9374  001710  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9375  001714  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  9376  001718  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9377  00171C  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9378  001720  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9379  001724  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9380  001728  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9381  00172C  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9382  001730  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9383  001734  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  9384  001738  ECEE  F00F         	call	_xtoa	;wreg free
  9385  00173C  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  9386  001740  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9387  001744  0012               	return	
  9388  001746                     l7055:
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9392  001746  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9393  00174A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9394  00174E  CFDE FFF6          	movff	postinc2,tblptrl
  9395  001752  CFDD FFF7          	movff	postdec2,tblptrh
  9396  001756                     	if	0	;tblptru may be non-zero
  9397  001756                     	endif
  9398  001756                     	if	0	;tblptru may be non-zero
  9399  001756                     	endif
  9400  001756  0008               	tblrd		*
  9401  001758  50F5               	movf	tablat,w,c
  9402  00175A  0A25               	xorlw	37
  9403  00175C  A4D8               	btfss	status,2,c
  9404  00175E  D017               	goto	l7065
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9408  001760  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9409  001764  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9410  001768  2ADE               	incf	postinc2,f,c
  9411  00176A  0E00               	movlw	0
  9412  00176C  22DD               	addwfc	postdec2,f,c
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9416  00176E  0E00               	movlw	0
  9417  001770  6F85               	movwf	(fputc@c+1)& (0+255),b
  9418  001772  0E25               	movlw	37
  9419  001774  6F84               	movwf	fputc@c& (0+255),b
  9420  001776  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9421  00177A  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9422  00177E  ECBE  F01C         	call	_fputc	;wreg free
  9423  001782                     l7061:
  9424                           
  9425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9426  001782  0E00               	movlw	0
  9427  001784  0100               	movlb	0	; () banked
  9428  001786  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9429  001788  0E01               	movlw	1
  9430  00178A  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9431  00178C  0012               	return	
  9432  00178E                     l7065:
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9436  00178E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9437  001792  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9438  001796  2ADE               	incf	postinc2,f,c
  9439  001798  0E00               	movlw	0
  9440  00179A  22DD               	addwfc	postdec2,f,c
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9444  00179C  0E00               	movlw	0
  9445  00179E  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9446  0017A0  0E00               	movlw	0
  9447  0017A2  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9448  0017A4  0012               	return	
  9449  0017A6                     l7071:
  9450                           
  9451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9452  0017A6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9453  0017AA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9454  0017AE  CFDE FFF6          	movff	postinc2,tblptrl
  9455  0017B2  CFDD FFF7          	movff	postdec2,tblptrh
  9456  0017B6                     	if	0	;tblptru may be non-zero
  9457  0017B6                     	endif
  9458  0017B6                     	if	0	;tblptru may be non-zero
  9459  0017B6                     	endif
  9460  0017B6  0008               	tblrd		*
  9461  0017B8  50F5               	movf	tablat,w,c
  9462  0017BA  0100               	movlb	0	; () banked
  9463  0017BC  6F84               	movwf	fputc@c& (0+255),b
  9464  0017BE  6B85               	clrf	(fputc@c+1)& (0+255),b
  9465  0017C0  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9466  0017C4  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9467  0017C8  ECBE  F01C         	call	_fputc	;wreg free
  9468                           
  9469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9470  0017CC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9471  0017D0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9472  0017D4  2ADE               	incf	postinc2,f,c
  9473  0017D6  0E00               	movlw	0
  9474  0017D8  22DD               	addwfc	postdec2,f,c
  9475  0017DA  D7D3               	goto	l7061
  9476  0017DC                     __end_of_vfpfcnvrt:
  9477                           	opt callstack 0
  9478                           
  9479 ;; *************** function _xtoa *****************
  9480 ;; Defined at:
  9481 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9484 ;;		 -> NULL(0), 
  9485 ;;  d               8   33[BANK0 ] unsigned long long 
  9486 ;;  x               1   41[BANK0 ] unsigned char 
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;  n               8   58[BANK0 ] unsigned long long 
  9489 ;;  c               2   68[BANK0 ] int 
  9490 ;;  i               2   66[BANK0 ] int 
  9491 ;;  w               2   56[BANK0 ] int 
  9492 ;;  p               2   54[BANK0 ] int 
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  2   31[BANK0 ] int 
  9495 ;; Registers used:
  9496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9502 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9504 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;Total ram usage:       39 bytes
  9507 ;; Hardware stack levels used:    1
  9508 ;; Hardware stack levels required when called:   10
  9509 ;; This function calls:
  9510 ;;		_isalpha
  9511 ;;		_isupper
  9512 ;;		_pad
  9513 ;;		_toupper
  9514 ;; This function is called by:
  9515 ;;		_vfpfcnvrt
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text23
  9520  001FDC                     __ptext23:
  9521                           	opt callstack 0
  9522  001FDC                     _xtoa:
  9523                           	opt callstack 16
  9524                           
  9525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9526                           
  9527                           ;incstack = 0
  9528  001FDC  AE4D               	btfss	_prec+1,7,c
  9529                           
  9530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9531  001FDE  924E               	bcf	_flags,1,c
  9532                           
  9533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9534  001FE0  BE4D               	btfsc	_prec+1,7,c
  9535  001FE2  D005               	goto	u7380
  9536  001FE4  504D               	movf	_prec+1,w,c
  9537  001FE6  E109               	bnz	l671
  9538  001FE8  044C               	decf	_prec,w,c
  9539  001FEA  B0D8               	btfsc	status,0,c
  9540  001FEC  D006               	goto	l671
  9541  001FEE                     u7380:
  9542  001FEE  0E00               	movlw	0
  9543  001FF0  0100               	movlb	0	; () banked
  9544  001FF2  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  9545  001FF4  0E01               	movlw	1
  9546  001FF6  6FB6               	movwf	xtoa@p& (0+255),b
  9547  001FF8  D004               	goto	l673
  9548  001FFA                     l671:
  9549  001FFA  C04C  F0B6         	movff	_prec,xtoa@p
  9550  001FFE  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  9551  002002                     l673:
  9552                           
  9553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9554  002002  C04A  F0B8         	movff	_width,xtoa@w
  9555  002006  C04B  F0B9         	movff	_width+1,xtoa@w+1
  9556                           
  9557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9558  00200A  A84E               	btfss	_flags,4,c
  9559  00200C  D005               	goto	l6875
  9560                           
  9561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9562  00200E  0100               	movlb	0	; () banked
  9563  002010  0EFE               	movlw	254
  9564  002012  27B8               	addwf	xtoa@w& (0+255),f,b
  9565  002014  0EFF               	movlw	255
  9566  002016  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  9567  002018                     l6875:
  9568                           
  9569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9570  002018  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  9571  00201C  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  9572  002020  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  9573  002024  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  9574  002028  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  9575  00202C  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  9576  002030  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  9577  002034  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  9578                           
  9579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9580  002038  0E00               	movlw	0
  9581  00203A  0100               	movlb	0	; () banked
  9582  00203C  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  9583  00203E  0E1F               	movlw	31
  9584  002040  6FC2               	movwf	xtoa@i& (0+255),b
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9588  002042  0E00               	movlw	0
  9589  002044  0102               	movlb	2	; () banked
  9590  002046  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9591                           
  9592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9593  002048  D094               	goto	l6911
  9594  00204A                     l6881:
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9598  00204A  07C2               	decf	xtoa@i& (0+255),f,b
  9599  00204C  A0D8               	btfss	status,0,c
  9600  00204E  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9604  002050  0E0F               	movlw	15
  9605  002052  15BA               	andwf	xtoa@n& (0+255),w,b
  9606  002054  6FC4               	movwf	xtoa@c& (0+255),b
  9607  002056  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9611  002058  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  9612  00205A  D008               	goto	l6889
  9613  00205C  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  9614  00205E  E104               	bnz	u7400
  9615  002060  0E0A               	movlw	10
  9616  002062  5DC4               	subwf	xtoa@c& (0+255),w,b
  9617  002064  A0D8               	btfss	status,0,c
  9618  002066  D002               	goto	l6889
  9619  002068                     u7400:
  9620                           
  9621                           ; BSR set to: 0
  9622  002068  0E57               	movlw	87
  9623  00206A  D001               	goto	L4
  9624  00206C                     l6889:
  9625                           
  9626                           ; BSR set to: 0
  9627  00206C  0E30               	movlw	48
  9628  00206E                     L4:
  9629  00206E  25C4               	addwf	xtoa@c& (0+255),w,b
  9630  002070  6FC4               	movwf	xtoa@c& (0+255),b
  9631  002072  0E00               	movlw	0
  9632  002074  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  9633  002076  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  9634                           
  9635                           ; BSR set to: 0
  9636                           
  9637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9638  002078  0EBF               	movlw	191
  9639  00207A  6FAA               	movwf	??_xtoa& (0+255),b
  9640  00207C  0EFF               	movlw	255
  9641  00207E  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9642  002080  51A9               	movf	xtoa@x& (0+255),w,b
  9643  002082  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9644  002084  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  9645  002086  51AA               	movf	??_xtoa& (0+255),w,b
  9646  002088  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9647  00208A  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9648  00208C  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9649  00208E  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9650  002090  E106               	bnz	u7410
  9651  002092  0E1A               	movlw	26
  9652  002094  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9653  002096  B0D8               	btfsc	status,0,c
  9654  002098  D002               	goto	u7410
  9655  00209A  0E01               	movlw	1
  9656  00209C  D001               	goto	u7420
  9657  00209E                     u7410:
  9658  00209E  0E00               	movlw	0
  9659  0020A0                     u7420:
  9660  0020A0  6FB2               	movwf	_xtoa$1243& (0+255),b
  9661  0020A2  6BB3               	clrf	(_xtoa$1243+1)& (0+255),b
  9662                           
  9663                           ; BSR set to: 0
  9664  0020A4  51B2               	movf	_xtoa$1243& (0+255),w,b
  9665  0020A6  11B3               	iorwf	(_xtoa$1243+1)& (0+255),w,b
  9666  0020A8  B4D8               	btfsc	status,2,c
  9667  0020AA  D027               	goto	l6903
  9668                           
  9669                           ; BSR set to: 0
  9670  0020AC  0E9F               	movlw	159
  9671  0020AE  6FAA               	movwf	??_xtoa& (0+255),b
  9672  0020B0  0EFF               	movlw	255
  9673  0020B2  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9674  0020B4  0E20               	movlw	32
  9675  0020B6  11C4               	iorwf	xtoa@c& (0+255),w,b
  9676  0020B8  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9677  0020BA  0E00               	movlw	0
  9678  0020BC  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  9679  0020BE  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  9680  0020C0  51AA               	movf	??_xtoa& (0+255),w,b
  9681  0020C2  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9682  0020C4  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9683  0020C6  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9684  0020C8  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9685  0020CA  E106               	bnz	u7440
  9686  0020CC  0E1A               	movlw	26
  9687  0020CE  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9688  0020D0  B0D8               	btfsc	status,0,c
  9689  0020D2  D002               	goto	u7440
  9690  0020D4  0E01               	movlw	1
  9691  0020D6  D001               	goto	u7450
  9692  0020D8                     u7440:
  9693  0020D8  0E00               	movlw	0
  9694  0020DA                     u7450:
  9695  0020DA  6FB4               	movwf	_xtoa$1244& (0+255),b
  9696  0020DC  6BB5               	clrf	(_xtoa$1244+1)& (0+255),b
  9697                           
  9698                           ; BSR set to: 0
  9699  0020DE  51B4               	movf	_xtoa$1244& (0+255),w,b
  9700  0020E0  11B5               	iorwf	(_xtoa$1244+1)& (0+255),w,b
  9701  0020E2  B4D8               	btfsc	status,2,c
  9702  0020E4  D00A               	goto	l6903
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9706  0020E6  C0C4  F086         	movff	xtoa@c,toupper@c
  9707  0020EA  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  9708  0020EE  ECD8  F01D         	call	_toupper	;wreg free
  9709  0020F2  C086  F0C4         	movff	?_toupper,xtoa@c
  9710  0020F6  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  9711  0020FA                     l6903:
  9712                           
  9713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9714  0020FA  0E80               	movlw	low _dbuf
  9715  0020FC  0100               	movlb	0	; () banked
  9716  0020FE  25C2               	addwf	xtoa@i& (0+255),w,b
  9717  002100  6ED9               	movwf	fsr2l,c
  9718  002102  0E02               	movlw	high _dbuf
  9719  002104  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9720  002106  6EDA               	movwf	fsr2h,c
  9721  002108  C0C4  FFDF         	movff	xtoa@c,indf2
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9725  00210C  07B6               	decf	xtoa@p& (0+255),f,b
  9726  00210E  A0D8               	btfss	status,0,c
  9727  002110  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9731  002112  07B8               	decf	xtoa@w& (0+255),f,b
  9732  002114  A0D8               	btfss	status,0,c
  9733  002116  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9737  002118  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  9738  00211C  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  9739  002120  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  9740  002124  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  9741  002128  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  9742  00212C  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  9743  002130  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  9744  002134  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  9745  002138  0E05               	movlw	5
  9746  00213A  D009               	goto	u7470
  9747  00213C                     u7475:
  9748  00213C  90D8               	bcf	status,0,c
  9749  00213E  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  9750  002140  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  9751  002142  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  9752  002144  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  9753  002146  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  9754  002148  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  9755  00214A  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  9756  00214C  33AA               	rrcf	??_xtoa& (0+255),f,b
  9757  00214E                     u7470:
  9758  00214E  2EE8               	decfsz	wreg,f,c
  9759  002150  D7F5               	goto	u7475
  9760  002152  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  9761  002156  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  9762  00215A  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  9763  00215E  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  9764  002162  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  9765  002166  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  9766  00216A  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  9767  00216E  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  9768  002172                     l6911:
  9769                           
  9770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9771  002172  0100               	movlb	0	; () banked
  9772  002174  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  9773  002176  D020               	goto	u7520
  9774  002178  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  9775  00217A  E104               	bnz	u7480
  9776  00217C  0E02               	movlw	2
  9777  00217E  5DC2               	subwf	xtoa@i& (0+255),w,b
  9778  002180  A0D8               	btfss	status,0,c
  9779  002182  D01A               	goto	u7520
  9780  002184                     u7480:
  9781                           
  9782                           ; BSR set to: 0
  9783  002184  51BA               	movf	xtoa@n& (0+255),w,b
  9784  002186  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  9785  002188  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  9786  00218A  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  9787  00218C  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  9788  00218E  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  9789  002190  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  9790  002192  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  9791  002194  A4D8               	btfss	status,2,c
  9792  002196  D759               	goto	l6881
  9793                           
  9794                           ; BSR set to: 0
  9795  002198  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9796  00219A  D005               	goto	u7500
  9797  00219C  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9798  00219E  E102               	bnz	u7501
  9799  0021A0  05B6               	decf	xtoa@p& (0+255),w,b
  9800  0021A2  B0D8               	btfsc	status,0,c
  9801  0021A4                     u7501:
  9802  0021A4  D752               	goto	l6881
  9803  0021A6                     u7500:
  9804                           
  9805                           ; BSR set to: 0
  9806  0021A6  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9807  0021A8  D007               	goto	u7520
  9808  0021AA  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9809  0021AC  E103               	bnz	u7510
  9810  0021AE  05B8               	decf	xtoa@w& (0+255),w,b
  9811  0021B0  A0D8               	btfss	status,0,c
  9812  0021B2  D002               	goto	u7520
  9813  0021B4                     u7510:
  9814                           
  9815                           ; BSR set to: 0
  9816  0021B4  B24E               	btfsc	_flags,1,c
  9817  0021B6  D749               	goto	l6881
  9818  0021B8                     u7520:
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9822  0021B8  A84E               	btfss	_flags,4,c
  9823  0021BA  D016               	goto	l6927
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9827  0021BC  07C2               	decf	xtoa@i& (0+255),f,b
  9828  0021BE  A0D8               	btfss	status,0,c
  9829  0021C0  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9833  0021C2  0E80               	movlw	low _dbuf
  9834  0021C4  25C2               	addwf	xtoa@i& (0+255),w,b
  9835  0021C6  6ED9               	movwf	fsr2l,c
  9836  0021C8  0E02               	movlw	high _dbuf
  9837  0021CA  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9838  0021CC  6EDA               	movwf	fsr2h,c
  9839  0021CE  C0A9  FFDF         	movff	xtoa@x,indf2
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9843  0021D2  07C2               	decf	xtoa@i& (0+255),f,b
  9844  0021D4  A0D8               	btfss	status,0,c
  9845  0021D6  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9846                           
  9847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9848  0021D8  0E80               	movlw	low _dbuf
  9849  0021DA  25C2               	addwf	xtoa@i& (0+255),w,b
  9850  0021DC  6ED9               	movwf	fsr2l,c
  9851  0021DE  0E02               	movlw	high _dbuf
  9852  0021E0  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9853  0021E2  6EDA               	movwf	fsr2h,c
  9854  0021E4  0E30               	movlw	48
  9855  0021E6  6EDF               	movwf	indf2,c
  9856  0021E8                     l6927:
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9860  0021E8  C09F  F094         	movff	xtoa@fp,pad@fp
  9861  0021EC  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9862  0021F0  0E80               	movlw	low _dbuf
  9863  0021F2  25C2               	addwf	xtoa@i& (0+255),w,b
  9864  0021F4  6F96               	movwf	pad@buf& (0+255),b
  9865  0021F6  0E02               	movlw	high _dbuf
  9866  0021F8  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9867  0021FA  6F97               	movwf	(pad@buf+1)& (0+255),b
  9868  0021FC  C0B8  F098         	movff	xtoa@w,pad@p
  9869  002200  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9870  002204  EC29  F01B         	call	_pad	;wreg free
  9871  002208  C094  F09F         	movff	?_pad,?_xtoa
  9872  00220C  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9873  002210  0012               	return		;funcret
  9874  002212                     __end_of_xtoa:
  9875                           	opt callstack 0
  9876                           
  9877 ;; *************** function _toupper *****************
  9878 ;; Defined at:
  9879 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;  c               2    6[BANK0 ] int 
  9882 ;; Auto vars:     Size  Location     Type
  9883 ;;		None
  9884 ;; Return value:  Size  Location     Type
  9885 ;;                  2    6[BANK0 ] int 
  9886 ;; Registers used:
  9887 ;;		wreg, status,2, status,0
  9888 ;; Tracked objects:
  9889 ;;		On entry : 0/0
  9890 ;;		On exit  : 0/0
  9891 ;;		Unchanged: 0/0
  9892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9896 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9897 ;;Total ram usage:        8 bytes
  9898 ;; Hardware stack levels used:    1
  9899 ;; Hardware stack levels required when called:    4
  9900 ;; This function calls:
  9901 ;;		_islower
  9902 ;; This function is called by:
  9903 ;;		_xtoa
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           	psect	text24
  9908  003BB0                     __ptext24:
  9909                           	opt callstack 0
  9910  003BB0                     _toupper:
  9911                           	opt callstack 21
  9912                           
  9913                           ;incstack = 0
  9914  003BB0  0E9F               	movlw	159
  9915  003BB2  0100               	movlb	0	; () banked
  9916  003BB4  6F88               	movwf	??_toupper& (0+255),b
  9917  003BB6  0EFF               	movlw	255
  9918  003BB8  6F89               	movwf	(??_toupper+1)& (0+255),b
  9919  003BBA  C086  F08A         	movff	toupper@c,??_toupper+2
  9920  003BBE  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9921  003BC2  5188               	movf	??_toupper& (0+255),w,b
  9922  003BC4  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9923  003BC6  5189               	movf	(??_toupper+1)& (0+255),w,b
  9924  003BC8  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9925  003BCA  518B               	movf	(??_toupper+3)& (0+255),w,b
  9926  003BCC  E106               	bnz	u7020
  9927  003BCE  0E1A               	movlw	26
  9928  003BD0  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9929  003BD2  B0D8               	btfsc	status,0,c
  9930  003BD4  D002               	goto	u7020
  9931  003BD6  0E01               	movlw	1
  9932  003BD8  D001               	goto	u7030
  9933  003BDA                     u7020:
  9934  003BDA  0E00               	movlw	0
  9935  003BDC                     u7030:
  9936  003BDC  6F8C               	movwf	_toupper$1808& (0+255),b
  9937  003BDE  6B8D               	clrf	(_toupper$1808+1)& (0+255),b
  9938                           
  9939                           ; BSR set to: 0
  9940  003BE0  518C               	movf	_toupper$1808& (0+255),w,b
  9941  003BE2  118D               	iorwf	(_toupper$1808+1)& (0+255),w,b
  9942  003BE4  B4D8               	btfsc	status,2,c
  9943  003BE6  D005               	goto	l1511
  9944                           
  9945                           ; BSR set to: 0
  9946  003BE8  0E5F               	movlw	95
  9947  003BEA  1586               	andwf	toupper@c& (0+255),w,b
  9948  003BEC  6F86               	movwf	?_toupper& (0+255),b
  9949  003BEE  6B87               	clrf	(?_toupper+1)& (0+255),b
  9950  003BF0  0012               	return	
  9951  003BF2                     l1511:
  9952                           
  9953                           ; BSR set to: 0
  9954  003BF2  C086  F086         	movff	toupper@c,?_toupper
  9955  003BF6  C087  F087         	movff	toupper@c+1,?_toupper+1
  9956                           
  9957                           ; BSR set to: 0
  9958  003BFA  0012               	return		;funcret
  9959  003BFC                     __end_of_toupper:
  9960                           	opt callstack 0
  9961                           
  9962 ;; *************** function _islower *****************
  9963 ;; Defined at:
  9964 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  c               2    0[BANK0 ] int 
  9967 ;; Auto vars:     Size  Location     Type
  9968 ;;		None
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  2    0[BANK0 ] int 
  9971 ;; Registers used:
  9972 ;;		wreg, status,2, status,0
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9980 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9981 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9982 ;;Total ram usage:        6 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; Hardware stack levels required when called:    3
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_toupper
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text25
  9993  003D52                     __ptext25:
  9994                           	opt callstack 0
  9995  003D52                     _islower:
  9996                           	opt callstack 21
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;incstack = 0
 10000  003D52  0E9F               	movlw	159
 10001  003D54  0100               	movlb	0	; () banked
 10002  003D56  6F82               	movwf	??_islower& (0+255),b
 10003  003D58  0EFF               	movlw	255
 10004  003D5A  6F83               	movwf	(??_islower+1)& (0+255),b
 10005  003D5C  C080  F084         	movff	islower@c,??_islower+2
 10006  003D60  C081  F085         	movff	islower@c+1,??_islower+3
 10007  003D64  5182               	movf	??_islower& (0+255),w,b
 10008  003D66  2784               	addwf	(??_islower+2)& (0+255),f,b
 10009  003D68  5183               	movf	(??_islower+1)& (0+255),w,b
 10010  003D6A  2385               	addwfc	(??_islower+3)& (0+255),f,b
 10011  003D6C  5185               	movf	(??_islower+3)& (0+255),w,b
 10012  003D6E  E106               	bnz	u6910
 10013  003D70  0E1A               	movlw	26
 10014  003D72  5D84               	subwf	(??_islower+2)& (0+255),w,b
 10015  003D74  B0D8               	btfsc	status,0,c
 10016  003D76  D002               	goto	u6910
 10017  003D78  0E01               	movlw	1
 10018  003D7A  D001               	goto	u6920
 10019  003D7C                     u6910:
 10020  003D7C  0E00               	movlw	0
 10021  003D7E                     u6920:
 10022  003D7E  6F80               	movwf	?_islower& (0+255),b
 10023  003D80  6B81               	clrf	(?_islower+1)& (0+255),b
 10024                           
 10025                           ; BSR set to: 0
 10026  003D82  0012               	return		;funcret
 10027  003D84                     __end_of_islower:
 10028                           	opt callstack 0
 10029                           
 10030 ;; *************** function _isupper *****************
 10031 ;; Defined at:
 10032 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  c               2    0[BANK0 ] int 
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  2    0[BANK0 ] int 
 10039 ;; Registers used:
 10040 ;;		wreg, status,2, status,0
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10050 ;;Total ram usage:        6 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:    3
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_xtoa
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text26
 10061  003D84                     __ptext26:
 10062                           	opt callstack 0
 10063  003D84                     _isupper:
 10064                           	opt callstack 22
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;incstack = 0
 10068  003D84  0EBF               	movlw	191
 10069  003D86  0100               	movlb	0	; () banked
 10070  003D88  6F82               	movwf	??_isupper& (0+255),b
 10071  003D8A  0EFF               	movlw	255
 10072  003D8C  6F83               	movwf	(??_isupper+1)& (0+255),b
 10073  003D8E  C080  F084         	movff	isupper@c,??_isupper+2
 10074  003D92  C081  F085         	movff	isupper@c+1,??_isupper+3
 10075  003D96  5182               	movf	??_isupper& (0+255),w,b
 10076  003D98  2784               	addwf	(??_isupper+2)& (0+255),f,b
 10077  003D9A  5183               	movf	(??_isupper+1)& (0+255),w,b
 10078  003D9C  2385               	addwfc	(??_isupper+3)& (0+255),f,b
 10079  003D9E  5185               	movf	(??_isupper+3)& (0+255),w,b
 10080  003DA0  E106               	bnz	u6980
 10081  003DA2  0E1A               	movlw	26
 10082  003DA4  5D84               	subwf	(??_isupper+2)& (0+255),w,b
 10083  003DA6  B0D8               	btfsc	status,0,c
 10084  003DA8  D002               	goto	u6980
 10085  003DAA  0E01               	movlw	1
 10086  003DAC  D001               	goto	u6990
 10087  003DAE                     u6980:
 10088  003DAE  0E00               	movlw	0
 10089  003DB0                     u6990:
 10090  003DB0  6F80               	movwf	?_isupper& (0+255),b
 10091  003DB2  6B81               	clrf	(?_isupper+1)& (0+255),b
 10092                           
 10093                           ; BSR set to: 0
 10094  003DB4  0012               	return		;funcret
 10095  003DB6                     __end_of_isupper:
 10096                           	opt callstack 0
 10097                           
 10098 ;; *************** function _isalpha *****************
 10099 ;; Defined at:
 10100 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  c               2    0[BANK0 ] int 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;		None
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  2    0[BANK0 ] int 
 10107 ;; Registers used:
 10108 ;;		wreg, status,2, status,0
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;Total ram usage:        6 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; Hardware stack levels required when called:    3
 10121 ;; This function calls:
 10122 ;;		Nothing
 10123 ;; This function is called by:
 10124 ;;		_xtoa
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           	psect	text27
 10129  003CB6                     __ptext27:
 10130                           	opt callstack 0
 10131  003CB6                     _isalpha:
 10132                           	opt callstack 22
 10133                           
 10134                           ; BSR set to: 0
 10135                           ;incstack = 0
 10136  003CB6  0E9F               	movlw	159
 10137  003CB8  0100               	movlb	0	; () banked
 10138  003CBA  6F82               	movwf	??_isalpha& (0+255),b
 10139  003CBC  0EFF               	movlw	255
 10140  003CBE  6F83               	movwf	(??_isalpha+1)& (0+255),b
 10141  003CC0  0E20               	movlw	32
 10142  003CC2  1180               	iorwf	isalpha@c& (0+255),w,b
 10143  003CC4  6F84               	movwf	(??_isalpha+2)& (0+255),b
 10144  003CC6  0E00               	movlw	0
 10145  003CC8  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
 10146  003CCA  6F85               	movwf	(??_isalpha+3)& (0+255),b
 10147  003CCC  5182               	movf	??_isalpha& (0+255),w,b
 10148  003CCE  2784               	addwf	(??_isalpha+2)& (0+255),f,b
 10149  003CD0  5183               	movf	(??_isalpha+1)& (0+255),w,b
 10150  003CD2  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
 10151  003CD4  5185               	movf	(??_isalpha+3)& (0+255),w,b
 10152  003CD6  E106               	bnz	u7000
 10153  003CD8  0E1A               	movlw	26
 10154  003CDA  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
 10155  003CDC  B0D8               	btfsc	status,0,c
 10156  003CDE  D002               	goto	u7000
 10157  003CE0  0E01               	movlw	1
 10158  003CE2  D001               	goto	u7010
 10159  003CE4                     u7000:
 10160  003CE4  0E00               	movlw	0
 10161  003CE6                     u7010:
 10162  003CE6  6F80               	movwf	?_isalpha& (0+255),b
 10163  003CE8  6B81               	clrf	(?_isalpha+1)& (0+255),b
 10164                           
 10165                           ; BSR set to: 0
 10166  003CEA  0012               	return		;funcret
 10167  003CEC                     __end_of_isalpha:
 10168                           	opt callstack 0
 10169                           
 10170 ;; *************** function _dtoa *****************
 10171 ;; Defined at:
 10172 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
 10175 ;;		 -> NULL(0), 
 10176 ;;  d               8   33[BANK0 ] long long 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;  n               8   57[BANK0 ] long long 
 10179 ;;  i               2   65[BANK0 ] int 
 10180 ;;  s               2   55[BANK0 ] int 
 10181 ;;  w               2   53[BANK0 ] int 
 10182 ;;  p               2   51[BANK0 ] int 
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  2   31[BANK0 ] int 
 10185 ;; Registers used:
 10186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10192 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10193 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10194 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10195 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10196 ;;Total ram usage:       36 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; Hardware stack levels required when called:   10
 10199 ;; This function calls:
 10200 ;;		___aodiv
 10201 ;;		___aomod
 10202 ;;		_abs
 10203 ;;		_pad
 10204 ;; This function is called by:
 10205 ;;		_vfpfcnvrt
 10206 ;; This function uses a non-reentrant model
 10207 ;;
 10208                           
 10209                           	psect	text28
 10210  001D94                     __ptext28:
 10211                           	opt callstack 0
 10212  001D94                     _dtoa:
 10213                           	opt callstack 16
 10214                           
 10215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;incstack = 0
 10219  001D94  C0A1  F0B9         	movff	dtoa@d,dtoa@n
 10220  001D98  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
 10221  001D9C  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
 10222  001DA0  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
 10223  001DA4  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
 10224  001DA8  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
 10225  001DAC  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
 10226  001DB0  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
 10227                           
 10228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 10229  001DB4  0100               	movlb	0	; () banked
 10230  001DB6  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
 10231  001DB8  D002               	goto	u7220
 10232  001DBA  0E01               	movlw	1
 10233  001DBC  D001               	goto	u7230
 10234  001DBE                     u7220:
 10235  001DBE  0E00               	movlw	0
 10236  001DC0                     u7230:
 10237  001DC0  6FB7               	movwf	dtoa@s& (0+255),b
 10238  001DC2  6BB8               	clrf	(dtoa@s+1)& (0+255),b
 10239                           
 10240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10241  001DC4  51B7               	movf	dtoa@s& (0+255),w,b
 10242  001DC6  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10243  001DC8  B4D8               	btfsc	status,2,c
 10244  001DCA  D010               	goto	l6809
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10248  001DCC  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
 10249  001DCE  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
 10250  001DD0  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
 10251  001DD2  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
 10252  001DD4  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
 10253  001DD6  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
 10254  001DD8  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
 10255  001DDA  6DB9               	negf	dtoa@n& (0+255),b
 10256  001DDC  0E00               	movlw	0
 10257  001DDE  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
 10258  001DE0  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
 10259  001DE2  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
 10260  001DE4  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
 10261  001DE6  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
 10262  001DE8  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
 10263  001DEA  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
 10264  001DEC                     l6809:
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10268  001DEC  AE4D               	btfss	_prec+1,7,c
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10272  001DEE  924E               	bcf	_flags,1,c
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10276  001DF0  BE4D               	btfsc	_prec+1,7,c
 10277  001DF2  D005               	goto	u7260
 10278  001DF4  504D               	movf	_prec+1,w,c
 10279  001DF6  E108               	bnz	l646
 10280  001DF8  044C               	decf	_prec,w,c
 10281  001DFA  B0D8               	btfsc	status,0,c
 10282  001DFC  D005               	goto	l646
 10283  001DFE                     u7260:
 10284                           
 10285                           ; BSR set to: 0
 10286  001DFE  0E00               	movlw	0
 10287  001E00  6FB4               	movwf	(dtoa@p+1)& (0+255),b
 10288  001E02  0E01               	movlw	1
 10289  001E04  6FB3               	movwf	dtoa@p& (0+255),b
 10290  001E06  D004               	goto	l648
 10291  001E08                     l646:
 10292                           
 10293                           ; BSR set to: 0
 10294  001E08  C04C  F0B3         	movff	_prec,dtoa@p
 10295  001E0C  C04D  F0B4         	movff	_prec+1,dtoa@p+1
 10296  001E10                     l648:
 10297                           
 10298                           ; BSR set to: 0
 10299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10300  001E10  C04A  F0B5         	movff	_width,dtoa@w
 10301  001E14  C04B  F0B6         	movff	_width+1,dtoa@w+1
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10305  001E18  51B7               	movf	dtoa@s& (0+255),w,b
 10306  001E1A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10307  001E1C  A4D8               	btfss	status,2,c
 10308  001E1E  D002               	goto	u7280
 10309                           
 10310                           ; BSR set to: 0
 10311  001E20  A44E               	btfss	_flags,2,c
 10312  001E22  D003               	goto	l6823
 10313  001E24                     u7280:
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10317  001E24  07B5               	decf	dtoa@w& (0+255),f,b
 10318  001E26  A0D8               	btfss	status,0,c
 10319  001E28  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10320  001E2A                     l6823:
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10324  001E2A  0E00               	movlw	0
 10325  001E2C  6FC2               	movwf	(dtoa@i+1)& (0+255),b
 10326  001E2E  0E1F               	movlw	31
 10327  001E30  6FC1               	movwf	dtoa@i& (0+255),b
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10331  001E32  0E00               	movlw	0
 10332  001E34  0102               	movlb	2	; () banked
 10333  001E36  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10334                           
 10335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10336  001E38  D07D               	goto	l6837
 10337  001E3A                     l6827:
 10338                           
 10339                           ; BSR set to: 0
 10340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10341  001E3A  07C1               	decf	dtoa@i& (0+255),f,b
 10342  001E3C  A0D8               	btfss	status,0,c
 10343  001E3E  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10347  001E40  0E80               	movlw	low _dbuf
 10348  001E42  25C1               	addwf	dtoa@i& (0+255),w,b
 10349  001E44  6ED9               	movwf	fsr2l,c
 10350  001E46  0E02               	movlw	high _dbuf
 10351  001E48  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10352  001E4A  6EDA               	movwf	fsr2h,c
 10353  001E4C  C0B9  F080         	movff	dtoa@n,___aomod@dividend
 10354  001E50  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
 10355  001E54  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
 10356  001E58  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
 10357  001E5C  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
 10358  001E60  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
 10359  001E64  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
 10360  001E68  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
 10361  001E6C  0E0A               	movlw	10
 10362  001E6E  6F88               	movwf	___aomod@divisor& (0+255),b
 10363  001E70  0E00               	movlw	0
 10364  001E72  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
 10365  001E74  0E00               	movlw	0
 10366  001E76  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
 10367  001E78  0E00               	movlw	0
 10368  001E7A  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
 10369  001E7C  0E00               	movlw	0
 10370  001E7E  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
 10371  001E80  0E00               	movlw	0
 10372  001E82  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
 10373  001E84  0E00               	movlw	0
 10374  001E86  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
 10375  001E88  0E00               	movlw	0
 10376  001E8A  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
 10377  001E8C  EC1A  F017         	call	___aomod	;wreg free
 10378  001E90  C080  F0A9         	movff	?___aomod,??_dtoa
 10379  001E94  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
 10380  001E98  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
 10381  001E9C  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
 10382  001EA0  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
 10383  001EA4  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
 10384  001EA8  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
 10385  001EAC  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
 10386  001EB0  C0A9  F092         	movff	??_dtoa,abs@a
 10387  001EB4  C0AB  F093         	movff	??_dtoa+2,abs@a+1
 10388  001EB8  EC76  F01E         	call	_abs	;wreg free
 10389  001EBC  0100               	movlb	0	; () banked
 10390  001EBE  5192               	movf	?_abs& (0+255),w,b
 10391  001EC0  0F30               	addlw	48
 10392  001EC2  6EDF               	movwf	indf2,c
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10396  001EC4  07B3               	decf	dtoa@p& (0+255),f,b
 10397  001EC6  A0D8               	btfss	status,0,c
 10398  001EC8  07B4               	decf	(dtoa@p+1)& (0+255),f,b
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10402  001ECA  07B5               	decf	dtoa@w& (0+255),f,b
 10403  001ECC  A0D8               	btfss	status,0,c
 10404  001ECE  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10408  001ED0  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
 10409  001ED4  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
 10410  001ED8  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
 10411  001EDC  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
 10412  001EE0  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
 10413  001EE4  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
 10414  001EE8  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
 10415  001EEC  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
 10416  001EF0  0E0A               	movlw	10
 10417  001EF2  6F88               	movwf	___aodiv@divisor& (0+255),b
 10418  001EF4  0E00               	movlw	0
 10419  001EF6  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
 10420  001EF8  0E00               	movlw	0
 10421  001EFA  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
 10422  001EFC  0E00               	movlw	0
 10423  001EFE  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
 10424  001F00  0E00               	movlw	0
 10425  001F02  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
 10426  001F04  0E00               	movlw	0
 10427  001F06  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
 10428  001F08  0E00               	movlw	0
 10429  001F0A  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
 10430  001F0C  0E00               	movlw	0
 10431  001F0E  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
 10432  001F10  EC33  F015         	call	___aodiv	;wreg free
 10433  001F14  C080  F0B9         	movff	?___aodiv,dtoa@n
 10434  001F18  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
 10435  001F1C  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
 10436  001F20  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
 10437  001F24  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
 10438  001F28  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
 10439  001F2C  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
 10440  001F30  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
 10441  001F34                     l6837:
 10442                           
 10443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10444  001F34  0100               	movlb	0	; () banked
 10445  001F36  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
 10446  001F38  D01F               	goto	u7330
 10447  001F3A  51C2               	movf	(dtoa@i+1)& (0+255),w,b
 10448  001F3C  E103               	bnz	u7290
 10449  001F3E  05C1               	decf	dtoa@i& (0+255),w,b
 10450  001F40  A0D8               	btfss	status,0,c
 10451  001F42  D01A               	goto	u7330
 10452  001F44                     u7290:
 10453                           
 10454                           ; BSR set to: 0
 10455  001F44  51B9               	movf	dtoa@n& (0+255),w,b
 10456  001F46  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
 10457  001F48  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
 10458  001F4A  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
 10459  001F4C  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
 10460  001F4E  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
 10461  001F50  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
 10462  001F52  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
 10463  001F54  A4D8               	btfss	status,2,c
 10464  001F56  D771               	goto	l6827
 10465                           
 10466                           ; BSR set to: 0
 10467  001F58  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
 10468  001F5A  D005               	goto	u7310
 10469  001F5C  51B4               	movf	(dtoa@p+1)& (0+255),w,b
 10470  001F5E  E102               	bnz	u7311
 10471  001F60  05B3               	decf	dtoa@p& (0+255),w,b
 10472  001F62  B0D8               	btfsc	status,0,c
 10473  001F64                     u7311:
 10474  001F64  D76A               	goto	l6827
 10475  001F66                     u7310:
 10476                           
 10477                           ; BSR set to: 0
 10478  001F66  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
 10479  001F68  D007               	goto	u7330
 10480  001F6A  51B6               	movf	(dtoa@w+1)& (0+255),w,b
 10481  001F6C  E103               	bnz	u7320
 10482  001F6E  05B5               	decf	dtoa@w& (0+255),w,b
 10483  001F70  A0D8               	btfss	status,0,c
 10484  001F72  D002               	goto	u7330
 10485  001F74                     u7320:
 10486                           
 10487                           ; BSR set to: 0
 10488  001F74  B24E               	btfsc	_flags,1,c
 10489  001F76  D761               	goto	l6827
 10490  001F78                     u7330:
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10494  001F78  51B7               	movf	dtoa@s& (0+255),w,b
 10495  001F7A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10496  001F7C  A4D8               	btfss	status,2,c
 10497  001F7E  D002               	goto	u7350
 10498                           
 10499                           ; BSR set to: 0
 10500  001F80  A44E               	btfss	_flags,2,c
 10501  001F82  D017               	goto	l6861
 10502  001F84                     u7350:
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10506  001F84  07C1               	decf	dtoa@i& (0+255),f,b
 10507  001F86  A0D8               	btfss	status,0,c
 10508  001F88  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10512  001F8A  51B7               	movf	dtoa@s& (0+255),w,b
 10513  001F8C  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10514  001F8E  A4D8               	btfss	status,2,c
 10515  001F90  D004               	goto	l6857
 10516                           
 10517                           ; BSR set to: 0
 10518  001F92  0E00               	movlw	0
 10519  001F94  6FB2               	movwf	(_dtoa$1232+1)& (0+255),b
 10520  001F96  0E2B               	movlw	43
 10521  001F98  D003               	goto	L5
 10522  001F9A                     l6857:
 10523                           
 10524                           ; BSR set to: 0
 10525  001F9A  0E00               	movlw	0
 10526  001F9C  6FB2               	movwf	(_dtoa$1232+1)& (0+255),b
 10527  001F9E  0E2D               	movlw	45
 10528  001FA0                     L5:
 10529  001FA0  6FB1               	movwf	_dtoa$1232& (0+255),b
 10530                           
 10531                           ; BSR set to: 0
 10532  001FA2  0E80               	movlw	low _dbuf
 10533  001FA4  25C1               	addwf	dtoa@i& (0+255),w,b
 10534  001FA6  6ED9               	movwf	fsr2l,c
 10535  001FA8  0E02               	movlw	high _dbuf
 10536  001FAA  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10537  001FAC  6EDA               	movwf	fsr2h,c
 10538  001FAE  C0B1  FFDF         	movff	_dtoa$1232,indf2
 10539  001FB2                     l6861:
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10543  001FB2  C09F  F094         	movff	dtoa@fp,pad@fp
 10544  001FB6  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
 10545  001FBA  0E80               	movlw	low _dbuf
 10546  001FBC  25C1               	addwf	dtoa@i& (0+255),w,b
 10547  001FBE  6F96               	movwf	pad@buf& (0+255),b
 10548  001FC0  0E02               	movlw	high _dbuf
 10549  001FC2  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10550  001FC4  6F97               	movwf	(pad@buf+1)& (0+255),b
 10551  001FC6  C0B5  F098         	movff	dtoa@w,pad@p
 10552  001FCA  C0B6  F099         	movff	dtoa@w+1,pad@p+1
 10553  001FCE  EC29  F01B         	call	_pad	;wreg free
 10554  001FD2  C094  F09F         	movff	?_pad,?_dtoa
 10555  001FD6  C095  F0A0         	movff	?_pad+1,?_dtoa+1
 10556  001FDA  0012               	return		;funcret
 10557  001FDC                     __end_of_dtoa:
 10558                           	opt callstack 0
 10559                           
 10560 ;; *************** function _pad *****************
 10561 ;; Defined at:
 10562 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
 10565 ;;		 -> NULL(0), 
 10566 ;;  buf             2   22[BANK0 ] PTR unsigned char 
 10567 ;;		 -> dbuf(32), 
 10568 ;;  p               2   24[BANK0 ] int 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  w               2   29[BANK0 ] int 
 10571 ;;  i               2   27[BANK0 ] int 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  2   20[BANK0 ] int 
 10574 ;; Registers used:
 10575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10581 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10582 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10584 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10585 ;;Total ram usage:       11 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:    9
 10588 ;; This function calls:
 10589 ;;		_fputc
 10590 ;;		_fputs
 10591 ;;		_strlen
 10592 ;; This function is called by:
 10593 ;;		_dtoa
 10594 ;;		_xtoa
 10595 ;; This function uses a non-reentrant model
 10596 ;;
 10597                           
 10598                           	psect	text29
 10599  003652                     __ptext29:
 10600                           	opt callstack 0
 10601  003652                     _pad:
 10602                           	opt callstack 16
 10603                           
 10604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10605                           
 10606                           ;incstack = 0
 10607  003652  A04E               	btfss	_flags,0,c
 10608  003654  D00A               	goto	l6665
 10609                           
 10610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10611  003656  C096  F08D         	movff	pad@buf,fputs@s
 10612  00365A  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10613  00365E  C094  F08F         	movff	pad@fp,fputs@fp
 10614  003662  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10615  003666  EC3D  F01E         	call	_fputs	;wreg free
 10616  00366A                     l6665:
 10617                           
 10618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10619  00366A  0100               	movlb	0	; () banked
 10620  00366C  BF99               	btfsc	(pad@p+1)& (0+255),7,b
 10621  00366E  D005               	goto	l6669
 10622                           
 10623                           ; BSR set to: 0
 10624  003670  C098  F09D         	movff	pad@p,pad@w
 10625  003674  C099  F09E         	movff	pad@p+1,pad@w+1
 10626  003678  D004               	goto	l635
 10627  00367A                     l6669:
 10628                           
 10629                           ; BSR set to: 0
 10630  00367A  0E00               	movlw	0
 10631  00367C  6F9E               	movwf	(pad@w+1)& (0+255),b
 10632  00367E  0E00               	movlw	0
 10633  003680  6F9D               	movwf	pad@w& (0+255),b
 10634  003682                     l635:
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10638  003682  0E00               	movlw	0
 10639  003684  6F9C               	movwf	(pad@i+1)& (0+255),b
 10640  003686  0E00               	movlw	0
 10641  003688  6F9B               	movwf	pad@i& (0+255),b
 10642                           
 10643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10644  00368A  D00D               	goto	l6675
 10645  00368C                     l6671:
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10649  00368C  0E00               	movlw	0
 10650  00368E  6F85               	movwf	(fputc@c+1)& (0+255),b
 10651  003690  0E20               	movlw	32
 10652  003692  6F84               	movwf	fputc@c& (0+255),b
 10653  003694  C094  F086         	movff	pad@fp,fputc@fp
 10654  003698  C095  F087         	movff	pad@fp+1,fputc@fp+1
 10655  00369C  ECBE  F01C         	call	_fputc	;wreg free
 10656                           
 10657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10658  0036A0  0100               	movlb	0	; () banked
 10659  0036A2  4B9B               	infsnz	pad@i& (0+255),f,b
 10660  0036A4  2B9C               	incf	(pad@i+1)& (0+255),f,b
 10661  0036A6                     l6675:
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10665  0036A6  519D               	movf	pad@w& (0+255),w,b
 10666  0036A8  5D9B               	subwf	pad@i& (0+255),w,b
 10667  0036AA  519C               	movf	(pad@i+1)& (0+255),w,b
 10668  0036AC  0A80               	xorlw	128
 10669  0036AE  6F9A               	movwf	??_pad& (0+255),b
 10670  0036B0  519E               	movf	(pad@w+1)& (0+255),w,b
 10671  0036B2  0A80               	xorlw	128
 10672  0036B4  599A               	subwfb	??_pad& (0+255),w,b
 10673  0036B6  A0D8               	btfss	status,0,c
 10674  0036B8  D7E9               	goto	l6671
 10675                           
 10676                           ; BSR set to: 0
 10677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10678  0036BA  B04E               	btfsc	_flags,0,c
 10679  0036BC  D00A               	goto	l6679
 10680                           
 10681                           ; BSR set to: 0
 10682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10683  0036BE  C096  F08D         	movff	pad@buf,fputs@s
 10684  0036C2  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10685  0036C6  C094  F08F         	movff	pad@fp,fputs@fp
 10686  0036CA  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10687  0036CE  EC3D  F01E         	call	_fputs	;wreg free
 10688  0036D2                     l6679:
 10689                           
 10690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10691  0036D2  C096  F080         	movff	pad@buf,strlen@s
 10692  0036D6  C097  F081         	movff	pad@buf+1,strlen@s+1
 10693  0036DA  ECF4  F01E         	call	_strlen	;wreg free
 10694  0036DE  0100               	movlb	0	; () banked
 10695  0036E0  519D               	movf	pad@w& (0+255),w,b
 10696  0036E2  2580               	addwf	?_strlen& (0+255),w,b
 10697  0036E4  6F94               	movwf	?_pad& (0+255),b
 10698  0036E6  519E               	movf	(pad@w+1)& (0+255),w,b
 10699  0036E8  2181               	addwfc	(?_strlen+1)& (0+255),w,b
 10700  0036EA  6F95               	movwf	(?_pad+1)& (0+255),b
 10701                           
 10702                           ; BSR set to: 0
 10703  0036EC  0012               	return		;funcret
 10704  0036EE                     __end_of_pad:
 10705                           	opt callstack 0
 10706                           
 10707 ;; *************** function _strlen *****************
 10708 ;; Defined at:
 10709 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 10712 ;;		 -> dbuf(32), 
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 10715 ;;		 -> dbuf(32), 
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  2    0[BANK0 ] unsigned int 
 10718 ;; Registers used:
 10719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10726 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10728 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10729 ;;Total ram usage:        4 bytes
 10730 ;; Hardware stack levels used:    1
 10731 ;; Hardware stack levels required when called:    3
 10732 ;; This function calls:
 10733 ;;		Nothing
 10734 ;; This function is called by:
 10735 ;;		_pad
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739                           	psect	text30
 10740  003DE8                     __ptext30:
 10741                           	opt callstack 0
 10742  003DE8                     _strlen:
 10743                           	opt callstack 21
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;incstack = 0
 10747  003DE8  C080  F082         	movff	strlen@s,strlen@a
 10748  003DEC  C081  F083         	movff	strlen@s+1,strlen@a+1
 10749  003DF0  D003               	goto	l6647
 10750  003DF2                     l6645:
 10751  003DF2  0100               	movlb	0	; () banked
 10752  003DF4  4B80               	infsnz	strlen@s& (0+255),f,b
 10753  003DF6  2B81               	incf	(strlen@s+1)& (0+255),f,b
 10754  003DF8                     l6647:
 10755  003DF8  C080  FFD9         	movff	strlen@s,fsr2l
 10756  003DFC  C081  FFDA         	movff	strlen@s+1,fsr2h
 10757  003E00  50DF               	movf	indf2,w,c
 10758  003E02  A4D8               	btfss	status,2,c
 10759  003E04  D7F6               	goto	l6645
 10760  003E06  0100               	movlb	0	; () banked
 10761  003E08  5182               	movf	strlen@a& (0+255),w,b
 10762  003E0A  5D80               	subwf	strlen@s& (0+255),w,b
 10763  003E0C  6F80               	movwf	?_strlen& (0+255),b
 10764  003E0E  5183               	movf	(strlen@a+1)& (0+255),w,b
 10765  003E10  5981               	subwfb	(strlen@s+1)& (0+255),w,b
 10766  003E12  6F81               	movwf	(?_strlen+1)& (0+255),b
 10767                           
 10768                           ; BSR set to: 0
 10769  003E14  0012               	return		;funcret
 10770  003E16                     __end_of_strlen:
 10771                           	opt callstack 0
 10772                           
 10773 ;; *************** function _fputs *****************
 10774 ;; Defined at:
 10775 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 10778 ;;		 -> dbuf(32), 
 10779 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 10780 ;;		 -> NULL(0), 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;  i               2   18[BANK0 ] int 
 10783 ;;  c               1   17[BANK0 ] unsigned char 
 10784 ;; Return value:  Size  Location     Type
 10785 ;;                  2   13[BANK0 ] int 
 10786 ;; Registers used:
 10787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10788 ;; Tracked objects:
 10789 ;;		On entry : 0/0
 10790 ;;		On exit  : 0/0
 10791 ;;		Unchanged: 0/0
 10792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10794 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10796 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10797 ;;Total ram usage:        7 bytes
 10798 ;; Hardware stack levels used:    1
 10799 ;; Hardware stack levels required when called:    8
 10800 ;; This function calls:
 10801 ;;		_fputc
 10802 ;; This function is called by:
 10803 ;;		_pad
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807                           	psect	text31
 10808  003C7A                     __ptext31:
 10809                           	opt callstack 0
 10810  003C7A                     _fputs:
 10811                           	opt callstack 16
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;incstack = 0
 10815  003C7A  0E00               	movlw	0
 10816  003C7C  0100               	movlb	0	; () banked
 10817  003C7E  6F93               	movwf	(fputs@i+1)& (0+255),b
 10818  003C80  0E00               	movlw	0
 10819  003C82  6F92               	movwf	fputs@i& (0+255),b
 10820  003C84  D00C               	goto	l6641
 10821  003C86                     l6637:
 10822                           
 10823                           ; BSR set to: 0
 10824  003C86  C091  F084         	movff	fputs@c,fputc@c
 10825  003C8A  6B85               	clrf	(fputc@c+1)& (0+255),b
 10826  003C8C  C08F  F086         	movff	fputs@fp,fputc@fp
 10827  003C90  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10828  003C94  ECBE  F01C         	call	_fputc	;wreg free
 10829  003C98  0100               	movlb	0	; () banked
 10830  003C9A  4B92               	infsnz	fputs@i& (0+255),f,b
 10831  003C9C  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10832  003C9E                     l6641:
 10833                           
 10834                           ; BSR set to: 0
 10835  003C9E  5192               	movf	fputs@i& (0+255),w,b
 10836  003CA0  258D               	addwf	fputs@s& (0+255),w,b
 10837  003CA2  6ED9               	movwf	fsr2l,c
 10838  003CA4  5193               	movf	(fputs@i+1)& (0+255),w,b
 10839  003CA6  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10840  003CA8  6EDA               	movwf	fsr2h,c
 10841  003CAA  50DF               	movf	indf2,w,c
 10842  003CAC  6F91               	movwf	fputs@c& (0+255),b
 10843  003CAE  5191               	movf	fputs@c& (0+255),w,b
 10844  003CB0  B4D8               	btfsc	status,2,c
 10845  003CB2  0012               	return	
 10846  003CB4  D7E8               	goto	l6637
 10847  003CB6                     __end_of_fputs:
 10848                           	opt callstack 0
 10849                           
 10850 ;; *************** function _fputc *****************
 10851 ;; Defined at:
 10852 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  c               2    4[BANK0 ] int 
 10855 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10856 ;;		 -> NULL(0), 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;		None
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  2    4[BANK0 ] int 
 10861 ;; Registers used:
 10862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10868 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10870 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10871 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10872 ;;Total ram usage:        9 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; Hardware stack levels required when called:    7
 10875 ;; This function calls:
 10876 ;;		_putch
 10877 ;; This function is called by:
 10878 ;;		_pad
 10879 ;;		_vfpfcnvrt
 10880 ;;		_fputs
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           	psect	text32
 10885  00397C                     __ptext32:
 10886                           	opt callstack 0
 10887  00397C                     _fputc:
 10888                           	opt callstack 16
 10889                           
 10890                           ; BSR set to: 0
 10891                           ;incstack = 0
 10892  00397C  0100               	movlb	0	; () banked
 10893  00397E  5186               	movf	fputc@fp& (0+255),w,b
 10894  003980  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10895  003982  B4D8               	btfsc	status,2,c
 10896  003984  D004               	goto	u6860
 10897                           
 10898                           ; BSR set to: 0
 10899  003986  5186               	movf	fputc@fp& (0+255),w,b
 10900  003988  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10901  00398A  A4D8               	btfss	status,2,c
 10902  00398C  D004               	goto	l6627
 10903  00398E                     u6860:
 10904                           
 10905                           ; BSR set to: 0
 10906  00398E  5184               	movf	fputc@c& (0+255),w,b
 10907  003990  EC95  F01F         	call	_putch
 10908  003994  0012               	return	
 10909  003996                     l6627:
 10910                           
 10911                           ; BSR set to: 0
 10912  003996  EE20 F004          	lfsr	2,4
 10913  00399A  5186               	movf	fputc@fp& (0+255),w,b
 10914  00399C  26D9               	addwf	fsr2l,f,c
 10915  00399E  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10916  0039A0  22DA               	addwfc	fsr2h,f,c
 10917  0039A2  50DE               	movf	postinc2,w,c
 10918  0039A4  10DE               	iorwf	postinc2,w,c
 10919  0039A6  B4D8               	btfsc	status,2,c
 10920  0039A8  D016               	goto	u6880
 10921                           
 10922                           ; BSR set to: 0
 10923  0039AA  EE20 F004          	lfsr	2,4
 10924  0039AE  5186               	movf	fputc@fp& (0+255),w,b
 10925  0039B0  26D9               	addwf	fsr2l,f,c
 10926  0039B2  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10927  0039B4  22DA               	addwfc	fsr2h,f,c
 10928  0039B6  EE10 F002          	lfsr	1,2
 10929  0039BA  5186               	movf	fputc@fp& (0+255),w,b
 10930  0039BC  26E1               	addwf	fsr1l,f,c
 10931  0039BE  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10932  0039C0  22E2               	addwfc	fsr1h,f,c
 10933  0039C2  50DE               	movf	postinc2,w,c
 10934  0039C4  5CE6               	subwf	postinc1,w,c
 10935  0039C6  50E6               	movf	postinc1,w,c
 10936  0039C8  0A80               	xorlw	128
 10937  0039CA  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10938  0039CC  50DE               	movf	postinc2,w,c
 10939  0039CE  0A80               	xorlw	128
 10940  0039D0  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10941  0039D2  B0D8               	btfsc	status,0,c
 10942  0039D4  0012               	return	
 10943  0039D6                     u6880:
 10944                           
 10945                           ; BSR set to: 0
 10946  0039D6  EE20 F002          	lfsr	2,2
 10947  0039DA  5186               	movf	fputc@fp& (0+255),w,b
 10948  0039DC  26D9               	addwf	fsr2l,f,c
 10949  0039DE  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10950  0039E0  22DA               	addwfc	fsr2h,f,c
 10951  0039E2  2ADE               	incf	postinc2,f,c
 10952  0039E4  0E00               	movlw	0
 10953  0039E6  22DD               	addwfc	postdec2,f,c
 10954  0039E8  0012               	return		;funcret
 10955  0039EA                     __end_of_fputc:
 10956                           	opt callstack 0
 10957                           
 10958 ;; *************** function _putch *****************
 10959 ;; Defined at:
 10960 ;;		line 102 in file "lcd.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  data            1    wreg     unsigned char 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;  data            1    3[BANK0 ] unsigned char 
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1    wreg      void 
 10967 ;; Registers used:
 10968 ;;		wreg, status,2, status,0, cstack
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10977 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10978 ;;Total ram usage:        1 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:    6
 10981 ;; This function calls:
 10982 ;;		_send_byte
 10983 ;; This function is called by:
 10984 ;;		_fputc
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text33
 10989  003F2A                     __ptext33:
 10990                           	opt callstack 0
 10991  003F2A                     _putch:
 10992                           	opt callstack 16
 10993                           
 10994                           ;incstack = 0
 10995                           ;putch@data stored from wreg
 10996  003F2A  0100               	movlb	0	; () banked
 10997  003F2C  6F83               	movwf	putch@data& (0+255),b
 10998                           
 10999                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 11000  003F2E  848C               	bsf	3980,2,c	;volatile
 11001                           
 11002                           ;lcd.c: 104:     send_byte((unsigned char)data);
 11003  003F30  0100               	movlb	0	; () banked
 11004  003F32  5183               	movf	putch@data& (0+255),w,b
 11005  003F34  EC7F  F01F         	call	_send_byte
 11006  003F38  0012               	return		;funcret
 11007  003F3A                     __end_of_putch:
 11008                           	opt callstack 0
 11009                           
 11010 ;; *************** function _abs *****************
 11011 ;; Defined at:
 11012 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  a               2   18[BANK0 ] int 
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;		None
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  2   18[BANK0 ] int 
 11019 ;; Registers used:
 11020 ;;		wreg, status,2, status,0
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11026 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11029 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;Total ram usage:        4 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:    3
 11033 ;; This function calls:
 11034 ;;		Nothing
 11035 ;; This function is called by:
 11036 ;;		_ultrasonic_main
 11037 ;;		_dtoa
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text34
 11042  003CEC                     __ptext34:
 11043                           	opt callstack 0
 11044  003CEC                     _abs:
 11045                           	opt callstack 22
 11046                           
 11047                           ;incstack = 0
 11048  003CEC  0100               	movlb	0	; () banked
 11049  003CEE  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 11050  003CF0  D005               	goto	u6930
 11051  003CF2  5193               	movf	(abs@a+1)& (0+255),w,b
 11052  003CF4  E110               	bnz	l1413
 11053  003CF6  0592               	decf	abs@a& (0+255),w,b
 11054  003CF8  B0D8               	btfsc	status,0,c
 11055  003CFA  D00D               	goto	l1413
 11056  003CFC                     u6930:
 11057                           
 11058                           ; BSR set to: 0
 11059  003CFC  C092  F094         	movff	abs@a,??_abs
 11060  003D00  C093  F095         	movff	abs@a+1,??_abs+1
 11061  003D04  1F94               	comf	??_abs& (0+255),f,b
 11062  003D06  1F95               	comf	(??_abs+1)& (0+255),f,b
 11063  003D08  4B94               	infsnz	??_abs& (0+255),f,b
 11064  003D0A  2B95               	incf	(??_abs+1)& (0+255),f,b
 11065  003D0C  C094  F092         	movff	??_abs,?_abs
 11066  003D10  C095  F093         	movff	??_abs+1,?_abs+1
 11067  003D14  0012               	return	
 11068  003D16                     l1413:
 11069                           
 11070                           ; BSR set to: 0
 11071  003D16  C092  F092         	movff	abs@a,?_abs
 11072  003D1A  C093  F093         	movff	abs@a+1,?_abs+1
 11073                           
 11074                           ; BSR set to: 0
 11075  003D1E  0012               	return		;funcret
 11076  003D20                     __end_of_abs:
 11077                           	opt callstack 0
 11078                           
 11079 ;; *************** function ___aomod *****************
 11080 ;; Defined at:
 11081 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;  dividend        8    0[BANK0 ] long long 
 11084 ;;  divisor         8    8[BANK0 ] long long 
 11085 ;; Auto vars:     Size  Location     Type
 11086 ;;  sign            1   17[BANK0 ] unsigned char 
 11087 ;;  counter         1   16[BANK0 ] unsigned char 
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  8    0[BANK0 ] long long 
 11090 ;; Registers used:
 11091 ;;		wreg, status,2, status,0
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/0
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11097 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11100 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;Total ram usage:       18 bytes
 11102 ;; Hardware stack levels used:    1
 11103 ;; Hardware stack levels required when called:    3
 11104 ;; This function calls:
 11105 ;;		Nothing
 11106 ;; This function is called by:
 11107 ;;		_dtoa
 11108 ;; This function uses a non-reentrant model
 11109 ;;
 11110                           
 11111                           	psect	text35
 11112  002E34                     __ptext35:
 11113                           	opt callstack 0
 11114  002E34                     ___aomod:
 11115                           	opt callstack 22
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;incstack = 0
 11119  002E34  0E00               	movlw	0
 11120  002E36  0100               	movlb	0	; () banked
 11121  002E38  6F91               	movwf	___aomod@sign& (0+255),b
 11122                           
 11123                           ; BSR set to: 0
 11124  002E3A  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 11125  002E3C  D012               	goto	l6763
 11126                           
 11127                           ; BSR set to: 0
 11128  002E3E  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11129  002E40  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11130  002E42  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11131  002E44  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11132  002E46  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11133  002E48  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11134  002E4A  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11135  002E4C  6D80               	negf	___aomod@dividend& (0+255),b
 11136  002E4E  0E00               	movlw	0
 11137  002E50  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11138  002E52  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11139  002E54  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11140  002E56  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11141  002E58  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11142  002E5A  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11143  002E5C  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11144                           
 11145                           ; BSR set to: 0
 11146  002E5E  0E01               	movlw	1
 11147  002E60  6F91               	movwf	___aomod@sign& (0+255),b
 11148  002E62                     l6763:
 11149                           
 11150                           ; BSR set to: 0
 11151  002E62  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11152  002E64  D010               	goto	l6767
 11153                           
 11154                           ; BSR set to: 0
 11155  002E66  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 11156  002E68  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 11157  002E6A  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 11158  002E6C  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 11159  002E6E  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 11160  002E70  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 11161  002E72  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 11162  002E74  6D88               	negf	___aomod@divisor& (0+255),b
 11163  002E76  0E00               	movlw	0
 11164  002E78  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 11165  002E7A  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 11166  002E7C  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 11167  002E7E  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 11168  002E80  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 11169  002E82  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 11170  002E84  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 11171  002E86                     l6767:
 11172                           
 11173                           ; BSR set to: 0
 11174  002E86  5188               	movf	___aomod@divisor& (0+255),w,b
 11175  002E88  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 11176  002E8A  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 11177  002E8C  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 11178  002E8E  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 11179  002E90  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 11180  002E92  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 11181  002E94  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 11182  002E96  B4D8               	btfsc	status,2,c
 11183  002E98  D03C               	goto	l6783
 11184                           
 11185                           ; BSR set to: 0
 11186  002E9A  0E01               	movlw	1
 11187  002E9C  6F90               	movwf	___aomod@counter& (0+255),b
 11188  002E9E  D00A               	goto	l6773
 11189  002EA0                     l6771:
 11190                           
 11191                           ; BSR set to: 0
 11192  002EA0  90D8               	bcf	status,0,c
 11193  002EA2  3788               	rlcf	___aomod@divisor& (0+255),f,b
 11194  002EA4  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 11195  002EA6  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 11196  002EA8  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 11197  002EAA  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 11198  002EAC  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 11199  002EAE  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 11200  002EB0  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 11201  002EB2  2B90               	incf	___aomod@counter& (0+255),f,b
 11202  002EB4                     l6773:
 11203                           
 11204                           ; BSR set to: 0
 11205  002EB4  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11206  002EB6  D7F4               	goto	l6771
 11207  002EB8                     u7170:
 11208                           
 11209                           ; BSR set to: 0
 11210  002EB8  5188               	movf	___aomod@divisor& (0+255),w,b
 11211  002EBA  5D80               	subwf	___aomod@dividend& (0+255),w,b
 11212  002EBC  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11213  002EBE  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 11214  002EC0  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11215  002EC2  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 11216  002EC4  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11217  002EC6  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 11218  002EC8  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11219  002ECA  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 11220  002ECC  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11221  002ECE  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 11222  002ED0  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11223  002ED2  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 11224  002ED4  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11225  002ED6  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 11226  002ED8  A0D8               	btfss	status,0,c
 11227  002EDA  D010               	goto	l6779
 11228                           
 11229                           ; BSR set to: 0
 11230  002EDC  5188               	movf	___aomod@divisor& (0+255),w,b
 11231  002EDE  5F80               	subwf	___aomod@dividend& (0+255),f,b
 11232  002EE0  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11233  002EE2  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 11234  002EE4  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11235  002EE6  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 11236  002EE8  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11237  002EEA  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 11238  002EEC  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11239  002EEE  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 11240  002EF0  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11241  002EF2  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 11242  002EF4  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11243  002EF6  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 11244  002EF8  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11245  002EFA  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 11246  002EFC                     l6779:
 11247                           
 11248                           ; BSR set to: 0
 11249  002EFC  90D8               	bcf	status,0,c
 11250  002EFE  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 11251  002F00  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 11252  002F02  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 11253  002F04  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 11254  002F06  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 11255  002F08  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 11256  002F0A  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 11257  002F0C  3388               	rrcf	___aomod@divisor& (0+255),f,b
 11258                           
 11259                           ; BSR set to: 0
 11260  002F0E  2F90               	decfsz	___aomod@counter& (0+255),f,b
 11261  002F10  D7D3               	goto	u7170
 11262  002F12                     l6783:
 11263                           
 11264                           ; BSR set to: 0
 11265  002F12  5191               	movf	___aomod@sign& (0+255),w,b
 11266  002F14  B4D8               	btfsc	status,2,c
 11267  002F16  D010               	goto	l6787
 11268                           
 11269                           ; BSR set to: 0
 11270  002F18  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11271  002F1A  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11272  002F1C  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11273  002F1E  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11274  002F20  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11275  002F22  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11276  002F24  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11277  002F26  6D80               	negf	___aomod@dividend& (0+255),b
 11278  002F28  0E00               	movlw	0
 11279  002F2A  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11280  002F2C  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11281  002F2E  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11282  002F30  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11283  002F32  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11284  002F34  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11285  002F36  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11286  002F38                     l6787:
 11287                           
 11288                           ; BSR set to: 0
 11289  002F38  C080  F080         	movff	___aomod@dividend,?___aomod
 11290  002F3C  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 11291  002F40  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 11292  002F44  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 11293  002F48  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 11294  002F4C  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 11295  002F50  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 11296  002F54  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 11297                           
 11298                           ; BSR set to: 0
 11299  002F58  0012               	return		;funcret
 11300  002F5A                     __end_of___aomod:
 11301                           	opt callstack 0
 11302                           
 11303 ;; *************** function ___aodiv *****************
 11304 ;; Defined at:
 11305 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  dividend        8    0[BANK0 ] long long 
 11308 ;;  divisor         8    8[BANK0 ] long long 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  quotient        8   18[BANK0 ] long long 
 11311 ;;  sign            1   17[BANK0 ] unsigned char 
 11312 ;;  counter         1   16[BANK0 ] unsigned char 
 11313 ;; Return value:  Size  Location     Type
 11314 ;;                  8    0[BANK0 ] long long 
 11315 ;; Registers used:
 11316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11317 ;; Tracked objects:
 11318 ;;		On entry : 0/0
 11319 ;;		On exit  : 0/0
 11320 ;;		Unchanged: 0/0
 11321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11322 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11323 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11325 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11326 ;;Total ram usage:       26 bytes
 11327 ;; Hardware stack levels used:    1
 11328 ;; Hardware stack levels required when called:    3
 11329 ;; This function calls:
 11330 ;;		Nothing
 11331 ;; This function is called by:
 11332 ;;		_dtoa
 11333 ;; This function uses a non-reentrant model
 11334 ;;
 11335                           
 11336                           	psect	text36
 11337  002A66                     __ptext36:
 11338                           	opt callstack 0
 11339  002A66                     ___aodiv:
 11340                           	opt callstack 22
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;incstack = 0
 11344  002A66  0E00               	movlw	0
 11345  002A68  0100               	movlb	0	; () banked
 11346  002A6A  6F91               	movwf	___aodiv@sign& (0+255),b
 11347                           
 11348                           ; BSR set to: 0
 11349  002A6C  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11350  002A6E  D012               	goto	l6719
 11351                           
 11352                           ; BSR set to: 0
 11353  002A70  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 11354  002A72  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 11355  002A74  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 11356  002A76  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 11357  002A78  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 11358  002A7A  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 11359  002A7C  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 11360  002A7E  6D88               	negf	___aodiv@divisor& (0+255),b
 11361  002A80  0E00               	movlw	0
 11362  002A82  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 11363  002A84  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 11364  002A86  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 11365  002A88  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 11366  002A8A  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 11367  002A8C  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 11368  002A8E  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 11369                           
 11370                           ; BSR set to: 0
 11371  002A90  0E01               	movlw	1
 11372  002A92  6F91               	movwf	___aodiv@sign& (0+255),b
 11373  002A94                     l6719:
 11374                           
 11375                           ; BSR set to: 0
 11376  002A94  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 11377  002A96  D012               	goto	l6725
 11378                           
 11379                           ; BSR set to: 0
 11380  002A98  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 11381  002A9A  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 11382  002A9C  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 11383  002A9E  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 11384  002AA0  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 11385  002AA2  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 11386  002AA4  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 11387  002AA6  6D80               	negf	___aodiv@dividend& (0+255),b
 11388  002AA8  0E00               	movlw	0
 11389  002AAA  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 11390  002AAC  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 11391  002AAE  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 11392  002AB0  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 11393  002AB2  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 11394  002AB4  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 11395  002AB6  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 11396                           
 11397                           ; BSR set to: 0
 11398  002AB8  0E01               	movlw	1
 11399  002ABA  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 11400  002ABC                     l6725:
 11401                           
 11402                           ; BSR set to: 0
 11403  002ABC  EE20  F092         	lfsr	2,___aodiv@quotient
 11404  002AC0  0E07               	movlw	7
 11405  002AC2                     u7091:
 11406  002AC2  6ADE               	clrf	postinc2,c
 11407  002AC4  06E8               	decf	wreg,f,c
 11408  002AC6  E2FD               	bc	u7091
 11409                           
 11410                           ; BSR set to: 0
 11411  002AC8  5188               	movf	___aodiv@divisor& (0+255),w,b
 11412  002ACA  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 11413  002ACC  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 11414  002ACE  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 11415  002AD0  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 11416  002AD2  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 11417  002AD4  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 11418  002AD6  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 11419  002AD8  B4D8               	btfsc	status,2,c
 11420  002ADA  D046               	goto	l6747
 11421                           
 11422                           ; BSR set to: 0
 11423  002ADC  0E01               	movlw	1
 11424  002ADE  6F90               	movwf	___aodiv@counter& (0+255),b
 11425  002AE0  D00A               	goto	l6733
 11426  002AE2                     l6731:
 11427                           
 11428                           ; BSR set to: 0
 11429  002AE2  90D8               	bcf	status,0,c
 11430  002AE4  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 11431  002AE6  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 11432  002AE8  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 11433  002AEA  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 11434  002AEC  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 11435  002AEE  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 11436  002AF0  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 11437  002AF2  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 11438  002AF4  2B90               	incf	___aodiv@counter& (0+255),f,b
 11439  002AF6                     l6733:
 11440                           
 11441                           ; BSR set to: 0
 11442  002AF6  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11443  002AF8  D7F4               	goto	l6731
 11444  002AFA                     u7110:
 11445                           
 11446                           ; BSR set to: 0
 11447  002AFA  90D8               	bcf	status,0,c
 11448  002AFC  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 11449  002AFE  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 11450  002B00  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 11451  002B02  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 11452  002B04  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 11453  002B06  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 11454  002B08  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 11455  002B0A  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 11456                           
 11457                           ; BSR set to: 0
 11458  002B0C  5188               	movf	___aodiv@divisor& (0+255),w,b
 11459  002B0E  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 11460  002B10  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11461  002B12  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 11462  002B14  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11463  002B16  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 11464  002B18  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11465  002B1A  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 11466  002B1C  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11467  002B1E  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 11468  002B20  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11469  002B22  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 11470  002B24  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11471  002B26  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 11472  002B28  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11473  002B2A  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 11474  002B2C  A0D8               	btfss	status,0,c
 11475  002B2E  D011               	goto	l6743
 11476                           
 11477                           ; BSR set to: 0
 11478  002B30  5188               	movf	___aodiv@divisor& (0+255),w,b
 11479  002B32  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 11480  002B34  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11481  002B36  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 11482  002B38  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11483  002B3A  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 11484  002B3C  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11485  002B3E  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 11486  002B40  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11487  002B42  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 11488  002B44  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11489  002B46  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 11490  002B48  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11491  002B4A  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 11492  002B4C  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11493  002B4E  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 11494                           
 11495                           ; BSR set to: 0
 11496  002B50  8192               	bsf	___aodiv@quotient& (0+255),0,b
 11497  002B52                     l6743:
 11498                           
 11499                           ; BSR set to: 0
 11500  002B52  90D8               	bcf	status,0,c
 11501  002B54  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 11502  002B56  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 11503  002B58  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 11504  002B5A  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 11505  002B5C  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 11506  002B5E  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 11507  002B60  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 11508  002B62  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 11509                           
 11510                           ; BSR set to: 0
 11511  002B64  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 11512  002B66  D7C9               	goto	u7110
 11513  002B68                     l6747:
 11514                           
 11515                           ; BSR set to: 0
 11516  002B68  5191               	movf	___aodiv@sign& (0+255),w,b
 11517  002B6A  B4D8               	btfsc	status,2,c
 11518  002B6C  D010               	goto	l6751
 11519                           
 11520                           ; BSR set to: 0
 11521  002B6E  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 11522  002B70  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 11523  002B72  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 11524  002B74  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 11525  002B76  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 11526  002B78  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 11527  002B7A  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 11528  002B7C  6D92               	negf	___aodiv@quotient& (0+255),b
 11529  002B7E  0E00               	movlw	0
 11530  002B80  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 11531  002B82  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 11532  002B84  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 11533  002B86  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 11534  002B88  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 11535  002B8A  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 11536  002B8C  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 11537  002B8E                     l6751:
 11538                           
 11539                           ; BSR set to: 0
 11540  002B8E  C092  F080         	movff	___aodiv@quotient,?___aodiv
 11541  002B92  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 11542  002B96  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 11543  002B9A  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 11544  002B9E  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 11545  002BA2  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 11546  002BA6  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 11547  002BAA  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 11548                           
 11549                           ; BSR set to: 0
 11550  002BAE  0012               	return		;funcret
 11551  002BB0                     __end_of___aodiv:
 11552                           	opt callstack 0
 11553                           
 11554 ;; *************** function _atoi *****************
 11555 ;; Defined at:
 11556 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 11559 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
 11560 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
 11561 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
 11562 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
 11563 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
 11564 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
 11565 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
 11566 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
 11567 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
 11568 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
 11569 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
 11570 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
 11571 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
 11572 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
 11573 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
 11574 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
 11575 ;; Auto vars:     Size  Location     Type
 11576 ;;  n               2   20[BANK0 ] int 
 11577 ;;  neg             2   13[BANK0 ] int 
 11578 ;; Return value:  Size  Location     Type
 11579 ;;                  2    7[BANK0 ] int 
 11580 ;; Registers used:
 11581 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11582 ;; Tracked objects:
 11583 ;;		On entry : 0/0
 11584 ;;		On exit  : 0/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11588 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11590 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11591 ;;Total ram usage:       15 bytes
 11592 ;; Hardware stack levels used:    1
 11593 ;; Hardware stack levels required when called:    4
 11594 ;; This function calls:
 11595 ;;		___wmul
 11596 ;;		_isdigit
 11597 ;;		_isspace
 11598 ;; This function is called by:
 11599 ;;		_vfpfcnvrt
 11600 ;; This function uses a non-reentrant model
 11601 ;;
 11602                           
 11603                           	psect	text37
 11604  002BB0                     __ptext37:
 11605                           	opt callstack 0
 11606  002BB0                     _atoi:
 11607                           	opt callstack 22
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;incstack = 0
 11611  002BB0  0E00               	movlw	0
 11612  002BB2  0100               	movlb	0	; () banked
 11613  002BB4  6F95               	movwf	(atoi@n+1)& (0+255),b
 11614  002BB6  0E00               	movlw	0
 11615  002BB8  6F94               	movwf	atoi@n& (0+255),b
 11616  002BBA  0E00               	movlw	0
 11617  002BBC  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11618  002BBE  0E00               	movlw	0
 11619  002BC0  6F8D               	movwf	atoi@neg& (0+255),b
 11620  002BC2  D002               	goto	l6935
 11621  002BC4                     l6933:
 11622                           
 11623                           ; BSR set to: 0
 11624  002BC4  4B87               	infsnz	atoi@s& (0+255),f,b
 11625  002BC6  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11626  002BC8                     l6935:
 11627                           
 11628                           ; BSR set to: 0
 11629  002BC8  0E01               	movlw	1
 11630  002BCA  6F93               	movwf	_atoi$1717& (0+255),b
 11631                           
 11632                           ; BSR set to: 0
 11633  002BCC  C087  FFF6         	movff	atoi@s,tblptrl
 11634  002BD0  C088  FFF7         	movff	atoi@s+1,tblptrh
 11635  002BD4                     	if	0	;tblptru may be non-zero
 11636  002BD4                     	endif
 11637  002BD4                     	if	0	;tblptru may be non-zero
 11638  002BD4                     	endif
 11639  002BD4  0008               	tblrd		*
 11640  002BD6  50F5               	movf	tablat,w,c
 11641  002BD8  0A20               	xorlw	32
 11642  002BDA  B4D8               	btfsc	status,2,c
 11643  002BDC  D018               	goto	l6943
 11644                           
 11645                           ; BSR set to: 0
 11646  002BDE  0EF7               	movlw	247
 11647  002BE0  6F89               	movwf	??_atoi& (0+255),b
 11648  002BE2  0EFF               	movlw	255
 11649  002BE4  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11650  002BE6  C087  FFF6         	movff	atoi@s,tblptrl
 11651  002BEA  C088  FFF7         	movff	atoi@s+1,tblptrh
 11652  002BEE                     	if	0	;tblptru may be non-zero
 11653  002BEE                     	endif
 11654  002BEE                     	if	0	;tblptru may be non-zero
 11655  002BEE                     	endif
 11656  002BEE  0008               	tblrd		*
 11657  002BF0  50F5               	movf	tablat,w,c
 11658  002BF2  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11659  002BF4  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11660  002BF6  5189               	movf	??_atoi& (0+255),w,b
 11661  002BF8  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11662  002BFA  518A               	movf	(??_atoi+1)& (0+255),w,b
 11663  002BFC  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11664  002BFE  518C               	movf	(??_atoi+3)& (0+255),w,b
 11665  002C00  E104               	bnz	u7550
 11666  002C02  0E05               	movlw	5
 11667  002C04  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11668  002C06  A0D8               	btfss	status,0,c
 11669  002C08  D002               	goto	l6943
 11670  002C0A                     u7550:
 11671                           
 11672                           ; BSR set to: 0
 11673  002C0A  0E00               	movlw	0
 11674  002C0C  6F93               	movwf	_atoi$1717& (0+255),b
 11675  002C0E                     l6943:
 11676                           
 11677                           ; BSR set to: 0
 11678  002C0E  C093  F08F         	movff	_atoi$1717,_atoi$1716
 11679  002C12  6B90               	clrf	(_atoi$1716+1)& (0+255),b
 11680                           
 11681                           ; BSR set to: 0
 11682  002C14  518F               	movf	_atoi$1716& (0+255),w,b
 11683  002C16  1190               	iorwf	(_atoi$1716+1)& (0+255),w,b
 11684  002C18  B4D8               	btfsc	status,2,c
 11685  002C1A  D008               	goto	l6953
 11686  002C1C  D7D3               	goto	l6933
 11687  002C1E                     l6949:
 11688                           
 11689                           ; BSR set to: 0
 11690  002C1E  0E00               	movlw	0
 11691  002C20  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11692  002C22  0E01               	movlw	1
 11693  002C24  6F8D               	movwf	atoi@neg& (0+255),b
 11694  002C26                     l6951:
 11695                           
 11696                           ; BSR set to: 0
 11697  002C26  4B87               	infsnz	atoi@s& (0+255),f,b
 11698  002C28  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11699  002C2A  D02F               	goto	l6959
 11700  002C2C                     l6953:
 11701                           
 11702                           ; BSR set to: 0
 11703  002C2C  C087  FFF6         	movff	atoi@s,tblptrl
 11704  002C30  C088  FFF7         	movff	atoi@s+1,tblptrh
 11705  002C34                     	if	0	;tblptru may be non-zero
 11706  002C34                     	endif
 11707  002C34                     	if	0	;tblptru may be non-zero
 11708  002C34                     	endif
 11709  002C34  0008               	tblrd		*
 11710  002C36  50F5               	movf	tablat,w,c
 11711  002C38  6F89               	movwf	??_atoi& (0+255),b
 11712  002C3A  6B8A               	clrf	(??_atoi+1)& (0+255),b
 11713                           
 11714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11715                           ; Switch size 1, requested type "simple"
 11716                           ; Number of cases is 1, Range of values is 0 to 0
 11717                           ; switch strategies available:
 11718                           ; Name         Instructions Cycles
 11719                           ; simple_byte            4     3 (average)
 11720                           ;	Chosen strategy is simple_byte
 11721  002C3C  518A               	movf	(??_atoi+1)& (0+255),w,b
 11722  002C3E  0A00               	xorlw	0	; case 0
 11723  002C40  A4D8               	btfss	status,2,c
 11724  002C42  D023               	goto	l6959
 11725                           
 11726                           ; BSR set to: 0
 11727                           ; Switch size 1, requested type "simple"
 11728                           ; Number of cases is 2, Range of values is 43 to 45
 11729                           ; switch strategies available:
 11730                           ; Name         Instructions Cycles
 11731                           ; simple_byte            7     4 (average)
 11732                           ;	Chosen strategy is simple_byte
 11733  002C44  5189               	movf	??_atoi& (0+255),w,b
 11734  002C46  0A2B               	xorlw	43	; case 43
 11735  002C48  B4D8               	btfsc	status,2,c
 11736  002C4A  D7ED               	goto	l6951
 11737  002C4C  0A06               	xorlw	6	; case 45
 11738  002C4E  B4D8               	btfsc	status,2,c
 11739  002C50  D7E6               	goto	l6949
 11740  002C52  D01B               	goto	l6959
 11741  002C54                     l6955:
 11742                           
 11743                           ; BSR set to: 0
 11744  002C54  C094  F080         	movff	atoi@n,___wmul@multiplier
 11745  002C58  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 11746  002C5C  0E00               	movlw	0
 11747  002C5E  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11748  002C60  0E0A               	movlw	10
 11749  002C62  6F82               	movwf	___wmul@multiplicand& (0+255),b
 11750  002C64  EC4B  F01F         	call	___wmul	;wreg free
 11751  002C68  C087  FFF6         	movff	atoi@s,tblptrl
 11752  002C6C  C088  FFF7         	movff	atoi@s+1,tblptrh
 11753  002C70                     	if	0	;tblptru may be non-zero
 11754  002C70                     	endif
 11755  002C70                     	if	0	;tblptru may be non-zero
 11756  002C70                     	endif
 11757  002C70  0008               	tblrd		*
 11758  002C72  50F5               	movf	tablat,w,c
 11759  002C74  0100               	movlb	0	; () banked
 11760  002C76  5F80               	subwf	?___wmul& (0+255),f,b
 11761  002C78  0E00               	movlw	0
 11762  002C7A  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 11763  002C7C  0E30               	movlw	48
 11764  002C7E  2580               	addwf	?___wmul& (0+255),w,b
 11765  002C80  6F94               	movwf	atoi@n& (0+255),b
 11766  002C82  0E00               	movlw	0
 11767  002C84  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 11768  002C86  6F95               	movwf	(atoi@n+1)& (0+255),b
 11769  002C88  D7CE               	goto	l6951
 11770  002C8A                     l6959:
 11771                           
 11772                           ; BSR set to: 0
 11773  002C8A  0ED0               	movlw	208
 11774  002C8C  6F89               	movwf	??_atoi& (0+255),b
 11775  002C8E  0EFF               	movlw	255
 11776  002C90  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11777  002C92  C087  FFF6         	movff	atoi@s,tblptrl
 11778  002C96  C088  FFF7         	movff	atoi@s+1,tblptrh
 11779  002C9A                     	if	0	;tblptru may be non-zero
 11780  002C9A                     	endif
 11781  002C9A                     	if	0	;tblptru may be non-zero
 11782  002C9A                     	endif
 11783  002C9A  0008               	tblrd		*
 11784  002C9C  50F5               	movf	tablat,w,c
 11785  002C9E  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11786  002CA0  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11787  002CA2  5189               	movf	??_atoi& (0+255),w,b
 11788  002CA4  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11789  002CA6  518A               	movf	(??_atoi+1)& (0+255),w,b
 11790  002CA8  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11791  002CAA  518C               	movf	(??_atoi+3)& (0+255),w,b
 11792  002CAC  E106               	bnz	u7570
 11793  002CAE  0E0A               	movlw	10
 11794  002CB0  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11795  002CB2  B0D8               	btfsc	status,0,c
 11796  002CB4  D002               	goto	u7570
 11797  002CB6  0E01               	movlw	1
 11798  002CB8  D001               	goto	u7580
 11799  002CBA                     u7570:
 11800  002CBA  0E00               	movlw	0
 11801  002CBC                     u7580:
 11802  002CBC  6F91               	movwf	_atoi$1718& (0+255),b
 11803  002CBE  6B92               	clrf	(_atoi$1718+1)& (0+255),b
 11804                           
 11805                           ; BSR set to: 0
 11806  002CC0  5191               	movf	_atoi$1718& (0+255),w,b
 11807  002CC2  1192               	iorwf	(_atoi$1718+1)& (0+255),w,b
 11808  002CC4  A4D8               	btfss	status,2,c
 11809  002CC6  D7C6               	goto	l6955
 11810                           
 11811                           ; BSR set to: 0
 11812  002CC8  518D               	movf	atoi@neg& (0+255),w,b
 11813  002CCA  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11814  002CCC  A4D8               	btfss	status,2,c
 11815  002CCE  D00D               	goto	l1444
 11816                           
 11817                           ; BSR set to: 0
 11818  002CD0  C094  F089         	movff	atoi@n,??_atoi
 11819  002CD4  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11820  002CD8  1F89               	comf	??_atoi& (0+255),f,b
 11821  002CDA  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11822  002CDC  4B89               	infsnz	??_atoi& (0+255),f,b
 11823  002CDE  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11824  002CE0  C089  F087         	movff	??_atoi,?_atoi
 11825  002CE4  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11826  002CE8  0012               	return	
 11827  002CEA                     l1444:
 11828                           
 11829                           ; BSR set to: 0
 11830  002CEA  C094  F087         	movff	atoi@n,?_atoi
 11831  002CEE  C095  F088         	movff	atoi@n+1,?_atoi+1
 11832                           
 11833                           ; BSR set to: 0
 11834  002CF2  0012               	return		;funcret
 11835  002CF4                     __end_of_atoi:
 11836                           	opt callstack 0
 11837                           
 11838 ;; *************** function _isspace *****************
 11839 ;; Defined at:
 11840 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11841 ;; Parameters:    Size  Location     Type
 11842 ;;  c               2    0[BANK0 ] int 
 11843 ;; Auto vars:     Size  Location     Type
 11844 ;;		None
 11845 ;; Return value:  Size  Location     Type
 11846 ;;                  2    0[BANK0 ] int 
 11847 ;; Registers used:
 11848 ;;		wreg, status,2, status,0
 11849 ;; Tracked objects:
 11850 ;;		On entry : 0/0
 11851 ;;		On exit  : 0/0
 11852 ;;		Unchanged: 0/0
 11853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11855 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11856 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11857 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11858 ;;Total ram usage:        7 bytes
 11859 ;; Hardware stack levels used:    1
 11860 ;; Hardware stack levels required when called:    3
 11861 ;; This function calls:
 11862 ;;		Nothing
 11863 ;; This function is called by:
 11864 ;;		_atoi
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           	psect	text38
 11869  003BFC                     __ptext38:
 11870                           	opt callstack 0
 11871  003BFC                     _isspace:
 11872                           	opt callstack 22
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;incstack = 0
 11876  003BFC  0E01               	movlw	1
 11877  003BFE  0100               	movlb	0	; () banked
 11878  003C00  6F86               	movwf	_isspace$1743& (0+255),b
 11879                           
 11880                           ; BSR set to: 0
 11881  003C02  0E20               	movlw	32
 11882  003C04  1980               	xorwf	isspace@c& (0+255),w,b
 11883  003C06  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11884  003C08  B4D8               	btfsc	status,2,c
 11885  003C0A  D014               	goto	l6799
 11886                           
 11887                           ; BSR set to: 0
 11888  003C0C  0EF7               	movlw	247
 11889  003C0E  6F82               	movwf	??_isspace& (0+255),b
 11890  003C10  0EFF               	movlw	255
 11891  003C12  6F83               	movwf	(??_isspace+1)& (0+255),b
 11892  003C14  C080  F084         	movff	isspace@c,??_isspace+2
 11893  003C18  C081  F085         	movff	isspace@c+1,??_isspace+3
 11894  003C1C  5182               	movf	??_isspace& (0+255),w,b
 11895  003C1E  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11896  003C20  5183               	movf	(??_isspace+1)& (0+255),w,b
 11897  003C22  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11898  003C24  5185               	movf	(??_isspace+3)& (0+255),w,b
 11899  003C26  E104               	bnz	u7210
 11900  003C28  0E05               	movlw	5
 11901  003C2A  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11902  003C2C  A0D8               	btfss	status,0,c
 11903  003C2E  D002               	goto	l6799
 11904  003C30                     u7210:
 11905                           
 11906                           ; BSR set to: 0
 11907  003C30  0E00               	movlw	0
 11908  003C32  6F86               	movwf	_isspace$1743& (0+255),b
 11909  003C34                     l6799:
 11910                           
 11911                           ; BSR set to: 0
 11912  003C34  C086  F080         	movff	_isspace$1743,?_isspace
 11913  003C38  6B81               	clrf	(?_isspace+1)& (0+255),b
 11914                           
 11915                           ; BSR set to: 0
 11916  003C3A  0012               	return		;funcret
 11917  003C3C                     __end_of_isspace:
 11918                           	opt callstack 0
 11919                           
 11920 ;; *************** function _isdigit *****************
 11921 ;; Defined at:
 11922 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;  c               2    0[BANK0 ] int 
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;		None
 11927 ;; Return value:  Size  Location     Type
 11928 ;;                  2    0[BANK0 ] int 
 11929 ;; Registers used:
 11930 ;;		wreg, status,2, status,0
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11936 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11938 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11939 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11940 ;;Total ram usage:        6 bytes
 11941 ;; Hardware stack levels used:    1
 11942 ;; Hardware stack levels required when called:    3
 11943 ;; This function calls:
 11944 ;;		Nothing
 11945 ;; This function is called by:
 11946 ;;		_vfpfcnvrt
 11947 ;;		_atoi
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951                           	psect	text39
 11952  003DB6                     __ptext39:
 11953                           	opt callstack 0
 11954  003DB6                     _isdigit:
 11955                           	opt callstack 23
 11956                           
 11957                           ; BSR set to: 0
 11958                           ;incstack = 0
 11959  003DB6  0ED0               	movlw	208
 11960  003DB8  0100               	movlb	0	; () banked
 11961  003DBA  6F82               	movwf	??_isdigit& (0+255),b
 11962  003DBC  0EFF               	movlw	255
 11963  003DBE  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11964  003DC0  C080  F084         	movff	isdigit@c,??_isdigit+2
 11965  003DC4  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11966  003DC8  5182               	movf	??_isdigit& (0+255),w,b
 11967  003DCA  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11968  003DCC  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11969  003DCE  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11970  003DD0  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11971  003DD2  E106               	bnz	u7050
 11972  003DD4  0E0A               	movlw	10
 11973  003DD6  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11974  003DD8  B0D8               	btfsc	status,0,c
 11975  003DDA  D002               	goto	u7050
 11976  003DDC  0E01               	movlw	1
 11977  003DDE  D001               	goto	u7060
 11978  003DE0                     u7050:
 11979  003DE0  0E00               	movlw	0
 11980  003DE2                     u7060:
 11981  003DE2  6F80               	movwf	?_isdigit& (0+255),b
 11982  003DE4  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11983                           
 11984                           ; BSR set to: 0
 11985  003DE6  0012               	return		;funcret
 11986  003DE8                     __end_of_isdigit:
 11987                           	opt callstack 0
 11988                           
 11989 ;; *************** function ___wmul *****************
 11990 ;; Defined at:
 11991 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11992 ;; Parameters:    Size  Location     Type
 11993 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11994 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;  product         2    4[BANK0 ] unsigned int 
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  2    0[BANK0 ] unsigned int 
 11999 ;; Registers used:
 12000 ;;		wreg, status,2, status,0, prodl, prodh
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12007 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12009 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12010 ;;Total ram usage:        6 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; Hardware stack levels required when called:    3
 12013 ;; This function calls:
 12014 ;;		Nothing
 12015 ;; This function is called by:
 12016 ;;		_main
 12017 ;;		_atoi
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021                           	psect	text40
 12022  003E96                     __ptext40:
 12023                           	opt callstack 0
 12024  003E96                     ___wmul:
 12025                           	opt callstack 22
 12026                           
 12027                           ; BSR set to: 0
 12028                           ;incstack = 0
 12029  003E96  0100               	movlb	0	; () banked
 12030  003E98  5180               	movf	___wmul@multiplier& (0+255),w,b
 12031  003E9A  0382               	mulwf	___wmul@multiplicand& (0+255),b
 12032  003E9C  CFF3 F084          	movff	prodl,___wmul@product
 12033  003EA0  CFF4 F085          	movff	prodh,___wmul@product+1
 12034  003EA4  5180               	movf	___wmul@multiplier& (0+255),w,b
 12035  003EA6  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12036  003EA8  50F3               	movf	prodl,w,c
 12037  003EAA  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 12038  003EAC  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12039  003EAE  0382               	mulwf	___wmul@multiplicand& (0+255),b
 12040  003EB0  50F3               	movf	prodl,w,c
 12041  003EB2  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 12042                           
 12043                           ; BSR set to: 0
 12044  003EB4  C084  F080         	movff	___wmul@product,?___wmul
 12045  003EB8  C085  F081         	movff	___wmul@product+1,?___wmul+1
 12046                           
 12047                           ; BSR set to: 0
 12048  003EBC  0012               	return		;funcret
 12049  003EBE                     __end_of___wmul:
 12050                           	opt callstack 0
 12051                           
 12052 ;; *************** function _initLCD *****************
 12053 ;; Defined at:
 12054 ;;		line 69 in file "lcd.c"
 12055 ;; Parameters:    Size  Location     Type
 12056 ;;		None
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;		None
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  1    wreg      void 
 12061 ;; Registers used:
 12062 ;;		wreg, status,2, status,0, cstack
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;Total ram usage:        1 bytes
 12073 ;; Hardware stack levels used:    1
 12074 ;; Hardware stack levels required when called:    7
 12075 ;; This function calls:
 12076 ;;		_lcdInst
 12077 ;;		_send_byte
 12078 ;;		_send_nibble
 12079 ;; This function is called by:
 12080 ;;		_actuators_main
 12081 ;;		_UI_main
 12082 ;;		_main
 12083 ;; This function uses a non-reentrant model
 12084 ;;
 12085                           
 12086                           	psect	text41
 12087  00390C                     __ptext41:
 12088                           	opt callstack 0
 12089  00390C                     _initLCD:
 12090                           	opt callstack 23
 12091                           
 12092                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 12093                           
 12094                           ; BSR set to: 0
 12095                           ;incstack = 0
 12096  00390C  0E31               	movlw	49
 12097  00390E  0100               	movlb	0	; () banked
 12098  003910  6F84               	movwf	??_initLCD& (0+255),b
 12099  003912  0EB2               	movlw	178
 12100  003914                     u10287:
 12101  003914  2EE8               	decfsz	wreg,f,c
 12102  003916  D7FE               	bra	u10287
 12103  003918  2F84               	decfsz	??_initLCD& (0+255),f,b
 12104  00391A  D7FC               	bra	u10287
 12105  00391C  F000               	nop	
 12106                           
 12107                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 12108  00391E  948C               	bcf	3980,2,c	;volatile
 12109                           
 12110                           ;lcd.c: 74:     send_nibble(0b0011);
 12111  003920  0E03               	movlw	3
 12112  003922  EC72  F01F         	call	_send_nibble
 12113                           
 12114                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 12115  003926  0E11               	movlw	17
 12116  003928  0100               	movlb	0	; () banked
 12117  00392A  6F84               	movwf	??_initLCD& (0+255),b
 12118  00392C  0E3A               	movlw	58
 12119  00392E                     u10297:
 12120  00392E  2EE8               	decfsz	wreg,f,c
 12121  003930  D7FE               	bra	u10297
 12122  003932  2F84               	decfsz	??_initLCD& (0+255),f,b
 12123  003934  D7FC               	bra	u10297
 12124  003936  F000               	nop	
 12125                           
 12126                           ;lcd.c: 76:     send_nibble(0b0011);
 12127  003938  0E03               	movlw	3
 12128  00393A  EC72  F01F         	call	_send_nibble
 12129                           
 12130                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 12131  00393E  0E7D               	movlw	125
 12132  003940                     u10307:
 12133  003940  2EE8               	decfsz	wreg,f,c
 12134  003942  D7FE               	bra	u10307
 12135                           
 12136                           ;lcd.c: 78:     send_byte(0b00110010);
 12137  003944  0E32               	movlw	50
 12138  003946  EC7F  F01F         	call	_send_byte
 12139                           
 12140                           ;lcd.c: 80:     send_byte(0b00101000);
 12141  00394A  0E28               	movlw	40
 12142  00394C  EC7F  F01F         	call	_send_byte
 12143                           
 12144                           ;lcd.c: 81:     send_byte(0b00001000);
 12145  003950  0E08               	movlw	8
 12146  003952  EC7F  F01F         	call	_send_byte
 12147                           
 12148                           ;lcd.c: 82:     send_byte(0b00000001);
 12149  003956  0E01               	movlw	1
 12150  003958  EC7F  F01F         	call	_send_byte
 12151                           
 12152                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 12153  00395C  0E11               	movlw	17
 12154  00395E  0100               	movlb	0	; () banked
 12155  003960  6F84               	movwf	??_initLCD& (0+255),b
 12156  003962  0E3A               	movlw	58
 12157  003964                     u10317:
 12158  003964  2EE8               	decfsz	wreg,f,c
 12159  003966  D7FE               	bra	u10317
 12160  003968  2F84               	decfsz	??_initLCD& (0+255),f,b
 12161  00396A  D7FC               	bra	u10317
 12162  00396C  F000               	nop	
 12163                           
 12164                           ;lcd.c: 84:     send_byte(0b00000110);
 12165  00396E  0E06               	movlw	6
 12166  003970  EC7F  F01F         	call	_send_byte
 12167                           
 12168                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 12169  003974  0E0F               	movlw	15
 12170  003976  EC9D  F01F         	call	_lcdInst
 12171  00397A  0012               	return		;funcret
 12172  00397C                     __end_of_initLCD:
 12173                           	opt callstack 0
 12174                           
 12175 ;; *************** function _lcdInst *****************
 12176 ;; Defined at:
 12177 ;;		line 64 in file "lcd.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;  data            1    wreg     unsigned char 
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  data            1    3[BANK0 ] unsigned char 
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  1    wreg      void 
 12184 ;; Registers used:
 12185 ;;		wreg, status,2, status,0, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;Total ram usage:        1 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:    6
 12198 ;; This function calls:
 12199 ;;		_send_byte
 12200 ;; This function is called by:
 12201 ;;		_actuators_main
 12202 ;;		_stepper2
 12203 ;;		_stepper2_back
 12204 ;;		_initLCD
 12205 ;;		_print_echo
 12206 ;;		_ultrasonic_main
 12207 ;;		_number_deploy
 12208 ;;		_UI_main
 12209 ;;		_brake
 12210 ;;		_main
 12211 ;;		_lcd_shift_cursor
 12212 ;;		_lcd_shift_display
 12213 ;; This function uses a non-reentrant model
 12214 ;;
 12215                           
 12216                           	psect	text42
 12217  003F3A                     __ptext42:
 12218                           	opt callstack 0
 12219  003F3A                     _lcdInst:
 12220                           	opt callstack 22
 12221                           
 12222                           ;incstack = 0
 12223                           ;lcdInst@data stored from wreg
 12224  003F3A  0100               	movlb	0	; () banked
 12225  003F3C  6F83               	movwf	lcdInst@data& (0+255),b
 12226                           
 12227                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12228  003F3E  948C               	bcf	3980,2,c	;volatile
 12229                           
 12230                           ;lcd.c: 66:     send_byte(data);
 12231  003F40  0100               	movlb	0	; () banked
 12232  003F42  5183               	movf	lcdInst@data& (0+255),w,b
 12233  003F44  EC7F  F01F         	call	_send_byte
 12234  003F48  0012               	return		;funcret
 12235  003F4A                     __end_of_lcdInst:
 12236                           	opt callstack 0
 12237                           
 12238 ;; *************** function _send_byte *****************
 12239 ;; Defined at:
 12240 ;;		line 55 in file "lcd.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  data            1    wreg     unsigned char 
 12243 ;; Auto vars:     Size  Location     Type
 12244 ;;  data            1    2[BANK0 ] unsigned char 
 12245 ;; Return value:  Size  Location     Type
 12246 ;;                  1    wreg      void 
 12247 ;; Registers used:
 12248 ;;		wreg, status,2, status,0, cstack
 12249 ;; Tracked objects:
 12250 ;;		On entry : 0/0
 12251 ;;		On exit  : 0/0
 12252 ;;		Unchanged: 0/0
 12253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12257 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12258 ;;Total ram usage:        1 bytes
 12259 ;; Hardware stack levels used:    1
 12260 ;; Hardware stack levels required when called:    5
 12261 ;; This function calls:
 12262 ;;		_send_nibble
 12263 ;; This function is called by:
 12264 ;;		_lcdInst
 12265 ;;		_initLCD
 12266 ;;		_putch
 12267 ;; This function uses a non-reentrant model
 12268 ;;
 12269                           
 12270                           	psect	text43
 12271  003EFE                     __ptext43:
 12272                           	opt callstack 0
 12273  003EFE                     _send_byte:
 12274                           	opt callstack 16
 12275                           
 12276                           ;incstack = 0
 12277                           ;send_byte@data stored from wreg
 12278  003EFE  0100               	movlb	0	; () banked
 12279  003F00  6F82               	movwf	send_byte@data& (0+255),b
 12280                           
 12281                           ;lcd.c: 57:     send_nibble(data >> 4);
 12282  003F02  0100               	movlb	0	; () banked
 12283  003F04  3982               	swapf	send_byte@data& (0+255),w,b
 12284  003F06  0B0F               	andlw	15
 12285  003F08  EC72  F01F         	call	_send_nibble
 12286                           
 12287                           ;lcd.c: 60:     send_nibble(data);
 12288  003F0C  0100               	movlb	0	; () banked
 12289  003F0E  5182               	movf	send_byte@data& (0+255),w,b
 12290  003F10  EC72  F01F         	call	_send_nibble
 12291  003F14  0012               	return		;funcret
 12292  003F16                     __end_of_send_byte:
 12293                           	opt callstack 0
 12294                           
 12295 ;; *************** function _send_nibble *****************
 12296 ;; Defined at:
 12297 ;;		line 44 in file "lcd.c"
 12298 ;; Parameters:    Size  Location     Type
 12299 ;;  data            1    wreg     unsigned char 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;  data            1    1[BANK0 ] unsigned char 
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  1    wreg      void 
 12304 ;; Registers used:
 12305 ;;		wreg, status,2, status,0, cstack
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12312 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12314 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12315 ;;Total ram usage:        1 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    4
 12318 ;; This function calls:
 12319 ;;		_pulse_e
 12320 ;; This function is called by:
 12321 ;;		_send_byte
 12322 ;;		_initLCD
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           	psect	text44
 12327  003EE4                     __ptext44:
 12328                           	opt callstack 0
 12329  003EE4                     _send_nibble:
 12330                           	opt callstack 16
 12331                           
 12332                           ;incstack = 0
 12333                           ;send_nibble@data stored from wreg
 12334  003EE4  0100               	movlb	0	; () banked
 12335  003EE6  6F81               	movwf	send_nibble@data& (0+255),b
 12336                           
 12337                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12338  003EE8  508C               	movf	3980,w,c	;volatile
 12339  003EEA  0B0F               	andlw	15
 12340  003EEC  6E8C               	movwf	3980,c	;volatile
 12341                           
 12342                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12343  003EEE  0100               	movlb	0	; () banked
 12344  003EF0  3981               	swapf	send_nibble@data& (0+255),w,b
 12345  003EF2  0BF0               	andlw	240
 12346  003EF4  108C               	iorwf	3980,w,c	;volatile
 12347  003EF6  6E8C               	movwf	3980,c	;volatile
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;lcd.c: 48:     pulse_e();
 12351  003EF8  EC0B  F01F         	call	_pulse_e	;wreg free
 12352  003EFC  0012               	return		;funcret
 12353  003EFE                     __end_of_send_nibble:
 12354                           	opt callstack 0
 12355                           
 12356 ;; *************** function _pulse_e *****************
 12357 ;; Defined at:
 12358 ;;		line 28 in file "lcd.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;		None
 12361 ;; Auto vars:     Size  Location     Type
 12362 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  1    wreg      void 
 12365 ;; Registers used:
 12366 ;;		wreg
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/0
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12376 ;;Total ram usage:        1 bytes
 12377 ;; Hardware stack levels used:    1
 12378 ;; Hardware stack levels required when called:    3
 12379 ;; This function calls:
 12380 ;;		Nothing
 12381 ;; This function is called by:
 12382 ;;		_send_nibble
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text45
 12387  003E16                     __ptext45:
 12388                           	opt callstack 0
 12389  003E16                     _pulse_e:
 12390                           	opt callstack 16
 12391                           
 12392                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12393                           
 12394                           ;incstack = 0
 12395  003E16  0E00               	movlw	0
 12396  003E18  BEF2               	btfsc	4082,7,c	;volatile
 12397  003E1A  0E01               	movlw	1
 12398  003E1C  0100               	movlb	0	; () banked
 12399  003E1E  6F80               	movwf	pulse_e@interruptState& (0+255),b
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12403  003E20  9EF2               	bcf	4082,7,c	;volatile
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12407  003E22  868C               	bsf	3980,3,c	;volatile
 12408                           
 12409                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12410  003E24  0E14               	movlw	20
 12411  003E26                     u10327:
 12412  003E26  2EE8               	decfsz	wreg,f,c
 12413  003E28  D7FE               	bra	u10327
 12414  003E2A  D000               	nop2	
 12415                           
 12416                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12417  003E2C  968C               	bcf	3980,3,c	;volatile
 12418                           
 12419                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12420  003E2E  0E53               	movlw	83
 12421  003E30                     u10337:
 12422  003E30  2EE8               	decfsz	wreg,f,c
 12423  003E32  D7FE               	bra	u10337
 12424  003E34  F000               	nop	
 12425                           
 12426                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12427  003E36  0100               	movlb	0	; () banked
 12428  003E38  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 12429  003E3A  D002               	bra	u6845
 12430  003E3C  9EF2               	bcf	4082,7,c	;volatile
 12431  003E3E  D001               	bra	u6846
 12432  003E40                     u6845:
 12433  003E40  8EF2               	bsf	4082,7,c	;volatile
 12434  003E42                     u6846:
 12435  003E42  0012               	return		;funcret
 12436  003E44                     __end_of_pulse_e:
 12437                           	opt callstack 0
 12438                           
 12439 ;; *************** function ___llmod *****************
 12440 ;; Defined at:
 12441 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12442 ;; Parameters:    Size  Location     Type
 12443 ;;  dividend        4    0[BANK0 ] unsigned long 
 12444 ;;  divisor         4    4[BANK0 ] unsigned long 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;  counter         1    8[BANK0 ] unsigned char 
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  4    0[BANK0 ] unsigned long 
 12449 ;; Registers used:
 12450 ;;		wreg, status,2, status,0
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12456 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12457 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12459 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12460 ;;Total ram usage:        9 bytes
 12461 ;; Hardware stack levels used:    1
 12462 ;; Hardware stack levels required when called:    3
 12463 ;; This function calls:
 12464 ;;		Nothing
 12465 ;; This function is called by:
 12466 ;;		_UI_main
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text46
 12471  0039EA                     __ptext46:
 12472                           	opt callstack 0
 12473  0039EA                     ___llmod:
 12474                           	opt callstack 26
 12475                           
 12476                           ;incstack = 0
 12477  0039EA  0100               	movlb	0	; () banked
 12478  0039EC  5184               	movf	___llmod@divisor& (0+255),w,b
 12479  0039EE  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12480  0039F0  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12481  0039F2  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12482  0039F4  B4D8               	btfsc	status,2,c
 12483  0039F6  D024               	goto	l1158
 12484                           
 12485                           ; BSR set to: 0
 12486  0039F8  0E01               	movlw	1
 12487  0039FA  6F88               	movwf	___llmod@counter& (0+255),b
 12488  0039FC  D006               	goto	l7833
 12489  0039FE                     l7831:
 12490                           
 12491                           ; BSR set to: 0
 12492  0039FE  90D8               	bcf	status,0,c
 12493  003A00  3784               	rlcf	___llmod@divisor& (0+255),f,b
 12494  003A02  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12495  003A04  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12496  003A06  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12497  003A08  2B88               	incf	___llmod@counter& (0+255),f,b
 12498  003A0A                     l7833:
 12499                           
 12500                           ; BSR set to: 0
 12501  003A0A  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12502  003A0C  D7F8               	goto	l7831
 12503  003A0E                     u8540:
 12504                           
 12505                           ; BSR set to: 0
 12506  003A0E  5184               	movf	___llmod@divisor& (0+255),w,b
 12507  003A10  5D80               	subwf	___llmod@dividend& (0+255),w,b
 12508  003A12  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12509  003A14  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12510  003A16  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12511  003A18  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12512  003A1A  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12513  003A1C  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12514  003A1E  A0D8               	btfss	status,0,c
 12515  003A20  D008               	goto	l7839
 12516                           
 12517                           ; BSR set to: 0
 12518  003A22  5184               	movf	___llmod@divisor& (0+255),w,b
 12519  003A24  5F80               	subwf	___llmod@dividend& (0+255),f,b
 12520  003A26  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12521  003A28  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12522  003A2A  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12523  003A2C  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12524  003A2E  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12525  003A30  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12526  003A32                     l7839:
 12527                           
 12528                           ; BSR set to: 0
 12529  003A32  90D8               	bcf	status,0,c
 12530  003A34  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12531  003A36  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12532  003A38  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12533  003A3A  3384               	rrcf	___llmod@divisor& (0+255),f,b
 12534                           
 12535                           ; BSR set to: 0
 12536  003A3C  2F88               	decfsz	___llmod@counter& (0+255),f,b
 12537  003A3E  D7E7               	goto	u8540
 12538  003A40                     l1158:
 12539                           
 12540                           ; BSR set to: 0
 12541  003A40  C080  F080         	movff	___llmod@dividend,?___llmod
 12542  003A44  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 12543  003A48  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 12544  003A4C  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 12545                           
 12546                           ; BSR set to: 0
 12547  003A50  0012               	return		;funcret
 12548  003A52                     __end_of___llmod:
 12549                           	opt callstack 0
 12550                           
 12551 ;; *************** function _I2C_Master_Write *****************
 12552 ;; Defined at:
 12553 ;;		line 70 in file "I2C.c"
 12554 ;; Parameters:    Size  Location     Type
 12555 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 12556 ;; Auto vars:     Size  Location     Type
 12557 ;;		None
 12558 ;; Return value:  Size  Location     Type
 12559 ;;                  1    wreg      void 
 12560 ;; Registers used:
 12561 ;;		wreg, status,2, status,0, cstack
 12562 ;; Tracked objects:
 12563 ;;		On entry : 0/0
 12564 ;;		On exit  : 0/0
 12565 ;;		Unchanged: 0/0
 12566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12570 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12571 ;;Total ram usage:        2 bytes
 12572 ;; Hardware stack levels used:    1
 12573 ;; Hardware stack levels required when called:    4
 12574 ;; This function calls:
 12575 ;;		_I2C_Master_Wait
 12576 ;; This function is called by:
 12577 ;;		_UI_main
 12578 ;;		_brake
 12579 ;;		_start
 12580 ;;		_backwards
 12581 ;;		_main
 12582 ;; This function uses a non-reentrant model
 12583 ;;
 12584                           
 12585                           	psect	text47
 12586  003F4A                     __ptext47:
 12587                           	opt callstack 0
 12588  003F4A                     _I2C_Master_Write:
 12589                           	opt callstack 25
 12590                           
 12591                           ;I2C.c: 71:     I2C_Master_Wait();
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;incstack = 0
 12595  003F4A  EC8B  F01F         	call	_I2C_Master_Wait	;wreg free
 12596                           
 12597                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 12598  003F4E  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 12599  003F52  0012               	return		;funcret
 12600  003F54                     __end_of_I2C_Master_Write:
 12601                           	opt callstack 0
 12602                           
 12603 ;; *************** function _I2C_Master_Stop *****************
 12604 ;; Defined at:
 12605 ;;		line 65 in file "I2C.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;		None
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;		None
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  1    wreg      void 
 12612 ;; Registers used:
 12613 ;;		wreg, status,2, status,0, cstack
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12623 ;;Total ram usage:        0 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    4
 12626 ;; This function calls:
 12627 ;;		_I2C_Master_Wait
 12628 ;; This function is called by:
 12629 ;;		_UI_main
 12630 ;;		_brake
 12631 ;;		_start
 12632 ;;		_backwards
 12633 ;;		_main
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           	psect	text48
 12638  003F54                     __ptext48:
 12639                           	opt callstack 0
 12640  003F54                     _I2C_Master_Stop:
 12641                           	opt callstack 25
 12642                           
 12643                           ;I2C.c: 66:     I2C_Master_Wait();
 12644                           
 12645                           ;incstack = 0
 12646  003F54  EC8B  F01F         	call	_I2C_Master_Wait	;wreg free
 12647                           
 12648                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 12649  003F58  84C5               	bsf	4037,2,c	;volatile
 12650  003F5A  0012               	return		;funcret
 12651  003F5C                     __end_of_I2C_Master_Stop:
 12652                           	opt callstack 0
 12653                           
 12654 ;; *************** function _I2C_Master_Start *****************
 12655 ;; Defined at:
 12656 ;;		line 55 in file "I2C.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;		None
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;		None
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  1    wreg      void 
 12663 ;; Registers used:
 12664 ;;		wreg, status,2, status,0, cstack
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12674 ;;Total ram usage:        0 bytes
 12675 ;; Hardware stack levels used:    1
 12676 ;; Hardware stack levels required when called:    4
 12677 ;; This function calls:
 12678 ;;		_I2C_Master_Wait
 12679 ;; This function is called by:
 12680 ;;		_UI_main
 12681 ;;		_brake
 12682 ;;		_start
 12683 ;;		_backwards
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687                           	psect	text49
 12688  003F5C                     __ptext49:
 12689                           	opt callstack 0
 12690  003F5C                     _I2C_Master_Start:
 12691                           	opt callstack 25
 12692                           
 12693                           ;I2C.c: 56:     I2C_Master_Wait();
 12694                           
 12695                           ;incstack = 0
 12696  003F5C  EC8B  F01F         	call	_I2C_Master_Wait	;wreg free
 12697                           
 12698                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 12699  003F60  80C5               	bsf	4037,0,c	;volatile
 12700  003F62  0012               	return		;funcret
 12701  003F64                     __end_of_I2C_Master_Start:
 12702                           	opt callstack 0
 12703                           
 12704 ;; *************** function _I2C_Master_Read *****************
 12705 ;; Defined at:
 12706 ;;		line 77 in file "I2C.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;  ackBit          1    wreg     unsigned char 
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;  ackBit          1    1[BANK0 ] unsigned char 
 12711 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 12712 ;; Return value:  Size  Location     Type
 12713 ;;                  1    wreg      unsigned char 
 12714 ;; Registers used:
 12715 ;;		wreg, status,2, status,0, cstack
 12716 ;; Tracked objects:
 12717 ;;		On entry : 0/0
 12718 ;;		On exit  : 0/0
 12719 ;;		Unchanged: 0/0
 12720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12722 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12724 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12725 ;;Total ram usage:        2 bytes
 12726 ;; Hardware stack levels used:    1
 12727 ;; Hardware stack levels required when called:    4
 12728 ;; This function calls:
 12729 ;;		_I2C_Master_Wait
 12730 ;; This function is called by:
 12731 ;;		_UI_main
 12732 ;;		_brake
 12733 ;;		_main
 12734 ;; This function uses a non-reentrant model
 12735 ;;
 12736                           
 12737                           	psect	text50
 12738  003E44                     __ptext50:
 12739                           	opt callstack 0
 12740  003E44                     _I2C_Master_Read:
 12741                           	opt callstack 25
 12742                           
 12743                           ;incstack = 0
 12744                           ;I2C_Master_Read@ackBit stored from wreg
 12745  003E44  0100               	movlb	0	; () banked
 12746  003E46  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 12747                           
 12748                           ;I2C.c: 78:     I2C_Master_Wait();
 12749  003E48  EC8B  F01F         	call	_I2C_Master_Wait	;wreg free
 12750                           
 12751                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 12752  003E4C  86C5               	bsf	4037,3,c	;volatile
 12753                           
 12754                           ;I2C.c: 81:     I2C_Master_Wait();
 12755  003E4E  EC8B  F01F         	call	_I2C_Master_Wait	;wreg free
 12756                           
 12757                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 12758  003E52  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 12759                           
 12760                           ;I2C.c: 86:     I2C_Master_Wait();
 12761  003E56  EC8B  F01F         	call	_I2C_Master_Wait	;wreg free
 12762                           
 12763                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 12764  003E5A  0100               	movlb	0	; () banked
 12765  003E5C  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 12766  003E5E  D002               	bra	u8025
 12767  003E60  9AC5               	bcf	4037,5,c	;volatile
 12768  003E62  D001               	bra	u8026
 12769  003E64                     u8025:
 12770  003E64  8AC5               	bsf	4037,5,c	;volatile
 12771  003E66                     u8026:
 12772                           
 12773                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 12774  003E66  88C5               	bsf	4037,4,c	;volatile
 12775                           
 12776                           ;I2C.c: 90:     return receivedByte;
 12777  003E68  0100               	movlb	0	; () banked
 12778  003E6A  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 12779                           
 12780                           ; BSR set to: 0
 12781  003E6C  0012               	return		;funcret
 12782  003E6E                     __end_of_I2C_Master_Read:
 12783                           	opt callstack 0
 12784                           
 12785 ;; *************** function _I2C_Master_Init *****************
 12786 ;; Defined at:
 12787 ;;		line 32 in file "I2C.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;		None
 12792 ;; Return value:  Size  Location     Type
 12793 ;;                  1    wreg      void 
 12794 ;; Registers used:
 12795 ;;		wreg, status,2, status,0, cstack
 12796 ;; Tracked objects:
 12797 ;;		On entry : 0/0
 12798 ;;		On exit  : 0/0
 12799 ;;		Unchanged: 0/0
 12800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12801 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12803 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12804 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12805 ;;Total ram usage:        8 bytes
 12806 ;; Hardware stack levels used:    1
 12807 ;; Hardware stack levels required when called:    4
 12808 ;; This function calls:
 12809 ;;		___lldiv
 12810 ;; This function is called by:
 12811 ;;		_UI_main
 12812 ;;		_start
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text51
 12817  003A52                     __ptext51:
 12818                           	opt callstack 0
 12819  003A52                     _I2C_Master_Init:
 12820                           	opt callstack 25
 12821                           
 12822                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12823                           
 12824                           ; BSR set to: 0
 12825                           ;incstack = 0
 12826  003A52  9AC6               	bcf	4038,5,c	;volatile
 12827                           
 12828                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12829  003A54  8694               	bsf	3988,3,c	;volatile
 12830                           
 12831                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12832  003A56  8894               	bsf	3988,4,c	;volatile
 12833                           
 12834                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12835  003A58  0E80               	movlw	128
 12836  003A5A  0100               	movlb	0	; () banked
 12837  003A5C  6F80               	movwf	___lldiv@dividend& (0+255),b
 12838  003A5E  0E96               	movlw	150
 12839  003A60  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12840  003A62  0E98               	movlw	152
 12841  003A64  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12842  003A66  0E00               	movlw	0
 12843  003A68  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12844  003A6A  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12845  003A6E  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12846  003A72  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12847  003A76  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12848  003A7A  0E02               	movlw	2
 12849  003A7C                     u8015:
 12850  003A7C  90D8               	bcf	status,0,c
 12851  003A7E  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12852  003A80  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12853  003A82  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12854  003A84  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12855  003A86  2EE8               	decfsz	wreg,f,c
 12856  003A88  D7F9               	goto	u8015
 12857  003A8A  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12858  003A8E  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12859  003A92  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12860  003A96  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12861  003A9A  EC02  F01C         	call	___lldiv	;wreg free
 12862  003A9E  0100               	movlb	0	; () banked
 12863  003AA0  0580               	decf	?___lldiv& (0+255),w,b
 12864  003AA2  6EC8               	movwf	4040,c	;volatile
 12865                           
 12866                           ; BSR set to: 0
 12867                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12868  003AA4  0E80               	movlw	128
 12869  003AA6  6EC7               	movwf	4039,c	;volatile
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12873  003AA8  0E28               	movlw	40
 12874  003AAA  6EC6               	movwf	4038,c	;volatile
 12875                           
 12876                           ; BSR set to: 0
 12877                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12878  003AAC  0E00               	movlw	0
 12879  003AAE  6EC5               	movwf	4037,c	;volatile
 12880                           
 12881                           ; BSR set to: 0
 12882  003AB0  0012               	return		;funcret
 12883  003AB2                     __end_of_I2C_Master_Init:
 12884                           	opt callstack 0
 12885                           
 12886 ;; *************** function ___lldiv *****************
 12887 ;; Defined at:
 12888 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12889 ;; Parameters:    Size  Location     Type
 12890 ;;  dividend        4    0[BANK0 ] unsigned long 
 12891 ;;  divisor         4    4[BANK0 ] unsigned long 
 12892 ;; Auto vars:     Size  Location     Type
 12893 ;;  quotient        4    8[BANK0 ] unsigned long 
 12894 ;;  counter         1   12[BANK0 ] unsigned char 
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  4    0[BANK0 ] unsigned long 
 12897 ;; Registers used:
 12898 ;;		wreg, status,2, status,0
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12904 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12907 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12908 ;;Total ram usage:       13 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:    3
 12911 ;; This function calls:
 12912 ;;		Nothing
 12913 ;; This function is called by:
 12914 ;;		_I2C_Master_Init
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text52
 12919  003804                     __ptext52:
 12920                           	opt callstack 0
 12921  003804                     ___lldiv:
 12922                           	opt callstack 25
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;incstack = 0
 12926  003804  0E00               	movlw	0
 12927  003806  0100               	movlb	0	; () banked
 12928  003808  6F88               	movwf	___lldiv@quotient& (0+255),b
 12929  00380A  0E00               	movlw	0
 12930  00380C  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12931  00380E  0E00               	movlw	0
 12932  003810  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12933  003812  0E00               	movlw	0
 12934  003814  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12935                           
 12936                           ; BSR set to: 0
 12937  003816  5184               	movf	___lldiv@divisor& (0+255),w,b
 12938  003818  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12939  00381A  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12940  00381C  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12941  00381E  B4D8               	btfsc	status,2,c
 12942  003820  D02A               	goto	l765
 12943                           
 12944                           ; BSR set to: 0
 12945  003822  0E01               	movlw	1
 12946  003824  6F8C               	movwf	___lldiv@counter& (0+255),b
 12947  003826  D006               	goto	l7415
 12948  003828                     l7413:
 12949                           
 12950                           ; BSR set to: 0
 12951  003828  90D8               	bcf	status,0,c
 12952  00382A  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12953  00382C  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12954  00382E  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12955  003830  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12956  003832  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12957  003834                     l7415:
 12958                           
 12959                           ; BSR set to: 0
 12960  003834  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12961  003836  D7F8               	goto	l7413
 12962  003838                     u7990:
 12963                           
 12964                           ; BSR set to: 0
 12965  003838  90D8               	bcf	status,0,c
 12966  00383A  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12967  00383C  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12968  00383E  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12969  003840  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12970                           
 12971                           ; BSR set to: 0
 12972  003842  5184               	movf	___lldiv@divisor& (0+255),w,b
 12973  003844  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12974  003846  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12975  003848  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12976  00384A  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12977  00384C  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12978  00384E  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12979  003850  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12980  003852  A0D8               	btfss	status,0,c
 12981  003854  D009               	goto	l7425
 12982                           
 12983                           ; BSR set to: 0
 12984  003856  5184               	movf	___lldiv@divisor& (0+255),w,b
 12985  003858  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12986  00385A  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12987  00385C  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12988  00385E  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12989  003860  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12990  003862  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12991  003864  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12992                           
 12993                           ; BSR set to: 0
 12994  003866  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12995  003868                     l7425:
 12996                           
 12997                           ; BSR set to: 0
 12998  003868  90D8               	bcf	status,0,c
 12999  00386A  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13000  00386C  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13001  00386E  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13002  003870  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 13003                           
 13004                           ; BSR set to: 0
 13005  003872  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 13006  003874  D7E1               	goto	u7990
 13007  003876                     l765:
 13008                           
 13009                           ; BSR set to: 0
 13010  003876  C088  F080         	movff	___lldiv@quotient,?___lldiv
 13011  00387A  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 13012  00387E  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 13013  003882  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 13014                           
 13015                           ; BSR set to: 0
 13016  003886  0012               	return		;funcret
 13017  003888                     __end_of___lldiv:
 13018                           	opt callstack 0
 13019                           
 13020 ;; *************** function _I2C_Master_RepeatedStart *****************
 13021 ;; Defined at:
 13022 ;;		line 60 in file "I2C.c"
 13023 ;; Parameters:    Size  Location     Type
 13024 ;;		None
 13025 ;; Auto vars:     Size  Location     Type
 13026 ;;		None
 13027 ;; Return value:  Size  Location     Type
 13028 ;;                  1    wreg      void 
 13029 ;; Registers used:
 13030 ;;		wreg, status,2, status,0, cstack
 13031 ;; Tracked objects:
 13032 ;;		On entry : 0/0
 13033 ;;		On exit  : 0/0
 13034 ;;		Unchanged: 0/0
 13035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13040 ;;Total ram usage:        0 bytes
 13041 ;; Hardware stack levels used:    1
 13042 ;; Hardware stack levels required when called:    4
 13043 ;; This function calls:
 13044 ;;		_I2C_Master_Wait
 13045 ;; This function is called by:
 13046 ;;		_main
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text53
 13051  003F64                     __ptext53:
 13052                           	opt callstack 0
 13053  003F64                     _I2C_Master_RepeatedStart:
 13054                           	opt callstack 26
 13055                           
 13056                           ;I2C.c: 61:     I2C_Master_Wait();
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;incstack = 0
 13060  003F64  EC8B  F01F         	call	_I2C_Master_Wait	;wreg free
 13061                           
 13062                           ;I2C.c: 62:     SSPCON2bits.RSEN = 1;
 13063  003F68  82C5               	bsf	4037,1,c	;volatile
 13064  003F6A  0012               	return		;funcret
 13065  003F6C                     __end_of_I2C_Master_RepeatedStart:
 13066                           	opt callstack 0
 13067                           
 13068 ;; *************** function _I2C_Master_Wait *****************
 13069 ;; Defined at:
 13070 ;;		line 21 in file "I2C.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;		None
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;		None
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  1    wreg      void 
 13077 ;; Registers used:
 13078 ;;		wreg, status,2, status,0
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13086 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13087 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13088 ;;Total ram usage:        1 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; Hardware stack levels required when called:    3
 13091 ;; This function calls:
 13092 ;;		Nothing
 13093 ;; This function is called by:
 13094 ;;		_I2C_Master_Start
 13095 ;;		_I2C_Master_RepeatedStart
 13096 ;;		_I2C_Master_Stop
 13097 ;;		_I2C_Master_Write
 13098 ;;		_I2C_Master_Read
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102                           	psect	text54
 13103  003F16                     __ptext54:
 13104                           	opt callstack 0
 13105  003F16                     _I2C_Master_Wait:
 13106                           	opt callstack 25
 13107                           
 13108                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 13109                           
 13110                           ;I2C.c: 28:     }
 13111                           
 13112                           ;incstack = 0
 13113  003F16  B4C7               	btfsc	4039,2,c	;volatile
 13114  003F18  D7FE               	goto	_I2C_Master_Wait
 13115  003F1A  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 13116  003F1E  0E1F               	movlw	31
 13117  003F20  0100               	movlb	0	; () banked
 13118  003F22  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 13119  003F24  B4D8               	btfsc	status,2,c
 13120  003F26  0012               	return	
 13121  003F28  D7F6               	goto	_I2C_Master_Wait
 13122  003F2A                     __end_of_I2C_Master_Wait:
 13123                           	opt callstack 0
 13124                           
 13125 ;; *************** function _ISR *****************
 13126 ;; Defined at:
 13127 ;;		line 71 in file "main.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;		None
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;		None
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  1    wreg      void 
 13134 ;; Registers used:
 13135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13136 ;; Tracked objects:
 13137 ;;		On entry : 0/0
 13138 ;;		On exit  : 0/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13145 ;;Total ram usage:        2 bytes
 13146 ;; Hardware stack levels used:    1
 13147 ;; Hardware stack levels required when called:    2
 13148 ;; This function calls:
 13149 ;;		_echo
 13150 ;; This function is called by:
 13151 ;;		Interrupt level 2
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155                           	psect	intcode
 13156  000008                     __pintcode:
 13157                           	opt callstack 0
 13158  000008                     _ISR:
 13159                           	opt callstack 14
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;incstack = 0
 13163  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13164  00000A  ED1E  F01E         	call	int_func,f	;refresh shadow registers
 13165                           
 13166                           	psect	intcode_body
 13167  003C3C                     __pintcode_body:
 13168                           	opt callstack 14
 13169  003C3C                     int_func:
 13170                           	opt callstack 14
 13171  003C3C  0006               	pop		; remove dummy address from shadow register refresh
 13172  003C3E  CFD9 F036          	movff	fsr2l,??_ISR
 13173  003C42  CFDA F037          	movff	fsr2h,??_ISR+1
 13174                           
 13175                           ;main.c: 72:  if(RBIF == 1){
 13176  003C46  A0F2               	btfss	4082,0,c	;volatile
 13177  003C48  D012               	goto	i2l398
 13178                           
 13179                           ;main.c: 73:         if (sens){
 13180  003C4A  5058               	movf	_sens,w,c	;volatile
 13181  003C4C  1059               	iorwf	_sens+1,w,c	;volatile
 13182  003C4E  B4D8               	btfsc	status,2,c
 13183  003C50  D005               	goto	i2l6281
 13184                           
 13185                           ;main.c: 74:             RBIE = 0;
 13186  003C52  96F2               	bcf	4082,3,c	;volatile
 13187                           
 13188                           ;main.c: 75:             echo();
 13189  003C54  EC77  F007         	call	_echo	;wreg free
 13190                           
 13191                           ;main.c: 76:             RBIF = 0;
 13192  003C58  90F2               	bcf	4082,0,c	;volatile
 13193                           
 13194                           ;main.c: 77:             RBIE = 1;
 13195  003C5A  86F2               	bsf	4082,3,c	;volatile
 13196  003C5C                     i2l6281:
 13197                           
 13198                           ;main.c: 79:         if (~sens){
 13199  003C5C  2858               	incf	_sens,w,c	;volatile
 13200  003C5E  E103               	bnz	i2u654_40
 13201  003C60  2859               	incf	_sens+1,w,c	;volatile
 13202  003C62  B4D8               	btfsc	status,2,c
 13203  003C64  D004               	goto	i2l398
 13204  003C66                     i2u654_40:
 13205                           
 13206                           ;main.c: 80:             key_was_pressed = 1;
 13207  003C66  0E01               	movlw	1
 13208  003C68  0101               	movlb	1	; () banked
 13209  003C6A  6FEF               	movwf	_key_was_pressed& (0+255),b	;volatile
 13210                           
 13211                           ; BSR set to: 1
 13212                           ;main.c: 81:             INT1IF = 0;
 13213  003C6C  90F0               	bcf	4080,0,c	;volatile
 13214  003C6E                     i2l398:
 13215  003C6E  C037  FFDA         	movff	??_ISR+1,fsr2h
 13216  003C72  C036  FFD9         	movff	??_ISR,fsr2l
 13217  003C76  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13218  003C78  0011               	retfie		f
 13219  003C7A                     __end_of_ISR:
 13220                           	opt callstack 0
 13221                           
 13222 ;; *************** function _echo *****************
 13223 ;; Defined at:
 13224 ;;		line 99 in file "main.c"
 13225 ;; Parameters:    Size  Location     Type
 13226 ;;		None
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;		None
 13229 ;; Return value:  Size  Location     Type
 13230 ;;                  1    wreg      void 
 13231 ;; Registers used:
 13232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13233 ;; Tracked objects:
 13234 ;;		On entry : 0/0
 13235 ;;		On exit  : 0/0
 13236 ;;		Unchanged: 0/0
 13237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13240 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13241 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13242 ;;Total ram usage:        4 bytes
 13243 ;; Hardware stack levels used:    1
 13244 ;; Hardware stack levels required when called:    1
 13245 ;; This function calls:
 13246 ;;		___fldiv
 13247 ;;		___fltol
 13248 ;;		___xxtofl
 13249 ;;		i2___awdiv
 13250 ;; This function is called by:
 13251 ;;		_ISR
 13252 ;; This function uses a non-reentrant model
 13253 ;;
 13254                           
 13255                           	psect	text56
 13256  000EEE                     __ptext56:
 13257                           	opt callstack 0
 13258  000EEE                     _echo:
 13259                           	opt callstack 14
 13260                           
 13261                           ;main.c: 100:     if (b==1){
 13262                           
 13263                           ;incstack = 0
 13264  000EEE  045A               	decf	_b,w,c
 13265  000EF0  105B               	iorwf	_b+1,w,c
 13266  000EF2  A4D8               	btfss	status,2,c
 13267  000EF4  D0A2               	goto	i2l5731
 13268                           
 13269                           ;main.c: 101:         if (RB7 == 1){
 13270  000EF6  BE81               	btfsc	3969,7,c	;volatile
 13271                           
 13272                           ;main.c: 102:             TMR1ON = 1;
 13273  000EF8  80CD               	bsf	4045,0,c	;volatile
 13274                           
 13275                           ;main.c: 104:         if (RB7 == 0){
 13276                           
 13277                           ;main.c: 103:         }
 13278  000EFA  BE81               	btfsc	3969,7,c	;volatile
 13279  000EFC  D037               	goto	i2l5707
 13280                           
 13281                           ;main.c: 105:             TMR1ON = 0;
 13282  000EFE  90CD               	bcf	4045,0,c	;volatile
 13283                           
 13284                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 13285  000F00  0EAE               	movlw	174
 13286  000F02  6E13               	movwf	___fldiv@a,c
 13287  000F04  0E47               	movlw	71
 13288  000F06  6E14               	movwf	___fldiv@a+1,c
 13289  000F08  0E6B               	movlw	107
 13290  000F0A  6E15               	movwf	___fldiv@a+2,c
 13291  000F0C  0E42               	movlw	66
 13292  000F0E  6E16               	movwf	___fldiv@a+3,c
 13293  000F10  50CF               	movf	4047,w,c	;volatile
 13294  000F12  6E33               	movwf	(??_echo+1)& (0+255),c
 13295  000F14  6A32               	clrf	??_echo& (0+255),c
 13296  000F16  50CE               	movf	4046,w,c	;volatile
 13297  000F18  6E34               	movwf	(??_echo+2)& (0+255),c
 13298  000F1A  6A35               	clrf	(??_echo+3)& (0+255),c
 13299  000F1C  5032               	movf	??_echo,w,c
 13300  000F1E  1234               	iorwf	??_echo+2,f,c
 13301  000F20  5033               	movf	??_echo+1,w,c
 13302  000F22  1235               	iorwf	??_echo+3,f,c
 13303  000F24  C034  F001         	movff	??_echo+2,___xxtofl@val
 13304  000F28  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13305  000F2C  0E00               	movlw	0
 13306  000F2E  BE02               	btfsc	___xxtofl@val+1,7,c
 13307  000F30  0EFF               	movlw	-1
 13308  000F32  6E03               	movwf	___xxtofl@val+2,c
 13309  000F34  6E04               	movwf	___xxtofl@val+3,c
 13310  000F36  0E01               	movlw	1
 13311  000F38  EC7A  F016         	call	___xxtofl
 13312  000F3C  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13313  000F40  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13314  000F44  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13315  000F48  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13316  000F4C  EC86  F00D         	call	___fldiv	;wreg free
 13317  000F50  C00F  F028         	movff	?___fldiv,___fltol@f1
 13318  000F54  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13319  000F58  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13320  000F5C  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13321  000F60  EC24  F01A         	call	___fltol	;wreg free
 13322  000F64  C028  F061         	movff	?___fltol,_a
 13323  000F68  C029  F062         	movff	?___fltol+1,_a+1
 13324  000F6C                     i2l5707:
 13325                           
 13326                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 13327  000F6C  BE62               	btfsc	_a+1,7,c
 13328  000F6E  D065               	goto	i2l5731
 13329  000F70  5062               	movf	_a+1,w,c
 13330  000F72  E104               	bnz	i2u567_40
 13331  000F74  0E02               	movlw	2
 13332  000F76  5C61               	subwf	_a,w,c
 13333  000F78  A0D8               	btfss	status,0,c
 13334  000F7A  D05F               	goto	i2l5731
 13335  000F7C                     i2u567_40:
 13336  000F7C  BE62               	btfsc	_a+1,7,c
 13337  000F7E  D006               	goto	i2u568_40
 13338  000F80  5062               	movf	_a+1,w,c
 13339  000F82  E15B               	bnz	i2l5731
 13340  000F84  0EC9               	movlw	201
 13341  000F86  5C61               	subwf	_a,w,c
 13342  000F88  B0D8               	btfsc	status,0,c
 13343  000F8A  D057               	goto	i2l5731
 13344  000F8C                     i2u568_40:
 13345                           
 13346                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 13347  000F8C  0440               	decf	_sumf,w,c
 13348  000F8E  B4D8               	btfsc	status,2,c
 13349  000F90  D01B               	goto	i2l5723
 13350  000F92  0102               	movlb	2	; () banked
 13351  000F94  5150               	movf	_dist_final& (0+255),w,b
 13352  000F96  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 13353  000F98  B4D8               	btfsc	status,2,c
 13354  000F9A  D016               	goto	i2l5723
 13355                           
 13356                           ; BSR set to: 2
 13357  000F9C  5152               	movf	(_dist_final+2)& (0+255),w,b
 13358  000F9E  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 13359  000FA0  B4D8               	btfsc	status,2,c
 13360  000FA2  D012               	goto	i2l5723
 13361                           
 13362                           ; BSR set to: 2
 13363  000FA4  5154               	movf	(_dist_final+4)& (0+255),w,b
 13364  000FA6  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 13365  000FA8  B4D8               	btfsc	status,2,c
 13366  000FAA  D00E               	goto	i2l5723
 13367                           
 13368                           ; BSR set to: 2
 13369                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 13370  000FAC  5154               	movf	(_dist_final+4)& (0+255),w,b
 13371  000FAE  2552               	addwf	(_dist_final+2)& (0+255),w,b
 13372  000FB0  6E32               	movwf	??_echo& (0+255),c
 13373  000FB2  5155               	movf	(_dist_final+5)& (0+255),w,b
 13374  000FB4  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 13375  000FB6  6E33               	movwf	(??_echo+1)& (0+255),c
 13376  000FB8  5150               	movf	_dist_final& (0+255),w,b
 13377  000FBA  2432               	addwf	??_echo,w,c
 13378  000FBC  6E38               	movwf	_sum,c
 13379  000FBE  5151               	movf	(_dist_final+1)& (0+255),w,b
 13380  000FC0  2033               	addwfc	??_echo+1,w,c
 13381  000FC2  6E39               	movwf	_sum+1,c
 13382                           
 13383                           ; BSR set to: 2
 13384                           ;main.c: 113:                 sumf[0] = 1;
 13385  000FC4  0E01               	movlw	1
 13386  000FC6  6E40               	movwf	_sumf,c
 13387  000FC8                     i2l5723:
 13388                           
 13389                           ;main.c: 115:             if (sumf[0]){
 13390  000FC8  5040               	movf	_sumf,w,c
 13391  000FCA  B4D8               	btfsc	status,2,c
 13392  000FCC  D029               	goto	i2l5729
 13393                           
 13394                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 13395  000FCE  90D8               	bcf	status,0,c
 13396  000FD0  3450               	rlcf	_meas,w,c	;volatile
 13397  000FD2  6ED9               	movwf	fsr2l,c
 13398  000FD4  3451               	rlcf	_meas+1,w,c	;volatile
 13399  000FD6  6EDA               	movwf	fsr2h,c
 13400  000FD8  0E50               	movlw	low _dist_final
 13401  000FDA  26D9               	addwf	fsr2l,f,c
 13402  000FDC  0E02               	movlw	high _dist_final
 13403  000FDE  22DA               	addwfc	fsr2h,f,c
 13404  000FE0  CFDE F032          	movff	postinc2,??_echo
 13405  000FE4  CFDD F033          	movff	postdec2,??_echo+1
 13406  000FE8  C038  F034         	movff	_sum,??_echo+2
 13407  000FEC  C039  F035         	movff	_sum+1,??_echo+3
 13408  000FF0  5032               	movf	??_echo,w,c
 13409  000FF2  5E34               	subwf	??_echo+2,f,c
 13410  000FF4  5033               	movf	??_echo+1,w,c
 13411  000FF6  5A35               	subwfb	??_echo+3,f,c
 13412  000FF8  5061               	movf	_a,w,c
 13413  000FFA  2434               	addwf	??_echo+2,w,c
 13414  000FFC  6E38               	movwf	_sum,c
 13415  000FFE  5062               	movf	_a+1,w,c
 13416  001000  2035               	addwfc	??_echo+3,w,c
 13417  001002  6E39               	movwf	_sum+1,c
 13418                           
 13419                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 13420  001004  C038  F001         	movff	_sum,i2___awdiv@dividend
 13421  001008  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 13422  00100C  0E00               	movlw	0
 13423  00100E  6E04               	movwf	i2___awdiv@divisor+1,c
 13424  001010  0E05               	movlw	5
 13425  001012  6E03               	movwf	i2___awdiv@divisor,c
 13426  001014  EC44  F01C         	call	i2___awdiv	;wreg free
 13427  001018  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 13428  00101C  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 13429  001020                     i2l5729:
 13430                           
 13431                           ;main.c: 119:             dist_final[0][meas] = a[0];
 13432  001020  90D8               	bcf	status,0,c
 13433  001022  3450               	rlcf	_meas,w,c	;volatile
 13434  001024  6ED9               	movwf	fsr2l,c
 13435  001026  3451               	rlcf	_meas+1,w,c	;volatile
 13436  001028  6EDA               	movwf	fsr2h,c
 13437  00102A  0E50               	movlw	low _dist_final
 13438  00102C  26D9               	addwf	fsr2l,f,c
 13439  00102E  0E02               	movlw	high _dist_final
 13440  001030  22DA               	addwfc	fsr2h,f,c
 13441  001032  C061  FFDE         	movff	_a,postinc2
 13442  001036  C062  FFDD         	movff	_a+1,postdec2
 13443  00103A                     i2l5731:
 13444                           
 13445                           ;main.c: 122:     if (b==2){
 13446  00103A  0E02               	movlw	2
 13447  00103C  185A               	xorwf	_b,w,c
 13448  00103E  105B               	iorwf	_b+1,w,c
 13449  001040  A4D8               	btfss	status,2,c
 13450  001042  D0A4               	goto	i2l5765
 13451                           
 13452                           ;main.c: 123:         if (RB6 == 1){
 13453  001044  BC81               	btfsc	3969,6,c	;volatile
 13454                           
 13455                           ;main.c: 124:             TMR1ON = 1;
 13456  001046  80CD               	bsf	4045,0,c	;volatile
 13457                           
 13458                           ;main.c: 126:         if (RB6 == 0){
 13459                           
 13460                           ;main.c: 125:         }
 13461  001048  BC81               	btfsc	3969,6,c	;volatile
 13462  00104A  D037               	goto	i2l5741
 13463                           
 13464                           ;main.c: 127:             TMR1ON = 0;
 13465  00104C  90CD               	bcf	4045,0,c	;volatile
 13466                           
 13467                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 13468  00104E  0EAE               	movlw	174
 13469  001050  6E13               	movwf	___fldiv@a,c
 13470  001052  0E47               	movlw	71
 13471  001054  6E14               	movwf	___fldiv@a+1,c
 13472  001056  0E6B               	movlw	107
 13473  001058  6E15               	movwf	___fldiv@a+2,c
 13474  00105A  0E42               	movlw	66
 13475  00105C  6E16               	movwf	___fldiv@a+3,c
 13476  00105E  50CF               	movf	4047,w,c	;volatile
 13477  001060  6E33               	movwf	(??_echo+1)& (0+255),c
 13478  001062  6A32               	clrf	??_echo& (0+255),c
 13479  001064  50CE               	movf	4046,w,c	;volatile
 13480  001066  6E34               	movwf	(??_echo+2)& (0+255),c
 13481  001068  6A35               	clrf	(??_echo+3)& (0+255),c
 13482  00106A  5032               	movf	??_echo,w,c
 13483  00106C  1234               	iorwf	??_echo+2,f,c
 13484  00106E  5033               	movf	??_echo+1,w,c
 13485  001070  1235               	iorwf	??_echo+3,f,c
 13486  001072  C034  F001         	movff	??_echo+2,___xxtofl@val
 13487  001076  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13488  00107A  0E00               	movlw	0
 13489  00107C  BE02               	btfsc	___xxtofl@val+1,7,c
 13490  00107E  0EFF               	movlw	-1
 13491  001080  6E03               	movwf	___xxtofl@val+2,c
 13492  001082  6E04               	movwf	___xxtofl@val+3,c
 13493  001084  0E01               	movlw	1
 13494  001086  EC7A  F016         	call	___xxtofl
 13495  00108A  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13496  00108E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13497  001092  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13498  001096  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13499  00109A  EC86  F00D         	call	___fldiv	;wreg free
 13500  00109E  C00F  F028         	movff	?___fldiv,___fltol@f1
 13501  0010A2  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13502  0010A6  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13503  0010AA  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13504  0010AE  EC24  F01A         	call	___fltol	;wreg free
 13505  0010B2  C028  F063         	movff	?___fltol,_a+2
 13506  0010B6  C029  F064         	movff	?___fltol+1,_a+3
 13507  0010BA                     i2l5741:
 13508                           
 13509                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 13510  0010BA  BE64               	btfsc	_a+3,7,c
 13511  0010BC  D067               	goto	i2l5765
 13512  0010BE  5064               	movf	_a+3,w,c
 13513  0010C0  E104               	bnz	i2u577_40
 13514  0010C2  0E02               	movlw	2
 13515  0010C4  5C63               	subwf	_a+2,w,c
 13516  0010C6  A0D8               	btfss	status,0,c
 13517  0010C8  D061               	goto	i2l5765
 13518  0010CA                     i2u577_40:
 13519  0010CA  BE64               	btfsc	_a+3,7,c
 13520  0010CC  D006               	goto	i2u578_40
 13521  0010CE  5064               	movf	_a+3,w,c
 13522  0010D0  E15D               	bnz	i2l5765
 13523  0010D2  0EC9               	movlw	201
 13524  0010D4  5C63               	subwf	_a+2,w,c
 13525  0010D6  B0D8               	btfsc	status,0,c
 13526  0010D8  D059               	goto	i2l5765
 13527  0010DA                     i2u578_40:
 13528                           
 13529                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 13530  0010DA  0441               	decf	_sumf+1,w,c
 13531  0010DC  B4D8               	btfsc	status,2,c
 13532  0010DE  D01B               	goto	i2l5757
 13533  0010E0  0102               	movlb	2	; () banked
 13534  0010E2  515C               	movf	(_dist_final+12)& (0+255),w,b
 13535  0010E4  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 13536  0010E6  B4D8               	btfsc	status,2,c
 13537  0010E8  D016               	goto	i2l5757
 13538                           
 13539                           ; BSR set to: 2
 13540  0010EA  515E               	movf	(_dist_final+14)& (0+255),w,b
 13541  0010EC  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 13542  0010EE  B4D8               	btfsc	status,2,c
 13543  0010F0  D012               	goto	i2l5757
 13544                           
 13545                           ; BSR set to: 2
 13546  0010F2  5160               	movf	(_dist_final+16)& (0+255),w,b
 13547  0010F4  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 13548  0010F6  B4D8               	btfsc	status,2,c
 13549  0010F8  D00E               	goto	i2l5757
 13550                           
 13551                           ; BSR set to: 2
 13552                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 13553  0010FA  515E               	movf	(_dist_final+14)& (0+255),w,b
 13554  0010FC  255C               	addwf	(_dist_final+12)& (0+255),w,b
 13555  0010FE  6E32               	movwf	??_echo& (0+255),c
 13556  001100  515F               	movf	(_dist_final+15)& (0+255),w,b
 13557  001102  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 13558  001104  6E33               	movwf	(??_echo+1)& (0+255),c
 13559  001106  5160               	movf	(_dist_final+16)& (0+255),w,b
 13560  001108  2432               	addwf	??_echo,w,c
 13561  00110A  6E3A               	movwf	_sum+2,c
 13562  00110C  5161               	movf	(_dist_final+17)& (0+255),w,b
 13563  00110E  2033               	addwfc	??_echo+1,w,c
 13564  001110  6E3B               	movwf	_sum+3,c
 13565                           
 13566                           ; BSR set to: 2
 13567                           ;main.c: 135:             sumf[1] = 1;
 13568  001112  0E01               	movlw	1
 13569  001114  6E41               	movwf	_sumf+1,c
 13570  001116                     i2l5757:
 13571                           
 13572                           ;main.c: 137:         if (sumf[1]){
 13573  001116  5041               	movf	_sumf+1,w,c
 13574  001118  B4D8               	btfsc	status,2,c
 13575  00111A  D02B               	goto	i2l5763
 13576                           
 13577                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 13578  00111C  90D8               	bcf	status,0,c
 13579  00111E  3450               	rlcf	_meas,w,c	;volatile
 13580  001120  6ED9               	movwf	fsr2l,c
 13581  001122  3451               	rlcf	_meas+1,w,c	;volatile
 13582  001124  6EDA               	movwf	fsr2h,c
 13583  001126  0E5C               	movlw	low (_dist_final+12)
 13584  001128  26D9               	addwf	fsr2l,f,c
 13585  00112A  0E02               	movlw	high (_dist_final+12)
 13586  00112C  22DA               	addwfc	fsr2h,f,c
 13587  00112E  CFDE F032          	movff	postinc2,??_echo
 13588  001132  CFDD F033          	movff	postdec2,??_echo+1
 13589  001136  EE20  F03A         	lfsr	2,_sum+2
 13590  00113A  CFDE F034          	movff	postinc2,??_echo+2
 13591  00113E  CFDD F035          	movff	postdec2,??_echo+3
 13592  001142  5032               	movf	??_echo,w,c
 13593  001144  5E34               	subwf	??_echo+2,f,c
 13594  001146  5033               	movf	??_echo+1,w,c
 13595  001148  5A35               	subwfb	??_echo+3,f,c
 13596  00114A  5063               	movf	_a+2,w,c
 13597  00114C  2434               	addwf	??_echo+2,w,c
 13598  00114E  6E3A               	movwf	_sum+2,c
 13599  001150  5064               	movf	_a+3,w,c
 13600  001152  2035               	addwfc	??_echo+3,w,c
 13601  001154  6E3B               	movwf	_sum+3,c
 13602                           
 13603                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 13604  001156  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 13605  00115A  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 13606  00115E  0E00               	movlw	0
 13607  001160  6E04               	movwf	i2___awdiv@divisor+1,c
 13608  001162  0E05               	movlw	5
 13609  001164  6E03               	movwf	i2___awdiv@divisor,c
 13610  001166  EC44  F01C         	call	i2___awdiv	;wreg free
 13611  00116A  C001  F266         	movff	?i2___awdiv,_dist_final+22
 13612  00116E  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 13613  001172                     i2l5763:
 13614                           
 13615                           ;main.c: 141:         dist_final[1][meas] = a[1];
 13616  001172  90D8               	bcf	status,0,c
 13617  001174  3450               	rlcf	_meas,w,c	;volatile
 13618  001176  6ED9               	movwf	fsr2l,c
 13619  001178  3451               	rlcf	_meas+1,w,c	;volatile
 13620  00117A  6EDA               	movwf	fsr2h,c
 13621  00117C  0E5C               	movlw	low (_dist_final+12)
 13622  00117E  26D9               	addwf	fsr2l,f,c
 13623  001180  0E02               	movlw	high (_dist_final+12)
 13624  001182  22DA               	addwfc	fsr2h,f,c
 13625  001184  C063  FFDE         	movff	_a+2,postinc2
 13626  001188  C064  FFDD         	movff	_a+3,postdec2
 13627  00118C                     i2l5765:
 13628                           
 13629                           ;main.c: 144:     if (b==3){
 13630  00118C  0E03               	movlw	3
 13631  00118E  185A               	xorwf	_b,w,c
 13632  001190  105B               	iorwf	_b+1,w,c
 13633  001192  A4D8               	btfss	status,2,c
 13634  001194  D0A4               	goto	i2l5799
 13635                           
 13636                           ;main.c: 145:         if (RB5 == 1){
 13637  001196  BA81               	btfsc	3969,5,c	;volatile
 13638                           
 13639                           ;main.c: 146:             TMR1ON = 1;
 13640  001198  80CD               	bsf	4045,0,c	;volatile
 13641                           
 13642                           ;main.c: 148:         if (RB5 == 0){
 13643                           
 13644                           ;main.c: 147:         }
 13645  00119A  BA81               	btfsc	3969,5,c	;volatile
 13646  00119C  D037               	goto	i2l5775
 13647                           
 13648                           ;main.c: 149:             TMR1ON = 0;
 13649  00119E  90CD               	bcf	4045,0,c	;volatile
 13650                           
 13651                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 13652  0011A0  0EAE               	movlw	174
 13653  0011A2  6E13               	movwf	___fldiv@a,c
 13654  0011A4  0E47               	movlw	71
 13655  0011A6  6E14               	movwf	___fldiv@a+1,c
 13656  0011A8  0E6B               	movlw	107
 13657  0011AA  6E15               	movwf	___fldiv@a+2,c
 13658  0011AC  0E42               	movlw	66
 13659  0011AE  6E16               	movwf	___fldiv@a+3,c
 13660  0011B0  50CF               	movf	4047,w,c	;volatile
 13661  0011B2  6E33               	movwf	(??_echo+1)& (0+255),c
 13662  0011B4  6A32               	clrf	??_echo& (0+255),c
 13663  0011B6  50CE               	movf	4046,w,c	;volatile
 13664  0011B8  6E34               	movwf	(??_echo+2)& (0+255),c
 13665  0011BA  6A35               	clrf	(??_echo+3)& (0+255),c
 13666  0011BC  5032               	movf	??_echo,w,c
 13667  0011BE  1234               	iorwf	??_echo+2,f,c
 13668  0011C0  5033               	movf	??_echo+1,w,c
 13669  0011C2  1235               	iorwf	??_echo+3,f,c
 13670  0011C4  C034  F001         	movff	??_echo+2,___xxtofl@val
 13671  0011C8  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13672  0011CC  0E00               	movlw	0
 13673  0011CE  BE02               	btfsc	___xxtofl@val+1,7,c
 13674  0011D0  0EFF               	movlw	-1
 13675  0011D2  6E03               	movwf	___xxtofl@val+2,c
 13676  0011D4  6E04               	movwf	___xxtofl@val+3,c
 13677  0011D6  0E01               	movlw	1
 13678  0011D8  EC7A  F016         	call	___xxtofl
 13679  0011DC  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13680  0011E0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13681  0011E4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13682  0011E8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13683  0011EC  EC86  F00D         	call	___fldiv	;wreg free
 13684  0011F0  C00F  F028         	movff	?___fldiv,___fltol@f1
 13685  0011F4  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13686  0011F8  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13687  0011FC  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13688  001200  EC24  F01A         	call	___fltol	;wreg free
 13689  001204  C028  F065         	movff	?___fltol,_a+4
 13690  001208  C029  F066         	movff	?___fltol+1,_a+5
 13691  00120C                     i2l5775:
 13692                           
 13693                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 13694  00120C  BE66               	btfsc	_a+5,7,c
 13695  00120E  D067               	goto	i2l5799
 13696  001210  5066               	movf	_a+5,w,c
 13697  001212  E104               	bnz	i2u587_40
 13698  001214  0E02               	movlw	2
 13699  001216  5C65               	subwf	_a+4,w,c
 13700  001218  A0D8               	btfss	status,0,c
 13701  00121A  D061               	goto	i2l5799
 13702  00121C                     i2u587_40:
 13703  00121C  BE66               	btfsc	_a+5,7,c
 13704  00121E  D006               	goto	i2u588_40
 13705  001220  5066               	movf	_a+5,w,c
 13706  001222  E15D               	bnz	i2l5799
 13707  001224  0EC9               	movlw	201
 13708  001226  5C65               	subwf	_a+4,w,c
 13709  001228  B0D8               	btfsc	status,0,c
 13710  00122A  D059               	goto	i2l5799
 13711  00122C                     i2u588_40:
 13712                           
 13713                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 13714  00122C  0442               	decf	_sumf+2,w,c
 13715  00122E  B4D8               	btfsc	status,2,c
 13716  001230  D01B               	goto	i2l5791
 13717  001232  0102               	movlb	2	; () banked
 13718  001234  5168               	movf	(_dist_final+24)& (0+255),w,b
 13719  001236  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 13720  001238  B4D8               	btfsc	status,2,c
 13721  00123A  D016               	goto	i2l5791
 13722                           
 13723                           ; BSR set to: 2
 13724  00123C  516A               	movf	(_dist_final+26)& (0+255),w,b
 13725  00123E  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 13726  001240  B4D8               	btfsc	status,2,c
 13727  001242  D012               	goto	i2l5791
 13728                           
 13729                           ; BSR set to: 2
 13730  001244  516C               	movf	(_dist_final+28)& (0+255),w,b
 13731  001246  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 13732  001248  B4D8               	btfsc	status,2,c
 13733  00124A  D00E               	goto	i2l5791
 13734                           
 13735                           ; BSR set to: 2
 13736                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 13737  00124C  516A               	movf	(_dist_final+26)& (0+255),w,b
 13738  00124E  2568               	addwf	(_dist_final+24)& (0+255),w,b
 13739  001250  6E32               	movwf	??_echo& (0+255),c
 13740  001252  516B               	movf	(_dist_final+27)& (0+255),w,b
 13741  001254  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 13742  001256  6E33               	movwf	(??_echo+1)& (0+255),c
 13743  001258  516C               	movf	(_dist_final+28)& (0+255),w,b
 13744  00125A  2432               	addwf	??_echo,w,c
 13745  00125C  6E3C               	movwf	_sum+4,c
 13746  00125E  516D               	movf	(_dist_final+29)& (0+255),w,b
 13747  001260  2033               	addwfc	??_echo+1,w,c
 13748  001262  6E3D               	movwf	_sum+5,c
 13749                           
 13750                           ; BSR set to: 2
 13751                           ;main.c: 157:             sumf[2] = 1;
 13752  001264  0E01               	movlw	1
 13753  001266  6E42               	movwf	_sumf+2,c
 13754  001268                     i2l5791:
 13755                           
 13756                           ;main.c: 159:         if (sumf[2]){
 13757  001268  5042               	movf	_sumf+2,w,c
 13758  00126A  B4D8               	btfsc	status,2,c
 13759  00126C  D02B               	goto	i2l5797
 13760                           
 13761                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 13762  00126E  90D8               	bcf	status,0,c
 13763  001270  3450               	rlcf	_meas,w,c	;volatile
 13764  001272  6ED9               	movwf	fsr2l,c
 13765  001274  3451               	rlcf	_meas+1,w,c	;volatile
 13766  001276  6EDA               	movwf	fsr2h,c
 13767  001278  0E68               	movlw	low (_dist_final+24)
 13768  00127A  26D9               	addwf	fsr2l,f,c
 13769  00127C  0E02               	movlw	high (_dist_final+24)
 13770  00127E  22DA               	addwfc	fsr2h,f,c
 13771  001280  CFDE F032          	movff	postinc2,??_echo
 13772  001284  CFDD F033          	movff	postdec2,??_echo+1
 13773  001288  EE20  F03C         	lfsr	2,_sum+4
 13774  00128C  CFDE F034          	movff	postinc2,??_echo+2
 13775  001290  CFDD F035          	movff	postdec2,??_echo+3
 13776  001294  5032               	movf	??_echo,w,c
 13777  001296  5E34               	subwf	??_echo+2,f,c
 13778  001298  5033               	movf	??_echo+1,w,c
 13779  00129A  5A35               	subwfb	??_echo+3,f,c
 13780  00129C  5065               	movf	_a+4,w,c
 13781  00129E  2434               	addwf	??_echo+2,w,c
 13782  0012A0  6E3C               	movwf	_sum+4,c
 13783  0012A2  5066               	movf	_a+5,w,c
 13784  0012A4  2035               	addwfc	??_echo+3,w,c
 13785  0012A6  6E3D               	movwf	_sum+5,c
 13786                           
 13787                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 13788  0012A8  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 13789  0012AC  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 13790  0012B0  0E00               	movlw	0
 13791  0012B2  6E04               	movwf	i2___awdiv@divisor+1,c
 13792  0012B4  0E05               	movlw	5
 13793  0012B6  6E03               	movwf	i2___awdiv@divisor,c
 13794  0012B8  EC44  F01C         	call	i2___awdiv	;wreg free
 13795  0012BC  C001  F272         	movff	?i2___awdiv,_dist_final+34
 13796  0012C0  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 13797  0012C4                     i2l5797:
 13798                           
 13799                           ;main.c: 163:         dist_final[2][meas] = a[2];
 13800  0012C4  90D8               	bcf	status,0,c
 13801  0012C6  3450               	rlcf	_meas,w,c	;volatile
 13802  0012C8  6ED9               	movwf	fsr2l,c
 13803  0012CA  3451               	rlcf	_meas+1,w,c	;volatile
 13804  0012CC  6EDA               	movwf	fsr2h,c
 13805  0012CE  0E68               	movlw	low (_dist_final+24)
 13806  0012D0  26D9               	addwf	fsr2l,f,c
 13807  0012D2  0E02               	movlw	high (_dist_final+24)
 13808  0012D4  22DA               	addwfc	fsr2h,f,c
 13809  0012D6  C065  FFDE         	movff	_a+4,postinc2
 13810  0012DA  C066  FFDD         	movff	_a+5,postdec2
 13811  0012DE                     i2l5799:
 13812                           
 13813                           ;main.c: 166:     if (b==4){
 13814  0012DE  0E04               	movlw	4
 13815  0012E0  185A               	xorwf	_b,w,c
 13816  0012E2  105B               	iorwf	_b+1,w,c
 13817  0012E4  A4D8               	btfss	status,2,c
 13818  0012E6  0012               	return	
 13819                           
 13820                           ;main.c: 167:         if (RB4 == 1){
 13821  0012E8  B881               	btfsc	3969,4,c	;volatile
 13822                           
 13823                           ;main.c: 168:             TMR1ON = 1;
 13824  0012EA  80CD               	bsf	4045,0,c	;volatile
 13825                           
 13826                           ;main.c: 170:         if (RB4 == 0){
 13827                           
 13828                           ;main.c: 169:         }
 13829  0012EC  B881               	btfsc	3969,4,c	;volatile
 13830  0012EE  D037               	goto	i2l5809
 13831                           
 13832                           ;main.c: 171:             TMR1ON = 0;
 13833  0012F0  90CD               	bcf	4045,0,c	;volatile
 13834                           
 13835                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 13836  0012F2  0EAE               	movlw	174
 13837  0012F4  6E13               	movwf	___fldiv@a,c
 13838  0012F6  0E47               	movlw	71
 13839  0012F8  6E14               	movwf	___fldiv@a+1,c
 13840  0012FA  0E6B               	movlw	107
 13841  0012FC  6E15               	movwf	___fldiv@a+2,c
 13842  0012FE  0E42               	movlw	66
 13843  001300  6E16               	movwf	___fldiv@a+3,c
 13844  001302  50CF               	movf	4047,w,c	;volatile
 13845  001304  6E33               	movwf	(??_echo+1)& (0+255),c
 13846  001306  6A32               	clrf	??_echo& (0+255),c
 13847  001308  50CE               	movf	4046,w,c	;volatile
 13848  00130A  6E34               	movwf	(??_echo+2)& (0+255),c
 13849  00130C  6A35               	clrf	(??_echo+3)& (0+255),c
 13850  00130E  5032               	movf	??_echo,w,c
 13851  001310  1234               	iorwf	??_echo+2,f,c
 13852  001312  5033               	movf	??_echo+1,w,c
 13853  001314  1235               	iorwf	??_echo+3,f,c
 13854  001316  C034  F001         	movff	??_echo+2,___xxtofl@val
 13855  00131A  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13856  00131E  0E00               	movlw	0
 13857  001320  BE02               	btfsc	___xxtofl@val+1,7,c
 13858  001322  0EFF               	movlw	-1
 13859  001324  6E03               	movwf	___xxtofl@val+2,c
 13860  001326  6E04               	movwf	___xxtofl@val+3,c
 13861  001328  0E01               	movlw	1
 13862  00132A  EC7A  F016         	call	___xxtofl
 13863  00132E  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13864  001332  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13865  001336  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13866  00133A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13867  00133E  EC86  F00D         	call	___fldiv	;wreg free
 13868  001342  C00F  F028         	movff	?___fldiv,___fltol@f1
 13869  001346  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13870  00134A  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13871  00134E  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13872  001352  EC24  F01A         	call	___fltol	;wreg free
 13873  001356  C028  F067         	movff	?___fltol,_a+6
 13874  00135A  C029  F068         	movff	?___fltol+1,_a+7
 13875  00135E                     i2l5809:
 13876                           
 13877                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13878  00135E  BE68               	btfsc	_a+7,7,c
 13879  001360  0012               	return	
 13880  001362  5068               	movf	_a+7,w,c
 13881  001364  E104               	bnz	i2u597_40
 13882  001366  0E02               	movlw	2
 13883  001368  5C67               	subwf	_a+6,w,c
 13884  00136A  A0D8               	btfss	status,0,c
 13885  00136C  0012               	return	
 13886  00136E                     i2u597_40:
 13887  00136E  BE68               	btfsc	_a+7,7,c
 13888  001370  D006               	goto	i2u598_40
 13889  001372  5068               	movf	_a+7,w,c
 13890  001374  E15D               	bnz	i2l425
 13891  001376  0EC9               	movlw	201
 13892  001378  5C67               	subwf	_a+6,w,c
 13893  00137A  B0D8               	btfsc	status,0,c
 13894  00137C  0012               	return	
 13895  00137E                     i2u598_40:
 13896                           
 13897                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13898  00137E  0443               	decf	_sumf+3,w,c
 13899  001380  B4D8               	btfsc	status,2,c
 13900  001382  D01B               	goto	i2l5825
 13901  001384  0102               	movlb	2	; () banked
 13902  001386  5174               	movf	(_dist_final+36)& (0+255),w,b
 13903  001388  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13904  00138A  B4D8               	btfsc	status,2,c
 13905  00138C  D016               	goto	i2l5825
 13906                           
 13907                           ; BSR set to: 2
 13908  00138E  5176               	movf	(_dist_final+38)& (0+255),w,b
 13909  001390  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13910  001392  B4D8               	btfsc	status,2,c
 13911  001394  D012               	goto	i2l5825
 13912                           
 13913                           ; BSR set to: 2
 13914  001396  5178               	movf	(_dist_final+40)& (0+255),w,b
 13915  001398  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13916  00139A  B4D8               	btfsc	status,2,c
 13917  00139C  D00E               	goto	i2l5825
 13918                           
 13919                           ; BSR set to: 2
 13920                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13921  00139E  5176               	movf	(_dist_final+38)& (0+255),w,b
 13922  0013A0  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13923  0013A2  6E32               	movwf	??_echo& (0+255),c
 13924  0013A4  5177               	movf	(_dist_final+39)& (0+255),w,b
 13925  0013A6  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13926  0013A8  6E33               	movwf	(??_echo+1)& (0+255),c
 13927  0013AA  5178               	movf	(_dist_final+40)& (0+255),w,b
 13928  0013AC  2432               	addwf	??_echo,w,c
 13929  0013AE  6E3E               	movwf	_sum+6,c
 13930  0013B0  5179               	movf	(_dist_final+41)& (0+255),w,b
 13931  0013B2  2033               	addwfc	??_echo+1,w,c
 13932  0013B4  6E3F               	movwf	_sum+7,c
 13933                           
 13934                           ; BSR set to: 2
 13935                           ;main.c: 179:             sumf[3] = 1;
 13936  0013B6  0E01               	movlw	1
 13937  0013B8  6E43               	movwf	_sumf+3,c
 13938  0013BA                     i2l5825:
 13939                           
 13940                           ;main.c: 181:         if (sumf[3]){
 13941  0013BA  5043               	movf	_sumf+3,w,c
 13942  0013BC  B4D8               	btfsc	status,2,c
 13943  0013BE  D02B               	goto	i2l5831
 13944                           
 13945                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13946  0013C0  90D8               	bcf	status,0,c
 13947  0013C2  3450               	rlcf	_meas,w,c	;volatile
 13948  0013C4  6ED9               	movwf	fsr2l,c
 13949  0013C6  3451               	rlcf	_meas+1,w,c	;volatile
 13950  0013C8  6EDA               	movwf	fsr2h,c
 13951  0013CA  0E74               	movlw	low (_dist_final+36)
 13952  0013CC  26D9               	addwf	fsr2l,f,c
 13953  0013CE  0E02               	movlw	high (_dist_final+36)
 13954  0013D0  22DA               	addwfc	fsr2h,f,c
 13955  0013D2  CFDE F032          	movff	postinc2,??_echo
 13956  0013D6  CFDD F033          	movff	postdec2,??_echo+1
 13957  0013DA  EE20  F03E         	lfsr	2,_sum+6
 13958  0013DE  CFDE F034          	movff	postinc2,??_echo+2
 13959  0013E2  CFDD F035          	movff	postdec2,??_echo+3
 13960  0013E6  5032               	movf	??_echo,w,c
 13961  0013E8  5E34               	subwf	??_echo+2,f,c
 13962  0013EA  5033               	movf	??_echo+1,w,c
 13963  0013EC  5A35               	subwfb	??_echo+3,f,c
 13964  0013EE  5067               	movf	_a+6,w,c
 13965  0013F0  2434               	addwf	??_echo+2,w,c
 13966  0013F2  6E3E               	movwf	_sum+6,c
 13967  0013F4  5068               	movf	_a+7,w,c
 13968  0013F6  2035               	addwfc	??_echo+3,w,c
 13969  0013F8  6E3F               	movwf	_sum+7,c
 13970                           
 13971                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13972  0013FA  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13973  0013FE  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13974  001402  0E00               	movlw	0
 13975  001404  6E04               	movwf	i2___awdiv@divisor+1,c
 13976  001406  0E05               	movlw	5
 13977  001408  6E03               	movwf	i2___awdiv@divisor,c
 13978  00140A  EC44  F01C         	call	i2___awdiv	;wreg free
 13979  00140E  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13980  001412  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13981  001416                     i2l5831:
 13982                           
 13983                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13984  001416  90D8               	bcf	status,0,c
 13985  001418  3450               	rlcf	_meas,w,c	;volatile
 13986  00141A  6ED9               	movwf	fsr2l,c
 13987  00141C  3451               	rlcf	_meas+1,w,c	;volatile
 13988  00141E  6EDA               	movwf	fsr2h,c
 13989  001420  0E74               	movlw	low (_dist_final+36)
 13990  001422  26D9               	addwf	fsr2l,f,c
 13991  001424  0E02               	movlw	high (_dist_final+36)
 13992  001426  22DA               	addwfc	fsr2h,f,c
 13993  001428  C067  FFDE         	movff	_a+6,postinc2
 13994  00142C  C068  FFDD         	movff	_a+7,postdec2
 13995  001430                     i2l425:
 13996  001430  0012               	return		;funcret
 13997  001432                     __end_of_echo:
 13998                           	opt callstack 0
 13999                           
 14000 ;; *************** function i2___awdiv *****************
 14001 ;; Defined at:
 14002 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 14003 ;; Parameters:    Size  Location     Type
 14004 ;;  dividend        2    0[COMRAM] int 
 14005 ;;  divisor         2    2[COMRAM] int 
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;  __awdiv         2    6[COMRAM] int 
 14008 ;;  __awdiv         1    5[COMRAM] unsigned char 
 14009 ;;  __awdiv         1    4[COMRAM] unsigned char 
 14010 ;; Return value:  Size  Location     Type
 14011 ;;                  2    0[COMRAM] int 
 14012 ;; Registers used:
 14013 ;;		wreg, status,2, status,0
 14014 ;; Tracked objects:
 14015 ;;		On entry : 0/0
 14016 ;;		On exit  : 0/0
 14017 ;;		Unchanged: 0/0
 14018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14022 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14023 ;;Total ram usage:        8 bytes
 14024 ;; Hardware stack levels used:    1
 14025 ;; This function calls:
 14026 ;;		Nothing
 14027 ;; This function is called by:
 14028 ;;		_echo
 14029 ;; This function uses a non-reentrant model
 14030 ;;
 14031                           
 14032                           	psect	text57
 14033  003888                     __ptext57:
 14034                           	opt callstack 0
 14035  003888                     i2___awdiv:
 14036                           	opt callstack 14
 14037                           
 14038                           ;incstack = 0
 14039  003888  0E00               	movlw	0
 14040  00388A  6E06               	movwf	i2___awdiv@sign,c
 14041  00388C  AE04               	btfss	i2___awdiv@divisor+1,7,c
 14042  00388E  D006               	goto	i2l5559
 14043  003890  6C03               	negf	i2___awdiv@divisor,c
 14044  003892  1E04               	comf	i2___awdiv@divisor+1,f,c
 14045  003894  B0D8               	btfsc	status,0,c
 14046  003896  2A04               	incf	i2___awdiv@divisor+1,f,c
 14047  003898  0E01               	movlw	1
 14048  00389A  6E06               	movwf	i2___awdiv@sign,c
 14049  00389C                     i2l5559:
 14050  00389C  AE02               	btfss	i2___awdiv@dividend+1,7,c
 14051  00389E  D006               	goto	i2l5565
 14052  0038A0  6C01               	negf	i2___awdiv@dividend,c
 14053  0038A2  1E02               	comf	i2___awdiv@dividend+1,f,c
 14054  0038A4  B0D8               	btfsc	status,0,c
 14055  0038A6  2A02               	incf	i2___awdiv@dividend+1,f,c
 14056  0038A8  0E01               	movlw	1
 14057  0038AA  1A06               	xorwf	i2___awdiv@sign,f,c
 14058  0038AC                     i2l5565:
 14059  0038AC  0E00               	movlw	0
 14060  0038AE  6E08               	movwf	i2___awdiv@quotient+1,c
 14061  0038B0  0E00               	movlw	0
 14062  0038B2  6E07               	movwf	i2___awdiv@quotient,c
 14063  0038B4  5003               	movf	i2___awdiv@divisor,w,c
 14064  0038B6  1004               	iorwf	i2___awdiv@divisor+1,w,c
 14065  0038B8  B4D8               	btfsc	status,2,c
 14066  0038BA  D01C               	goto	i2l5587
 14067  0038BC  0E01               	movlw	1
 14068  0038BE  6E05               	movwf	i2___awdiv@counter,c
 14069  0038C0  D004               	goto	i2l5573
 14070  0038C2                     i2l5571:
 14071  0038C2  90D8               	bcf	status,0,c
 14072  0038C4  3603               	rlcf	i2___awdiv@divisor,f,c
 14073  0038C6  3604               	rlcf	i2___awdiv@divisor+1,f,c
 14074  0038C8  2A05               	incf	i2___awdiv@counter,f,c
 14075  0038CA                     i2l5573:
 14076  0038CA  AE04               	btfss	i2___awdiv@divisor+1,7,c
 14077  0038CC  D7FA               	goto	i2l5571
 14078  0038CE                     i2u558_40:
 14079  0038CE  90D8               	bcf	status,0,c
 14080  0038D0  3607               	rlcf	i2___awdiv@quotient,f,c
 14081  0038D2  3608               	rlcf	i2___awdiv@quotient+1,f,c
 14082  0038D4  5003               	movf	i2___awdiv@divisor,w,c
 14083  0038D6  5C01               	subwf	i2___awdiv@dividend,w,c
 14084  0038D8  5004               	movf	i2___awdiv@divisor+1,w,c
 14085  0038DA  5802               	subwfb	i2___awdiv@dividend+1,w,c
 14086  0038DC  A0D8               	btfss	status,0,c
 14087  0038DE  D005               	goto	i2l5583
 14088  0038E0  5003               	movf	i2___awdiv@divisor,w,c
 14089  0038E2  5E01               	subwf	i2___awdiv@dividend,f,c
 14090  0038E4  5004               	movf	i2___awdiv@divisor+1,w,c
 14091  0038E6  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 14092  0038E8  8007               	bsf	i2___awdiv@quotient,0,c
 14093  0038EA                     i2l5583:
 14094  0038EA  90D8               	bcf	status,0,c
 14095  0038EC  3204               	rrcf	i2___awdiv@divisor+1,f,c
 14096  0038EE  3203               	rrcf	i2___awdiv@divisor,f,c
 14097  0038F0  2E05               	decfsz	i2___awdiv@counter,f,c
 14098  0038F2  D7ED               	goto	i2u558_40
 14099  0038F4                     i2l5587:
 14100  0038F4  5006               	movf	i2___awdiv@sign,w,c
 14101  0038F6  B4D8               	btfsc	status,2,c
 14102  0038F8  D004               	goto	i2l5591
 14103  0038FA  6C07               	negf	i2___awdiv@quotient,c
 14104  0038FC  1E08               	comf	i2___awdiv@quotient+1,f,c
 14105  0038FE  B0D8               	btfsc	status,0,c
 14106  003900  2A08               	incf	i2___awdiv@quotient+1,f,c
 14107  003902                     i2l5591:
 14108  003902  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 14109  003906  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 14110  00390A  0012               	return		;funcret
 14111  00390C                     __end_ofi2___awdiv:
 14112                           	opt callstack 0
 14113                           
 14114 ;; *************** function ___xxtofl *****************
 14115 ;; Defined at:
 14116 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;  sign            1    wreg     unsigned char 
 14119 ;;  val             4    0[COMRAM] long 
 14120 ;; Auto vars:     Size  Location     Type
 14121 ;;  sign            1    8[COMRAM] unsigned char 
 14122 ;;  arg             4   10[COMRAM] unsigned long 
 14123 ;;  exp             1    9[COMRAM] unsigned char 
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  4    0[COMRAM] unsigned char 
 14126 ;; Registers used:
 14127 ;;		wreg, status,2, status,0
 14128 ;; Tracked objects:
 14129 ;;		On entry : 0/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14134 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14135 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14136 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14137 ;;Total ram usage:       14 bytes
 14138 ;; Hardware stack levels used:    1
 14139 ;; This function calls:
 14140 ;;		Nothing
 14141 ;; This function is called by:
 14142 ;;		_echo
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146                           	psect	text58
 14147  002CF4                     __ptext58:
 14148                           	opt callstack 0
 14149  002CF4                     ___xxtofl:
 14150                           	opt callstack 14
 14151                           
 14152                           ;incstack = 0
 14153                           ;___xxtofl@sign stored from wreg
 14154  002CF4  6E09               	movwf	___xxtofl@sign,c
 14155  002CF6  5009               	movf	___xxtofl@sign,w,c
 14156  002CF8  A4D8               	btfss	status,2,c
 14157  002CFA  AE04               	btfss	___xxtofl@val+3,7,c
 14158  002CFC  D01A               	goto	i2l1393
 14159  002CFE  C001  F005         	movff	___xxtofl@val,??___xxtofl
 14160  002D02  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 14161  002D06  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 14162  002D0A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 14163  002D0E  1E05               	comf	??___xxtofl,f,c
 14164  002D10  1E06               	comf	??___xxtofl+1,f,c
 14165  002D12  1E07               	comf	??___xxtofl+2,f,c
 14166  002D14  1E08               	comf	??___xxtofl+3,f,c
 14167  002D16  2A05               	incf	??___xxtofl,f,c
 14168  002D18  0E00               	movlw	0
 14169  002D1A  2206               	addwfc	??___xxtofl+1,f,c
 14170  002D1C  2207               	addwfc	??___xxtofl+2,f,c
 14171  002D1E  2208               	addwfc	??___xxtofl+3,f,c
 14172  002D20  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14173  002D24  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14174  002D28  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14175  002D2C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14176  002D30  D008               	goto	i2l5511
 14177  002D32                     i2l1393:
 14178  002D32  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14179  002D36  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14180  002D3A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14181  002D3E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14182  002D42                     i2l5511:
 14183  002D42  5001               	movf	___xxtofl@val,w,c
 14184  002D44  1002               	iorwf	___xxtofl@val+1,w,c
 14185  002D46  1003               	iorwf	___xxtofl@val+2,w,c
 14186  002D48  1004               	iorwf	___xxtofl@val+3,w,c
 14187  002D4A  A4D8               	btfss	status,2,c
 14188  002D4C  D009               	goto	i2l5517
 14189  002D4E  0E00               	movlw	0
 14190  002D50  6E01               	movwf	?___xxtofl,c
 14191  002D52  0E00               	movlw	0
 14192  002D54  6E02               	movwf	?___xxtofl+1,c
 14193  002D56  0E00               	movlw	0
 14194  002D58  6E03               	movwf	?___xxtofl+2,c
 14195  002D5A  0E00               	movlw	0
 14196  002D5C  6E04               	movwf	?___xxtofl+3,c
 14197  002D5E  0012               	return	
 14198  002D60                     i2l5517:
 14199  002D60  0E96               	movlw	150
 14200  002D62  6E0A               	movwf	___xxtofl@exp,c
 14201  002D64  D006               	goto	i2l5521
 14202  002D66                     i2l5519:
 14203  002D66  2A0A               	incf	___xxtofl@exp,f,c
 14204  002D68  90D8               	bcf	status,0,c
 14205  002D6A  320E               	rrcf	___xxtofl@arg+3,f,c
 14206  002D6C  320D               	rrcf	___xxtofl@arg+2,f,c
 14207  002D6E  320C               	rrcf	___xxtofl@arg+1,f,c
 14208  002D70  320B               	rrcf	___xxtofl@arg,f,c
 14209  002D72                     i2l5521:
 14210  002D72  0E00               	movlw	0
 14211  002D74  140B               	andwf	___xxtofl@arg,w,c
 14212  002D76  6E05               	movwf	??___xxtofl& (0+255),c
 14213  002D78  0E00               	movlw	0
 14214  002D7A  140C               	andwf	___xxtofl@arg+1,w,c
 14215  002D7C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14216  002D7E  0E00               	movlw	0
 14217  002D80  140D               	andwf	___xxtofl@arg+2,w,c
 14218  002D82  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14219  002D84  0EFE               	movlw	254
 14220  002D86  140E               	andwf	___xxtofl@arg+3,w,c
 14221  002D88  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14222  002D8A  5005               	movf	??___xxtofl,w,c
 14223  002D8C  1006               	iorwf	??___xxtofl+1,w,c
 14224  002D8E  1007               	iorwf	??___xxtofl+2,w,c
 14225  002D90  1008               	iorwf	??___xxtofl+3,w,c
 14226  002D92  B4D8               	btfsc	status,2,c
 14227  002D94  D00D               	goto	i2l1400
 14228  002D96  D7E7               	goto	i2l5519
 14229  002D98                     i2l5523:
 14230  002D98  2A0A               	incf	___xxtofl@exp,f,c
 14231  002D9A  0E01               	movlw	1
 14232  002D9C  260B               	addwf	___xxtofl@arg,f,c
 14233  002D9E  0E00               	movlw	0
 14234  002DA0  220C               	addwfc	___xxtofl@arg+1,f,c
 14235  002DA2  220D               	addwfc	___xxtofl@arg+2,f,c
 14236  002DA4  220E               	addwfc	___xxtofl@arg+3,f,c
 14237  002DA6  90D8               	bcf	status,0,c
 14238  002DA8  320E               	rrcf	___xxtofl@arg+3,f,c
 14239  002DAA  320D               	rrcf	___xxtofl@arg+2,f,c
 14240  002DAC  320C               	rrcf	___xxtofl@arg+1,f,c
 14241  002DAE  320B               	rrcf	___xxtofl@arg,f,c
 14242  002DB0                     i2l1400:
 14243  002DB0  0E00               	movlw	0
 14244  002DB2  140B               	andwf	___xxtofl@arg,w,c
 14245  002DB4  6E05               	movwf	??___xxtofl& (0+255),c
 14246  002DB6  0E00               	movlw	0
 14247  002DB8  140C               	andwf	___xxtofl@arg+1,w,c
 14248  002DBA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14249  002DBC  0E00               	movlw	0
 14250  002DBE  140D               	andwf	___xxtofl@arg+2,w,c
 14251  002DC0  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14252  002DC2  0EFF               	movlw	255
 14253  002DC4  140E               	andwf	___xxtofl@arg+3,w,c
 14254  002DC6  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14255  002DC8  5005               	movf	??___xxtofl,w,c
 14256  002DCA  1006               	iorwf	??___xxtofl+1,w,c
 14257  002DCC  1007               	iorwf	??___xxtofl+2,w,c
 14258  002DCE  1008               	iorwf	??___xxtofl+3,w,c
 14259  002DD0  B4D8               	btfsc	status,2,c
 14260  002DD2  D007               	goto	i2l5531
 14261  002DD4  D7E1               	goto	i2l5523
 14262  002DD6                     i2l5529:
 14263  002DD6  060A               	decf	___xxtofl@exp,f,c
 14264  002DD8  90D8               	bcf	status,0,c
 14265  002DDA  360B               	rlcf	___xxtofl@arg,f,c
 14266  002DDC  360C               	rlcf	___xxtofl@arg+1,f,c
 14267  002DDE  360D               	rlcf	___xxtofl@arg+2,f,c
 14268  002DE0  360E               	rlcf	___xxtofl@arg+3,f,c
 14269  002DE2                     i2l5531:
 14270  002DE2  BE0D               	btfsc	___xxtofl@arg+2,7,c
 14271  002DE4  D003               	goto	i2u551_40
 14272  002DE6  0E02               	movlw	2
 14273  002DE8  600A               	cpfslt	___xxtofl@exp,c
 14274  002DEA  D7F5               	goto	i2l5529
 14275  002DEC                     i2u551_40:
 14276  002DEC  A00A               	btfss	___xxtofl@exp,0,c
 14277  002DEE  9E0D               	bcf	___xxtofl@arg+2,7,c
 14278  002DF0  90D8               	bcf	status,0,c
 14279  002DF2  320A               	rrcf	___xxtofl@exp,f,c
 14280  002DF4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14281  002DF8  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 14282  002DFA  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 14283  002DFC  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 14284  002DFE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14285  002E02  6A07               	clrf	??___xxtofl+2,c
 14286  002E04  6A06               	clrf	??___xxtofl+1,c
 14287  002E06  6A05               	clrf	??___xxtofl,c
 14288  002E08  5005               	movf	??___xxtofl,w,c
 14289  002E0A  120B               	iorwf	___xxtofl@arg,f,c
 14290  002E0C  5006               	movf	??___xxtofl+1,w,c
 14291  002E0E  120C               	iorwf	___xxtofl@arg+1,f,c
 14292  002E10  5007               	movf	??___xxtofl+2,w,c
 14293  002E12  120D               	iorwf	___xxtofl@arg+2,f,c
 14294  002E14  5008               	movf	??___xxtofl+3,w,c
 14295  002E16  120E               	iorwf	___xxtofl@arg+3,f,c
 14296  002E18  5009               	movf	___xxtofl@sign,w,c
 14297  002E1A  A4D8               	btfss	status,2,c
 14298  002E1C  AE04               	btfss	___xxtofl@val+3,7,c
 14299  002E1E  D001               	goto	i2l5547
 14300  002E20  8E0E               	bsf	___xxtofl@arg+3,7,c
 14301  002E22                     i2l5547:
 14302  002E22  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14303  002E26  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14304  002E2A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14305  002E2E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14306  002E32  0012               	return		;funcret
 14307  002E34                     __end_of___xxtofl:
 14308                           	opt callstack 0
 14309                           
 14310 ;; *************** function ___fltol *****************
 14311 ;; Defined at:
 14312 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;  f1              4   39[COMRAM] unsigned char 
 14315 ;; Auto vars:     Size  Location     Type
 14316 ;;  exp1            1   48[COMRAM] unsigned char 
 14317 ;;  sign1           1   47[COMRAM] unsigned char 
 14318 ;; Return value:  Size  Location     Type
 14319 ;;                  4   39[COMRAM] long 
 14320 ;; Registers used:
 14321 ;;		wreg, status,2, status,0
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;Total ram usage:       10 bytes
 14332 ;; Hardware stack levels used:    1
 14333 ;; This function calls:
 14334 ;;		Nothing
 14335 ;; This function is called by:
 14336 ;;		_echo
 14337 ;; This function uses a non-reentrant model
 14338 ;;
 14339                           
 14340                           	psect	text59
 14341  003448                     __ptext59:
 14342                           	opt callstack 0
 14343  003448                     ___fltol:
 14344                           	opt callstack 14
 14345                           
 14346                           ;incstack = 0
 14347  003448  342A               	rlcf	___fltol@f1+2,w,c
 14348  00344A  342B               	rlcf	___fltol@f1+3,w,c
 14349  00344C  6E31               	movwf	___fltol@exp1,c
 14350  00344E  5031               	movf	___fltol@exp1,w,c
 14351  003450  A4D8               	btfss	status,2,c
 14352  003452  D009               	goto	i2l5451
 14353  003454                     i2u535_40:
 14354  003454  0E00               	movlw	0
 14355  003456  6E28               	movwf	?___fltol,c
 14356  003458  0E00               	movlw	0
 14357  00345A  6E29               	movwf	?___fltol+1,c
 14358  00345C  0E00               	movlw	0
 14359  00345E  6E2A               	movwf	?___fltol+2,c
 14360  003460  0E00               	movlw	0
 14361  003462  6E2B               	movwf	?___fltol+3,c
 14362  003464  0012               	return	
 14363  003466                     i2l5451:
 14364  003466  C028  F02C         	movff	___fltol@f1,??___fltol
 14365  00346A  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 14366  00346E  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 14367  003472  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 14368  003476  0E20               	movlw	32
 14369  003478  D005               	goto	i2u536_40
 14370  00347A                     i2u536_45:
 14371  00347A  90D8               	bcf	status,0,c
 14372  00347C  322F               	rrcf	??___fltol+3,f,c
 14373  00347E  322E               	rrcf	??___fltol+2,f,c
 14374  003480  322D               	rrcf	??___fltol+1,f,c
 14375  003482  322C               	rrcf	??___fltol,f,c
 14376  003484                     i2u536_40:
 14377  003484  2EE8               	decfsz	wreg,f,c
 14378  003486  D7F9               	goto	i2u536_45
 14379  003488  502C               	movf	??___fltol,w,c
 14380  00348A  6E30               	movwf	___fltol@sign1,c
 14381  00348C  8E2A               	bsf	___fltol@f1+2,7,c
 14382  00348E  0EFF               	movlw	255
 14383  003490  1628               	andwf	___fltol@f1,f,c
 14384  003492  0EFF               	movlw	255
 14385  003494  1629               	andwf	___fltol@f1+1,f,c
 14386  003496  0EFF               	movlw	255
 14387  003498  162A               	andwf	___fltol@f1+2,f,c
 14388  00349A  0E00               	movlw	0
 14389  00349C  162B               	andwf	___fltol@f1+3,f,c
 14390  00349E  0E96               	movlw	150
 14391  0034A0  5E31               	subwf	___fltol@exp1,f,c
 14392  0034A2  AE31               	btfss	___fltol@exp1,7,c
 14393  0034A4  D00D               	goto	i2l5471
 14394  0034A6  5031               	movf	___fltol@exp1,w,c
 14395  0034A8  0A80               	xorlw	128
 14396  0034AA  0F97               	addlw	151
 14397  0034AC  A0D8               	btfss	status,0,c
 14398  0034AE  D7D2               	goto	i2u535_40
 14399  0034B0                     i2l5467:
 14400  0034B0  90D8               	bcf	status,0,c
 14401  0034B2  322B               	rrcf	___fltol@f1+3,f,c
 14402  0034B4  322A               	rrcf	___fltol@f1+2,f,c
 14403  0034B6  3229               	rrcf	___fltol@f1+1,f,c
 14404  0034B8  3228               	rrcf	___fltol@f1,f,c
 14405  0034BA  3E31               	incfsz	___fltol@exp1,f,c
 14406  0034BC  D7F9               	goto	i2l5467
 14407  0034BE  D00D               	goto	i2u540_40
 14408  0034C0                     i2l5471:
 14409  0034C0  0E1F               	movlw	31
 14410  0034C2  6431               	cpfsgt	___fltol@exp1,c
 14411  0034C4  D007               	goto	i2l5479
 14412  0034C6  D7C6               	goto	i2u535_40
 14413  0034C8                     i2l5477:
 14414  0034C8  90D8               	bcf	status,0,c
 14415  0034CA  3628               	rlcf	___fltol@f1,f,c
 14416  0034CC  3629               	rlcf	___fltol@f1+1,f,c
 14417  0034CE  362A               	rlcf	___fltol@f1+2,f,c
 14418  0034D0  362B               	rlcf	___fltol@f1+3,f,c
 14419  0034D2  0631               	decf	___fltol@exp1,f,c
 14420  0034D4                     i2l5479:
 14421  0034D4  5031               	movf	___fltol@exp1,w,c
 14422  0034D6  A4D8               	btfss	status,2,c
 14423  0034D8  D7F7               	goto	i2l5477
 14424  0034DA                     i2u540_40:
 14425  0034DA  5030               	movf	___fltol@sign1,w,c
 14426  0034DC  B4D8               	btfsc	status,2,c
 14427  0034DE  D008               	goto	i2l5485
 14428  0034E0  1E2B               	comf	___fltol@f1+3,f,c
 14429  0034E2  1E2A               	comf	___fltol@f1+2,f,c
 14430  0034E4  1E29               	comf	___fltol@f1+1,f,c
 14431  0034E6  6C28               	negf	___fltol@f1,c
 14432  0034E8  0E00               	movlw	0
 14433  0034EA  2229               	addwfc	___fltol@f1+1,f,c
 14434  0034EC  222A               	addwfc	___fltol@f1+2,f,c
 14435  0034EE  222B               	addwfc	___fltol@f1+3,f,c
 14436  0034F0                     i2l5485:
 14437  0034F0  C028  F028         	movff	___fltol@f1,?___fltol
 14438  0034F4  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 14439  0034F8  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 14440  0034FC  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 14441  003500  0012               	return		;funcret
 14442  003502                     __end_of___fltol:
 14443                           	opt callstack 0
 14444                           
 14445 ;; *************** function ___fldiv *****************
 14446 ;; Defined at:
 14447 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  b               4   14[COMRAM] long 
 14450 ;;  a               4   18[COMRAM] long 
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;  grs             4   33[COMRAM] unsigned long 
 14453 ;;  rem             4   26[COMRAM] unsigned long 
 14454 ;;  new_exp         2   31[COMRAM] short 
 14455 ;;  aexp            1   38[COMRAM] unsigned char 
 14456 ;;  bexp            1   37[COMRAM] unsigned char 
 14457 ;;  sign            1   30[COMRAM] unsigned char 
 14458 ;; Return value:  Size  Location     Type
 14459 ;;                  4   14[COMRAM] unsigned char 
 14460 ;; Registers used:
 14461 ;;		wreg, status,2, status,0
 14462 ;; Tracked objects:
 14463 ;;		On entry : 0/0
 14464 ;;		On exit  : 0/0
 14465 ;;		Unchanged: 0/0
 14466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14467 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14468 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14469 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14470 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14471 ;;Total ram usage:       25 bytes
 14472 ;; Hardware stack levels used:    1
 14473 ;; This function calls:
 14474 ;;		Nothing
 14475 ;; This function is called by:
 14476 ;;		_echo
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480                           	psect	text60
 14481  001B0C                     __ptext60:
 14482                           	opt callstack 0
 14483  001B0C                     ___fldiv:
 14484                           	opt callstack 14
 14485                           
 14486                           ;incstack = 0
 14487  001B0C  5012               	movf	___fldiv@b+3,w,c
 14488  001B0E  0B80               	andlw	128
 14489  001B10  6E1F               	movwf	___fldiv@sign,c
 14490  001B12  5012               	movf	___fldiv@b+3,w,c
 14491  001B14  2412               	addwf	___fldiv@b+3,w,c
 14492  001B16  6E26               	movwf	___fldiv@bexp,c
 14493  001B18  BE11               	btfsc	___fldiv@b+2,7,c
 14494  001B1A  8026               	bsf	___fldiv@bexp,0,c
 14495  001B1C  5026               	movf	___fldiv@bexp,w,c
 14496  001B1E  B4D8               	btfsc	status,2,c
 14497  001B20  D00D               	goto	i2l5279
 14498  001B22  2826               	incf	___fldiv@bexp,w,c
 14499  001B24  A4D8               	btfss	status,2,c
 14500  001B26  D008               	goto	i2l5275
 14501  001B28  0E00               	movlw	0
 14502  001B2A  6E0F               	movwf	___fldiv@b,c
 14503  001B2C  0E00               	movlw	0
 14504  001B2E  6E10               	movwf	___fldiv@b+1,c
 14505  001B30  0E00               	movlw	0
 14506  001B32  6E11               	movwf	___fldiv@b+2,c
 14507  001B34  0E00               	movlw	0
 14508  001B36  6E12               	movwf	___fldiv@b+3,c
 14509  001B38                     i2l5275:
 14510  001B38  8E11               	bsf	___fldiv@b+2,7,c
 14511  001B3A  D006               	goto	L6
 14512  001B3C                     i2l5279:
 14513  001B3C  0E00               	movlw	0
 14514  001B3E  6E0F               	movwf	___fldiv@b,c
 14515  001B40  0E00               	movlw	0
 14516  001B42  6E10               	movwf	___fldiv@b+1,c
 14517  001B44  0E00               	movlw	0
 14518  001B46  6E11               	movwf	___fldiv@b+2,c
 14519  001B48                     L6:
 14520  001B48  0E00               	movlw	0
 14521  001B4A  6E12               	movwf	___fldiv@b+3,c
 14522  001B4C  5016               	movf	___fldiv@a+3,w,c
 14523  001B4E  0B80               	andlw	128
 14524  001B50  1A1F               	xorwf	___fldiv@sign,f,c
 14525  001B52  5016               	movf	___fldiv@a+3,w,c
 14526  001B54  2416               	addwf	___fldiv@a+3,w,c
 14527  001B56  6E27               	movwf	___fldiv@aexp,c
 14528  001B58  BE15               	btfsc	___fldiv@a+2,7,c
 14529  001B5A  8027               	bsf	___fldiv@aexp,0,c
 14530  001B5C  5027               	movf	___fldiv@aexp,w,c
 14531  001B5E  B4D8               	btfsc	status,2,c
 14532  001B60  D00D               	goto	i2l5299
 14533  001B62  2827               	incf	___fldiv@aexp,w,c
 14534  001B64  A4D8               	btfss	status,2,c
 14535  001B66  D008               	goto	i2l5295
 14536  001B68  0E00               	movlw	0
 14537  001B6A  6E13               	movwf	___fldiv@a,c
 14538  001B6C  0E00               	movlw	0
 14539  001B6E  6E14               	movwf	___fldiv@a+1,c
 14540  001B70  0E00               	movlw	0
 14541  001B72  6E15               	movwf	___fldiv@a+2,c
 14542  001B74  0E00               	movlw	0
 14543  001B76  6E16               	movwf	___fldiv@a+3,c
 14544  001B78                     i2l5295:
 14545  001B78  8E15               	bsf	___fldiv@a+2,7,c
 14546  001B7A  D006               	goto	L7
 14547  001B7C                     i2l5299:
 14548  001B7C  0E00               	movlw	0
 14549  001B7E  6E13               	movwf	___fldiv@a,c
 14550  001B80  0E00               	movlw	0
 14551  001B82  6E14               	movwf	___fldiv@a+1,c
 14552  001B84  0E00               	movlw	0
 14553  001B86  6E15               	movwf	___fldiv@a+2,c
 14554  001B88                     L7:
 14555  001B88  0E00               	movlw	0
 14556  001B8A  6E16               	movwf	___fldiv@a+3,c
 14557  001B8C  5013               	movf	___fldiv@a,w,c
 14558  001B8E  1014               	iorwf	___fldiv@a+1,w,c
 14559  001B90  1015               	iorwf	___fldiv@a+2,w,c
 14560  001B92  1016               	iorwf	___fldiv@a+3,w,c
 14561  001B94  A4D8               	btfss	status,2,c
 14562  001B96  D017               	goto	i2l5313
 14563  001B98  0E00               	movlw	0
 14564  001B9A  6E0F               	movwf	___fldiv@b,c
 14565  001B9C  0E00               	movlw	0
 14566  001B9E  6E10               	movwf	___fldiv@b+1,c
 14567  001BA0  0E00               	movlw	0
 14568  001BA2  6E11               	movwf	___fldiv@b+2,c
 14569  001BA4  0E00               	movlw	0
 14570  001BA6  6E12               	movwf	___fldiv@b+3,c
 14571  001BA8  0E80               	movlw	128
 14572  001BAA  1211               	iorwf	___fldiv@b+2,f,c
 14573  001BAC  0E7F               	movlw	127
 14574  001BAE  1212               	iorwf	___fldiv@b+3,f,c
 14575  001BB0                     i2l5307:
 14576  001BB0  501F               	movf	___fldiv@sign,w,c
 14577  001BB2  1212               	iorwf	___fldiv@b+3,f,c
 14578  001BB4  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14579  001BB8  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14580  001BBC  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14581  001BC0  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14582  001BC4  0012               	return	
 14583  001BC6                     i2l5313:
 14584  001BC6  5026               	movf	___fldiv@bexp,w,c
 14585  001BC8  A4D8               	btfss	status,2,c
 14586  001BCA  D009               	goto	i2l5321
 14587  001BCC  0E00               	movlw	0
 14588  001BCE  6E0F               	movwf	?___fldiv,c
 14589  001BD0  0E00               	movlw	0
 14590  001BD2  6E10               	movwf	?___fldiv+1,c
 14591  001BD4  0E00               	movlw	0
 14592  001BD6  6E11               	movwf	?___fldiv+2,c
 14593  001BD8  0E00               	movlw	0
 14594  001BDA  6E12               	movwf	?___fldiv+3,c
 14595  001BDC  0012               	return	
 14596  001BDE                     i2l5321:
 14597  001BDE  5027               	movf	___fldiv@aexp,w,c
 14598  001BE0  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14599  001BE4  6A18               	clrf	(??___fldiv+1)& (0+255),c
 14600  001BE6  5E17               	subwf	??___fldiv,f,c
 14601  001BE8  0E00               	movlw	0
 14602  001BEA  5A18               	subwfb	??___fldiv+1,f,c
 14603  001BEC  0E7F               	movlw	127
 14604  001BEE  2417               	addwf	??___fldiv,w,c
 14605  001BF0  6E20               	movwf	___fldiv@new_exp,c
 14606  001BF2  0E00               	movlw	0
 14607  001BF4  2018               	addwfc	??___fldiv+1,w,c
 14608  001BF6  6E21               	movwf	___fldiv@new_exp+1,c
 14609  001BF8  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14610  001BFC  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14611  001C00  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14612  001C04  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14613  001C08  0E00               	movlw	0
 14614  001C0A  6E0F               	movwf	___fldiv@b,c
 14615  001C0C  0E00               	movlw	0
 14616  001C0E  6E10               	movwf	___fldiv@b+1,c
 14617  001C10  0E00               	movlw	0
 14618  001C12  6E11               	movwf	___fldiv@b+2,c
 14619  001C14  0E00               	movlw	0
 14620  001C16  6E12               	movwf	___fldiv@b+3,c
 14621  001C18  0E00               	movlw	0
 14622  001C1A  6E22               	movwf	___fldiv@grs,c
 14623  001C1C  0E00               	movlw	0
 14624  001C1E  6E23               	movwf	___fldiv@grs+1,c
 14625  001C20  0E00               	movlw	0
 14626  001C22  6E24               	movwf	___fldiv@grs+2,c
 14627  001C24  0E00               	movlw	0
 14628  001C26  6E25               	movwf	___fldiv@grs+3,c
 14629  001C28  0E00               	movlw	0
 14630  001C2A  6E27               	movwf	___fldiv@aexp,c
 14631  001C2C  D028               	goto	i2l1322
 14632  001C2E                     i2l5331:
 14633  001C2E  5027               	movf	___fldiv@aexp,w,c
 14634  001C30  B4D8               	btfsc	status,2,c
 14635  001C32  D011               	goto	i2l5339
 14636  001C34  90D8               	bcf	status,0,c
 14637  001C36  361B               	rlcf	___fldiv@rem,f,c
 14638  001C38  361C               	rlcf	___fldiv@rem+1,f,c
 14639  001C3A  361D               	rlcf	___fldiv@rem+2,f,c
 14640  001C3C  361E               	rlcf	___fldiv@rem+3,f,c
 14641  001C3E  90D8               	bcf	status,0,c
 14642  001C40  360F               	rlcf	___fldiv@b,f,c
 14643  001C42  3610               	rlcf	___fldiv@b+1,f,c
 14644  001C44  3611               	rlcf	___fldiv@b+2,f,c
 14645  001C46  3612               	rlcf	___fldiv@b+3,f,c
 14646  001C48  BE25               	btfsc	___fldiv@grs+3,7,c
 14647  001C4A  800F               	bsf	___fldiv@b,0,c
 14648  001C4C  90D8               	bcf	status,0,c
 14649  001C4E  3622               	rlcf	___fldiv@grs,f,c
 14650  001C50  3623               	rlcf	___fldiv@grs+1,f,c
 14651  001C52  3624               	rlcf	___fldiv@grs+2,f,c
 14652  001C54  3625               	rlcf	___fldiv@grs+3,f,c
 14653  001C56                     i2l5339:
 14654  001C56  5013               	movf	___fldiv@a,w,c
 14655  001C58  5C1B               	subwf	___fldiv@rem,w,c
 14656  001C5A  5014               	movf	___fldiv@a+1,w,c
 14657  001C5C  581C               	subwfb	___fldiv@rem+1,w,c
 14658  001C5E  5015               	movf	___fldiv@a+2,w,c
 14659  001C60  581D               	subwfb	___fldiv@rem+2,w,c
 14660  001C62  5016               	movf	___fldiv@a+3,w,c
 14661  001C64  581E               	subwfb	___fldiv@rem+3,w,c
 14662  001C66  A0D8               	btfss	status,0,c
 14663  001C68  D009               	goto	i2l5345
 14664  001C6A  8C25               	bsf	___fldiv@grs+3,6,c
 14665  001C6C  5013               	movf	___fldiv@a,w,c
 14666  001C6E  5E1B               	subwf	___fldiv@rem,f,c
 14667  001C70  5014               	movf	___fldiv@a+1,w,c
 14668  001C72  5A1C               	subwfb	___fldiv@rem+1,f,c
 14669  001C74  5015               	movf	___fldiv@a+2,w,c
 14670  001C76  5A1D               	subwfb	___fldiv@rem+2,f,c
 14671  001C78  5016               	movf	___fldiv@a+3,w,c
 14672  001C7A  5A1E               	subwfb	___fldiv@rem+3,f,c
 14673  001C7C                     i2l5345:
 14674  001C7C  2A27               	incf	___fldiv@aexp,f,c
 14675  001C7E                     i2l1322:
 14676  001C7E  0E19               	movlw	25
 14677  001C80  6427               	cpfsgt	___fldiv@aexp,c
 14678  001C82  D7D5               	goto	i2l5331
 14679  001C84  501B               	movf	___fldiv@rem,w,c
 14680  001C86  101C               	iorwf	___fldiv@rem+1,w,c
 14681  001C88  101D               	iorwf	___fldiv@rem+2,w,c
 14682  001C8A  101E               	iorwf	___fldiv@rem+3,w,c
 14683  001C8C  B4D8               	btfsc	status,2,c
 14684  001C8E  D011               	goto	i2l5357
 14685  001C90  8022               	bsf	___fldiv@grs,0,c
 14686  001C92  D00F               	goto	i2l5357
 14687  001C94                     i2l5351:
 14688  001C94  90D8               	bcf	status,0,c
 14689  001C96  360F               	rlcf	___fldiv@b,f,c
 14690  001C98  3610               	rlcf	___fldiv@b+1,f,c
 14691  001C9A  3611               	rlcf	___fldiv@b+2,f,c
 14692  001C9C  3612               	rlcf	___fldiv@b+3,f,c
 14693  001C9E  BE25               	btfsc	___fldiv@grs+3,7,c
 14694  001CA0  800F               	bsf	___fldiv@b,0,c
 14695  001CA2  90D8               	bcf	status,0,c
 14696  001CA4  3622               	rlcf	___fldiv@grs,f,c
 14697  001CA6  3623               	rlcf	___fldiv@grs+1,f,c
 14698  001CA8  3624               	rlcf	___fldiv@grs+2,f,c
 14699  001CAA  3625               	rlcf	___fldiv@grs+3,f,c
 14700  001CAC  0620               	decf	___fldiv@new_exp,f,c
 14701  001CAE  A0D8               	btfss	status,0,c
 14702  001CB0  0621               	decf	___fldiv@new_exp+1,f,c
 14703  001CB2                     i2l5357:
 14704  001CB2  AE11               	btfss	___fldiv@b+2,7,c
 14705  001CB4  D7EF               	goto	i2l5351
 14706  001CB6  0E00               	movlw	0
 14707  001CB8  6E27               	movwf	___fldiv@aexp,c
 14708  001CBA  AE25               	btfss	___fldiv@grs+3,7,c
 14709  001CBC  D017               	goto	i2l1333
 14710  001CBE  0EFF               	movlw	255
 14711  001CC0  1422               	andwf	___fldiv@grs,w,c
 14712  001CC2  6E17               	movwf	??___fldiv& (0+255),c
 14713  001CC4  0EFF               	movlw	255
 14714  001CC6  1423               	andwf	___fldiv@grs+1,w,c
 14715  001CC8  6E18               	movwf	(??___fldiv+1)& (0+255),c
 14716  001CCA  0EFF               	movlw	255
 14717  001CCC  1424               	andwf	___fldiv@grs+2,w,c
 14718  001CCE  6E19               	movwf	(??___fldiv+2)& (0+255),c
 14719  001CD0  0E7F               	movlw	127
 14720  001CD2  1425               	andwf	___fldiv@grs+3,w,c
 14721  001CD4  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 14722  001CD6  5017               	movf	??___fldiv,w,c
 14723  001CD8  1018               	iorwf	??___fldiv+1,w,c
 14724  001CDA  1019               	iorwf	??___fldiv+2,w,c
 14725  001CDC  101A               	iorwf	??___fldiv+3,w,c
 14726  001CDE  B4D8               	btfsc	status,2,c
 14727  001CE0  D003               	goto	i2l1334
 14728  001CE2                     i2u522_40:
 14729  001CE2  0E01               	movlw	1
 14730  001CE4  6E27               	movwf	___fldiv@aexp,c
 14731  001CE6  D002               	goto	i2l1333
 14732  001CE8                     i2l1334:
 14733  001CE8  B00F               	btfsc	___fldiv@b,0,c
 14734  001CEA  D7FB               	goto	i2u522_40
 14735  001CEC                     i2l1333:
 14736  001CEC  5027               	movf	___fldiv@aexp,w,c
 14737  001CEE  B4D8               	btfsc	status,2,c
 14738  001CF0  D01F               	goto	i2l5377
 14739  001CF2  0E01               	movlw	1
 14740  001CF4  260F               	addwf	___fldiv@b,f,c
 14741  001CF6  0E00               	movlw	0
 14742  001CF8  2210               	addwfc	___fldiv@b+1,f,c
 14743  001CFA  2211               	addwfc	___fldiv@b+2,f,c
 14744  001CFC  2212               	addwfc	___fldiv@b+3,f,c
 14745  001CFE  A012               	btfss	___fldiv@b+3,0,c
 14746  001D00  D017               	goto	i2l5377
 14747  001D02  C00F  F017         	movff	___fldiv@b,??___fldiv
 14748  001D06  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 14749  001D0A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 14750  001D0E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 14751  001D12  341A               	rlcf	??___fldiv+3,w,c
 14752  001D14  321A               	rrcf	??___fldiv+3,f,c
 14753  001D16  3219               	rrcf	??___fldiv+2,f,c
 14754  001D18  3218               	rrcf	??___fldiv+1,f,c
 14755  001D1A  3217               	rrcf	??___fldiv,f,c
 14756  001D1C  C017  F00F         	movff	??___fldiv,___fldiv@b
 14757  001D20  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 14758  001D24  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 14759  001D28  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 14760  001D2C  4A20               	infsnz	___fldiv@new_exp,f,c
 14761  001D2E  2A21               	incf	___fldiv@new_exp+1,f,c
 14762  001D30                     i2l5377:
 14763  001D30  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14764  001D32  D010               	goto	i2l5381
 14765  001D34  5021               	movf	___fldiv@new_exp+1,w,c
 14766  001D36  E103               	bnz	i2u526_40
 14767  001D38  2820               	incf	___fldiv@new_exp,w,c
 14768  001D3A  A0D8               	btfss	status,0,c
 14769  001D3C  D00B               	goto	i2l5381
 14770  001D3E                     i2u526_40:
 14771  001D3E  0E00               	movlw	0
 14772  001D40  6E21               	movwf	___fldiv@new_exp+1,c
 14773  001D42  6820               	setf	___fldiv@new_exp,c
 14774  001D44  0E00               	movlw	0
 14775  001D46  6E0F               	movwf	___fldiv@b,c
 14776  001D48  0E00               	movlw	0
 14777  001D4A  6E10               	movwf	___fldiv@b+1,c
 14778  001D4C  0E00               	movlw	0
 14779  001D4E  6E11               	movwf	___fldiv@b+2,c
 14780  001D50  0E00               	movlw	0
 14781  001D52  6E12               	movwf	___fldiv@b+3,c
 14782  001D54                     i2l5381:
 14783  001D54  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14784  001D56  D005               	goto	i2u527_40
 14785  001D58  5021               	movf	___fldiv@new_exp+1,w,c
 14786  001D5A  E111               	bnz	i2l5385
 14787  001D5C  0420               	decf	___fldiv@new_exp,w,c
 14788  001D5E  B0D8               	btfsc	status,0,c
 14789  001D60  D00E               	goto	i2l5385
 14790  001D62                     i2u527_40:
 14791  001D62  0E00               	movlw	0
 14792  001D64  6E21               	movwf	___fldiv@new_exp+1,c
 14793  001D66  0E00               	movlw	0
 14794  001D68  6E20               	movwf	___fldiv@new_exp,c
 14795  001D6A  0E00               	movlw	0
 14796  001D6C  6E0F               	movwf	___fldiv@b,c
 14797  001D6E  0E00               	movlw	0
 14798  001D70  6E10               	movwf	___fldiv@b+1,c
 14799  001D72  0E00               	movlw	0
 14800  001D74  6E11               	movwf	___fldiv@b+2,c
 14801  001D76  0E00               	movlw	0
 14802  001D78  6E12               	movwf	___fldiv@b+3,c
 14803  001D7A  0E00               	movlw	0
 14804  001D7C  6E1F               	movwf	___fldiv@sign,c
 14805  001D7E                     i2l5385:
 14806  001D7E  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 14807  001D82  A026               	btfss	___fldiv@bexp,0,c
 14808  001D84  D002               	goto	i2l5391
 14809  001D86  8E11               	bsf	___fldiv@b+2,7,c
 14810  001D88  D001               	goto	i2l5393
 14811  001D8A                     i2l5391:
 14812  001D8A  9E11               	bcf	___fldiv@b+2,7,c
 14813  001D8C                     i2l5393:
 14814  001D8C  90D8               	bcf	status,0,c
 14815  001D8E  3026               	rrcf	___fldiv@bexp,w,c
 14816  001D90  6E12               	movwf	___fldiv@b+3,c
 14817  001D92  D70E               	goto	i2l5307
 14818  001D94                     __end_of___fldiv:
 14819                           	opt callstack 0
 14820                           
 14821                           	psect	rparam
 14822  0000                     
 14823                           	psect	temp
 14824  00006E                     btemp:
 14825                           	opt callstack 0
 14826  00006E                     	ds	1
 14827  0000                     int$flags	set	btemp
 14828  0000                     wtemp8	set	btemp+1
 14829  0000                     ttemp5	set	btemp+1
 14830  0000                     ttemp6	set	btemp+4
 14831  0000                     ttemp7	set	btemp+8
 14832                           tosu	equ	0xFFF
 14833                           tosh	equ	0xFFE
 14834                           tosl	equ	0xFFD
 14835                           stkptr	equ	0xFFC
 14836                           pclatu	equ	0xFFB
 14837                           pclath	equ	0xFFA
 14838                           pcl	equ	0xFF9
 14839                           tblptru	equ	0xFF8
 14840                           tblptrh	equ	0xFF7
 14841                           tblptrl	equ	0xFF6
 14842                           tablat	equ	0xFF5
 14843                           prodh	equ	0xFF4
 14844                           prodl	equ	0xFF3
 14845                           indf0	equ	0xFEF
 14846                           postinc0	equ	0xFEE
 14847                           postdec0	equ	0xFED
 14848                           preinc0	equ	0xFEC
 14849                           plusw0	equ	0xFEB
 14850                           fsr0h	equ	0xFEA
 14851                           fsr0l	equ	0xFE9
 14852                           wreg	equ	0xFE8
 14853                           indf1	equ	0xFE7
 14854                           postinc1	equ	0xFE6
 14855                           postdec1	equ	0xFE5
 14856                           preinc1	equ	0xFE4
 14857                           plusw1	equ	0xFE3
 14858                           fsr1h	equ	0xFE2
 14859                           fsr1l	equ	0xFE1
 14860                           bsr	equ	0xFE0
 14861                           indf2	equ	0xFDF
 14862                           postinc2	equ	0xFDE
 14863                           postdec2	equ	0xFDD
 14864                           preinc2	equ	0xFDC
 14865                           plusw2	equ	0xFDB
 14866                           fsr2h	equ	0xFDA
 14867                           fsr2l	equ	0xFD9
 14868                           status	equ	0xFD8


Data Sizes:
    Strings     587
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256    212     240
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1756_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_UI_main
    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv
    _I2C_Master_RepeatedStart->_I2C_Master_Wait

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               122   122      0  301021
                                             90 BANK1    122   122      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   47736
                                            124 BANK0      2     0      2
                                              0 BANK1     12    12      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23233
                                            123 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2103
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25184
                                            123 BANK0      4     0      4
                                              0 BANK1      8     8      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24679
                                            123 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1381
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                      10     4      6  145468
                                             18 BANK1     10     4      6
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   47474
                                              0 BANK1      8     6      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47759
                                              0 BANK1     14    12      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                             18    14      4   24659
                                              0 BANK1     18    14      4
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23984
                                            123 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0    1134
                                              5 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       5     3      2     567
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         5     3      2     567
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26850
                                            123 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   23075
                                            109 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1381
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D4      F0       7       93.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     27D      34        0.0%
DATA                 0      0     27D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 01:58:47 2019

                     ___fldiv@aexp 0027                       ___fldiv@bexp 0026  
                                _a 0061                                  _b 005A  
                                _i 01E5                       ___fldiv@sign 001F  
                      __CFG_CPD$ON 000000                       ___awdiv@sign 0085  
              servoRotate180@servo 0080                ___wmul@multiplicand 0082  
                      __CFG_BORV$3 000000                    ??_number_deploy 0100  
                stepper2@direction 010D                      servoRotate0@i 0083  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                __end_of_system_init 3D52  
                              l122 336C                                l140 331C  
                              l125 33C0                                l134 327A  
                  _ultrasonic_main 2620                                l128 340C  
                              l137 32D2                                l521 0290  
                              l466 2774                                l635 3682  
                              l563 0B8C                                l646 1E08  
                              l671 1FFA                                l648 1E10  
                              l673 2002                                l765 3876  
                              _GIE 007F97                       __CFG_CPB$OFF 000000  
                              _RB2 007C0A                                _RC1 007C11  
                              _RB3 007C0B                                _RC2 007C12  
                              _RD0 007C18                                _RB4 007C0C  
                              _RD1 007C19                                _RB5 007C0D  
                              _RB6 007C0E                                _RB7 007C0F  
                              _ISR 0008             __size_of_stepper2_back 00A0  
                              _abs 3CEC                                _cnt 01ED  
                              _pad 3652                                _min 2F5A  
                              _sum 0038                     stepper2_back@i 0106  
                              wreg 000FE8                       __CFG_LVP$OFF 000000  
                             ?_ISR 0001                       ___fltol@exp1 0031  
                     __CFG_WDT$OFF 000000                               ?_abs 0092  
                             l1413 3D16                               l1158 3A40  
                             l1511 3BF2                               l1444 2CEA  
                             l7003 149A                               l7021 1552  
                             ?_pad 0094                               l7023 1570  
                             l7007 14A4                               l7041 1678  
                             l7025 157E                               l7009 14E6  
                             l8003 2764                               l7061 1782  
                             l7055 1746                               l7071 17A6  
                             l7215 1854                               l7231 18C0  
                             l7065 178E                               l8009 277A  
                             l7091 3B1A                               l8211 0270  
                             l8131 00BC                               l8051 22AE  
                             l8043 2268                               ?_min 0080  
                             l7413 3828                               l7093 3B42  
                             l8221 02B0                               l7309 19DE  
                             l8061 22F8                               l8037 222E  
                             l7415 3834                               l8303 06CC  
                             l7351 1A76                               l7271 1954  
                             l7511 296C                               l8063 2302  
                             l8047 229A                               l7425 3868  
                             l6641 3C9E                               l8161 015E  
                             l7505 2946                               l6731 2AE2  
                             l6627 3996                               l8331 0780  
                             l8075 234E                               l6733 2AF6  
                             l6725 2ABC                               l6637 3C86  
                             l6645 3DF2                               l8253 0378  
                             l8237 0310                               l7541 2A0A  
                             l7613 360C                               l8093 2418  
                             l6751 2B8E                               l6743 2B52  
                             l6719 2A94                               l6647 3DF8  
                             l6671 368C                               l6823 1E2A  
                             l6903 20FA                               l6911 2172  
                             l8327 0778                               l7535 29E4  
                             l7519 2984                               l7711 24B6  
                             l8431 089C                               l6665 366A  
                             l6809 1DEC                               l8337 079A  
                             l7705 2488                               l6747 2B68  
                             l6771 2EA0                               l6763 2E62  
                             l6675 36A6                               l6827 1E3A  
                             l8347 0808                               l7803 37BA  
                             l7651 307E                               l8523 0AF2  
                             l8531 0B2C                               l8507 0AA0  
                             l8603 0E4A                               l6933 2BC4  
                             l6773 2EB4                               l6669 367A  
                             l6861 1FB2                               l6837 1F34  
                             l8349 0816                               l8277 051A  
                             l8189 01EA                               l7389 1AF6  
                             l7549 2A3A                               l7565 318A  
                             l7805 37C2                               l8541 0B74  
                             l7831 39FE                               l6951 2C26  
                             l6943 2C0E                               l6935 2BC8  
                             l6783 2F12                               l6767 2E86  
                             l6679 36D2                               l6927 21E8  
                             l7575 31D2                               l7823 37FA  
                             l7815 37E2                               l7751 25EA  
                             l7743 25A6                               l7735 2572  
                             l7727 252E                               l7719 24FA  
                             l7663 30B8                               l8623 0EE2  
                             l8535 0B4E                               l8455 0954  
                             l8439 08FA                               l7833 3A0A  
                             l6953 2C2C                               l6857 1F9A  
                             l6881 204A                               l7585 321E  
                             l7569 31A2                               l7673 30EC  
                             l8529 0B18                               l6955 2C54  
                             l6787 2F38                               l6779 2EFC  
                             l6875 2018                               l8299 06A6  
                             l7819 37EC                               l7683 3120  
                             l6949 2C1E                               l7589 3236  
                             l7941 2912                               l7861 2826  
                             l7781 304C                               l7765 2F90  
                             l7693 3154                               l8581 0D74  
                             l8477 09E4                               l8469 09C0  
                             l7839 3A32                               l6799 3C34  
                             l6959 2C8A                               l6991 148E  
                             l6983 1478                               l7919 28EA  
                             l7791 3794                               l7767 2F9A  
                             l6889 206C                               l6985 147A  
                             l8585 0DC0                               l8577 0D64  
                             l8489 0A14                               l6995 1492  
                             l6987 148A                               l7779 3048  
                             l7971 26AC                               l8595 0E20  
                             l7797 37A4                               l7965 2694  
                             l8589 0DD0                               l6999 1496  
                             l7991 271E                               l7967 269C  
                             l8599 0E26                               l7995 274C  
                             STR_1 FFD9                               STR_2 FF0A  
                             STR_3 FF74                               STR_4 FFD9  
                             STR_5 FFCF                               STR_6 FFF4  
                             STR_7 FEE2                               STR_8 FFD9  
                             STR_9 FFFA                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u7000 3CE4                               u7010 3CE6  
                             u7020 3BDA                               u7110 2AFA  
                             u7030 3BDC                               _RBIE 007F93  
                             _RBIF 007F90                               u7050 3DE0  
                             u7210 3C30                               u7060 3DE2  
                             u7220 1DBE                               u8100 2A0A  
                             u7310 1F66                               u7230 1DC0  
                             u8110 2A32                               u8015 3A7C  
                             u7311 1F64                               u7320 1F74  
                             u7400 2068                               u8120 2A60  
                             u8040 293E                               u8025 3E64  
                             u8026 3E66                               u7170 2EB8  
                             u7330 1F78                               u7410 209E  
                             u8050 296C                               u7091 2AC2  
                             u7260 1DFE                               u7500 21A6  
                             u7420 20A0                               u8060 297C  
                             u8300 250A                               u7501 21A4  
                             u7350 1F84                               u7510 21B4  
                             u9030 081C                               u8070 29AA  
                             u8310 251A                               u8230 316A  
                             u7280 1E24                               u7520 21B8  
                             u7440 20D8                               u8400 2F80  
                             u8320 253E                               u8240 245A  
                             u7290 1F44                               u7450 20DA  
                             u8090 29DC                               u8170 3634  
                             u8330 254E                               u8250 246A  
                             u7380 1FEE                               u7700 15FA  
                             u8500 37C6                               u8340 2582  
                             u8260 2498                               u8180 307C  
                             u9300 0B2C                               u7550 2C0A  
                             u6910 3D7C                               u7470 214E  
                             u8350 2592                               u8270 24A8  
                             u9310 0B3C                               u6920 3D7E  
                             u7480 2184                               u7720 16AC  
                             u7800 33FA                               u8440 3008  
                             u8360 25B6                               u8280 24C6  
                             u8600 2716                               u9320 0B88  
                             u9160 0880                               u7570 2CBA  
                             u6930 3CFC                               u8450 302E  
                             u8370 25C6                               u8290 24D6  
                             u8610 272E                               u7475 213C  
                             u9155 086E                               u8540 3A0E  
                             u7580 2CBC                               u6860 398E  
                             u7660 15B8                               u7820 3446  
                             u8700 22CE                               u8380 25FA  
                             u9180 08B8                               u6845 3E40  
                             u9181 08B6                               u9157 0870  
                             u6846 3E42                               u7670 15BA  
                             u8710 22DE                               u8390 260A  
                             u8630 277A                               u9407 0A5C  
                             u9175 08A4                               u6880 39D6  
                             u7680 15C6                               u7840 32C0  
                             u8720 22EE                               u9280 0ACA  
                             u9417 0C18                               u9177 08A6  
                             u9290 0ADA                               u9507 265C  
                             u9427 0CE0                               u6980 3DAE  
                             u7780 33AE                               u7860 330A  
                             u8740 231A                               u8660 225E  
                             u9517 26E4                               u9437 0D1C  
                             u6990 3DB0                               u8750 232A  
                             u8670 2290                               u9607 3130  
                             u9527 2788                               u9447 0E32  
                             u9367 0912                               u7880 3358  
                             u8760 233A                               u9617 3146  
                             u9537 27B4                               u9457 0E5C  
                             u9377 093C                               u8770 234A  
                             u8690 22BE                               u9707 28AC  
                             u9627 2440                               u9547 3094  
                             u9467 0E80                               u9387 09F6  
                             u8940 02AC                               u9717 35CE  
                             u9637 23C4                               u9557 30AA  
                             u9477 0EA0                               u9397 0A2A  
                             u7990 3838                               u8790 2428  
                             u9807 1890                               u9727 31E6  
                             u9647 23F8                               u9567 30C8  
                             u9487 0EC4                               u9817 18A4  
                             u9737 17FC                               u9657 356A  
                             u9577 30DE                               u9497 2632  
                             u8970 038A                               u8890 0200  
                             u9907 19A0                               u9827 18B8  
                             u9747 1810                               u9667 359E  
                             u9587 30FC                               u8980 039A  
                             u8981 0398                               u9917 19BA  
                             u9837 18E2                               u9757 1824  
                             u9677 27EC                               u9597 3112  
                             u9927 19D4                               u9847 18FC  
                             u9767 1838                               u9687 2818  
                             u9937 1A0E                               u9857 1916  
                             u9777 184C                               u9697 2882  
                             u9947 1A26                               u9867 1930  
                             u9787 1868                               u9957 1A3E  
                             u9877 194A                               u9797 187C  
                             u9967 1A56                               u9887 196C  
                             u9977 1A6E                               u9897 1986  
                             u9987 1A8E                               u9997 1AA6  
                             _Pole 0200                 main@poles_detected 01C8  
                      main@t_count 01C2                               abs@a 0092  
                             _data 005E                               _echo 0EEE  
                             _dbuf 0280   __end_of_I2C_Master_RepeatedStart 3F6C  
                             _disp 01E7                               _atoi 2BB0  
                             _main 0826                               _dtoa 1D94  
                             _meas 0050                               _keys FD9D  
                             _send 006D                               _tick 0056  
                             _prec 004C                               _sens 0058  
                             _temp 00FF                               _time 01DC  
                             _nout 0048                               pad@i 009B  
                             pad@p 0098                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr1l 000FE1                               pad@w 009D  
                             fsr2l 000FD9                               _trig 306A  
                             _sumf 0040                               btemp 006E  
                             min@i 0089                               _xtoa 1FDC  
                             prodh 000FF4                               prodl 000FF3  
                             start 000E            __size_of_actuators_main 0150  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0020  
                  __end_of_UI_main 0826                    servoRotate180@i 0083  
                    __CFG_MCLRE$ON 000000                       main@act_done 01B8  
                     ___param_bank 000000                              ??_ISR 0036  
                            ??_abs 0094                              ??_pad 009A  
                            ??_min 0084              actuators_main@act_cnt 011A  
            I2C_Master_Read@ackBit 0081                   ?_I2C_Master_Init 008D  
                 ?_I2C_Master_Read 0001                   ?_I2C_Master_Wait 0001  
                 ?_I2C_Master_Stop 0001                              ?_echo 0001  
                    ___fltol@sign1 0030                    __end_of___aodiv 2BB0  
                            ?_atoi 0087                              ?_main 0001  
                            ?_dtoa 009F                    __end_of___aomod 2F5A  
                  __end_of___fldiv 1D94                    __end_of___awdiv 3804  
                            _EEADR 000FA9                              STR_10 FDE8  
                            STR_11 FF7F                              STR_20 FF5E  
                            STR_12 FE4D                              STR_13 FF89  
                            STR_21 FF23                              STR_14 FE5D  
                            STR_22 FE3D                              STR_30 FDC6  
                            STR_31 FFE3                              STR_23 FFC5  
                            STR_15 FF93                              STR_32 FEC3  
                            STR_24 FF47                              STR_16 FDF9  
                            STR_40 FDB4                              STR_33 FE0B  
                            STR_17 FF9D                              STR_41 FE7C  
                            STR_25 FE6D                              STR_34 FFE3  
                            STR_26 FFC5                              STR_18 FFEC  
                            STR_42 FF3B                              STR_50 FEA9  
                            STR_51 FDC6                              STR_43 FE1B  
                            STR_35 FEC3                              STR_27 FF47  
                            STR_19 FEF0                              STR_28 FE6D  
                            STR_52 FEC3                              STR_44 FDB4  
                            STR_60 FF2F                              STR_36 FE0A  
                            STR_45 FE7C                              STR_53 FF02  
                            STR_61 FF53                              STR_37 FED4  
                            STR_29 FE8B                              STR_46 FF3B  
                            STR_62 FF69                              STR_54 FEFD  
                            STR_38 FEC6                              STR_55 FFBB  
                            STR_63 FFB1                              STR_39 FE1B  
                            STR_47 FDD7                              STR_56 FFA7  
                            STR_48 FF17                              STR_57 FF23  
                            STR_49 FE9A                              STR_58 FE2C  
                            STR_59 FEB8                    __end_of___fltol 3502  
                            ?_trig 0001                    __end_of___lldiv 3888  
                            u10007 1ABE                              u10017 1AD6  
                            u10107 3326                              u10027 1AEE  
                            u10117 333A                              u10037 3726  
                            u10207 011E                              u10127 3378  
                            u10047 374A                              u10217 0192  
                            u10137 3384                              u10057 3280  
                            u10307 3940                              u10227 0228  
                            u10147 3392                              u10067 3290  
                            u10317 3964                              u10237 02C8  
                            u10157 33CA                              u10077 32A4  
                            u10327 3E26                              u10247 0328  
                            u10167 33DE                              u10087 32DC  
                            u10337 3E30                              u10257 03B4  
                            u10177 3416                              u10097 32EE  
                            u10267 0540                              u10187 3428  
                  ___awdiv@divisor 0082                              u10277 070E  
                            u10197 007A                              u10287 3914  
                            ?_xtoa 009F                              _T1CON 000FCD  
                  __end_of___llmod 3A52                              u10297 392E  
                            i2l425 1430                              i2l398 3C6E  
                  ___awdiv@counter 0084                       vfpfcnvrt@fmt 00C8  
                     vfpfcnvrt@llu 00D8                              _TMR1H 000FCF  
                            _TMR1L 000FCE                              _PORTB 000F81  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                  __end_of_lcdInst 3F4A                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                    __end_of_initLCD 397C  
                   __CFG_EBTRB$OFF 000000                              _brake 3502  
                            _flags 004E                              _dists 0069  
                            _fputc 397C                    __end_of_isalpha 3CEC  
                            _fputs 3C7A                    __end_of_isdigit 3DE8  
                            _servo 36EE                              atoi@n 0094  
                            pad@fp 0094                              atoi@s 0087  
                            _width 004A                              _state 01E9  
                            _putch 3F2A                              _start 3B5E  
                            main@i 01B2                              main@k 01C0  
                            dtoa@d 00A1                              dtoa@i 00C1  
                            dtoa@n 00B9                              dtoa@p 00B3  
                            dtoa@s 00B7                              dtoa@w 00B5  
                  __end_of_islower 3D84                    __end_of_isspace 3C3C  
                  __end_of_isupper 3DB6                              tablat 000FF5  
                  send_nibble@data 0081                              plusw2 000FDB  
                  __end_of_pulse_e 3E44                              ttemp5 006F  
                            ttemp6 0072                              ttemp7 0076  
                            status 000FD8        I2C_Master_Read@receivedByte 0082  
                  __end_of_stepper 2A66                              wtemp8 006F  
                            xtoa@c 00C4                              xtoa@d 00A1  
                            xtoa@i 00C2                              xtoa@n 00BA  
                            xtoa@p 00B6                              xtoa@w 00B8  
                            xtoa@x 00A9                      _stepper2_back 35B2  
                  __end_of_toupper 3BFC                   ??_servoRotate180 0082  
               __size_ofi2___awdiv 0084                     __CFG_PBADEN$ON 000000  
                     _toupper$1808 008C                    __initialization 3AB2  
                     __end_of_echo 1432                        _system_init 3D20  
                     __end_of_atoi 2CF4                       __end_of_main 0EEE  
                     __end_of_dtoa 1FDC                       __end_of_keys FDAE  
          __end_of_ultrasonic_main 27CC                       __end_of_trig 316C  
                     __end_of_xtoa 2212                             ??_echo 0032  
                           ??_atoi 0089                             ??_main 015A  
                           ??_dtoa 00A9                             ??_trig 0080  
                           ??_xtoa 00AA                      __activetblptr 000002  
             number_deploy@t_count 0106                  ?_I2C_Master_Start 0001  
                ?_I2C_Master_Write 0081               number_deploy@tires_t 0102  
               ??_I2C_Master_Start 0081                             ?_brake 0001  
                           _ADCON1 000FC1                 ??_I2C_Master_Write 0083  
                     ?_send_nibble 0001                             ?_fputc 0084  
                 ___llmod@dividend 0080                             ?_fputs 008D  
                           _EEDATA 000FA8                             _EECON2 000FA7  
                 ___awdiv@dividend 0080                             ?_servo 0001  
                           ?_putch 0001                             ?_start 0001  
                           _INT1IE 007F83                             _INT1IF 007F80  
               stepper2@steps2_adj 0100                             i2l1400 2DB0  
                           i2l1322 1C7E                             i2l1333 1CEC  
                           i2l1334 1CE8                             i2l1393 2D32  
                           i2l5321 1BDE                             i2l5313 1BC6  
                           i2l5331 1C2E                             i2l5307 1BB0  
                           i2l5351 1C94                             i2l5511 2D42  
                           i2l5345 1C7C                             i2l5521 2D72  
                           i2l5339 1C56                             i2l5275 1B38  
                           i2l5451 3466                             i2l5531 2DE2  
                           i2l5523 2D98                             i2l5381 1D54  
                           i2l5357 1CB2                             i2l5517 2D60  
                           i2l5391 1D8A                             i2l5295 1B78  
                           i2l5279 1B3C                             i2l5471 34C0  
                           i2l5519 2D66                             i2l5393 1D8C  
                           i2l5385 1D7E                             i2l5377 1D30  
                           i2l5529 2DD6                             i2l6281 3C5C  
                           i2l5299 1B7C                             i2l5467 34B0  
                           i2l5547 2E22                             i2l5571 38C2  
                           i2l5723 0FC8                             i2l5707 0F6C  
                           i2l5731 103A                             i2l5485 34F0  
                           i2l5477 34C8                             i2l5573 38CA  
                           i2l5565 38AC                             i2l5741 10BA  
                           i2l5479 34D4                             i2l5591 3902  
                           i2l5583 38EA                             i2l5559 389C  
                           i2l5831 1416                             i2l5825 13BA  
                           i2l5809 135E                             i2l5729 1020  
                           i2l5587 38F4                             i2l5763 1172  
                           i2l5757 1116                             i2l5765 118C  
                           i2l5791 1268                             i2l5775 120C  
                           i2l5797 12C4                             i2l5799 12DE  
                        ??_UI_main 0100                      vfpfcnvrt@done 00E1  
                           _TMR1ON 007E68                     ?_stepper2_back 0100  
                           _SSPADD 000FC8                             _SSPBUF 000FC9  
                 __end_of___xxtofl 2E34        number_deploy@poles_detected 00FD  
                   __CFG_XINST$OFF 000000           _I2C_Master_RepeatedStart 3F64  
                     vfprintf@cfmt 00EB                          ??___aodiv 0090  
                        ??___aomod 0090                             ___wmul 3E96  
                        ??___fldiv 0017                          ??___awdiv 0084  
                        ??___fltol 002C                          ??___lldiv 0088  
                        ??___llmod 0088                             clear_0 3AD8  
                           clear_1 3AE4                             clear_2 3AF4  
                 ___awdiv@quotient 0086                          ??_lcdInst 0083  
                           _printf 3E6E                             pad@buf 0096  
                           dtoa@fp 009F                             _strlen 3DE8  
                   i2___awdiv@sign 0006                          ??_initLCD 0084  
                           fputc@c 0084                             fputs@c 0091  
                           fputs@i 0092                       __pdataCOMRAM 0069  
                           fputs@s 008D                          ??_isalpha 0082  
                        ??_isdigit 0082                  __end_ofi2___awdiv 390C  
                        ??_islower 0082                       __mediumconst FD9C  
                        ??_isspace 0082                             tblptrh 000FF7  
                        ??_isupper 0082                             tblptrl 000FF6  
                           tblptru 000FF8                   __end_of_vfprintf 3B5E  
                        ??_pulse_e 0080                   __end_of_stepper2 3268  
   ultrasonic_main@min_us_dist_968 010A                          ??_stepper 0104  
                           xtoa@fp 009F                          ??_toupper 0088  
                     ___xxtofl@arg 000B              pulse_e@interruptState 0080  
                     ___xxtofl@exp 000A                       ___xxtofl@val 0001  
                       __accesstop 0080            __end_of__initialization 3AFA  
                   _actuators_main 27CC                      ___rparam_used 000001  
                       ___fltol@f1 0028                       stepper@i_480 010E  
                     stepper@i_481 0110                       stepper@i_479 010C  
               __size_of_backwards 0026                full_drive@direction 00FE  
                   __pcstackCOMRAM 0001                       stepper@t_dep 0102  
                     stepper@stack 0100                   ?_ultrasonic_main 00FC  
                    __end_of_brake 35B2                      __end_of_fputc 39EA  
                    __end_of_fputs 3CB6                      __end_of_servo 377E  
                servoRotate0@servo 0080                      __end_of_putch 3F3A  
                    __end_of_start 3BB0                    _key_was_pressed 01EF  
            number_deploy@avg_dist 00FB                            ??_brake 00FB  
                          ??_fputc 0088                            ??_fputs 0091  
                          ??_servo 0085                            ??_putch 0083  
                          ??_start 0095                    ??_stepper2_back 0102  
                       __pbssBANK0 00FF                         __pbssBANK1 01D4  
                       __pbssBANK2 0200             __end_of_actuators_main 291C  
                          ?___wmul 0080                 __size_of_send_byte 0018  
                          ?_printf 00ED             stepper2_back@direction 0103  
                          ?_strlen 0080              __end_of_number_deploy 2432  
                        ?___xxtofl 0001                  __end_of_backwards 3EE4  
               __size_of_vfpfcnvrt 03AA                         _dist_final 0250  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                          _SSPSTAT 000FC7                            _UI_main 0012  
             __size_of_send_nibble 001A                    ?_actuators_main 0112  
                          __Hparam 0000                            __Lparam 0000  
                     ?_system_init 0001                            ___aodiv 2A66  
                          ___aomod 2E34                            ___fldiv 1B0C  
                          ___awdiv 377E                            ___fltol 3448  
                          ___lldiv 3804                    __size_of___wmul 0028  
                          ___llmod 39EA                          ?_vfprintf 00E5  
                        ?_stepper2 0100                    __CFG_STVREN$OFF 000000  
                          __pcinit 3AB2                         _full_drive 17DC  
                          __ramtop 1000                            _lcdInst 3F3A  
                          __ptext0 0826                            __ptext1 2620  
                          __ptext2 306A                            __ptext3 2432  
                          __ptext4 2F5A                            __ptext5 3B5E  
                          __ptext6 2212                            __ptext7 377E  
                          __ptext8 3502                            __ptext9 3EBE  
                  __size_of_printf 0028                    __size_of_strlen 002E  
                          _initLCD 390C                       __size_of_ISR 3C72  
                          _counter 0060                       __size_of_abs 0034  
                     __size_of_pad 009C                            _isalpha 3CB6  
                     __size_of_min 0110                            _isdigit 3DB6  
                       ??___xxtofl 0005                            _islower 3D52  
                          _isspace 3BFC                            _isupper 3D84  
         __size_of_I2C_Master_Init 0060           __size_of_I2C_Master_Read 002A  
         __size_of_I2C_Master_Wait 0014           __size_of_I2C_Master_Stop 0008  
                  _prev_dist_final 01D4                            _pressed 01E3  
                          atoi@neg 008D                            _pulse_e 3E16  
                          _stepper 291C                     __pintcode_body 3C3C  
                          _toupper 3BB0               end_of_initialization 3AFA  
                          min@size 0082                main@arduino_stopped 01B9  
       ??_I2C_Master_RepeatedStart 0081              __end_of_LCD_SIZE_HORZ FDB3  
                __end_of_send_byte 3F16              __end_of_LCD_SIZE_VERT FDB2  
                          fputc@fp 0086                      __Lmediumconst FD9C  
                          int_func 3C3C                            fputs@fp 008F  
        __size_of_I2C_Master_Start 0008          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0084                    ___lldiv@counter 008C  
                __end_of_vfpfcnvrt 17DC                      ?_servoRotate0 0080  
                   main@steps2_adj 01BE                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       ??_vfprintf 00EB                         ??_stepper2 0102  
                          strlen@a 0082                            strlen@s 0080  
                        _PORTAbits 000F80                         _print_echo 2432  
                    stepper2@i_489 0109                      ___xxtofl@sign 0009  
                        _TRISAbits 000F92                          _TRISBbits 000F93  
                        _TRISCbits 000F94                        ___fldiv@grs 0022  
                      ___fldiv@rem 001B                         main@i_1081 01B4  
                       main@i_1087 01C6                          i2___awdiv 3888  
      ultrasonic_main@step2_offset 0106                         main@data_g 01BC  
                    send_byte@data 0082                 i2___awdiv@dividend 0001  
            UI_main@poles_detected 00FD                     ??_servoRotate0 0082  
      number_deploy@tires_detected 0104                        vfpfcnvrt@ap 00CA  
                      vfpfcnvrt@fp 00C6                        vfpfcnvrt@ll 00D0  
                   __end_of___wmul 3EBE                        ?_full_drive 00FB  
          __size_of_servoRotate180 00F2                      __pidataCOMRAM 3F6C  
                   __end_of_printf 3E96                     __end_of_strlen 3E16  
              start_initialization 3AB2                         min@minimum 0087  
               i2___awdiv@quotient 0007                        __end_of_ISR 3C7A  
                      __end_of_abs 3D20                        __end_of_pad 36EE  
                      __end_of_min 306A              stepper2@count_stepper 010B  
                       ?i2___awdiv 0001                  ??_I2C_Master_Init 0091  
                ??_I2C_Master_Read 0081                  ??_I2C_Master_Wait 0080  
                ??_I2C_Master_Stop 0081                  main@prev_avg_dist 01D0  
                   _poles_detected 0052                    ___llmod@divisor 0084  
                  ___llmod@counter 0088                       UI_main@t_dep 00FB  
                      vfprintf@fmt 00E7                           ??___wmul 0084  
         I2C_Master_Init@clockFreq 008D                   __CFG_LPT1OSC$OFF 000000  
             __size_of_system_init 0032                           ??_printf 00F7  
                         ??_strlen 0082                        ?_print_echo 0001  
                        ___fldiv@a 0013                          ___fldiv@b 000F  
         __size_of_ultrasonic_main 01AC                        __pbssCOMRAM 0038  
                    __pcstackBANK0 0080                      __pcstackBANK1 0100  
                 ___aodiv@dividend 0080                   ??_actuators_main 0118  
                __size_of___xxtofl 0140                          _backwards 3EBE  
                         ?_UI_main 00FB              __end_of_stepper2_back 3652  
              __size_of_full_drive 0330                          _atoi$1716 008F  
                        _atoi$1717 0093                          _atoi$1718 0091  
                 _I2C_Master_Start 3F5C                   _I2C_Master_Write 3F4A  
                        _main$1071 01B6                          _main$1072 01B7  
                        _dtoa$1232 00B1                  __CFG_CCP2MX$PORTC 000000  
                        __pintcode 0008                      __pmediumconst FD9C  
                         ?___aodiv 0080                           ?___aomod 0080  
                         ?___fldiv 000F                           ?___awdiv 0080  
                 ___aodiv@quotient 0092                           ?___fltol 0028  
                         ?___lldiv 0080                           ?___llmod 0080  
                         ?_lcdInst 0001                  __size_of_vfprintf 0056  
                __size_of_stepper2 00FC               full_drive@stepper_no 00FB  
                         ?_initLCD 0001                           ?_isalpha 0080  
                         ?_isdigit 0080                           ?_islower 0080  
                         ?_isspace 0080                           ?_isupper 0080  
             __end_of_servoRotate0 3448                      ??_send_nibble 0081  
                         ?_pulse_e 0001                     __size_of_brake 00B0  
                      ??i2___awdiv 0005                           ?_stepper 0100  
                   __size_of_fputc 006E                     __size_of_fputs 003C  
                         ?_toupper 0086                     __size_of_servo 0090  
                       ?_backwards 0001                     __size_of_putch 0010  
                   __size_of_start 0052                     ___wmul@product 0084  
                         _LATAbits 000F89                           _LATBbits 000F8A  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           UI_main@i 0159  
                 main@pole_cl_dist 0160                          _send_byte 3EFE  
              __size_of_print_echo 01EE             __size_of_number_deploy 0220  
                   _LCD_LINE1_ADDR FDB0                     _LCD_LINE2_ADDR FDB3  
                   _LCD_LINE3_ADDR FDAF                     _LCD_LINE4_ADDR FDAE  
                         i2u522_40 1CE2                           i2u540_40 34DA  
                         i2u526_40 1D3E                           i2u527_40 1D62  
                         i2u535_40 3454                           i2u551_40 2DEC  
                         i2u536_40 3484                           i2u536_45 347A  
                         i2u558_40 38CE                           i2u654_40 3C66  
                         i2u567_40 0F7C                           i2u568_40 0F8C  
                         i2u577_40 10CA                           i2u578_40 10DA  
                         i2u587_40 121C                           i2u588_40 122C  
                         i2u597_40 136E                           i2u598_40 137E  
                 __CFG_WDTPS$32768 000000         stepper2_back@count_stepper 0104  
                   _servoRotate180 3268                          _vfpfcnvrt 1432  
                        _xtoa$1243 00B2                          _xtoa$1244 00B4  
                ___wmul@multiplier 0080                          main@t_dep 01C4  
                i2___awdiv@divisor 0003                          main@stack 01BA  
                i2___awdiv@counter 0005                       _isspace$1743 0086  
                       vfpfcnvrt@c 00E0                actuators_main@t_dep 0116  
              actuators_main@stack 0112                          copy_data0 3AC6  
                ??_ultrasonic_main 0100                    UI_main@keypress 0154  
           __end_of_LCD_LINE1_ADDR FDB1                   __size_of_UI_main 0814  
           __end_of_LCD_LINE2_ADDR FDB4             __end_of_LCD_LINE3_ADDR FDB0  
           __end_of_LCD_LINE4_ADDR FDAF                __end_of_send_nibble 3EFE  
                       _EECON1bits 000FA6                         ?_send_byte 0001  
                      UI_main@Pole 0104                           __Hrparam 0000  
                      UI_main@tick 0155                         vfprintf@ap 00E9  
                         __Lrparam 0000                         vfprintf@fp 00E5  
               __CFG_BOREN$SBORDIS 000000             __end_of_servoRotate180 335A  
                 __size_of___aodiv 014A  __size_of_I2C_Master_RepeatedStart 0008  
                 __size_of___aomod 0126                   __size_of___fldiv 0288  
                 __size_of___awdiv 0086          ?_I2C_Master_RepeatedStart 0001  
                 __size_of___fltol 00BA                   __size_of___lldiv 0084  
                 __size_of___llmod 0068                       ??_full_drive 00FD  
                       ?_vfpfcnvrt 00C6                    ___aodiv@divisor 0088  
                  ___aodiv@counter 0090                   __size_of_lcdInst 0010  
         actuators_main@steps2_adj 0114                      _number_deploy 2212  
                  _I2C_Master_Init 3A52                    _I2C_Master_Read 3E44  
                 __size_of_initLCD 0070                           ___xxtofl 2CF4  
                  _I2C_Master_Wait 3F16                    _I2C_Master_Stop 3F54  
                 __size_of_isalpha 0036                   __size_of_isdigit 0032  
                 __size_of_islower 0032                   __size_of_isspace 0040  
                         __ptext10 27CC                           __ptext11 3D20  
                         __ptext20 3E6E                           __ptext12 35B2  
                         __ptext21 3B08                           __ptext13 316C  
                         __ptext30 3DE8                           __ptext22 1432  
                         __ptext14 291C                           __ptext31 3C7A  
                         __ptext23 1FDC                           __ptext15 17DC  
                         __ptext40 3E96                           __ptext32 397C  
                         __ptext24 3BB0                           __ptext16 36EE  
                         __ptext41 390C                           __ptext33 3F2A  
                         __ptext25 3D52                           __ptext17 3268  
                         __ptext50 3E44                           __ptext42 3F3A  
                         __ptext34 3CEC                           __ptext26 3D84  
                         __ptext18 335A                           __ptext51 3A52  
                         __ptext43 3EFE                           __ptext35 2E34  
                         __ptext27 3CB6                           __ptext19 0012  
                         __ptext60 1B0C                           __ptext52 3804  
                         __ptext44 3EE4                           __ptext36 2A66  
                         __ptext28 1D94                           __ptext53 3F64  
                         __ptext45 3E16                           __ptext37 2BB0  
                         __ptext29 3652                           __ptext54 3F16  
                         __ptext46 39EA                           __ptext38 3BFC  
                         __ptext47 3F4A                           __ptext39 3DB6  
                         __ptext56 0EEE                           __ptext48 3F54  
                         __ptext57 3888                           __ptext49 3F5C  
                         __ptext58 2CF4                           __ptext59 3448  
                 __size_of_isupper 0032                           _avg_dist 0044  
                 __size_of_pulse_e 002E                        ??_backwards 0083  
                 __size_of_stepper 014A                   __size_of_toupper 004C  
                    __size_of_echo 0544                      __size_of_atoi 0144  
                    __size_of_main 06C8                      __size_of_dtoa 0248  
          stepper2_back@steps2_adj 0100                      __size_of_trig 0102  
                    __size_of_xtoa 0236                 __end_of_full_drive 1B0C  
                         _keypress 005F                           _temp_int 01EB  
                  ?_servoRotate180 0080                           int$flags 006E  
                         _vfprintf 3B08                           main@Pole 0162  
                         _stepper2 316C                           main@data 01CA  
                        printf@fmt 00ED        I2C_Master_Write@byteToWrite 0081  
                 ___aomod@dividend 0080              __size_of_servoRotate0 00EE  
                         min@array 0080                       ??_print_echo 00FB  
                   ?_number_deploy 00FB                          putch@data 0083  
         __end_of_I2C_Master_Start 3F64                     _vfpfcnvrt$1258 00E3  
         __end_of_I2C_Master_Write 3F54                         _INTCONbits 000FF2  
            ultrasonic_main@sensed 0104                           isalpha@c 0080  
                         isdigit@c 0080                          stepper2@i 0107  
                      _send_nibble 3EE4                           intlevel2 0000  
                    _LCD_SIZE_HORZ FDB2                           islower@c 0080  
                    _LCD_SIZE_VERT FDB1                           isspace@c 0080  
                 ___lldiv@dividend 0080                        ??_send_byte 0082  
                         isupper@c 0080                     _tires_deployed 0054  
               __end_of_print_echo 2620                      ??_system_init 0080  
                     _servoRotate0 335A                           printf@ap 00F9  
          __end_of_I2C_Master_Init 3AB2                    ___aomod@divisor 0088  
          __end_of_I2C_Master_Read 3E6E            __end_of_I2C_Master_Wait 3F2A  
          __end_of_I2C_Master_Stop 3F5C                        ??_vfpfcnvrt 00CC  
                      lcdInst@data 0083                    ___aomod@counter 0090  
                         stepper@i 010A          ultrasonic_main@steps2_adj 0108  
                 ___lldiv@quotient 0088                           toupper@c 0086  
                      _SSPCON1bits 000FC6                        _SSPCON2bits 000FC5  
                      _timer_count 005C                       ___aodiv@sign 0091  
                     ___aomod@sign 0091               stepper@count_stepper 0108  
