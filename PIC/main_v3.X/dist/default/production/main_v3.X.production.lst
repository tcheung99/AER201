

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 22:56:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4620 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  003EEE                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for _dists
   121  003EEE  0000               	dw	0
   122  003EF0  FFFF               	dw	65535
   123                           
   124                           ;initializer for _send
   125  003EF2  01                 	db	1
   126                           
   127                           	psect	mediumconst
   128  00FD9C                     __pmediumconst:
   129                           	opt callstack 0
   130  00FD9C  00                 	db	0
   131  00FD9D                     _keys:
   132                           	opt callstack 0
   133  00FD9D  31                 	db	49
   134  00FD9E  32                 	db	50
   135  00FD9F  33                 	db	51
   136  00FDA0  41                 	db	65
   137  00FDA1  34                 	db	52
   138  00FDA2  35                 	db	53
   139  00FDA3  36                 	db	54
   140  00FDA4  42                 	db	66
   141  00FDA5  37                 	db	55
   142  00FDA6  38                 	db	56
   143  00FDA7  39                 	db	57
   144  00FDA8  43                 	db	67
   145  00FDA9  2A                 	db	42
   146  00FDAA  30                 	db	48
   147  00FDAB  23                 	db	35
   148  00FDAC  44                 	db	68
   149  00FDAD  00                 	db	0
   150  00FDAE                     __end_of_keys:
   151                           	opt callstack 0
   152  00FDAE  50                 	db	80
   153  00FDAF                     __end_of_LCD_LINE4_ADDR:
   154                           	opt callstack 0
   155  00FDAF  10                 	db	16
   156  00FDB0                     __end_of_LCD_LINE3_ADDR:
   157                           	opt callstack 0
   158  00FDB0                     _LCD_LINE1_ADDR:
   159                           	opt callstack 0
   160  00FDB0  00                 	db	0
   161  00FDB1                     __end_of_LCD_LINE1_ADDR:
   162                           	opt callstack 0
   163  00FDB1                     _LCD_SIZE_VERT:
   164                           	opt callstack 0
   165  00FDB1  04                 	db	4
   166  00FDB2                     __end_of_LCD_SIZE_VERT:
   167                           	opt callstack 0
   168  00FDB2                     _LCD_SIZE_HORZ:
   169                           	opt callstack 0
   170  00FDB2  10                 	db	16
   171  00FDB3                     __end_of_LCD_SIZE_HORZ:
   172                           	opt callstack 0
   173  00FDB3  40                 	db	64
   174  00FDB4                     __end_of_LCD_LINE2_ADDR:
   175                           	opt callstack 0
   176  0000                     _EECON2	set	4007
   177  0000                     _EECON1bits	set	4006
   178  0000                     _EEADR	set	4009
   179  0000                     _EEDATA	set	4008
   180  0000                     _PORTAbits	set	3968
   181  0000                     _TRISAbits	set	3986
   182  0000                     _T1CON	set	4045
   183  0000                     _PORTB	set	3969
   184  0000                     _TMR1H	set	4047
   185  0000                     _TMR1L	set	4046
   186  0000                     _LATDbits	set	3980
   187  0000                     _INTCONbits	set	4082
   188  0000                     _LATBbits	set	3978
   189  0000                     _TRISBbits	set	3987
   190  0000                     _LATE	set	3981
   191  0000                     _TRISE	set	3990
   192  0000                     _LATC	set	3979
   193  0000                     _TRISC	set	3988
   194  0000                     _ADCON1	set	4033
   195  0000                     _TRISD	set	3989
   196  0000                     _LATD	set	3980
   197  0000                     _TRISA	set	3986
   198  0000                     _LATB	set	3978
   199  0000                     _TRISB	set	3987
   200  0000                     _LATAbits	set	3977
   201  0000                     _LATEbits	set	3981
   202  0000                     _LATCbits	set	3979
   203  0000                     _LATA	set	3977
   204  0000                     _SSPBUF	set	4041
   205  0000                     _SSPCON2bits	set	4037
   206  0000                     _SSPCON1	set	4038
   207  0000                     _SSPADD	set	4040
   208  0000                     _TRISCbits	set	3988
   209  0000                     _SSPCON1bits	set	4038
   210  0000                     _SSPCON2	set	4037
   211  0000                     _SSPSTAT	set	4039
   212  0000                     _GIE	set	32663
   213  0000                     _INT1IE	set	32643
   214  0000                     _RB2	set	31754
   215  0000                     _RB3	set	31755
   216  0000                     _RB4	set	31756
   217  0000                     _RB5	set	31757
   218  0000                     _RB6	set	31758
   219  0000                     _TMR1ON	set	32360
   220  0000                     _RB7	set	31759
   221  0000                     _INT1IF	set	32640
   222  0000                     _RBIE	set	32659
   223  0000                     _RBIF	set	32656
   224  0000                     _RD0	set	31768
   225  0000                     _RD1	set	31769
   226  0000                     _RC2	set	31762
   227  0000                     _RC1	set	31761
   228  00FDB4                     STR_40:
   229  00FDB4  50                 	db	80	;'P'
   230  00FDB5  25                 	db	37
   231  00FDB6  64                 	db	100	;'d'
   232  00FDB7  20                 	db	32
   233  00FDB8  44                 	db	68	;'D'
   234  00FDB9  65                 	db	101	;'e'
   235  00FDBA  70                 	db	112	;'p'
   236  00FDBB  3A                 	db	58	;':'
   237  00FDBC  25                 	db	37
   238  00FDBD  64                 	db	100	;'d'
   239  00FDBE  2C                 	db	44
   240  00FDBF  54                 	db	84	;'T'
   241  00FDC0  6F                 	db	111	;'o'
   242  00FDC1  74                 	db	116	;'t'
   243  00FDC2  3A                 	db	58	;':'
   244  00FDC3  25                 	db	37
   245  00FDC4  64                 	db	100	;'d'
   246  00FDC5  00                 	db	0
   247  00FDC6                     STR_30:
   248  00FDC6  20                 	db	32
   249  00FDC7  20                 	db	32
   250  00FDC8  20                 	db	32
   251  00FDC9  20                 	db	32
   252  00FDCA  20                 	db	32
   253  00FDCB  30                 	db	48	;'0'
   254  00FDCC  2D                 	db	45
   255  00FDCD  4D                 	db	77	;'M'
   256  00FDCE  65                 	db	101	;'e'
   257  00FDCF  6E                 	db	110	;'n'
   258  00FDD0  75                 	db	117	;'u'
   259  00FDD1  20                 	db	32
   260  00FDD2  20                 	db	32
   261  00FDD3  20                 	db	32
   262  00FDD4  20                 	db	32
   263  00FDD5  20                 	db	32
   264  00FDD6  00                 	db	0
   265  00FDD7                     STR_47:
   266  00FDD7  3C                 	db	60	;'<'
   267  00FDD8  2A                 	db	42
   268  00FDD9  20                 	db	32
   269  00FDDA  20                 	db	32
   270  00FDDB  20                 	db	32
   271  00FDDC  30                 	db	48	;'0'
   272  00FDDD  2D                 	db	45
   273  00FDDE  4D                 	db	77	;'M'
   274  00FDDF  65                 	db	101	;'e'
   275  00FDE0  6E                 	db	110	;'n'
   276  00FDE1  75                 	db	117	;'u'
   277  00FDE2  20                 	db	32
   278  00FDE3  20                 	db	32
   279  00FDE4  20                 	db	32
   280  00FDE5  20                 	db	32
   281  00FDE6  20                 	db	32
   282  00FDE7  00                 	db	0
   283  00FDE8                     STR_10:
   284  00FDE8  44                 	db	68	;'D'
   285  00FDE9  69                 	db	105	;'i'
   286  00FDEA  73                 	db	115	;'s'
   287  00FDEB  74                 	db	116	;'t'
   288  00FDEC  31                 	db	49	;'1'
   289  00FDED  3D                 	db	61	;'='
   290  00FDEE  25                 	db	37
   291  00FDEF  64                 	db	100	;'d'
   292  00FDF0  2C                 	db	44
   293  00FDF1  41                 	db	65	;'A'
   294  00FDF2  76                 	db	118	;'v'
   295  00FDF3  67                 	db	103	;'g'
   296  00FDF4  3D                 	db	61	;'='
   297  00FDF5  25                 	db	37
   298  00FDF6  64                 	db	100	;'d'
   299  00FDF7  20                 	db	32
   300  00FDF8  00                 	db	0
   301  00FDF9                     STR_16:
   302  00FDF9  44                 	db	68	;'D'
   303  00FDFA  69                 	db	105	;'i'
   304  00FDFB  73                 	db	115	;'s'
   305  00FDFC  74                 	db	116	;'t'
   306  00FDFD  34                 	db	52	;'4'
   307  00FDFE  3D                 	db	61	;'='
   308  00FDFF  25                 	db	37
   309  00FE00  64                 	db	100	;'d'
   310  00FE01  2C                 	db	44
   311  00FE02  41                 	db	65	;'A'
   312  00FE03  76                 	db	118	;'v'
   313  00FE04  67                 	db	103	;'g'
   314  00FE05  3D                 	db	61	;'='
   315  00FE06  25                 	db	37
   316  00FE07  64                 	db	100	;'d'
   317  00FE08  20                 	db	32
   318  00FE09  00                 	db	0
   319  00FE0A                     STR_36:
   320  00FE0A  20                 	db	32
   321  00FE0B  20                 	db	32
   322  00FE0C  20                 	db	32
   323  00FE0D  20                 	db	32
   324  00FE0E  20                 	db	32
   325  00FE0F  30                 	db	48	;'0'
   326  00FE10  2D                 	db	45
   327  00FE11  4D                 	db	77	;'M'
   328  00FE12  65                 	db	101	;'e'
   329  00FE13  6E                 	db	110	;'n'
   330  00FE14  75                 	db	117	;'u'
   331  00FE15  20                 	db	32
   332  00FE16  20                 	db	32
   333  00FE17  20                 	db	32
   334  00FE18  23                 	db	35
   335  00FE19  3E                 	db	62	;'>'
   336  00FE1A  00                 	db	0
   337  00FE1B                     STR_39:
   338  00FE1B  3C                 	db	60	;'<'
   339  00FE1C  2A                 	db	42
   340  00FE1D  20                 	db	32
   341  00FE1E  20                 	db	32
   342  00FE1F  20                 	db	32
   343  00FE20  30                 	db	48	;'0'
   344  00FE21  2D                 	db	45
   345  00FE22  4D                 	db	77	;'M'
   346  00FE23  65                 	db	101	;'e'
   347  00FE24  6E                 	db	110	;'n'
   348  00FE25  75                 	db	117	;'u'
   349  00FE26  20                 	db	32
   350  00FE27  20                 	db	32
   351  00FE28  20                 	db	32
   352  00FE29  23                 	db	35
   353  00FE2A  3E                 	db	62	;'>'
   354  00FE2B  00                 	db	0
   355  00FE2C                     STR_58:
   356  00FE2C  64                 	db	100	;'d'
   357  00FE2D  69                 	db	105	;'i'
   358  00FE2E  73                 	db	115	;'s'
   359  00FE2F  74                 	db	116	;'t'
   360  00FE30  20                 	db	32
   361  00FE31  70                 	db	112	;'p'
   362  00FE32  5B                 	db	91	;'['
   363  00FE33  25                 	db	37
   364  00FE34  64                 	db	100	;'d'
   365  00FE35  5D                 	db	93	;']'
   366  00FE36  3A                 	db	58	;':'
   367  00FE37  25                 	db	37
   368  00FE38  64                 	db	100	;'d'
   369  00FE39  2C                 	db	44
   370  00FE3A  25                 	db	37
   371  00FE3B  64                 	db	100	;'d'
   372  00FE3C  00                 	db	0
   373  00FE3D                     STR_22:
   374  00FE3D  64                 	db	100	;'d'
   375  00FE3E  65                 	db	101	;'e'
   376  00FE3F  74                 	db	116	;'t'
   377  00FE40  2C                 	db	44
   378  00FE41  25                 	db	37
   379  00FE42  64                 	db	100	;'d'
   380  00FE43  2C                 	db	44
   381  00FE44  20                 	db	32
   382  00FE45  74                 	db	116	;'t'
   383  00FE46  63                 	db	99	;'c'
   384  00FE47  6E                 	db	110	;'n'
   385  00FE48  74                 	db	116	;'t'
   386  00FE49  20                 	db	32
   387  00FE4A  25                 	db	37
   388  00FE4B  64                 	db	100	;'d'
   389  00FE4C  00                 	db	0
   390  00FE4D                     STR_12:
   391  00FE4D  44                 	db	68	;'D'
   392  00FE4E  69                 	db	105	;'i'
   393  00FE4F  73                 	db	115	;'s'
   394  00FE50  74                 	db	116	;'t'
   395  00FE51  32                 	db	50	;'2'
   396  00FE52  3D                 	db	61	;'='
   397  00FE53  25                 	db	37
   398  00FE54  64                 	db	100	;'d'
   399  00FE55  2C                 	db	44
   400  00FE56  41                 	db	65	;'A'
   401  00FE57  76                 	db	118	;'v'
   402  00FE58  67                 	db	103	;'g'
   403  00FE59  3D                 	db	61	;'='
   404  00FE5A  25                 	db	37
   405  00FE5B  64                 	db	100	;'d'
   406  00FE5C  00                 	db	0
   407  00FE5D                     STR_14:
   408  00FE5D  44                 	db	68	;'D'
   409  00FE5E  69                 	db	105	;'i'
   410  00FE5F  73                 	db	115	;'s'
   411  00FE60  74                 	db	116	;'t'
   412  00FE61  33                 	db	51	;'3'
   413  00FE62  3D                 	db	61	;'='
   414  00FE63  25                 	db	37
   415  00FE64  64                 	db	100	;'d'
   416  00FE65  2C                 	db	44
   417  00FE66  41                 	db	65	;'A'
   418  00FE67  76                 	db	118	;'v'
   419  00FE68  67                 	db	103	;'g'
   420  00FE69  3D                 	db	61	;'='
   421  00FE6A  25                 	db	37
   422  00FE6B  64                 	db	100	;'d'
   423  00FE6C  00                 	db	0
   424  00FE6D                     STR_25:
   425  00FE6D  33                 	db	51	;'3'
   426  00FE6E  20                 	db	32
   427  00FE6F  2D                 	db	45
   428  00FE70  20                 	db	32
   429  00FE71  44                 	db	68	;'D'
   430  00FE72  61                 	db	97	;'a'
   431  00FE73  74                 	db	116	;'t'
   432  00FE74  65                 	db	101	;'e'
   433  00FE75  26                 	db	38
   434  00FE76  54                 	db	84	;'T'
   435  00FE77  69                 	db	105	;'i'
   436  00FE78  6D                 	db	109	;'m'
   437  00FE79  65                 	db	101	;'e'
   438  00FE7A  20                 	db	32
   439  00FE7B  00                 	db	0
   440  00FE7C                     STR_41:
   441  00FE7C  44                 	db	68	;'D'
   442  00FE7D  69                 	db	105	;'i'
   443  00FE7E  73                 	db	115	;'s'
   444  00FE7F  74                 	db	116	;'t'
   445  00FE80  54                 	db	84	;'T'
   446  00FE81  6F                 	db	111	;'o'
   447  00FE82  53                 	db	83	;'S'
   448  00FE83  74                 	db	116	;'t'
   449  00FE84  61                 	db	97	;'a'
   450  00FE85  72                 	db	114	;'r'
   451  00FE86  74                 	db	116	;'t'
   452  00FE87  3A                 	db	58	;':'
   453  00FE88  25                 	db	37
   454  00FE89  64                 	db	100	;'d'
   455  00FE8A  00                 	db	0
   456  00FE8B                     STR_29:
   457  00FE8B  4D                 	db	77	;'M'
   458  00FE8C  61                 	db	97	;'a'
   459  00FE8D  63                 	db	99	;'c'
   460  00FE8E  68                 	db	104	;'h'
   461  00FE8F  69                 	db	105	;'i'
   462  00FE90  6E                 	db	110	;'n'
   463  00FE91  65                 	db	101	;'e'
   464  00FE92  20                 	db	32
   465  00FE93  49                 	db	73	;'I'
   466  00FE94  6E                 	db	110	;'n'
   467  00FE95  20                 	db	32
   468  00FE96  55                 	db	85	;'U'
   469  00FE97  73                 	db	115	;'s'
   470  00FE98  65                 	db	101	;'e'
   471  00FE99  00                 	db	0
   472  00FE9A                     STR_49:
   473  00FE9A  25                 	db	37
   474  00FE9B  30                 	db	48	;'0'
   475  00FE9C  32                 	db	50	;'2'
   476  00FE9D  78                 	db	120	;'x'
   477  00FE9E  2F                 	db	47
   478  00FE9F  25                 	db	37
   479  00FEA0  30                 	db	48	;'0'
   480  00FEA1  32                 	db	50	;'2'
   481  00FEA2  78                 	db	120	;'x'
   482  00FEA3  2F                 	db	47
   483  00FEA4  25                 	db	37
   484  00FEA5  30                 	db	48	;'0'
   485  00FEA6  32                 	db	50	;'2'
   486  00FEA7  78                 	db	120	;'x'
   487  00FEA8  00                 	db	0
   488  00FEA9                     STR_50:
   489  00FEA9  25                 	db	37
   490  00FEAA  30                 	db	48	;'0'
   491  00FEAB  32                 	db	50	;'2'
   492  00FEAC  78                 	db	120	;'x'
   493  00FEAD  3A                 	db	58	;':'
   494  00FEAE  25                 	db	37
   495  00FEAF  30                 	db	48	;'0'
   496  00FEB0  32                 	db	50	;'2'
   497  00FEB1  78                 	db	120	;'x'
   498  00FEB2  3A                 	db	58	;':'
   499  00FEB3  25                 	db	37
   500  00FEB4  30                 	db	48	;'0'
   501  00FEB5  32                 	db	50	;'2'
   502  00FEB6  78                 	db	120	;'x'
   503  00FEB7  00                 	db	0
   504  00FEB8                     STR_59:
   505  00FEB8  70                 	db	112	;'p'
   506  00FEB9  5B                 	db	91	;'['
   507  00FEBA  25                 	db	37
   508  00FEBB  64                 	db	100	;'d'
   509  00FEBC  5D                 	db	93	;']'
   510  00FEBD  20                 	db	32
   511  00FEBE  66                 	db	102	;'f'
   512  00FEBF  73                 	db	115	;'s'
   513  00FEC0  20                 	db	32
   514  00FEC1  3A                 	db	58	;':'
   515  00FEC2  20                 	db	32
   516  00FEC3  25                 	db	37
   517  00FEC4  64                 	db	100	;'d'
   518  00FEC5  00                 	db	0
   519  00FEC6                     STR_38:
   520  00FEC6  4E                 	db	78	;'N'
   521  00FEC7  6F                 	db	111	;'o'
   522  00FEC8  2E                 	db	46
   523  00FEC9  20                 	db	32
   524  00FECA  50                 	db	80	;'P'
   525  00FECB  6F                 	db	111	;'o'
   526  00FECC  6C                 	db	108	;'l'
   527  00FECD  65                 	db	101	;'e'
   528  00FECE  73                 	db	115	;'s'
   529  00FECF  3A                 	db	58	;':'
   530  00FED0  20                 	db	32
   531  00FED1  25                 	db	37
   532  00FED2  64                 	db	100	;'d'
   533  00FED3  00                 	db	0
   534  00FED4                     STR_37:
   535  00FED4  4E                 	db	78	;'N'
   536  00FED5  6F                 	db	111	;'o'
   537  00FED6  2E                 	db	46
   538  00FED7  20                 	db	32
   539  00FED8  54                 	db	84	;'T'
   540  00FED9  69                 	db	105	;'i'
   541  00FEDA  72                 	db	114	;'r'
   542  00FEDB  65                 	db	101	;'e'
   543  00FEDC  73                 	db	115	;'s'
   544  00FEDD  3A                 	db	58	;':'
   545  00FEDE  20                 	db	32
   546  00FEDF  25                 	db	37
   547  00FEE0  64                 	db	100	;'d'
   548  00FEE1  00                 	db	0
   549  00FEE2                     STR_7:
   550  00FEE2  53                 	db	83	;'S'
   551  00FEE3  74                 	db	116	;'t'
   552  00FEE4  65                 	db	101	;'e'
   553  00FEE5  70                 	db	112	;'p'
   554  00FEE6  20                 	db	32
   555  00FEE7  73                 	db	115	;'s'
   556  00FEE8  70                 	db	112	;'p'
   557  00FEE9  65                 	db	101	;'e'
   558  00FEEA  65                 	db	101	;'e'
   559  00FEEB  64                 	db	100	;'d'
   560  00FEEC  20                 	db	32
   561  00FEED  25                 	db	37
   562  00FEEE  64                 	db	100	;'d'
   563  00FEEF  00                 	db	0
   564  00FEF0                     STR_19:
   565  00FEF0  62                 	db	98	;'b'
   566  00FEF1  72                 	db	114	;'r'
   567  00FEF2  65                 	db	101	;'e'
   568  00FEF3  61                 	db	97	;'a'
   569  00FEF4  6B                 	db	107	;'k'
   570  00FEF5  20                 	db	32
   571  00FEF6  68                 	db	104	;'h'
   572  00FEF7  65                 	db	101	;'e'
   573  00FEF8  72                 	db	114	;'r'
   574  00FEF9  65                 	db	101	;'e'
   575  00FEFA  65                 	db	101	;'e'
   576  00FEFB  3F                 	db	63	;'?'
   577  00FEFC  00                 	db	0
   578  00FEFD                     STR_54:
   579  00FEFD  6D                 	db	109	;'m'
   580  00FEFE  6F                 	db	111	;'o'
   581  00FEFF  72                 	db	114	;'r'
   582  00FF00  65                 	db	101	;'e'
   583  00FF01  20                 	db	32
   584  00FF02  77                 	db	119	;'w'
   585  00FF03  61                 	db	97	;'a'
   586  00FF04  69                 	db	105	;'i'
   587  00FF05  74                 	db	116	;'t'
   588  00FF06  69                 	db	105	;'i'
   589  00FF07  6E                 	db	110	;'n'
   590  00FF08  67                 	db	103	;'g'
   591  00FF09  00                 	db	0
   592  00FF0A                     STR_2:
   593  00FF0A  53                 	db	83	;'S'
   594  00FF0B  74                 	db	116	;'t'
   595  00FF0C  65                 	db	101	;'e'
   596  00FF0D  70                 	db	112	;'p'
   597  00FF0E  70                 	db	112	;'p'
   598  00FF0F  65                 	db	101	;'e'
   599  00FF10  72                 	db	114	;'r'
   600  00FF11  20                 	db	32
   601  00FF12  64                 	db	100	;'d'
   602  00FF13  6F                 	db	111	;'o'
   603  00FF14  6E                 	db	110	;'n'
   604  00FF15  65                 	db	101	;'e'
   605  00FF16  00                 	db	0
   606  00FF17                     STR_48:
   607  00FF17  44                 	db	68	;'D'
   608  00FF18  41                 	db	65	;'A'
   609  00FF19  54                 	db	84	;'T'
   610  00FF1A  45                 	db	69	;'E'
   611  00FF1B  20                 	db	32
   612  00FF1C  26                 	db	38
   613  00FF1D  20                 	db	32
   614  00FF1E  54                 	db	84	;'T'
   615  00FF1F  49                 	db	73	;'I'
   616  00FF20  4D                 	db	77	;'M'
   617  00FF21  45                 	db	69	;'E'
   618  00FF22  00                 	db	0
   619  00FF23                     STR_21:
   620  00FF23  73                 	db	115	;'s'
   621  00FF24  74                 	db	116	;'t'
   622  00FF25  65                 	db	101	;'e'
   623  00FF26  70                 	db	112	;'p'
   624  00FF27  73                 	db	115	;'s'
   625  00FF28  61                 	db	97	;'a'
   626  00FF29  64                 	db	100	;'d'
   627  00FF2A  6A                 	db	106	;'j'
   628  00FF2B  20                 	db	32
   629  00FF2C  25                 	db	37
   630  00FF2D  64                 	db	100	;'d'
   631  00FF2E  00                 	db	0
   632  00FF2F                     STR_60:
   633  00FF2F  61                 	db	97	;'a'
   634  00FF30  76                 	db	118	;'v'
   635  00FF31  67                 	db	103	;'g'
   636  00FF32  20                 	db	32
   637  00FF33  64                 	db	100	;'d'
   638  00FF34  69                 	db	105	;'i'
   639  00FF35  73                 	db	115	;'s'
   640  00FF36  74                 	db	116	;'t'
   641  00FF37  20                 	db	32
   642  00FF38  25                 	db	37
   643  00FF39  64                 	db	100	;'d'
   644  00FF3A  00                 	db	0
   645  00FF3B                     STR_42:
   646  00FF3B  44                 	db	68	;'D'
   647  00FF3C  69                 	db	105	;'i'
   648  00FF3D  73                 	db	115	;'s'
   649  00FF3E  74                 	db	116	;'t'
   650  00FF3F  54                 	db	84	;'T'
   651  00FF40  6F                 	db	111	;'o'
   652  00FF41  43                 	db	67	;'C'
   653  00FF42  4C                 	db	76	;'L'
   654  00FF43  3A                 	db	58	;':'
   655  00FF44  25                 	db	37
   656  00FF45  64                 	db	100	;'d'
   657  00FF46  00                 	db	0
   658  00FF47                     STR_24:
   659  00FF47  32                 	db	50	;'2'
   660  00FF48  20                 	db	32
   661  00FF49  2D                 	db	45
   662  00FF4A  20                 	db	32
   663  00FF4B  53                 	db	83	;'S'
   664  00FF4C  75                 	db	117	;'u'
   665  00FF4D  6D                 	db	109	;'m'
   666  00FF4E  6D                 	db	109	;'m'
   667  00FF4F  61                 	db	97	;'a'
   668  00FF50  72                 	db	114	;'r'
   669  00FF51  79                 	db	121	;'y'
   670  00FF52  00                 	db	0
   671  00FF53                     STR_61:
   672  00FF53  70                 	db	112	;'p'
   673  00FF54  6F                 	db	111	;'o'
   674  00FF55  6C                 	db	108	;'l'
   675  00FF56  65                 	db	101	;'e'
   676  00FF57  73                 	db	115	;'s'
   677  00FF58  20                 	db	32
   678  00FF59  64                 	db	100	;'d'
   679  00FF5A  20                 	db	32
   680  00FF5B  25                 	db	37
   681  00FF5C  64                 	db	100	;'d'
   682  00FF5D  00                 	db	0
   683  00FF5E                     STR_20:
   684  00FF5E  6D                 	db	109	;'m'
   685  00FF5F  69                 	db	105	;'i'
   686  00FF60  6E                 	db	110	;'n'
   687  00FF61  69                 	db	105	;'i'
   688  00FF62  6D                 	db	109	;'m'
   689  00FF63  75                 	db	117	;'u'
   690  00FF64  6D                 	db	109	;'m'
   691  00FF65  20                 	db	32
   692  00FF66  25                 	db	37
   693  00FF67  64                 	db	100	;'d'
   694  00FF68  00                 	db	0
   695  00FF69                     STR_62:
   696  00FF69  70                 	db	112	;'p'
   697  00FF6A  6F                 	db	111	;'o'
   698  00FF6B  6C                 	db	108	;'l'
   699  00FF6C  65                 	db	101	;'e'
   700  00FF6D  73                 	db	115	;'s'
   701  00FF6E  20                 	db	32
   702  00FF6F  64                 	db	100	;'d'
   703  00FF70  6F                 	db	111	;'o'
   704  00FF71  6E                 	db	110	;'n'
   705  00FF72  65                 	db	101	;'e'
   706  00FF73  00                 	db	0
   707  00FF74                     STR_3:
   708  00FF74  53                 	db	83	;'S'
   709  00FF75  65                 	db	101	;'e'
   710  00FF76  72                 	db	114	;'r'
   711  00FF77  76                 	db	118	;'v'
   712  00FF78  6F                 	db	111	;'o'
   713  00FF79  20                 	db	32
   714  00FF7A  64                 	db	100	;'d'
   715  00FF7B  6F                 	db	111	;'o'
   716  00FF7C  6E                 	db	110	;'n'
   717  00FF7D  65                 	db	101	;'e'
   718  00FF7E  00                 	db	0
   719  00FF7F                     STR_11:
   720  00FF7F  44                 	db	68	;'D'
   721  00FF80  69                 	db	105	;'i'
   722  00FF81  73                 	db	115	;'s'
   723  00FF82  74                 	db	116	;'t'
   724  00FF83  31                 	db	49	;'1'
   725  00FF84  20                 	db	32
   726  00FF85  3D                 	db	61	;'='
   727  00FF86  20                 	db	32
   728  00FF87  58                 	db	88	;'X'
   729  00FF88  00                 	db	0
   730  00FF89                     STR_13:
   731  00FF89  44                 	db	68	;'D'
   732  00FF8A  69                 	db	105	;'i'
   733  00FF8B  73                 	db	115	;'s'
   734  00FF8C  74                 	db	116	;'t'
   735  00FF8D  32                 	db	50	;'2'
   736  00FF8E  20                 	db	32
   737  00FF8F  3D                 	db	61	;'='
   738  00FF90  20                 	db	32
   739  00FF91  58                 	db	88	;'X'
   740  00FF92  00                 	db	0
   741  00FF93                     STR_15:
   742  00FF93  44                 	db	68	;'D'
   743  00FF94  69                 	db	105	;'i'
   744  00FF95  73                 	db	115	;'s'
   745  00FF96  74                 	db	116	;'t'
   746  00FF97  33                 	db	51	;'3'
   747  00FF98  20                 	db	32
   748  00FF99  3D                 	db	61	;'='
   749  00FF9A  20                 	db	32
   750  00FF9B  58                 	db	88	;'X'
   751  00FF9C  00                 	db	0
   752  00FF9D                     STR_17:
   753  00FF9D  44                 	db	68	;'D'
   754  00FF9E  69                 	db	105	;'i'
   755  00FF9F  73                 	db	115	;'s'
   756  00FFA0  74                 	db	116	;'t'
   757  00FFA1  34                 	db	52	;'4'
   758  00FFA2  20                 	db	32
   759  00FFA3  3D                 	db	61	;'='
   760  00FFA4  20                 	db	32
   761  00FFA5  58                 	db	88	;'X'
   762  00FFA6  00                 	db	0
   763  00FFA7                     STR_56:
   764  00FFA7  64                 	db	100	;'d'
   765  00FFA8  75                 	db	117	;'u'
   766  00FFA9  6E                 	db	110	;'n'
   767  00FFAA  20                 	db	32
   768  00FFAB  62                 	db	98	;'b'
   769  00FFAC  72                 	db	114	;'r'
   770  00FFAD  65                 	db	101	;'e'
   771  00FFAE  61                 	db	97	;'a'
   772  00FFAF  6B                 	db	107	;'k'
   773  00FFB0  00                 	db	0
   774  00FFB1                     STR_63:
   775  00FFB1  62                 	db	98	;'b'
   776  00FFB2  61                 	db	97	;'a'
   777  00FFB3  63                 	db	99	;'c'
   778  00FFB4  6B                 	db	107	;'k'
   779  00FFB5  77                 	db	119	;'w'
   780  00FFB6  61                 	db	97	;'a'
   781  00FFB7  72                 	db	114	;'r'
   782  00FFB8  64                 	db	100	;'d'
   783  00FFB9  73                 	db	115	;'s'
   784  00FFBA  00                 	db	0
   785  00FFBB                     STR_55:
   786  00FFBB  64                 	db	100	;'d'
   787  00FFBC  6F                 	db	111	;'o'
   788  00FFBD  6E                 	db	110	;'n'
   789  00FFBE  65                 	db	101	;'e'
   790  00FFBF  20                 	db	32
   791  00FFC0  77                 	db	119	;'w'
   792  00FFC1  61                 	db	97	;'a'
   793  00FFC2  69                 	db	105	;'i'
   794  00FFC3  74                 	db	116	;'t'
   795  00FFC4  00                 	db	0
   796  00FFC5                     STR_23:
   797  00FFC5  31                 	db	49	;'1'
   798  00FFC6  20                 	db	32
   799  00FFC7  2D                 	db	45
   800  00FFC8  20                 	db	32
   801  00FFC9  53                 	db	83	;'S'
   802  00FFCA  74                 	db	116	;'t'
   803  00FFCB  61                 	db	97	;'a'
   804  00FFCC  72                 	db	114	;'r'
   805  00FFCD  74                 	db	116	;'t'
   806  00FFCE  00                 	db	0
   807  00FFCF                     STR_5:
   808  00FFCF  73                 	db	115	;'s'
   809  00FFD0  74                 	db	116	;'t'
   810  00FFD1  65                 	db	101	;'e'
   811  00FFD2  70                 	db	112	;'p'
   812  00FFD3  70                 	db	112	;'p'
   813  00FFD4  70                 	db	112	;'p'
   814  00FFD5  20                 	db	32
   815  00FFD6  25                 	db	37
   816  00FFD7  64                 	db	100	;'d'
   817  00FFD8  00                 	db	0
   818  00FFD9                     STR_1:
   819  00FFD9  63                 	db	99	;'c'
   820  00FFDA  6E                 	db	110	;'n'
   821  00FFDB  74                 	db	116	;'t'
   822  00FFDC  20                 	db	32
   823  00FFDD  69                 	db	105	;'i'
   824  00FFDE  73                 	db	115	;'s'
   825  00FFDF  20                 	db	32
   826  00FFE0  25                 	db	37
   827  00FFE1  64                 	db	100	;'d'
   828  00FFE2  00                 	db	0
   829  00FFE3                     STR_31:
   830  00FFE3  4F                 	db	79	;'O'
   831  00FFE4  70                 	db	112	;'p'
   832  00FFE5  20                 	db	32
   833  00FFE6  54                 	db	84	;'T'
   834  00FFE7  69                 	db	105	;'i'
   835  00FFE8  6D                 	db	109	;'m'
   836  00FFE9  65                 	db	101	;'e'
   837  00FFEA  3A                 	db	58	;':'
   838  00FFEB  00                 	db	0
   839  00FFEC                     STR_18:
   840  00FFEC  6F                 	db	111	;'o'
   841  00FFED  72                 	db	114	;'r'
   842  00FFEE  20                 	db	32
   843  00FFEF  68                 	db	104	;'h'
   844  00FFF0  65                 	db	101	;'e'
   845  00FFF1  72                 	db	114	;'r'
   846  00FFF2  65                 	db	101	;'e'
   847  00FFF3  00                 	db	0
   848  00FFF4                     STR_6:
   849  00FFF4  73                 	db	115	;'s'
   850  00FFF5  74                 	db	116	;'t'
   851  00FFF6  65                 	db	101	;'e'
   852  00FFF7  70                 	db	112	;'p'
   853  00FFF8  31                 	db	49	;'1'
   854  00FFF9  00                 	db	0
   855  00FFFA                     STR_9:
   856  00FFFA  77                 	db	119	;'w'
   857  00FFFB  68                 	db	104	;'h'
   858  00FFFC  61                 	db	97	;'a'
   859  00FFFD  74                 	db	116	;'t'
   860  00FFFE  00                 	db	0
   861  0000                     
   862                           ; #config settings
   863  00FFFF  00                 	db	0	; dummy byte at the end
   864  0000                     
   865                           	psect	cinit
   866  003A3C                     __pcinit:
   867                           	opt callstack 0
   868  003A3C                     start_initialization:
   869                           	opt callstack 0
   870  003A3C                     __initialization:
   871                           	opt callstack 0
   872                           
   873                           ; Initialize objects allocated to COMRAM (5 bytes)
   874                           ; load TBLPTR registers with __pidataCOMRAM
   875  003A3C  0EEE               	movlw	low __pidataCOMRAM
   876  003A3E  6EF6               	movwf	tblptrl,c
   877  003A40  0E3E               	movlw	high __pidataCOMRAM
   878  003A42  6EF7               	movwf	tblptrh,c
   879  003A44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   880  003A46  6EF8               	movwf	tblptru,c
   881  003A48  EE00  F069         	lfsr	0,__pdataCOMRAM
   882  003A4C  EE10 F005          	lfsr	1,5
   883  003A50                     copy_data0:
   884  003A50  0009               	tblrd		*+
   885  003A52  CFF5 FFEE          	movff	tablat,postinc0
   886  003A56  50E5               	movf	postdec1,w,c
   887  003A58  50E1               	movf	fsr1l,w,c
   888  003A5A  E1FA               	bnz	copy_data0
   889                           
   890                           ; Clear objects allocated to BANK2 (160 bytes)
   891  003A5C  EE02  F000         	lfsr	0,__pbssBANK2
   892  003A60  0EA0               	movlw	160
   893  003A62                     clear_0:
   894  003A62  6AEE               	clrf	postinc0,c
   895  003A64  06E8               	decf	wreg,f,c
   896  003A66  E1FD               	bnz	clear_0
   897                           
   898                           ; Clear objects allocated to BANK1 (28 bytes)
   899  003A68  EE01  F0CA         	lfsr	0,__pbssBANK1
   900  003A6C  0E1C               	movlw	28
   901  003A6E                     clear_1:
   902  003A6E  6AEE               	clrf	postinc0,c
   903  003A70  06E8               	decf	wreg,f,c
   904  003A72  E1FD               	bnz	clear_1
   905                           
   906                           ; Clear objects allocated to BANK0 (1 bytes)
   907  003A74  0100               	movlb	0
   908  003A76  6BFF               	clrf	__pbssBANK0& (0+255),b
   909                           
   910                           ; Clear objects allocated to COMRAM (49 bytes)
   911  003A78  EE00  F038         	lfsr	0,__pbssCOMRAM
   912  003A7C  0E31               	movlw	49
   913  003A7E                     clear_2:
   914  003A7E  6AEE               	clrf	postinc0,c
   915  003A80  06E8               	decf	wreg,f,c
   916  003A82  E1FD               	bnz	clear_2
   917  003A84                     end_of_initialization:
   918                           	opt callstack 0
   919  003A84                     __end_of__initialization:
   920                           	opt callstack 0
   921  003A84  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   922  003A86  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   923  003A88  0E00               	movlw	low (__Lmediumconst shr (0+16))
   924  003A8A  6EF8               	movwf	tblptru,c
   925  003A8C  0100               	movlb	0
   926  003A8E  EF13  F004         	goto	_main	;jump to C main() function
   927                           
   928                           	psect	bssCOMRAM
   929  000038                     __pbssCOMRAM:
   930                           	opt callstack 0
   931  000038                     _sum:
   932                           	opt callstack 0
   933  000038                     	ds	8
   934  000040                     _sumf:
   935                           	opt callstack 0
   936  000040                     	ds	4
   937  000044                     _avg_dist:
   938                           	opt callstack 0
   939  000044                     	ds	4
   940  000048                     _nout:
   941                           	opt callstack 0
   942  000048                     	ds	2
   943  00004A                     _width:
   944                           	opt callstack 0
   945  00004A                     	ds	2
   946  00004C                     _prec:
   947                           	opt callstack 0
   948  00004C                     	ds	2
   949  00004E                     _flags:
   950                           	opt callstack 0
   951  00004E                     	ds	2
   952  000050                     _meas:
   953                           	opt callstack 0
   954  000050                     	ds	2
   955  000052                     _poles_detected:
   956                           	opt callstack 0
   957  000052                     	ds	2
   958  000054                     _tires_deployed:
   959                           	opt callstack 0
   960  000054                     	ds	2
   961  000056                     _tick:
   962                           	opt callstack 0
   963  000056                     	ds	2
   964  000058                     _sens:
   965                           	opt callstack 0
   966  000058                     	ds	2
   967  00005A                     _b:
   968                           	opt callstack 0
   969  00005A                     	ds	2
   970  00005C                     _timer_count:
   971                           	opt callstack 0
   972  00005C                     	ds	2
   973  00005E                     _data:
   974                           	opt callstack 0
   975  00005E                     	ds	1
   976  00005F                     _keypress:
   977                           	opt callstack 0
   978  00005F                     	ds	1
   979  000060                     _counter:
   980                           	opt callstack 0
   981  000060                     	ds	1
   982  000061                     _a:
   983                           	opt callstack 0
   984  000061                     	ds	8
   985                           
   986                           	psect	dataCOMRAM
   987  000069                     __pdataCOMRAM:
   988                           	opt callstack 0
   989  000069                     _dists:
   990                           	opt callstack 0
   991  000069                     	ds	4
   992  00006D                     _send:
   993                           	opt callstack 0
   994  00006D                     	ds	1
   995                           
   996                           	psect	bssBANK0
   997  0000FF                     __pbssBANK0:
   998                           	opt callstack 0
   999  0000FF                     _temp:
  1000                           	opt callstack 0
  1001  0000FF                     	ds	1
  1002                           
  1003                           	psect	bssBANK1
  1004  0001CA                     __pbssBANK1:
  1005                           	opt callstack 0
  1006  0001CA                     _prev_dist_final:
  1007                           	opt callstack 0
  1008  0001CA                     	ds	8
  1009  0001D2                     _time:
  1010                           	opt callstack 0
  1011  0001D2                     	ds	7
  1012  0001D9                     _pressed:
  1013                           	opt callstack 0
  1014  0001D9                     	ds	2
  1015  0001DB                     _i:
  1016                           	opt callstack 0
  1017  0001DB                     	ds	2
  1018  0001DD                     _disp:
  1019                           	opt callstack 0
  1020  0001DD                     	ds	2
  1021  0001DF                     _state:
  1022                           	opt callstack 0
  1023  0001DF                     	ds	2
  1024  0001E1                     _temp_int:
  1025                           	opt callstack 0
  1026  0001E1                     	ds	2
  1027  0001E3                     _cnt:
  1028                           	opt callstack 0
  1029  0001E3                     	ds	2
  1030  0001E5                     _key_was_pressed:
  1031                           	opt callstack 0
  1032  0001E5                     	ds	1
  1033                           
  1034                           	psect	bssBANK2
  1035  000200                     __pbssBANK2:
  1036                           	opt callstack 0
  1037  000200                     _Pole:
  1038                           	opt callstack 0
  1039  000200                     	ds	80
  1040  000250                     _dist_final:
  1041                           	opt callstack 0
  1042  000250                     	ds	48
  1043  000280                     _dbuf:
  1044                           	opt callstack 0
  1045  000280                     	ds	32
  1046                           
  1047                           	psect	cstackBANK1
  1048  000100                     __pcstackBANK1:
  1049                           	opt callstack 0
  1050  000100                     ??_ultrasonic_main:
  1051  000100                     ??_number_deploy:
  1052  000100                     ??_UI_main:
  1053  000100                     stepper@stack:
  1054                           	opt callstack 0
  1055  000100                     stepper2@steps2_adj:
  1056                           	opt callstack 0
  1057  000100                     stepper2_back@steps2_adj:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x0
  1061  000100                     	ds	2
  1062  000102                     ??_stepper2:
  1063  000102                     ??_stepper2_back:
  1064  000102                     stepper@t_dep:
  1065                           	opt callstack 0
  1066  000102                     number_deploy@tires_t:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x2
  1070  000102                     	ds	1
  1071  000103                     stepper2_back@direction:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x3
  1075  000103                     	ds	1
  1076  000104                     ??_stepper:
  1077  000104                     stepper2_back@count_stepper:
  1078                           	opt callstack 0
  1079  000104                     ultrasonic_main@sensed:
  1080                           	opt callstack 0
  1081  000104                     number_deploy@tires_detected:
  1082                           	opt callstack 0
  1083  000104                     UI_main@Pole:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 80 bytes @ 0x4
  1087  000104                     	ds	2
  1088  000106                     stepper2_back@i:
  1089                           	opt callstack 0
  1090  000106                     ultrasonic_main@step2_offset:
  1091                           	opt callstack 0
  1092  000106                     number_deploy@t_count:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x6
  1096  000106                     	ds	1
  1097  000107                     stepper2@i:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x7
  1101  000107                     	ds	1
  1102  000108                     stepper@count_stepper:
  1103                           	opt callstack 0
  1104  000108                     ultrasonic_main@steps2_adj:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x8
  1108  000108                     	ds	1
  1109  000109                     stepper2@i_489:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x9
  1113  000109                     	ds	1
  1114  00010A                     stepper@i:
  1115                           	opt callstack 0
  1116  00010A                     ultrasonic_main@min_us_dist_967:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xA
  1120  00010A                     	ds	1
  1121  00010B                     stepper2@count_stepper:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0xB
  1125  00010B                     	ds	1
  1126  00010C                     stepper@i_479:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0xC
  1130  00010C                     	ds	1
  1131  00010D                     stepper2@direction:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 1 bytes @ 0xD
  1135  00010D                     	ds	1
  1136  00010E                     stepper@i_480:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0xE
  1140  00010E                     	ds	2
  1141  000110                     stepper@i_481:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x10
  1145  000110                     	ds	2
  1146  000112                     actuators_main@stack:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x12
  1150  000112                     	ds	2
  1151  000114                     actuators_main@steps2_adj:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x14
  1155  000114                     	ds	2
  1156  000116                     actuators_main@t_dep:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x16
  1160  000116                     	ds	2
  1161  000118                     ??_actuators_main:
  1162                           
  1163                           ; 1 bytes @ 0x18
  1164  000118                     	ds	2
  1165  00011A                     actuators_main@act_cnt:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x1A
  1169  00011A                     	ds	58
  1170  000154                     UI_main@keypress:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x54
  1174  000154                     	ds	1
  1175  000155                     UI_main@tick:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x55
  1179  000155                     	ds	4
  1180  000159                     UI_main@i:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x59
  1184  000159                     	ds	1
  1185  00015A                     ??_main:
  1186                           
  1187                           ; 1 bytes @ 0x5A
  1188  00015A                     	ds	8
  1189  000162                     main@Pole:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 80 bytes @ 0x62
  1193  000162                     	ds	80
  1194  0001B2                     main@i:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0xB2
  1198  0001B2                     	ds	2
  1199  0001B4                     main@i_1075:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0xB4
  1203  0001B4                     	ds	2
  1204  0001B6                     main@act_done:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 1 bytes @ 0xB6
  1208  0001B6                     	ds	1
  1209  0001B7                     main@arduino_stopped:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 1 bytes @ 0xB7
  1213  0001B7                     	ds	1
  1214  0001B8                     main@stack:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 2 bytes @ 0xB8
  1218  0001B8                     	ds	2
  1219  0001BA                     main@steps2_adj:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 2 bytes @ 0xBA
  1223  0001BA                     	ds	2
  1224  0001BC                     main@k:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0xBC
  1228  0001BC                     	ds	2
  1229  0001BE                     main@t_count:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 2 bytes @ 0xBE
  1233  0001BE                     	ds	2
  1234  0001C0                     main@t_dep:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 2 bytes @ 0xC0
  1238  0001C0                     	ds	2
  1239  0001C2                     main@i_1081:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 2 bytes @ 0xC2
  1243  0001C2                     	ds	2
  1244  0001C4                     main@poles_detected:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 2 bytes @ 0xC4
  1248  0001C4                     	ds	2
  1249  0001C6                     main@prev_avg_dist:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 4 bytes @ 0xC6
  1253  0001C6                     	ds	4
  1254                           
  1255                           	psect	cstackBANK0
  1256  000080                     __pcstackBANK0:
  1257                           	opt callstack 0
  1258  000080                     ??_I2C_Master_Wait:
  1259  000080                     ??_trig:
  1260  000080                     ?_strlen:
  1261                           	opt callstack 0
  1262  000080                     ?_isupper:
  1263                           	opt callstack 0
  1264  000080                     ?_isalpha:
  1265                           	opt callstack 0
  1266  000080                     ?_isdigit:
  1267                           	opt callstack 0
  1268  000080                     ?_isspace:
  1269                           	opt callstack 0
  1270  000080                     ?_islower:
  1271                           	opt callstack 0
  1272  000080                     ?_min:
  1273                           	opt callstack 0
  1274  000080                     ?___wmul:
  1275                           	opt callstack 0
  1276  000080                     ?___awdiv:
  1277                           	opt callstack 0
  1278  000080                     ?___lldiv:
  1279                           	opt callstack 0
  1280  000080                     ?___llmod:
  1281                           	opt callstack 0
  1282  000080                     ?___aodiv:
  1283                           	opt callstack 0
  1284  000080                     ?___aomod:
  1285                           	opt callstack 0
  1286  000080                     pulse_e@interruptState:
  1287                           	opt callstack 0
  1288  000080                     servoRotate0@servo:
  1289                           	opt callstack 0
  1290  000080                     servoRotate180@servo:
  1291                           	opt callstack 0
  1292  000080                     min@array:
  1293                           	opt callstack 0
  1294  000080                     ___wmul@multiplier:
  1295                           	opt callstack 0
  1296  000080                     ___awdiv@dividend:
  1297                           	opt callstack 0
  1298  000080                     isalpha@c:
  1299                           	opt callstack 0
  1300  000080                     isdigit@c:
  1301                           	opt callstack 0
  1302  000080                     isspace@c:
  1303                           	opt callstack 0
  1304  000080                     isupper@c:
  1305                           	opt callstack 0
  1306  000080                     strlen@s:
  1307                           	opt callstack 0
  1308  000080                     islower@c:
  1309                           	opt callstack 0
  1310  000080                     ___lldiv@dividend:
  1311                           	opt callstack 0
  1312  000080                     ___llmod@dividend:
  1313                           	opt callstack 0
  1314  000080                     ___aodiv@dividend:
  1315                           	opt callstack 0
  1316  000080                     ___aomod@dividend:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 8 bytes @ 0x0
  1320  000080                     	ds	1
  1321  000081                     I2C_Master_Read@ackBit:
  1322                           	opt callstack 0
  1323  000081                     send_nibble@data:
  1324                           	opt callstack 0
  1325  000081                     I2C_Master_Write@byteToWrite:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x1
  1329  000081                     	ds	1
  1330  000082                     ??_isupper:
  1331  000082                     ??_isalpha:
  1332  000082                     ??_isdigit:
  1333  000082                     ??_isspace:
  1334  000082                     ??_islower:
  1335  000082                     ??_servoRotate0:
  1336  000082                     ??_servoRotate180:
  1337  000082                     I2C_Master_Read@receivedByte:
  1338                           	opt callstack 0
  1339  000082                     send_byte@data:
  1340                           	opt callstack 0
  1341  000082                     min@size:
  1342                           	opt callstack 0
  1343  000082                     ___wmul@multiplicand:
  1344                           	opt callstack 0
  1345  000082                     ___awdiv@divisor:
  1346                           	opt callstack 0
  1347  000082                     strlen@a:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x2
  1351  000082                     	ds	1
  1352  000083                     lcdInst@data:
  1353                           	opt callstack 0
  1354  000083                     putch@data:
  1355                           	opt callstack 0
  1356  000083                     servoRotate0@i:
  1357                           	opt callstack 0
  1358  000083                     servoRotate180@i:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x3
  1362  000083                     	ds	1
  1363  000084                     ??_initLCD:
  1364  000084                     ??_min:
  1365  000084                     ___awdiv@counter:
  1366                           	opt callstack 0
  1367  000084                     ___wmul@product:
  1368                           	opt callstack 0
  1369  000084                     fputc@c:
  1370                           	opt callstack 0
  1371  000084                     ___lldiv@divisor:
  1372                           	opt callstack 0
  1373  000084                     ___llmod@divisor:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x4
  1377  000084                     	ds	1
  1378  000085                     ??_servo:
  1379  000085                     ___awdiv@sign:
  1380                           	opt callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x5
  1383  000085                     	ds	1
  1384  000086                     ?_toupper:
  1385                           	opt callstack 0
  1386  000086                     _isspace$1737:
  1387                           	opt callstack 0
  1388  000086                     ___awdiv@quotient:
  1389                           	opt callstack 0
  1390  000086                     fputc@fp:
  1391                           	opt callstack 0
  1392  000086                     toupper@c:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x6
  1396  000086                     	ds	1
  1397  000087                     ?_atoi:
  1398                           	opt callstack 0
  1399  000087                     min@minimum:
  1400                           	opt callstack 0
  1401  000087                     atoi@s:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x7
  1405  000087                     	ds	1
  1406  000088                     ??_fputc:
  1407  000088                     ??_toupper:
  1408  000088                     ___llmod@counter:
  1409                           	opt callstack 0
  1410  000088                     ___lldiv@quotient:
  1411                           	opt callstack 0
  1412  000088                     ___aodiv@divisor:
  1413                           	opt callstack 0
  1414  000088                     ___aomod@divisor:
  1415                           	opt callstack 0
  1416                           
  1417                           ; 8 bytes @ 0x8
  1418  000088                     	ds	1
  1419  000089                     ??_atoi:
  1420  000089                     min@i:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x9
  1424  000089                     	ds	3
  1425  00008C                     ___lldiv@counter:
  1426                           	opt callstack 0
  1427  00008C                     _toupper$1802:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0xC
  1431  00008C                     	ds	1
  1432  00008D                     atoi@neg:
  1433                           	opt callstack 0
  1434  00008D                     fputs@s:
  1435                           	opt callstack 0
  1436  00008D                     I2C_Master_Init@clockFreq:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 4 bytes @ 0xD
  1440  00008D                     	ds	2
  1441  00008F                     _atoi$1710:
  1442                           	opt callstack 0
  1443  00008F                     fputs@fp:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 2 bytes @ 0xF
  1447  00008F                     	ds	1
  1448  000090                     ___aodiv@counter:
  1449                           	opt callstack 0
  1450  000090                     ___aomod@counter:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x10
  1454  000090                     	ds	1
  1455  000091                     ??_I2C_Master_Init:
  1456  000091                     ___aodiv@sign:
  1457                           	opt callstack 0
  1458  000091                     ___aomod@sign:
  1459                           	opt callstack 0
  1460  000091                     fputs@c:
  1461                           	opt callstack 0
  1462  000091                     _atoi$1712:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x11
  1466  000091                     	ds	1
  1467  000092                     ?_abs:
  1468                           	opt callstack 0
  1469  000092                     abs@a:
  1470                           	opt callstack 0
  1471  000092                     fputs@i:
  1472                           	opt callstack 0
  1473  000092                     ___aodiv@quotient:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 8 bytes @ 0x12
  1477  000092                     	ds	1
  1478  000093                     _atoi$1711:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x13
  1482  000093                     	ds	1
  1483  000094                     ??_abs:
  1484  000094                     ?_pad:
  1485                           	opt callstack 0
  1486  000094                     pad@fp:
  1487                           	opt callstack 0
  1488  000094                     atoi@n:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x14
  1492  000094                     	ds	1
  1493  000095                     
  1494                           ; 1 bytes @ 0x15
  1495  000095                     	ds	1
  1496  000096                     pad@buf:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x16
  1500  000096                     	ds	2
  1501  000098                     pad@p:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x18
  1505  000098                     	ds	2
  1506  00009A                     ??_pad:
  1507                           
  1508                           ; 1 bytes @ 0x1A
  1509  00009A                     	ds	1
  1510  00009B                     pad@i:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x1B
  1514  00009B                     	ds	2
  1515  00009D                     pad@w:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x1D
  1519  00009D                     	ds	2
  1520  00009F                     ?_dtoa:
  1521                           	opt callstack 0
  1522  00009F                     ?_xtoa:
  1523                           	opt callstack 0
  1524  00009F                     dtoa@fp:
  1525                           	opt callstack 0
  1526  00009F                     xtoa@fp:
  1527                           	opt callstack 0
  1528                           
  1529                           ; 2 bytes @ 0x1F
  1530  00009F                     	ds	2
  1531  0000A1                     dtoa@d:
  1532                           	opt callstack 0
  1533  0000A1                     xtoa@d:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 8 bytes @ 0x21
  1537  0000A1                     	ds	8
  1538  0000A9                     ??_dtoa:
  1539  0000A9                     xtoa@x:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x29
  1543  0000A9                     	ds	1
  1544  0000AA                     ??_xtoa:
  1545                           
  1546                           ; 1 bytes @ 0x2A
  1547  0000AA                     	ds	7
  1548  0000B1                     _dtoa$1226:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x31
  1552  0000B1                     	ds	1
  1553  0000B2                     _xtoa$1237:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x32
  1557  0000B2                     	ds	1
  1558  0000B3                     dtoa@p:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x33
  1562  0000B3                     	ds	1
  1563  0000B4                     _xtoa$1238:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x34
  1567  0000B4                     	ds	1
  1568  0000B5                     dtoa@w:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x35
  1572  0000B5                     	ds	1
  1573  0000B6                     xtoa@p:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x36
  1577  0000B6                     	ds	1
  1578  0000B7                     dtoa@s:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x37
  1582  0000B7                     	ds	1
  1583  0000B8                     xtoa@w:
  1584                           	opt callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x38
  1587  0000B8                     	ds	1
  1588  0000B9                     dtoa@n:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 8 bytes @ 0x39
  1592  0000B9                     	ds	1
  1593  0000BA                     xtoa@n:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 8 bytes @ 0x3A
  1597  0000BA                     	ds	7
  1598  0000C1                     dtoa@i:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x41
  1602  0000C1                     	ds	1
  1603  0000C2                     xtoa@i:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x42
  1607  0000C2                     	ds	2
  1608  0000C4                     xtoa@c:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x44
  1612  0000C4                     	ds	2
  1613  0000C6                     ?_vfpfcnvrt:
  1614                           	opt callstack 0
  1615  0000C6                     vfpfcnvrt@fp:
  1616                           	opt callstack 0
  1617                           
  1618                           ; 2 bytes @ 0x46
  1619  0000C6                     	ds	2
  1620  0000C8                     vfpfcnvrt@fmt:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x48
  1624  0000C8                     	ds	2
  1625  0000CA                     vfpfcnvrt@ap:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 2 bytes @ 0x4A
  1629  0000CA                     	ds	2
  1630  0000CC                     ??_vfpfcnvrt:
  1631                           
  1632                           ; 1 bytes @ 0x4C
  1633  0000CC                     	ds	4
  1634  0000D0                     vfpfcnvrt@ll:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 8 bytes @ 0x50
  1638  0000D0                     	ds	8
  1639  0000D8                     vfpfcnvrt@llu:
  1640                           	opt callstack 0
  1641                           
  1642                           ; 8 bytes @ 0x58
  1643  0000D8                     	ds	8
  1644  0000E0                     vfpfcnvrt@c:
  1645                           	opt callstack 0
  1646                           
  1647                           ; 1 bytes @ 0x60
  1648  0000E0                     	ds	1
  1649  0000E1                     vfpfcnvrt@done:
  1650                           	opt callstack 0
  1651                           
  1652                           ; 2 bytes @ 0x61
  1653  0000E1                     	ds	2
  1654  0000E3                     _vfpfcnvrt$1252:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 2 bytes @ 0x63
  1658  0000E3                     	ds	2
  1659  0000E5                     ?_vfprintf:
  1660                           	opt callstack 0
  1661  0000E5                     vfprintf@fp:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x65
  1665  0000E5                     	ds	2
  1666  0000E7                     vfprintf@fmt:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 2 bytes @ 0x67
  1670  0000E7                     	ds	2
  1671  0000E9                     vfprintf@ap:
  1672                           	opt callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x69
  1675  0000E9                     	ds	2
  1676  0000EB                     vfprintf@cfmt:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x6B
  1680  0000EB                     	ds	2
  1681  0000ED                     ?_printf:
  1682                           	opt callstack 0
  1683  0000ED                     printf@fmt:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x6D
  1687  0000ED                     	ds	10
  1688  0000F7                     
  1689                           ; 1 bytes @ 0x77
  1690  0000F7                     	ds	2
  1691  0000F9                     printf@ap:
  1692                           	opt callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x79
  1695  0000F9                     	ds	2
  1696  0000FB                     ??_brake:
  1697  0000FB                     ??_print_echo:
  1698  0000FB                     ?_number_deploy:
  1699                           	opt callstack 0
  1700  0000FB                     full_drive@stepper_no:
  1701                           	opt callstack 0
  1702  0000FB                     number_deploy@avg_dist:
  1703                           	opt callstack 0
  1704  0000FB                     UI_main@t_dep:
  1705                           	opt callstack 0
  1706                           
  1707                           ; 2 bytes @ 0x7B
  1708  0000FB                     	ds	1
  1709  0000FC                     ?_ultrasonic_main:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x7C
  1713  0000FC                     	ds	1
  1714  0000FD                     ??_full_drive:
  1715  0000FD                     number_deploy@poles_detected:
  1716                           	opt callstack 0
  1717  0000FD                     UI_main@poles_detected:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x7D
  1721  0000FD                     	ds	1
  1722  0000FE                     full_drive@direction:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 1 bytes @ 0x7E
  1726  0000FE                     	ds	1
  1727                           
  1728                           	psect	cstackCOMRAM
  1729  000001                     __pcstackCOMRAM:
  1730                           	opt callstack 0
  1731  000001                     ?i2___awdiv:
  1732                           	opt callstack 0
  1733  000001                     ?___xxtofl:
  1734                           	opt callstack 0
  1735  000001                     i2___awdiv@dividend:
  1736                           	opt callstack 0
  1737  000001                     ___xxtofl@val:
  1738                           	opt callstack 0
  1739                           
  1740                           ; 4 bytes @ 0x0
  1741  000001                     	ds	2
  1742  000003                     i2___awdiv@divisor:
  1743                           	opt callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x2
  1746  000003                     	ds	2
  1747  000005                     ??___xxtofl:
  1748  000005                     i2___awdiv@counter:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x4
  1752  000005                     	ds	1
  1753  000006                     i2___awdiv@sign:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 1 bytes @ 0x5
  1757  000006                     	ds	1
  1758  000007                     i2___awdiv@quotient:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 2 bytes @ 0x6
  1762  000007                     	ds	2
  1763  000009                     ___xxtofl@sign:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 1 bytes @ 0x8
  1767  000009                     	ds	1
  1768  00000A                     ___xxtofl@exp:
  1769                           	opt callstack 0
  1770                           
  1771                           ; 1 bytes @ 0x9
  1772  00000A                     	ds	1
  1773  00000B                     ___xxtofl@arg:
  1774                           	opt callstack 0
  1775                           
  1776                           ; 4 bytes @ 0xA
  1777  00000B                     	ds	4
  1778  00000F                     ?___fldiv:
  1779                           	opt callstack 0
  1780  00000F                     ___fldiv@b:
  1781                           	opt callstack 0
  1782                           
  1783                           ; 4 bytes @ 0xE
  1784  00000F                     	ds	4
  1785  000013                     ___fldiv@a:
  1786                           	opt callstack 0
  1787                           
  1788                           ; 4 bytes @ 0x12
  1789  000013                     	ds	4
  1790  000017                     ??___fldiv:
  1791                           
  1792                           ; 1 bytes @ 0x16
  1793  000017                     	ds	4
  1794  00001B                     ___fldiv@rem:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 4 bytes @ 0x1A
  1798  00001B                     	ds	4
  1799  00001F                     ___fldiv@sign:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 1 bytes @ 0x1E
  1803  00001F                     	ds	1
  1804  000020                     ___fldiv@new_exp:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x1F
  1808  000020                     	ds	2
  1809  000022                     ___fldiv@grs:
  1810                           	opt callstack 0
  1811                           
  1812                           ; 4 bytes @ 0x21
  1813  000022                     	ds	4
  1814  000026                     ___fldiv@bexp:
  1815                           	opt callstack 0
  1816                           
  1817                           ; 1 bytes @ 0x25
  1818  000026                     	ds	1
  1819  000027                     ___fldiv@aexp:
  1820                           	opt callstack 0
  1821                           
  1822                           ; 1 bytes @ 0x26
  1823  000027                     	ds	1
  1824  000028                     ?___fltol:
  1825                           	opt callstack 0
  1826  000028                     ___fltol@f1:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 4 bytes @ 0x27
  1830  000028                     	ds	4
  1831  00002C                     ??___fltol:
  1832                           
  1833                           ; 1 bytes @ 0x2B
  1834  00002C                     	ds	4
  1835  000030                     ___fltol@sign1:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 1 bytes @ 0x2F
  1839  000030                     	ds	1
  1840  000031                     ___fltol@exp1:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 1 bytes @ 0x30
  1844  000031                     	ds	1
  1845  000032                     ??_echo:
  1846                           
  1847                           ; 1 bytes @ 0x31
  1848  000032                     	ds	4
  1849  000036                     ??_ISR:
  1850                           
  1851                           ; 1 bytes @ 0x35
  1852  000036                     	ds	2
  1853                           
  1854 ;;
  1855 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1856 ;;
  1857 ;; *************** function _main *****************
  1858 ;; Defined at:
  1859 ;;		line 717 in file "main.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  k               2  188[BANK1 ] int 
  1864 ;;  i               2  180[BANK1 ] int 
  1865 ;;  i               2  178[BANK1 ] int 
  1866 ;;  i               2  194[BANK1 ] int 
  1867 ;;  pole_cl_dist    2    0        int 
  1868 ;;  Pole           80   98[BANK1 ] struct Poles[10]
  1869 ;;  prev_avg_dis    4  198[BANK1 ] volatile long 
  1870 ;;  poles_detect    2  196[BANK1 ] int 
  1871 ;;  t_dep           2  192[BANK1 ] int 
  1872 ;;  t_count         2  190[BANK1 ] int 
  1873 ;;  steps2_adj      2  186[BANK1 ] int 
  1874 ;;  stack           2  184[BANK1 ] int 
  1875 ;;  read            2    0        int 
  1876 ;;  arduino_stop    1  183[BANK1 ] _Bool 
  1877 ;;  act_done        1  182[BANK1 ] _Bool 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Totals:         0       0     112       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;Total ram usage:      112 bytes
  1892 ;; Hardware stack levels required when called:   17
  1893 ;; This function calls:
  1894 ;;		_UI_main
  1895 ;;		___wmul
  1896 ;;		_actuators_main
  1897 ;;		_backwards
  1898 ;;		_brake
  1899 ;;		_initLCD
  1900 ;;		_lcdInst
  1901 ;;		_number_deploy
  1902 ;;		_printf
  1903 ;;		_start
  1904 ;;		_ultrasonic_main
  1905 ;; This function is called by:
  1906 ;;		Startup code after reset
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text0
  1911  000826                     __ptext0:
  1912                           	opt callstack 0
  1913  000826                     _main:
  1914                           	opt callstack 14
  1915                           
  1916                           ;main.c: 719:     int t_dep=0;
  1917                           
  1918                           ;incstack = 0
  1919  000826  0E00               	movlw	0
  1920  000828  0101               	movlb	1	; () banked
  1921  00082A  6FC1               	movwf	(main@t_dep+1)& (0+255),b
  1922  00082C  0E00               	movlw	0
  1923  00082E  6FC0               	movwf	main@t_dep& (0+255),b
  1924                           
  1925                           ;main.c: 720:     int t_count;;main.c: 721:  TRISD = 0x00;
  1926  000830  0E00               	movlw	0
  1927  000832  6E95               	movwf	3989,c	;volatile
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;main.c: 722:  GIE = 1;
  1931  000834  8EF2               	bsf	4082,7,c	;volatile
  1932                           
  1933                           ;main.c: 723:     int steps2_adj =0;
  1934  000836  0E00               	movlw	0
  1935  000838  6FBB               	movwf	(main@steps2_adj+1)& (0+255),b
  1936  00083A  0E00               	movlw	0
  1937  00083C  6FBA               	movwf	main@steps2_adj& (0+255),b
  1938                           
  1939                           ;main.c: 724:     ADCON1=0x0F;
  1940  00083E  0E0F               	movlw	15
  1941  000840  6EC1               	movwf	4033,c	;volatile
  1942                           
  1943                           ; BSR set to: 1
  1944                           ;main.c: 726:  initLCD();
  1945  000842  EC4B  F01C         	call	_initLCD	;wreg free
  1946                           
  1947                           ;main.c: 728:  T1CON = 0x10;
  1948  000846  0E10               	movlw	16
  1949  000848  6ECD               	movwf	4045,c	;volatile
  1950                           
  1951                           ;main.c: 729:     int poles_detected=0;
  1952  00084A  0E00               	movlw	0
  1953  00084C  0101               	movlb	1	; () banked
  1954  00084E  6FC5               	movwf	(main@poles_detected+1)& (0+255),b
  1955  000850  0E00               	movlw	0
  1956  000852  6FC4               	movwf	main@poles_detected& (0+255),b
  1957                           
  1958                           ; BSR set to: 1
  1959                           ;main.c: 731:     volatile long prev_avg_dist=0;
  1960                           
  1961                           ; BSR set to: 1
  1962  000854  0E00               	movlw	0
  1963  000856  6FC6               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1964  000858  0E00               	movlw	0
  1965  00085A  6FC7               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1966  00085C  0E00               	movlw	0
  1967  00085E  6FC8               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1968  000860  0E00               	movlw	0
  1969  000862  6FC9               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;main.c: 733:     TRISAbits.RA4 = 0;
  1973  000864  9892               	bcf	3986,4,c	;volatile
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main.c: 734:     PORTAbits.RA4 = LATAbits.LATA4;
  1977  000866  A889               	btfss	3977,4,c	;volatile
  1978  000868  D002               	bra	u9075
  1979  00086A  8880               	bsf	3968,4,c	;volatile
  1980  00086C  D001               	bra	u9077
  1981  00086E                     u9075:
  1982  00086E  9880               	bcf	3968,4,c	;volatile
  1983  000870                     u9077:
  1984                           
  1985                           ;main.c: 737:     _Bool arduino_stopped = 0;
  1986  000870  0E00               	movlw	0
  1987  000872  0101               	movlb	1	; () banked
  1988  000874  6FB7               	movwf	main@arduino_stopped& (0+255),b
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;main.c: 739:     Poles Pole[10];;main.c: 747:     if (~sens){
  1992  000876  2858               	incf	_sens,w,c	;volatile
  1993  000878  E103               	bnz	u9080
  1994  00087A  2859               	incf	_sens+1,w,c	;volatile
  1995  00087C  B4D8               	btfsc	status,2,c
  1996  00087E  D00E               	goto	l8395
  1997  000880                     u9080:
  1998                           
  1999                           ; BSR set to: 1
  2000                           ;main.c: 748:         TRISBbits.RB0 = 0;
  2001  000880  9093               	bcf	3987,0,c	;volatile
  2002                           
  2003                           ;main.c: 749:         LATBbits.LATB0 = 0;
  2004  000882  908A               	bcf	3978,0,c	;volatile
  2005                           
  2006                           ;main.c: 751:         TRISB = 0b11111111;
  2007  000884  6893               	setf	3987,c	;volatile
  2008                           
  2009                           ; BSR set to: 1
  2010                           ;main.c: 752:         UI_main( t_dep, poles_detected);
  2011  000886  0E00               	movlw	0
  2012  000888  0100               	movlb	0	; () banked
  2013  00088A  6FFC               	movwf	(UI_main@t_dep+1)& (0+255),b
  2014  00088C  0E00               	movlw	0
  2015  00088E  6FFB               	movwf	UI_main@t_dep& (0+255),b
  2016  000890  0E00               	movlw	0
  2017  000892  6FFE               	movwf	(UI_main@poles_detected+1)& (0+255),b
  2018  000894  0E00               	movlw	0
  2019  000896  6FFD               	movwf	UI_main@poles_detected& (0+255),b
  2020  000898  EC09  F000         	call	_UI_main	;wreg free
  2021  00089C                     l8395:
  2022                           
  2023                           ;main.c: 755:         PORTAbits.RA4 = LATAbits.LATA4;
  2024  00089C  A889               	btfss	3977,4,c	;volatile
  2025  00089E  D002               	bra	u9095
  2026  0008A0  8880               	bsf	3968,4,c	;volatile
  2027  0008A2  D001               	bra	u9097
  2028  0008A4                     u9095:
  2029  0008A4  9880               	bcf	3968,4,c	;volatile
  2030  0008A6                     u9097:
  2031                           
  2032                           ;main.c: 762:         if ((poles_detected <2)&&((Pole[poles_detected].dist_from_start )<
      +                          4000)){
  2033  0008A6  0101               	movlb	1	; () banked
  2034  0008A8  BFC5               	btfsc	(main@poles_detected+1)& (0+255),7,b
  2035  0008AA  D006               	goto	u9100
  2036  0008AC  51C5               	movf	(main@poles_detected+1)& (0+255),w,b
  2037  0008AE  E103               	bnz	u9101
  2038  0008B0  0E02               	movlw	2
  2039  0008B2  5DC4               	subwf	main@poles_detected& (0+255),w,b
  2040  0008B4  B0D8               	btfsc	status,0,c
  2041  0008B6                     u9101:
  2042  0008B6  D27B               	goto	l8543
  2043  0008B8                     u9100:
  2044                           
  2045                           ; BSR set to: 1
  2046  0008B8  C1C4  F15A         	movff	main@poles_detected,??_main
  2047  0008BC  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2048  0008C0  90D8               	bcf	status,0,c
  2049  0008C2  375A               	rlcf	??_main& (0+255),f,b
  2050  0008C4  375B               	rlcf	(??_main+1)& (0+255),f,b
  2051  0008C6  90D8               	bcf	status,0,c
  2052  0008C8  375A               	rlcf	??_main& (0+255),f,b
  2053  0008CA  375B               	rlcf	(??_main+1)& (0+255),f,b
  2054  0008CC  90D8               	bcf	status,0,c
  2055  0008CE  375A               	rlcf	??_main& (0+255),f,b
  2056  0008D0  375B               	rlcf	(??_main+1)& (0+255),f,b
  2057  0008D2  0E04               	movlw	4
  2058  0008D4  275A               	addwf	??_main& (0+255),f,b
  2059  0008D6  0E00               	movlw	0
  2060  0008D8  235B               	addwfc	(??_main+1)& (0+255),f,b
  2061  0008DA  0E62               	movlw	low main@Pole
  2062  0008DC  255A               	addwf	??_main& (0+255),w,b
  2063  0008DE  6ED9               	movwf	fsr2l,c
  2064  0008E0  0E01               	movlw	high main@Pole
  2065  0008E2  215B               	addwfc	(??_main+1)& (0+255),w,b
  2066  0008E4  6EDA               	movwf	fsr2h,c
  2067  0008E6  0E01               	movlw	1
  2068  0008E8  BEDB               	btfsc	plusw2,7,c
  2069  0008EA  D092               	goto	l8447
  2070  0008EC  0EA0               	movlw	160
  2071  0008EE  5CDE               	subwf	postinc2,w,c
  2072  0008F0  0E0F               	movlw	15
  2073  0008F2  58DE               	subwfb	postinc2,w,c
  2074  0008F4  A0D8               	btfss	status,0,c
  2075  0008F6  D08C               	goto	l8447
  2076  0008F8  D25A               	goto	l8543
  2077  0008FA                     l8403:
  2078                           
  2079                           ;main.c: 773:                 t_count = 5;
  2080  0008FA  0E00               	movlw	0
  2081  0008FC  0101               	movlb	1	; () banked
  2082  0008FE  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2083  000900  0E05               	movlw	5
  2084  000902  6FBE               	movwf	main@t_count& (0+255),b
  2085                           
  2086                           ; BSR set to: 1
  2087                           ;main.c: 774:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2088  000904  0E01               	movlw	1
  2089  000906  EC62  F01F         	call	_lcdInst
  2090  00090A  0E11               	movlw	17
  2091  00090C  0101               	movlb	1	; () banked
  2092  00090E  6F5A               	movwf	??_main& (0+255),b
  2093  000910  0E3A               	movlw	58
  2094  000912                     u9247:
  2095  000912  2EE8               	decfsz	wreg,f,c
  2096  000914  D7FE               	bra	u9247
  2097  000916  2F5A               	decfsz	??_main& (0+255),f,b
  2098  000918  D7FC               	bra	u9247
  2099  00091A  F000               	nop	
  2100                           
  2101                           ;main.c: 775:                     printf("waiting");
  2102  00091C  0E02               	movlw	low (STR_54+5)
  2103  00091E  0100               	movlb	0	; () banked
  2104  000920  6FED               	movwf	printf@fmt& (0+255),b
  2105  000922  0EFF               	movlw	high (STR_54+5)
  2106  000924  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2107  000926  ECFC  F01E         	call	_printf	;wreg free
  2108                           
  2109                           ;main.c: 777:                     if (!PORTAbits.RA4){
  2110  00092A  B880               	btfsc	3968,4,c	;volatile
  2111  00092C  D013               	goto	l8419
  2112                           
  2113                           ;main.c: 778:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2114  00092E  0E01               	movlw	1
  2115  000930  EC62  F01F         	call	_lcdInst
  2116  000934  0E11               	movlw	17
  2117  000936  0101               	movlb	1	; () banked
  2118  000938  6F5A               	movwf	??_main& (0+255),b
  2119  00093A  0E3A               	movlw	58
  2120  00093C                     u9257:
  2121  00093C  2EE8               	decfsz	wreg,f,c
  2122  00093E  D7FE               	bra	u9257
  2123  000940  2F5A               	decfsz	??_main& (0+255),f,b
  2124  000942  D7FC               	bra	u9257
  2125  000944  F000               	nop	
  2126                           
  2127                           ;main.c: 779:                         printf("more waiting");
  2128  000946  0EFD               	movlw	low STR_54
  2129  000948  0100               	movlb	0	; () banked
  2130  00094A  6FED               	movwf	printf@fmt& (0+255),b
  2131  00094C  0EFE               	movlw	high STR_54
  2132  00094E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2133  000950  ECFC  F01E         	call	_printf	;wreg free
  2134  000954                     l8419:
  2135                           
  2136                           ;main.c: 781:                     if (PORTAbits.RA4){
  2137  000954  A880               	btfss	3968,4,c	;volatile
  2138  000956  D016               	goto	l8429
  2139                           
  2140                           ;main.c: 784:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2141  000958  0E01               	movlw	1
  2142  00095A  EC62  F01F         	call	_lcdInst
  2143  00095E  0E11               	movlw	17
  2144  000960  0101               	movlb	1	; () banked
  2145  000962  6F5A               	movwf	??_main& (0+255),b
  2146  000964  0E3A               	movlw	58
  2147  000966                     u9267:
  2148  000966  2EE8               	decfsz	wreg,f,c
  2149  000968  D7FE               	bra	u9267
  2150  00096A  2F5A               	decfsz	??_main& (0+255),f,b
  2151  00096C  D7FC               	bra	u9267
  2152  00096E  F000               	nop	
  2153                           
  2154                           ;main.c: 785:                         printf("done wait");
  2155  000970  0EBB               	movlw	low STR_55
  2156  000972  0100               	movlb	0	; () banked
  2157  000974  6FED               	movwf	printf@fmt& (0+255),b
  2158  000976  0EFF               	movlw	high STR_55
  2159  000978  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2160  00097A  ECFC  F01E         	call	_printf	;wreg free
  2161                           
  2162                           ;main.c: 786:                         arduino_stopped = 1;
  2163  00097E  0E01               	movlw	1
  2164  000980  0101               	movlb	1	; () banked
  2165  000982  6FB7               	movwf	main@arduino_stopped& (0+255),b
  2166  000984                     l8429:
  2167                           
  2168                           ;main.c: 788:                     if (arduino_stopped){
  2169  000984  0101               	movlb	1	; () banked
  2170  000986  51B7               	movf	main@arduino_stopped& (0+255),w,b
  2171  000988  B4D8               	btfsc	status,2,c
  2172  00098A  D042               	goto	l8447
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;main.c: 789:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2176  00098C  0E01               	movlw	1
  2177  00098E  EC62  F01F         	call	_lcdInst
  2178  000992  0E11               	movlw	17
  2179  000994  0101               	movlb	1	; () banked
  2180  000996  6F5A               	movwf	??_main& (0+255),b
  2181  000998  0E3A               	movlw	58
  2182  00099A                     u9277:
  2183  00099A  2EE8               	decfsz	wreg,f,c
  2184  00099C  D7FE               	bra	u9277
  2185  00099E  2F5A               	decfsz	??_main& (0+255),f,b
  2186  0009A0  D7FC               	bra	u9277
  2187  0009A2  F000               	nop	
  2188                           
  2189                           ;main.c: 790:                         printf("dun break");
  2190  0009A4  0EA7               	movlw	low STR_56
  2191  0009A6  0100               	movlb	0	; () banked
  2192  0009A8  6FED               	movwf	printf@fmt& (0+255),b
  2193  0009AA  0EFF               	movlw	high STR_56
  2194  0009AC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2195  0009AE  ECFC  F01E         	call	_printf	;wreg free
  2196                           
  2197                           ;main.c: 791:                         steps2_adj=ultrasonic_main();
  2198  0009B2  ECC2  F012         	call	_ultrasonic_main	;wreg free
  2199  0009B6  C0FC  F1BA         	movff	?_ultrasonic_main,main@steps2_adj
  2200  0009BA  C0FD  F1BB         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2201                           
  2202                           ;main.c: 792:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2203  0009BE  0E01               	movlw	1
  2204  0009C0  EC62  F01F         	call	_lcdInst
  2205  0009C4  0E11               	movlw	17
  2206  0009C6  0101               	movlb	1	; () banked
  2207  0009C8  6F5A               	movwf	??_main& (0+255),b
  2208  0009CA  0E3A               	movlw	58
  2209  0009CC                     u9287:
  2210  0009CC  2EE8               	decfsz	wreg,f,c
  2211  0009CE  D7FE               	bra	u9287
  2212  0009D0  2F5A               	decfsz	??_main& (0+255),f,b
  2213  0009D2  D7FC               	bra	u9287
  2214  0009D4  F000               	nop	
  2215                           
  2216                           ;main.c: 793:                         printf("stepsadj %d", steps2_adj);
  2217  0009D6  0E23               	movlw	low STR_21
  2218  0009D8  0100               	movlb	0	; () banked
  2219  0009DA  6FED               	movwf	printf@fmt& (0+255),b
  2220  0009DC  0EFF               	movlw	high STR_21
  2221  0009DE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2222  0009E0  C1BA  F0EF         	movff	main@steps2_adj,?_printf+2
  2223  0009E4  C1BB  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2224  0009E8  ECFC  F01E         	call	_printf	;wreg free
  2225                           
  2226                           ;main.c: 794:                         t_count = number_deploy(avg_dist, poles_detected);
  2227  0009EC  C044  F0FB         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2228  0009F0  C045  F0FC         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2229  0009F4  C1C4  F0FD         	movff	main@poles_detected,number_deploy@poles_detected
  2230  0009F8  C1C5  F0FE         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2231  0009FC  ECBB  F010         	call	_number_deploy	;wreg free
  2232  000A00  C0FB  F1BE         	movff	?_number_deploy,main@t_count
  2233  000A04  C0FC  F1BF         	movff	?_number_deploy+1,main@t_count+1
  2234                           
  2235                           ;main.c: 795:                         sens = 0;
  2236  000A08  0E00               	movlw	0
  2237  000A0A  6E59               	movwf	_sens+1,c	;volatile
  2238  000A0C  0E00               	movlw	0
  2239  000A0E  6E58               	movwf	_sens,c	;volatile
  2240  000A10                     l8447:
  2241                           
  2242                           ;main.c: 770:             while (sens){
  2243  000A10  5058               	movf	_sens,w,c	;volatile
  2244  000A12  1059               	iorwf	_sens+1,w,c	;volatile
  2245  000A14  A4D8               	btfss	status,2,c
  2246  000A16  D771               	goto	l8403
  2247                           
  2248                           ;main.c: 805:             act_done = 0;
  2249  000A18  0E00               	movlw	0
  2250  000A1A  0101               	movlb	1	; () banked
  2251  000A1C  6FB6               	movwf	main@act_done& (0+255),b
  2252                           
  2253                           ; BSR set to: 1
  2254                           ;main.c: 806:             if (t_count<=2){
  2255  000A1E  BFBF               	btfsc	(main@t_count+1)& (0+255),7,b
  2256  000A20  D006               	goto	u9160
  2257  000A22  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2258  000A24  E165               	bnz	l557
  2259  000A26  0E03               	movlw	3
  2260  000A28  5DBE               	subwf	main@t_count& (0+255),w,b
  2261  000A2A  B0D8               	btfsc	status,0,c
  2262  000A2C  D061               	goto	l557
  2263  000A2E                     u9160:
  2264                           
  2265                           ; BSR set to: 1
  2266                           ;main.c: 807:                 if (t_dep <8){
  2267  000A2E  BFC1               	btfsc	(main@t_dep+1)& (0+255),7,b
  2268  000A30  D006               	goto	u9170
  2269  000A32  51C1               	movf	(main@t_dep+1)& (0+255),w,b
  2270  000A34  E12D               	bnz	l8471
  2271  000A36  0E08               	movlw	8
  2272  000A38  5DC0               	subwf	main@t_dep& (0+255),w,b
  2273  000A3A  B0D8               	btfsc	status,0,c
  2274  000A3C  D029               	goto	u9180
  2275  000A3E                     u9170:
  2276                           
  2277                           ; BSR set to: 1
  2278                           ;main.c: 810:                     stack = 1;
  2279  000A3E  0E00               	movlw	0
  2280  000A40  6FB9               	movwf	(main@stack+1)& (0+255),b
  2281  000A42  0E01               	movlw	1
  2282  000A44  6FB8               	movwf	main@stack& (0+255),b
  2283                           
  2284                           ; BSR set to: 1
  2285                           ;main.c: 811:                                     brake();
  2286  000A46  EC8E  F01A         	call	_brake	;wreg free
  2287                           
  2288                           ;main.c: 813:                     for(int i=0; i<(t_count); i++){
  2289  000A4A  0E00               	movlw	0
  2290  000A4C  0101               	movlb	1	; () banked
  2291  000A4E  6FB3               	movwf	(main@i+1)& (0+255),b
  2292  000A50  0E00               	movlw	0
  2293  000A52  6FB2               	movwf	main@i& (0+255),b
  2294  000A54  D013               	goto	l8469
  2295  000A56                     l8463:
  2296                           
  2297                           ; BSR set to: 1
  2298                           ;main.c: 814:                         actuators_main(stack, steps2_adj, t_dep);
  2299  000A56  C1B8  F112         	movff	main@stack,actuators_main@stack
  2300  000A5A  C1B9  F113         	movff	main@stack+1,actuators_main@stack+1
  2301  000A5E  C1BA  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2302  000A62  C1BB  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2303  000A66  C1C0  F116         	movff	main@t_dep,actuators_main@t_dep
  2304  000A6A  C1C1  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2305  000A6E  EC98  F013         	call	_actuators_main	;wreg free
  2306                           
  2307                           ;main.c: 816:                         t_dep++;
  2308  000A72  0101               	movlb	1	; () banked
  2309  000A74  4BC0               	infsnz	main@t_dep& (0+255),f,b
  2310  000A76  2BC1               	incf	(main@t_dep+1)& (0+255),f,b
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;main.c: 817:                     }
  2314  000A78  4BB2               	infsnz	main@i& (0+255),f,b
  2315  000A7A  2BB3               	incf	(main@i+1)& (0+255),f,b
  2316  000A7C                     l8469:
  2317                           
  2318                           ; BSR set to: 1
  2319  000A7C  51BE               	movf	main@t_count& (0+255),w,b
  2320  000A7E  5DB2               	subwf	main@i& (0+255),w,b
  2321  000A80  51B3               	movf	(main@i+1)& (0+255),w,b
  2322  000A82  0A80               	xorlw	128
  2323  000A84  6F5A               	movwf	??_main& (0+255),b
  2324  000A86  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2325  000A88  0A80               	xorlw	128
  2326  000A8A  595A               	subwfb	??_main& (0+255),w,b
  2327  000A8C  A0D8               	btfss	status,0,c
  2328  000A8E  D7E3               	goto	l8463
  2329  000A90                     u9180:
  2330  000A90                     l8471:
  2331                           
  2332                           ; BSR set to: 1
  2333                           ;main.c: 819:                 if (t_dep >= 8){
  2334  000A90  BFC1               	btfsc	(main@t_dep+1)& (0+255),7,b
  2335  000A92  D02C               	goto	u9200
  2336  000A94  51C1               	movf	(main@t_dep+1)& (0+255),w,b
  2337  000A96  E104               	bnz	u9190
  2338  000A98  0E08               	movlw	8
  2339  000A9A  5DC0               	subwf	main@t_dep& (0+255),w,b
  2340  000A9C  A0D8               	btfss	status,0,c
  2341  000A9E  D026               	goto	u9200
  2342  000AA0                     u9190:
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;main.c: 820:                     stack = 2;
  2346  000AA0  0E00               	movlw	0
  2347  000AA2  6FB9               	movwf	(main@stack+1)& (0+255),b
  2348  000AA4  0E02               	movlw	2
  2349  000AA6  6FB8               	movwf	main@stack& (0+255),b
  2350                           
  2351                           ;main.c: 821:                     for(int i=0; i<(t_count); i++){
  2352  000AA8  0E00               	movlw	0
  2353  000AAA  6FB5               	movwf	(main@i_1075+1)& (0+255),b
  2354  000AAC  0E00               	movlw	0
  2355  000AAE  6FB4               	movwf	main@i_1075& (0+255),b
  2356  000AB0  D013               	goto	l8481
  2357  000AB2                     l8475:
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;main.c: 822:                         actuators_main(stack, steps2_adj, t_dep);
  2361  000AB2  C1B8  F112         	movff	main@stack,actuators_main@stack
  2362  000AB6  C1B9  F113         	movff	main@stack+1,actuators_main@stack+1
  2363  000ABA  C1BA  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2364  000ABE  C1BB  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2365  000AC2  C1C0  F116         	movff	main@t_dep,actuators_main@t_dep
  2366  000AC6  C1C1  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2367  000ACA  EC98  F013         	call	_actuators_main	;wreg free
  2368                           
  2369                           ;main.c: 824:                         t_dep++;
  2370  000ACE  0101               	movlb	1	; () banked
  2371  000AD0  4BC0               	infsnz	main@t_dep& (0+255),f,b
  2372  000AD2  2BC1               	incf	(main@t_dep+1)& (0+255),f,b
  2373                           
  2374                           ; BSR set to: 1
  2375                           ;main.c: 825:                     }
  2376  000AD4  4BB4               	infsnz	main@i_1075& (0+255),f,b
  2377  000AD6  2BB5               	incf	(main@i_1075+1)& (0+255),f,b
  2378  000AD8                     l8481:
  2379                           
  2380                           ; BSR set to: 1
  2381  000AD8  51BE               	movf	main@t_count& (0+255),w,b
  2382  000ADA  5DB4               	subwf	main@i_1075& (0+255),w,b
  2383  000ADC  51B5               	movf	(main@i_1075+1)& (0+255),w,b
  2384  000ADE  0A80               	xorlw	128
  2385  000AE0  6F5A               	movwf	??_main& (0+255),b
  2386  000AE2  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2387  000AE4  0A80               	xorlw	128
  2388  000AE6  595A               	subwfb	??_main& (0+255),w,b
  2389  000AE8  A0D8               	btfss	status,0,c
  2390  000AEA  D7E3               	goto	l8475
  2391  000AEC                     u9200:
  2392                           
  2393                           ; BSR set to: 1
  2394                           ;main.c: 827:                 act_done = 1;
  2395  000AEC  0E01               	movlw	1
  2396  000AEE  6FB6               	movwf	main@act_done& (0+255),b
  2397  000AF0                     l557:
  2398                           
  2399                           ; BSR set to: 1
  2400                           ;main.c: 829:             if (act_done){
  2401  000AF0  51B6               	movf	main@act_done& (0+255),w,b
  2402  000AF2  B4D8               	btfsc	status,2,c
  2403  000AF4  D1A8               	goto	l8563
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;main.c: 830:             Pole[poles_detected].dist_from_cl = avg_dist;
  2407  000AF6  C1C4  F15A         	movff	main@poles_detected,??_main
  2408  000AFA  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2409  000AFE  90D8               	bcf	status,0,c
  2410  000B00  375A               	rlcf	??_main& (0+255),f,b
  2411  000B02  375B               	rlcf	(??_main+1)& (0+255),f,b
  2412  000B04  90D8               	bcf	status,0,c
  2413  000B06  375A               	rlcf	??_main& (0+255),f,b
  2414  000B08  375B               	rlcf	(??_main+1)& (0+255),f,b
  2415  000B0A  90D8               	bcf	status,0,c
  2416  000B0C  375A               	rlcf	??_main& (0+255),f,b
  2417  000B0E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2418  000B10  0E06               	movlw	6
  2419  000B12  275A               	addwf	??_main& (0+255),f,b
  2420  000B14  0E00               	movlw	0
  2421  000B16  235B               	addwfc	(??_main+1)& (0+255),f,b
  2422  000B18  0E62               	movlw	low main@Pole
  2423  000B1A  255A               	addwf	??_main& (0+255),w,b
  2424  000B1C  6ED9               	movwf	fsr2l,c
  2425  000B1E  0E01               	movlw	high main@Pole
  2426  000B20  215B               	addwfc	(??_main+1)& (0+255),w,b
  2427  000B22  6EDA               	movwf	fsr2h,c
  2428  000B24  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2429  000B28  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2430                           
  2431                           ;main.c: 831:             Pole[poles_detected].dist_from_start = avg_dist+prev_avg_dist;
  2432  000B2C  51C6               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2433  000B2E  2444               	addwf	_avg_dist,w,c	;volatile
  2434  000B30  6F5A               	movwf	??_main& (0+255),b
  2435  000B32  51C7               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2436  000B34  2045               	addwfc	_avg_dist+1,w,c	;volatile
  2437  000B36  6F5B               	movwf	(??_main+1)& (0+255),b
  2438  000B38  C1C4  F15C         	movff	main@poles_detected,??_main+2
  2439  000B3C  C1C5  F15D         	movff	main@poles_detected+1,??_main+3
  2440  000B40  90D8               	bcf	status,0,c
  2441  000B42  375C               	rlcf	(??_main+2)& (0+255),f,b
  2442  000B44  375D               	rlcf	(??_main+3)& (0+255),f,b
  2443  000B46  90D8               	bcf	status,0,c
  2444  000B48  375C               	rlcf	(??_main+2)& (0+255),f,b
  2445  000B4A  375D               	rlcf	(??_main+3)& (0+255),f,b
  2446  000B4C  90D8               	bcf	status,0,c
  2447  000B4E  375C               	rlcf	(??_main+2)& (0+255),f,b
  2448  000B50  375D               	rlcf	(??_main+3)& (0+255),f,b
  2449  000B52  0E04               	movlw	4
  2450  000B54  275C               	addwf	(??_main+2)& (0+255),f,b
  2451  000B56  0E00               	movlw	0
  2452  000B58  235D               	addwfc	(??_main+3)& (0+255),f,b
  2453  000B5A  0E62               	movlw	low main@Pole
  2454  000B5C  255C               	addwf	(??_main+2)& (0+255),w,b
  2455  000B5E  6ED9               	movwf	fsr2l,c
  2456  000B60  0E01               	movlw	high main@Pole
  2457  000B62  215D               	addwfc	(??_main+3)& (0+255),w,b
  2458  000B64  6EDA               	movwf	fsr2h,c
  2459  000B66  C15A  FFDE         	movff	??_main,postinc2
  2460  000B6A  C15B  FFDD         	movff	??_main+1,postdec2
  2461                           
  2462                           ; BSR set to: 1
  2463                           ;main.c: 833:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2464  000B6E  0E01               	movlw	1
  2465  000B70  EC62  F01F         	call	_lcdInst
  2466  000B74  0E11               	movlw	17
  2467  000B76  0101               	movlb	1	; () banked
  2468  000B78  6F5A               	movwf	??_main& (0+255),b
  2469  000B7A  0E3A               	movlw	58
  2470  000B7C                     u9297:
  2471  000B7C  2EE8               	decfsz	wreg,f,c
  2472  000B7E  D7FE               	bra	u9297
  2473  000B80  2F5A               	decfsz	??_main& (0+255),f,b
  2474  000B82  D7FC               	bra	u9297
  2475  000B84  F000               	nop	
  2476                           
  2477                           ;main.c: 834:             printf("dist p[%d]:%d,%d", poles_detected,Pole[poles_detected]
      +                          .dist_from_cl, avg_dist);
  2478  000B86  0E2C               	movlw	low STR_58
  2479  000B88  0100               	movlb	0	; () banked
  2480  000B8A  6FED               	movwf	printf@fmt& (0+255),b
  2481  000B8C  0EFE               	movlw	high STR_58
  2482  000B8E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2483  000B90  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2484  000B94  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2485  000B98  C1C4  F15A         	movff	main@poles_detected,??_main
  2486  000B9C  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2487  000BA0  0101               	movlb	1	; () banked
  2488  000BA2  90D8               	bcf	status,0,c
  2489  000BA4  375A               	rlcf	??_main& (0+255),f,b
  2490  000BA6  375B               	rlcf	(??_main+1)& (0+255),f,b
  2491  000BA8  90D8               	bcf	status,0,c
  2492  000BAA  375A               	rlcf	??_main& (0+255),f,b
  2493  000BAC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2494  000BAE  90D8               	bcf	status,0,c
  2495  000BB0  375A               	rlcf	??_main& (0+255),f,b
  2496  000BB2  375B               	rlcf	(??_main+1)& (0+255),f,b
  2497  000BB4  0E06               	movlw	6
  2498  000BB6  275A               	addwf	??_main& (0+255),f,b
  2499  000BB8  0E00               	movlw	0
  2500  000BBA  235B               	addwfc	(??_main+1)& (0+255),f,b
  2501  000BBC  0E62               	movlw	low main@Pole
  2502  000BBE  255A               	addwf	??_main& (0+255),w,b
  2503  000BC0  6ED9               	movwf	fsr2l,c
  2504  000BC2  0E01               	movlw	high main@Pole
  2505  000BC4  215B               	addwfc	(??_main+1)& (0+255),w,b
  2506  000BC6  6EDA               	movwf	fsr2h,c
  2507  000BC8  CFDE F0F1          	movff	postinc2,?_printf+4
  2508  000BCC  CFDD F0F2          	movff	postdec2,?_printf+5
  2509  000BD0  C044  F0F3         	movff	_avg_dist,?_printf+6	;volatile
  2510  000BD4  C045  F0F4         	movff	_avg_dist+1,?_printf+7	;volatile
  2511  000BD8  C046  F0F5         	movff	_avg_dist+2,?_printf+8	;volatile
  2512  000BDC  C047  F0F6         	movff	_avg_dist+3,?_printf+9	;volatile
  2513  000BE0  ECFC  F01E         	call	_printf	;wreg free
  2514  000BE4  0EC0               	movlw	192
  2515  000BE6  EC62  F01F         	call	_lcdInst
  2516                           
  2517                           ;main.c: 836:             printf("p[%d] fs : %d",poles_detected, Pole[poles_detected].di
      +                          st_from_start);
  2518  000BEA  0EB8               	movlw	low STR_59
  2519  000BEC  0100               	movlb	0	; () banked
  2520  000BEE  6FED               	movwf	printf@fmt& (0+255),b
  2521  000BF0  0EFE               	movlw	high STR_59
  2522  000BF2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2523  000BF4  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2524  000BF8  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2525  000BFC  C1C4  F15A         	movff	main@poles_detected,??_main
  2526  000C00  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2527  000C04  0101               	movlb	1	; () banked
  2528  000C06  90D8               	bcf	status,0,c
  2529  000C08  375A               	rlcf	??_main& (0+255),f,b
  2530  000C0A  375B               	rlcf	(??_main+1)& (0+255),f,b
  2531  000C0C  90D8               	bcf	status,0,c
  2532  000C0E  375A               	rlcf	??_main& (0+255),f,b
  2533  000C10  375B               	rlcf	(??_main+1)& (0+255),f,b
  2534  000C12  90D8               	bcf	status,0,c
  2535  000C14  375A               	rlcf	??_main& (0+255),f,b
  2536  000C16  375B               	rlcf	(??_main+1)& (0+255),f,b
  2537  000C18  0E04               	movlw	4
  2538  000C1A  275A               	addwf	??_main& (0+255),f,b
  2539  000C1C  0E00               	movlw	0
  2540  000C1E  235B               	addwfc	(??_main+1)& (0+255),f,b
  2541  000C20  0E62               	movlw	low main@Pole
  2542  000C22  255A               	addwf	??_main& (0+255),w,b
  2543  000C24  6ED9               	movwf	fsr2l,c
  2544  000C26  0E01               	movlw	high main@Pole
  2545  000C28  215B               	addwfc	(??_main+1)& (0+255),w,b
  2546  000C2A  6EDA               	movwf	fsr2h,c
  2547  000C2C  CFDE F0F1          	movff	postinc2,?_printf+4
  2548  000C30  CFDD F0F2          	movff	postdec2,?_printf+5
  2549  000C34  ECFC  F01E         	call	_printf	;wreg free
  2550                           
  2551                           ;main.c: 837:             _delay((unsigned long)((3000)*(10000000/4000.0)));
  2552  000C38  0E27               	movlw	39
  2553  000C3A  0101               	movlb	1	; () banked
  2554  000C3C  6F5B               	movwf	(??_main+1)& (0+255),b
  2555  000C3E  0E0D               	movlw	13
  2556  000C40  6F5A               	movwf	??_main& (0+255),b
  2557  000C42  0E26               	movlw	38
  2558  000C44                     u9307:
  2559  000C44  2EE8               	decfsz	wreg,f,c
  2560  000C46  D7FE               	bra	u9307
  2561  000C48  2F5A               	decfsz	??_main& (0+255),f,b
  2562  000C4A  D7FC               	bra	u9307
  2563  000C4C  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2564  000C4E  D7FA               	bra	u9307
  2565  000C50  F000               	nop	
  2566                           
  2567                           ;main.c: 839:             prev_avg_dist = avg_dist ;
  2568  000C52  C044  F1C6         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2569  000C56  C045  F1C7         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2570  000C5A  C046  F1C8         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2571  000C5E  C047  F1C9         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2572                           
  2573                           ;main.c: 840:             poles_detected++;
  2574  000C62  0101               	movlb	1	; () banked
  2575  000C64  4BC4               	infsnz	main@poles_detected& (0+255),f,b
  2576  000C66  2BC5               	incf	(main@poles_detected+1)& (0+255),f,b
  2577                           
  2578                           ; BSR set to: 1
  2579                           ;main.c: 841:             start();
  2580  000C68  EC74  F01D         	call	_start	;wreg free
  2581                           
  2582                           ;main.c: 842:             arduino_stopped = 0;
  2583  000C6C  0E00               	movlw	0
  2584  000C6E  0101               	movlb	1	; () banked
  2585  000C70  6FB7               	movwf	main@arduino_stopped& (0+255),b
  2586                           
  2587                           ; BSR set to: 1
  2588                           ;main.c: 844:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2589  000C72  0E01               	movlw	1
  2590  000C74  EC62  F01F         	call	_lcdInst
  2591  000C78  0E11               	movlw	17
  2592  000C7A  0101               	movlb	1	; () banked
  2593  000C7C  6F5A               	movwf	??_main& (0+255),b
  2594  000C7E  0E3A               	movlw	58
  2595  000C80                     u9317:
  2596  000C80  2EE8               	decfsz	wreg,f,c
  2597  000C82  D7FE               	bra	u9317
  2598  000C84  2F5A               	decfsz	??_main& (0+255),f,b
  2599  000C86  D7FC               	bra	u9317
  2600  000C88  F000               	nop	
  2601                           
  2602                           ;main.c: 845:             printf("avg dist %d", avg_dist);
  2603  000C8A  0E2F               	movlw	low STR_60
  2604  000C8C  0100               	movlb	0	; () banked
  2605  000C8E  6FED               	movwf	printf@fmt& (0+255),b
  2606  000C90  0EFF               	movlw	high STR_60
  2607  000C92  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2608  000C94  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2609  000C98  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2610  000C9C  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2611  000CA0  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2612  000CA4  ECFC  F01E         	call	_printf	;wreg free
  2613                           
  2614                           ;main.c: 846:             printf("poles d %d", poles_detected);
  2615  000CA8  0E53               	movlw	low STR_61
  2616  000CAA  0100               	movlb	0	; () banked
  2617  000CAC  6FED               	movwf	printf@fmt& (0+255),b
  2618  000CAE  0EFF               	movlw	high STR_61
  2619  000CB0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2620  000CB2  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2621  000CB6  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2622  000CBA  ECFC  F01E         	call	_printf	;wreg free
  2623                           
  2624                           ;main.c: 847:             for (int i=0;i<4;i++){
  2625  000CBE  0E00               	movlw	0
  2626  000CC0  0101               	movlb	1	; () banked
  2627  000CC2  6FC3               	movwf	(main@i_1081+1)& (0+255),b
  2628  000CC4  0E00               	movlw	0
  2629  000CC6  6FC2               	movwf	main@i_1081& (0+255),b
  2630  000CC8                     l8517:
  2631                           
  2632                           ; BSR set to: 1
  2633  000CC8  BFC3               	btfsc	(main@i_1081+1)& (0+255),7,b
  2634  000CCA  D006               	goto	l8521
  2635  000CCC  51C3               	movf	(main@i_1081+1)& (0+255),w,b
  2636  000CCE  E15D               	bnz	l8539
  2637  000CD0  0E04               	movlw	4
  2638  000CD2  5DC2               	subwf	main@i_1081& (0+255),w,b
  2639  000CD4  B0D8               	btfsc	status,0,c
  2640  000CD6  D059               	goto	l8539
  2641  000CD8                     l8521:
  2642                           
  2643                           ; BSR set to: 1
  2644                           ;main.c: 848:                 sum[i] = 0 ;
  2645  000CD8  90D8               	bcf	status,0,c
  2646  000CDA  35C2               	rlcf	main@i_1081& (0+255),w,b
  2647  000CDC  6ED9               	movwf	fsr2l,c
  2648  000CDE  35C3               	rlcf	(main@i_1081+1)& (0+255),w,b
  2649  000CE0  6EDA               	movwf	fsr2h,c
  2650  000CE2  0E38               	movlw	low _sum
  2651  000CE4  26D9               	addwf	fsr2l,f,c
  2652  000CE6  0E00               	movlw	high _sum
  2653  000CE8  22DA               	addwfc	fsr2h,f,c
  2654  000CEA  0E00               	movlw	0
  2655  000CEC  6EDE               	movwf	postinc2,c
  2656  000CEE  0E00               	movlw	0
  2657  000CF0  6EDD               	movwf	postdec2,c
  2658                           
  2659                           ;main.c: 849:                 a[i] =0 ;
  2660  000CF2  90D8               	bcf	status,0,c
  2661  000CF4  35C2               	rlcf	main@i_1081& (0+255),w,b
  2662  000CF6  6ED9               	movwf	fsr2l,c
  2663  000CF8  35C3               	rlcf	(main@i_1081+1)& (0+255),w,b
  2664  000CFA  6EDA               	movwf	fsr2h,c
  2665  000CFC  0E61               	movlw	low _a
  2666  000CFE  26D9               	addwf	fsr2l,f,c
  2667  000D00  0E00               	movlw	high _a
  2668  000D02  22DA               	addwfc	fsr2h,f,c
  2669  000D04  0E00               	movlw	0
  2670  000D06  6EDE               	movwf	postinc2,c
  2671  000D08  0E00               	movlw	0
  2672  000D0A  6EDD               	movwf	postdec2,c
  2673                           
  2674                           ;main.c: 850:                 sumf[i] = 0 ;
  2675  000D0C  0E40               	movlw	low _sumf
  2676  000D0E  25C2               	addwf	main@i_1081& (0+255),w,b
  2677  000D10  6ED9               	movwf	fsr2l,c
  2678  000D12  0E00               	movlw	high _sumf
  2679  000D14  21C3               	addwfc	(main@i_1081+1)& (0+255),w,b
  2680  000D16  6EDA               	movwf	fsr2h,c
  2681  000D18  0E00               	movlw	0
  2682  000D1A  6EDF               	movwf	indf2,c
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;main.c: 851:                 for (int k=0;k<6;k++){
  2686  000D1C  0E00               	movlw	0
  2687  000D1E  6FBD               	movwf	(main@k+1)& (0+255),b
  2688  000D20  0E00               	movlw	0
  2689  000D22  6FBC               	movwf	main@k& (0+255),b
  2690  000D24                     l8525:
  2691                           
  2692                           ; BSR set to: 1
  2693  000D24  BFBD               	btfsc	(main@k+1)& (0+255),7,b
  2694  000D26  D006               	goto	l8529
  2695  000D28  51BD               	movf	(main@k+1)& (0+255),w,b
  2696  000D2A  E12C               	bnz	l8535
  2697  000D2C  0E06               	movlw	6
  2698  000D2E  5DBC               	subwf	main@k& (0+255),w,b
  2699  000D30  B0D8               	btfsc	status,0,c
  2700  000D32  D028               	goto	l8535
  2701  000D34                     l8529:
  2702                           
  2703                           ; BSR set to: 1
  2704                           ;main.c: 852:                     dist_final[i][k] = 0;
  2705  000D34  C1C2  F080         	movff	main@i_1081,___wmul@multiplier
  2706  000D38  C1C3  F081         	movff	main@i_1081+1,___wmul@multiplier+1
  2707  000D3C  0E00               	movlw	0
  2708  000D3E  0100               	movlb	0	; () banked
  2709  000D40  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2710  000D42  0E0C               	movlw	12
  2711  000D44  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2712  000D46  EC10  F01F         	call	___wmul	;wreg free
  2713  000D4A  0E50               	movlw	low _dist_final
  2714  000D4C  0101               	movlb	1	; () banked
  2715  000D4E  6F5A               	movwf	??_main& (0+255),b
  2716  000D50  0E02               	movlw	high _dist_final
  2717  000D52  6F5B               	movwf	(??_main+1)& (0+255),b
  2718  000D54  0100               	movlb	0	; () banked
  2719  000D56  5180               	movf	?___wmul& (0+255),w,b
  2720  000D58  0101               	movlb	1	; () banked
  2721  000D5A  275A               	addwf	??_main& (0+255),f,b
  2722  000D5C  0100               	movlb	0	; () banked
  2723  000D5E  5181               	movf	(?___wmul+1)& (0+255),w,b
  2724  000D60  0101               	movlb	1	; () banked
  2725  000D62  235B               	addwfc	(??_main+1)& (0+255),f,b
  2726  000D64  90D8               	bcf	status,0,c
  2727  000D66  35BC               	rlcf	main@k& (0+255),w,b
  2728  000D68  6ED9               	movwf	fsr2l,c
  2729  000D6A  35BD               	rlcf	(main@k+1)& (0+255),w,b
  2730  000D6C  6EDA               	movwf	fsr2h,c
  2731  000D6E  515A               	movf	??_main& (0+255),w,b
  2732  000D70  26D9               	addwf	fsr2l,f,c
  2733  000D72  515B               	movf	(??_main+1)& (0+255),w,b
  2734  000D74  22DA               	addwfc	fsr2h,f,c
  2735  000D76  0E00               	movlw	0
  2736  000D78  6EDE               	movwf	postinc2,c
  2737  000D7A  0E00               	movlw	0
  2738  000D7C  6EDD               	movwf	postdec2,c
  2739                           
  2740                           ; BSR set to: 1
  2741                           ;main.c: 853:                     }
  2742  000D7E  4BBC               	infsnz	main@k& (0+255),f,b
  2743  000D80  2BBD               	incf	(main@k+1)& (0+255),f,b
  2744  000D82  D7D0               	goto	l8525
  2745  000D84                     l8535:
  2746                           
  2747                           ; BSR set to: 1
  2748                           ;main.c: 854:                 }
  2749  000D84  4BC2               	infsnz	main@i_1081& (0+255),f,b
  2750  000D86  2BC3               	incf	(main@i_1081+1)& (0+255),f,b
  2751  000D88  D79F               	goto	l8517
  2752  000D8A                     l8539:
  2753                           
  2754                           ; BSR set to: 1
  2755                           ;main.c: 855:                 _delay((unsigned long)((1000)*(10000000/4000.0)));
  2756  000D8A  0E0D               	movlw	13
  2757  000D8C  0101               	movlb	1	; () banked
  2758  000D8E  6F5B               	movwf	(??_main+1)& (0+255),b
  2759  000D90  0EAF               	movlw	175
  2760  000D92  6F5A               	movwf	??_main& (0+255),b
  2761  000D94  0EB6               	movlw	182
  2762  000D96                     u9327:
  2763  000D96  2EE8               	decfsz	wreg,f,c
  2764  000D98  D7FE               	bra	u9327
  2765  000D9A  2F5A               	decfsz	??_main& (0+255),f,b
  2766  000D9C  D7FC               	bra	u9327
  2767  000D9E  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2768  000DA0  D7FA               	bra	u9327
  2769  000DA2  F000               	nop	
  2770                           
  2771                           ;main.c: 856:                 sens = 1;
  2772  000DA4  0E00               	movlw	0
  2773  000DA6  6E59               	movwf	_sens+1,c	;volatile
  2774  000DA8  0E01               	movlw	1
  2775  000DAA  6E58               	movwf	_sens,c	;volatile
  2776  000DAC  D04C               	goto	l8563
  2777  000DAE                     l8543:
  2778                           
  2779                           ; BSR set to: 1
  2780                           ;main.c: 860:             brake();
  2781  000DAE  EC8E  F01A         	call	_brake	;wreg free
  2782                           
  2783                           ;main.c: 861:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2784  000DB2  0E01               	movlw	1
  2785  000DB4  EC62  F01F         	call	_lcdInst
  2786  000DB8  0E11               	movlw	17
  2787  000DBA  0101               	movlb	1	; () banked
  2788  000DBC  6F5A               	movwf	??_main& (0+255),b
  2789  000DBE  0E3A               	movlw	58
  2790  000DC0                     u9337:
  2791  000DC0  2EE8               	decfsz	wreg,f,c
  2792  000DC2  D7FE               	bra	u9337
  2793  000DC4  2F5A               	decfsz	??_main& (0+255),f,b
  2794  000DC6  D7FC               	bra	u9337
  2795  000DC8  F000               	nop	
  2796                           
  2797                           ;main.c: 862:             printf("poles done");
  2798  000DCA  0E69               	movlw	low STR_62
  2799  000DCC  0100               	movlb	0	; () banked
  2800  000DCE  6FED               	movwf	printf@fmt& (0+255),b
  2801  000DD0  0EFF               	movlw	high STR_62
  2802  000DD2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2803  000DD4  ECFC  F01E         	call	_printf	;wreg free
  2804                           
  2805                           ;main.c: 863:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2806  000DD8  0E0D               	movlw	13
  2807  000DDA  0101               	movlb	1	; () banked
  2808  000DDC  6F5B               	movwf	(??_main+1)& (0+255),b
  2809  000DDE  0EAF               	movlw	175
  2810  000DE0  6F5A               	movwf	??_main& (0+255),b
  2811  000DE2  0EB6               	movlw	182
  2812  000DE4                     u9347:
  2813  000DE4  2EE8               	decfsz	wreg,f,c
  2814  000DE6  D7FE               	bra	u9347
  2815  000DE8  2F5A               	decfsz	??_main& (0+255),f,b
  2816  000DEA  D7FC               	bra	u9347
  2817  000DEC  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2818  000DEE  D7FA               	bra	u9347
  2819  000DF0  F000               	nop	
  2820                           
  2821                           ;main.c: 869:             backwards();
  2822  000DF2  EC24  F01F         	call	_backwards	;wreg free
  2823                           
  2824                           ;main.c: 870:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2825  000DF6  0E01               	movlw	1
  2826  000DF8  EC62  F01F         	call	_lcdInst
  2827  000DFC  0E11               	movlw	17
  2828  000DFE  0101               	movlb	1	; () banked
  2829  000E00  6F5A               	movwf	??_main& (0+255),b
  2830  000E02  0E3A               	movlw	58
  2831  000E04                     u9357:
  2832  000E04  2EE8               	decfsz	wreg,f,c
  2833  000E06  D7FE               	bra	u9357
  2834  000E08  2F5A               	decfsz	??_main& (0+255),f,b
  2835  000E0A  D7FC               	bra	u9357
  2836  000E0C  F000               	nop	
  2837                           
  2838                           ;main.c: 871:             printf("backwards");
  2839  000E0E  0EB1               	movlw	low STR_63
  2840  000E10  0100               	movlb	0	; () banked
  2841  000E12  6FED               	movwf	printf@fmt& (0+255),b
  2842  000E14  0EFF               	movlw	high STR_63
  2843  000E16  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2844  000E18  ECFC  F01E         	call	_printf	;wreg free
  2845                           
  2846                           ;main.c: 872:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2847  000E1C  0E0D               	movlw	13
  2848  000E1E  0101               	movlb	1	; () banked
  2849  000E20  6F5B               	movwf	(??_main+1)& (0+255),b
  2850  000E22  0EAF               	movlw	175
  2851  000E24  6F5A               	movwf	??_main& (0+255),b
  2852  000E26  0EB6               	movlw	182
  2853  000E28                     u9367:
  2854  000E28  2EE8               	decfsz	wreg,f,c
  2855  000E2A  D7FE               	bra	u9367
  2856  000E2C  2F5A               	decfsz	??_main& (0+255),f,b
  2857  000E2E  D7FC               	bra	u9367
  2858  000E30  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2859  000E32  D7FA               	bra	u9367
  2860  000E34  F000               	nop	
  2861                           
  2862                           ;main.c: 873:             sens = 0;
  2863  000E36  0E00               	movlw	0
  2864  000E38  6E59               	movwf	_sens+1,c	;volatile
  2865  000E3A  0E00               	movlw	0
  2866  000E3C  6E58               	movwf	_sens,c	;volatile
  2867                           
  2868                           ;main.c: 874:             send = 1;
  2869  000E3E  0E01               	movlw	1
  2870  000E40  6E6D               	movwf	_send,c
  2871                           
  2872                           ;main.c: 875:             break;
  2873  000E42  EF07  F000         	goto	start
  2874  000E46                     l8563:
  2875                           
  2876                           ;main.c: 877:         t_count = 5;
  2877  000E46  0E00               	movlw	0
  2878  000E48  0101               	movlb	1	; () banked
  2879  000E4A  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2880  000E4C  0E05               	movlw	5
  2881  000E4E  6FBE               	movwf	main@t_count& (0+255),b
  2882  000E50  D525               	goto	l8395
  2883  000E52                     __end_of_main:
  2884                           	opt callstack 0
  2885                           
  2886 ;; *************** function _ultrasonic_main *****************
  2887 ;; Defined at:
  2888 ;;		line 291 in file "main.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  min_us_dist     2   10[BANK1 ] int 
  2893 ;;  steps2_adj      2    8[BANK1 ] int 
  2894 ;;  step2_offset    2    6[BANK1 ] int 
  2895 ;;  sensed          2    4[BANK1 ] int 
  2896 ;;  min_us_dist     2    0        int 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  2  124[BANK0 ] int 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;Total ram usage:       14 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:   15
  2913 ;; This function calls:
  2914 ;;		_abs
  2915 ;;		_lcdInst
  2916 ;;		_min
  2917 ;;		_print_echo
  2918 ;;		_printf
  2919 ;;		_trig
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text1
  2926  002584                     __ptext1:
  2927                           	opt callstack 0
  2928  002584                     _ultrasonic_main:
  2929                           	opt callstack 15
  2930                           
  2931                           ;main.c: 292:     TRISBbits.RB0 = 0;
  2932                           
  2933                           ;incstack = 0
  2934  002584  9093               	bcf	3987,0,c	;volatile
  2935                           
  2936                           ;main.c: 293:     LATBbits.LATB0 = 1;
  2937  002586  808A               	bsf	3978,0,c	;volatile
  2938                           
  2939                           ;main.c: 295:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2940  002588  0E01               	movlw	1
  2941  00258A  EC62  F01F         	call	_lcdInst
  2942  00258E  0E11               	movlw	17
  2943  002590  0101               	movlb	1	; () banked
  2944  002592  6F00               	movwf	??_ultrasonic_main& (0+255),b
  2945  002594  0E3A               	movlw	58
  2946  002596                     u9377:
  2947  002596  2EE8               	decfsz	wreg,f,c
  2948  002598  D7FE               	bra	u9377
  2949  00259A  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  2950  00259C  D7FC               	bra	u9377
  2951  00259E  F000               	nop	
  2952                           
  2953                           ;main.c: 296:     printf("or here");
  2954  0025A0  0EEC               	movlw	low STR_18
  2955  0025A2  0100               	movlb	0	; () banked
  2956  0025A4  6FED               	movwf	printf@fmt& (0+255),b
  2957  0025A6  0EFF               	movlw	high STR_18
  2958  0025A8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2959  0025AA  ECFC  F01E         	call	_printf	;wreg free
  2960                           
  2961                           ;main.c: 297:  TRISB = 0b11110000;
  2962  0025AE  0EF0               	movlw	240
  2963  0025B0  6E93               	movwf	3987,c	;volatile
  2964                           
  2965                           ;main.c: 298:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2966  0025B2  0E01               	movlw	1
  2967  0025B4  EC62  F01F         	call	_lcdInst
  2968  0025B8  0E11               	movlw	17
  2969  0025BA  0101               	movlb	1	; () banked
  2970  0025BC  6F00               	movwf	??_ultrasonic_main& (0+255),b
  2971  0025BE  0E3A               	movlw	58
  2972  0025C0                     u9387:
  2973  0025C0  2EE8               	decfsz	wreg,f,c
  2974  0025C2  D7FE               	bra	u9387
  2975  0025C4  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  2976  0025C6  D7FC               	bra	u9387
  2977  0025C8  F000               	nop	
  2978                           
  2979                           ;main.c: 299:     printf("break heree?");
  2980  0025CA  0EF0               	movlw	low STR_19
  2981  0025CC  0100               	movlb	0	; () banked
  2982  0025CE  6FED               	movwf	printf@fmt& (0+255),b
  2983  0025D0  0EFE               	movlw	high STR_19
  2984  0025D2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2985  0025D4  ECFC  F01E         	call	_printf	;wreg free
  2986                           
  2987                           ;main.c: 300:     RBIF = 0;
  2988  0025D8  90F2               	bcf	4082,0,c	;volatile
  2989                           
  2990                           ;main.c: 301:  RBIE = 1;
  2991  0025DA  86F2               	bsf	4082,3,c	;volatile
  2992                           
  2993                           ;main.c: 303:     int sensed = 0;
  2994  0025DC  0E00               	movlw	0
  2995  0025DE  0101               	movlb	1	; () banked
  2996  0025E0  6F05               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2997  0025E2  0E00               	movlw	0
  2998  0025E4  6F04               	movwf	ultrasonic_main@sensed& (0+255),b
  2999                           
  3000                           ;main.c: 305:     int steps2_adj=0;
  3001  0025E6  0E00               	movlw	0
  3002  0025E8  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3003  0025EA  0E00               	movlw	0
  3004  0025EC  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3005                           
  3006                           ;main.c: 306:     int step2_offset=0;
  3007  0025EE  0E00               	movlw	0
  3008  0025F0  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3009  0025F2  0E00               	movlw	0
  3010  0025F4  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3011                           
  3012                           ;main.c: 307:     while(send){
  3013  0025F6  D070               	goto	l464
  3014  0025F8                     l7925:
  3015                           
  3016                           ; BSR set to: 1
  3017                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  3018  0025F8  0E00               	movlw	0
  3019  0025FA  6E51               	movwf	_meas+1,c	;volatile
  3020  0025FC  0E00               	movlw	0
  3021  0025FE  6E50               	movwf	_meas,c	;volatile
  3022  002600                     l7927:
  3023                           
  3024                           ; BSR set to: 1
  3025  002600  BE51               	btfsc	_meas+1,7,c	;volatile
  3026  002602  D006               	goto	l7931
  3027  002604  5051               	movf	_meas+1,w,c	;volatile
  3028  002606  E160               	bnz	l7963
  3029  002608  0E03               	movlw	3
  3030  00260A  5C50               	subwf	_meas,w,c	;volatile
  3031  00260C  B0D8               	btfsc	status,0,c
  3032  00260E  D05C               	goto	l7963
  3033  002610                     l7931:
  3034                           
  3035                           ; BSR set to: 1
  3036                           ;main.c: 309:         trig();
  3037  002610  ECE7  F017         	call	_trig	;wreg free
  3038                           
  3039                           ;main.c: 310:         RBIE = 0;
  3040  002614  96F2               	bcf	4082,3,c	;volatile
  3041                           
  3042                           ;main.c: 311:         print_echo();
  3043  002616  ECCB  F011         	call	_print_echo	;wreg free
  3044                           
  3045                           ;main.c: 312:         RBIE = 1;
  3046  00261A  86F2               	bsf	4082,3,c	;volatile
  3047                           
  3048                           ;main.c: 313:         int min_us_dist = min(a, 4);
  3049  00261C  0E61               	movlw	low _a
  3050  00261E  0100               	movlb	0	; () banked
  3051  002620  6F80               	movwf	min@array& (0+255),b
  3052  002622  0E00               	movlw	high _a
  3053  002624  6F81               	movwf	(min@array+1)& (0+255),b
  3054  002626  0E00               	movlw	0
  3055  002628  6F83               	movwf	(min@size+1)& (0+255),b
  3056  00262A  0E04               	movlw	4
  3057  00262C  6F82               	movwf	min@size& (0+255),b
  3058  00262E  EC5F  F017         	call	_min	;wreg free
  3059  002632  C080  F10A         	movff	?_min,ultrasonic_main@min_us_dist_967
  3060  002636  C081  F10B         	movff	?_min+1,ultrasonic_main@min_us_dist_967+1
  3061                           
  3062                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3063  00263A  0E01               	movlw	1
  3064  00263C  EC62  F01F         	call	_lcdInst
  3065  002640  0E11               	movlw	17
  3066  002642  0101               	movlb	1	; () banked
  3067  002644  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3068  002646  0E3A               	movlw	58
  3069  002648                     u9397:
  3070  002648  2EE8               	decfsz	wreg,f,c
  3071  00264A  D7FE               	bra	u9397
  3072  00264C  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3073  00264E  D7FC               	bra	u9397
  3074  002650  F000               	nop	
  3075                           
  3076                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  3077  002652  0E5E               	movlw	low STR_20
  3078  002654  0100               	movlb	0	; () banked
  3079  002656  6FED               	movwf	printf@fmt& (0+255),b
  3080  002658  0EFF               	movlw	high STR_20
  3081  00265A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3082  00265C  C10A  F0EF         	movff	ultrasonic_main@min_us_dist_967,?_printf+2
  3083  002660  C10B  F0F0         	movff	ultrasonic_main@min_us_dist_967+1,?_printf+3
  3084  002664  ECFC  F01E         	call	_printf	;wreg free
  3085                           
  3086                           ;main.c: 317:         if (min_us_dist<14){
  3087  002668  0101               	movlb	1	; () banked
  3088  00266A  BF0B               	btfsc	(ultrasonic_main@min_us_dist_967+1)& (0+255),7,b
  3089  00266C  D006               	goto	u8520
  3090  00266E  510B               	movf	(ultrasonic_main@min_us_dist_967+1)& (0+255),w,b
  3091  002670  E108               	bnz	l7951
  3092  002672  0E0E               	movlw	14
  3093  002674  5D0A               	subwf	ultrasonic_main@min_us_dist_967& (0+255),w,b
  3094  002676  B0D8               	btfsc	status,0,c
  3095  002678  D004               	goto	l7951
  3096  00267A                     u8520:
  3097                           
  3098                           ; BSR set to: 1
  3099                           ;main.c: 318:             step2_offset = 0;
  3100  00267A  0E00               	movlw	0
  3101  00267C  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3102  00267E  0E00               	movlw	0
  3103  002680  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3104  002682                     l7951:
  3105                           
  3106                           ; BSR set to: 1
  3107                           ;main.c: 320:         if (min_us_dist>=14){
  3108  002682  BF0B               	btfsc	(ultrasonic_main@min_us_dist_967+1)& (0+255),7,b
  3109  002684  D015               	goto	l7955
  3110  002686  510B               	movf	(ultrasonic_main@min_us_dist_967+1)& (0+255),w,b
  3111  002688  E104               	bnz	u8530
  3112  00268A  0E0E               	movlw	14
  3113  00268C  5D0A               	subwf	ultrasonic_main@min_us_dist_967& (0+255),w,b
  3114  00268E  A0D8               	btfss	status,0,c
  3115  002690  D00F               	goto	l7955
  3116  002692                     u8530:
  3117                           
  3118                           ; BSR set to: 1
  3119                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  3120  002692  0EF2               	movlw	242
  3121  002694  250A               	addwf	ultrasonic_main@min_us_dist_967& (0+255),w,b
  3122  002696  0100               	movlb	0	; () banked
  3123  002698  6F92               	movwf	abs@a& (0+255),b
  3124  00269A  0EFF               	movlw	255
  3125  00269C  0101               	movlb	1	; () banked
  3126  00269E  210B               	addwfc	(ultrasonic_main@min_us_dist_967+1)& (0+255),w,b
  3127  0026A0  0100               	movlb	0	; () banked
  3128  0026A2  6F93               	movwf	(abs@a+1)& (0+255),b
  3129  0026A4  EC3B  F01E         	call	_abs	;wreg free
  3130  0026A8  C092  F106         	movff	?_abs,ultrasonic_main@step2_offset
  3131  0026AC  C093  F107         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  3132  0026B0                     l7955:
  3133                           
  3134                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  3135  0026B0  0E6E               	movlw	110
  3136  0026B2  0101               	movlb	1	; () banked
  3137  0026B4  2506               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  3138  0026B6  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3139  0026B8  0E00               	movlw	0
  3140  0026BA  2107               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  3141  0026BC  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3142                           
  3143                           ; BSR set to: 1
  3144                           ;main.c: 324:         sensed++;
  3145  0026BE  4B04               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  3146  0026C0  2B05               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  3147                           
  3148                           ; BSR set to: 1
  3149                           ;main.c: 327:         }
  3150  0026C2  4A50               	infsnz	_meas,f,c	;volatile
  3151  0026C4  2A51               	incf	_meas+1,f,c	;volatile
  3152  0026C6  D79C               	goto	l7927
  3153  0026C8                     l7963:
  3154                           
  3155                           ; BSR set to: 1
  3156                           ;main.c: 328:         if (sensed>2){
  3157  0026C8  BF05               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  3158  0026CA  D006               	goto	l464
  3159  0026CC  5105               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  3160  0026CE  E107               	bnz	l7969
  3161  0026D0  0E03               	movlw	3
  3162  0026D2  5D04               	subwf	ultrasonic_main@sensed& (0+255),w,b
  3163  0026D4  B0D8               	btfsc	status,0,c
  3164  0026D6  D003               	goto	u8550
  3165  0026D8                     l464:
  3166                           
  3167                           ; BSR set to: 1
  3168                           ;main.c: 307:     while(send){
  3169  0026D8  506D               	movf	_send,w,c
  3170  0026DA  A4D8               	btfss	status,2,c
  3171  0026DC  D78D               	goto	l7925
  3172  0026DE                     u8550:
  3173  0026DE                     l7969:
  3174                           
  3175                           ; BSR set to: 1
  3176                           ;main.c: 375:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3177  0026DE  0E01               	movlw	1
  3178  0026E0  EC62  F01F         	call	_lcdInst
  3179  0026E4  0E11               	movlw	17
  3180  0026E6  0101               	movlb	1	; () banked
  3181  0026E8  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3182  0026EA  0E3A               	movlw	58
  3183  0026EC                     u9407:
  3184  0026EC  2EE8               	decfsz	wreg,f,c
  3185  0026EE  D7FE               	bra	u9407
  3186  0026F0  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3187  0026F2  D7FC               	bra	u9407
  3188  0026F4  F000               	nop	
  3189                           
  3190                           ;main.c: 376:     printf("stepsadj %d", steps2_adj);
  3191  0026F6  0E23               	movlw	low STR_21
  3192  0026F8  0100               	movlb	0	; () banked
  3193  0026FA  6FED               	movwf	printf@fmt& (0+255),b
  3194  0026FC  0EFF               	movlw	high STR_21
  3195  0026FE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3196  002700  C108  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3197  002704  C109  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3198  002708  ECFC  F01E         	call	_printf	;wreg free
  3199                           
  3200                           ;main.c: 377:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3201  00270C  0E0D               	movlw	13
  3202  00270E  0101               	movlb	1	; () banked
  3203  002710  6F01               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3204  002712  0EAF               	movlw	175
  3205  002714  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3206  002716  0EB6               	movlw	182
  3207  002718                     u9417:
  3208  002718  2EE8               	decfsz	wreg,f,c
  3209  00271A  D7FE               	bra	u9417
  3210  00271C  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3211  00271E  D7FC               	bra	u9417
  3212  002720  2F01               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3213  002722  D7FA               	bra	u9417
  3214  002724  F000               	nop	
  3215                           
  3216                           ;main.c: 378:     return steps2_adj;
  3217  002726  C108  F0FC         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3218  00272A  C109  F0FD         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3219  00272E  0012               	return		;funcret
  3220  002730                     __end_of_ultrasonic_main:
  3221                           	opt callstack 0
  3222                           
  3223 ;; *************** function _trig *****************
  3224 ;; Defined at:
  3225 ;;		line 190 in file "main.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;Total ram usage:        2 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    3
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_ultrasonic_main
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text2
  3254  002FCE                     __ptext2:
  3255                           	opt callstack 0
  3256  002FCE                     _trig:
  3257                           	opt callstack 26
  3258                           
  3259                           ;main.c: 191:     for(b=1; b<5; b++){
  3260                           
  3261                           ;incstack = 0
  3262  002FCE  0E00               	movlw	0
  3263  002FD0  6E5B               	movwf	_b+1,c
  3264  002FD2  0E01               	movlw	1
  3265  002FD4  6E5A               	movwf	_b,c
  3266  002FD6  BE5B               	btfsc	_b+1,7,c
  3267  002FD8  D004               	goto	l7615
  3268  002FDA  505B               	movf	_b+1,w,c
  3269  002FDC  E101               	bnz	u8100
  3270  002FDE  D072               	goto	L1
  3271  002FE0                     u8100:
  3272  002FE0  0012               	return	
  3273  002FE2                     l7615:
  3274                           
  3275                           ;main.c: 192:         TMR1H = 0;
  3276  002FE2  0E00               	movlw	0
  3277  002FE4  6ECF               	movwf	4047,c	;volatile
  3278                           
  3279                           ;main.c: 193:         TMR1L = 0;
  3280  002FE6  0E00               	movlw	0
  3281  002FE8  6ECE               	movwf	4046,c	;volatile
  3282                           
  3283                           ;main.c: 194:         if(b==1){
  3284  002FEA  045A               	decf	_b,w,c
  3285  002FEC  105B               	iorwf	_b+1,w,c
  3286  002FEE  A4D8               	btfss	status,2,c
  3287  002FF0  D015               	goto	l7627
  3288                           
  3289                           ;main.c: 195:             RBIE = 0;
  3290  002FF2  96F2               	bcf	4082,3,c	;volatile
  3291                           
  3292                           ;main.c: 196:             RD1 = 1;
  3293  002FF4  8283               	bsf	3971,1,c	;volatile
  3294                           
  3295                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3296  002FF6  0E08               	movlw	8
  3297  002FF8                     u9427:
  3298  002FF8  2EE8               	decfsz	wreg,f,c
  3299  002FFA  D7FE               	bra	u9427
  3300  002FFC  F000               	nop	
  3301                           
  3302                           ;main.c: 198:             RD1 = 0;
  3303  002FFE  9283               	bcf	3971,1,c	;volatile
  3304                           
  3305                           ;main.c: 200:             RBIE = 1;
  3306  003000  86F2               	bsf	4082,3,c	;volatile
  3307                           
  3308                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3309  003002  0E02               	movlw	2
  3310  003004  0100               	movlb	0	; () banked
  3311  003006  6F81               	movwf	(??_trig+1)& (0+255),b
  3312  003008  0EB7               	movlw	183
  3313  00300A  6F80               	movwf	??_trig& (0+255),b
  3314  00300C  0E4C               	movlw	76
  3315  00300E                     u9437:
  3316  00300E  2EE8               	decfsz	wreg,f,c
  3317  003010  D7FE               	bra	u9437
  3318  003012  2F80               	decfsz	??_trig& (0+255),f,b
  3319  003014  D7FC               	bra	u9437
  3320  003016  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3321  003018  D7FA               	bra	u9437
  3322  00301A  F000               	nop	
  3323  00301C                     l7627:
  3324                           
  3325                           ;main.c: 203:         if(b==2){
  3326  00301C  0E02               	movlw	2
  3327  00301E  185A               	xorwf	_b,w,c
  3328  003020  105B               	iorwf	_b+1,w,c
  3329  003022  A4D8               	btfss	status,2,c
  3330  003024  D015               	goto	l7637
  3331                           
  3332                           ;main.c: 204:             RBIE = 0;
  3333  003026  96F2               	bcf	4082,3,c	;volatile
  3334                           
  3335                           ;main.c: 205:             RD0 = 1;
  3336  003028  8083               	bsf	3971,0,c	;volatile
  3337                           
  3338                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3339  00302A  0E08               	movlw	8
  3340  00302C                     u9447:
  3341  00302C  2EE8               	decfsz	wreg,f,c
  3342  00302E  D7FE               	bra	u9447
  3343  003030  F000               	nop	
  3344                           
  3345                           ;main.c: 207:             RD0 = 0;
  3346  003032  9083               	bcf	3971,0,c	;volatile
  3347                           
  3348                           ;main.c: 209:             RBIE = 1;
  3349  003034  86F2               	bsf	4082,3,c	;volatile
  3350                           
  3351                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3352  003036  0E02               	movlw	2
  3353  003038  0100               	movlb	0	; () banked
  3354  00303A  6F81               	movwf	(??_trig+1)& (0+255),b
  3355  00303C  0EB7               	movlw	183
  3356  00303E  6F80               	movwf	??_trig& (0+255),b
  3357  003040  0E4C               	movlw	76
  3358  003042                     u9457:
  3359  003042  2EE8               	decfsz	wreg,f,c
  3360  003044  D7FE               	bra	u9457
  3361  003046  2F80               	decfsz	??_trig& (0+255),f,b
  3362  003048  D7FC               	bra	u9457
  3363  00304A  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3364  00304C  D7FA               	bra	u9457
  3365  00304E  F000               	nop	
  3366  003050                     l7637:
  3367                           
  3368                           ;main.c: 212:         if(b==3){
  3369  003050  0E03               	movlw	3
  3370  003052  185A               	xorwf	_b,w,c
  3371  003054  105B               	iorwf	_b+1,w,c
  3372  003056  A4D8               	btfss	status,2,c
  3373  003058  D015               	goto	l7647
  3374                           
  3375                           ;main.c: 213:             RBIE = 0;
  3376  00305A  96F2               	bcf	4082,3,c	;volatile
  3377                           
  3378                           ;main.c: 214:             RB3 = 1;
  3379  00305C  8681               	bsf	3969,3,c	;volatile
  3380                           
  3381                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3382  00305E  0E08               	movlw	8
  3383  003060                     u9467:
  3384  003060  2EE8               	decfsz	wreg,f,c
  3385  003062  D7FE               	bra	u9467
  3386  003064  F000               	nop	
  3387                           
  3388                           ;main.c: 216:             RB3 = 0;
  3389  003066  9681               	bcf	3969,3,c	;volatile
  3390                           
  3391                           ;main.c: 218:             RBIE = 1;
  3392  003068  86F2               	bsf	4082,3,c	;volatile
  3393                           
  3394                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3395  00306A  0E02               	movlw	2
  3396  00306C  0100               	movlb	0	; () banked
  3397  00306E  6F81               	movwf	(??_trig+1)& (0+255),b
  3398  003070  0EB7               	movlw	183
  3399  003072  6F80               	movwf	??_trig& (0+255),b
  3400  003074  0E4C               	movlw	76
  3401  003076                     u9477:
  3402  003076  2EE8               	decfsz	wreg,f,c
  3403  003078  D7FE               	bra	u9477
  3404  00307A  2F80               	decfsz	??_trig& (0+255),f,b
  3405  00307C  D7FC               	bra	u9477
  3406  00307E  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3407  003080  D7FA               	bra	u9477
  3408  003082  F000               	nop	
  3409  003084                     l7647:
  3410                           
  3411                           ;main.c: 221:         if(b==4){
  3412  003084  0E04               	movlw	4
  3413  003086  185A               	xorwf	_b,w,c
  3414  003088  105B               	iorwf	_b+1,w,c
  3415  00308A  A4D8               	btfss	status,2,c
  3416  00308C  D015               	goto	l7657
  3417                           
  3418                           ;main.c: 222:             RBIE = 0;
  3419  00308E  96F2               	bcf	4082,3,c	;volatile
  3420                           
  3421                           ;main.c: 223:             RB2 = 1;
  3422  003090  8481               	bsf	3969,2,c	;volatile
  3423                           
  3424                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3425  003092  0E08               	movlw	8
  3426  003094                     u9487:
  3427  003094  2EE8               	decfsz	wreg,f,c
  3428  003096  D7FE               	bra	u9487
  3429  003098  F000               	nop	
  3430                           
  3431                           ;main.c: 225:             RB2 = 0;
  3432  00309A  9481               	bcf	3969,2,c	;volatile
  3433                           
  3434                           ;main.c: 227:             RBIE = 1;
  3435  00309C  86F2               	bsf	4082,3,c	;volatile
  3436                           
  3437                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3438  00309E  0E02               	movlw	2
  3439  0030A0  0100               	movlb	0	; () banked
  3440  0030A2  6F81               	movwf	(??_trig+1)& (0+255),b
  3441  0030A4  0EB7               	movlw	183
  3442  0030A6  6F80               	movwf	??_trig& (0+255),b
  3443  0030A8  0E4C               	movlw	76
  3444  0030AA                     u9497:
  3445  0030AA  2EE8               	decfsz	wreg,f,c
  3446  0030AC  D7FE               	bra	u9497
  3447  0030AE  2F80               	decfsz	??_trig& (0+255),f,b
  3448  0030B0  D7FC               	bra	u9497
  3449  0030B2  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3450  0030B4  D7FA               	bra	u9497
  3451  0030B6  F000               	nop	
  3452  0030B8                     l7657:
  3453                           
  3454                           ;main.c: 230:     }
  3455  0030B8  4A5A               	infsnz	_b,f,c
  3456  0030BA  2A5B               	incf	_b+1,f,c
  3457  0030BC  BE5B               	btfsc	_b+1,7,c
  3458  0030BE  D791               	goto	l7615
  3459  0030C0  505B               	movf	_b+1,w,c
  3460  0030C2  E105               	bnz	u8150
  3461  0030C4                     L1:
  3462  0030C4  0E05               	movlw	5
  3463  0030C6  5C5A               	subwf	_b,w,c
  3464  0030C8  B0D8               	btfsc	status,0,c
  3465  0030CA  0012               	return	
  3466  0030CC  D78A               	goto	l7615
  3467  0030CE                     u8150:
  3468  0030CE  0012               	return		;funcret
  3469  0030D0                     __end_of_trig:
  3470                           	opt callstack 0
  3471                           
  3472 ;; *************** function _print_echo *****************
  3473 ;; Defined at:
  3474 ;;		line 233 in file "main.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;Total ram usage:        1 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:   14
  3495 ;; This function calls:
  3496 ;;		_lcdInst
  3497 ;;		_printf
  3498 ;; This function is called by:
  3499 ;;		_ultrasonic_main
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text3
  3504  002396                     __ptext3:
  3505                           	opt callstack 0
  3506  002396                     _print_echo:
  3507                           	opt callstack 15
  3508                           
  3509                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3510                           
  3511                           ;incstack = 0
  3512  002396  0E01               	movlw	1
  3513  002398  EC62  F01F         	call	_lcdInst
  3514  00239C  0E11               	movlw	17
  3515  00239E  0100               	movlb	0	; () banked
  3516  0023A0  6FFB               	movwf	??_print_echo& (0+255),b
  3517  0023A2  0E3A               	movlw	58
  3518  0023A4                     u9507:
  3519  0023A4  2EE8               	decfsz	wreg,f,c
  3520  0023A6  D7FE               	bra	u9507
  3521  0023A8  2FFB               	decfsz	??_print_echo& (0+255),f,b
  3522  0023AA  D7FC               	bra	u9507
  3523  0023AC  F000               	nop	
  3524                           
  3525                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3526  0023AE  BE62               	btfsc	_a+1,7,c
  3527  0023B0  D01D               	goto	l7669
  3528  0023B2  5062               	movf	_a+1,w,c
  3529  0023B4  E104               	bnz	u8160
  3530  0023B6  0E02               	movlw	2
  3531  0023B8  5C61               	subwf	_a,w,c
  3532  0023BA  A0D8               	btfss	status,0,c
  3533  0023BC  D017               	goto	l7669
  3534  0023BE                     u8160:
  3535  0023BE  BE62               	btfsc	_a+1,7,c
  3536  0023C0  D006               	goto	u8170
  3537  0023C2  0E91               	movlw	145
  3538  0023C4  5C61               	subwf	_a,w,c
  3539  0023C6  0E01               	movlw	1
  3540  0023C8  5862               	subwfb	_a+1,w,c
  3541  0023CA  B0D8               	btfsc	status,0,c
  3542  0023CC  D00F               	goto	l7669
  3543  0023CE                     u8170:
  3544                           
  3545                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3546  0023CE  0EE8               	movlw	low STR_10
  3547  0023D0  0100               	movlb	0	; () banked
  3548  0023D2  6FED               	movwf	printf@fmt& (0+255),b
  3549  0023D4  0EFD               	movlw	high STR_10
  3550  0023D6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3551  0023D8  C061  F0EF         	movff	_a,?_printf+2
  3552  0023DC  C062  F0F0         	movff	_a+1,?_printf+3
  3553  0023E0  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3554  0023E4  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3555  0023E8  ECFC  F01E         	call	_printf	;wreg free
  3556  0023EC                     l7669:
  3557                           
  3558                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3559  0023EC  BE62               	btfsc	_a+1,7,c
  3560  0023EE  D00E               	goto	u8190
  3561  0023F0  5062               	movf	_a+1,w,c
  3562  0023F2  E104               	bnz	u8180
  3563  0023F4  0E02               	movlw	2
  3564  0023F6  5C61               	subwf	_a,w,c
  3565  0023F8  A0D8               	btfss	status,0,c
  3566  0023FA  D008               	goto	u8190
  3567  0023FC                     u8180:
  3568  0023FC  BE62               	btfsc	_a+1,7,c
  3569  0023FE  D00D               	goto	l7675
  3570  002400  0E91               	movlw	145
  3571  002402  5C61               	subwf	_a,w,c
  3572  002404  0E01               	movlw	1
  3573  002406  5862               	subwfb	_a+1,w,c
  3574  002408  A0D8               	btfss	status,0,c
  3575  00240A  D007               	goto	l7675
  3576  00240C                     u8190:
  3577                           
  3578                           ;main.c: 239:         printf("Dist1 = X");
  3579  00240C  0E7F               	movlw	low STR_11
  3580  00240E  0100               	movlb	0	; () banked
  3581  002410  6FED               	movwf	printf@fmt& (0+255),b
  3582  002412  0EFF               	movlw	high STR_11
  3583  002414  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3584  002416  ECFC  F01E         	call	_printf	;wreg free
  3585  00241A                     l7675:
  3586                           
  3587                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3588  00241A  BE64               	btfsc	_a+3,7,c
  3589  00241C  D020               	goto	l7683
  3590  00241E  5064               	movf	_a+3,w,c
  3591  002420  E104               	bnz	u8200
  3592  002422  0E02               	movlw	2
  3593  002424  5C63               	subwf	_a+2,w,c
  3594  002426  A0D8               	btfss	status,0,c
  3595  002428  D01A               	goto	l7683
  3596  00242A                     u8200:
  3597  00242A  BE64               	btfsc	_a+3,7,c
  3598  00242C  D006               	goto	u8210
  3599  00242E  0E91               	movlw	145
  3600  002430  5C63               	subwf	_a+2,w,c
  3601  002432  0E01               	movlw	1
  3602  002434  5864               	subwfb	_a+3,w,c
  3603  002436  B0D8               	btfsc	status,0,c
  3604  002438  D012               	goto	l7683
  3605  00243A                     u8210:
  3606  00243A  0EC0               	movlw	192
  3607  00243C  EC62  F01F         	call	_lcdInst
  3608                           
  3609                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3610  002440  0E4D               	movlw	low STR_12
  3611  002442  0100               	movlb	0	; () banked
  3612  002444  6FED               	movwf	printf@fmt& (0+255),b
  3613  002446  0EFE               	movlw	high STR_12
  3614  002448  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3615  00244A  C063  F0EF         	movff	_a+2,?_printf+2
  3616  00244E  C064  F0F0         	movff	_a+3,?_printf+3
  3617  002452  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3618  002456  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3619  00245A  ECFC  F01E         	call	_printf	;wreg free
  3620  00245E                     l7683:
  3621                           
  3622                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3623  00245E  BE64               	btfsc	_a+3,7,c
  3624  002460  D00E               	goto	u8230
  3625  002462  5064               	movf	_a+3,w,c
  3626  002464  E104               	bnz	u8220
  3627  002466  0E02               	movlw	2
  3628  002468  5C63               	subwf	_a+2,w,c
  3629  00246A  A0D8               	btfss	status,0,c
  3630  00246C  D008               	goto	u8230
  3631  00246E                     u8220:
  3632  00246E  BE64               	btfsc	_a+3,7,c
  3633  002470  D010               	goto	l7691
  3634  002472  0E91               	movlw	145
  3635  002474  5C63               	subwf	_a+2,w,c
  3636  002476  0E01               	movlw	1
  3637  002478  5864               	subwfb	_a+3,w,c
  3638  00247A  A0D8               	btfss	status,0,c
  3639  00247C  D00A               	goto	l7691
  3640  00247E                     u8230:
  3641  00247E  0EC0               	movlw	192
  3642  002480  EC62  F01F         	call	_lcdInst
  3643                           
  3644                           ;main.c: 247:         printf("Dist2 = X");
  3645  002484  0E89               	movlw	low STR_13
  3646  002486  0100               	movlb	0	; () banked
  3647  002488  6FED               	movwf	printf@fmt& (0+255),b
  3648  00248A  0EFF               	movlw	high STR_13
  3649  00248C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3650  00248E  ECFC  F01E         	call	_printf	;wreg free
  3651  002492                     l7691:
  3652                           
  3653                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3654  002492  BE66               	btfsc	_a+5,7,c
  3655  002494  D020               	goto	l7699
  3656  002496  5066               	movf	_a+5,w,c
  3657  002498  E104               	bnz	u8240
  3658  00249A  0E02               	movlw	2
  3659  00249C  5C65               	subwf	_a+4,w,c
  3660  00249E  A0D8               	btfss	status,0,c
  3661  0024A0  D01A               	goto	l7699
  3662  0024A2                     u8240:
  3663  0024A2  BE66               	btfsc	_a+5,7,c
  3664  0024A4  D006               	goto	u8250
  3665  0024A6  0E91               	movlw	145
  3666  0024A8  5C65               	subwf	_a+4,w,c
  3667  0024AA  0E01               	movlw	1
  3668  0024AC  5866               	subwfb	_a+5,w,c
  3669  0024AE  B0D8               	btfsc	status,0,c
  3670  0024B0  D012               	goto	l7699
  3671  0024B2                     u8250:
  3672  0024B2  0E90               	movlw	144
  3673  0024B4  EC62  F01F         	call	_lcdInst
  3674                           
  3675                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3676  0024B8  0E5D               	movlw	low STR_14
  3677  0024BA  0100               	movlb	0	; () banked
  3678  0024BC  6FED               	movwf	printf@fmt& (0+255),b
  3679  0024BE  0EFE               	movlw	high STR_14
  3680  0024C0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3681  0024C2  C065  F0EF         	movff	_a+4,?_printf+2
  3682  0024C6  C066  F0F0         	movff	_a+5,?_printf+3
  3683  0024CA  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3684  0024CE  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3685  0024D2  ECFC  F01E         	call	_printf	;wreg free
  3686  0024D6                     l7699:
  3687                           
  3688                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3689  0024D6  BE66               	btfsc	_a+5,7,c
  3690  0024D8  D00E               	goto	u8270
  3691  0024DA  5066               	movf	_a+5,w,c
  3692  0024DC  E104               	bnz	u8260
  3693  0024DE  0E02               	movlw	2
  3694  0024E0  5C65               	subwf	_a+4,w,c
  3695  0024E2  A0D8               	btfss	status,0,c
  3696  0024E4  D008               	goto	u8270
  3697  0024E6                     u8260:
  3698  0024E6  BE66               	btfsc	_a+5,7,c
  3699  0024E8  D010               	goto	l7707
  3700  0024EA  0E91               	movlw	145
  3701  0024EC  5C65               	subwf	_a+4,w,c
  3702  0024EE  0E01               	movlw	1
  3703  0024F0  5866               	subwfb	_a+5,w,c
  3704  0024F2  A0D8               	btfss	status,0,c
  3705  0024F4  D00A               	goto	l7707
  3706  0024F6                     u8270:
  3707  0024F6  0E90               	movlw	144
  3708  0024F8  EC62  F01F         	call	_lcdInst
  3709                           
  3710                           ;main.c: 255:         printf("Dist3 = X");
  3711  0024FC  0E93               	movlw	low STR_15
  3712  0024FE  0100               	movlb	0	; () banked
  3713  002500  6FED               	movwf	printf@fmt& (0+255),b
  3714  002502  0EFF               	movlw	high STR_15
  3715  002504  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3716  002506  ECFC  F01E         	call	_printf	;wreg free
  3717  00250A                     l7707:
  3718                           
  3719                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3720  00250A  BE68               	btfsc	_a+7,7,c
  3721  00250C  D020               	goto	l7715
  3722  00250E  5068               	movf	_a+7,w,c
  3723  002510  E104               	bnz	u8280
  3724  002512  0E02               	movlw	2
  3725  002514  5C67               	subwf	_a+6,w,c
  3726  002516  A0D8               	btfss	status,0,c
  3727  002518  D01A               	goto	l7715
  3728  00251A                     u8280:
  3729  00251A  BE68               	btfsc	_a+7,7,c
  3730  00251C  D006               	goto	u8290
  3731  00251E  0E91               	movlw	145
  3732  002520  5C67               	subwf	_a+6,w,c
  3733  002522  0E01               	movlw	1
  3734  002524  5868               	subwfb	_a+7,w,c
  3735  002526  B0D8               	btfsc	status,0,c
  3736  002528  D012               	goto	l7715
  3737  00252A                     u8290:
  3738  00252A  0ED0               	movlw	208
  3739  00252C  EC62  F01F         	call	_lcdInst
  3740                           
  3741                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3742  002530  0EF9               	movlw	low STR_16
  3743  002532  0100               	movlb	0	; () banked
  3744  002534  6FED               	movwf	printf@fmt& (0+255),b
  3745  002536  0EFD               	movlw	high STR_16
  3746  002538  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3747  00253A  C067  F0EF         	movff	_a+6,?_printf+2
  3748  00253E  C068  F0F0         	movff	_a+7,?_printf+3
  3749  002542  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3750  002546  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3751  00254A  ECFC  F01E         	call	_printf	;wreg free
  3752  00254E                     l7715:
  3753                           
  3754                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3755  00254E  BE68               	btfsc	_a+7,7,c
  3756  002550  D00E               	goto	u8310
  3757  002552  5068               	movf	_a+7,w,c
  3758  002554  E104               	bnz	u8300
  3759  002556  0E02               	movlw	2
  3760  002558  5C67               	subwf	_a+6,w,c
  3761  00255A  A0D8               	btfss	status,0,c
  3762  00255C  D008               	goto	u8310
  3763  00255E                     u8300:
  3764  00255E  BE68               	btfsc	_a+7,7,c
  3765  002560  0012               	return	
  3766  002562  0E91               	movlw	145
  3767  002564  5C67               	subwf	_a+6,w,c
  3768  002566  0E01               	movlw	1
  3769  002568  5868               	subwfb	_a+7,w,c
  3770  00256A  A0D8               	btfss	status,0,c
  3771  00256C  0012               	return	
  3772  00256E                     u8310:
  3773  00256E  0ED0               	movlw	208
  3774  002570  EC62  F01F         	call	_lcdInst
  3775                           
  3776                           ;main.c: 264:         printf("Dist4 = X");
  3777  002574  0E9D               	movlw	low STR_17
  3778  002576  0100               	movlb	0	; () banked
  3779  002578  6FED               	movwf	printf@fmt& (0+255),b
  3780  00257A  0EFF               	movlw	high STR_17
  3781  00257C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3782  00257E  ECFC  F01E         	call	_printf	;wreg free
  3783  002582  0012               	return		;funcret
  3784  002584                     __end_of_print_echo:
  3785                           	opt callstack 0
  3786                           
  3787 ;; *************** function _min *****************
  3788 ;; Defined at:
  3789 ;;		line 267 in file "main.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  array           2    0[BANK0 ] PTR int 
  3792 ;;		 -> a(8), 
  3793 ;;  size            2    2[BANK0 ] int 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  i               2    9[BANK0 ] int 
  3796 ;;  minimum         2    7[BANK0 ] int 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2    0[BANK0 ] int 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3806 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;Total ram usage:       11 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    3
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_ultrasonic_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text4
  3821  002EBE                     __ptext4:
  3822                           	opt callstack 0
  3823  002EBE                     _min:
  3824                           	opt callstack 26
  3825                           
  3826                           ;main.c: 268:     int minimum =0 ;
  3827                           
  3828                           ;incstack = 0
  3829  002EBE  0E00               	movlw	0
  3830  002EC0  0100               	movlb	0	; () banked
  3831  002EC2  6F88               	movwf	(min@minimum+1)& (0+255),b
  3832  002EC4  0E00               	movlw	0
  3833  002EC6  6F87               	movwf	min@minimum& (0+255),b
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;main.c: 269:     if (array[0]<=23){
  3837  002EC8  C080  FFD9         	movff	min@array,fsr2l
  3838  002ECC  C081  FFDA         	movff	min@array+1,fsr2h
  3839  002ED0  0E01               	movlw	1
  3840  002ED2  BEDB               	btfsc	plusw2,7,c
  3841  002ED4  D007               	goto	u8320
  3842  002ED6  0E01               	movlw	1
  3843  002ED8  50DB               	movf	plusw2,w,c
  3844  002EDA  E10C               	bnz	l7729
  3845  002EDC  0E18               	movlw	24
  3846  002EDE  5CDE               	subwf	postinc2,w,c
  3847  002EE0  B0D8               	btfsc	status,0,c
  3848  002EE2  D008               	goto	l7729
  3849  002EE4                     u8320:
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;main.c: 270:          minimum = array[0];}
  3853  002EE4  C080  FFD9         	movff	min@array,fsr2l
  3854  002EE8  C081  FFDA         	movff	min@array+1,fsr2h
  3855  002EEC  CFDE F087          	movff	postinc2,min@minimum
  3856  002EF0  CFDD F088          	movff	postdec2,min@minimum+1
  3857  002EF4                     l7729:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3861  002EF4  0E00               	movlw	0
  3862  002EF6  6F8A               	movwf	(min@i+1)& (0+255),b
  3863  002EF8  0E00               	movlw	0
  3864  002EFA  6F89               	movwf	min@i& (0+255),b
  3865  002EFC  D059               	goto	l7745
  3866  002EFE                     l7731:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3870  002EFE  5187               	movf	min@minimum& (0+255),w,b
  3871  002F00  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3872  002F02  B4D8               	btfsc	status,2,c
  3873  002F04  D046               	goto	u8370
  3874                           
  3875                           ; BSR set to: 0
  3876  002F06  90D8               	bcf	status,0,c
  3877  002F08  3589               	rlcf	min@i& (0+255),w,b
  3878  002F0A  6ED9               	movwf	fsr2l,c
  3879  002F0C  358A               	rlcf	(min@i+1)& (0+255),w,b
  3880  002F0E  6EDA               	movwf	fsr2h,c
  3881  002F10  5180               	movf	min@array& (0+255),w,b
  3882  002F12  26D9               	addwf	fsr2l,f,c
  3883  002F14  5181               	movf	(min@array+1)& (0+255),w,b
  3884  002F16  22DA               	addwfc	fsr2h,f,c
  3885  002F18  50DE               	movf	postinc2,w,c
  3886  002F1A  5D87               	subwf	min@minimum& (0+255),w,b
  3887  002F1C  5188               	movf	(min@minimum+1)& (0+255),w,b
  3888  002F1E  0A80               	xorlw	128
  3889  002F20  6F86               	movwf	(??_min+2)& (0+255),b
  3890  002F22  50DE               	movf	postinc2,w,c
  3891  002F24  0A80               	xorlw	128
  3892  002F26  5986               	subwfb	(??_min+2)& (0+255),w,b
  3893  002F28  A0D8               	btfss	status,0,c
  3894  002F2A  D040               	goto	l7743
  3895                           
  3896                           ; BSR set to: 0
  3897  002F2C  90D8               	bcf	status,0,c
  3898  002F2E  3589               	rlcf	min@i& (0+255),w,b
  3899  002F30  6ED9               	movwf	fsr2l,c
  3900  002F32  358A               	rlcf	(min@i+1)& (0+255),w,b
  3901  002F34  6EDA               	movwf	fsr2h,c
  3902  002F36  5180               	movf	min@array& (0+255),w,b
  3903  002F38  26D9               	addwf	fsr2l,f,c
  3904  002F3A  5181               	movf	(min@array+1)& (0+255),w,b
  3905  002F3C  22DA               	addwfc	fsr2h,f,c
  3906  002F3E  50DE               	movf	postinc2,w,c
  3907  002F40  10DE               	iorwf	postinc2,w,c
  3908  002F42  B4D8               	btfsc	status,2,c
  3909  002F44  D033               	goto	l7743
  3910                           
  3911                           ; BSR set to: 0
  3912  002F46  90D8               	bcf	status,0,c
  3913  002F48  3589               	rlcf	min@i& (0+255),w,b
  3914  002F4A  6ED9               	movwf	fsr2l,c
  3915  002F4C  358A               	rlcf	(min@i+1)& (0+255),w,b
  3916  002F4E  6EDA               	movwf	fsr2h,c
  3917  002F50  5180               	movf	min@array& (0+255),w,b
  3918  002F52  26D9               	addwf	fsr2l,f,c
  3919  002F54  5181               	movf	(min@array+1)& (0+255),w,b
  3920  002F56  22DA               	addwfc	fsr2h,f,c
  3921  002F58  0E01               	movlw	1
  3922  002F5A  BEDB               	btfsc	plusw2,7,c
  3923  002F5C  D027               	goto	l7743
  3924  002F5E  0E01               	movlw	1
  3925  002F60  50DB               	movf	plusw2,w,c
  3926  002F62  E104               	bnz	u8360
  3927  002F64  0E0E               	movlw	14
  3928  002F66  5CDE               	subwf	postinc2,w,c
  3929  002F68  A0D8               	btfss	status,0,c
  3930  002F6A  D020               	goto	l7743
  3931  002F6C                     u8360:
  3932                           
  3933                           ; BSR set to: 0
  3934  002F6C  90D8               	bcf	status,0,c
  3935  002F6E  3589               	rlcf	min@i& (0+255),w,b
  3936  002F70  6ED9               	movwf	fsr2l,c
  3937  002F72  358A               	rlcf	(min@i+1)& (0+255),w,b
  3938  002F74  6EDA               	movwf	fsr2h,c
  3939  002F76  5180               	movf	min@array& (0+255),w,b
  3940  002F78  26D9               	addwf	fsr2l,f,c
  3941  002F7A  5181               	movf	(min@array+1)& (0+255),w,b
  3942  002F7C  22DA               	addwfc	fsr2h,f,c
  3943  002F7E  0E01               	movlw	1
  3944  002F80  BEDB               	btfsc	plusw2,7,c
  3945  002F82  D007               	goto	u8370
  3946  002F84  0E01               	movlw	1
  3947  002F86  50DB               	movf	plusw2,w,c
  3948  002F88  E111               	bnz	l7743
  3949  002F8A  0E18               	movlw	24
  3950  002F8C  5CDE               	subwf	postinc2,w,c
  3951  002F8E  B0D8               	btfsc	status,0,c
  3952  002F90  D00D               	goto	l7743
  3953  002F92                     u8370:
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;main.c: 282:             minimum = array[i];
  3957  002F92  90D8               	bcf	status,0,c
  3958  002F94  3589               	rlcf	min@i& (0+255),w,b
  3959  002F96  6ED9               	movwf	fsr2l,c
  3960  002F98  358A               	rlcf	(min@i+1)& (0+255),w,b
  3961  002F9A  6EDA               	movwf	fsr2h,c
  3962  002F9C  5180               	movf	min@array& (0+255),w,b
  3963  002F9E  26D9               	addwf	fsr2l,f,c
  3964  002FA0  5181               	movf	(min@array+1)& (0+255),w,b
  3965  002FA2  22DA               	addwfc	fsr2h,f,c
  3966  002FA4  CFDE F087          	movff	postinc2,min@minimum
  3967  002FA8  CFDD F088          	movff	postdec2,min@minimum+1
  3968  002FAC                     l7743:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;main.c: 287:     }
  3972  002FAC  4B89               	infsnz	min@i& (0+255),f,b
  3973  002FAE  2B8A               	incf	(min@i+1)& (0+255),f,b
  3974  002FB0                     l7745:
  3975                           
  3976                           ; BSR set to: 0
  3977  002FB0  5182               	movf	min@size& (0+255),w,b
  3978  002FB2  5D89               	subwf	min@i& (0+255),w,b
  3979  002FB4  518A               	movf	(min@i+1)& (0+255),w,b
  3980  002FB6  0A80               	xorlw	128
  3981  002FB8  6F84               	movwf	??_min& (0+255),b
  3982  002FBA  5183               	movf	(min@size+1)& (0+255),w,b
  3983  002FBC  0A80               	xorlw	128
  3984  002FBE  5984               	subwfb	??_min& (0+255),w,b
  3985  002FC0  A0D8               	btfss	status,0,c
  3986  002FC2  D79D               	goto	l7731
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;main.c: 288:     return minimum;
  3990  002FC4  C087  F080         	movff	min@minimum,?_min
  3991  002FC8  C088  F081         	movff	min@minimum+1,?_min+1
  3992                           
  3993                           ; BSR set to: 0
  3994  002FCC  0012               	return		;funcret
  3995  002FCE                     __end_of_min:
  3996                           	opt callstack 0
  3997                           
  3998 ;; *************** function _start *****************
  3999 ;; Defined at:
  4000 ;;		line 699 in file "main.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;Total ram usage:        0 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    5
  4021 ;; This function calls:
  4022 ;;		_I2C_Master_Init
  4023 ;;		_I2C_Master_Start
  4024 ;;		_I2C_Master_Stop
  4025 ;;		_I2C_Master_Write
  4026 ;; This function is called by:
  4027 ;;		_main
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text5
  4032  003AE8                     __ptext5:
  4033                           	opt callstack 0
  4034  003AE8                     _start:
  4035                           	opt callstack 25
  4036                           
  4037                           ;main.c: 700:     I2C_Master_Init(100000);
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;incstack = 0
  4041  003AE8  0EA0               	movlw	160
  4042  003AEA  0100               	movlb	0	; () banked
  4043  003AEC  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  4044  003AEE  0E86               	movlw	134
  4045  003AF0  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  4046  003AF2  0E01               	movlw	1
  4047  003AF4  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  4048  003AF6  0E00               	movlw	0
  4049  003AF8  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  4050  003AFA  ECEE  F01C         	call	_I2C_Master_Init	;wreg free
  4051                           
  4052                           ;main.c: 701:     I2C_Master_Start();
  4053  003AFE  EC73  F01F         	call	_I2C_Master_Start	;wreg free
  4054                           
  4055                           ;main.c: 702:     I2C_Master_Write(0b00010000);
  4056  003B02  0E00               	movlw	0
  4057  003B04  0100               	movlb	0	; () banked
  4058  003B06  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4059  003B08  0E10               	movlw	16
  4060  003B0A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4061  003B0C  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  4062                           
  4063                           ;main.c: 703:     I2C_Master_Stop();
  4064  003B10  EC6F  F01F         	call	_I2C_Master_Stop	;wreg free
  4065                           
  4066                           ;main.c: 705:     I2C_Master_Start();
  4067  003B14  EC73  F01F         	call	_I2C_Master_Start	;wreg free
  4068                           
  4069                           ;main.c: 706:     I2C_Master_Write(0b00010000);
  4070  003B18  0E00               	movlw	0
  4071  003B1A  0100               	movlb	0	; () banked
  4072  003B1C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4073  003B1E  0E10               	movlw	16
  4074  003B20  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4075  003B22  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  4076                           
  4077                           ;main.c: 707:     I2C_Master_Write('2');
  4078  003B26  0E00               	movlw	0
  4079  003B28  0100               	movlb	0	; () banked
  4080  003B2A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4081  003B2C  0E32               	movlw	50
  4082  003B2E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4083  003B30  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  4084                           
  4085                           ;main.c: 708:     I2C_Master_Stop();
  4086  003B34  EC6F  F01F         	call	_I2C_Master_Stop	;wreg free
  4087  003B38  0012               	return		;funcret
  4088  003B3A                     __end_of_start:
  4089                           	opt callstack 0
  4090                           
  4091 ;; *************** function _number_deploy *****************
  4092 ;; Defined at:
  4093 ;;		line 416 in file "main.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  avg_dist        2  123[BANK0 ] int 
  4096 ;;  poles_detect    2  125[BANK0 ] int 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  t_count         2    6[BANK1 ] int 
  4099 ;;  tires_detect    2    4[BANK1 ] int 
  4100 ;;  tires_t         2    2[BANK1 ] int 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  2  123[BANK0 ] int 
  4103 ;; Registers used:
  4104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4110 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;Total ram usage:       12 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:   14
  4117 ;; This function calls:
  4118 ;;		___awdiv
  4119 ;;		_lcdInst
  4120 ;;		_printf
  4121 ;; This function is called by:
  4122 ;;		_main
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text6
  4127  002176                     __ptext6:
  4128                           	opt callstack 0
  4129  002176                     _number_deploy:
  4130                           	opt callstack 16
  4131                           
  4132                           ;main.c: 417:     int tires_t=0;
  4133                           
  4134                           ;incstack = 0
  4135  002176  0E00               	movlw	0
  4136  002178  0101               	movlb	1	; () banked
  4137  00217A  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4138  00217C  0E00               	movlw	0
  4139  00217E  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4140                           
  4141                           ;main.c: 418:     int tires_detected=0;
  4142  002180  0E00               	movlw	0
  4143  002182  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4144  002184  0E00               	movlw	0
  4145  002186  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4146                           
  4147                           ;main.c: 419:     int t_count = 0;
  4148  002188  0E00               	movlw	0
  4149  00218A  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4150  00218C  0E00               	movlw	0
  4151  00218E  6F06               	movwf	number_deploy@t_count& (0+255),b
  4152                           
  4153                           ;main.c: 422:     while (t_count<3){
  4154  002190  D0F5               	goto	l8053
  4155  002192                     l7997:
  4156                           
  4157                           ; BSR set to: 1
  4158                           ;main.c: 423:   if (poles_detected != 0){
  4159  002192  0100               	movlb	0	; () banked
  4160  002194  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4161  002196  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4162  002198  B4D8               	btfsc	status,2,c
  4163  00219A  D031               	goto	l8007
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;main.c: 424:    if ((avg_dist/1000)<30){
  4167  00219C  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4168  0021A0  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4169  0021A4  0E03               	movlw	3
  4170  0021A6  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4171  0021A8  0EE8               	movlw	232
  4172  0021AA  6F82               	movwf	___awdiv@divisor& (0+255),b
  4173  0021AC  EC84  F01B         	call	___awdiv	;wreg free
  4174  0021B0  0100               	movlb	0	; () banked
  4175  0021B2  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4176  0021B4  D006               	goto	u8580
  4177  0021B6  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4178  0021B8  E109               	bnz	l8003
  4179  0021BA  0E1E               	movlw	30
  4180  0021BC  5D80               	subwf	?___awdiv& (0+255),w,b
  4181  0021BE  B0D8               	btfsc	status,0,c
  4182  0021C0  D005               	goto	l8003
  4183  0021C2                     u8580:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;main.c: 426:     tires_t = 1;
  4187  0021C2  0E00               	movlw	0
  4188  0021C4  0101               	movlb	1	; () banked
  4189  0021C6  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4190  0021C8  0E01               	movlw	1
  4191  0021CA  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4192  0021CC                     l8003:
  4193                           
  4194                           ;main.c: 428:    if ((avg_dist/1000)>30){
  4195  0021CC  C0FB  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4196  0021D0  C0FC  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4197  0021D4  0E03               	movlw	3
  4198  0021D6  0100               	movlb	0	; () banked
  4199  0021D8  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4200  0021DA  0EE8               	movlw	232
  4201  0021DC  6F82               	movwf	___awdiv@divisor& (0+255),b
  4202  0021DE  EC84  F01B         	call	___awdiv	;wreg free
  4203  0021E2  0100               	movlb	0	; () banked
  4204  0021E4  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4205  0021E6  D00B               	goto	l8007
  4206  0021E8  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4207  0021EA  E104               	bnz	u8590
  4208  0021EC  0E1F               	movlw	31
  4209  0021EE  5D80               	subwf	?___awdiv& (0+255),w,b
  4210  0021F0  A0D8               	btfss	status,0,c
  4211  0021F2  D005               	goto	l8007
  4212  0021F4                     u8590:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;main.c: 429:     tires_t = 2;
  4216  0021F4  0E00               	movlw	0
  4217  0021F6  0101               	movlb	1	; () banked
  4218  0021F8  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4219  0021FA  0E02               	movlw	2
  4220  0021FC  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4221  0021FE                     l8007:
  4222                           
  4223                           ;main.c: 433:   if (poles_detected == 0){
  4224  0021FE  0100               	movlb	0	; () banked
  4225  002200  51FD               	movf	number_deploy@poles_detected& (0+255),w,b
  4226  002202  11FE               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4227  002204  A4D8               	btfss	status,2,c
  4228  002206  D005               	goto	l8011
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;main.c: 434:    tires_t = 2;
  4232  002208  0E00               	movlw	0
  4233  00220A  0101               	movlb	1	; () banked
  4234  00220C  6F03               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4235  00220E  0E02               	movlw	2
  4236  002210  6F02               	movwf	number_deploy@tires_t& (0+255),b
  4237  002212                     l8011:
  4238                           
  4239                           ;main.c: 437:   if ((a[0]>=2 && a[0] <= 15)){
  4240  002212  BE62               	btfsc	_a+1,7,c
  4241  002214  D028               	goto	l8023
  4242  002216  5062               	movf	_a+1,w,c
  4243  002218  E104               	bnz	u8610
  4244  00221A  0E02               	movlw	2
  4245  00221C  5C61               	subwf	_a,w,c
  4246  00221E  A0D8               	btfss	status,0,c
  4247  002220  D022               	goto	l8023
  4248  002222                     u8610:
  4249  002222  BE62               	btfsc	_a+1,7,c
  4250  002224  D006               	goto	u8620
  4251  002226  5062               	movf	_a+1,w,c
  4252  002228  E11E               	bnz	l8023
  4253  00222A  0E10               	movlw	16
  4254  00222C  5C61               	subwf	_a,w,c
  4255  00222E  B0D8               	btfsc	status,0,c
  4256  002230  D01A               	goto	l8023
  4257  002232                     u8620:
  4258                           
  4259                           ;main.c: 439:             if ((a[1]>=2 && a[1] <= 15)){
  4260  002232  BE64               	btfsc	_a+3,7,c
  4261  002234  D013               	goto	l8021
  4262  002236  5064               	movf	_a+3,w,c
  4263  002238  E104               	bnz	u8630
  4264  00223A  0E02               	movlw	2
  4265  00223C  5C63               	subwf	_a+2,w,c
  4266  00223E  A0D8               	btfss	status,0,c
  4267  002240  D00D               	goto	l8021
  4268  002242                     u8630:
  4269  002242  BE64               	btfsc	_a+3,7,c
  4270  002244  D006               	goto	u8640
  4271  002246  5064               	movf	_a+3,w,c
  4272  002248  E109               	bnz	l8021
  4273  00224A  0E10               	movlw	16
  4274  00224C  5C63               	subwf	_a+2,w,c
  4275  00224E  B0D8               	btfsc	status,0,c
  4276  002250  D005               	goto	l8021
  4277  002252                     u8640:
  4278                           
  4279                           ;main.c: 441:                 tires_detected = 1;
  4280  002252  0E00               	movlw	0
  4281  002254  0101               	movlb	1	; () banked
  4282  002256  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4283  002258  0E01               	movlw	1
  4284  00225A  D004               	goto	L2
  4285  00225C                     l8021:
  4286                           
  4287                           ;main.c: 444:                 tires_detected = 0;
  4288  00225C  0E00               	movlw	0
  4289  00225E  0101               	movlb	1	; () banked
  4290  002260  6F05               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4291  002262  0E00               	movlw	0
  4292  002264                     L2:
  4293  002264  6F04               	movwf	number_deploy@tires_detected& (0+255),b
  4294  002266                     l8023:
  4295                           
  4296                           ;main.c: 447:         if ((tires_detected==1)){
  4297  002266  0101               	movlb	1	; () banked
  4298  002268  0504               	decf	number_deploy@tires_detected& (0+255),w,b
  4299  00226A  1105               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4300  00226C  B4D8               	btfsc	status,2,c
  4301                           
  4302                           ; BSR set to: 1
  4303                           ;main.c: 448:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4304  00226E  BE66               	btfsc	_a+5,7,c
  4305  002270  D020               	goto	l8035
  4306  002272  5066               	movf	_a+5,w,c
  4307  002274  E104               	bnz	u8660
  4308  002276  0E02               	movlw	2
  4309  002278  5C65               	subwf	_a+4,w,c
  4310  00227A  A0D8               	btfss	status,0,c
  4311  00227C  D01A               	goto	l8035
  4312  00227E                     u8660:
  4313                           
  4314                           ; BSR set to: 1
  4315  00227E  BE66               	btfsc	_a+5,7,c
  4316  002280  D006               	goto	u8670
  4317  002282  5066               	movf	_a+5,w,c
  4318  002284  E116               	bnz	l8035
  4319  002286  0E10               	movlw	16
  4320  002288  5C65               	subwf	_a+4,w,c
  4321  00228A  B0D8               	btfsc	status,0,c
  4322  00228C  D012               	goto	l8035
  4323  00228E                     u8670:
  4324                           
  4325                           ; BSR set to: 1
  4326  00228E  BE68               	btfsc	_a+7,7,c
  4327  002290  D010               	goto	l8035
  4328  002292  5068               	movf	_a+7,w,c
  4329  002294  E104               	bnz	u8680
  4330  002296  0E02               	movlw	2
  4331  002298  5C67               	subwf	_a+6,w,c
  4332  00229A  A0D8               	btfss	status,0,c
  4333  00229C  D00A               	goto	l8035
  4334  00229E                     u8680:
  4335                           
  4336                           ; BSR set to: 1
  4337  00229E  BE68               	btfsc	_a+7,7,c
  4338  0022A0  D006               	goto	u8690
  4339  0022A2  5068               	movf	_a+7,w,c
  4340  0022A4  E106               	bnz	l8035
  4341  0022A6  0E10               	movlw	16
  4342  0022A8  5C67               	subwf	_a+6,w,c
  4343  0022AA  B0D8               	btfsc	status,0,c
  4344  0022AC  D002               	goto	l8035
  4345  0022AE                     u8690:
  4346                           
  4347                           ; BSR set to: 1
  4348                           ;main.c: 449:                 tires_detected++;
  4349  0022AE  4B04               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4350  0022B0  2B05               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4351  0022B2                     l8035:
  4352                           
  4353                           ; BSR set to: 1
  4354                           ;main.c: 453:         t_count = tires_t - tires_detected;
  4355  0022B2  5104               	movf	number_deploy@tires_detected& (0+255),w,b
  4356  0022B4  5D02               	subwf	number_deploy@tires_t& (0+255),w,b
  4357  0022B6  6F06               	movwf	number_deploy@t_count& (0+255),b
  4358  0022B8  5105               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4359  0022BA  5903               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4360  0022BC  6F07               	movwf	(number_deploy@t_count+1)& (0+255),b
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;main.c: 454:         Pole[poles_detected].tires_deployed = t_count;
  4364  0022BE  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4365  0022C2  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4366  0022C6  90D8               	bcf	status,0,c
  4367  0022C8  3700               	rlcf	??_number_deploy& (0+255),f,b
  4368  0022CA  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4369  0022CC  90D8               	bcf	status,0,c
  4370  0022CE  3700               	rlcf	??_number_deploy& (0+255),f,b
  4371  0022D0  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4372  0022D2  90D8               	bcf	status,0,c
  4373  0022D4  3700               	rlcf	??_number_deploy& (0+255),f,b
  4374  0022D6  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4375  0022D8  0E00               	movlw	low _Pole
  4376  0022DA  2500               	addwf	??_number_deploy& (0+255),w,b
  4377  0022DC  6ED9               	movwf	fsr2l,c
  4378  0022DE  0E02               	movlw	high _Pole
  4379  0022E0  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4380  0022E2  6EDA               	movwf	fsr2h,c
  4381  0022E4  C106  FFDE         	movff	number_deploy@t_count,postinc2
  4382  0022E8  C107  FFDD         	movff	number_deploy@t_count+1,postdec2
  4383                           
  4384                           ; BSR set to: 1
  4385                           ;main.c: 455:         Pole[poles_detected].tires_final = tires_t;
  4386  0022EC  C0FD  F100         	movff	number_deploy@poles_detected,??_number_deploy
  4387  0022F0  C0FE  F101         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4388  0022F4  90D8               	bcf	status,0,c
  4389  0022F6  3700               	rlcf	??_number_deploy& (0+255),f,b
  4390  0022F8  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4391  0022FA  90D8               	bcf	status,0,c
  4392  0022FC  3700               	rlcf	??_number_deploy& (0+255),f,b
  4393  0022FE  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4394  002300  90D8               	bcf	status,0,c
  4395  002302  3700               	rlcf	??_number_deploy& (0+255),f,b
  4396  002304  3701               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4397  002306  0E02               	movlw	low (_Pole+2)
  4398  002308  2500               	addwf	??_number_deploy& (0+255),w,b
  4399  00230A  6ED9               	movwf	fsr2l,c
  4400  00230C  0E02               	movlw	high (_Pole+2)
  4401  00230E  2101               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4402  002310  6EDA               	movwf	fsr2h,c
  4403  002312  C102  FFDE         	movff	number_deploy@tires_t,postinc2
  4404  002316  C103  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4405                           
  4406                           ; BSR set to: 1
  4407                           ;main.c: 456:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4408  00231A  0E01               	movlw	1
  4409  00231C  EC62  F01F         	call	_lcdInst
  4410  002320  0E11               	movlw	17
  4411  002322  0101               	movlb	1	; () banked
  4412  002324  6F00               	movwf	??_number_deploy& (0+255),b
  4413  002326  0E3A               	movlw	58
  4414  002328                     u9517:
  4415  002328  2EE8               	decfsz	wreg,f,c
  4416  00232A  D7FE               	bra	u9517
  4417  00232C  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4418  00232E  D7FC               	bra	u9517
  4419  002330  F000               	nop	
  4420                           
  4421                           ;main.c: 457:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4422  002332  0E3D               	movlw	low STR_22
  4423  002334  0100               	movlb	0	; () banked
  4424  002336  6FED               	movwf	printf@fmt& (0+255),b
  4425  002338  0EFE               	movlw	high STR_22
  4426  00233A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4427  00233C  C104  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4428  002340  C105  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4429  002344  C106  F0F1         	movff	number_deploy@t_count,?_printf+4
  4430  002348  C107  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4431  00234C  ECFC  F01E         	call	_printf	;wreg free
  4432                           
  4433                           ;main.c: 458:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4434  002350  0E0D               	movlw	13
  4435  002352  0101               	movlb	1	; () banked
  4436  002354  6F01               	movwf	(??_number_deploy+1)& (0+255),b
  4437  002356  0EAF               	movlw	175
  4438  002358  6F00               	movwf	??_number_deploy& (0+255),b
  4439  00235A  0EB6               	movlw	182
  4440  00235C                     u9527:
  4441  00235C  2EE8               	decfsz	wreg,f,c
  4442  00235E  D7FE               	bra	u9527
  4443  002360  2F00               	decfsz	??_number_deploy& (0+255),f,b
  4444  002362  D7FC               	bra	u9527
  4445  002364  2F01               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4446  002366  D7FA               	bra	u9527
  4447  002368  F000               	nop	
  4448                           
  4449                           ;main.c: 460:         if (t_count<=2){
  4450  00236A  0101               	movlb	1	; () banked
  4451  00236C  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4452  00236E  D00E               	goto	u8710
  4453  002370  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4454  002372  E104               	bnz	l8053
  4455  002374  0E03               	movlw	3
  4456  002376  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4457  002378  A0D8               	btfss	status,0,c
  4458  00237A  D008               	goto	u8710
  4459  00237C                     l8053:
  4460                           
  4461                           ; BSR set to: 1
  4462                           ;main.c: 422:     while (t_count<3){
  4463  00237C  BF07               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4464  00237E  D709               	goto	l7997
  4465  002380  5107               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4466  002382  E104               	bnz	u8710
  4467  002384  0E03               	movlw	3
  4468  002386  5D06               	subwf	number_deploy@t_count& (0+255),w,b
  4469  002388  A0D8               	btfss	status,0,c
  4470  00238A  D703               	goto	l7997
  4471  00238C                     u8710:
  4472                           
  4473                           ; BSR set to: 1
  4474                           ;main.c: 468:     return (int) t_count;
  4475  00238C  C106  F0FB         	movff	number_deploy@t_count,?_number_deploy
  4476  002390  C107  F0FC         	movff	number_deploy@t_count+1,?_number_deploy+1
  4477                           
  4478                           ; BSR set to: 1
  4479  002394  0012               	return		;funcret
  4480  002396                     __end_of_number_deploy:
  4481                           	opt callstack 0
  4482                           
  4483 ;; *************** function ___awdiv *****************
  4484 ;; Defined at:
  4485 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  dividend        2    0[BANK0 ] int 
  4488 ;;  divisor         2    2[BANK0 ] int 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  quotient        2    6[BANK0 ] int 
  4491 ;;  sign            1    5[BANK0 ] unsigned char 
  4492 ;;  counter         1    4[BANK0 ] unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  2    0[BANK0 ] int 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;Total ram usage:        8 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    3
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_number_deploy
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text7
  4517  003708                     __ptext7:
  4518                           	opt callstack 0
  4519  003708                     ___awdiv:
  4520                           	opt callstack 26
  4521                           
  4522                           ; BSR set to: 1
  4523                           ;incstack = 0
  4524  003708  0E00               	movlw	0
  4525  00370A  0100               	movlb	0	; () banked
  4526  00370C  6F85               	movwf	___awdiv@sign& (0+255),b
  4527                           
  4528                           ; BSR set to: 0
  4529  00370E  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4530  003710  D006               	goto	l7755
  4531                           
  4532                           ; BSR set to: 0
  4533  003712  6D82               	negf	___awdiv@divisor& (0+255),b
  4534  003714  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4535  003716  B0D8               	btfsc	status,0,c
  4536  003718  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4537                           
  4538                           ; BSR set to: 0
  4539  00371A  0E01               	movlw	1
  4540  00371C  6F85               	movwf	___awdiv@sign& (0+255),b
  4541  00371E                     l7755:
  4542                           
  4543                           ; BSR set to: 0
  4544  00371E  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4545  003720  D006               	goto	l7761
  4546                           
  4547                           ; BSR set to: 0
  4548  003722  6D80               	negf	___awdiv@dividend& (0+255),b
  4549  003724  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4550  003726  B0D8               	btfsc	status,0,c
  4551  003728  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4552                           
  4553                           ; BSR set to: 0
  4554  00372A  0E01               	movlw	1
  4555  00372C  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4556  00372E                     l7761:
  4557                           
  4558                           ; BSR set to: 0
  4559  00372E  0E00               	movlw	0
  4560  003730  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4561  003732  0E00               	movlw	0
  4562  003734  6F86               	movwf	___awdiv@quotient& (0+255),b
  4563                           
  4564                           ; BSR set to: 0
  4565  003736  5182               	movf	___awdiv@divisor& (0+255),w,b
  4566  003738  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4567  00373A  B4D8               	btfsc	status,2,c
  4568  00373C  D01C               	goto	l7783
  4569                           
  4570                           ; BSR set to: 0
  4571  00373E  0E01               	movlw	1
  4572  003740  6F84               	movwf	___awdiv@counter& (0+255),b
  4573  003742  D004               	goto	l7769
  4574  003744                     l7767:
  4575                           
  4576                           ; BSR set to: 0
  4577  003744  90D8               	bcf	status,0,c
  4578  003746  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4579  003748  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4580  00374A  2B84               	incf	___awdiv@counter& (0+255),f,b
  4581  00374C                     l7769:
  4582                           
  4583                           ; BSR set to: 0
  4584  00374C  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4585  00374E  D7FA               	goto	l7767
  4586  003750                     u8420:
  4587                           
  4588                           ; BSR set to: 0
  4589  003750  90D8               	bcf	status,0,c
  4590  003752  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4591  003754  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4592                           
  4593                           ; BSR set to: 0
  4594  003756  5182               	movf	___awdiv@divisor& (0+255),w,b
  4595  003758  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4596  00375A  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4597  00375C  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4598  00375E  A0D8               	btfss	status,0,c
  4599  003760  D005               	goto	l7779
  4600                           
  4601                           ; BSR set to: 0
  4602  003762  5182               	movf	___awdiv@divisor& (0+255),w,b
  4603  003764  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4604  003766  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4605  003768  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4606                           
  4607                           ; BSR set to: 0
  4608  00376A  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4609  00376C                     l7779:
  4610                           
  4611                           ; BSR set to: 0
  4612  00376C  90D8               	bcf	status,0,c
  4613  00376E  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4614  003770  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4615                           
  4616                           ; BSR set to: 0
  4617  003772  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4618  003774  D7ED               	goto	u8420
  4619  003776                     l7783:
  4620                           
  4621                           ; BSR set to: 0
  4622  003776  5185               	movf	___awdiv@sign& (0+255),w,b
  4623  003778  B4D8               	btfsc	status,2,c
  4624  00377A  D004               	goto	l7787
  4625                           
  4626                           ; BSR set to: 0
  4627  00377C  6D86               	negf	___awdiv@quotient& (0+255),b
  4628  00377E  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4629  003780  B0D8               	btfsc	status,0,c
  4630  003782  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4631  003784                     l7787:
  4632                           
  4633                           ; BSR set to: 0
  4634  003784  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4635  003788  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4636                           
  4637                           ; BSR set to: 0
  4638  00378C  0012               	return		;funcret
  4639  00378E                     __end_of___awdiv:
  4640                           	opt callstack 0
  4641                           
  4642 ;; *************** function _brake *****************
  4643 ;; Defined at:
  4644 ;;		line 668 in file "main.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;Total ram usage:        2 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:   14
  4665 ;; This function calls:
  4666 ;;		_I2C_Master_Read
  4667 ;;		_I2C_Master_Start
  4668 ;;		_I2C_Master_Stop
  4669 ;;		_I2C_Master_Write
  4670 ;;		_lcdInst
  4671 ;;		_printf
  4672 ;; This function is called by:
  4673 ;;		_main
  4674 ;;		_sense_tires
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text8
  4679  00351C                     __ptext8:
  4680                           	opt callstack 0
  4681  00351C                     _brake:
  4682                           	opt callstack 16
  4683                           
  4684                           ;main.c: 669:     I2C_Master_Start();
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;incstack = 0
  4688  00351C  EC73  F01F         	call	_I2C_Master_Start	;wreg free
  4689                           
  4690                           ;main.c: 670:     I2C_Master_Write(0b00010000);
  4691  003520  0E00               	movlw	0
  4692  003522  0100               	movlb	0	; () banked
  4693  003524  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4694  003526  0E10               	movlw	16
  4695  003528  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4696  00352A  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  4697                           
  4698                           ;main.c: 671:     I2C_Master_Write('9');
  4699  00352E  0E00               	movlw	0
  4700  003530  0100               	movlb	0	; () banked
  4701  003532  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4702  003534  0E39               	movlw	57
  4703  003536  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4704  003538  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  4705                           
  4706                           ;main.c: 672:     I2C_Master_Stop();
  4707  00353C  EC6F  F01F         	call	_I2C_Master_Stop	;wreg free
  4708                           
  4709                           ;main.c: 673:     I2C_Master_Start();
  4710  003540  EC73  F01F         	call	_I2C_Master_Start	;wreg free
  4711                           
  4712                           ;main.c: 674:     I2C_Master_Write(0b00010001);
  4713  003544  0E00               	movlw	0
  4714  003546  0100               	movlb	0	; () banked
  4715  003548  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4716  00354A  0E11               	movlw	17
  4717  00354C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4718  00354E  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  4719                           
  4720                           ;main.c: 675:     avg_dist = I2C_Master_Read(1);
  4721  003552  0E01               	movlw	1
  4722  003554  ECE7  F01E         	call	_I2C_Master_Read
  4723  003558  0100               	movlb	0	; () banked
  4724  00355A  6FFB               	movwf	??_brake& (0+255),b
  4725  00355C  51FB               	movf	??_brake& (0+255),w,b
  4726  00355E  6E44               	movwf	_avg_dist,c	;volatile
  4727  003560  6A45               	clrf	_avg_dist+1,c	;volatile
  4728  003562  6A46               	clrf	_avg_dist+2,c	;volatile
  4729  003564  6A47               	clrf	_avg_dist+3,c	;volatile
  4730                           
  4731                           ;main.c: 676:     I2C_Master_Stop();
  4732  003566  EC6F  F01F         	call	_I2C_Master_Stop	;wreg free
  4733                           
  4734                           ;main.c: 677:     if(avg_dist){
  4735  00356A  5044               	movf	_avg_dist,w,c	;volatile
  4736  00356C  1045               	iorwf	_avg_dist+1,w,c	;volatile
  4737  00356E  1046               	iorwf	_avg_dist+2,w,c	;volatile
  4738  003570  1047               	iorwf	_avg_dist+3,w,c	;volatile
  4739  003572  B4D8               	btfsc	status,2,c
  4740  003574  0012               	return	
  4741                           
  4742                           ;main.c: 680:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4743  003576  0E01               	movlw	1
  4744  003578  EC62  F01F         	call	_lcdInst
  4745  00357C  0E11               	movlw	17
  4746  00357E  0100               	movlb	0	; () banked
  4747  003580  6FFB               	movwf	??_brake& (0+255),b
  4748  003582  0E3A               	movlw	58
  4749  003584                     u9537:
  4750  003584  2EE8               	decfsz	wreg,f,c
  4751  003586  D7FE               	bra	u9537
  4752  003588  2FFB               	decfsz	??_brake& (0+255),f,b
  4753  00358A  D7FC               	bra	u9537
  4754  00358C  F000               	nop	
  4755                           
  4756                           ;main.c: 688:         printf("%d",avg_dist);
  4757  00358E  0EC3               	movlw	low (STR_59+11)
  4758  003590  0100               	movlb	0	; () banked
  4759  003592  6FED               	movwf	printf@fmt& (0+255),b
  4760  003594  0EFE               	movlw	high (STR_59+11)
  4761  003596  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4762  003598  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  4763  00359C  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  4764  0035A0  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  4765  0035A4  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  4766  0035A8  ECFC  F01E         	call	_printf	;wreg free
  4767                           
  4768                           ;main.c: 693:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4769  0035AC  0E0D               	movlw	13
  4770  0035AE  0100               	movlb	0	; () banked
  4771  0035B0  6FFC               	movwf	(??_brake+1)& (0+255),b
  4772  0035B2  0EAF               	movlw	175
  4773  0035B4  6FFB               	movwf	??_brake& (0+255),b
  4774  0035B6  0EB6               	movlw	182
  4775  0035B8                     u9547:
  4776  0035B8  2EE8               	decfsz	wreg,f,c
  4777  0035BA  D7FE               	bra	u9547
  4778  0035BC  2FFB               	decfsz	??_brake& (0+255),f,b
  4779  0035BE  D7FC               	bra	u9547
  4780  0035C0  2FFC               	decfsz	(??_brake+1)& (0+255),f,b
  4781  0035C2  D7FA               	bra	u9547
  4782  0035C4  F000               	nop	
  4783                           
  4784                           ;main.c: 695:     send = 1;
  4785  0035C6  0E01               	movlw	1
  4786  0035C8  6E6D               	movwf	_send,c
  4787  0035CA  0012               	return		;funcret
  4788  0035CC                     __end_of_brake:
  4789                           	opt callstack 0
  4790                           
  4791 ;; *************** function _backwards *****************
  4792 ;; Defined at:
  4793 ;;		line 710 in file "main.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, status,0, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    5
  4814 ;; This function calls:
  4815 ;;		_I2C_Master_Start
  4816 ;;		_I2C_Master_Stop
  4817 ;;		_I2C_Master_Write
  4818 ;; This function is called by:
  4819 ;;		_main
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text9
  4824  003E48                     __ptext9:
  4825                           	opt callstack 0
  4826  003E48                     _backwards:
  4827                           	opt callstack 25
  4828                           
  4829                           ;main.c: 711:     I2C_Master_Start();
  4830                           
  4831                           ;incstack = 0
  4832  003E48  EC73  F01F         	call	_I2C_Master_Start	;wreg free
  4833                           
  4834                           ;main.c: 712:     I2C_Master_Write(0b00010000);
  4835  003E4C  0E00               	movlw	0
  4836  003E4E  0100               	movlb	0	; () banked
  4837  003E50  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4838  003E52  0E10               	movlw	16
  4839  003E54  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4840  003E56  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  4841                           
  4842                           ;main.c: 713:     I2C_Master_Write('5');
  4843  003E5A  0E00               	movlw	0
  4844  003E5C  0100               	movlb	0	; () banked
  4845  003E5E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4846  003E60  0E35               	movlw	53
  4847  003E62  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4848  003E64  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  4849                           
  4850                           ;main.c: 714:     I2C_Master_Stop();
  4851  003E68  EC6F  F01F         	call	_I2C_Master_Stop	;wreg free
  4852  003E6C  0012               	return		;funcret
  4853  003E6E                     __end_of_backwards:
  4854                           	opt callstack 0
  4855                           
  4856 ;; *************** function _actuators_main *****************
  4857 ;; Defined at:
  4858 ;;		line 3 in file "actuators_main.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  stack           2   18[BANK1 ] int 
  4861 ;;  steps2_adj      2   20[BANK1 ] int 
  4862 ;;  t_dep           2   22[BANK1 ] int 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  act_cnt         2   26[BANK1 ] int 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4874 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;Total ram usage:       10 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:   16
  4881 ;; This function calls:
  4882 ;;		_initLCD
  4883 ;;		_lcdInst
  4884 ;;		_printf
  4885 ;;		_servo
  4886 ;;		_stepper
  4887 ;;		_stepper2
  4888 ;;		_stepper2_back
  4889 ;;		_system_init
  4890 ;; This function is called by:
  4891 ;;		_main
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text10
  4896  002730                     __ptext10:
  4897                           	opt callstack 0
  4898  002730                     _actuators_main:
  4899                           	opt callstack 14
  4900                           
  4901                           ;actuators_main.c: 4:     int act_cnt = 0;
  4902                           
  4903                           ;incstack = 0
  4904  002730  0E00               	movlw	0
  4905  002732  0101               	movlb	1	; () banked
  4906  002734  6F1B               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4907  002736  0E00               	movlw	0
  4908  002738  6F1A               	movwf	actuators_main@act_cnt& (0+255),b
  4909                           
  4910                           ; BSR set to: 1
  4911                           ;actuators_main.c: 5:     system_init();
  4912  00273A  EC55  F01E         	call	_system_init	;wreg free
  4913                           
  4914                           ;actuators_main.c: 6:     initLCD();
  4915  00273E  EC4B  F01C         	call	_initLCD	;wreg free
  4916                           
  4917                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4918  002742  0E01               	movlw	1
  4919  002744  EC62  F01F         	call	_lcdInst
  4920  002748  0E11               	movlw	17
  4921  00274A  0101               	movlb	1	; () banked
  4922  00274C  6F18               	movwf	??_actuators_main& (0+255),b
  4923  00274E  0E3A               	movlw	58
  4924  002750                     u9557:
  4925  002750  2EE8               	decfsz	wreg,f,c
  4926  002752  D7FE               	bra	u9557
  4927  002754  2F18               	decfsz	??_actuators_main& (0+255),f,b
  4928  002756  D7FC               	bra	u9557
  4929  002758  F000               	nop	
  4930                           
  4931                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4932  00275A  0ED9               	movlw	low STR_1
  4933  00275C  0100               	movlb	0	; () banked
  4934  00275E  6FED               	movwf	printf@fmt& (0+255),b
  4935  002760  0EFF               	movlw	high STR_1
  4936  002762  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4937  002764  0E00               	movlw	0
  4938  002766  6FF0               	movwf	(?_printf+3)& (0+255),b
  4939  002768  0E00               	movlw	0
  4940  00276A  6FEF               	movwf	(?_printf+2)& (0+255),b
  4941  00276C  ECFC  F01E         	call	_printf	;wreg free
  4942                           
  4943                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4944  002770  0E03               	movlw	3
  4945  002772  0101               	movlb	1	; () banked
  4946  002774  6F19               	movwf	(??_actuators_main+1)& (0+255),b
  4947  002776  0E8A               	movlw	138
  4948  002778  6F18               	movwf	??_actuators_main& (0+255),b
  4949  00277A  0E55               	movlw	85
  4950  00277C                     u9567:
  4951  00277C  2EE8               	decfsz	wreg,f,c
  4952  00277E  D7FE               	bra	u9567
  4953  002780  2F18               	decfsz	??_actuators_main& (0+255),f,b
  4954  002782  D7FC               	bra	u9567
  4955  002784  2F19               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4956  002786  D7FA               	bra	u9567
  4957  002788  D000               	nop2	
  4958  00278A                     l7821:
  4959                           
  4960                           ;actuators_main.c: 11:     if (act_cnt==0){
  4961  00278A  0101               	movlb	1	; () banked
  4962  00278C  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  4963  00278E  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4964  002790  A4D8               	btfss	status,2,c
  4965  002792  D071               	goto	l7901
  4966                           
  4967                           ; BSR set to: 1
  4968                           ;actuators_main.c: 15:         stepper(stack, t_dep);
  4969  002794  C112  F100         	movff	actuators_main@stack,stepper@stack
  4970  002798  C113  F101         	movff	actuators_main@stack+1,stepper@stack+1
  4971  00279C  C116  F102         	movff	actuators_main@t_dep,stepper@t_dep
  4972  0027A0  C117  F103         	movff	actuators_main@t_dep+1,stepper@t_dep+1
  4973  0027A4  EC40  F014         	call	_stepper	;wreg free
  4974                           
  4975                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4976  0027A8  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4977  0027AC  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4978  0027B0  0E00               	movlw	0
  4979  0027B2  EC68  F018         	call	_stepper2
  4980                           
  4981                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4982  0027B6  C114  F100         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4983  0027BA  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4984  0027BE  0E01               	movlw	1
  4985  0027C0  ECE6  F01A         	call	_stepper2_back
  4986                           
  4987                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4988  0027C4  0E00               	movlw	0
  4989  0027C6  6E89               	movwf	3977,c	;volatile
  4990                           
  4991                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4992  0027C8  908B               	bcf	3979,0,c	;volatile
  4993                           
  4994                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4995  0027CA  908D               	bcf	3981,0,c	;volatile
  4996                           
  4997                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4998  0027CC  928D               	bcf	3981,1,c	;volatile
  4999                           
  5000                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  5001  0027CE  948D               	bcf	3981,2,c	;volatile
  5002                           
  5003                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  5004  0027D0  9A8B               	bcf	3979,5,c	;volatile
  5005                           
  5006                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  5007  0027D2  9C8B               	bcf	3979,6,c	;volatile
  5008                           
  5009                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  5010  0027D4  9E8B               	bcf	3979,7,c	;volatile
  5011                           
  5012                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  5013  0027D6  9A89               	bcf	3977,5,c	;volatile
  5014                           
  5015                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5016  0027D8  0E01               	movlw	1
  5017  0027DA  EC62  F01F         	call	_lcdInst
  5018  0027DE  0E11               	movlw	17
  5019  0027E0  0101               	movlb	1	; () banked
  5020  0027E2  6F18               	movwf	??_actuators_main& (0+255),b
  5021  0027E4  0E3A               	movlw	58
  5022  0027E6                     u9577:
  5023  0027E6  2EE8               	decfsz	wreg,f,c
  5024  0027E8  D7FE               	bra	u9577
  5025  0027EA  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5026  0027EC  D7FC               	bra	u9577
  5027  0027EE  F000               	nop	
  5028                           
  5029                           ;actuators_main.c: 31:         printf("Stepper done");
  5030  0027F0  0E0A               	movlw	low STR_2
  5031  0027F2  0100               	movlb	0	; () banked
  5032  0027F4  6FED               	movwf	printf@fmt& (0+255),b
  5033  0027F6  0EFF               	movlw	high STR_2
  5034  0027F8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5035  0027FA  ECFC  F01E         	call	_printf	;wreg free
  5036                           
  5037                           ;actuators_main.c: 33:         servo();
  5038  0027FE  ECD4  F019         	call	_servo	;wreg free
  5039                           
  5040                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5041  002802  0E01               	movlw	1
  5042  002804  EC62  F01F         	call	_lcdInst
  5043  002808  0E11               	movlw	17
  5044  00280A  0101               	movlb	1	; () banked
  5045  00280C  6F18               	movwf	??_actuators_main& (0+255),b
  5046  00280E  0E3A               	movlw	58
  5047  002810                     u9587:
  5048  002810  2EE8               	decfsz	wreg,f,c
  5049  002812  D7FE               	bra	u9587
  5050  002814  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5051  002816  D7FC               	bra	u9587
  5052  002818  F000               	nop	
  5053                           
  5054                           ;actuators_main.c: 35:         printf("Servo done");
  5055  00281A  0E74               	movlw	low STR_3
  5056  00281C  0100               	movlb	0	; () banked
  5057  00281E  6FED               	movwf	printf@fmt& (0+255),b
  5058  002820  0EFF               	movlw	high STR_3
  5059  002822  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5060  002824  ECFC  F01E         	call	_printf	;wreg free
  5061                           
  5062                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  5063  002828  0E00               	movlw	0
  5064  00282A  6E89               	movwf	3977,c	;volatile
  5065                           
  5066                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  5067  00282C  908B               	bcf	3979,0,c	;volatile
  5068                           
  5069                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  5070  00282E  908D               	bcf	3981,0,c	;volatile
  5071                           
  5072                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  5073  002830  928D               	bcf	3981,1,c	;volatile
  5074                           
  5075                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  5076  002832  948D               	bcf	3981,2,c	;volatile
  5077                           
  5078                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  5079  002834  9A8B               	bcf	3979,5,c	;volatile
  5080                           
  5081                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  5082  002836  9C8B               	bcf	3979,6,c	;volatile
  5083                           
  5084                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  5085  002838  9E8B               	bcf	3979,7,c	;volatile
  5086                           
  5087                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  5088  00283A  9A89               	bcf	3977,5,c	;volatile
  5089                           
  5090                           ;actuators_main.c: 48:         if (t_dep%2!=0){
  5091  00283C  0101               	movlb	1	; () banked
  5092  00283E  A116               	btfss	actuators_main@t_dep& (0+255),0,b
  5093  002840  D006               	goto	l7879
  5094                           
  5095                           ; BSR set to: 1
  5096                           ;actuators_main.c: 49:             steps2_adj = steps2_adj+1;
  5097  002842  0E01               	movlw	1
  5098  002844  2514               	addwf	actuators_main@steps2_adj& (0+255),w,b
  5099  002846  6F14               	movwf	actuators_main@steps2_adj& (0+255),b
  5100  002848  0E00               	movlw	0
  5101  00284A  2115               	addwfc	(actuators_main@steps2_adj+1)& (0+255),w,b
  5102  00284C  6F15               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  5103  00284E                     l7879:
  5104                           
  5105                           ; BSR set to: 1
  5106                           ;actuators_main.c: 51:         stepper2(1, steps2_adj);
  5107  00284E  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5108  002852  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5109  002856  0E01               	movlw	1
  5110  002858  EC68  F018         	call	_stepper2
  5111                           
  5112                           ;actuators_main.c: 52:                         LATA = 0b00000000;
  5113  00285C  0E00               	movlw	0
  5114  00285E  6E89               	movwf	3977,c	;volatile
  5115                           
  5116                           ;actuators_main.c: 53:         LATCbits.LATC0 = 0;
  5117  002860  908B               	bcf	3979,0,c	;volatile
  5118                           
  5119                           ;actuators_main.c: 54:         LATEbits.LATE0 = 0;
  5120  002862  908D               	bcf	3981,0,c	;volatile
  5121                           
  5122                           ;actuators_main.c: 55:         LATEbits.LATE1 = 0;
  5123  002864  928D               	bcf	3981,1,c	;volatile
  5124                           
  5125                           ;actuators_main.c: 56:         LATEbits.LATE2 = 0;
  5126  002866  948D               	bcf	3981,2,c	;volatile
  5127                           
  5128                           ;actuators_main.c: 57:         LATCbits.LATC5 = 0;
  5129  002868  9A8B               	bcf	3979,5,c	;volatile
  5130                           
  5131                           ;actuators_main.c: 58:         LATCbits.LATC6 = 0;
  5132  00286A  9C8B               	bcf	3979,6,c	;volatile
  5133                           
  5134                           ;actuators_main.c: 59:         LATCbits.LATC7 = 0;
  5135  00286C  9E8B               	bcf	3979,7,c	;volatile
  5136                           
  5137                           ;actuators_main.c: 60:         LATAbits.LATA5 = 0;
  5138  00286E  9A89               	bcf	3977,5,c	;volatile
  5139                           
  5140                           ;actuators_main.c: 61:         act_cnt++;
  5141  002870  0101               	movlb	1	; () banked
  5142  002872  4B1A               	infsnz	actuators_main@act_cnt& (0+255),f,b
  5143  002874  2B1B               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  5144  002876                     l7901:
  5145                           
  5146                           ; BSR set to: 1
  5147                           ;actuators_main.c: 64:     if(act_cnt){
  5148  002876  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  5149  002878  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5150  00287A  A4D8               	btfss	status,2,c
  5151  00287C  0012               	return	
  5152  00287E  D785               	goto	l7821
  5153  002880                     __end_of_actuators_main:
  5154                           	opt callstack 0
  5155                           
  5156 ;; *************** function _system_init *****************
  5157 ;; Defined at:
  5158 ;;		line 74 in file "actuators_main.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    3
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_actuators_main
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text11
  5187  003CAA                     __ptext11:
  5188                           	opt callstack 0
  5189  003CAA                     _system_init:
  5190                           	opt callstack 26
  5191                           
  5192                           ;actuators_main.c: 75:     TRISB = 0x00;
  5193                           
  5194                           ; BSR set to: 1
  5195                           ;incstack = 0
  5196  003CAA  0E00               	movlw	0
  5197  003CAC  6E93               	movwf	3987,c	;volatile
  5198                           
  5199                           ;actuators_main.c: 77:     LATB = 0x0F;
  5200  003CAE  0E0F               	movlw	15
  5201  003CB0  6E8A               	movwf	3978,c	;volatile
  5202                           
  5203                           ;actuators_main.c: 78:     TRISA = 0x00;
  5204  003CB2  0E00               	movlw	0
  5205  003CB4  6E92               	movwf	3986,c	;volatile
  5206                           
  5207                           ;actuators_main.c: 79:     LATA = 0x0F;
  5208  003CB6  0E0F               	movlw	15
  5209  003CB8  6E89               	movwf	3977,c	;volatile
  5210                           
  5211                           ;actuators_main.c: 81:     TRISCbits.TRISC1 = 0;
  5212  003CBA  9294               	bcf	3988,1,c	;volatile
  5213                           
  5214                           ;actuators_main.c: 84:     TRISCbits.TRISC2 = 0;
  5215  003CBC  9494               	bcf	3988,2,c	;volatile
  5216                           
  5217                           ;actuators_main.c: 87:     LATD = 0x00;
  5218  003CBE  0E00               	movlw	0
  5219  003CC0  6E8C               	movwf	3980,c	;volatile
  5220                           
  5221                           ;actuators_main.c: 88:     TRISD = 0x00;
  5222  003CC2  0E00               	movlw	0
  5223  003CC4  6E95               	movwf	3989,c	;volatile
  5224                           
  5225                           ;actuators_main.c: 90:     ADCON1 = 0b00001111;
  5226  003CC6  0E0F               	movlw	15
  5227  003CC8  6EC1               	movwf	4033,c	;volatile
  5228                           
  5229                           ;actuators_main.c: 92:     TRISC = 0x00;
  5230  003CCA  0E00               	movlw	0
  5231  003CCC  6E94               	movwf	3988,c	;volatile
  5232                           
  5233                           ;actuators_main.c: 93:     LATC = 0x00;
  5234  003CCE  0E00               	movlw	0
  5235  003CD0  6E8B               	movwf	3979,c	;volatile
  5236                           
  5237                           ;actuators_main.c: 94:     TRISE = 0x00;
  5238  003CD2  0E00               	movlw	0
  5239  003CD4  6E96               	movwf	3990,c	;volatile
  5240                           
  5241                           ;actuators_main.c: 95:     LATE = 0x00;
  5242  003CD6  0E00               	movlw	0
  5243  003CD8  6E8D               	movwf	3981,c	;volatile
  5244  003CDA  0012               	return		;funcret
  5245  003CDC                     __end_of_system_init:
  5246                           	opt callstack 0
  5247                           
  5248 ;; *************** function _stepper2_back *****************
  5249 ;; Defined at:
  5250 ;;		line 453 in file "actuators_main.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  direction       1    wreg     unsigned char 
  5253 ;;  steps2_adj      2    0[BANK1 ] int 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  direction       1    3[BANK1 ] unsigned char 
  5256 ;;  i               2    6[BANK1 ] int 
  5257 ;;  count_steppe    2    4[BANK1 ] int 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5267 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;Total ram usage:        8 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:   15
  5274 ;; This function calls:
  5275 ;;		_full_drive
  5276 ;;		_lcdInst
  5277 ;;		_printf
  5278 ;; This function is called by:
  5279 ;;		_actuators_main
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text12
  5284  0035CC                     __ptext12:
  5285                           	opt callstack 0
  5286  0035CC                     _stepper2_back:
  5287                           	opt callstack 14
  5288                           
  5289                           ;incstack = 0
  5290                           ;stepper2_back@direction stored from wreg
  5291  0035CC  0101               	movlb	1	; () banked
  5292  0035CE  6F03               	movwf	stepper2_back@direction& (0+255),b
  5293                           
  5294                           ;actuators_main.c: 471:     int count_stepper = 0;
  5295  0035D0  0E00               	movlw	0
  5296  0035D2  0101               	movlb	1	; () banked
  5297  0035D4  6F05               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5298  0035D6  0E00               	movlw	0
  5299  0035D8  6F04               	movwf	stepper2_back@count_stepper& (0+255),b
  5300                           
  5301                           ; BSR set to: 1
  5302                           ;actuators_main.c: 474:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5303                           
  5304                           ; BSR set to: 1
  5305                           ;actuators_main.c: 473:         if (count_stepper<1){
  5306  0035DA  0E01               	movlw	1
  5307  0035DC  EC62  F01F         	call	_lcdInst
  5308  0035E0  0E11               	movlw	17
  5309  0035E2  0101               	movlb	1	; () banked
  5310  0035E4  6F02               	movwf	??_stepper2_back& (0+255),b
  5311  0035E6  0E3A               	movlw	58
  5312  0035E8                     u9597:
  5313  0035E8  2EE8               	decfsz	wreg,f,c
  5314  0035EA  D7FE               	bra	u9597
  5315  0035EC  2F02               	decfsz	??_stepper2_back& (0+255),f,b
  5316  0035EE  D7FC               	bra	u9597
  5317  0035F0  F000               	nop	
  5318                           
  5319                           ;actuators_main.c: 475:             printf("step1");
  5320  0035F2  0EF4               	movlw	low STR_6
  5321  0035F4  0100               	movlb	0	; () banked
  5322  0035F6  6FED               	movwf	printf@fmt& (0+255),b
  5323  0035F8  0EFF               	movlw	high STR_6
  5324  0035FA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5325  0035FC  ECFC  F01E         	call	_printf	;wreg free
  5326  003600  0EC0               	movlw	192
  5327  003602  EC62  F01F         	call	_lcdInst
  5328                           
  5329                           ;actuators_main.c: 477:             printf("Step speed %d",4);
  5330  003606  0EE2               	movlw	low STR_7
  5331  003608  0100               	movlb	0	; () banked
  5332  00360A  6FED               	movwf	printf@fmt& (0+255),b
  5333  00360C  0EFE               	movlw	high STR_7
  5334  00360E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5335  003610  0E00               	movlw	0
  5336  003612  6FF0               	movwf	(?_printf+3)& (0+255),b
  5337  003614  0E04               	movlw	4
  5338  003616  6FEF               	movwf	(?_printf+2)& (0+255),b
  5339  003618  ECFC  F01E         	call	_printf	;wreg free
  5340                           
  5341                           ;actuators_main.c: 478:             for(int i=0;i<5;i++){
  5342  00361C  0E00               	movlw	0
  5343  00361E  0101               	movlb	1	; () banked
  5344  003620  6F07               	movwf	(stepper2_back@i+1)& (0+255),b
  5345  003622  0E00               	movlw	0
  5346  003624  6F06               	movwf	stepper2_back@i& (0+255),b
  5347  003626                     l7571:
  5348                           
  5349                           ; BSR set to: 1
  5350                           ;actuators_main.c: 480:                 full_drive(direction, 2);
  5351  003626  0E00               	movlw	0
  5352  003628  0100               	movlb	0	; () banked
  5353  00362A  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5354  00362C  0E02               	movlw	2
  5355  00362E  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5356  003630  0101               	movlb	1	; () banked
  5357  003632  5103               	movf	stepper2_back@direction& (0+255),w,b
  5358  003634  ECA0  F00B         	call	_full_drive
  5359                           
  5360                           ;actuators_main.c: 482:             }
  5361  003638  0101               	movlb	1	; () banked
  5362  00363A  4B06               	infsnz	stepper2_back@i& (0+255),f,b
  5363  00363C  2B07               	incf	(stepper2_back@i+1)& (0+255),f,b
  5364                           
  5365                           ; BSR set to: 1
  5366  00363E  BF07               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5367  003640  D7F2               	goto	l7571
  5368  003642  5107               	movf	(stepper2_back@i+1)& (0+255),w,b
  5369  003644  E104               	bnz	u8090
  5370  003646  0E05               	movlw	5
  5371  003648  5D06               	subwf	stepper2_back@i& (0+255),w,b
  5372  00364A  A0D8               	btfss	status,0,c
  5373  00364C  D7EC               	goto	l7571
  5374  00364E                     u8090:
  5375                           
  5376                           ; BSR set to: 1
  5377                           ;actuators_main.c: 483:             printf("cnt is %d", count_stepper);
  5378  00364E  0ED9               	movlw	low STR_1
  5379  003650  0100               	movlb	0	; () banked
  5380  003652  6FED               	movwf	printf@fmt& (0+255),b
  5381  003654  0EFF               	movlw	high STR_1
  5382  003656  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5383  003658  C104  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5384  00365C  C105  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5385  003660  ECFC  F01E         	call	_printf	;wreg free
  5386                           
  5387                           ;actuators_main.c: 484:             count_stepper++;
  5388  003664  0101               	movlb	1	; () banked
  5389  003666  4B04               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5390  003668  2B05               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5391                           
  5392                           ; BSR set to: 1
  5393  00366A  0012               	return		;funcret
  5394  00366C                     __end_of_stepper2_back:
  5395                           	opt callstack 0
  5396                           
  5397 ;; *************** function _stepper2 *****************
  5398 ;; Defined at:
  5399 ;;		line 368 in file "actuators_main.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  direction       1    wreg     unsigned char 
  5402 ;;  steps2_adj      2    0[BANK1 ] int 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  direction       1   13[BANK1 ] unsigned char 
  5405 ;;  i               2    9[BANK1 ] int 
  5406 ;;  i               2    7[BANK1 ] int 
  5407 ;;  count_steppe    2   11[BANK1 ] int 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:       14 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:   15
  5424 ;; This function calls:
  5425 ;;		_full_drive
  5426 ;;		_lcdInst
  5427 ;;		_printf
  5428 ;; This function is called by:
  5429 ;;		_actuators_main
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text13
  5434  0030D0                     __ptext13:
  5435                           	opt callstack 0
  5436  0030D0                     _stepper2:
  5437                           	opt callstack 14
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;incstack = 0
  5441                           ;stepper2@direction stored from wreg
  5442  0030D0  0101               	movlb	1	; () banked
  5443  0030D2  6F0D               	movwf	stepper2@direction& (0+255),b
  5444                           
  5445                           ;actuators_main.c: 386:     int count_stepper = 0;
  5446  0030D4  0E00               	movlw	0
  5447  0030D6  0101               	movlb	1	; () banked
  5448  0030D8  6F0C               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5449  0030DA  0E00               	movlw	0
  5450  0030DC  6F0B               	movwf	stepper2@count_stepper& (0+255),b
  5451                           
  5452                           ; BSR set to: 1
  5453                           ;actuators_main.c: 389:     if (direction == 0){
  5454                           
  5455                           ; BSR set to: 1
  5456                           ;actuators_main.c: 388:         if (count_stepper<1){
  5457  0030DE  510D               	movf	stepper2@direction& (0+255),w,b
  5458  0030E0  A4D8               	btfss	status,2,c
  5459  0030E2  D029               	goto	l7533
  5460                           
  5461                           ; BSR set to: 1
  5462                           ;actuators_main.c: 394:             for(int i=0;i<steps2_adj;i++){
  5463  0030E4  0E00               	movlw	0
  5464  0030E6  6F08               	movwf	(stepper2@i+1)& (0+255),b
  5465  0030E8  0E00               	movlw	0
  5466  0030EA  6F07               	movwf	stepper2@i& (0+255),b
  5467  0030EC  D00C               	goto	l7527
  5468  0030EE                     l7523:
  5469                           
  5470                           ; BSR set to: 1
  5471                           ;actuators_main.c: 396:                 full_drive(direction, 2);
  5472  0030EE  0E00               	movlw	0
  5473  0030F0  0100               	movlb	0	; () banked
  5474  0030F2  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5475  0030F4  0E02               	movlw	2
  5476  0030F6  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5477  0030F8  0101               	movlb	1	; () banked
  5478  0030FA  510D               	movf	stepper2@direction& (0+255),w,b
  5479  0030FC  ECA0  F00B         	call	_full_drive
  5480                           
  5481                           ;actuators_main.c: 398:             }
  5482  003100  0101               	movlb	1	; () banked
  5483  003102  4B07               	infsnz	stepper2@i& (0+255),f,b
  5484  003104  2B08               	incf	(stepper2@i+1)& (0+255),f,b
  5485  003106                     l7527:
  5486                           
  5487                           ; BSR set to: 1
  5488  003106  5100               	movf	stepper2@steps2_adj& (0+255),w,b
  5489  003108  5D07               	subwf	stepper2@i& (0+255),w,b
  5490  00310A  5108               	movf	(stepper2@i+1)& (0+255),w,b
  5491  00310C  0A80               	xorlw	128
  5492  00310E  6F02               	movwf	??_stepper2& (0+255),b
  5493  003110  5101               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5494  003112  0A80               	xorlw	128
  5495  003114  5902               	subwfb	??_stepper2& (0+255),w,b
  5496  003116  A0D8               	btfss	status,0,c
  5497  003118  D7EA               	goto	l7523
  5498                           
  5499                           ; BSR set to: 1
  5500                           ;actuators_main.c: 399:             printf("cnt is %d", count_stepper);
  5501  00311A  0ED9               	movlw	low STR_1
  5502  00311C  0100               	movlb	0	; () banked
  5503  00311E  6FED               	movwf	printf@fmt& (0+255),b
  5504  003120  0EFF               	movlw	high STR_1
  5505  003122  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5506  003124  C10B  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5507  003128  C10C  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5508  00312C  ECFC  F01E         	call	_printf	;wreg free
  5509                           
  5510                           ;actuators_main.c: 400:             count_stepper++;
  5511  003130  0101               	movlb	1	; () banked
  5512  003132  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5513  003134  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5514  003136                     l7533:
  5515                           
  5516                           ; BSR set to: 1
  5517                           ;actuators_main.c: 402:     if (direction == 1){
  5518  003136  050D               	decf	stepper2@direction& (0+255),w,b
  5519  003138  A4D8               	btfss	status,2,c
  5520  00313A  0012               	return	
  5521                           
  5522                           ; BSR set to: 1
  5523                           ;actuators_main.c: 403:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5524  00313C  0E01               	movlw	1
  5525  00313E  EC62  F01F         	call	_lcdInst
  5526  003142  0E11               	movlw	17
  5527  003144  0101               	movlb	1	; () banked
  5528  003146  6F02               	movwf	??_stepper2& (0+255),b
  5529  003148  0E3A               	movlw	58
  5530  00314A                     u9607:
  5531  00314A  2EE8               	decfsz	wreg,f,c
  5532  00314C  D7FE               	bra	u9607
  5533  00314E  2F02               	decfsz	??_stepper2& (0+255),f,b
  5534  003150  D7FC               	bra	u9607
  5535  003152  F000               	nop	
  5536                           
  5537                           ;actuators_main.c: 404:                         printf("steppp %d", steps2_adj-(5));
  5538  003154  0ECF               	movlw	low STR_5
  5539  003156  0100               	movlb	0	; () banked
  5540  003158  6FED               	movwf	printf@fmt& (0+255),b
  5541  00315A  0EFF               	movlw	high STR_5
  5542  00315C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5543  00315E  0EFB               	movlw	251
  5544  003160  0101               	movlb	1	; () banked
  5545  003162  2500               	addwf	stepper2@steps2_adj& (0+255),w,b
  5546  003164  0100               	movlb	0	; () banked
  5547  003166  6FEF               	movwf	(?_printf+2)& (0+255),b
  5548  003168  0EFF               	movlw	255
  5549  00316A  0101               	movlb	1	; () banked
  5550  00316C  2101               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5551  00316E  0100               	movlb	0	; () banked
  5552  003170  6FF0               	movwf	(?_printf+3)& (0+255),b
  5553  003172  ECFC  F01E         	call	_printf	;wreg free
  5554                           
  5555                           ;actuators_main.c: 406:                 for(int i=0;i<(steps2_adj-(5));i++){
  5556  003176  0E00               	movlw	0
  5557  003178  0101               	movlb	1	; () banked
  5558  00317A  6F0A               	movwf	(stepper2@i_489+1)& (0+255),b
  5559  00317C  0E00               	movlw	0
  5560  00317E  6F09               	movwf	stepper2@i_489& (0+255),b
  5561  003180  D00C               	goto	l7547
  5562  003182                     l7543:
  5563                           
  5564                           ; BSR set to: 1
  5565                           ;actuators_main.c: 408:                     full_drive(direction, 2);
  5566  003182  0E00               	movlw	0
  5567  003184  0100               	movlb	0	; () banked
  5568  003186  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5569  003188  0E02               	movlw	2
  5570  00318A  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5571  00318C  0101               	movlb	1	; () banked
  5572  00318E  510D               	movf	stepper2@direction& (0+255),w,b
  5573  003190  ECA0  F00B         	call	_full_drive
  5574                           
  5575                           ;actuators_main.c: 410:                 }
  5576  003194  0101               	movlb	1	; () banked
  5577  003196  4B09               	infsnz	stepper2@i_489& (0+255),f,b
  5578  003198  2B0A               	incf	(stepper2@i_489+1)& (0+255),f,b
  5579  00319A                     l7547:
  5580                           
  5581                           ; BSR set to: 1
  5582  00319A  0EFB               	movlw	251
  5583  00319C  6F02               	movwf	??_stepper2& (0+255),b
  5584  00319E  0EFF               	movlw	255
  5585  0031A0  6F03               	movwf	(??_stepper2+1)& (0+255),b
  5586  0031A2  C100  F104         	movff	stepper2@steps2_adj,??_stepper2+2
  5587  0031A6  C101  F105         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5588  0031AA  5102               	movf	??_stepper2& (0+255),w,b
  5589  0031AC  2704               	addwf	(??_stepper2+2)& (0+255),f,b
  5590  0031AE  5103               	movf	(??_stepper2+1)& (0+255),w,b
  5591  0031B0  2305               	addwfc	(??_stepper2+3)& (0+255),f,b
  5592  0031B2  5104               	movf	(??_stepper2+2)& (0+255),w,b
  5593  0031B4  5D09               	subwf	stepper2@i_489& (0+255),w,b
  5594  0031B6  510A               	movf	(stepper2@i_489+1)& (0+255),w,b
  5595  0031B8  0A80               	xorlw	128
  5596  0031BA  6F06               	movwf	(??_stepper2+4)& (0+255),b
  5597  0031BC  5105               	movf	(??_stepper2+3)& (0+255),w,b
  5598  0031BE  0A80               	xorlw	128
  5599  0031C0  5906               	subwfb	(??_stepper2+4)& (0+255),w,b
  5600  0031C2  A0D8               	btfss	status,0,c
  5601  0031C4  D7DE               	goto	l7543
  5602                           
  5603                           ; BSR set to: 1
  5604                           ;actuators_main.c: 411:                 count_stepper++;
  5605  0031C6  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5606  0031C8  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5607                           
  5608                           ; BSR set to: 1
  5609  0031CA  0012               	return		;funcret
  5610  0031CC                     __end_of_stepper2:
  5611                           	opt callstack 0
  5612                           
  5613 ;; *************** function _stepper *****************
  5614 ;; Defined at:
  5615 ;;		line 303 in file "actuators_main.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  stack           2    0[BANK1 ] int 
  5618 ;;  t_dep           2    2[BANK1 ] int 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  i               2   16[BANK1 ] int 
  5621 ;;  i               2   14[BANK1 ] int 
  5622 ;;  i               2   12[BANK1 ] int 
  5623 ;;  i               2   10[BANK1 ] int 
  5624 ;;  count_steppe    2    8[BANK1 ] int 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5634 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;Total ram usage:       18 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:   15
  5641 ;; This function calls:
  5642 ;;		_full_drive
  5643 ;; This function is called by:
  5644 ;;		_actuators_main
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text14
  5649  002880                     __ptext14:
  5650                           	opt callstack 0
  5651  002880                     _stepper:
  5652                           	opt callstack 14
  5653                           
  5654                           ;actuators_main.c: 304:     int count_stepper = 0;
  5655                           
  5656                           ; BSR set to: 1
  5657                           ;incstack = 0
  5658  002880  0E00               	movlw	0
  5659  002882  0101               	movlb	1	; () banked
  5660  002884  6F09               	movwf	(stepper@count_stepper+1)& (0+255),b
  5661  002886  0E00               	movlw	0
  5662  002888  6F08               	movwf	stepper@count_stepper& (0+255),b
  5663                           
  5664                           ; BSR set to: 1
  5665                           ;actuators_main.c: 313:             if (stack == 1){
  5666                           
  5667                           ; BSR set to: 1
  5668                           ;actuators_main.c: 307:         if (count_stepper<1){
  5669  00288A  0500               	decf	stepper@stack& (0+255),w,b
  5670  00288C  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5671  00288E  A4D8               	btfss	status,2,c
  5672  002890  D03E               	goto	u7990
  5673                           
  5674                           ; BSR set to: 1
  5675                           ;actuators_main.c: 314:                 if (t_dep<=3){
  5676  002892  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5677  002894  D006               	goto	u7960
  5678  002896  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5679  002898  E11B               	bnz	l7469
  5680  00289A  0E04               	movlw	4
  5681  00289C  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5682  00289E  B0D8               	btfsc	status,0,c
  5683  0028A0  D017               	goto	u7970
  5684  0028A2                     u7960:
  5685                           
  5686                           ; BSR set to: 1
  5687                           ;actuators_main.c: 315:                     for(int i=0;i<14;i++){
  5688  0028A2  0E00               	movlw	0
  5689  0028A4  6F0B               	movwf	(stepper@i+1)& (0+255),b
  5690  0028A6  0E00               	movlw	0
  5691  0028A8  6F0A               	movwf	stepper@i& (0+255),b
  5692  0028AA                     l7463:
  5693                           
  5694                           ; BSR set to: 1
  5695                           ;actuators_main.c: 317:                         full_drive(0, 1);
  5696  0028AA  0E00               	movlw	0
  5697  0028AC  0100               	movlb	0	; () banked
  5698  0028AE  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5699  0028B0  0E01               	movlw	1
  5700  0028B2  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5701  0028B4  0E00               	movlw	0
  5702  0028B6  ECA0  F00B         	call	_full_drive
  5703                           
  5704                           ;actuators_main.c: 319:                     }
  5705  0028BA  0101               	movlb	1	; () banked
  5706  0028BC  4B0A               	infsnz	stepper@i& (0+255),f,b
  5707  0028BE  2B0B               	incf	(stepper@i+1)& (0+255),f,b
  5708                           
  5709                           ; BSR set to: 1
  5710  0028C0  BF0B               	btfsc	(stepper@i+1)& (0+255),7,b
  5711  0028C2  D7F3               	goto	l7463
  5712  0028C4  510B               	movf	(stepper@i+1)& (0+255),w,b
  5713  0028C6  E104               	bnz	u7970
  5714  0028C8  0E0E               	movlw	14
  5715  0028CA  5D0A               	subwf	stepper@i& (0+255),w,b
  5716  0028CC  A0D8               	btfss	status,0,c
  5717  0028CE  D7ED               	goto	l7463
  5718  0028D0                     u7970:
  5719  0028D0                     l7469:
  5720                           
  5721                           ; BSR set to: 1
  5722                           ;actuators_main.c: 321:                 if (t_dep>3){
  5723  0028D0  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5724  0028D2  D01D               	goto	u7990
  5725  0028D4  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5726  0028D6  E104               	bnz	u7980
  5727  0028D8  0E04               	movlw	4
  5728  0028DA  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5729  0028DC  A0D8               	btfss	status,0,c
  5730  0028DE  D017               	goto	u7990
  5731  0028E0                     u7980:
  5732                           
  5733                           ; BSR set to: 1
  5734                           ;actuators_main.c: 322:                     for(int i=0;i<14 -1;i++){
  5735  0028E0  0E00               	movlw	0
  5736  0028E2  6F0D               	movwf	(stepper@i_479+1)& (0+255),b
  5737  0028E4  0E00               	movlw	0
  5738  0028E6  6F0C               	movwf	stepper@i_479& (0+255),b
  5739  0028E8                     l7477:
  5740                           
  5741                           ; BSR set to: 1
  5742                           ;actuators_main.c: 324:                         full_drive(0, 1);
  5743  0028E8  0E00               	movlw	0
  5744  0028EA  0100               	movlb	0	; () banked
  5745  0028EC  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5746  0028EE  0E01               	movlw	1
  5747  0028F0  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5748  0028F2  0E00               	movlw	0
  5749  0028F4  ECA0  F00B         	call	_full_drive
  5750                           
  5751                           ;actuators_main.c: 326:                     }
  5752  0028F8  0101               	movlb	1	; () banked
  5753  0028FA  4B0C               	infsnz	stepper@i_479& (0+255),f,b
  5754  0028FC  2B0D               	incf	(stepper@i_479+1)& (0+255),f,b
  5755                           
  5756                           ; BSR set to: 1
  5757  0028FE  BF0D               	btfsc	(stepper@i_479+1)& (0+255),7,b
  5758  002900  D7F3               	goto	l7477
  5759  002902  510D               	movf	(stepper@i_479+1)& (0+255),w,b
  5760  002904  E104               	bnz	u7990
  5761  002906  0E0D               	movlw	13
  5762  002908  5D0C               	subwf	stepper@i_479& (0+255),w,b
  5763  00290A  A0D8               	btfss	status,0,c
  5764  00290C  D7ED               	goto	l7477
  5765  00290E                     u7990:
  5766                           
  5767                           ; BSR set to: 1
  5768                           ;actuators_main.c: 329:             if (stack == 2){
  5769  00290E  0E02               	movlw	2
  5770  002910  1900               	xorwf	stepper@stack& (0+255),w,b
  5771  002912  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5772  002914  A4D8               	btfss	status,2,c
  5773  002916  D056               	goto	u8040
  5774                           
  5775                           ; BSR set to: 1
  5776                           ;actuators_main.c: 330:                 if ((t_dep-8)<=3){
  5777  002918  0EF8               	movlw	248
  5778  00291A  6F04               	movwf	??_stepper& (0+255),b
  5779  00291C  0EFF               	movlw	255
  5780  00291E  6F05               	movwf	(??_stepper+1)& (0+255),b
  5781  002920  C102  F106         	movff	stepper@t_dep,??_stepper+2
  5782  002924  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  5783  002928  5104               	movf	??_stepper& (0+255),w,b
  5784  00292A  2706               	addwf	(??_stepper+2)& (0+255),f,b
  5785  00292C  5105               	movf	(??_stepper+1)& (0+255),w,b
  5786  00292E  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  5787  002930  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  5788  002932  D006               	goto	u8010
  5789  002934  5107               	movf	(??_stepper+3)& (0+255),w,b
  5790  002936  E11B               	bnz	l7499
  5791  002938  0E04               	movlw	4
  5792  00293A  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  5793  00293C  B0D8               	btfsc	status,0,c
  5794  00293E  D017               	goto	u8020
  5795  002940                     u8010:
  5796                           
  5797                           ; BSR set to: 1
  5798                           ;actuators_main.c: 331:                     for(int i=0;i<14;i++){
  5799  002940  0E00               	movlw	0
  5800  002942  6F0F               	movwf	(stepper@i_480+1)& (0+255),b
  5801  002944  0E00               	movlw	0
  5802  002946  6F0E               	movwf	stepper@i_480& (0+255),b
  5803  002948                     l7493:
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;actuators_main.c: 332:                         full_drive(0, 3);
  5807  002948  0E00               	movlw	0
  5808  00294A  0100               	movlb	0	; () banked
  5809  00294C  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5810  00294E  0E03               	movlw	3
  5811  002950  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5812  002952  0E00               	movlw	0
  5813  002954  ECA0  F00B         	call	_full_drive
  5814                           
  5815                           ;actuators_main.c: 335:                     }
  5816  002958  0101               	movlb	1	; () banked
  5817  00295A  4B0E               	infsnz	stepper@i_480& (0+255),f,b
  5818  00295C  2B0F               	incf	(stepper@i_480+1)& (0+255),f,b
  5819                           
  5820                           ; BSR set to: 1
  5821  00295E  BF0F               	btfsc	(stepper@i_480+1)& (0+255),7,b
  5822  002960  D7F3               	goto	l7493
  5823  002962  510F               	movf	(stepper@i_480+1)& (0+255),w,b
  5824  002964  E104               	bnz	u8020
  5825  002966  0E0E               	movlw	14
  5826  002968  5D0E               	subwf	stepper@i_480& (0+255),w,b
  5827  00296A  A0D8               	btfss	status,0,c
  5828  00296C  D7ED               	goto	l7493
  5829  00296E                     u8020:
  5830  00296E                     l7499:
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;actuators_main.c: 337:                 if ((t_dep-8)>3){
  5834  00296E  0EF8               	movlw	248
  5835  002970  6F04               	movwf	??_stepper& (0+255),b
  5836  002972  0EFF               	movlw	255
  5837  002974  6F05               	movwf	(??_stepper+1)& (0+255),b
  5838  002976  C102  F106         	movff	stepper@t_dep,??_stepper+2
  5839  00297A  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  5840  00297E  5104               	movf	??_stepper& (0+255),w,b
  5841  002980  2706               	addwf	(??_stepper+2)& (0+255),f,b
  5842  002982  5105               	movf	(??_stepper+1)& (0+255),w,b
  5843  002984  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  5844  002986  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  5845  002988  D01D               	goto	u8040
  5846  00298A  5107               	movf	(??_stepper+3)& (0+255),w,b
  5847  00298C  E104               	bnz	u8030
  5848  00298E  0E04               	movlw	4
  5849  002990  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  5850  002992  A0D8               	btfss	status,0,c
  5851  002994  D017               	goto	u8040
  5852  002996                     u8030:
  5853                           
  5854                           ; BSR set to: 1
  5855                           ;actuators_main.c: 338:                     for(int i=0;i<14 -1;i++){
  5856  002996  0E00               	movlw	0
  5857  002998  6F11               	movwf	(stepper@i_481+1)& (0+255),b
  5858  00299A  0E00               	movlw	0
  5859  00299C  6F10               	movwf	stepper@i_481& (0+255),b
  5860  00299E                     l7507:
  5861                           
  5862                           ; BSR set to: 1
  5863                           ;actuators_main.c: 339:                         full_drive(0, 3);
  5864  00299E  0E00               	movlw	0
  5865  0029A0  0100               	movlb	0	; () banked
  5866  0029A2  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5867  0029A4  0E03               	movlw	3
  5868  0029A6  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5869  0029A8  0E00               	movlw	0
  5870  0029AA  ECA0  F00B         	call	_full_drive
  5871                           
  5872                           ;actuators_main.c: 342:                     }
  5873  0029AE  0101               	movlb	1	; () banked
  5874  0029B0  4B10               	infsnz	stepper@i_481& (0+255),f,b
  5875  0029B2  2B11               	incf	(stepper@i_481+1)& (0+255),f,b
  5876                           
  5877                           ; BSR set to: 1
  5878  0029B4  BF11               	btfsc	(stepper@i_481+1)& (0+255),7,b
  5879  0029B6  D7F3               	goto	l7507
  5880  0029B8  5111               	movf	(stepper@i_481+1)& (0+255),w,b
  5881  0029BA  E104               	bnz	u8040
  5882  0029BC  0E0D               	movlw	13
  5883  0029BE  5D10               	subwf	stepper@i_481& (0+255),w,b
  5884  0029C0  A0D8               	btfss	status,0,c
  5885  0029C2  D7ED               	goto	l7507
  5886  0029C4                     u8040:
  5887                           
  5888                           ; BSR set to: 1
  5889                           ;actuators_main.c: 346:             count_stepper++;
  5890  0029C4  4B08               	infsnz	stepper@count_stepper& (0+255),f,b
  5891  0029C6  2B09               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5892                           
  5893                           ; BSR set to: 1
  5894                           
  5895                           ;actuators_main.c: 347:         }
  5896  0029C8  0012               	return		;funcret
  5897  0029CA                     __end_of_stepper:
  5898                           	opt callstack 0
  5899                           
  5900 ;; *************** function _full_drive *****************
  5901 ;; Defined at:
  5902 ;;		line 502 in file "actuators_main.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  direction       1    wreg     unsigned char 
  5905 ;;  stepper_no      2  123[BANK0 ] int 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  direction       1  126[BANK0 ] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;Total ram usage:        4 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:   14
  5924 ;; This function calls:
  5925 ;;		_printf
  5926 ;; This function is called by:
  5927 ;;		_stepper
  5928 ;;		_stepper2
  5929 ;;		_stepper2_back
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text15
  5934  001740                     __ptext15:
  5935                           	opt callstack 0
  5936  001740                     _full_drive:
  5937                           	opt callstack 14
  5938                           
  5939                           ; BSR set to: 1
  5940                           ;incstack = 0
  5941                           ;full_drive@direction stored from wreg
  5942  001740  0100               	movlb	0	; () banked
  5943  001742  6FFE               	movwf	full_drive@direction& (0+255),b
  5944                           
  5945                           ;actuators_main.c: 503:     if (stepper_no == 1){
  5946  001744  0100               	movlb	0	; () banked
  5947  001746  05FB               	decf	full_drive@stepper_no& (0+255),w,b
  5948  001748  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5949  00174A  A4D8               	btfss	status,2,c
  5950  00174C  D06B               	goto	l7189
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;actuators_main.c: 504:         if (direction == 1){
  5954  00174E  05FE               	decf	full_drive@direction& (0+255),w,b
  5955  001750  A4D8               	btfss	status,2,c
  5956  001752  D032               	goto	l7173
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;actuators_main.c: 505:             LATA = 0b00000011;
  5960  001754  0E03               	movlw	3
  5961  001756  6E89               	movwf	3977,c	;volatile
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;actuators_main.c: 506:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5965  001758  0E1E               	movlw	30
  5966  00175A  0100               	movlb	0	; () banked
  5967  00175C  6FFD               	movwf	??_full_drive& (0+255),b
  5968  00175E  0E37               	movlw	55
  5969  001760                     u9617:
  5970  001760  2EE8               	decfsz	wreg,f,c
  5971  001762  D7FE               	bra	u9617
  5972  001764  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5973  001766  D7FC               	bra	u9617
  5974                           
  5975                           ;actuators_main.c: 507:             LATA = 0b00000110;
  5976  001768  0E06               	movlw	6
  5977  00176A  6E89               	movwf	3977,c	;volatile
  5978                           
  5979                           ;actuators_main.c: 508:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5980  00176C  0E1E               	movlw	30
  5981  00176E  0100               	movlb	0	; () banked
  5982  001770  6FFD               	movwf	??_full_drive& (0+255),b
  5983  001772  0E37               	movlw	55
  5984  001774                     u9627:
  5985  001774  2EE8               	decfsz	wreg,f,c
  5986  001776  D7FE               	bra	u9627
  5987  001778  2FFD               	decfsz	??_full_drive& (0+255),f,b
  5988  00177A  D7FC               	bra	u9627
  5989                           
  5990                           ;actuators_main.c: 509:             LATA = 0b00001100;
  5991  00177C  0E0C               	movlw	12
  5992  00177E  6E89               	movwf	3977,c	;volatile
  5993                           
  5994                           ;actuators_main.c: 510:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5995  001780  0E1E               	movlw	30
  5996  001782  0100               	movlb	0	; () banked
  5997  001784  6FFD               	movwf	??_full_drive& (0+255),b
  5998  001786  0E37               	movlw	55
  5999  001788                     u9637:
  6000  001788  2EE8               	decfsz	wreg,f,c
  6001  00178A  D7FE               	bra	u9637
  6002  00178C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6003  00178E  D7FC               	bra	u9637
  6004                           
  6005                           ;actuators_main.c: 511:             LATA = 0b00001001;
  6006  001790  0E09               	movlw	9
  6007  001792  6E89               	movwf	3977,c	;volatile
  6008                           
  6009                           ;actuators_main.c: 512:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6010  001794  0E1E               	movlw	30
  6011  001796  0100               	movlb	0	; () banked
  6012  001798  6FFD               	movwf	??_full_drive& (0+255),b
  6013  00179A  0E37               	movlw	55
  6014  00179C                     u9647:
  6015  00179C  2EE8               	decfsz	wreg,f,c
  6016  00179E  D7FE               	bra	u9647
  6017  0017A0  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6018  0017A2  D7FC               	bra	u9647
  6019                           
  6020                           ;actuators_main.c: 513:             LATA = 0b00000011;
  6021  0017A4  0E03               	movlw	3
  6022  0017A6  6E89               	movwf	3977,c	;volatile
  6023                           
  6024                           ;actuators_main.c: 514:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6025  0017A8  0E1E               	movlw	30
  6026  0017AA  0100               	movlb	0	; () banked
  6027  0017AC  6FFD               	movwf	??_full_drive& (0+255),b
  6028  0017AE  0E37               	movlw	55
  6029  0017B0                     u9657:
  6030  0017B0  2EE8               	decfsz	wreg,f,c
  6031  0017B2  D7FE               	bra	u9657
  6032  0017B4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6033  0017B6  D7FC               	bra	u9657
  6034  0017B8                     l7173:
  6035                           
  6036                           ;actuators_main.c: 516:         if (direction == 0){
  6037  0017B8  0100               	movlb	0	; () banked
  6038  0017BA  51FE               	movf	full_drive@direction& (0+255),w,b
  6039  0017BC  A4D8               	btfss	status,2,c
  6040  0017BE  D032               	goto	l7189
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;actuators_main.c: 517:             LATA = 0b00001001;
  6044  0017C0  0E09               	movlw	9
  6045  0017C2  6E89               	movwf	3977,c	;volatile
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;actuators_main.c: 518:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6049  0017C4  0E1E               	movlw	30
  6050  0017C6  0100               	movlb	0	; () banked
  6051  0017C8  6FFD               	movwf	??_full_drive& (0+255),b
  6052  0017CA  0E37               	movlw	55
  6053  0017CC                     u9667:
  6054  0017CC  2EE8               	decfsz	wreg,f,c
  6055  0017CE  D7FE               	bra	u9667
  6056  0017D0  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6057  0017D2  D7FC               	bra	u9667
  6058                           
  6059                           ;actuators_main.c: 519:             LATA = 0b00001100;
  6060  0017D4  0E0C               	movlw	12
  6061  0017D6  6E89               	movwf	3977,c	;volatile
  6062                           
  6063                           ;actuators_main.c: 520:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6064  0017D8  0E1E               	movlw	30
  6065  0017DA  0100               	movlb	0	; () banked
  6066  0017DC  6FFD               	movwf	??_full_drive& (0+255),b
  6067  0017DE  0E37               	movlw	55
  6068  0017E0                     u9677:
  6069  0017E0  2EE8               	decfsz	wreg,f,c
  6070  0017E2  D7FE               	bra	u9677
  6071  0017E4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6072  0017E6  D7FC               	bra	u9677
  6073                           
  6074                           ;actuators_main.c: 521:             LATA = 0b00000110;
  6075  0017E8  0E06               	movlw	6
  6076  0017EA  6E89               	movwf	3977,c	;volatile
  6077                           
  6078                           ;actuators_main.c: 522:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6079  0017EC  0E1E               	movlw	30
  6080  0017EE  0100               	movlb	0	; () banked
  6081  0017F0  6FFD               	movwf	??_full_drive& (0+255),b
  6082  0017F2  0E37               	movlw	55
  6083  0017F4                     u9687:
  6084  0017F4  2EE8               	decfsz	wreg,f,c
  6085  0017F6  D7FE               	bra	u9687
  6086  0017F8  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6087  0017FA  D7FC               	bra	u9687
  6088                           
  6089                           ;actuators_main.c: 523:             LATA = 0b00000011;
  6090  0017FC  0E03               	movlw	3
  6091  0017FE  6E89               	movwf	3977,c	;volatile
  6092                           
  6093                           ;actuators_main.c: 524:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6094  001800  0E1E               	movlw	30
  6095  001802  0100               	movlb	0	; () banked
  6096  001804  6FFD               	movwf	??_full_drive& (0+255),b
  6097  001806  0E37               	movlw	55
  6098  001808                     u9697:
  6099  001808  2EE8               	decfsz	wreg,f,c
  6100  00180A  D7FE               	bra	u9697
  6101  00180C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6102  00180E  D7FC               	bra	u9697
  6103                           
  6104                           ;actuators_main.c: 525:             LATA = 0b00001001;
  6105  001810  0E09               	movlw	9
  6106  001812  6E89               	movwf	3977,c	;volatile
  6107                           
  6108                           ;actuators_main.c: 526:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6109  001814  0E1E               	movlw	30
  6110  001816  0100               	movlb	0	; () banked
  6111  001818  6FFD               	movwf	??_full_drive& (0+255),b
  6112  00181A  0E37               	movlw	55
  6113  00181C                     u9707:
  6114  00181C  2EE8               	decfsz	wreg,f,c
  6115  00181E  D7FE               	bra	u9707
  6116  001820  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6117  001822  D7FC               	bra	u9707
  6118  001824                     l7189:
  6119                           
  6120                           ;actuators_main.c: 529:     if (stepper_no == 2){
  6121  001824  0E02               	movlw	2
  6122  001826  0100               	movlb	0	; () banked
  6123  001828  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6124  00182A  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6125  00182C  A4D8               	btfss	status,2,c
  6126  00182E  D089               	goto	l7267
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;actuators_main.c: 530:         if (direction == 1){
  6130  001830  05FE               	decf	full_drive@direction& (0+255),w,b
  6131  001832  A4D8               	btfss	status,2,c
  6132  001834  D041               	goto	l7229
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;actuators_main.c: 531:             LATCbits.LATC0 = 1;
  6136  001836  808B               	bsf	3979,0,c	;volatile
  6137                           
  6138                           ;actuators_main.c: 532:             LATEbits.LATE0 = 1;
  6139  001838  808D               	bsf	3981,0,c	;volatile
  6140                           
  6141                           ;actuators_main.c: 533:             LATEbits.LATE1 = 0;
  6142  00183A  928D               	bcf	3981,1,c	;volatile
  6143                           
  6144                           ;actuators_main.c: 534:             LATEbits.LATE2 = 0;
  6145  00183C  948D               	bcf	3981,2,c	;volatile
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;actuators_main.c: 535:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6149  00183E  0E0D               	movlw	13
  6150  001840  0100               	movlb	0	; () banked
  6151  001842  6FFD               	movwf	??_full_drive& (0+255),b
  6152  001844  0EFB               	movlw	251
  6153  001846                     u9717:
  6154  001846  2EE8               	decfsz	wreg,f,c
  6155  001848  D7FE               	bra	u9717
  6156  00184A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6157  00184C  D7FC               	bra	u9717
  6158  00184E  D000               	nop2	
  6159                           
  6160                           ;actuators_main.c: 536:             LATCbits.LATC0 = 0;
  6161  001850  908B               	bcf	3979,0,c	;volatile
  6162                           
  6163                           ;actuators_main.c: 537:             LATEbits.LATE0 = 1;
  6164  001852  808D               	bsf	3981,0,c	;volatile
  6165                           
  6166                           ;actuators_main.c: 538:             LATEbits.LATE1 = 1;
  6167  001854  828D               	bsf	3981,1,c	;volatile
  6168                           
  6169                           ;actuators_main.c: 539:             LATEbits.LATE2 = 0;
  6170  001856  948D               	bcf	3981,2,c	;volatile
  6171                           
  6172                           ;actuators_main.c: 540:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6173  001858  0E0D               	movlw	13
  6174  00185A  0100               	movlb	0	; () banked
  6175  00185C  6FFD               	movwf	??_full_drive& (0+255),b
  6176  00185E  0EFB               	movlw	251
  6177  001860                     u9727:
  6178  001860  2EE8               	decfsz	wreg,f,c
  6179  001862  D7FE               	bra	u9727
  6180  001864  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6181  001866  D7FC               	bra	u9727
  6182  001868  D000               	nop2	
  6183                           
  6184                           ;actuators_main.c: 541:             LATCbits.LATC0 = 0;
  6185  00186A  908B               	bcf	3979,0,c	;volatile
  6186                           
  6187                           ;actuators_main.c: 542:             LATEbits.LATE0 = 0;
  6188  00186C  908D               	bcf	3981,0,c	;volatile
  6189                           
  6190                           ;actuators_main.c: 543:             LATEbits.LATE1 = 1;
  6191  00186E  828D               	bsf	3981,1,c	;volatile
  6192                           
  6193                           ;actuators_main.c: 544:             LATEbits.LATE2 = 1;
  6194  001870  848D               	bsf	3981,2,c	;volatile
  6195                           
  6196                           ;actuators_main.c: 545:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6197  001872  0E0D               	movlw	13
  6198  001874  0100               	movlb	0	; () banked
  6199  001876  6FFD               	movwf	??_full_drive& (0+255),b
  6200  001878  0EFB               	movlw	251
  6201  00187A                     u9737:
  6202  00187A  2EE8               	decfsz	wreg,f,c
  6203  00187C  D7FE               	bra	u9737
  6204  00187E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6205  001880  D7FC               	bra	u9737
  6206  001882  D000               	nop2	
  6207                           
  6208                           ;actuators_main.c: 546:             LATCbits.LATC0 = 1;
  6209  001884  808B               	bsf	3979,0,c	;volatile
  6210                           
  6211                           ;actuators_main.c: 547:             LATEbits.LATE0 = 0;
  6212  001886  908D               	bcf	3981,0,c	;volatile
  6213                           
  6214                           ;actuators_main.c: 548:             LATEbits.LATE1 = 0;
  6215  001888  928D               	bcf	3981,1,c	;volatile
  6216                           
  6217                           ;actuators_main.c: 549:             LATEbits.LATE2 = 1;
  6218  00188A  848D               	bsf	3981,2,c	;volatile
  6219                           
  6220                           ;actuators_main.c: 550:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6221  00188C  0E0D               	movlw	13
  6222  00188E  0100               	movlb	0	; () banked
  6223  001890  6FFD               	movwf	??_full_drive& (0+255),b
  6224  001892  0EFB               	movlw	251
  6225  001894                     u9747:
  6226  001894  2EE8               	decfsz	wreg,f,c
  6227  001896  D7FE               	bra	u9747
  6228  001898  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6229  00189A  D7FC               	bra	u9747
  6230  00189C  D000               	nop2	
  6231                           
  6232                           ;actuators_main.c: 551:             LATCbits.LATC0 = 1;
  6233  00189E  808B               	bsf	3979,0,c	;volatile
  6234                           
  6235                           ;actuators_main.c: 552:             LATEbits.LATE0 = 1;
  6236  0018A0  808D               	bsf	3981,0,c	;volatile
  6237                           
  6238                           ;actuators_main.c: 553:             LATEbits.LATE1 = 0;
  6239  0018A2  928D               	bcf	3981,1,c	;volatile
  6240                           
  6241                           ;actuators_main.c: 554:             LATEbits.LATE2 = 0;
  6242  0018A4  948D               	bcf	3981,2,c	;volatile
  6243                           
  6244                           ;actuators_main.c: 555:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6245  0018A6  0E0D               	movlw	13
  6246  0018A8  0100               	movlb	0	; () banked
  6247  0018AA  6FFD               	movwf	??_full_drive& (0+255),b
  6248  0018AC  0EFB               	movlw	251
  6249  0018AE                     u9757:
  6250  0018AE  2EE8               	decfsz	wreg,f,c
  6251  0018B0  D7FE               	bra	u9757
  6252  0018B2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6253  0018B4  D7FC               	bra	u9757
  6254  0018B6  D000               	nop2	
  6255  0018B8                     l7229:
  6256                           
  6257                           ;actuators_main.c: 557:         if (direction == 0){
  6258  0018B8  0100               	movlb	0	; () banked
  6259  0018BA  51FE               	movf	full_drive@direction& (0+255),w,b
  6260  0018BC  A4D8               	btfss	status,2,c
  6261  0018BE  D041               	goto	l7267
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;actuators_main.c: 558:             LATCbits.LATC0 = 1;
  6265  0018C0  808B               	bsf	3979,0,c	;volatile
  6266                           
  6267                           ;actuators_main.c: 559:             LATEbits.LATE0 = 0;
  6268  0018C2  908D               	bcf	3981,0,c	;volatile
  6269                           
  6270                           ;actuators_main.c: 560:             LATEbits.LATE1 = 0;
  6271  0018C4  928D               	bcf	3981,1,c	;volatile
  6272                           
  6273                           ;actuators_main.c: 561:             LATEbits.LATE2 = 1;
  6274  0018C6  848D               	bsf	3981,2,c	;volatile
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;actuators_main.c: 562:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6278  0018C8  0E0D               	movlw	13
  6279  0018CA  0100               	movlb	0	; () banked
  6280  0018CC  6FFD               	movwf	??_full_drive& (0+255),b
  6281  0018CE  0EFB               	movlw	251
  6282  0018D0                     u9767:
  6283  0018D0  2EE8               	decfsz	wreg,f,c
  6284  0018D2  D7FE               	bra	u9767
  6285  0018D4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6286  0018D6  D7FC               	bra	u9767
  6287  0018D8  D000               	nop2	
  6288                           
  6289                           ;actuators_main.c: 563:             LATCbits.LATC0 = 0;
  6290  0018DA  908B               	bcf	3979,0,c	;volatile
  6291                           
  6292                           ;actuators_main.c: 564:             LATEbits.LATE0 = 0;
  6293  0018DC  908D               	bcf	3981,0,c	;volatile
  6294                           
  6295                           ;actuators_main.c: 565:             LATEbits.LATE1 = 1;
  6296  0018DE  828D               	bsf	3981,1,c	;volatile
  6297                           
  6298                           ;actuators_main.c: 566:             LATEbits.LATE2 = 1;
  6299  0018E0  848D               	bsf	3981,2,c	;volatile
  6300                           
  6301                           ;actuators_main.c: 567:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6302  0018E2  0E0D               	movlw	13
  6303  0018E4  0100               	movlb	0	; () banked
  6304  0018E6  6FFD               	movwf	??_full_drive& (0+255),b
  6305  0018E8  0EFB               	movlw	251
  6306  0018EA                     u9777:
  6307  0018EA  2EE8               	decfsz	wreg,f,c
  6308  0018EC  D7FE               	bra	u9777
  6309  0018EE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6310  0018F0  D7FC               	bra	u9777
  6311  0018F2  D000               	nop2	
  6312                           
  6313                           ;actuators_main.c: 568:             LATCbits.LATC0 = 0;
  6314  0018F4  908B               	bcf	3979,0,c	;volatile
  6315                           
  6316                           ;actuators_main.c: 569:             LATEbits.LATE0 = 1;
  6317  0018F6  808D               	bsf	3981,0,c	;volatile
  6318                           
  6319                           ;actuators_main.c: 570:             LATEbits.LATE1 = 1;
  6320  0018F8  828D               	bsf	3981,1,c	;volatile
  6321                           
  6322                           ;actuators_main.c: 571:             LATEbits.LATE2 = 0;
  6323  0018FA  948D               	bcf	3981,2,c	;volatile
  6324                           
  6325                           ;actuators_main.c: 572:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6326  0018FC  0E0D               	movlw	13
  6327  0018FE  0100               	movlb	0	; () banked
  6328  001900  6FFD               	movwf	??_full_drive& (0+255),b
  6329  001902  0EFB               	movlw	251
  6330  001904                     u9787:
  6331  001904  2EE8               	decfsz	wreg,f,c
  6332  001906  D7FE               	bra	u9787
  6333  001908  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6334  00190A  D7FC               	bra	u9787
  6335  00190C  D000               	nop2	
  6336                           
  6337                           ;actuators_main.c: 573:             LATCbits.LATC0 = 1;
  6338  00190E  808B               	bsf	3979,0,c	;volatile
  6339                           
  6340                           ;actuators_main.c: 574:             LATEbits.LATE0 = 1;
  6341  001910  808D               	bsf	3981,0,c	;volatile
  6342                           
  6343                           ;actuators_main.c: 575:             LATEbits.LATE1 = 0;
  6344  001912  928D               	bcf	3981,1,c	;volatile
  6345                           
  6346                           ;actuators_main.c: 576:             LATEbits.LATE2 = 0;
  6347  001914  948D               	bcf	3981,2,c	;volatile
  6348                           
  6349                           ;actuators_main.c: 577:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6350  001916  0E0D               	movlw	13
  6351  001918  0100               	movlb	0	; () banked
  6352  00191A  6FFD               	movwf	??_full_drive& (0+255),b
  6353  00191C  0EFB               	movlw	251
  6354  00191E                     u9797:
  6355  00191E  2EE8               	decfsz	wreg,f,c
  6356  001920  D7FE               	bra	u9797
  6357  001922  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6358  001924  D7FC               	bra	u9797
  6359  001926  D000               	nop2	
  6360                           
  6361                           ;actuators_main.c: 578:             LATCbits.LATC0 = 1;
  6362  001928  808B               	bsf	3979,0,c	;volatile
  6363                           
  6364                           ;actuators_main.c: 579:             LATEbits.LATE0 = 0;
  6365  00192A  908D               	bcf	3981,0,c	;volatile
  6366                           
  6367                           ;actuators_main.c: 580:             LATEbits.LATE1 = 0;
  6368  00192C  928D               	bcf	3981,1,c	;volatile
  6369                           
  6370                           ;actuators_main.c: 581:             LATEbits.LATE2 = 1;
  6371  00192E  848D               	bsf	3981,2,c	;volatile
  6372                           
  6373                           ;actuators_main.c: 582:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6374  001930  0E0D               	movlw	13
  6375  001932  0100               	movlb	0	; () banked
  6376  001934  6FFD               	movwf	??_full_drive& (0+255),b
  6377  001936  0EFB               	movlw	251
  6378  001938                     u9807:
  6379  001938  2EE8               	decfsz	wreg,f,c
  6380  00193A  D7FE               	bra	u9807
  6381  00193C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6382  00193E  D7FC               	bra	u9807
  6383  001940  D000               	nop2	
  6384  001942                     l7267:
  6385                           
  6386                           ;actuators_main.c: 585:     if (stepper_no == 3){
  6387  001942  0E03               	movlw	3
  6388  001944  0100               	movlb	0	; () banked
  6389  001946  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6390  001948  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6391  00194A  A4D8               	btfss	status,2,c
  6392  00194C  D086               	goto	l7347
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;actuators_main.c: 586:         printf("what");
  6396  00194E  0EFA               	movlw	low STR_9
  6397  001950  6FED               	movwf	printf@fmt& (0+255),b
  6398  001952  0EFF               	movlw	high STR_9
  6399  001954  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6400  001956  ECFC  F01E         	call	_printf	;wreg free
  6401                           
  6402                           ;actuators_main.c: 587:         if (direction == 0){
  6403  00195A  0100               	movlb	0	; () banked
  6404  00195C  51FE               	movf	full_drive@direction& (0+255),w,b
  6405  00195E  A4D8               	btfss	status,2,c
  6406  001960  D03C               	goto	l7309
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;actuators_main.c: 588:             LATCbits.LATC5 = 1;
  6410  001962  8A8B               	bsf	3979,5,c	;volatile
  6411                           
  6412                           ;actuators_main.c: 589:             LATCbits.LATC6 = 0;
  6413  001964  9C8B               	bcf	3979,6,c	;volatile
  6414                           
  6415                           ;actuators_main.c: 590:             LATCbits.LATC7 = 0;
  6416  001966  9E8B               	bcf	3979,7,c	;volatile
  6417                           
  6418                           ;actuators_main.c: 591:             LATAbits.LATA5 = 1;
  6419  001968  8A89               	bsf	3977,5,c	;volatile
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;actuators_main.c: 592:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6423  00196A  0E1E               	movlw	30
  6424  00196C  0100               	movlb	0	; () banked
  6425  00196E  6FFD               	movwf	??_full_drive& (0+255),b
  6426  001970  0E37               	movlw	55
  6427  001972                     u9817:
  6428  001972  2EE8               	decfsz	wreg,f,c
  6429  001974  D7FE               	bra	u9817
  6430  001976  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6431  001978  D7FC               	bra	u9817
  6432                           
  6433                           ;actuators_main.c: 593:             LATCbits.LATC5 = 1;
  6434  00197A  8A8B               	bsf	3979,5,c	;volatile
  6435                           
  6436                           ;actuators_main.c: 594:             LATCbits.LATC6 = 1;
  6437  00197C  8C8B               	bsf	3979,6,c	;volatile
  6438                           
  6439                           ;actuators_main.c: 595:             LATCbits.LATC7 = 0;
  6440  00197E  9E8B               	bcf	3979,7,c	;volatile
  6441                           
  6442                           ;actuators_main.c: 596:             LATAbits.LATA5 = 0;
  6443  001980  9A89               	bcf	3977,5,c	;volatile
  6444                           
  6445                           ;actuators_main.c: 597:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6446  001982  0E1E               	movlw	30
  6447  001984  0100               	movlb	0	; () banked
  6448  001986  6FFD               	movwf	??_full_drive& (0+255),b
  6449  001988  0E37               	movlw	55
  6450  00198A                     u9827:
  6451  00198A  2EE8               	decfsz	wreg,f,c
  6452  00198C  D7FE               	bra	u9827
  6453  00198E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6454  001990  D7FC               	bra	u9827
  6455                           
  6456                           ;actuators_main.c: 598:             LATCbits.LATC5 = 0;
  6457  001992  9A8B               	bcf	3979,5,c	;volatile
  6458                           
  6459                           ;actuators_main.c: 599:             LATCbits.LATC6 = 1;
  6460  001994  8C8B               	bsf	3979,6,c	;volatile
  6461                           
  6462                           ;actuators_main.c: 600:             LATCbits.LATC7 = 1;
  6463  001996  8E8B               	bsf	3979,7,c	;volatile
  6464                           
  6465                           ;actuators_main.c: 601:             LATAbits.LATA5 = 0;
  6466  001998  9A89               	bcf	3977,5,c	;volatile
  6467                           
  6468                           ;actuators_main.c: 602:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6469  00199A  0E1E               	movlw	30
  6470  00199C  0100               	movlb	0	; () banked
  6471  00199E  6FFD               	movwf	??_full_drive& (0+255),b
  6472  0019A0  0E37               	movlw	55
  6473  0019A2                     u9837:
  6474  0019A2  2EE8               	decfsz	wreg,f,c
  6475  0019A4  D7FE               	bra	u9837
  6476  0019A6  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6477  0019A8  D7FC               	bra	u9837
  6478                           
  6479                           ;actuators_main.c: 603:             LATCbits.LATC5 = 0;
  6480  0019AA  9A8B               	bcf	3979,5,c	;volatile
  6481                           
  6482                           ;actuators_main.c: 604:             LATCbits.LATC6 = 0;
  6483  0019AC  9C8B               	bcf	3979,6,c	;volatile
  6484                           
  6485                           ;actuators_main.c: 605:             LATCbits.LATC7 = 1;
  6486  0019AE  8E8B               	bsf	3979,7,c	;volatile
  6487                           
  6488                           ;actuators_main.c: 606:             LATAbits.LATA5 = 1;
  6489  0019B0  8A89               	bsf	3977,5,c	;volatile
  6490                           
  6491                           ;actuators_main.c: 607:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6492  0019B2  0E1E               	movlw	30
  6493  0019B4  0100               	movlb	0	; () banked
  6494  0019B6  6FFD               	movwf	??_full_drive& (0+255),b
  6495  0019B8  0E37               	movlw	55
  6496  0019BA                     u9847:
  6497  0019BA  2EE8               	decfsz	wreg,f,c
  6498  0019BC  D7FE               	bra	u9847
  6499  0019BE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6500  0019C0  D7FC               	bra	u9847
  6501                           
  6502                           ;actuators_main.c: 608:             LATCbits.LATC5 = 1;
  6503  0019C2  8A8B               	bsf	3979,5,c	;volatile
  6504                           
  6505                           ;actuators_main.c: 609:             LATCbits.LATC6 = 0;
  6506  0019C4  9C8B               	bcf	3979,6,c	;volatile
  6507                           
  6508                           ;actuators_main.c: 610:             LATCbits.LATC7 = 0;
  6509  0019C6  9E8B               	bcf	3979,7,c	;volatile
  6510                           
  6511                           ;actuators_main.c: 611:             LATAbits.LATA5 = 1;
  6512  0019C8  8A89               	bsf	3977,5,c	;volatile
  6513                           
  6514                           ;actuators_main.c: 612:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6515  0019CA  0E1E               	movlw	30
  6516  0019CC  0100               	movlb	0	; () banked
  6517  0019CE  6FFD               	movwf	??_full_drive& (0+255),b
  6518  0019D0  0E37               	movlw	55
  6519  0019D2                     u9857:
  6520  0019D2  2EE8               	decfsz	wreg,f,c
  6521  0019D4  D7FE               	bra	u9857
  6522  0019D6  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6523  0019D8  D7FC               	bra	u9857
  6524  0019DA                     l7309:
  6525                           
  6526                           ;actuators_main.c: 614:         if (direction == 1){
  6527  0019DA  0100               	movlb	0	; () banked
  6528  0019DC  05FE               	decf	full_drive@direction& (0+255),w,b
  6529  0019DE  A4D8               	btfss	status,2,c
  6530  0019E0  D03C               	goto	l7347
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;actuators_main.c: 615:             LATCbits.LATC5 = 1;
  6534  0019E2  8A8B               	bsf	3979,5,c	;volatile
  6535                           
  6536                           ;actuators_main.c: 616:             LATCbits.LATC6 = 1;
  6537  0019E4  8C8B               	bsf	3979,6,c	;volatile
  6538                           
  6539                           ;actuators_main.c: 617:             LATCbits.LATC7 = 0;
  6540  0019E6  9E8B               	bcf	3979,7,c	;volatile
  6541                           
  6542                           ;actuators_main.c: 618:             LATAbits.LATA5 = 0;
  6543  0019E8  9A89               	bcf	3977,5,c	;volatile
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;actuators_main.c: 619:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6547  0019EA  0E1E               	movlw	30
  6548  0019EC  0100               	movlb	0	; () banked
  6549  0019EE  6FFD               	movwf	??_full_drive& (0+255),b
  6550  0019F0  0E37               	movlw	55
  6551  0019F2                     u9867:
  6552  0019F2  2EE8               	decfsz	wreg,f,c
  6553  0019F4  D7FE               	bra	u9867
  6554  0019F6  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6555  0019F8  D7FC               	bra	u9867
  6556                           
  6557                           ;actuators_main.c: 620:             LATCbits.LATC5 = 0;
  6558  0019FA  9A8B               	bcf	3979,5,c	;volatile
  6559                           
  6560                           ;actuators_main.c: 621:             LATCbits.LATC6 = 1;
  6561  0019FC  8C8B               	bsf	3979,6,c	;volatile
  6562                           
  6563                           ;actuators_main.c: 622:             LATCbits.LATC7 = 1;
  6564  0019FE  8E8B               	bsf	3979,7,c	;volatile
  6565                           
  6566                           ;actuators_main.c: 623:             LATAbits.LATA5 = 0;
  6567  001A00  9A89               	bcf	3977,5,c	;volatile
  6568                           
  6569                           ;actuators_main.c: 624:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6570  001A02  0E1E               	movlw	30
  6571  001A04  0100               	movlb	0	; () banked
  6572  001A06  6FFD               	movwf	??_full_drive& (0+255),b
  6573  001A08  0E37               	movlw	55
  6574  001A0A                     u9877:
  6575  001A0A  2EE8               	decfsz	wreg,f,c
  6576  001A0C  D7FE               	bra	u9877
  6577  001A0E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6578  001A10  D7FC               	bra	u9877
  6579                           
  6580                           ;actuators_main.c: 625:             LATCbits.LATC5 = 0;
  6581  001A12  9A8B               	bcf	3979,5,c	;volatile
  6582                           
  6583                           ;actuators_main.c: 626:             LATCbits.LATC6 = 0;
  6584  001A14  9C8B               	bcf	3979,6,c	;volatile
  6585                           
  6586                           ;actuators_main.c: 627:             LATCbits.LATC7 = 1;
  6587  001A16  8E8B               	bsf	3979,7,c	;volatile
  6588                           
  6589                           ;actuators_main.c: 628:             LATAbits.LATA5 = 1;
  6590  001A18  8A89               	bsf	3977,5,c	;volatile
  6591                           
  6592                           ;actuators_main.c: 629:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6593  001A1A  0E1E               	movlw	30
  6594  001A1C  0100               	movlb	0	; () banked
  6595  001A1E  6FFD               	movwf	??_full_drive& (0+255),b
  6596  001A20  0E37               	movlw	55
  6597  001A22                     u9887:
  6598  001A22  2EE8               	decfsz	wreg,f,c
  6599  001A24  D7FE               	bra	u9887
  6600  001A26  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6601  001A28  D7FC               	bra	u9887
  6602                           
  6603                           ;actuators_main.c: 630:             LATCbits.LATC5 = 1;
  6604  001A2A  8A8B               	bsf	3979,5,c	;volatile
  6605                           
  6606                           ;actuators_main.c: 631:             LATCbits.LATC6 = 0;
  6607  001A2C  9C8B               	bcf	3979,6,c	;volatile
  6608                           
  6609                           ;actuators_main.c: 632:             LATCbits.LATC7 = 0;
  6610  001A2E  9E8B               	bcf	3979,7,c	;volatile
  6611                           
  6612                           ;actuators_main.c: 633:             LATAbits.LATA5 = 1;
  6613  001A30  8A89               	bsf	3977,5,c	;volatile
  6614                           
  6615                           ;actuators_main.c: 634:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6616  001A32  0E1E               	movlw	30
  6617  001A34  0100               	movlb	0	; () banked
  6618  001A36  6FFD               	movwf	??_full_drive& (0+255),b
  6619  001A38  0E37               	movlw	55
  6620  001A3A                     u9897:
  6621  001A3A  2EE8               	decfsz	wreg,f,c
  6622  001A3C  D7FE               	bra	u9897
  6623  001A3E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6624  001A40  D7FC               	bra	u9897
  6625                           
  6626                           ;actuators_main.c: 635:             LATCbits.LATC5 = 1;
  6627  001A42  8A8B               	bsf	3979,5,c	;volatile
  6628                           
  6629                           ;actuators_main.c: 636:             LATCbits.LATC6 = 1;
  6630  001A44  8C8B               	bsf	3979,6,c	;volatile
  6631                           
  6632                           ;actuators_main.c: 637:             LATCbits.LATC7 = 0;
  6633  001A46  9E8B               	bcf	3979,7,c	;volatile
  6634                           
  6635                           ;actuators_main.c: 638:             LATAbits.LATA5 = 0;
  6636  001A48  9A89               	bcf	3977,5,c	;volatile
  6637                           
  6638                           ;actuators_main.c: 639:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6639  001A4A  0E1E               	movlw	30
  6640  001A4C  0100               	movlb	0	; () banked
  6641  001A4E  6FFD               	movwf	??_full_drive& (0+255),b
  6642  001A50  0E37               	movlw	55
  6643  001A52                     u9907:
  6644  001A52  2EE8               	decfsz	wreg,f,c
  6645  001A54  D7FE               	bra	u9907
  6646  001A56  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6647  001A58  D7FC               	bra	u9907
  6648  001A5A                     l7347:
  6649                           
  6650                           ;actuators_main.c: 642:                     LATA = 0b00000000;
  6651  001A5A  0E00               	movlw	0
  6652  001A5C  6E89               	movwf	3977,c	;volatile
  6653                           
  6654                           ;actuators_main.c: 643:         LATCbits.LATC0 = 0;
  6655  001A5E  908B               	bcf	3979,0,c	;volatile
  6656                           
  6657                           ;actuators_main.c: 644:         LATEbits.LATE0 = 0;
  6658  001A60  908D               	bcf	3981,0,c	;volatile
  6659                           
  6660                           ;actuators_main.c: 645:         LATEbits.LATE1 = 0;
  6661  001A62  928D               	bcf	3981,1,c	;volatile
  6662                           
  6663                           ;actuators_main.c: 646:         LATEbits.LATE2 = 0;
  6664  001A64  948D               	bcf	3981,2,c	;volatile
  6665                           
  6666                           ;actuators_main.c: 647:         LATCbits.LATC5 = 0;
  6667  001A66  9A8B               	bcf	3979,5,c	;volatile
  6668                           
  6669                           ;actuators_main.c: 648:         LATCbits.LATC6 = 0;
  6670  001A68  9C8B               	bcf	3979,6,c	;volatile
  6671                           
  6672                           ;actuators_main.c: 649:         LATCbits.LATC7 = 0;
  6673  001A6A  9E8B               	bcf	3979,7,c	;volatile
  6674                           
  6675                           ;actuators_main.c: 650:         LATAbits.LATA5 = 0;
  6676  001A6C  9A89               	bcf	3977,5,c	;volatile
  6677  001A6E  0012               	return		;funcret
  6678  001A70                     __end_of_full_drive:
  6679                           	opt callstack 0
  6680                           
  6681 ;; *************** function _servo *****************
  6682 ;; Defined at:
  6683 ;;		line 188 in file "actuators_main.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;		None
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;		None
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      void 
  6690 ;; Registers used:
  6691 ;;		wreg, status,2, status,0, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;Total ram usage:        2 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    4
  6704 ;; This function calls:
  6705 ;;		_servoRotate0
  6706 ;;		_servoRotate180
  6707 ;; This function is called by:
  6708 ;;		_actuators_main
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text16
  6713  0033A8                     __ptext16:
  6714                           	opt callstack 0
  6715  0033A8                     _servo:
  6716                           	opt callstack 25
  6717                           
  6718                           ;actuators_main.c: 190:   TRISB = 0;
  6719                           
  6720                           ;incstack = 0
  6721  0033A8  0E00               	movlw	0
  6722  0033AA  6E93               	movwf	3987,c	;volatile
  6723                           
  6724                           ;actuators_main.c: 191:     TRISC = 0;
  6725  0033AC  0E00               	movlw	0
  6726  0033AE  6E94               	movwf	3988,c	;volatile
  6727                           
  6728                           ;actuators_main.c: 192:     TRISD = 0;
  6729  0033B0  0E00               	movlw	0
  6730  0033B2  6E95               	movwf	3989,c	;volatile
  6731                           
  6732                           ;actuators_main.c: 194:       TRISBbits.RB0 = 0;
  6733  0033B4  9093               	bcf	3987,0,c	;volatile
  6734                           
  6735                           ;actuators_main.c: 195:     LATBbits.LATB0 = 1;
  6736  0033B6  808A               	bsf	3978,0,c	;volatile
  6737                           
  6738                           ;actuators_main.c: 196:     {;actuators_main.c: 198:     servoRotate0(1);
  6739  0033B8  0E00               	movlw	0
  6740  0033BA  0100               	movlb	0	; () banked
  6741  0033BC  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6742  0033BE  0E01               	movlw	1
  6743  0033C0  6F80               	movwf	servoRotate0@servo& (0+255),b
  6744  0033C2  EC5E  F019         	call	_servoRotate0	;wreg free
  6745                           
  6746                           ;actuators_main.c: 202:     servoRotate180(1);
  6747  0033C6  0E00               	movlw	0
  6748  0033C8  0100               	movlb	0	; () banked
  6749  0033CA  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6750  0033CC  0E01               	movlw	1
  6751  0033CE  6F80               	movwf	servoRotate180@servo& (0+255),b
  6752  0033D0  ECE6  F018         	call	_servoRotate180	;wreg free
  6753                           
  6754                           ;actuators_main.c: 203:     _delay((unsigned long)((400)*(10000000/4000.0)));
  6755  0033D4  0E06               	movlw	6
  6756  0033D6  0100               	movlb	0	; () banked
  6757  0033D8  6F86               	movwf	(??_servo+1)& (0+255),b
  6758  0033DA  0E13               	movlw	19
  6759  0033DC  6F85               	movwf	??_servo& (0+255),b
  6760  0033DE  0EAD               	movlw	173
  6761  0033E0                     u9917:
  6762  0033E0  2EE8               	decfsz	wreg,f,c
  6763  0033E2  D7FE               	bra	u9917
  6764  0033E4  2F85               	decfsz	??_servo& (0+255),f,b
  6765  0033E6  D7FC               	bra	u9917
  6766  0033E8  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  6767  0033EA  D7FA               	bra	u9917
  6768  0033EC  D000               	nop2	
  6769                           
  6770                           ;actuators_main.c: 204:     servoRotate0(1);
  6771  0033EE  0E00               	movlw	0
  6772  0033F0  0100               	movlb	0	; () banked
  6773  0033F2  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6774  0033F4  0E01               	movlw	1
  6775  0033F6  6F80               	movwf	servoRotate0@servo& (0+255),b
  6776  0033F8  EC5E  F019         	call	_servoRotate0	;wreg free
  6777                           
  6778                           ;actuators_main.c: 206:     servoRotate180(2);
  6779  0033FC  0E00               	movlw	0
  6780  0033FE  0100               	movlb	0	; () banked
  6781  003400  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6782  003402  0E02               	movlw	2
  6783  003404  6F80               	movwf	servoRotate180@servo& (0+255),b
  6784  003406  ECE6  F018         	call	_servoRotate180	;wreg free
  6785                           
  6786                           ;actuators_main.c: 207:     servoRotate0(2);
  6787  00340A  0E00               	movlw	0
  6788  00340C  0100               	movlb	0	; () banked
  6789  00340E  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6790  003410  0E02               	movlw	2
  6791  003412  6F80               	movwf	servoRotate0@servo& (0+255),b
  6792  003414  EC5E  F019         	call	_servoRotate0	;wreg free
  6793                           
  6794                           ;actuators_main.c: 208:     servoRotate180(2);
  6795  003418  0E00               	movlw	0
  6796  00341A  0100               	movlb	0	; () banked
  6797  00341C  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6798  00341E  0E02               	movlw	2
  6799  003420  6F80               	movwf	servoRotate180@servo& (0+255),b
  6800  003422  ECE6  F018         	call	_servoRotate180	;wreg free
  6801                           
  6802                           ;actuators_main.c: 210:     _delay((unsigned long)((50)*(10000000/4000.0)));
  6803  003426  0EA3               	movlw	163
  6804  003428  0100               	movlb	0	; () banked
  6805  00342A  6F85               	movwf	??_servo& (0+255),b
  6806  00342C  0E55               	movlw	85
  6807  00342E                     u9927:
  6808  00342E  2EE8               	decfsz	wreg,f,c
  6809  003430  D7FE               	bra	u9927
  6810  003432  2F85               	decfsz	??_servo& (0+255),f,b
  6811  003434  D7FC               	bra	u9927
  6812                           
  6813                           ;actuators_main.c: 211:         servoRotate0(3);
  6814  003436  0E00               	movlw	0
  6815  003438  0100               	movlb	0	; () banked
  6816  00343A  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6817  00343C  0E03               	movlw	3
  6818  00343E  6F80               	movwf	servoRotate0@servo& (0+255),b
  6819  003440  EC5E  F019         	call	_servoRotate0	;wreg free
  6820                           
  6821                           ;actuators_main.c: 212:     servoRotate0(3);
  6822  003444  0E00               	movlw	0
  6823  003446  0100               	movlb	0	; () banked
  6824  003448  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6825  00344A  0E03               	movlw	3
  6826  00344C  6F80               	movwf	servoRotate0@servo& (0+255),b
  6827  00344E  EC5E  F019         	call	_servoRotate0	;wreg free
  6828                           
  6829                           ;actuators_main.c: 213:     servoRotate180(3);
  6830  003452  0E00               	movlw	0
  6831  003454  0100               	movlb	0	; () banked
  6832  003456  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6833  003458  0E03               	movlw	3
  6834  00345A  6F80               	movwf	servoRotate180@servo& (0+255),b
  6835  00345C  ECE6  F018         	call	_servoRotate180	;wreg free
  6836  003460  0012               	return		;funcret
  6837  003462                     __end_of_servo:
  6838                           	opt callstack 0
  6839                           
  6840 ;; *************** function _servoRotate180 *****************
  6841 ;; Defined at:
  6842 ;;		line 142 in file "actuators_main.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  servo           2    0[BANK0 ] int 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  i               2    3[BANK0 ] unsigned int 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6856 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;Total ram usage:        5 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    3
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_servo
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text17
  6871  0031CC                     __ptext17:
  6872                           	opt callstack 0
  6873  0031CC                     _servoRotate180:
  6874                           	opt callstack 25
  6875                           
  6876                           ;actuators_main.c: 142: void servoRotate180(int servo);actuators_main.c: 143: {;actuator
      +                          s_main.c: 144:   unsigned int i;;actuators_main.c: 145:     if (servo==1){
  6877                           
  6878                           ;incstack = 0
  6879  0031CC  0100               	movlb	0	; () banked
  6880  0031CE  0580               	decf	servoRotate180@servo& (0+255),w,b
  6881  0031D0  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6882  0031D2  A4D8               	btfss	status,2,c
  6883  0031D4  D027               	goto	u7760
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;actuators_main.c: 146:     for(i=0;i<30;i++)
  6887  0031D6  0E00               	movlw	0
  6888  0031D8  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6889  0031DA  0E00               	movlw	0
  6890  0031DC  6F83               	movwf	servoRotate180@i& (0+255),b
  6891  0031DE                     l134:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;actuators_main.c: 147:         {;actuators_main.c: 148:           RC1 = 1;
  6895  0031DE  8282               	bsf	3970,1,c	;volatile
  6896                           
  6897                           ;actuators_main.c: 149:             RC2 = 1;
  6898  0031E0  8482               	bsf	3970,2,c	;volatile
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;actuators_main.c: 150:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  6902  0031E2  0EE1               	movlw	225
  6903  0031E4                     u9937:
  6904  0031E4  D000               	nop2	
  6905  0031E6  2EE8               	decfsz	wreg,f,c
  6906  0031E8  D7FD               	bra	u9937
  6907                           
  6908                           ;actuators_main.c: 152:           RC2 =0;
  6909  0031EA  9482               	bcf	3970,2,c	;volatile
  6910                           
  6911                           ;actuators_main.c: 153:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6912  0031EC  0E07               	movlw	7
  6913  0031EE  0100               	movlb	0	; () banked
  6914  0031F0  6F82               	movwf	??_servoRotate180& (0+255),b
  6915  0031F2  0ED0               	movlw	208
  6916  0031F4                     u9947:
  6917  0031F4  2EE8               	decfsz	wreg,f,c
  6918  0031F6  D7FE               	bra	u9947
  6919  0031F8  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6920  0031FA  D7FC               	bra	u9947
  6921  0031FC  F000               	nop	
  6922                           
  6923                           ;actuators_main.c: 155:           RC1 = 0;
  6924  0031FE  9282               	bcf	3970,1,c	;volatile
  6925                           
  6926                           ;actuators_main.c: 156:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  6927  003200  0E2C               	movlw	44
  6928  003202  0100               	movlb	0	; () banked
  6929  003204  6F82               	movwf	??_servoRotate180& (0+255),b
  6930  003206  0EFD               	movlw	253
  6931  003208                     u9957:
  6932  003208  2EE8               	decfsz	wreg,f,c
  6933  00320A  D7FE               	bra	u9957
  6934  00320C  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6935  00320E  D7FC               	bra	u9957
  6936  003210  F000               	nop	
  6937                           
  6938                           ;actuators_main.c: 157:         }
  6939  003212  0100               	movlb	0	; () banked
  6940  003214  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6941  003216  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6942  003218  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6943  00321A  E104               	bnz	u7760
  6944  00321C  0E1E               	movlw	30
  6945  00321E  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6946  003220  A0D8               	btfss	status,0,c
  6947  003222  D7DD               	goto	l134
  6948  003224                     u7760:
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;actuators_main.c: 159:   if (servo==2){
  6952  003224  0E02               	movlw	2
  6953  003226  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  6954  003228  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6955  00322A  A4D8               	btfss	status,2,c
  6956  00322C  D01F               	goto	u7780
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;actuators_main.c: 160:     for(i=0;i<30;i++)
  6960  00322E  0E00               	movlw	0
  6961  003230  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6962  003232  0E00               	movlw	0
  6963  003234  6F83               	movwf	servoRotate180@i& (0+255),b
  6964  003236                     l137:
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;actuators_main.c: 161:           {;actuators_main.c: 163:     RD1 = 1;
  6968  003236  8283               	bsf	3971,1,c	;volatile
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;actuators_main.c: 166:     _delay((unsigned long)((525)*(10000000/4000000.0)));
  6972  003238  0EBB               	movlw	187
  6973  00323A                     u9967:
  6974  00323A  D000               	nop2	
  6975  00323C  D000               	nop2	
  6976  00323E  2EE8               	decfsz	wreg,f,c
  6977  003240  D7FC               	bra	u9967
  6978  003242  D000               	nop2	
  6979  003244  F000               	nop	
  6980                           
  6981                           ;actuators_main.c: 168:     RD1 = 0;
  6982  003246  9283               	bcf	3971,1,c	;volatile
  6983                           
  6984                           ;actuators_main.c: 171:     _delay((unsigned long)((27075)*(10000000/4000000.0)));
  6985  003248  0E58               	movlw	88
  6986  00324A  0100               	movlb	0	; () banked
  6987  00324C  6F82               	movwf	??_servoRotate180& (0+255),b
  6988  00324E  0EE6               	movlw	230
  6989  003250                     u9977:
  6990  003250  2EE8               	decfsz	wreg,f,c
  6991  003252  D7FE               	bra	u9977
  6992  003254  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6993  003256  D7FC               	bra	u9977
  6994  003258  D000               	nop2	
  6995                           
  6996                           ;actuators_main.c: 172:           }
  6997  00325A  0100               	movlb	0	; () banked
  6998  00325C  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6999  00325E  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7000  003260  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7001  003262  E104               	bnz	u7780
  7002  003264  0E1E               	movlw	30
  7003  003266  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7004  003268  A0D8               	btfss	status,0,c
  7005  00326A  D7E5               	goto	l137
  7006  00326C                     u7780:
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;actuators_main.c: 174:     if (servo==3){
  7010  00326C  0E03               	movlw	3
  7011  00326E  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  7012  003270  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7013  003272  A4D8               	btfss	status,2,c
  7014  003274  0012               	return	
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;actuators_main.c: 175:       for(i=0;i<30;i++)
  7018  003276  0E00               	movlw	0
  7019  003278  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7020  00327A  0E00               	movlw	0
  7021  00327C  6F83               	movwf	servoRotate180@i& (0+255),b
  7022  00327E                     l140:
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;actuators_main.c: 176:         {;actuators_main.c: 177:         RD0 = 1;
  7026  00327E  8083               	bsf	3971,0,c	;volatile
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;actuators_main.c: 179:         _delay((unsigned long)((2500)*(10000000/4000000.0)));
  7030  003280  0E09               	movlw	9
  7031  003282  0100               	movlb	0	; () banked
  7032  003284  6F82               	movwf	??_servoRotate180& (0+255),b
  7033  003286  0E1C               	movlw	28
  7034  003288                     u9987:
  7035  003288  2EE8               	decfsz	wreg,f,c
  7036  00328A  D7FE               	bra	u9987
  7037  00328C  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7038  00328E  D7FC               	bra	u9987
  7039  003290  F000               	nop	
  7040                           
  7041                           ;actuators_main.c: 182:             RD0 = 0;
  7042  003292  9083               	bcf	3971,0,c	;volatile
  7043                           
  7044                           ;actuators_main.c: 184:         _delay((unsigned long)((10500)*(10000000/4000000.0)));
  7045  003294  0E23               	movlw	35
  7046  003296  0100               	movlb	0	; () banked
  7047  003298  6F82               	movwf	??_servoRotate180& (0+255),b
  7048  00329A  0E15               	movlw	21
  7049  00329C                     u9997:
  7050  00329C  2EE8               	decfsz	wreg,f,c
  7051  00329E  D7FE               	bra	u9997
  7052  0032A0  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7053  0032A2  D7FC               	bra	u9997
  7054  0032A4  D000               	nop2	
  7055                           
  7056                           ;actuators_main.c: 185:         }
  7057  0032A6  0100               	movlb	0	; () banked
  7058  0032A8  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7059  0032AA  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7060  0032AC  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7061  0032AE  E105               	bnz	u7800
  7062  0032B0  0E1E               	movlw	30
  7063  0032B2  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7064  0032B4  B0D8               	btfsc	status,0,c
  7065  0032B6  0012               	return	
  7066  0032B8  D7E2               	goto	l140
  7067  0032BA                     u7800:
  7068                           
  7069                           ; BSR set to: 0
  7070  0032BA  0012               	return		;funcret
  7071  0032BC                     __end_of_servoRotate180:
  7072                           	opt callstack 0
  7073                           
  7074 ;; *************** function _servoRotate0 *****************
  7075 ;; Defined at:
  7076 ;;		line 98 in file "actuators_main.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  servo           2    0[BANK0 ] int 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  i               2    3[BANK0 ] unsigned int 
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      void 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;Total ram usage:        5 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    3
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_servo
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           	psect	text18
  7105  0032BC                     __ptext18:
  7106                           	opt callstack 0
  7107  0032BC                     _servoRotate0:
  7108                           	opt callstack 25
  7109                           
  7110                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 100:     if (servo==1){
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;incstack = 0
  7114  0032BC  0100               	movlb	0	; () banked
  7115  0032BE  0580               	decf	servoRotate0@servo& (0+255),w,b
  7116  0032C0  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7117  0032C2  A4D8               	btfss	status,2,c
  7118  0032C4  D025               	goto	u7700
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;actuators_main.c: 101:       for(i=0;i<30;i++)
  7122  0032C6  0E00               	movlw	0
  7123  0032C8  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7124  0032CA  0E00               	movlw	0
  7125  0032CC  6F83               	movwf	servoRotate0@i& (0+255),b
  7126  0032CE                     l122:
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;actuators_main.c: 102:           {;actuators_main.c: 103:             RC1 = 1;
  7130  0032CE  8282               	bsf	3970,1,c	;volatile
  7131                           
  7132                           ;actuators_main.c: 104:             RC2 = 1;
  7133  0032D0  8482               	bsf	3970,2,c	;volatile
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;actuators_main.c: 105:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  7137  0032D2  0E04               	movlw	4
  7138  0032D4  0100               	movlb	0	; () banked
  7139  0032D6  6F82               	movwf	??_servoRotate0& (0+255),b
  7140  0032D8  0E91               	movlw	145
  7141  0032DA                     u10007:
  7142  0032DA  2EE8               	decfsz	wreg,f,c
  7143  0032DC  D7FE               	bra	u10007
  7144  0032DE  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7145  0032E0  D7FC               	bra	u10007
  7146                           
  7147                           ;actuators_main.c: 106:             RC2 = 0;
  7148  0032E2  9482               	bcf	3970,2,c	;volatile
  7149                           
  7150                           ;actuators_main.c: 107:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  7151  0032E4  0EFA               	movlw	250
  7152  0032E6                     u10017:
  7153  0032E6  2EE8               	decfsz	wreg,f,c
  7154  0032E8  D7FE               	bra	u10017
  7155                           
  7156                           ;actuators_main.c: 108:             RC1 = 0;
  7157  0032EA  9282               	bcf	3970,1,c	;volatile
  7158                           
  7159                           ;actuators_main.c: 112:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  7160  0032EC  0E3D               	movlw	61
  7161  0032EE  0100               	movlb	0	; () banked
  7162  0032F0  6F82               	movwf	??_servoRotate0& (0+255),b
  7163  0032F2  0E62               	movlw	98
  7164  0032F4                     u10027:
  7165  0032F4  2EE8               	decfsz	wreg,f,c
  7166  0032F6  D7FE               	bra	u10027
  7167  0032F8  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7168  0032FA  D7FC               	bra	u10027
  7169  0032FC  F000               	nop	
  7170                           
  7171                           ;actuators_main.c: 113:           }
  7172  0032FE  0100               	movlb	0	; () banked
  7173  003300  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7174  003302  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7175  003304  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7176  003306  E104               	bnz	u7700
  7177  003308  0E1E               	movlw	30
  7178  00330A  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7179  00330C  A0D8               	btfss	status,0,c
  7180  00330E  D7DF               	goto	l122
  7181  003310                     u7700:
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;actuators_main.c: 115:     if (servo==2){
  7185  003310  0E02               	movlw	2
  7186  003312  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7187  003314  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7188  003316  A4D8               	btfss	status,2,c
  7189  003318  D020               	goto	u7720
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;actuators_main.c: 116:       for(i=0;i<30;i++)
  7193  00331A  0E00               	movlw	0
  7194  00331C  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7195  00331E  0E00               	movlw	0
  7196  003320  6F83               	movwf	servoRotate0@i& (0+255),b
  7197  003322                     l125:
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;actuators_main.c: 117:         {;actuators_main.c: 119:         RD1 = 1;
  7201  003322  8283               	bsf	3971,1,c	;volatile
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;actuators_main.c: 122:           _delay((unsigned long)((1000)*(10000000/4000000.0)));
  7205  003324  0E04               	movlw	4
  7206  003326  0100               	movlb	0	; () banked
  7207  003328  6F82               	movwf	??_servoRotate0& (0+255),b
  7208  00332A  0E3D               	movlw	61
  7209  00332C                     u10037:
  7210  00332C  2EE8               	decfsz	wreg,f,c
  7211  00332E  D7FE               	bra	u10037
  7212  003330  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7213  003332  D7FC               	bra	u10037
  7214  003334  D000               	nop2	
  7215                           
  7216                           ;actuators_main.c: 124:         RD1 = 0;
  7217  003336  9283               	bcf	3971,1,c	;volatile
  7218                           
  7219                           ;actuators_main.c: 127:           _delay((unsigned long)((19000)*(10000000/4000000.0)));
  7220  003338  0E3E               	movlw	62
  7221  00333A  0100               	movlb	0	; () banked
  7222  00333C  6F82               	movwf	??_servoRotate0& (0+255),b
  7223  00333E  0EAF               	movlw	175
  7224  003340                     u10047:
  7225  003340  2EE8               	decfsz	wreg,f,c
  7226  003342  D7FE               	bra	u10047
  7227  003344  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7228  003346  D7FC               	bra	u10047
  7229                           
  7230                           ;actuators_main.c: 128:         }
  7231  003348  0100               	movlb	0	; () banked
  7232  00334A  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7233  00334C  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7234  00334E  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7235  003350  E104               	bnz	u7720
  7236  003352  0E1E               	movlw	30
  7237  003354  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7238  003356  A0D8               	btfss	status,0,c
  7239  003358  D7E4               	goto	l125
  7240  00335A                     u7720:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;actuators_main.c: 130:     if (servo==3){
  7244  00335A  0E03               	movlw	3
  7245  00335C  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7246  00335E  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7247  003360  A4D8               	btfss	status,2,c
  7248  003362  0012               	return	
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;actuators_main.c: 131:       for(i=0;i<30;i++)
  7252  003364  0E00               	movlw	0
  7253  003366  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7254  003368  0E00               	movlw	0
  7255  00336A  6F83               	movwf	servoRotate0@i& (0+255),b
  7256  00336C                     l128:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;actuators_main.c: 132:         {;actuators_main.c: 133:         RD0 = 1;
  7260  00336C  8083               	bsf	3971,0,c	;volatile
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;actuators_main.c: 134:         _delay((unsigned long)((2000)*(10000000/4000000.0)));
  7264  00336E  0E07               	movlw	7
  7265  003370  0100               	movlb	0	; () banked
  7266  003372  6F82               	movwf	??_servoRotate0& (0+255),b
  7267  003374  0E7D               	movlw	125
  7268  003376                     u10057:
  7269  003376  2EE8               	decfsz	wreg,f,c
  7270  003378  D7FE               	bra	u10057
  7271  00337A  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7272  00337C  D7FC               	bra	u10057
  7273                           
  7274                           ;actuators_main.c: 137:         RD0 = 0;
  7275  00337E  9083               	bcf	3971,0,c	;volatile
  7276                           
  7277                           ;actuators_main.c: 138:         _delay((unsigned long)((11000)*(10000000/4000000.0)));
  7278  003380  0E24               	movlw	36
  7279  003382  0100               	movlb	0	; () banked
  7280  003384  6F82               	movwf	??_servoRotate0& (0+255),b
  7281  003386  0EB5               	movlw	181
  7282  003388                     u10067:
  7283  003388  2EE8               	decfsz	wreg,f,c
  7284  00338A  D7FE               	bra	u10067
  7285  00338C  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7286  00338E  D7FC               	bra	u10067
  7287  003390  D000               	nop2	
  7288                           
  7289                           ;actuators_main.c: 139:         }
  7290  003392  0100               	movlb	0	; () banked
  7291  003394  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7292  003396  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7293  003398  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7294  00339A  E105               	bnz	u7740
  7295  00339C  0E1E               	movlw	30
  7296  00339E  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7297  0033A0  B0D8               	btfsc	status,0,c
  7298  0033A2  0012               	return	
  7299  0033A4  D7E3               	goto	l128
  7300  0033A6                     u7740:
  7301                           
  7302                           ; BSR set to: 0
  7303  0033A6  0012               	return		;funcret
  7304  0033A8                     __end_of_servoRotate0:
  7305                           	opt callstack 0
  7306                           
  7307 ;; *************** function _UI_main *****************
  7308 ;; Defined at:
  7309 ;;		line 482 in file "main.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  t_dep           2  123[BANK0 ] int 
  7312 ;;  poles_detect    2  125[BANK0 ] int 
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;  i               1   89[BANK1 ] unsigned char 
  7315 ;;  keypress        1   84[BANK1 ] unsigned char 
  7316 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  7317 ;;  tick            4   85[BANK1 ] unsigned long 
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  1    wreg      void 
  7320 ;; Registers used:
  7321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;Total ram usage:       94 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:   14
  7334 ;; This function calls:
  7335 ;;		_I2C_Master_Init
  7336 ;;		_I2C_Master_Read
  7337 ;;		_I2C_Master_Start
  7338 ;;		_I2C_Master_Stop
  7339 ;;		_I2C_Master_Write
  7340 ;;		___llmod
  7341 ;;		_initLCD
  7342 ;;		_lcdInst
  7343 ;;		_printf
  7344 ;; This function is called by:
  7345 ;;		_main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text19
  7350  000012                     __ptext19:
  7351                           	opt callstack 0
  7352  000012                     _UI_main:
  7353                           	opt callstack 16
  7354                           
  7355                           ;main.c: 483:     sens = 0;
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;incstack = 0
  7359  000012  0E00               	movlw	0
  7360  000014  6E59               	movwf	_sens+1,c	;volatile
  7361  000016  0E00               	movlw	0
  7362  000018  6E58               	movwf	_sens,c	;volatile
  7363                           
  7364                           ;main.c: 488:     LATD = 0x00;
  7365  00001A  0E00               	movlw	0
  7366  00001C  6E8C               	movwf	3980,c	;volatile
  7367                           
  7368                           ;main.c: 489:     TRISD = 0x00;
  7369  00001E  0E00               	movlw	0
  7370  000020  6E95               	movwf	3989,c	;volatile
  7371                           
  7372                           ;main.c: 492:     TRISD = 0x00;
  7373  000022  0E00               	movlw	0
  7374  000024  6E95               	movwf	3989,c	;volatile
  7375                           
  7376                           ;main.c: 495:     INT1IE = 1;
  7377  000026  86F0               	bsf	4080,3,c	;volatile
  7378                           
  7379                           ;main.c: 498:     initLCD();
  7380  000028  EC4B  F01C         	call	_initLCD	;wreg free
  7381                           
  7382                           ;main.c: 501:     (INTCONbits.GIE = 1);
  7383  00002C  8EF2               	bsf	4082,7,c	;volatile
  7384                           
  7385                           ;main.c: 503:     I2C_Master_Init(100000);
  7386  00002E  0EA0               	movlw	160
  7387  000030  0100               	movlb	0	; () banked
  7388  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7389  000034  0E86               	movlw	134
  7390  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7391  000038  0E01               	movlw	1
  7392  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7393  00003C  0E00               	movlw	0
  7394  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7395  000040  ECEE  F01C         	call	_I2C_Master_Init	;wreg free
  7396                           
  7397                           ;main.c: 504:     I2C_Master_Start();
  7398  000044  EC73  F01F         	call	_I2C_Master_Start	;wreg free
  7399                           
  7400                           ;main.c: 505:     I2C_Master_Write(0b00010000);
  7401  000048  0E00               	movlw	0
  7402  00004A  0100               	movlb	0	; () banked
  7403  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7404  00004E  0E10               	movlw	16
  7405  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7406  000052  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  7407                           
  7408                           ;main.c: 506:     I2C_Master_Stop();
  7409  000056  EC6F  F01F         	call	_I2C_Master_Stop	;wreg free
  7410                           
  7411                           ;main.c: 516:     if((pressed == 0)&&(sens==0)){
  7412  00005A  0101               	movlb	1	; () banked
  7413  00005C  51D9               	movf	_pressed& (0+255),w,b
  7414  00005E  11DA               	iorwf	(_pressed+1)& (0+255),w,b
  7415  000060  A4D8               	btfss	status,2,c
  7416  000062  D3DC               	goto	u8950
  7417                           
  7418                           ; BSR set to: 1
  7419  000064  5058               	movf	_sens,w,c	;volatile
  7420  000066  1059               	iorwf	_sens+1,w,c	;volatile
  7421  000068  A4D8               	btfss	status,2,c
  7422  00006A  D3D8               	goto	u8950
  7423                           
  7424                           ; BSR set to: 1
  7425                           ;main.c: 517:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7426  00006C  0E01               	movlw	1
  7427  00006E  EC62  F01F         	call	_lcdInst
  7428  000072  0E11               	movlw	17
  7429  000074  0101               	movlb	1	; () banked
  7430  000076  6F00               	movwf	??_UI_main& (0+255),b
  7431  000078  0E3A               	movlw	58
  7432  00007A                     u10077:
  7433  00007A  2EE8               	decfsz	wreg,f,c
  7434  00007C  D7FE               	bra	u10077
  7435  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  7436  000080  D7FC               	bra	u10077
  7437  000082  F000               	nop	
  7438                           
  7439                           ;main.c: 518:         printf("1 - Start");
  7440  000084  0EC5               	movlw	low STR_23
  7441  000086  0100               	movlb	0	; () banked
  7442  000088  6FED               	movwf	printf@fmt& (0+255),b
  7443  00008A  0EFF               	movlw	high STR_23
  7444  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7445  00008E  ECFC  F01E         	call	_printf	;wreg free
  7446  000092  0EC0               	movlw	192
  7447  000094  EC62  F01F         	call	_lcdInst
  7448                           
  7449                           ;main.c: 520:         printf("2 - Summary");
  7450  000098  0E47               	movlw	low STR_24
  7451  00009A  0100               	movlb	0	; () banked
  7452  00009C  6FED               	movwf	printf@fmt& (0+255),b
  7453  00009E  0EFF               	movlw	high STR_24
  7454  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7455  0000A2  ECFC  F01E         	call	_printf	;wreg free
  7456  0000A6  0E90               	movlw	144
  7457  0000A8  EC62  F01F         	call	_lcdInst
  7458                           
  7459                           ;main.c: 522:         printf("3 - Date&Time ");
  7460  0000AC  0E6D               	movlw	low STR_25
  7461  0000AE  0100               	movlb	0	; () banked
  7462  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  7463  0000B2  0EFE               	movlw	high STR_25
  7464  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7465  0000B6  ECFC  F01E         	call	_printf	;wreg free
  7466  0000BA  D3B0               	goto	u8950
  7467  0000BC                     l8091:
  7468                           
  7469                           ;main.c: 533:         if (send){
  7470  0000BC  506D               	movf	_send,w,c
  7471  0000BE  B4D8               	btfsc	status,2,c
  7472  0000C0  D3AD               	goto	u8950
  7473                           
  7474                           ;main.c: 534:         if(key_was_pressed){
  7475  0000C2  0101               	movlb	1	; () banked
  7476  0000C4  51E5               	movf	_key_was_pressed& (0+255),w,b	;volatile
  7477  0000C6  B4D8               	btfsc	status,2,c
  7478  0000C8  D3A9               	goto	u8950
  7479                           
  7480                           ; BSR set to: 1
  7481                           ;main.c: 537:             pressed = 1;
  7482  0000CA  0E00               	movlw	0
  7483  0000CC  6FDA               	movwf	(_pressed+1)& (0+255),b
  7484  0000CE  0E01               	movlw	1
  7485  0000D0  6FD9               	movwf	_pressed& (0+255),b
  7486                           
  7487                           ;main.c: 538:             key_was_pressed = 0;
  7488  0000D2  0E00               	movlw	0
  7489  0000D4  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
  7490                           
  7491                           ; BSR set to: 1
  7492                           ;main.c: 539:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  7493  0000D6  3881               	swapf	3969,w,c	;volatile
  7494  0000D8  0B0F               	andlw	15
  7495  0000DA  0B0F               	andlw	15
  7496  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  7497                           
  7498                           ; BSR set to: 1
  7499                           ;main.c: 540:             temp = keys[keypress];
  7500  0000DE  0E9D               	movlw	low _keys
  7501  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  7502  0000E2  6EF6               	movwf	tblptrl,c
  7503  0000E4  6AF7               	clrf	tblptrh,c
  7504  0000E6  0EFD               	movlw	high _keys
  7505  0000E8  22F7               	addwfc	tblptrh,f,c
  7506  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  7507  0000EA                     	endif
  7508  0000EA  0008               	tblrd		*
  7509  0000EC  CFF5 F0FF          	movff	tablat,_temp
  7510                           
  7511                           ; BSR set to: 1
  7512                           ;main.c: 541:             temp_int = (temp-'0');
  7513  0000F0  0ED0               	movlw	208
  7514  0000F2  0100               	movlb	0	; () banked
  7515  0000F4  25FF               	addwf	_temp& (0+255),w,b
  7516  0000F6  0101               	movlb	1	; () banked
  7517  0000F8  6FE1               	movwf	_temp_int& (0+255),b
  7518  0000FA  6BE2               	clrf	(_temp_int+1)& (0+255),b
  7519  0000FC  0EFF               	movlw	255
  7520  0000FE  23E2               	addwfc	(_temp_int+1)& (0+255),f,b
  7521                           
  7522                           ; BSR set to: 1
  7523                           ;main.c: 543:             if (temp_int == 0){
  7524  000100  51E1               	movf	_temp_int& (0+255),w,b
  7525  000102  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7526  000104  A4D8               	btfss	status,2,c
  7527  000106  D02B               	goto	l8121
  7528                           
  7529                           ; BSR set to: 1
  7530                           ;main.c: 544:                 state = 0;
  7531  000108  0E00               	movlw	0
  7532  00010A  6FE0               	movwf	(_state+1)& (0+255),b
  7533  00010C  0E00               	movlw	0
  7534  00010E  6FDF               	movwf	_state& (0+255),b
  7535                           
  7536                           ; BSR set to: 1
  7537                           ;main.c: 545:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7538  000110  0E01               	movlw	1
  7539  000112  EC62  F01F         	call	_lcdInst
  7540  000116  0E11               	movlw	17
  7541  000118  0101               	movlb	1	; () banked
  7542  00011A  6F00               	movwf	??_UI_main& (0+255),b
  7543  00011C  0E3A               	movlw	58
  7544  00011E                     u10087:
  7545  00011E  2EE8               	decfsz	wreg,f,c
  7546  000120  D7FE               	bra	u10087
  7547  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  7548  000124  D7FC               	bra	u10087
  7549  000126  F000               	nop	
  7550                           
  7551                           ;main.c: 546:                 printf("1 - Start");
  7552  000128  0EC5               	movlw	low STR_23
  7553  00012A  0100               	movlb	0	; () banked
  7554  00012C  6FED               	movwf	printf@fmt& (0+255),b
  7555  00012E  0EFF               	movlw	high STR_23
  7556  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7557  000132  ECFC  F01E         	call	_printf	;wreg free
  7558  000136  0EC0               	movlw	192
  7559  000138  EC62  F01F         	call	_lcdInst
  7560                           
  7561                           ;main.c: 548:                 printf("2 - Summary");
  7562  00013C  0E47               	movlw	low STR_24
  7563  00013E  0100               	movlb	0	; () banked
  7564  000140  6FED               	movwf	printf@fmt& (0+255),b
  7565  000142  0EFF               	movlw	high STR_24
  7566  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7567  000146  ECFC  F01E         	call	_printf	;wreg free
  7568  00014A  0E90               	movlw	144
  7569  00014C  EC62  F01F         	call	_lcdInst
  7570                           
  7571                           ;main.c: 550:                 printf("3 - Date&Time ");
  7572  000150  0E6D               	movlw	low STR_25
  7573  000152  0100               	movlb	0	; () banked
  7574  000154  6FED               	movwf	printf@fmt& (0+255),b
  7575  000156  0EFE               	movlw	high STR_25
  7576  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7577  00015A  ECFC  F01E         	call	_printf	;wreg free
  7578  00015E                     l8121:
  7579                           
  7580                           ;main.c: 553:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  7581  00015E  0101               	movlb	1	; () banked
  7582  000160  05E1               	decf	_temp_int& (0+255),w,b
  7583  000162  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7584  000164  A4D8               	btfss	status,2,c
  7585  000166  D041               	goto	l8149
  7586                           
  7587                           ; BSR set to: 1
  7588  000168  0E2A               	movlw	42
  7589  00016A  0100               	movlb	0	; () banked
  7590  00016C  19FF               	xorwf	_temp& (0+255),w,b
  7591  00016E  B4D8               	btfsc	status,2,c
  7592  000170  D03C               	goto	l8149
  7593                           
  7594                           ; BSR set to: 0
  7595  000172  0E23               	movlw	35
  7596  000174  19FF               	xorwf	_temp& (0+255),w,b
  7597  000176  B4D8               	btfsc	status,2,c
  7598  000178  D038               	goto	l8149
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;main.c: 554:                 state = 0;
  7602  00017A  0E00               	movlw	0
  7603  00017C  0101               	movlb	1	; () banked
  7604  00017E  6FE0               	movwf	(_state+1)& (0+255),b
  7605  000180  0E00               	movlw	0
  7606  000182  6FDF               	movwf	_state& (0+255),b
  7607                           
  7608                           ; BSR set to: 1
  7609                           ;main.c: 555:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7610  000184  0E01               	movlw	1
  7611  000186  EC62  F01F         	call	_lcdInst
  7612  00018A  0E11               	movlw	17
  7613  00018C  0101               	movlb	1	; () banked
  7614  00018E  6F00               	movwf	??_UI_main& (0+255),b
  7615  000190  0E3A               	movlw	58
  7616  000192                     u10097:
  7617  000192  2EE8               	decfsz	wreg,f,c
  7618  000194  D7FE               	bra	u10097
  7619  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  7620  000198  D7FC               	bra	u10097
  7621  00019A  F000               	nop	
  7622                           
  7623                           ;main.c: 556:                 printf("Machine In Use");
  7624  00019C  0E8B               	movlw	low STR_29
  7625  00019E  0100               	movlb	0	; () banked
  7626  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  7627  0001A2  0EFE               	movlw	high STR_29
  7628  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7629  0001A6  ECFC  F01E         	call	_printf	;wreg free
  7630  0001AA  0ED0               	movlw	208
  7631  0001AC  EC62  F01F         	call	_lcdInst
  7632                           
  7633                           ;main.c: 558:                 printf("     0-Menu     ");
  7634  0001B0  0EC6               	movlw	low STR_30
  7635  0001B2  0100               	movlb	0	; () banked
  7636  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  7637  0001B6  0EFD               	movlw	high STR_30
  7638  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7639  0001BA  ECFC  F01E         	call	_printf	;wreg free
  7640                           
  7641                           ;main.c: 562:                 I2C_Master_Start();
  7642  0001BE  EC73  F01F         	call	_I2C_Master_Start	;wreg free
  7643                           
  7644                           ;main.c: 563:                 I2C_Master_Write(0b00010000);
  7645  0001C2  0E00               	movlw	0
  7646  0001C4  0100               	movlb	0	; () banked
  7647  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7648  0001C8  0E10               	movlw	16
  7649  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7650  0001CC  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  7651                           
  7652                           ;main.c: 564:                 I2C_Master_Write('1');
  7653  0001D0  0E00               	movlw	0
  7654  0001D2  0100               	movlb	0	; () banked
  7655  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7656  0001D6  0E31               	movlw	49
  7657  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7658  0001DA  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  7659                           
  7660                           ;main.c: 565:                 I2C_Master_Stop();
  7661  0001DE  EC6F  F01F         	call	_I2C_Master_Stop	;wreg free
  7662                           
  7663                           ;main.c: 567:                 sens = 1;
  7664  0001E2  0E00               	movlw	0
  7665  0001E4  6E59               	movwf	_sens+1,c	;volatile
  7666  0001E6  0E01               	movlw	1
  7667  0001E8  6E58               	movwf	_sens,c	;volatile
  7668  0001EA                     l8149:
  7669                           
  7670                           ;main.c: 570:                 if ((temp_int == 2)||(state == 2)){
  7671  0001EA  0E02               	movlw	2
  7672  0001EC  0101               	movlb	1	; () banked
  7673  0001EE  19E1               	xorwf	_temp_int& (0+255),w,b
  7674  0001F0  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7675  0001F2  B4D8               	btfsc	status,2,c
  7676  0001F4  D005               	goto	u8810
  7677                           
  7678                           ; BSR set to: 1
  7679  0001F6  0E02               	movlw	2
  7680  0001F8  19DF               	xorwf	_state& (0+255),w,b
  7681  0001FA  11E0               	iorwf	(_state+1)& (0+255),w,b
  7682  0001FC  A4D8               	btfss	status,2,c
  7683  0001FE  D253               	goto	l8259
  7684  000200                     u8810:
  7685                           
  7686                           ; BSR set to: 1
  7687                           ;main.c: 571:                     if ((temp_int == 2)){
  7688  000200  0E02               	movlw	2
  7689  000202  19E1               	xorwf	_temp_int& (0+255),w,b
  7690  000204  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7691  000206  A4D8               	btfss	status,2,c
  7692  000208  D033               	goto	l8171
  7693                           
  7694                           ; BSR set to: 1
  7695                           ;main.c: 572:                         state = 2;
  7696  00020A  0E00               	movlw	0
  7697  00020C  6FE0               	movwf	(_state+1)& (0+255),b
  7698  00020E  0E02               	movlw	2
  7699  000210  6FDF               	movwf	_state& (0+255),b
  7700                           
  7701                           ;main.c: 573:                         disp = 0;
  7702  000212  0E00               	movlw	0
  7703  000214  6FDE               	movwf	(_disp+1)& (0+255),b
  7704  000216  0E00               	movlw	0
  7705  000218  6FDD               	movwf	_disp& (0+255),b
  7706                           
  7707                           ; BSR set to: 1
  7708                           ;main.c: 574:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7709  00021A  0E01               	movlw	1
  7710  00021C  EC62  F01F         	call	_lcdInst
  7711  000220  0E11               	movlw	17
  7712  000222  0101               	movlb	1	; () banked
  7713  000224  6F00               	movwf	??_UI_main& (0+255),b
  7714  000226  0E3A               	movlw	58
  7715  000228                     u10107:
  7716  000228  2EE8               	decfsz	wreg,f,c
  7717  00022A  D7FE               	bra	u10107
  7718  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7719  00022E  D7FC               	bra	u10107
  7720  000230  F000               	nop	
  7721                           
  7722                           ;main.c: 575:                         printf("Op Time:");
  7723  000232  0EE3               	movlw	low STR_31
  7724  000234  0100               	movlb	0	; () banked
  7725  000236  6FED               	movwf	printf@fmt& (0+255),b
  7726  000238  0EFF               	movlw	high STR_31
  7727  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7728  00023C  ECFC  F01E         	call	_printf	;wreg free
  7729  000240  0EC0               	movlw	192
  7730  000242  EC62  F01F         	call	_lcdInst
  7731                           
  7732                           ;main.c: 577:                         printf("%d", cnt);
  7733  000246  0EC3               	movlw	low (STR_59+11)
  7734  000248  0100               	movlb	0	; () banked
  7735  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7736  00024C  0EFE               	movlw	high (STR_59+11)
  7737  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7738  000250  0E00               	movlw	0
  7739  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7740  000254  0E00               	movlw	0
  7741  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7742  000258  ECFC  F01E         	call	_printf	;wreg free
  7743  00025C  0ED0               	movlw	208
  7744  00025E  EC62  F01F         	call	_lcdInst
  7745                           
  7746                           ;main.c: 579:                         printf("    0-Menu   #>");
  7747  000262  0E0B               	movlw	low (STR_36+1)
  7748  000264  0100               	movlb	0	; () banked
  7749  000266  6FED               	movwf	printf@fmt& (0+255),b
  7750  000268  0EFE               	movlw	high (STR_36+1)
  7751  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7752  00026C  ECFC  F01E         	call	_printf	;wreg free
  7753  000270                     l8171:
  7754                           
  7755                           ;main.c: 581:                     if ((temp == '*') && (disp != 0)){
  7756  000270  0E2A               	movlw	42
  7757  000272  0100               	movlb	0	; () banked
  7758  000274  19FF               	xorwf	_temp& (0+255),w,b
  7759  000276  A4D8               	btfss	status,2,c
  7760  000278  D00B               	goto	l519
  7761                           
  7762                           ; BSR set to: 0
  7763  00027A  0101               	movlb	1	; () banked
  7764  00027C  51DD               	movf	_disp& (0+255),w,b
  7765  00027E  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7766  000280  B4D8               	btfsc	status,2,c
  7767  000282  D006               	goto	l519
  7768                           
  7769                           ; BSR set to: 1
  7770                           ;main.c: 582:                         disp = disp - 1;
  7771  000284  0EFF               	movlw	255
  7772  000286  25DD               	addwf	_disp& (0+255),w,b
  7773  000288  6FDD               	movwf	_disp& (0+255),b
  7774  00028A  0EFF               	movlw	255
  7775  00028C  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7776  00028E  6FDE               	movwf	(_disp+1)& (0+255),b
  7777  000290                     l519:
  7778                           
  7779                           ;main.c: 584:                     if ((temp == '#')&& (disp <12)){
  7780  000290  0E23               	movlw	35
  7781  000292  0100               	movlb	0	; () banked
  7782  000294  19FF               	xorwf	_temp& (0+255),w,b
  7783  000296  A4D8               	btfss	status,2,c
  7784  000298  D00B               	goto	l8181
  7785                           
  7786                           ; BSR set to: 0
  7787  00029A  0101               	movlb	1	; () banked
  7788  00029C  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7789  00029E  D006               	goto	u8860
  7790  0002A0  51DE               	movf	(_disp+1)& (0+255),w,b
  7791  0002A2  E106               	bnz	l8181
  7792  0002A4  0E0C               	movlw	12
  7793  0002A6  5DDD               	subwf	_disp& (0+255),w,b
  7794  0002A8  B0D8               	btfsc	status,0,c
  7795  0002AA  D002               	goto	l8181
  7796  0002AC                     u8860:
  7797                           
  7798                           ; BSR set to: 1
  7799                           ;main.c: 585:                         disp++;
  7800  0002AC  4BDD               	infsnz	_disp& (0+255),f,b
  7801  0002AE  2BDE               	incf	(_disp+1)& (0+255),f,b
  7802  0002B0                     l8181:
  7803                           
  7804                           ;main.c: 587:                     if (disp == 0){
  7805  0002B0  0101               	movlb	1	; () banked
  7806  0002B2  51DD               	movf	_disp& (0+255),w,b
  7807  0002B4  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7808  0002B6  A4D8               	btfss	status,2,c
  7809  0002B8  D02B               	goto	l8197
  7810                           
  7811                           ; BSR set to: 1
  7812                           ;main.c: 588:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7813  0002BA  0E01               	movlw	1
  7814  0002BC  EC62  F01F         	call	_lcdInst
  7815  0002C0  0E11               	movlw	17
  7816  0002C2  0101               	movlb	1	; () banked
  7817  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7818  0002C6  0E3A               	movlw	58
  7819  0002C8                     u10117:
  7820  0002C8  2EE8               	decfsz	wreg,f,c
  7821  0002CA  D7FE               	bra	u10117
  7822  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7823  0002CE  D7FC               	bra	u10117
  7824  0002D0  F000               	nop	
  7825                           
  7826                           ;main.c: 589:                         printf("Op Time:");
  7827  0002D2  0EE3               	movlw	low STR_31
  7828  0002D4  0100               	movlb	0	; () banked
  7829  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7830  0002D8  0EFF               	movlw	high STR_31
  7831  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7832  0002DC  ECFC  F01E         	call	_printf	;wreg free
  7833  0002E0  0EC0               	movlw	192
  7834  0002E2  EC62  F01F         	call	_lcdInst
  7835                           
  7836                           ;main.c: 591:                         printf("%d", cnt);
  7837  0002E6  0EC3               	movlw	low (STR_59+11)
  7838  0002E8  0100               	movlb	0	; () banked
  7839  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7840  0002EC  0EFE               	movlw	high (STR_59+11)
  7841  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7842  0002F0  0E00               	movlw	0
  7843  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7844  0002F4  0E00               	movlw	0
  7845  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7846  0002F8  ECFC  F01E         	call	_printf	;wreg free
  7847  0002FC  0ED0               	movlw	208
  7848  0002FE  EC62  F01F         	call	_lcdInst
  7849                           
  7850                           ;main.c: 593:                         printf("     0-Menu   #>");
  7851  000302  0E0A               	movlw	low STR_36
  7852  000304  0100               	movlb	0	; () banked
  7853  000306  6FED               	movwf	printf@fmt& (0+255),b
  7854  000308  0EFE               	movlw	high STR_36
  7855  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7856  00030C  ECFC  F01E         	call	_printf	;wreg free
  7857  000310                     l8197:
  7858                           
  7859                           ;main.c: 596:                     if (disp == 1){
  7860  000310  0101               	movlb	1	; () banked
  7861  000312  05DD               	decf	_disp& (0+255),w,b
  7862  000314  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7863  000316  A4D8               	btfss	status,2,c
  7864  000318  D02F               	goto	l8213
  7865                           
  7866                           ; BSR set to: 1
  7867                           ;main.c: 597:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7868  00031A  0E01               	movlw	1
  7869  00031C  EC62  F01F         	call	_lcdInst
  7870  000320  0E11               	movlw	17
  7871  000322  0101               	movlb	1	; () banked
  7872  000324  6F00               	movwf	??_UI_main& (0+255),b
  7873  000326  0E3A               	movlw	58
  7874  000328                     u10127:
  7875  000328  2EE8               	decfsz	wreg,f,c
  7876  00032A  D7FE               	bra	u10127
  7877  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7878  00032E  D7FC               	bra	u10127
  7879  000330  F000               	nop	
  7880                           
  7881                           ;main.c: 598:                         printf("No. Tires: %d",t_dep);
  7882  000332  0ED4               	movlw	low STR_37
  7883  000334  0100               	movlb	0	; () banked
  7884  000336  6FED               	movwf	printf@fmt& (0+255),b
  7885  000338  0EFE               	movlw	high STR_37
  7886  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7887  00033C  C0FB  F0EF         	movff	UI_main@t_dep,?_printf+2
  7888  000340  C0FC  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7889  000344  ECFC  F01E         	call	_printf	;wreg free
  7890  000348  0EC0               	movlw	192
  7891  00034A  EC62  F01F         	call	_lcdInst
  7892                           
  7893                           ;main.c: 600:                         printf("No. Poles: %d", poles_detected);
  7894  00034E  0EC6               	movlw	low STR_38
  7895  000350  0100               	movlb	0	; () banked
  7896  000352  6FED               	movwf	printf@fmt& (0+255),b
  7897  000354  0EFE               	movlw	high STR_38
  7898  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7899  000358  C0FD  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7900  00035C  C0FE  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7901  000360  ECFC  F01E         	call	_printf	;wreg free
  7902  000364  0ED0               	movlw	208
  7903  000366  EC62  F01F         	call	_lcdInst
  7904                           
  7905                           ;main.c: 602:                         printf("<*   0-Menu   #>");
  7906  00036A  0E1B               	movlw	low STR_39
  7907  00036C  0100               	movlb	0	; () banked
  7908  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7909  000370  0EFE               	movlw	high STR_39
  7910  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7911  000374  ECFC  F01E         	call	_printf	;wreg free
  7912  000378                     l8213:
  7913                           
  7914                           ;main.c: 605:                     if (disp > 1 && disp <11){
  7915  000378  0101               	movlb	1	; () banked
  7916  00037A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7917  00037C  D0CE               	goto	l8237
  7918  00037E  51DE               	movf	(_disp+1)& (0+255),w,b
  7919  000380  E104               	bnz	u8890
  7920  000382  0E02               	movlw	2
  7921  000384  5DDD               	subwf	_disp& (0+255),w,b
  7922  000386  A0D8               	btfss	status,0,c
  7923  000388  D0C8               	goto	l8237
  7924  00038A                     u8890:
  7925                           
  7926                           ; BSR set to: 1
  7927  00038A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7928  00038C  D006               	goto	u8900
  7929  00038E  51DE               	movf	(_disp+1)& (0+255),w,b
  7930  000390  E103               	bnz	u8901
  7931  000392  0E0B               	movlw	11
  7932  000394  5DDD               	subwf	_disp& (0+255),w,b
  7933  000396  B0D8               	btfsc	status,0,c
  7934  000398                     u8901:
  7935  000398  D0C0               	goto	l8237
  7936  00039A                     u8900:
  7937                           
  7938                           ; BSR set to: 1
  7939                           ;main.c: 606:                         i = disp - 2;
  7940  00039A  0EFE               	movlw	254
  7941  00039C  25DD               	addwf	_disp& (0+255),w,b
  7942  00039E  6FDB               	movwf	_i& (0+255),b
  7943  0003A0  0EFF               	movlw	255
  7944  0003A2  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7945  0003A4  6FDC               	movwf	(_i+1)& (0+255),b
  7946                           
  7947                           ; BSR set to: 1
  7948                           ;main.c: 607:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7949  0003A6  0E01               	movlw	1
  7950  0003A8  EC62  F01F         	call	_lcdInst
  7951  0003AC  0E11               	movlw	17
  7952  0003AE  0101               	movlb	1	; () banked
  7953  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7954  0003B2  0E3A               	movlw	58
  7955  0003B4                     u10137:
  7956  0003B4  2EE8               	decfsz	wreg,f,c
  7957  0003B6  D7FE               	bra	u10137
  7958  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7959  0003BA  D7FC               	bra	u10137
  7960  0003BC  F000               	nop	
  7961                           
  7962                           ;main.c: 608:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7963  0003BE  0EB4               	movlw	low STR_40
  7964  0003C0  0100               	movlb	0	; () banked
  7965  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7966  0003C4  0EFD               	movlw	high STR_40
  7967  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7968  0003C8  0E01               	movlw	1
  7969  0003CA  0101               	movlb	1	; () banked
  7970  0003CC  25DB               	addwf	_i& (0+255),w,b
  7971  0003CE  0100               	movlb	0	; () banked
  7972  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7973  0003D2  0E00               	movlw	0
  7974  0003D4  0101               	movlb	1	; () banked
  7975  0003D6  21DC               	addwfc	(_i+1)& (0+255),w,b
  7976  0003D8  0100               	movlb	0	; () banked
  7977  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7978  0003DC  C1DB  F100         	movff	_i,??_UI_main
  7979  0003E0  C1DC  F101         	movff	_i+1,??_UI_main+1
  7980  0003E4  0101               	movlb	1	; () banked
  7981  0003E6  90D8               	bcf	status,0,c
  7982  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7983  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7984  0003EC  90D8               	bcf	status,0,c
  7985  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7986  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7987  0003F2  90D8               	bcf	status,0,c
  7988  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7989  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7990  0003F8  0E04               	movlw	low UI_main@Pole
  7991  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7992  0003FC  6ED9               	movwf	fsr2l,c
  7993  0003FE  0E01               	movlw	high UI_main@Pole
  7994  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7995  000402  6EDA               	movwf	fsr2h,c
  7996  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7997  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7998  00040C  C1DB  F102         	movff	_i,??_UI_main+2
  7999  000410  C1DC  F103         	movff	_i+1,??_UI_main+3
  8000  000414  90D8               	bcf	status,0,c
  8001  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8002  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8003  00041A  90D8               	bcf	status,0,c
  8004  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8005  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8006  000420  90D8               	bcf	status,0,c
  8007  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8008  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8009  000426  0E02               	movlw	2
  8010  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8011  00042A  0E00               	movlw	0
  8012  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8013  00042E  0E04               	movlw	low UI_main@Pole
  8014  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8015  000432  6ED9               	movwf	fsr2l,c
  8016  000434  0E01               	movlw	high UI_main@Pole
  8017  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8018  000438  6EDA               	movwf	fsr2h,c
  8019  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  8020  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  8021  000442  ECFC  F01E         	call	_printf	;wreg free
  8022  000446  0EC0               	movlw	192
  8023  000448  EC62  F01F         	call	_lcdInst
  8024                           
  8025                           ;main.c: 610:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8026  00044C  0E7C               	movlw	low STR_41
  8027  00044E  0100               	movlb	0	; () banked
  8028  000450  6FED               	movwf	printf@fmt& (0+255),b
  8029  000452  0EFE               	movlw	high STR_41
  8030  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8031  000456  0E01               	movlw	1
  8032  000458  0101               	movlb	1	; () banked
  8033  00045A  25DB               	addwf	_i& (0+255),w,b
  8034  00045C  0100               	movlb	0	; () banked
  8035  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  8036  000460  0E00               	movlw	0
  8037  000462  0101               	movlb	1	; () banked
  8038  000464  21DC               	addwfc	(_i+1)& (0+255),w,b
  8039  000466  0100               	movlb	0	; () banked
  8040  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  8041  00046A  C1DB  F100         	movff	_i,??_UI_main
  8042  00046E  C1DC  F101         	movff	_i+1,??_UI_main+1
  8043  000472  0101               	movlb	1	; () banked
  8044  000474  90D8               	bcf	status,0,c
  8045  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  8046  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8047  00047A  90D8               	bcf	status,0,c
  8048  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  8049  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8050  000480  90D8               	bcf	status,0,c
  8051  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  8052  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8053  000486  0E04               	movlw	4
  8054  000488  2700               	addwf	??_UI_main& (0+255),f,b
  8055  00048A  0E00               	movlw	0
  8056  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8057  00048E  0E04               	movlw	low UI_main@Pole
  8058  000490  2500               	addwf	??_UI_main& (0+255),w,b
  8059  000492  6ED9               	movwf	fsr2l,c
  8060  000494  0E01               	movlw	high UI_main@Pole
  8061  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8062  000498  6EDA               	movwf	fsr2h,c
  8063  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  8064  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  8065  0004A2  ECFC  F01E         	call	_printf	;wreg free
  8066  0004A6  0E90               	movlw	144
  8067  0004A8  EC62  F01F         	call	_lcdInst
  8068                           
  8069                           ;main.c: 612:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8070  0004AC  0E3B               	movlw	low STR_42
  8071  0004AE  0100               	movlb	0	; () banked
  8072  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  8073  0004B2  0EFF               	movlw	high STR_42
  8074  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8075  0004B6  0E01               	movlw	1
  8076  0004B8  0101               	movlb	1	; () banked
  8077  0004BA  25DB               	addwf	_i& (0+255),w,b
  8078  0004BC  0100               	movlb	0	; () banked
  8079  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  8080  0004C0  0E00               	movlw	0
  8081  0004C2  0101               	movlb	1	; () banked
  8082  0004C4  21DC               	addwfc	(_i+1)& (0+255),w,b
  8083  0004C6  0100               	movlb	0	; () banked
  8084  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  8085  0004CA  C1DB  F100         	movff	_i,??_UI_main
  8086  0004CE  C1DC  F101         	movff	_i+1,??_UI_main+1
  8087  0004D2  0101               	movlb	1	; () banked
  8088  0004D4  90D8               	bcf	status,0,c
  8089  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  8090  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8091  0004DA  90D8               	bcf	status,0,c
  8092  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  8093  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8094  0004E0  90D8               	bcf	status,0,c
  8095  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  8096  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8097  0004E6  0E06               	movlw	6
  8098  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  8099  0004EA  0E00               	movlw	0
  8100  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8101  0004EE  0E04               	movlw	low UI_main@Pole
  8102  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  8103  0004F2  6ED9               	movwf	fsr2l,c
  8104  0004F4  0E01               	movlw	high UI_main@Pole
  8105  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8106  0004F8  6EDA               	movwf	fsr2h,c
  8107  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  8108  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  8109  000502  ECFC  F01E         	call	_printf	;wreg free
  8110  000506  0ED0               	movlw	208
  8111  000508  EC62  F01F         	call	_lcdInst
  8112                           
  8113                           ;main.c: 614:                         printf("<*   0-Menu   #>");
  8114  00050C  0E1B               	movlw	low STR_39
  8115  00050E  0100               	movlb	0	; () banked
  8116  000510  6FED               	movwf	printf@fmt& (0+255),b
  8117  000512  0EFE               	movlw	high STR_39
  8118  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8119  000516  ECFC  F01E         	call	_printf	;wreg free
  8120  00051A                     l8237:
  8121                           
  8122                           ;main.c: 616:                     if (disp == 11){
  8123  00051A  0E0B               	movlw	11
  8124  00051C  0101               	movlb	1	; () banked
  8125  00051E  19DD               	xorwf	_disp& (0+255),w,b
  8126  000520  11DE               	iorwf	(_disp+1)& (0+255),w,b
  8127  000522  A4D8               	btfss	status,2,c
  8128  000524  D0C0               	goto	l8259
  8129                           
  8130                           ; BSR set to: 1
  8131                           ;main.c: 617:                         i = disp - 2;
  8132  000526  0EFE               	movlw	254
  8133  000528  25DD               	addwf	_disp& (0+255),w,b
  8134  00052A  6FDB               	movwf	_i& (0+255),b
  8135  00052C  0EFF               	movlw	255
  8136  00052E  21DE               	addwfc	(_disp+1)& (0+255),w,b
  8137  000530  6FDC               	movwf	(_i+1)& (0+255),b
  8138                           
  8139                           ; BSR set to: 1
  8140                           ;main.c: 618:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8141  000532  0E01               	movlw	1
  8142  000534  EC62  F01F         	call	_lcdInst
  8143  000538  0E11               	movlw	17
  8144  00053A  0101               	movlb	1	; () banked
  8145  00053C  6F00               	movwf	??_UI_main& (0+255),b
  8146  00053E  0E3A               	movlw	58
  8147  000540                     u10147:
  8148  000540  2EE8               	decfsz	wreg,f,c
  8149  000542  D7FE               	bra	u10147
  8150  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  8151  000546  D7FC               	bra	u10147
  8152  000548  F000               	nop	
  8153                           
  8154                           ;main.c: 619:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  8155  00054A  0EB4               	movlw	low STR_40
  8156  00054C  0100               	movlb	0	; () banked
  8157  00054E  6FED               	movwf	printf@fmt& (0+255),b
  8158  000550  0EFD               	movlw	high STR_40
  8159  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8160  000554  0E01               	movlw	1
  8161  000556  0101               	movlb	1	; () banked
  8162  000558  25DB               	addwf	_i& (0+255),w,b
  8163  00055A  0100               	movlb	0	; () banked
  8164  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  8165  00055E  0E00               	movlw	0
  8166  000560  0101               	movlb	1	; () banked
  8167  000562  21DC               	addwfc	(_i+1)& (0+255),w,b
  8168  000564  0100               	movlb	0	; () banked
  8169  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  8170  000568  C1DB  F100         	movff	_i,??_UI_main
  8171  00056C  C1DC  F101         	movff	_i+1,??_UI_main+1
  8172  000570  0101               	movlb	1	; () banked
  8173  000572  90D8               	bcf	status,0,c
  8174  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  8175  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8176  000578  90D8               	bcf	status,0,c
  8177  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  8178  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8179  00057E  90D8               	bcf	status,0,c
  8180  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  8181  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8182  000584  0E04               	movlw	low UI_main@Pole
  8183  000586  2500               	addwf	??_UI_main& (0+255),w,b
  8184  000588  6ED9               	movwf	fsr2l,c
  8185  00058A  0E01               	movlw	high UI_main@Pole
  8186  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8187  00058E  6EDA               	movwf	fsr2h,c
  8188  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  8189  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  8190  000598  C1DB  F102         	movff	_i,??_UI_main+2
  8191  00059C  C1DC  F103         	movff	_i+1,??_UI_main+3
  8192  0005A0  90D8               	bcf	status,0,c
  8193  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8194  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8195  0005A6  90D8               	bcf	status,0,c
  8196  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8197  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8198  0005AC  90D8               	bcf	status,0,c
  8199  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8200  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8201  0005B2  0E02               	movlw	2
  8202  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8203  0005B6  0E00               	movlw	0
  8204  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8205  0005BA  0E04               	movlw	low UI_main@Pole
  8206  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8207  0005BE  6ED9               	movwf	fsr2l,c
  8208  0005C0  0E01               	movlw	high UI_main@Pole
  8209  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8210  0005C4  6EDA               	movwf	fsr2h,c
  8211  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  8212  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  8213  0005CE  ECFC  F01E         	call	_printf	;wreg free
  8214  0005D2  0EC0               	movlw	192
  8215  0005D4  EC62  F01F         	call	_lcdInst
  8216                           
  8217                           ;main.c: 621:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8218  0005D8  0E7C               	movlw	low STR_41
  8219  0005DA  0100               	movlb	0	; () banked
  8220  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  8221  0005DE  0EFE               	movlw	high STR_41
  8222  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8223  0005E2  0E01               	movlw	1
  8224  0005E4  0101               	movlb	1	; () banked
  8225  0005E6  25DB               	addwf	_i& (0+255),w,b
  8226  0005E8  0100               	movlb	0	; () banked
  8227  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  8228  0005EC  0E00               	movlw	0
  8229  0005EE  0101               	movlb	1	; () banked
  8230  0005F0  21DC               	addwfc	(_i+1)& (0+255),w,b
  8231  0005F2  0100               	movlb	0	; () banked
  8232  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  8233  0005F6  C1DB  F100         	movff	_i,??_UI_main
  8234  0005FA  C1DC  F101         	movff	_i+1,??_UI_main+1
  8235  0005FE  0101               	movlb	1	; () banked
  8236  000600  90D8               	bcf	status,0,c
  8237  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  8238  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8239  000606  90D8               	bcf	status,0,c
  8240  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  8241  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8242  00060C  90D8               	bcf	status,0,c
  8243  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  8244  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8245  000612  0E04               	movlw	4
  8246  000614  2700               	addwf	??_UI_main& (0+255),f,b
  8247  000616  0E00               	movlw	0
  8248  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8249  00061A  0E04               	movlw	low UI_main@Pole
  8250  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  8251  00061E  6ED9               	movwf	fsr2l,c
  8252  000620  0E01               	movlw	high UI_main@Pole
  8253  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8254  000624  6EDA               	movwf	fsr2h,c
  8255  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  8256  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  8257  00062E  ECFC  F01E         	call	_printf	;wreg free
  8258  000632  0E90               	movlw	144
  8259  000634  EC62  F01F         	call	_lcdInst
  8260                           
  8261                           ;main.c: 623:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8262  000638  0E3B               	movlw	low STR_42
  8263  00063A  0100               	movlb	0	; () banked
  8264  00063C  6FED               	movwf	printf@fmt& (0+255),b
  8265  00063E  0EFF               	movlw	high STR_42
  8266  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8267  000642  0E01               	movlw	1
  8268  000644  0101               	movlb	1	; () banked
  8269  000646  25DB               	addwf	_i& (0+255),w,b
  8270  000648  0100               	movlb	0	; () banked
  8271  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  8272  00064C  0E00               	movlw	0
  8273  00064E  0101               	movlb	1	; () banked
  8274  000650  21DC               	addwfc	(_i+1)& (0+255),w,b
  8275  000652  0100               	movlb	0	; () banked
  8276  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  8277  000656  C1DB  F100         	movff	_i,??_UI_main
  8278  00065A  C1DC  F101         	movff	_i+1,??_UI_main+1
  8279  00065E  0101               	movlb	1	; () banked
  8280  000660  90D8               	bcf	status,0,c
  8281  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  8282  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8283  000666  90D8               	bcf	status,0,c
  8284  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  8285  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8286  00066C  90D8               	bcf	status,0,c
  8287  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  8288  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8289  000672  0E06               	movlw	6
  8290  000674  2700               	addwf	??_UI_main& (0+255),f,b
  8291  000676  0E00               	movlw	0
  8292  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8293  00067A  0E04               	movlw	low UI_main@Pole
  8294  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  8295  00067E  6ED9               	movwf	fsr2l,c
  8296  000680  0E01               	movlw	high UI_main@Pole
  8297  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8298  000684  6EDA               	movwf	fsr2h,c
  8299  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  8300  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  8301  00068E  ECFC  F01E         	call	_printf	;wreg free
  8302  000692  0ED0               	movlw	208
  8303  000694  EC62  F01F         	call	_lcdInst
  8304                           
  8305                           ;main.c: 625:                         printf("<*   0-Menu     ");
  8306  000698  0ED7               	movlw	low STR_47
  8307  00069A  0100               	movlb	0	; () banked
  8308  00069C  6FED               	movwf	printf@fmt& (0+255),b
  8309  00069E  0EFD               	movlw	high STR_47
  8310  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8311  0006A2  ECFC  F01E         	call	_printf	;wreg free
  8312  0006A6                     l8259:
  8313                           
  8314                           ;main.c: 628:             if (temp_int == 3){
  8315  0006A6  0E03               	movlw	3
  8316  0006A8  0101               	movlb	1	; () banked
  8317  0006AA  19E1               	xorwf	_temp_int& (0+255),w,b
  8318  0006AC  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  8319  0006AE  A4D8               	btfss	status,2,c
  8320  0006B0  D0B5               	goto	u8950
  8321                           
  8322                           ; BSR set to: 1
  8323                           ;main.c: 629:                 state = 0;
  8324  0006B2  0E00               	movlw	0
  8325  0006B4  6FE0               	movwf	(_state+1)& (0+255),b
  8326  0006B6  0E00               	movlw	0
  8327  0006B8  6FDF               	movwf	_state& (0+255),b
  8328                           
  8329                           ;main.c: 630:                 tick = 0;
  8330  0006BA  0E00               	movlw	0
  8331  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  8332  0006BE  0E00               	movlw	0
  8333  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  8334  0006C2  0E00               	movlw	0
  8335  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  8336  0006C6  0E00               	movlw	0
  8337  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  8338                           
  8339                           ;main.c: 631:                 while(~key_was_pressed){
  8340  0006CA  D0A5               	goto	l8309
  8341  0006CC                     l8263:
  8342                           
  8343                           ; BSR set to: 1
  8344                           ;main.c: 632:                     if(tick % 1000 == 0){
  8345  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  8346  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  8347  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  8348  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  8349  0006DC  0EE8               	movlw	232
  8350  0006DE  0100               	movlb	0	; () banked
  8351  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  8352  0006E2  0E03               	movlw	3
  8353  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  8354  0006E6  0E00               	movlw	0
  8355  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  8356  0006EA  0E00               	movlw	0
  8357  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  8358  0006EE  ECBA  F01C         	call	___llmod	;wreg free
  8359  0006F2  0100               	movlb	0	; () banked
  8360  0006F4  5180               	movf	?___llmod& (0+255),w,b
  8361  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  8362  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  8363  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  8364  0006FC  A4D8               	btfss	status,2,c
  8365  0006FE  D084               	goto	l8307
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;main.c: 633:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8369  000700  0E01               	movlw	1
  8370  000702  EC62  F01F         	call	_lcdInst
  8371  000706  0E11               	movlw	17
  8372  000708  0101               	movlb	1	; () banked
  8373  00070A  6F00               	movwf	??_UI_main& (0+255),b
  8374  00070C  0E3A               	movlw	58
  8375  00070E                     u10157:
  8376  00070E  2EE8               	decfsz	wreg,f,c
  8377  000710  D7FE               	bra	u10157
  8378  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  8379  000714  D7FC               	bra	u10157
  8380  000716  F000               	nop	
  8381                           
  8382                           ;main.c: 634:                         printf("DATE & TIME");
  8383  000718  0E17               	movlw	low STR_48
  8384  00071A  0100               	movlb	0	; () banked
  8385  00071C  6FED               	movwf	printf@fmt& (0+255),b
  8386  00071E  0EFF               	movlw	high STR_48
  8387  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8388  000722  ECFC  F01E         	call	_printf	;wreg free
  8389                           
  8390                           ;main.c: 635:                         I2C_Master_Init(100000);
  8391  000726  0EA0               	movlw	160
  8392  000728  0100               	movlb	0	; () banked
  8393  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  8394  00072C  0E86               	movlw	134
  8395  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  8396  000730  0E01               	movlw	1
  8397  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  8398  000734  0E00               	movlw	0
  8399  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  8400  000738  ECEE  F01C         	call	_I2C_Master_Init	;wreg free
  8401                           
  8402                           ;main.c: 636:                         I2C_Master_Start();
  8403  00073C  EC73  F01F         	call	_I2C_Master_Start	;wreg free
  8404                           
  8405                           ;main.c: 637:                         I2C_Master_Write(0b11010000);
  8406  000740  0E00               	movlw	0
  8407  000742  0100               	movlb	0	; () banked
  8408  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8409  000746  0ED0               	movlw	208
  8410  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8411  00074A  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  8412                           
  8413                           ;main.c: 638:                         I2C_Master_Write(0x00);
  8414  00074E  0E00               	movlw	0
  8415  000750  0100               	movlb	0	; () banked
  8416  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8417  000754  0E00               	movlw	0
  8418  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8419  000758  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  8420                           
  8421                           ;main.c: 639:                         I2C_Master_Stop();
  8422  00075C  EC6F  F01F         	call	_I2C_Master_Stop	;wreg free
  8423                           
  8424                           ;main.c: 641:                         I2C_Master_Start();
  8425  000760  EC73  F01F         	call	_I2C_Master_Start	;wreg free
  8426                           
  8427                           ;main.c: 642:                         I2C_Master_Write(0b11010001);
  8428  000764  0E00               	movlw	0
  8429  000766  0100               	movlb	0	; () banked
  8430  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8431  00076A  0ED1               	movlw	209
  8432  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8433  00076E  EC6A  F01F         	call	_I2C_Master_Write	;wreg free
  8434                           
  8435                           ;main.c: 643:                         for(unsigned char i = 0; i < 6; i++){
  8436  000772  0E00               	movlw	0
  8437  000774  0101               	movlb	1	; () banked
  8438  000776  6F59               	movwf	UI_main@i& (0+255),b
  8439  000778                     l8287:
  8440                           
  8441                           ; BSR set to: 1
  8442  000778  0E05               	movlw	5
  8443  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  8444  00077C  D001               	goto	l8291
  8445  00077E  D00D               	goto	l8297
  8446  000780                     l8291:
  8447                           
  8448                           ; BSR set to: 1
  8449                           ;main.c: 644:                             time[i] = I2C_Master_Read(0);
  8450  000780  0ED2               	movlw	low _time
  8451  000782  2559               	addwf	UI_main@i& (0+255),w,b
  8452  000784  6ED9               	movwf	fsr2l,c
  8453  000786  6ADA               	clrf	fsr2h,c
  8454  000788  0E01               	movlw	high _time
  8455  00078A  22DA               	addwfc	fsr2h,f,c
  8456  00078C  0E00               	movlw	0
  8457  00078E  ECE7  F01E         	call	_I2C_Master_Read
  8458  000792  6EDF               	movwf	indf2,c
  8459                           
  8460                           ;main.c: 645:                         }
  8461  000794  0101               	movlb	1	; () banked
  8462  000796  2B59               	incf	UI_main@i& (0+255),f,b
  8463  000798  D7EF               	goto	l8287
  8464  00079A                     l8297:
  8465                           
  8466                           ; BSR set to: 1
  8467                           ;main.c: 646:                         time[6] = I2C_Master_Read(1);
  8468  00079A  0E01               	movlw	1
  8469  00079C  ECE7  F01E         	call	_I2C_Master_Read
  8470  0007A0  0101               	movlb	1	; () banked
  8471  0007A2  6FD8               	movwf	(_time+6)& (0+255),b
  8472                           
  8473                           ;main.c: 647:                         I2C_Master_Stop();
  8474  0007A4  EC6F  F01F         	call	_I2C_Master_Stop	;wreg free
  8475  0007A8  0EC0               	movlw	192
  8476  0007AA  EC62  F01F         	call	_lcdInst
  8477                           
  8478                           ;main.c: 651:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  8479  0007AE  0E9A               	movlw	low STR_49
  8480  0007B0  0100               	movlb	0	; () banked
  8481  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  8482  0007B4  0EFE               	movlw	high STR_49
  8483  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8484  0007B8  C1D8  F0EF         	movff	_time+6,?_printf+2
  8485  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  8486  0007BE  C1D7  F0F1         	movff	_time+5,?_printf+4
  8487  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  8488  0007C4  C1D6  F0F3         	movff	_time+4,?_printf+6
  8489  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  8490  0007CA  ECFC  F01E         	call	_printf	;wreg free
  8491  0007CE  0E90               	movlw	144
  8492  0007D0  EC62  F01F         	call	_lcdInst
  8493                           
  8494                           ;main.c: 653:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  8495  0007D4  0EA9               	movlw	low STR_50
  8496  0007D6  0100               	movlb	0	; () banked
  8497  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  8498  0007DA  0EFE               	movlw	high STR_50
  8499  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8500  0007DE  C1D4  F0EF         	movff	_time+2,?_printf+2
  8501  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  8502  0007E4  C1D3  F0F1         	movff	_time+1,?_printf+4
  8503  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  8504  0007EA  C1D2  F0F3         	movff	_time,?_printf+6
  8505  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  8506  0007F0  ECFC  F01E         	call	_printf	;wreg free
  8507  0007F4  0ED0               	movlw	208
  8508  0007F6  EC62  F01F         	call	_lcdInst
  8509                           
  8510                           ;main.c: 655:                         printf("     0-Menu     ");
  8511  0007FA  0EC6               	movlw	low STR_30
  8512  0007FC  0100               	movlb	0	; () banked
  8513  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  8514  000800  0EFD               	movlw	high STR_30
  8515  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8516  000804  ECFC  F01E         	call	_printf	;wreg free
  8517  000808                     l8307:
  8518                           
  8519                           ;main.c: 658:                     tick++;
  8520  000808  0E01               	movlw	1
  8521  00080A  0101               	movlb	1	; () banked
  8522  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  8523  00080E  0E00               	movlw	0
  8524  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  8525  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  8526  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  8527  000816                     l8309:
  8528                           
  8529                           ; BSR set to: 1
  8530                           ;main.c: 631:                 while(~key_was_pressed){
  8531  000816  05E5               	decf	_key_was_pressed& (0+255),w,b	;volatile
  8532  000818  A4D8               	btfss	status,2,c
  8533  00081A  D758               	goto	l8263
  8534  00081C                     u8950:
  8535                           
  8536                           ;main.c: 524:     while(sens==0){
  8537  00081C  5058               	movf	_sens,w,c	;volatile
  8538  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  8539  000820  A4D8               	btfss	status,2,c
  8540  000822  0012               	return	
  8541  000824  D44B               	goto	l8091
  8542  000826                     __end_of_UI_main:
  8543                           	opt callstack 0
  8544                           
  8545 ;; *************** function _printf *****************
  8546 ;; Defined at:
  8547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  8550 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8551 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8552 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8553 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8554 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8555 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8556 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8557 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8558 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8559 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8560 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8561 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8562 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8563 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8564 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8565 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  ap              2  121[BANK0 ] PTR void [1]
  8568 ;;		 -> ?_printf(2), 
  8569 ;;  ret             2    0        int 
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  2  109[BANK0 ] int 
  8572 ;; Registers used:
  8573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8579 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;Total ram usage:       14 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:   13
  8586 ;; This function calls:
  8587 ;;		_vfprintf
  8588 ;; This function is called by:
  8589 ;;		_actuators_main
  8590 ;;		_stepper2
  8591 ;;		_stepper2_back
  8592 ;;		_full_drive
  8593 ;;		_print_echo
  8594 ;;		_ultrasonic_main
  8595 ;;		_number_deploy
  8596 ;;		_UI_main
  8597 ;;		_brake
  8598 ;;		_main
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           	psect	text20
  8603  003DF8                     __ptext20:
  8604                           	opt callstack 0
  8605  003DF8                     _printf:
  8606                           	opt callstack 16
  8607                           
  8608                           ;incstack = 0
  8609  003DF8  0EEF               	movlw	low (?_printf+2)
  8610  003DFA  0100               	movlb	0	; () banked
  8611  003DFC  6FF9               	movwf	printf@ap& (0+255),b
  8612  003DFE  0E00               	movlw	high (?_printf+2)
  8613  003E00  6FFA               	movwf	(printf@ap+1)& (0+255),b
  8614                           
  8615                           ; BSR set to: 0
  8616  003E02  0E00               	movlw	0
  8617  003E04  6FE5               	movwf	vfprintf@fp& (0+255),b
  8618  003E06  0E00               	movlw	0
  8619  003E08  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  8620  003E0A  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  8621  003E0E  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  8622  003E12  0EF9               	movlw	low printf@ap
  8623  003E14  6FE9               	movwf	vfprintf@ap& (0+255),b
  8624  003E16  0E00               	movlw	high printf@ap
  8625  003E18  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  8626  003E1A  EC49  F01D         	call	_vfprintf	;wreg free
  8627  003E1E  0012               	return		;funcret
  8628  003E20                     __end_of_printf:
  8629                           	opt callstack 0
  8630                           
  8631 ;; *************** function _vfprintf *****************
  8632 ;; Defined at:
  8633 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  8636 ;;		 -> NULL(0), 
  8637 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  8638 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8639 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8640 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8641 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8642 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8643 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8644 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8645 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8646 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8647 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8648 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8649 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8650 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8651 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8652 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8653 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8654 ;;  ap              2  105[BANK0 ] PTR PTR void 
  8655 ;;		 -> printf@ap(2), 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  8658 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
  8659 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
  8660 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
  8661 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
  8662 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
  8663 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
  8664 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
  8665 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
  8666 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
  8667 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
  8668 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
  8669 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
  8670 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
  8671 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
  8672 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
  8673 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  2  101[BANK0 ] int 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8683 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8684 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;Total ram usage:        8 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:   12
  8690 ;; This function calls:
  8691 ;;		_vfpfcnvrt
  8692 ;; This function is called by:
  8693 ;;		_printf
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text21
  8698  003A92                     __ptext21:
  8699                           	opt callstack 0
  8700  003A92                     _vfprintf:
  8701                           	opt callstack 16
  8702                           
  8703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8704                           
  8705                           ;incstack = 0
  8706  003A92  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8707  003A96  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8708                           
  8709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8710  003A9A  0E00               	movlw	0
  8711  003A9C  6E49               	movwf	_nout+1,c
  8712  003A9E  0E00               	movlw	0
  8713  003AA0  6E48               	movwf	_nout,c
  8714                           
  8715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8716  003AA2  D014               	goto	l7051
  8717  003AA4                     l7049:
  8718                           
  8719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8720  003AA4  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8721  003AA8  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8722  003AAC  0EEB               	movlw	low vfprintf@cfmt
  8723  003AAE  0100               	movlb	0	; () banked
  8724  003AB0  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8725  003AB2  0E00               	movlw	high vfprintf@cfmt
  8726  003AB4  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8727  003AB6  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8728  003ABA  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8729  003ABE  ECCB  F009         	call	_vfpfcnvrt	;wreg free
  8730  003AC2  0100               	movlb	0	; () banked
  8731  003AC4  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8732  003AC6  2648               	addwf	_nout,f,c
  8733  003AC8  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8734  003ACA  2249               	addwfc	_nout+1,f,c
  8735  003ACC                     l7051:
  8736                           
  8737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8738  003ACC  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8739  003AD0  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8740  003AD4                     	if	0	;tblptru may be non-zero
  8741  003AD4                     	endif
  8742  003AD4                     	if	0	;tblptru may be non-zero
  8743  003AD4                     	endif
  8744  003AD4  0008               	tblrd		*
  8745  003AD6  50F5               	movf	tablat,w,c
  8746  003AD8  0900               	iorlw	0
  8747  003ADA  A4D8               	btfss	status,2,c
  8748  003ADC  D7E3               	goto	l7049
  8749                           
  8750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8751  003ADE  C048  F0E5         	movff	_nout,?_vfprintf
  8752  003AE2  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8753  003AE6  0012               	return		;funcret
  8754  003AE8                     __end_of_vfprintf:
  8755                           	opt callstack 0
  8756                           
  8757 ;; *************** function _vfpfcnvrt *****************
  8758 ;; Defined at:
  8759 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8762 ;;		 -> NULL(0), 
  8763 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8764 ;;		 -> vfprintf@cfmt(2), 
  8765 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8766 ;;		 -> printf@ap(2), 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  llu             8   88[BANK0 ] unsigned long long 
  8769 ;;  ll              8   80[BANK0 ] long long 
  8770 ;;  f               4    0        long long 
  8771 ;;  vp              3    0        PTR void 
  8772 ;;  ct              3    0        unsigned char [3]
  8773 ;;  cp              3    0        PTR unsigned char 
  8774 ;;  done            2   97[BANK0 ] int 
  8775 ;;  i               2    0        int 
  8776 ;;  c               1   96[BANK0 ] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  2   70[BANK0 ] int 
  8779 ;; Registers used:
  8780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8786 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;Total ram usage:       31 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:   11
  8793 ;; This function calls:
  8794 ;;		_atoi
  8795 ;;		_dtoa
  8796 ;;		_fputc
  8797 ;;		_isdigit
  8798 ;;		_xtoa
  8799 ;; This function is called by:
  8800 ;;		_vfprintf
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text22
  8805  001396                     __ptext22:
  8806                           	opt callstack 0
  8807  001396                     _vfpfcnvrt:
  8808                           	opt callstack 16
  8809                           
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8811                           
  8812                           ;incstack = 0
  8813  001396  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8814  00139A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8815  00139E  CFDE FFF6          	movff	postinc2,tblptrl
  8816  0013A2  CFDD FFF7          	movff	postdec2,tblptrh
  8817  0013A6                     	if	0	;tblptru may be non-zero
  8818  0013A6                     	endif
  8819  0013A6                     	if	0	;tblptru may be non-zero
  8820  0013A6                     	endif
  8821  0013A6  0008               	tblrd		*
  8822  0013A8  50F5               	movf	tablat,w,c
  8823  0013AA  0A25               	xorlw	37
  8824  0013AC  A4D8               	btfss	status,2,c
  8825  0013AE  D1AD               	goto	l7029
  8826                           
  8827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8828  0013B0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8829  0013B4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8830  0013B8  2ADE               	incf	postinc2,f,c
  8831  0013BA  0E00               	movlw	0
  8832  0013BC  22DD               	addwfc	postdec2,f,c
  8833                           
  8834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8835  0013BE  0E00               	movlw	0
  8836  0013C0  6E4B               	movwf	_width+1,c
  8837  0013C2  0E00               	movlw	0
  8838  0013C4  6E4A               	movwf	_width,c
  8839  0013C6  C04A  F04E         	movff	_width,_flags
  8840  0013CA  C04B  F04F         	movff	_width+1,_flags+1
  8841                           
  8842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8843  0013CE  684C               	setf	_prec,c
  8844  0013D0  684D               	setf	_prec+1,c
  8845                           
  8846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8847  0013D2  0E00               	movlw	0
  8848  0013D4  0100               	movlb	0	; () banked
  8849  0013D6  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8850  0013D8  0E00               	movlw	0
  8851  0013DA  D014               	goto	L3
  8852  0013DC                     l6941:
  8853                           
  8854                           ; BSR set to: 0
  8855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8856  0013DC  804E               	bsf	_flags,0,c
  8857  0013DE                     l6943:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8861  0013DE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8862  0013E2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8863  0013E6  2ADE               	incf	postinc2,f,c
  8864  0013E8  0E00               	movlw	0
  8865  0013EA  22DD               	addwfc	postdec2,f,c
  8866                           
  8867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8868  0013EC  D02E               	goto	l6967
  8869  0013EE                     l6945:
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8873  0013EE  824E               	bsf	_flags,1,c
  8874  0013F0  D7F6               	goto	l6943
  8875  0013F2                     l6949:
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8879  0013F2  844E               	bsf	_flags,2,c
  8880  0013F4  D7F4               	goto	l6943
  8881  0013F6                     l6953:
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8885  0013F6  864E               	bsf	_flags,3,c
  8886  0013F8  D7F2               	goto	l6943
  8887  0013FA                     l6957:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8891  0013FA  884E               	bsf	_flags,4,c
  8892  0013FC  D7F0               	goto	l6943
  8893  0013FE                     l6961:
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8897  0013FE  0E00               	movlw	0
  8898  001400  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8899  001402  0E01               	movlw	1
  8900  001404                     L3:
  8901  001404  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8902                           
  8903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8904  001406  D021               	goto	l6967
  8905  001408                     l6965:
  8906                           
  8907                           ; BSR set to: 0
  8908  001408  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8909  00140C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8910  001410  CFDE FFF6          	movff	postinc2,tblptrl
  8911  001414  CFDD FFF7          	movff	postdec2,tblptrh
  8912  001418                     	if	0	;tblptru may be non-zero
  8913  001418                     	endif
  8914  001418                     	if	0	;tblptru may be non-zero
  8915  001418                     	endif
  8916  001418  0008               	tblrd		*
  8917  00141A  50F5               	movf	tablat,w,c
  8918  00141C  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8919  00141E  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8920                           
  8921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8922                           ; Switch size 1, requested type "simple"
  8923                           ; Number of cases is 1, Range of values is 0 to 0
  8924                           ; switch strategies available:
  8925                           ; Name         Instructions Cycles
  8926                           ; simple_byte            4     3 (average)
  8927                           ;	Chosen strategy is simple_byte
  8928  001420  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8929  001422  0A00               	xorlw	0	; case 0
  8930  001424  A4D8               	btfss	status,2,c
  8931  001426  D7EB               	goto	l6961
  8932                           
  8933                           ; BSR set to: 0
  8934                           ; Switch size 1, requested type "simple"
  8935                           ; Number of cases is 5, Range of values is 32 to 48
  8936                           ; switch strategies available:
  8937                           ; Name         Instructions Cycles
  8938                           ; simple_byte           16     9 (average)
  8939                           ;	Chosen strategy is simple_byte
  8940  001428  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8941  00142A  0A20               	xorlw	32	; case 32
  8942  00142C  B4D8               	btfsc	status,2,c
  8943  00142E  D7E3               	goto	l6953
  8944  001430  0A03               	xorlw	3	; case 35
  8945  001432  B4D8               	btfsc	status,2,c
  8946  001434  D7E2               	goto	l6957
  8947  001436  0A08               	xorlw	8	; case 43
  8948  001438  B4D8               	btfsc	status,2,c
  8949  00143A  D7DB               	goto	l6949
  8950  00143C  0A06               	xorlw	6	; case 45
  8951  00143E  B4D8               	btfsc	status,2,c
  8952  001440  D7CD               	goto	l6941
  8953  001442  0A1D               	xorlw	29	; case 48
  8954  001444  B4D8               	btfsc	status,2,c
  8955  001446  D7D3               	goto	l6945
  8956  001448  D7DA               	goto	l6961
  8957  00144A                     l6967:
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8961  00144A  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8962  00144C  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8963  00144E  B4D8               	btfsc	status,2,c
  8964  001450  D7DB               	goto	l6965
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8968  001452  B04E               	btfsc	_flags,0,c
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8972  001454  924E               	bcf	_flags,1,c
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8976  001456  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8977  00145A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8978  00145E  CFDE FFF6          	movff	postinc2,tblptrl
  8979  001462  CFDD FFF7          	movff	postdec2,tblptrh
  8980  001466                     	if	0	;tblptru may be non-zero
  8981  001466                     	endif
  8982  001466                     	if	0	;tblptru may be non-zero
  8983  001466                     	endif
  8984  001466  0008               	tblrd		*
  8985  001468  50F5               	movf	tablat,w,c
  8986  00146A  0A2A               	xorlw	42
  8987  00146C  A4D8               	btfss	status,2,c
  8988  00146E  D023               	goto	l6979
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8992  001470  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8993  001474  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8994  001478  2ADE               	incf	postinc2,f,c
  8995  00147A  0E00               	movlw	0
  8996  00147C  22DD               	addwfc	postdec2,f,c
  8997                           
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8999  00147E  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9000  001482  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9001  001486  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9002  00148A  0E02               	movlw	2
  9003  00148C  26DE               	addwf	postinc2,f,c
  9004  00148E  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9005  001492  0E00               	movlw	0
  9006  001494  22DD               	addwfc	postdec2,f,c
  9007  001496  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9008  00149A  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9009  00149E  CFDE F04A          	movff	postinc2,_width
  9010  0014A2  CFDD F04B          	movff	postdec2,_width+1
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9014  0014A6  AE4B               	btfss	_width+1,7,c
  9015  0014A8  D040               	goto	u7600
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9019  0014AA  804E               	bsf	_flags,0,c
  9020                           
  9021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9022  0014AC  6C4A               	negf	_width,c
  9023  0014AE  1E4B               	comf	_width+1,f,c
  9024  0014B0  B0D8               	btfsc	status,0,c
  9025  0014B2  2A4B               	incf	_width+1,f,c
  9026  0014B4  D03A               	goto	u7600
  9027  0014B6                     l6979:
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9031  0014B6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9032  0014BA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9033  0014BE  CFDE F087          	movff	postinc2,atoi@s
  9034  0014C2  CFDD F088          	movff	postdec2,atoi@s+1
  9035  0014C6  EC8A  F015         	call	_atoi	;wreg free
  9036  0014CA  C087  F04A         	movff	?_atoi,_width
  9037  0014CE  C088  F04B         	movff	?_atoi+1,_width+1
  9038                           
  9039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9040  0014D2  D007               	goto	l6983
  9041  0014D4                     l6981:
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9045  0014D4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9046  0014D8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9047  0014DC  2ADE               	incf	postinc2,f,c
  9048  0014DE  0E00               	movlw	0
  9049  0014E0  22DD               	addwfc	postdec2,f,c
  9050  0014E2                     l6983:
  9051  0014E2  0ED0               	movlw	208
  9052  0014E4  0100               	movlb	0	; () banked
  9053  0014E6  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  9054  0014E8  0EFF               	movlw	255
  9055  0014EA  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9056  0014EC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9057  0014F0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9058  0014F4  CFDE FFF6          	movff	postinc2,tblptrl
  9059  0014F8  CFDD FFF7          	movff	postdec2,tblptrh
  9060  0014FC                     	if	0	;tblptru may be non-zero
  9061  0014FC                     	endif
  9062  0014FC                     	if	0	;tblptru may be non-zero
  9063  0014FC                     	endif
  9064  0014FC  0008               	tblrd		*
  9065  0014FE  50F5               	movf	tablat,w,c
  9066  001500  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9067  001502  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  9068  001504  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  9069  001506  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  9070  001508  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9071  00150A  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  9072  00150C  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  9073  00150E  E106               	bnz	u7580
  9074  001510  0E0A               	movlw	10
  9075  001512  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  9076  001514  B0D8               	btfsc	status,0,c
  9077  001516  D002               	goto	u7580
  9078  001518  0E01               	movlw	1
  9079  00151A  D001               	goto	u7590
  9080  00151C                     u7580:
  9081  00151C  0E00               	movlw	0
  9082  00151E                     u7590:
  9083  00151E  6FE3               	movwf	_vfpfcnvrt$1252& (0+255),b
  9084  001520  6BE4               	clrf	(_vfpfcnvrt$1252+1)& (0+255),b
  9085                           
  9086                           ; BSR set to: 0
  9087  001522  51E3               	movf	_vfpfcnvrt$1252& (0+255),w,b
  9088  001524  11E4               	iorwf	(_vfpfcnvrt$1252+1)& (0+255),w,b
  9089  001526  A4D8               	btfss	status,2,c
  9090  001528  D7D5               	goto	l6981
  9091  00152A                     u7600:
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9095  00152A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9096  00152E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9097  001532  CFDE FFF6          	movff	postinc2,tblptrl
  9098  001536  CFDD FFF7          	movff	postdec2,tblptrh
  9099  00153A                     	if	0	;tblptru may be non-zero
  9100  00153A                     	endif
  9101  00153A                     	if	0	;tblptru may be non-zero
  9102  00153A                     	endif
  9103  00153A  0008               	tblrd		*
  9104  00153C  50F5               	movf	tablat,w,c
  9105  00153E  0A64               	xorlw	100
  9106  001540  B4D8               	btfsc	status,2,c
  9107  001542  D00D               	goto	u7620
  9108                           
  9109                           ; BSR set to: 0
  9110  001544  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9111  001548  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9112  00154C  CFDE FFF6          	movff	postinc2,tblptrl
  9113  001550  CFDD FFF7          	movff	postdec2,tblptrh
  9114  001554                     	if	0	;tblptru may be non-zero
  9115  001554                     	endif
  9116  001554                     	if	0	;tblptru may be non-zero
  9117  001554                     	endif
  9118  001554  0008               	tblrd		*
  9119  001556  50F5               	movf	tablat,w,c
  9120  001558  0A69               	xorlw	105
  9121  00155A  A4D8               	btfss	status,2,c
  9122  00155C  D03F               	goto	l6999
  9123  00155E                     u7620:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9127  00155E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9128  001562  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9129  001566  2ADE               	incf	postinc2,f,c
  9130  001568  0E00               	movlw	0
  9131  00156A  22DD               	addwfc	postdec2,f,c
  9132                           
  9133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9134  00156C  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9135  001570  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9136  001574  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9137  001578  0E02               	movlw	2
  9138  00157A  26DE               	addwf	postinc2,f,c
  9139  00157C  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9140  001580  0E00               	movlw	0
  9141  001582  22DD               	addwfc	postdec2,f,c
  9142  001584  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9143  001588  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9144  00158C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  9145  001590  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  9146  001594  0E00               	movlw	0
  9147  001596  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9148  001598  0EFF               	movlw	-1
  9149  00159A  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9150  00159C  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9151  00159E  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9152  0015A0  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9153  0015A2  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9154  0015A4  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9158  0015A6  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  9159  0015AA  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9160  0015AE  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  9161  0015B2  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9162  0015B6  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9163  0015BA  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9164  0015BE  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9165  0015C2  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9166  0015C6  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9167  0015CA  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9168  0015CE  EC7C  F00E         	call	_dtoa	;wreg free
  9169  0015D2  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  9170  0015D6  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9171  0015DA  0012               	return	
  9172  0015DC                     l6999:
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9176  0015DC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9177  0015E0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9178  0015E4  CFDE FFF6          	movff	postinc2,tblptrl
  9179  0015E8  CFDD FFF7          	movff	postdec2,tblptrh
  9180  0015EC                     	if	0	;tblptru may be non-zero
  9181  0015EC                     	endif
  9182  0015EC                     	if	0	;tblptru may be non-zero
  9183  0015EC                     	endif
  9184  0015EC  0008               	tblrd		*
  9185  0015EE  50F5               	movf	tablat,w,c
  9186  0015F0  0A78               	xorlw	120
  9187  0015F2  B4D8               	btfsc	status,2,c
  9188  0015F4  D00D               	goto	u7640
  9189                           
  9190                           ; BSR set to: 0
  9191  0015F6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9192  0015FA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9193  0015FE  CFDE FFF6          	movff	postinc2,tblptrl
  9194  001602  CFDD FFF7          	movff	postdec2,tblptrh
  9195  001606                     	if	0	;tblptru may be non-zero
  9196  001606                     	endif
  9197  001606                     	if	0	;tblptru may be non-zero
  9198  001606                     	endif
  9199  001606  0008               	tblrd		*
  9200  001608  50F5               	movf	tablat,w,c
  9201  00160A  0A58               	xorlw	88
  9202  00160C  A4D8               	btfss	status,2,c
  9203  00160E  D04D               	goto	l7013
  9204  001610                     u7640:
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9208  001610  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9209  001614  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9210  001618  CFDE FFF6          	movff	postinc2,tblptrl
  9211  00161C  CFDD FFF7          	movff	postdec2,tblptrh
  9212  001620                     	if	0	;tblptru may be non-zero
  9213  001620                     	endif
  9214  001620                     	if	0	;tblptru may be non-zero
  9215  001620                     	endif
  9216  001620  0008               	tblrd		*
  9217  001622  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9221  001626  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9222  00162A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9223  00162E  2ADE               	incf	postinc2,f,c
  9224  001630  0E00               	movlw	0
  9225  001632  22DD               	addwfc	postdec2,f,c
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9229  001634  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9230  001638  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9231  00163C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9232  001640  0E02               	movlw	2
  9233  001642  26DE               	addwf	postinc2,f,c
  9234  001644  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9235  001648  0E00               	movlw	0
  9236  00164A  22DD               	addwfc	postdec2,f,c
  9237  00164C  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9238  001650  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9239  001654  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  9240  001658  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  9241  00165C  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9242  001660  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9243  001664  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9244  001666  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9245  001668  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9246  00166A  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9247  00166C  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9248  00166E  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9252  001670  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  9253  001674  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9254  001678  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  9255  00167C  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9256  001680  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9257  001684  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9258  001688  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9259  00168C  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9260  001690  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9261  001694  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9262  001698  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  9263  00169C  ECA0  F00F         	call	_xtoa	;wreg free
  9264  0016A0  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  9265  0016A4  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9266  0016A8  0012               	return	
  9267  0016AA                     l7013:
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9271  0016AA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9272  0016AE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9273  0016B2  CFDE FFF6          	movff	postinc2,tblptrl
  9274  0016B6  CFDD FFF7          	movff	postdec2,tblptrh
  9275  0016BA                     	if	0	;tblptru may be non-zero
  9276  0016BA                     	endif
  9277  0016BA                     	if	0	;tblptru may be non-zero
  9278  0016BA                     	endif
  9279  0016BA  0008               	tblrd		*
  9280  0016BC  50F5               	movf	tablat,w,c
  9281  0016BE  0A25               	xorlw	37
  9282  0016C0  A4D8               	btfss	status,2,c
  9283  0016C2  D017               	goto	l7023
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9287  0016C4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9288  0016C8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9289  0016CC  2ADE               	incf	postinc2,f,c
  9290  0016CE  0E00               	movlw	0
  9291  0016D0  22DD               	addwfc	postdec2,f,c
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9295  0016D2  0E00               	movlw	0
  9296  0016D4  6F85               	movwf	(fputc@c+1)& (0+255),b
  9297  0016D6  0E25               	movlw	37
  9298  0016D8  6F84               	movwf	fputc@c& (0+255),b
  9299  0016DA  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9300  0016DE  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9301  0016E2  EC83  F01C         	call	_fputc	;wreg free
  9302  0016E6                     l7019:
  9303                           
  9304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9305  0016E6  0E00               	movlw	0
  9306  0016E8  0100               	movlb	0	; () banked
  9307  0016EA  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9308  0016EC  0E01               	movlw	1
  9309  0016EE  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9310  0016F0  0012               	return	
  9311  0016F2                     l7023:
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9315  0016F2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9316  0016F6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9317  0016FA  2ADE               	incf	postinc2,f,c
  9318  0016FC  0E00               	movlw	0
  9319  0016FE  22DD               	addwfc	postdec2,f,c
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9323  001700  0E00               	movlw	0
  9324  001702  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9325  001704  0E00               	movlw	0
  9326  001706  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9327  001708  0012               	return	
  9328  00170A                     l7029:
  9329                           
  9330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9331  00170A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9332  00170E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9333  001712  CFDE FFF6          	movff	postinc2,tblptrl
  9334  001716  CFDD FFF7          	movff	postdec2,tblptrh
  9335  00171A                     	if	0	;tblptru may be non-zero
  9336  00171A                     	endif
  9337  00171A                     	if	0	;tblptru may be non-zero
  9338  00171A                     	endif
  9339  00171A  0008               	tblrd		*
  9340  00171C  50F5               	movf	tablat,w,c
  9341  00171E  0100               	movlb	0	; () banked
  9342  001720  6F84               	movwf	fputc@c& (0+255),b
  9343  001722  6B85               	clrf	(fputc@c+1)& (0+255),b
  9344  001724  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9345  001728  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9346  00172C  EC83  F01C         	call	_fputc	;wreg free
  9347                           
  9348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9349  001730  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9350  001734  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9351  001738  2ADE               	incf	postinc2,f,c
  9352  00173A  0E00               	movlw	0
  9353  00173C  22DD               	addwfc	postdec2,f,c
  9354  00173E  D7D3               	goto	l7019
  9355  001740                     __end_of_vfpfcnvrt:
  9356                           	opt callstack 0
  9357                           
  9358 ;; *************** function _xtoa *****************
  9359 ;; Defined at:
  9360 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9363 ;;		 -> NULL(0), 
  9364 ;;  d               8   33[BANK0 ] unsigned long long 
  9365 ;;  x               1   41[BANK0 ] unsigned char 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  n               8   58[BANK0 ] unsigned long long 
  9368 ;;  c               2   68[BANK0 ] int 
  9369 ;;  i               2   66[BANK0 ] int 
  9370 ;;  w               2   56[BANK0 ] int 
  9371 ;;  p               2   54[BANK0 ] int 
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  2   31[BANK0 ] int 
  9374 ;; Registers used:
  9375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9381 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9382 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9383 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9384 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;Total ram usage:       39 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; Hardware stack levels required when called:   10
  9388 ;; This function calls:
  9389 ;;		_isalpha
  9390 ;;		_isupper
  9391 ;;		_pad
  9392 ;;		_toupper
  9393 ;; This function is called by:
  9394 ;;		_vfpfcnvrt
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398                           	psect	text23
  9399  001F40                     __ptext23:
  9400                           	opt callstack 0
  9401  001F40                     _xtoa:
  9402                           	opt callstack 16
  9403                           
  9404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9405                           
  9406                           ;incstack = 0
  9407  001F40  AE4D               	btfss	_prec+1,7,c
  9408                           
  9409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9410  001F42  924E               	bcf	_flags,1,c
  9411                           
  9412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9413  001F44  BE4D               	btfsc	_prec+1,7,c
  9414  001F46  D005               	goto	u7300
  9415  001F48  504D               	movf	_prec+1,w,c
  9416  001F4A  E109               	bnz	l665
  9417  001F4C  044C               	decf	_prec,w,c
  9418  001F4E  B0D8               	btfsc	status,0,c
  9419  001F50  D006               	goto	l665
  9420  001F52                     u7300:
  9421  001F52  0E00               	movlw	0
  9422  001F54  0100               	movlb	0	; () banked
  9423  001F56  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  9424  001F58  0E01               	movlw	1
  9425  001F5A  6FB6               	movwf	xtoa@p& (0+255),b
  9426  001F5C  D004               	goto	l667
  9427  001F5E                     l665:
  9428  001F5E  C04C  F0B6         	movff	_prec,xtoa@p
  9429  001F62  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  9430  001F66                     l667:
  9431                           
  9432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9433  001F66  C04A  F0B8         	movff	_width,xtoa@w
  9434  001F6A  C04B  F0B9         	movff	_width+1,xtoa@w+1
  9435                           
  9436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9437  001F6E  A84E               	btfss	_flags,4,c
  9438  001F70  D005               	goto	l6833
  9439                           
  9440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9441  001F72  0100               	movlb	0	; () banked
  9442  001F74  0EFE               	movlw	254
  9443  001F76  27B8               	addwf	xtoa@w& (0+255),f,b
  9444  001F78  0EFF               	movlw	255
  9445  001F7A  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  9446  001F7C                     l6833:
  9447                           
  9448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9449  001F7C  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  9450  001F80  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  9451  001F84  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  9452  001F88  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  9453  001F8C  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  9454  001F90  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  9455  001F94  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  9456  001F98  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  9457                           
  9458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9459  001F9C  0E00               	movlw	0
  9460  001F9E  0100               	movlb	0	; () banked
  9461  001FA0  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  9462  001FA2  0E1F               	movlw	31
  9463  001FA4  6FC2               	movwf	xtoa@i& (0+255),b
  9464                           
  9465                           ; BSR set to: 0
  9466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9467  001FA6  0E00               	movlw	0
  9468  001FA8  0102               	movlb	2	; () banked
  9469  001FAA  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9470                           
  9471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9472  001FAC  D094               	goto	l6869
  9473  001FAE                     l6839:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9477  001FAE  07C2               	decf	xtoa@i& (0+255),f,b
  9478  001FB0  A0D8               	btfss	status,0,c
  9479  001FB2  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9483  001FB4  0E0F               	movlw	15
  9484  001FB6  15BA               	andwf	xtoa@n& (0+255),w,b
  9485  001FB8  6FC4               	movwf	xtoa@c& (0+255),b
  9486  001FBA  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9490  001FBC  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  9491  001FBE  D008               	goto	l6847
  9492  001FC0  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  9493  001FC2  E104               	bnz	u7320
  9494  001FC4  0E0A               	movlw	10
  9495  001FC6  5DC4               	subwf	xtoa@c& (0+255),w,b
  9496  001FC8  A0D8               	btfss	status,0,c
  9497  001FCA  D002               	goto	l6847
  9498  001FCC                     u7320:
  9499                           
  9500                           ; BSR set to: 0
  9501  001FCC  0E57               	movlw	87
  9502  001FCE  D001               	goto	L4
  9503  001FD0                     l6847:
  9504                           
  9505                           ; BSR set to: 0
  9506  001FD0  0E30               	movlw	48
  9507  001FD2                     L4:
  9508  001FD2  25C4               	addwf	xtoa@c& (0+255),w,b
  9509  001FD4  6FC4               	movwf	xtoa@c& (0+255),b
  9510  001FD6  0E00               	movlw	0
  9511  001FD8  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  9512  001FDA  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  9513                           
  9514                           ; BSR set to: 0
  9515                           
  9516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9517  001FDC  0EBF               	movlw	191
  9518  001FDE  6FAA               	movwf	??_xtoa& (0+255),b
  9519  001FE0  0EFF               	movlw	255
  9520  001FE2  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9521  001FE4  51A9               	movf	xtoa@x& (0+255),w,b
  9522  001FE6  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9523  001FE8  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  9524  001FEA  51AA               	movf	??_xtoa& (0+255),w,b
  9525  001FEC  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9526  001FEE  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9527  001FF0  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9528  001FF2  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9529  001FF4  E106               	bnz	u7330
  9530  001FF6  0E1A               	movlw	26
  9531  001FF8  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9532  001FFA  B0D8               	btfsc	status,0,c
  9533  001FFC  D002               	goto	u7330
  9534  001FFE  0E01               	movlw	1
  9535  002000  D001               	goto	u7340
  9536  002002                     u7330:
  9537  002002  0E00               	movlw	0
  9538  002004                     u7340:
  9539  002004  6FB2               	movwf	_xtoa$1237& (0+255),b
  9540  002006  6BB3               	clrf	(_xtoa$1237+1)& (0+255),b
  9541                           
  9542                           ; BSR set to: 0
  9543  002008  51B2               	movf	_xtoa$1237& (0+255),w,b
  9544  00200A  11B3               	iorwf	(_xtoa$1237+1)& (0+255),w,b
  9545  00200C  B4D8               	btfsc	status,2,c
  9546  00200E  D027               	goto	l6861
  9547                           
  9548                           ; BSR set to: 0
  9549  002010  0E9F               	movlw	159
  9550  002012  6FAA               	movwf	??_xtoa& (0+255),b
  9551  002014  0EFF               	movlw	255
  9552  002016  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9553  002018  0E20               	movlw	32
  9554  00201A  11C4               	iorwf	xtoa@c& (0+255),w,b
  9555  00201C  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9556  00201E  0E00               	movlw	0
  9557  002020  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  9558  002022  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  9559  002024  51AA               	movf	??_xtoa& (0+255),w,b
  9560  002026  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9561  002028  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9562  00202A  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9563  00202C  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9564  00202E  E106               	bnz	u7360
  9565  002030  0E1A               	movlw	26
  9566  002032  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9567  002034  B0D8               	btfsc	status,0,c
  9568  002036  D002               	goto	u7360
  9569  002038  0E01               	movlw	1
  9570  00203A  D001               	goto	u7370
  9571  00203C                     u7360:
  9572  00203C  0E00               	movlw	0
  9573  00203E                     u7370:
  9574  00203E  6FB4               	movwf	_xtoa$1238& (0+255),b
  9575  002040  6BB5               	clrf	(_xtoa$1238+1)& (0+255),b
  9576                           
  9577                           ; BSR set to: 0
  9578  002042  51B4               	movf	_xtoa$1238& (0+255),w,b
  9579  002044  11B5               	iorwf	(_xtoa$1238+1)& (0+255),w,b
  9580  002046  B4D8               	btfsc	status,2,c
  9581  002048  D00A               	goto	l6861
  9582                           
  9583                           ; BSR set to: 0
  9584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9585  00204A  C0C4  F086         	movff	xtoa@c,toupper@c
  9586  00204E  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  9587  002052  EC9D  F01D         	call	_toupper	;wreg free
  9588  002056  C086  F0C4         	movff	?_toupper,xtoa@c
  9589  00205A  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  9590  00205E                     l6861:
  9591                           
  9592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9593  00205E  0E80               	movlw	low _dbuf
  9594  002060  0100               	movlb	0	; () banked
  9595  002062  25C2               	addwf	xtoa@i& (0+255),w,b
  9596  002064  6ED9               	movwf	fsr2l,c
  9597  002066  0E02               	movlw	high _dbuf
  9598  002068  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9599  00206A  6EDA               	movwf	fsr2h,c
  9600  00206C  C0C4  FFDF         	movff	xtoa@c,indf2
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9604  002070  07B6               	decf	xtoa@p& (0+255),f,b
  9605  002072  A0D8               	btfss	status,0,c
  9606  002074  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9610  002076  07B8               	decf	xtoa@w& (0+255),f,b
  9611  002078  A0D8               	btfss	status,0,c
  9612  00207A  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9616  00207C  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  9617  002080  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  9618  002084  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  9619  002088  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  9620  00208C  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  9621  002090  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  9622  002094  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  9623  002098  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  9624  00209C  0E05               	movlw	5
  9625  00209E  D009               	goto	u7390
  9626  0020A0                     u7395:
  9627  0020A0  90D8               	bcf	status,0,c
  9628  0020A2  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  9629  0020A4  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  9630  0020A6  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  9631  0020A8  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  9632  0020AA  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  9633  0020AC  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  9634  0020AE  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  9635  0020B0  33AA               	rrcf	??_xtoa& (0+255),f,b
  9636  0020B2                     u7390:
  9637  0020B2  2EE8               	decfsz	wreg,f,c
  9638  0020B4  D7F5               	goto	u7395
  9639  0020B6  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  9640  0020BA  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  9641  0020BE  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  9642  0020C2  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  9643  0020C6  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  9644  0020CA  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  9645  0020CE  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  9646  0020D2  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  9647  0020D6                     l6869:
  9648                           
  9649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9650  0020D6  0100               	movlb	0	; () banked
  9651  0020D8  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  9652  0020DA  D020               	goto	u7440
  9653  0020DC  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  9654  0020DE  E104               	bnz	u7400
  9655  0020E0  0E02               	movlw	2
  9656  0020E2  5DC2               	subwf	xtoa@i& (0+255),w,b
  9657  0020E4  A0D8               	btfss	status,0,c
  9658  0020E6  D01A               	goto	u7440
  9659  0020E8                     u7400:
  9660                           
  9661                           ; BSR set to: 0
  9662  0020E8  51BA               	movf	xtoa@n& (0+255),w,b
  9663  0020EA  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  9664  0020EC  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  9665  0020EE  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  9666  0020F0  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  9667  0020F2  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  9668  0020F4  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  9669  0020F6  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  9670  0020F8  A4D8               	btfss	status,2,c
  9671  0020FA  D759               	goto	l6839
  9672                           
  9673                           ; BSR set to: 0
  9674  0020FC  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9675  0020FE  D005               	goto	u7420
  9676  002100  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9677  002102  E102               	bnz	u7421
  9678  002104  05B6               	decf	xtoa@p& (0+255),w,b
  9679  002106  B0D8               	btfsc	status,0,c
  9680  002108                     u7421:
  9681  002108  D752               	goto	l6839
  9682  00210A                     u7420:
  9683                           
  9684                           ; BSR set to: 0
  9685  00210A  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9686  00210C  D007               	goto	u7440
  9687  00210E  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9688  002110  E103               	bnz	u7430
  9689  002112  05B8               	decf	xtoa@w& (0+255),w,b
  9690  002114  A0D8               	btfss	status,0,c
  9691  002116  D002               	goto	u7440
  9692  002118                     u7430:
  9693                           
  9694                           ; BSR set to: 0
  9695  002118  B24E               	btfsc	_flags,1,c
  9696  00211A  D749               	goto	l6839
  9697  00211C                     u7440:
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9701  00211C  A84E               	btfss	_flags,4,c
  9702  00211E  D016               	goto	l6885
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9706  002120  07C2               	decf	xtoa@i& (0+255),f,b
  9707  002122  A0D8               	btfss	status,0,c
  9708  002124  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9712  002126  0E80               	movlw	low _dbuf
  9713  002128  25C2               	addwf	xtoa@i& (0+255),w,b
  9714  00212A  6ED9               	movwf	fsr2l,c
  9715  00212C  0E02               	movlw	high _dbuf
  9716  00212E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9717  002130  6EDA               	movwf	fsr2h,c
  9718  002132  C0A9  FFDF         	movff	xtoa@x,indf2
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9722  002136  07C2               	decf	xtoa@i& (0+255),f,b
  9723  002138  A0D8               	btfss	status,0,c
  9724  00213A  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9725                           
  9726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9727  00213C  0E80               	movlw	low _dbuf
  9728  00213E  25C2               	addwf	xtoa@i& (0+255),w,b
  9729  002140  6ED9               	movwf	fsr2l,c
  9730  002142  0E02               	movlw	high _dbuf
  9731  002144  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9732  002146  6EDA               	movwf	fsr2h,c
  9733  002148  0E30               	movlw	48
  9734  00214A  6EDF               	movwf	indf2,c
  9735  00214C                     l6885:
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9739  00214C  C09F  F094         	movff	xtoa@fp,pad@fp
  9740  002150  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9741  002154  0E80               	movlw	low _dbuf
  9742  002156  25C2               	addwf	xtoa@i& (0+255),w,b
  9743  002158  6F96               	movwf	pad@buf& (0+255),b
  9744  00215A  0E02               	movlw	high _dbuf
  9745  00215C  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9746  00215E  6F97               	movwf	(pad@buf+1)& (0+255),b
  9747  002160  C0B8  F098         	movff	xtoa@w,pad@p
  9748  002164  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9749  002168  EC36  F01B         	call	_pad	;wreg free
  9750  00216C  C094  F09F         	movff	?_pad,?_xtoa
  9751  002170  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9752  002174  0012               	return		;funcret
  9753  002176                     __end_of_xtoa:
  9754                           	opt callstack 0
  9755                           
  9756 ;; *************** function _toupper *****************
  9757 ;; Defined at:
  9758 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  c               2    6[BANK0 ] int 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;		None
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  2    6[BANK0 ] int 
  9765 ;; Registers used:
  9766 ;;		wreg, status,2, status,0
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9773 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9774 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9775 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9776 ;;Total ram usage:        8 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:    4
  9779 ;; This function calls:
  9780 ;;		_islower
  9781 ;; This function is called by:
  9782 ;;		_xtoa
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text24
  9787  003B3A                     __ptext24:
  9788                           	opt callstack 0
  9789  003B3A                     _toupper:
  9790                           	opt callstack 21
  9791                           
  9792                           ;incstack = 0
  9793  003B3A  0E9F               	movlw	159
  9794  003B3C  0100               	movlb	0	; () banked
  9795  003B3E  6F88               	movwf	??_toupper& (0+255),b
  9796  003B40  0EFF               	movlw	255
  9797  003B42  6F89               	movwf	(??_toupper+1)& (0+255),b
  9798  003B44  C086  F08A         	movff	toupper@c,??_toupper+2
  9799  003B48  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9800  003B4C  5188               	movf	??_toupper& (0+255),w,b
  9801  003B4E  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9802  003B50  5189               	movf	(??_toupper+1)& (0+255),w,b
  9803  003B52  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9804  003B54  518B               	movf	(??_toupper+3)& (0+255),w,b
  9805  003B56  E106               	bnz	u6940
  9806  003B58  0E1A               	movlw	26
  9807  003B5A  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9808  003B5C  B0D8               	btfsc	status,0,c
  9809  003B5E  D002               	goto	u6940
  9810  003B60  0E01               	movlw	1
  9811  003B62  D001               	goto	u6950
  9812  003B64                     u6940:
  9813  003B64  0E00               	movlw	0
  9814  003B66                     u6950:
  9815  003B66  6F8C               	movwf	_toupper$1802& (0+255),b
  9816  003B68  6B8D               	clrf	(_toupper$1802+1)& (0+255),b
  9817                           
  9818                           ; BSR set to: 0
  9819  003B6A  518C               	movf	_toupper$1802& (0+255),w,b
  9820  003B6C  118D               	iorwf	(_toupper$1802+1)& (0+255),w,b
  9821  003B6E  B4D8               	btfsc	status,2,c
  9822  003B70  D005               	goto	l1505
  9823                           
  9824                           ; BSR set to: 0
  9825  003B72  0E5F               	movlw	95
  9826  003B74  1586               	andwf	toupper@c& (0+255),w,b
  9827  003B76  6F86               	movwf	?_toupper& (0+255),b
  9828  003B78  6B87               	clrf	(?_toupper+1)& (0+255),b
  9829  003B7A  0012               	return	
  9830  003B7C                     l1505:
  9831                           
  9832                           ; BSR set to: 0
  9833  003B7C  C086  F086         	movff	toupper@c,?_toupper
  9834  003B80  C087  F087         	movff	toupper@c+1,?_toupper+1
  9835                           
  9836                           ; BSR set to: 0
  9837  003B84  0012               	return		;funcret
  9838  003B86                     __end_of_toupper:
  9839                           	opt callstack 0
  9840                           
  9841 ;; *************** function _islower *****************
  9842 ;; Defined at:
  9843 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;  c               2    0[BANK0 ] int 
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;		None
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  2    0[BANK0 ] int 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;Total ram usage:        6 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:    3
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_toupper
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text25
  9872  003CDC                     __ptext25:
  9873                           	opt callstack 0
  9874  003CDC                     _islower:
  9875                           	opt callstack 21
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;incstack = 0
  9879  003CDC  0E9F               	movlw	159
  9880  003CDE  0100               	movlb	0	; () banked
  9881  003CE0  6F82               	movwf	??_islower& (0+255),b
  9882  003CE2  0EFF               	movlw	255
  9883  003CE4  6F83               	movwf	(??_islower+1)& (0+255),b
  9884  003CE6  C080  F084         	movff	islower@c,??_islower+2
  9885  003CEA  C081  F085         	movff	islower@c+1,??_islower+3
  9886  003CEE  5182               	movf	??_islower& (0+255),w,b
  9887  003CF0  2784               	addwf	(??_islower+2)& (0+255),f,b
  9888  003CF2  5183               	movf	(??_islower+1)& (0+255),w,b
  9889  003CF4  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9890  003CF6  5185               	movf	(??_islower+3)& (0+255),w,b
  9891  003CF8  E106               	bnz	u6830
  9892  003CFA  0E1A               	movlw	26
  9893  003CFC  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9894  003CFE  B0D8               	btfsc	status,0,c
  9895  003D00  D002               	goto	u6830
  9896  003D02  0E01               	movlw	1
  9897  003D04  D001               	goto	u6840
  9898  003D06                     u6830:
  9899  003D06  0E00               	movlw	0
  9900  003D08                     u6840:
  9901  003D08  6F80               	movwf	?_islower& (0+255),b
  9902  003D0A  6B81               	clrf	(?_islower+1)& (0+255),b
  9903                           
  9904                           ; BSR set to: 0
  9905  003D0C  0012               	return		;funcret
  9906  003D0E                     __end_of_islower:
  9907                           	opt callstack 0
  9908                           
  9909 ;; *************** function _isupper *****************
  9910 ;; Defined at:
  9911 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  c               2    0[BANK0 ] int 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  2    0[BANK0 ] int 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9925 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9927 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9929 ;;Total ram usage:        6 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    3
  9932 ;; This function calls:
  9933 ;;		Nothing
  9934 ;; This function is called by:
  9935 ;;		_xtoa
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           	psect	text26
  9940  003D0E                     __ptext26:
  9941                           	opt callstack 0
  9942  003D0E                     _isupper:
  9943                           	opt callstack 22
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;incstack = 0
  9947  003D0E  0EBF               	movlw	191
  9948  003D10  0100               	movlb	0	; () banked
  9949  003D12  6F82               	movwf	??_isupper& (0+255),b
  9950  003D14  0EFF               	movlw	255
  9951  003D16  6F83               	movwf	(??_isupper+1)& (0+255),b
  9952  003D18  C080  F084         	movff	isupper@c,??_isupper+2
  9953  003D1C  C081  F085         	movff	isupper@c+1,??_isupper+3
  9954  003D20  5182               	movf	??_isupper& (0+255),w,b
  9955  003D22  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9956  003D24  5183               	movf	(??_isupper+1)& (0+255),w,b
  9957  003D26  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9958  003D28  5185               	movf	(??_isupper+3)& (0+255),w,b
  9959  003D2A  E106               	bnz	u6900
  9960  003D2C  0E1A               	movlw	26
  9961  003D2E  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9962  003D30  B0D8               	btfsc	status,0,c
  9963  003D32  D002               	goto	u6900
  9964  003D34  0E01               	movlw	1
  9965  003D36  D001               	goto	u6910
  9966  003D38                     u6900:
  9967  003D38  0E00               	movlw	0
  9968  003D3A                     u6910:
  9969  003D3A  6F80               	movwf	?_isupper& (0+255),b
  9970  003D3C  6B81               	clrf	(?_isupper+1)& (0+255),b
  9971                           
  9972                           ; BSR set to: 0
  9973  003D3E  0012               	return		;funcret
  9974  003D40                     __end_of_isupper:
  9975                           	opt callstack 0
  9976                           
  9977 ;; *************** function _isalpha *****************
  9978 ;; Defined at:
  9979 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9980 ;; Parameters:    Size  Location     Type
  9981 ;;  c               2    0[BANK0 ] int 
  9982 ;; Auto vars:     Size  Location     Type
  9983 ;;		None
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  2    0[BANK0 ] int 
  9986 ;; Registers used:
  9987 ;;		wreg, status,2, status,0
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9993 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;Total ram usage:        6 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:    3
 10000 ;; This function calls:
 10001 ;;		Nothing
 10002 ;; This function is called by:
 10003 ;;		_xtoa
 10004 ;; This function uses a non-reentrant model
 10005 ;;
 10006                           
 10007                           	psect	text27
 10008  003C40                     __ptext27:
 10009                           	opt callstack 0
 10010  003C40                     _isalpha:
 10011                           	opt callstack 22
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;incstack = 0
 10015  003C40  0E9F               	movlw	159
 10016  003C42  0100               	movlb	0	; () banked
 10017  003C44  6F82               	movwf	??_isalpha& (0+255),b
 10018  003C46  0EFF               	movlw	255
 10019  003C48  6F83               	movwf	(??_isalpha+1)& (0+255),b
 10020  003C4A  0E20               	movlw	32
 10021  003C4C  1180               	iorwf	isalpha@c& (0+255),w,b
 10022  003C4E  6F84               	movwf	(??_isalpha+2)& (0+255),b
 10023  003C50  0E00               	movlw	0
 10024  003C52  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
 10025  003C54  6F85               	movwf	(??_isalpha+3)& (0+255),b
 10026  003C56  5182               	movf	??_isalpha& (0+255),w,b
 10027  003C58  2784               	addwf	(??_isalpha+2)& (0+255),f,b
 10028  003C5A  5183               	movf	(??_isalpha+1)& (0+255),w,b
 10029  003C5C  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
 10030  003C5E  5185               	movf	(??_isalpha+3)& (0+255),w,b
 10031  003C60  E106               	bnz	u6920
 10032  003C62  0E1A               	movlw	26
 10033  003C64  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
 10034  003C66  B0D8               	btfsc	status,0,c
 10035  003C68  D002               	goto	u6920
 10036  003C6A  0E01               	movlw	1
 10037  003C6C  D001               	goto	u6930
 10038  003C6E                     u6920:
 10039  003C6E  0E00               	movlw	0
 10040  003C70                     u6930:
 10041  003C70  6F80               	movwf	?_isalpha& (0+255),b
 10042  003C72  6B81               	clrf	(?_isalpha+1)& (0+255),b
 10043                           
 10044                           ; BSR set to: 0
 10045  003C74  0012               	return		;funcret
 10046  003C76                     __end_of_isalpha:
 10047                           	opt callstack 0
 10048                           
 10049 ;; *************** function _dtoa *****************
 10050 ;; Defined at:
 10051 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
 10054 ;;		 -> NULL(0), 
 10055 ;;  d               8   33[BANK0 ] long long 
 10056 ;; Auto vars:     Size  Location     Type
 10057 ;;  n               8   57[BANK0 ] long long 
 10058 ;;  i               2   65[BANK0 ] int 
 10059 ;;  s               2   55[BANK0 ] int 
 10060 ;;  w               2   53[BANK0 ] int 
 10061 ;;  p               2   51[BANK0 ] int 
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  2   31[BANK0 ] int 
 10064 ;; Registers used:
 10065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/0
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10071 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10072 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;Total ram usage:       36 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; Hardware stack levels required when called:   10
 10078 ;; This function calls:
 10079 ;;		___aodiv
 10080 ;;		___aomod
 10081 ;;		_abs
 10082 ;;		_pad
 10083 ;; This function is called by:
 10084 ;;		_vfpfcnvrt
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088                           	psect	text28
 10089  001CF8                     __ptext28:
 10090                           	opt callstack 0
 10091  001CF8                     _dtoa:
 10092                           	opt callstack 16
 10093                           
 10094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;incstack = 0
 10098  001CF8  C0A1  F0B9         	movff	dtoa@d,dtoa@n
 10099  001CFC  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
 10100  001D00  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
 10101  001D04  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
 10102  001D08  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
 10103  001D0C  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
 10104  001D10  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
 10105  001D14  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
 10106                           
 10107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 10108  001D18  0100               	movlb	0	; () banked
 10109  001D1A  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
 10110  001D1C  D002               	goto	u7140
 10111  001D1E  0E01               	movlw	1
 10112  001D20  D001               	goto	u7150
 10113  001D22                     u7140:
 10114  001D22  0E00               	movlw	0
 10115  001D24                     u7150:
 10116  001D24  6FB7               	movwf	dtoa@s& (0+255),b
 10117  001D26  6BB8               	clrf	(dtoa@s+1)& (0+255),b
 10118                           
 10119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10120  001D28  51B7               	movf	dtoa@s& (0+255),w,b
 10121  001D2A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10122  001D2C  B4D8               	btfsc	status,2,c
 10123  001D2E  D010               	goto	l6767
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10127  001D30  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
 10128  001D32  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
 10129  001D34  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
 10130  001D36  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
 10131  001D38  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
 10132  001D3A  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
 10133  001D3C  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
 10134  001D3E  6DB9               	negf	dtoa@n& (0+255),b
 10135  001D40  0E00               	movlw	0
 10136  001D42  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
 10137  001D44  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
 10138  001D46  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
 10139  001D48  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
 10140  001D4A  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
 10141  001D4C  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
 10142  001D4E  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
 10143  001D50                     l6767:
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10147  001D50  AE4D               	btfss	_prec+1,7,c
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10151  001D52  924E               	bcf	_flags,1,c
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10155  001D54  BE4D               	btfsc	_prec+1,7,c
 10156  001D56  D005               	goto	u7180
 10157  001D58  504D               	movf	_prec+1,w,c
 10158  001D5A  E108               	bnz	l640
 10159  001D5C  044C               	decf	_prec,w,c
 10160  001D5E  B0D8               	btfsc	status,0,c
 10161  001D60  D005               	goto	l640
 10162  001D62                     u7180:
 10163                           
 10164                           ; BSR set to: 0
 10165  001D62  0E00               	movlw	0
 10166  001D64  6FB4               	movwf	(dtoa@p+1)& (0+255),b
 10167  001D66  0E01               	movlw	1
 10168  001D68  6FB3               	movwf	dtoa@p& (0+255),b
 10169  001D6A  D004               	goto	l642
 10170  001D6C                     l640:
 10171                           
 10172                           ; BSR set to: 0
 10173  001D6C  C04C  F0B3         	movff	_prec,dtoa@p
 10174  001D70  C04D  F0B4         	movff	_prec+1,dtoa@p+1
 10175  001D74                     l642:
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10179  001D74  C04A  F0B5         	movff	_width,dtoa@w
 10180  001D78  C04B  F0B6         	movff	_width+1,dtoa@w+1
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10184  001D7C  51B7               	movf	dtoa@s& (0+255),w,b
 10185  001D7E  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10186  001D80  A4D8               	btfss	status,2,c
 10187  001D82  D002               	goto	u7200
 10188                           
 10189                           ; BSR set to: 0
 10190  001D84  A44E               	btfss	_flags,2,c
 10191  001D86  D003               	goto	l6781
 10192  001D88                     u7200:
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10196  001D88  07B5               	decf	dtoa@w& (0+255),f,b
 10197  001D8A  A0D8               	btfss	status,0,c
 10198  001D8C  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10199  001D8E                     l6781:
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10203  001D8E  0E00               	movlw	0
 10204  001D90  6FC2               	movwf	(dtoa@i+1)& (0+255),b
 10205  001D92  0E1F               	movlw	31
 10206  001D94  6FC1               	movwf	dtoa@i& (0+255),b
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10210  001D96  0E00               	movlw	0
 10211  001D98  0102               	movlb	2	; () banked
 10212  001D9A  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10213                           
 10214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10215  001D9C  D07D               	goto	l6795
 10216  001D9E                     l6785:
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10220  001D9E  07C1               	decf	dtoa@i& (0+255),f,b
 10221  001DA0  A0D8               	btfss	status,0,c
 10222  001DA2  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10226  001DA4  0E80               	movlw	low _dbuf
 10227  001DA6  25C1               	addwf	dtoa@i& (0+255),w,b
 10228  001DA8  6ED9               	movwf	fsr2l,c
 10229  001DAA  0E02               	movlw	high _dbuf
 10230  001DAC  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10231  001DAE  6EDA               	movwf	fsr2h,c
 10232  001DB0  C0B9  F080         	movff	dtoa@n,___aomod@dividend
 10233  001DB4  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
 10234  001DB8  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
 10235  001DBC  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
 10236  001DC0  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
 10237  001DC4  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
 10238  001DC8  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
 10239  001DCC  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
 10240  001DD0  0E0A               	movlw	10
 10241  001DD2  6F88               	movwf	___aomod@divisor& (0+255),b
 10242  001DD4  0E00               	movlw	0
 10243  001DD6  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
 10244  001DD8  0E00               	movlw	0
 10245  001DDA  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
 10246  001DDC  0E00               	movlw	0
 10247  001DDE  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
 10248  001DE0  0E00               	movlw	0
 10249  001DE2  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
 10250  001DE4  0E00               	movlw	0
 10251  001DE6  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
 10252  001DE8  0E00               	movlw	0
 10253  001DEA  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
 10254  001DEC  0E00               	movlw	0
 10255  001DEE  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
 10256  001DF0  ECCC  F016         	call	___aomod	;wreg free
 10257  001DF4  C080  F0A9         	movff	?___aomod,??_dtoa
 10258  001DF8  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
 10259  001DFC  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
 10260  001E00  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
 10261  001E04  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
 10262  001E08  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
 10263  001E0C  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
 10264  001E10  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
 10265  001E14  C0A9  F092         	movff	??_dtoa,abs@a
 10266  001E18  C0AB  F093         	movff	??_dtoa+2,abs@a+1
 10267  001E1C  EC3B  F01E         	call	_abs	;wreg free
 10268  001E20  0100               	movlb	0	; () banked
 10269  001E22  5192               	movf	?_abs& (0+255),w,b
 10270  001E24  0F30               	addlw	48
 10271  001E26  6EDF               	movwf	indf2,c
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10275  001E28  07B3               	decf	dtoa@p& (0+255),f,b
 10276  001E2A  A0D8               	btfss	status,0,c
 10277  001E2C  07B4               	decf	(dtoa@p+1)& (0+255),f,b
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10281  001E2E  07B5               	decf	dtoa@w& (0+255),f,b
 10282  001E30  A0D8               	btfss	status,0,c
 10283  001E32  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10287  001E34  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
 10288  001E38  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
 10289  001E3C  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
 10290  001E40  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
 10291  001E44  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
 10292  001E48  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
 10293  001E4C  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
 10294  001E50  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
 10295  001E54  0E0A               	movlw	10
 10296  001E56  6F88               	movwf	___aodiv@divisor& (0+255),b
 10297  001E58  0E00               	movlw	0
 10298  001E5A  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
 10299  001E5C  0E00               	movlw	0
 10300  001E5E  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
 10301  001E60  0E00               	movlw	0
 10302  001E62  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
 10303  001E64  0E00               	movlw	0
 10304  001E66  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
 10305  001E68  0E00               	movlw	0
 10306  001E6A  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
 10307  001E6C  0E00               	movlw	0
 10308  001E6E  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
 10309  001E70  0E00               	movlw	0
 10310  001E72  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
 10311  001E74  ECE5  F014         	call	___aodiv	;wreg free
 10312  001E78  C080  F0B9         	movff	?___aodiv,dtoa@n
 10313  001E7C  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
 10314  001E80  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
 10315  001E84  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
 10316  001E88  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
 10317  001E8C  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
 10318  001E90  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
 10319  001E94  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
 10320  001E98                     l6795:
 10321                           
 10322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10323  001E98  0100               	movlb	0	; () banked
 10324  001E9A  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
 10325  001E9C  D01F               	goto	u7250
 10326  001E9E  51C2               	movf	(dtoa@i+1)& (0+255),w,b
 10327  001EA0  E103               	bnz	u7210
 10328  001EA2  05C1               	decf	dtoa@i& (0+255),w,b
 10329  001EA4  A0D8               	btfss	status,0,c
 10330  001EA6  D01A               	goto	u7250
 10331  001EA8                     u7210:
 10332                           
 10333                           ; BSR set to: 0
 10334  001EA8  51B9               	movf	dtoa@n& (0+255),w,b
 10335  001EAA  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
 10336  001EAC  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
 10337  001EAE  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
 10338  001EB0  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
 10339  001EB2  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
 10340  001EB4  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
 10341  001EB6  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
 10342  001EB8  A4D8               	btfss	status,2,c
 10343  001EBA  D771               	goto	l6785
 10344                           
 10345                           ; BSR set to: 0
 10346  001EBC  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
 10347  001EBE  D005               	goto	u7230
 10348  001EC0  51B4               	movf	(dtoa@p+1)& (0+255),w,b
 10349  001EC2  E102               	bnz	u7231
 10350  001EC4  05B3               	decf	dtoa@p& (0+255),w,b
 10351  001EC6  B0D8               	btfsc	status,0,c
 10352  001EC8                     u7231:
 10353  001EC8  D76A               	goto	l6785
 10354  001ECA                     u7230:
 10355                           
 10356                           ; BSR set to: 0
 10357  001ECA  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
 10358  001ECC  D007               	goto	u7250
 10359  001ECE  51B6               	movf	(dtoa@w+1)& (0+255),w,b
 10360  001ED0  E103               	bnz	u7240
 10361  001ED2  05B5               	decf	dtoa@w& (0+255),w,b
 10362  001ED4  A0D8               	btfss	status,0,c
 10363  001ED6  D002               	goto	u7250
 10364  001ED8                     u7240:
 10365                           
 10366                           ; BSR set to: 0
 10367  001ED8  B24E               	btfsc	_flags,1,c
 10368  001EDA  D761               	goto	l6785
 10369  001EDC                     u7250:
 10370                           
 10371                           ; BSR set to: 0
 10372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10373  001EDC  51B7               	movf	dtoa@s& (0+255),w,b
 10374  001EDE  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10375  001EE0  A4D8               	btfss	status,2,c
 10376  001EE2  D002               	goto	u7270
 10377                           
 10378                           ; BSR set to: 0
 10379  001EE4  A44E               	btfss	_flags,2,c
 10380  001EE6  D017               	goto	l6819
 10381  001EE8                     u7270:
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10385  001EE8  07C1               	decf	dtoa@i& (0+255),f,b
 10386  001EEA  A0D8               	btfss	status,0,c
 10387  001EEC  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10391  001EEE  51B7               	movf	dtoa@s& (0+255),w,b
 10392  001EF0  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10393  001EF2  A4D8               	btfss	status,2,c
 10394  001EF4  D004               	goto	l6815
 10395                           
 10396                           ; BSR set to: 0
 10397  001EF6  0E00               	movlw	0
 10398  001EF8  6FB2               	movwf	(_dtoa$1226+1)& (0+255),b
 10399  001EFA  0E2B               	movlw	43
 10400  001EFC  D003               	goto	L5
 10401  001EFE                     l6815:
 10402                           
 10403                           ; BSR set to: 0
 10404  001EFE  0E00               	movlw	0
 10405  001F00  6FB2               	movwf	(_dtoa$1226+1)& (0+255),b
 10406  001F02  0E2D               	movlw	45
 10407  001F04                     L5:
 10408  001F04  6FB1               	movwf	_dtoa$1226& (0+255),b
 10409                           
 10410                           ; BSR set to: 0
 10411  001F06  0E80               	movlw	low _dbuf
 10412  001F08  25C1               	addwf	dtoa@i& (0+255),w,b
 10413  001F0A  6ED9               	movwf	fsr2l,c
 10414  001F0C  0E02               	movlw	high _dbuf
 10415  001F0E  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10416  001F10  6EDA               	movwf	fsr2h,c
 10417  001F12  C0B1  FFDF         	movff	_dtoa$1226,indf2
 10418  001F16                     l6819:
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10422  001F16  C09F  F094         	movff	dtoa@fp,pad@fp
 10423  001F1A  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
 10424  001F1E  0E80               	movlw	low _dbuf
 10425  001F20  25C1               	addwf	dtoa@i& (0+255),w,b
 10426  001F22  6F96               	movwf	pad@buf& (0+255),b
 10427  001F24  0E02               	movlw	high _dbuf
 10428  001F26  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10429  001F28  6F97               	movwf	(pad@buf+1)& (0+255),b
 10430  001F2A  C0B5  F098         	movff	dtoa@w,pad@p
 10431  001F2E  C0B6  F099         	movff	dtoa@w+1,pad@p+1
 10432  001F32  EC36  F01B         	call	_pad	;wreg free
 10433  001F36  C094  F09F         	movff	?_pad,?_dtoa
 10434  001F3A  C095  F0A0         	movff	?_pad+1,?_dtoa+1
 10435  001F3E  0012               	return		;funcret
 10436  001F40                     __end_of_dtoa:
 10437                           	opt callstack 0
 10438                           
 10439 ;; *************** function _pad *****************
 10440 ;; Defined at:
 10441 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10442 ;; Parameters:    Size  Location     Type
 10443 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
 10444 ;;		 -> NULL(0), 
 10445 ;;  buf             2   22[BANK0 ] PTR unsigned char 
 10446 ;;		 -> dbuf(32), 
 10447 ;;  p               2   24[BANK0 ] int 
 10448 ;; Auto vars:     Size  Location     Type
 10449 ;;  w               2   29[BANK0 ] int 
 10450 ;;  i               2   27[BANK0 ] int 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;                  2   20[BANK0 ] int 
 10453 ;; Registers used:
 10454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10460 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;Total ram usage:       11 bytes
 10465 ;; Hardware stack levels used:    1
 10466 ;; Hardware stack levels required when called:    9
 10467 ;; This function calls:
 10468 ;;		_fputc
 10469 ;;		_fputs
 10470 ;;		_strlen
 10471 ;; This function is called by:
 10472 ;;		_dtoa
 10473 ;;		_xtoa
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text29
 10478  00366C                     __ptext29:
 10479                           	opt callstack 0
 10480  00366C                     _pad:
 10481                           	opt callstack 16
 10482                           
 10483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10484                           
 10485                           ;incstack = 0
 10486  00366C  A04E               	btfss	_flags,0,c
 10487  00366E  D00A               	goto	l6623
 10488                           
 10489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10490  003670  C096  F08D         	movff	pad@buf,fputs@s
 10491  003674  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10492  003678  C094  F08F         	movff	pad@fp,fputs@fp
 10493  00367C  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10494  003680  EC02  F01E         	call	_fputs	;wreg free
 10495  003684                     l6623:
 10496                           
 10497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10498  003684  0100               	movlb	0	; () banked
 10499  003686  BF99               	btfsc	(pad@p+1)& (0+255),7,b
 10500  003688  D005               	goto	l6627
 10501                           
 10502                           ; BSR set to: 0
 10503  00368A  C098  F09D         	movff	pad@p,pad@w
 10504  00368E  C099  F09E         	movff	pad@p+1,pad@w+1
 10505  003692  D004               	goto	l629
 10506  003694                     l6627:
 10507                           
 10508                           ; BSR set to: 0
 10509  003694  0E00               	movlw	0
 10510  003696  6F9E               	movwf	(pad@w+1)& (0+255),b
 10511  003698  0E00               	movlw	0
 10512  00369A  6F9D               	movwf	pad@w& (0+255),b
 10513  00369C                     l629:
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10517  00369C  0E00               	movlw	0
 10518  00369E  6F9C               	movwf	(pad@i+1)& (0+255),b
 10519  0036A0  0E00               	movlw	0
 10520  0036A2  6F9B               	movwf	pad@i& (0+255),b
 10521                           
 10522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10523  0036A4  D00D               	goto	l6633
 10524  0036A6                     l6629:
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10528  0036A6  0E00               	movlw	0
 10529  0036A8  6F85               	movwf	(fputc@c+1)& (0+255),b
 10530  0036AA  0E20               	movlw	32
 10531  0036AC  6F84               	movwf	fputc@c& (0+255),b
 10532  0036AE  C094  F086         	movff	pad@fp,fputc@fp
 10533  0036B2  C095  F087         	movff	pad@fp+1,fputc@fp+1
 10534  0036B6  EC83  F01C         	call	_fputc	;wreg free
 10535                           
 10536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10537  0036BA  0100               	movlb	0	; () banked
 10538  0036BC  4B9B               	infsnz	pad@i& (0+255),f,b
 10539  0036BE  2B9C               	incf	(pad@i+1)& (0+255),f,b
 10540  0036C0                     l6633:
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10544  0036C0  519D               	movf	pad@w& (0+255),w,b
 10545  0036C2  5D9B               	subwf	pad@i& (0+255),w,b
 10546  0036C4  519C               	movf	(pad@i+1)& (0+255),w,b
 10547  0036C6  0A80               	xorlw	128
 10548  0036C8  6F9A               	movwf	??_pad& (0+255),b
 10549  0036CA  519E               	movf	(pad@w+1)& (0+255),w,b
 10550  0036CC  0A80               	xorlw	128
 10551  0036CE  599A               	subwfb	??_pad& (0+255),w,b
 10552  0036D0  A0D8               	btfss	status,0,c
 10553  0036D2  D7E9               	goto	l6629
 10554                           
 10555                           ; BSR set to: 0
 10556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10557  0036D4  B04E               	btfsc	_flags,0,c
 10558  0036D6  D00A               	goto	l6637
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10562  0036D8  C096  F08D         	movff	pad@buf,fputs@s
 10563  0036DC  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10564  0036E0  C094  F08F         	movff	pad@fp,fputs@fp
 10565  0036E4  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10566  0036E8  EC02  F01E         	call	_fputs	;wreg free
 10567  0036EC                     l6637:
 10568                           
 10569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10570  0036EC  C096  F080         	movff	pad@buf,strlen@s
 10571  0036F0  C097  F081         	movff	pad@buf+1,strlen@s+1
 10572  0036F4  ECB9  F01E         	call	_strlen	;wreg free
 10573  0036F8  0100               	movlb	0	; () banked
 10574  0036FA  519D               	movf	pad@w& (0+255),w,b
 10575  0036FC  2580               	addwf	?_strlen& (0+255),w,b
 10576  0036FE  6F94               	movwf	?_pad& (0+255),b
 10577  003700  519E               	movf	(pad@w+1)& (0+255),w,b
 10578  003702  2181               	addwfc	(?_strlen+1)& (0+255),w,b
 10579  003704  6F95               	movwf	(?_pad+1)& (0+255),b
 10580                           
 10581                           ; BSR set to: 0
 10582  003706  0012               	return		;funcret
 10583  003708                     __end_of_pad:
 10584                           	opt callstack 0
 10585                           
 10586 ;; *************** function _strlen *****************
 10587 ;; Defined at:
 10588 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 10591 ;;		 -> dbuf(32), 
 10592 ;; Auto vars:     Size  Location     Type
 10593 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 10594 ;;		 -> dbuf(32), 
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  2    0[BANK0 ] unsigned int 
 10597 ;; Registers used:
 10598 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;Total ram usage:        4 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:    3
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		_pad
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618                           	psect	text30
 10619  003D72                     __ptext30:
 10620                           	opt callstack 0
 10621  003D72                     _strlen:
 10622                           	opt callstack 21
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;incstack = 0
 10626  003D72  C080  F082         	movff	strlen@s,strlen@a
 10627  003D76  C081  F083         	movff	strlen@s+1,strlen@a+1
 10628  003D7A  D003               	goto	l6605
 10629  003D7C                     l6603:
 10630  003D7C  0100               	movlb	0	; () banked
 10631  003D7E  4B80               	infsnz	strlen@s& (0+255),f,b
 10632  003D80  2B81               	incf	(strlen@s+1)& (0+255),f,b
 10633  003D82                     l6605:
 10634  003D82  C080  FFD9         	movff	strlen@s,fsr2l
 10635  003D86  C081  FFDA         	movff	strlen@s+1,fsr2h
 10636  003D8A  50DF               	movf	indf2,w,c
 10637  003D8C  A4D8               	btfss	status,2,c
 10638  003D8E  D7F6               	goto	l6603
 10639  003D90  0100               	movlb	0	; () banked
 10640  003D92  5182               	movf	strlen@a& (0+255),w,b
 10641  003D94  5D80               	subwf	strlen@s& (0+255),w,b
 10642  003D96  6F80               	movwf	?_strlen& (0+255),b
 10643  003D98  5183               	movf	(strlen@a+1)& (0+255),w,b
 10644  003D9A  5981               	subwfb	(strlen@s+1)& (0+255),w,b
 10645  003D9C  6F81               	movwf	(?_strlen+1)& (0+255),b
 10646                           
 10647                           ; BSR set to: 0
 10648  003D9E  0012               	return		;funcret
 10649  003DA0                     __end_of_strlen:
 10650                           	opt callstack 0
 10651                           
 10652 ;; *************** function _fputs *****************
 10653 ;; Defined at:
 10654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 10657 ;;		 -> dbuf(32), 
 10658 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 10659 ;;		 -> NULL(0), 
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;  i               2   18[BANK0 ] int 
 10662 ;;  c               1   17[BANK0 ] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  2   13[BANK0 ] int 
 10665 ;; Registers used:
 10666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10672 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;Total ram usage:        7 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    8
 10679 ;; This function calls:
 10680 ;;		_fputc
 10681 ;; This function is called by:
 10682 ;;		_pad
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           	psect	text31
 10687  003C04                     __ptext31:
 10688                           	opt callstack 0
 10689  003C04                     _fputs:
 10690                           	opt callstack 16
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;incstack = 0
 10694  003C04  0E00               	movlw	0
 10695  003C06  0100               	movlb	0	; () banked
 10696  003C08  6F93               	movwf	(fputs@i+1)& (0+255),b
 10697  003C0A  0E00               	movlw	0
 10698  003C0C  6F92               	movwf	fputs@i& (0+255),b
 10699  003C0E  D00C               	goto	l6599
 10700  003C10                     l6595:
 10701                           
 10702                           ; BSR set to: 0
 10703  003C10  C091  F084         	movff	fputs@c,fputc@c
 10704  003C14  6B85               	clrf	(fputc@c+1)& (0+255),b
 10705  003C16  C08F  F086         	movff	fputs@fp,fputc@fp
 10706  003C1A  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10707  003C1E  EC83  F01C         	call	_fputc	;wreg free
 10708  003C22  0100               	movlb	0	; () banked
 10709  003C24  4B92               	infsnz	fputs@i& (0+255),f,b
 10710  003C26  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10711  003C28                     l6599:
 10712                           
 10713                           ; BSR set to: 0
 10714  003C28  5192               	movf	fputs@i& (0+255),w,b
 10715  003C2A  258D               	addwf	fputs@s& (0+255),w,b
 10716  003C2C  6ED9               	movwf	fsr2l,c
 10717  003C2E  5193               	movf	(fputs@i+1)& (0+255),w,b
 10718  003C30  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10719  003C32  6EDA               	movwf	fsr2h,c
 10720  003C34  50DF               	movf	indf2,w,c
 10721  003C36  6F91               	movwf	fputs@c& (0+255),b
 10722  003C38  5191               	movf	fputs@c& (0+255),w,b
 10723  003C3A  B4D8               	btfsc	status,2,c
 10724  003C3C  0012               	return	
 10725  003C3E  D7E8               	goto	l6595
 10726  003C40                     __end_of_fputs:
 10727                           	opt callstack 0
 10728                           
 10729 ;; *************** function _fputc *****************
 10730 ;; Defined at:
 10731 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;  c               2    4[BANK0 ] int 
 10734 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10735 ;;		 -> NULL(0), 
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;		None
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  2    4[BANK0 ] int 
 10740 ;; Registers used:
 10741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10749 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10750 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10751 ;;Total ram usage:        9 bytes
 10752 ;; Hardware stack levels used:    1
 10753 ;; Hardware stack levels required when called:    7
 10754 ;; This function calls:
 10755 ;;		_putch
 10756 ;; This function is called by:
 10757 ;;		_pad
 10758 ;;		_vfpfcnvrt
 10759 ;;		_fputs
 10760 ;; This function uses a non-reentrant model
 10761 ;;
 10762                           
 10763                           	psect	text32
 10764  003906                     __ptext32:
 10765                           	opt callstack 0
 10766  003906                     _fputc:
 10767                           	opt callstack 16
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;incstack = 0
 10771  003906  0100               	movlb	0	; () banked
 10772  003908  5186               	movf	fputc@fp& (0+255),w,b
 10773  00390A  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10774  00390C  B4D8               	btfsc	status,2,c
 10775  00390E  D004               	goto	u6780
 10776                           
 10777                           ; BSR set to: 0
 10778  003910  5186               	movf	fputc@fp& (0+255),w,b
 10779  003912  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10780  003914  A4D8               	btfss	status,2,c
 10781  003916  D004               	goto	l6585
 10782  003918                     u6780:
 10783                           
 10784                           ; BSR set to: 0
 10785  003918  5184               	movf	fputc@c& (0+255),w,b
 10786  00391A  EC5A  F01F         	call	_putch
 10787  00391E  0012               	return	
 10788  003920                     l6585:
 10789                           
 10790                           ; BSR set to: 0
 10791  003920  EE20 F004          	lfsr	2,4
 10792  003924  5186               	movf	fputc@fp& (0+255),w,b
 10793  003926  26D9               	addwf	fsr2l,f,c
 10794  003928  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10795  00392A  22DA               	addwfc	fsr2h,f,c
 10796  00392C  50DE               	movf	postinc2,w,c
 10797  00392E  10DE               	iorwf	postinc2,w,c
 10798  003930  B4D8               	btfsc	status,2,c
 10799  003932  D016               	goto	u6800
 10800                           
 10801                           ; BSR set to: 0
 10802  003934  EE20 F004          	lfsr	2,4
 10803  003938  5186               	movf	fputc@fp& (0+255),w,b
 10804  00393A  26D9               	addwf	fsr2l,f,c
 10805  00393C  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10806  00393E  22DA               	addwfc	fsr2h,f,c
 10807  003940  EE10 F002          	lfsr	1,2
 10808  003944  5186               	movf	fputc@fp& (0+255),w,b
 10809  003946  26E1               	addwf	fsr1l,f,c
 10810  003948  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10811  00394A  22E2               	addwfc	fsr1h,f,c
 10812  00394C  50DE               	movf	postinc2,w,c
 10813  00394E  5CE6               	subwf	postinc1,w,c
 10814  003950  50E6               	movf	postinc1,w,c
 10815  003952  0A80               	xorlw	128
 10816  003954  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10817  003956  50DE               	movf	postinc2,w,c
 10818  003958  0A80               	xorlw	128
 10819  00395A  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10820  00395C  B0D8               	btfsc	status,0,c
 10821  00395E  0012               	return	
 10822  003960                     u6800:
 10823                           
 10824                           ; BSR set to: 0
 10825  003960  EE20 F002          	lfsr	2,2
 10826  003964  5186               	movf	fputc@fp& (0+255),w,b
 10827  003966  26D9               	addwf	fsr2l,f,c
 10828  003968  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10829  00396A  22DA               	addwfc	fsr2h,f,c
 10830  00396C  2ADE               	incf	postinc2,f,c
 10831  00396E  0E00               	movlw	0
 10832  003970  22DD               	addwfc	postdec2,f,c
 10833  003972  0012               	return		;funcret
 10834  003974                     __end_of_fputc:
 10835                           	opt callstack 0
 10836                           
 10837 ;; *************** function _putch *****************
 10838 ;; Defined at:
 10839 ;;		line 102 in file "lcd.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;  data            1    wreg     unsigned char 
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;  data            1    3[BANK0 ] unsigned char 
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      void 
 10846 ;; Registers used:
 10847 ;;		wreg, status,2, status,0, cstack
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10856 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10857 ;;Total ram usage:        1 bytes
 10858 ;; Hardware stack levels used:    1
 10859 ;; Hardware stack levels required when called:    6
 10860 ;; This function calls:
 10861 ;;		_send_byte
 10862 ;; This function is called by:
 10863 ;;		_fputc
 10864 ;; This function uses a non-reentrant model
 10865 ;;
 10866                           
 10867                           	psect	text33
 10868  003EB4                     __ptext33:
 10869                           	opt callstack 0
 10870  003EB4                     _putch:
 10871                           	opt callstack 16
 10872                           
 10873                           ;incstack = 0
 10874                           ;putch@data stored from wreg
 10875  003EB4  0100               	movlb	0	; () banked
 10876  003EB6  6F83               	movwf	putch@data& (0+255),b
 10877                           
 10878                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10879  003EB8  848C               	bsf	3980,2,c	;volatile
 10880                           
 10881                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10882  003EBA  0100               	movlb	0	; () banked
 10883  003EBC  5183               	movf	putch@data& (0+255),w,b
 10884  003EBE  EC44  F01F         	call	_send_byte
 10885  003EC2  0012               	return		;funcret
 10886  003EC4                     __end_of_putch:
 10887                           	opt callstack 0
 10888                           
 10889 ;; *************** function _abs *****************
 10890 ;; Defined at:
 10891 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;  a               2   18[BANK0 ] int 
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  2   18[BANK0 ] int 
 10898 ;; Registers used:
 10899 ;;		wreg, status,2, status,0
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10905 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10907 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10908 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10909 ;;Total ram usage:        4 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:    3
 10912 ;; This function calls:
 10913 ;;		Nothing
 10914 ;; This function is called by:
 10915 ;;		_ultrasonic_main
 10916 ;;		_dtoa
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920                           	psect	text34
 10921  003C76                     __ptext34:
 10922                           	opt callstack 0
 10923  003C76                     _abs:
 10924                           	opt callstack 22
 10925                           
 10926                           ;incstack = 0
 10927  003C76  0100               	movlb	0	; () banked
 10928  003C78  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10929  003C7A  D005               	goto	u6850
 10930  003C7C  5193               	movf	(abs@a+1)& (0+255),w,b
 10931  003C7E  E110               	bnz	l1407
 10932  003C80  0592               	decf	abs@a& (0+255),w,b
 10933  003C82  B0D8               	btfsc	status,0,c
 10934  003C84  D00D               	goto	l1407
 10935  003C86                     u6850:
 10936                           
 10937                           ; BSR set to: 0
 10938  003C86  C092  F094         	movff	abs@a,??_abs
 10939  003C8A  C093  F095         	movff	abs@a+1,??_abs+1
 10940  003C8E  1F94               	comf	??_abs& (0+255),f,b
 10941  003C90  1F95               	comf	(??_abs+1)& (0+255),f,b
 10942  003C92  4B94               	infsnz	??_abs& (0+255),f,b
 10943  003C94  2B95               	incf	(??_abs+1)& (0+255),f,b
 10944  003C96  C094  F092         	movff	??_abs,?_abs
 10945  003C9A  C095  F093         	movff	??_abs+1,?_abs+1
 10946  003C9E  0012               	return	
 10947  003CA0                     l1407:
 10948                           
 10949                           ; BSR set to: 0
 10950  003CA0  C092  F092         	movff	abs@a,?_abs
 10951  003CA4  C093  F093         	movff	abs@a+1,?_abs+1
 10952                           
 10953                           ; BSR set to: 0
 10954  003CA8  0012               	return		;funcret
 10955  003CAA                     __end_of_abs:
 10956                           	opt callstack 0
 10957                           
 10958 ;; *************** function ___aomod *****************
 10959 ;; Defined at:
 10960 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  dividend        8    0[BANK0 ] long long 
 10963 ;;  divisor         8    8[BANK0 ] long long 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;  sign            1   17[BANK0 ] unsigned char 
 10966 ;;  counter         1   16[BANK0 ] unsigned char 
 10967 ;; Return value:  Size  Location     Type
 10968 ;;                  8    0[BANK0 ] long long 
 10969 ;; Registers used:
 10970 ;;		wreg, status,2, status,0
 10971 ;; Tracked objects:
 10972 ;;		On entry : 0/0
 10973 ;;		On exit  : 0/0
 10974 ;;		Unchanged: 0/0
 10975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10976 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10977 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;Total ram usage:       18 bytes
 10981 ;; Hardware stack levels used:    1
 10982 ;; Hardware stack levels required when called:    3
 10983 ;; This function calls:
 10984 ;;		Nothing
 10985 ;; This function is called by:
 10986 ;;		_dtoa
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           	psect	text35
 10991  002D98                     __ptext35:
 10992                           	opt callstack 0
 10993  002D98                     ___aomod:
 10994                           	opt callstack 22
 10995                           
 10996                           ; BSR set to: 0
 10997                           ;incstack = 0
 10998  002D98  0E00               	movlw	0
 10999  002D9A  0100               	movlb	0	; () banked
 11000  002D9C  6F91               	movwf	___aomod@sign& (0+255),b
 11001                           
 11002                           ; BSR set to: 0
 11003  002D9E  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 11004  002DA0  D012               	goto	l6721
 11005                           
 11006                           ; BSR set to: 0
 11007  002DA2  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11008  002DA4  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11009  002DA6  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11010  002DA8  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11011  002DAA  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11012  002DAC  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11013  002DAE  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11014  002DB0  6D80               	negf	___aomod@dividend& (0+255),b
 11015  002DB2  0E00               	movlw	0
 11016  002DB4  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11017  002DB6  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11018  002DB8  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11019  002DBA  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11020  002DBC  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11021  002DBE  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11022  002DC0  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11023                           
 11024                           ; BSR set to: 0
 11025  002DC2  0E01               	movlw	1
 11026  002DC4  6F91               	movwf	___aomod@sign& (0+255),b
 11027  002DC6                     l6721:
 11028                           
 11029                           ; BSR set to: 0
 11030  002DC6  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11031  002DC8  D010               	goto	l6725
 11032                           
 11033                           ; BSR set to: 0
 11034  002DCA  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 11035  002DCC  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 11036  002DCE  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 11037  002DD0  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 11038  002DD2  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 11039  002DD4  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 11040  002DD6  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 11041  002DD8  6D88               	negf	___aomod@divisor& (0+255),b
 11042  002DDA  0E00               	movlw	0
 11043  002DDC  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 11044  002DDE  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 11045  002DE0  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 11046  002DE2  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 11047  002DE4  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 11048  002DE6  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 11049  002DE8  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 11050  002DEA                     l6725:
 11051                           
 11052                           ; BSR set to: 0
 11053  002DEA  5188               	movf	___aomod@divisor& (0+255),w,b
 11054  002DEC  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 11055  002DEE  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 11056  002DF0  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 11057  002DF2  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 11058  002DF4  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 11059  002DF6  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 11060  002DF8  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 11061  002DFA  B4D8               	btfsc	status,2,c
 11062  002DFC  D03C               	goto	l6741
 11063                           
 11064                           ; BSR set to: 0
 11065  002DFE  0E01               	movlw	1
 11066  002E00  6F90               	movwf	___aomod@counter& (0+255),b
 11067  002E02  D00A               	goto	l6731
 11068  002E04                     l6729:
 11069                           
 11070                           ; BSR set to: 0
 11071  002E04  90D8               	bcf	status,0,c
 11072  002E06  3788               	rlcf	___aomod@divisor& (0+255),f,b
 11073  002E08  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 11074  002E0A  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 11075  002E0C  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 11076  002E0E  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 11077  002E10  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 11078  002E12  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 11079  002E14  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 11080  002E16  2B90               	incf	___aomod@counter& (0+255),f,b
 11081  002E18                     l6731:
 11082                           
 11083                           ; BSR set to: 0
 11084  002E18  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11085  002E1A  D7F4               	goto	l6729
 11086  002E1C                     u7090:
 11087                           
 11088                           ; BSR set to: 0
 11089  002E1C  5188               	movf	___aomod@divisor& (0+255),w,b
 11090  002E1E  5D80               	subwf	___aomod@dividend& (0+255),w,b
 11091  002E20  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11092  002E22  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 11093  002E24  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11094  002E26  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 11095  002E28  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11096  002E2A  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 11097  002E2C  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11098  002E2E  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 11099  002E30  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11100  002E32  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 11101  002E34  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11102  002E36  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 11103  002E38  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11104  002E3A  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 11105  002E3C  A0D8               	btfss	status,0,c
 11106  002E3E  D010               	goto	l6737
 11107                           
 11108                           ; BSR set to: 0
 11109  002E40  5188               	movf	___aomod@divisor& (0+255),w,b
 11110  002E42  5F80               	subwf	___aomod@dividend& (0+255),f,b
 11111  002E44  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11112  002E46  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 11113  002E48  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11114  002E4A  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 11115  002E4C  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11116  002E4E  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 11117  002E50  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11118  002E52  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 11119  002E54  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11120  002E56  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 11121  002E58  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11122  002E5A  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 11123  002E5C  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11124  002E5E  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 11125  002E60                     l6737:
 11126                           
 11127                           ; BSR set to: 0
 11128  002E60  90D8               	bcf	status,0,c
 11129  002E62  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 11130  002E64  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 11131  002E66  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 11132  002E68  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 11133  002E6A  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 11134  002E6C  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 11135  002E6E  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 11136  002E70  3388               	rrcf	___aomod@divisor& (0+255),f,b
 11137                           
 11138                           ; BSR set to: 0
 11139  002E72  2F90               	decfsz	___aomod@counter& (0+255),f,b
 11140  002E74  D7D3               	goto	u7090
 11141  002E76                     l6741:
 11142                           
 11143                           ; BSR set to: 0
 11144  002E76  5191               	movf	___aomod@sign& (0+255),w,b
 11145  002E78  B4D8               	btfsc	status,2,c
 11146  002E7A  D010               	goto	l6745
 11147                           
 11148                           ; BSR set to: 0
 11149  002E7C  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11150  002E7E  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11151  002E80  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11152  002E82  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11153  002E84  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11154  002E86  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11155  002E88  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11156  002E8A  6D80               	negf	___aomod@dividend& (0+255),b
 11157  002E8C  0E00               	movlw	0
 11158  002E8E  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11159  002E90  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11160  002E92  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11161  002E94  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11162  002E96  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11163  002E98  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11164  002E9A  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11165  002E9C                     l6745:
 11166                           
 11167                           ; BSR set to: 0
 11168  002E9C  C080  F080         	movff	___aomod@dividend,?___aomod
 11169  002EA0  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 11170  002EA4  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 11171  002EA8  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 11172  002EAC  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 11173  002EB0  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 11174  002EB4  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 11175  002EB8  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 11176                           
 11177                           ; BSR set to: 0
 11178  002EBC  0012               	return		;funcret
 11179  002EBE                     __end_of___aomod:
 11180                           	opt callstack 0
 11181                           
 11182 ;; *************** function ___aodiv *****************
 11183 ;; Defined at:
 11184 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  dividend        8    0[BANK0 ] long long 
 11187 ;;  divisor         8    8[BANK0 ] long long 
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;  quotient        8   18[BANK0 ] long long 
 11190 ;;  sign            1   17[BANK0 ] unsigned char 
 11191 ;;  counter         1   16[BANK0 ] unsigned char 
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  8    0[BANK0 ] long long 
 11194 ;; Registers used:
 11195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11201 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11205 ;;Total ram usage:       26 bytes
 11206 ;; Hardware stack levels used:    1
 11207 ;; Hardware stack levels required when called:    3
 11208 ;; This function calls:
 11209 ;;		Nothing
 11210 ;; This function is called by:
 11211 ;;		_dtoa
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215                           	psect	text36
 11216  0029CA                     __ptext36:
 11217                           	opt callstack 0
 11218  0029CA                     ___aodiv:
 11219                           	opt callstack 22
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;incstack = 0
 11223  0029CA  0E00               	movlw	0
 11224  0029CC  0100               	movlb	0	; () banked
 11225  0029CE  6F91               	movwf	___aodiv@sign& (0+255),b
 11226                           
 11227                           ; BSR set to: 0
 11228  0029D0  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11229  0029D2  D012               	goto	l6677
 11230                           
 11231                           ; BSR set to: 0
 11232  0029D4  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 11233  0029D6  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 11234  0029D8  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 11235  0029DA  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 11236  0029DC  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 11237  0029DE  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 11238  0029E0  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 11239  0029E2  6D88               	negf	___aodiv@divisor& (0+255),b
 11240  0029E4  0E00               	movlw	0
 11241  0029E6  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 11242  0029E8  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 11243  0029EA  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 11244  0029EC  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 11245  0029EE  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 11246  0029F0  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 11247  0029F2  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 11248                           
 11249                           ; BSR set to: 0
 11250  0029F4  0E01               	movlw	1
 11251  0029F6  6F91               	movwf	___aodiv@sign& (0+255),b
 11252  0029F8                     l6677:
 11253                           
 11254                           ; BSR set to: 0
 11255  0029F8  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 11256  0029FA  D012               	goto	l6683
 11257                           
 11258                           ; BSR set to: 0
 11259  0029FC  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 11260  0029FE  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 11261  002A00  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 11262  002A02  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 11263  002A04  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 11264  002A06  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 11265  002A08  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 11266  002A0A  6D80               	negf	___aodiv@dividend& (0+255),b
 11267  002A0C  0E00               	movlw	0
 11268  002A0E  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 11269  002A10  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 11270  002A12  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 11271  002A14  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 11272  002A16  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 11273  002A18  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 11274  002A1A  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 11275                           
 11276                           ; BSR set to: 0
 11277  002A1C  0E01               	movlw	1
 11278  002A1E  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 11279  002A20                     l6683:
 11280                           
 11281                           ; BSR set to: 0
 11282  002A20  EE20  F092         	lfsr	2,___aodiv@quotient
 11283  002A24  0E07               	movlw	7
 11284  002A26                     u7011:
 11285  002A26  6ADE               	clrf	postinc2,c
 11286  002A28  06E8               	decf	wreg,f,c
 11287  002A2A  E2FD               	bc	u7011
 11288                           
 11289                           ; BSR set to: 0
 11290  002A2C  5188               	movf	___aodiv@divisor& (0+255),w,b
 11291  002A2E  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 11292  002A30  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 11293  002A32  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 11294  002A34  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 11295  002A36  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 11296  002A38  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 11297  002A3A  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 11298  002A3C  B4D8               	btfsc	status,2,c
 11299  002A3E  D046               	goto	l6705
 11300                           
 11301                           ; BSR set to: 0
 11302  002A40  0E01               	movlw	1
 11303  002A42  6F90               	movwf	___aodiv@counter& (0+255),b
 11304  002A44  D00A               	goto	l6691
 11305  002A46                     l6689:
 11306                           
 11307                           ; BSR set to: 0
 11308  002A46  90D8               	bcf	status,0,c
 11309  002A48  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 11310  002A4A  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 11311  002A4C  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 11312  002A4E  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 11313  002A50  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 11314  002A52  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 11315  002A54  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 11316  002A56  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 11317  002A58  2B90               	incf	___aodiv@counter& (0+255),f,b
 11318  002A5A                     l6691:
 11319                           
 11320                           ; BSR set to: 0
 11321  002A5A  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11322  002A5C  D7F4               	goto	l6689
 11323  002A5E                     u7030:
 11324                           
 11325                           ; BSR set to: 0
 11326  002A5E  90D8               	bcf	status,0,c
 11327  002A60  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 11328  002A62  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 11329  002A64  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 11330  002A66  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 11331  002A68  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 11332  002A6A  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 11333  002A6C  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 11334  002A6E  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 11335                           
 11336                           ; BSR set to: 0
 11337  002A70  5188               	movf	___aodiv@divisor& (0+255),w,b
 11338  002A72  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 11339  002A74  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11340  002A76  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 11341  002A78  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11342  002A7A  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 11343  002A7C  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11344  002A7E  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 11345  002A80  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11346  002A82  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 11347  002A84  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11348  002A86  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 11349  002A88  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11350  002A8A  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 11351  002A8C  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11352  002A8E  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 11353  002A90  A0D8               	btfss	status,0,c
 11354  002A92  D011               	goto	l6701
 11355                           
 11356                           ; BSR set to: 0
 11357  002A94  5188               	movf	___aodiv@divisor& (0+255),w,b
 11358  002A96  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 11359  002A98  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11360  002A9A  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 11361  002A9C  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11362  002A9E  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 11363  002AA0  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11364  002AA2  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 11365  002AA4  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11366  002AA6  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 11367  002AA8  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11368  002AAA  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 11369  002AAC  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11370  002AAE  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 11371  002AB0  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11372  002AB2  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 11373                           
 11374                           ; BSR set to: 0
 11375  002AB4  8192               	bsf	___aodiv@quotient& (0+255),0,b
 11376  002AB6                     l6701:
 11377                           
 11378                           ; BSR set to: 0
 11379  002AB6  90D8               	bcf	status,0,c
 11380  002AB8  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 11381  002ABA  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 11382  002ABC  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 11383  002ABE  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 11384  002AC0  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 11385  002AC2  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 11386  002AC4  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 11387  002AC6  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 11388                           
 11389                           ; BSR set to: 0
 11390  002AC8  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 11391  002ACA  D7C9               	goto	u7030
 11392  002ACC                     l6705:
 11393                           
 11394                           ; BSR set to: 0
 11395  002ACC  5191               	movf	___aodiv@sign& (0+255),w,b
 11396  002ACE  B4D8               	btfsc	status,2,c
 11397  002AD0  D010               	goto	l6709
 11398                           
 11399                           ; BSR set to: 0
 11400  002AD2  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 11401  002AD4  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 11402  002AD6  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 11403  002AD8  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 11404  002ADA  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 11405  002ADC  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 11406  002ADE  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 11407  002AE0  6D92               	negf	___aodiv@quotient& (0+255),b
 11408  002AE2  0E00               	movlw	0
 11409  002AE4  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 11410  002AE6  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 11411  002AE8  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 11412  002AEA  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 11413  002AEC  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 11414  002AEE  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 11415  002AF0  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 11416  002AF2                     l6709:
 11417                           
 11418                           ; BSR set to: 0
 11419  002AF2  C092  F080         	movff	___aodiv@quotient,?___aodiv
 11420  002AF6  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 11421  002AFA  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 11422  002AFE  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 11423  002B02  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 11424  002B06  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 11425  002B0A  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 11426  002B0E  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 11427                           
 11428                           ; BSR set to: 0
 11429  002B12  0012               	return		;funcret
 11430  002B14                     __end_of___aodiv:
 11431                           	opt callstack 0
 11432                           
 11433 ;; *************** function _atoi *****************
 11434 ;; Defined at:
 11435 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11436 ;; Parameters:    Size  Location     Type
 11437 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 11438 ;;		 -> STR_63(10), STR_62(11), STR_61(11), STR_60(12), 
 11439 ;;		 -> STR_59(14), STR_58(17), STR_57(12), STR_56(10), 
 11440 ;;		 -> STR_55(10), STR_54(13), STR_53(8), STR_52(3), 
 11441 ;;		 -> STR_51(17), STR_50(15), STR_49(15), STR_48(12), 
 11442 ;;		 -> STR_47(17), STR_46(12), STR_45(15), STR_44(18), 
 11443 ;;		 -> STR_43(17), STR_42(12), STR_41(15), STR_40(18), 
 11444 ;;		 -> STR_39(17), STR_38(14), STR_37(14), STR_36(17), 
 11445 ;;		 -> STR_35(3), STR_34(9), STR_33(16), STR_32(3), 
 11446 ;;		 -> STR_31(9), STR_30(17), STR_29(15), STR_28(15), 
 11447 ;;		 -> STR_27(12), STR_26(10), STR_25(15), STR_24(12), 
 11448 ;;		 -> STR_23(10), STR_22(16), STR_21(12), STR_20(11), 
 11449 ;;		 -> STR_19(13), STR_18(8), STR_17(10), STR_16(17), 
 11450 ;;		 -> STR_15(10), STR_14(16), STR_13(10), STR_12(16), 
 11451 ;;		 -> STR_11(10), STR_10(17), STR_9(5), STR_8(10), 
 11452 ;;		 -> STR_7(14), STR_6(6), STR_5(10), STR_4(10), 
 11453 ;;		 -> STR_3(11), STR_2(13), STR_1(10), 
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;  n               2   20[BANK0 ] int 
 11456 ;;  neg             2   13[BANK0 ] int 
 11457 ;; Return value:  Size  Location     Type
 11458 ;;                  2    7[BANK0 ] int 
 11459 ;; Registers used:
 11460 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11461 ;; Tracked objects:
 11462 ;;		On entry : 0/0
 11463 ;;		On exit  : 0/0
 11464 ;;		Unchanged: 0/0
 11465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11467 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11468 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11469 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;Total ram usage:       15 bytes
 11471 ;; Hardware stack levels used:    1
 11472 ;; Hardware stack levels required when called:    4
 11473 ;; This function calls:
 11474 ;;		___wmul
 11475 ;;		_isdigit
 11476 ;;		_isspace
 11477 ;; This function is called by:
 11478 ;;		_vfpfcnvrt
 11479 ;; This function uses a non-reentrant model
 11480 ;;
 11481                           
 11482                           	psect	text37
 11483  002B14                     __ptext37:
 11484                           	opt callstack 0
 11485  002B14                     _atoi:
 11486                           	opt callstack 22
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;incstack = 0
 11490  002B14  0E00               	movlw	0
 11491  002B16  0100               	movlb	0	; () banked
 11492  002B18  6F95               	movwf	(atoi@n+1)& (0+255),b
 11493  002B1A  0E00               	movlw	0
 11494  002B1C  6F94               	movwf	atoi@n& (0+255),b
 11495  002B1E  0E00               	movlw	0
 11496  002B20  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11497  002B22  0E00               	movlw	0
 11498  002B24  6F8D               	movwf	atoi@neg& (0+255),b
 11499  002B26  D002               	goto	l6893
 11500  002B28                     l6891:
 11501                           
 11502                           ; BSR set to: 0
 11503  002B28  4B87               	infsnz	atoi@s& (0+255),f,b
 11504  002B2A  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11505  002B2C                     l6893:
 11506                           
 11507                           ; BSR set to: 0
 11508  002B2C  0E01               	movlw	1
 11509  002B2E  6F93               	movwf	_atoi$1711& (0+255),b
 11510                           
 11511                           ; BSR set to: 0
 11512  002B30  C087  FFF6         	movff	atoi@s,tblptrl
 11513  002B34  C088  FFF7         	movff	atoi@s+1,tblptrh
 11514  002B38                     	if	0	;tblptru may be non-zero
 11515  002B38                     	endif
 11516  002B38                     	if	0	;tblptru may be non-zero
 11517  002B38                     	endif
 11518  002B38  0008               	tblrd		*
 11519  002B3A  50F5               	movf	tablat,w,c
 11520  002B3C  0A20               	xorlw	32
 11521  002B3E  B4D8               	btfsc	status,2,c
 11522  002B40  D018               	goto	l6901
 11523                           
 11524                           ; BSR set to: 0
 11525  002B42  0EF7               	movlw	247
 11526  002B44  6F89               	movwf	??_atoi& (0+255),b
 11527  002B46  0EFF               	movlw	255
 11528  002B48  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11529  002B4A  C087  FFF6         	movff	atoi@s,tblptrl
 11530  002B4E  C088  FFF7         	movff	atoi@s+1,tblptrh
 11531  002B52                     	if	0	;tblptru may be non-zero
 11532  002B52                     	endif
 11533  002B52                     	if	0	;tblptru may be non-zero
 11534  002B52                     	endif
 11535  002B52  0008               	tblrd		*
 11536  002B54  50F5               	movf	tablat,w,c
 11537  002B56  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11538  002B58  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11539  002B5A  5189               	movf	??_atoi& (0+255),w,b
 11540  002B5C  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11541  002B5E  518A               	movf	(??_atoi+1)& (0+255),w,b
 11542  002B60  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11543  002B62  518C               	movf	(??_atoi+3)& (0+255),w,b
 11544  002B64  E104               	bnz	u7470
 11545  002B66  0E05               	movlw	5
 11546  002B68  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11547  002B6A  A0D8               	btfss	status,0,c
 11548  002B6C  D002               	goto	l6901
 11549  002B6E                     u7470:
 11550                           
 11551                           ; BSR set to: 0
 11552  002B6E  0E00               	movlw	0
 11553  002B70  6F93               	movwf	_atoi$1711& (0+255),b
 11554  002B72                     l6901:
 11555                           
 11556                           ; BSR set to: 0
 11557  002B72  C093  F08F         	movff	_atoi$1711,_atoi$1710
 11558  002B76  6B90               	clrf	(_atoi$1710+1)& (0+255),b
 11559                           
 11560                           ; BSR set to: 0
 11561  002B78  518F               	movf	_atoi$1710& (0+255),w,b
 11562  002B7A  1190               	iorwf	(_atoi$1710+1)& (0+255),w,b
 11563  002B7C  B4D8               	btfsc	status,2,c
 11564  002B7E  D008               	goto	l6911
 11565  002B80  D7D3               	goto	l6891
 11566  002B82                     l6907:
 11567                           
 11568                           ; BSR set to: 0
 11569  002B82  0E00               	movlw	0
 11570  002B84  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11571  002B86  0E01               	movlw	1
 11572  002B88  6F8D               	movwf	atoi@neg& (0+255),b
 11573  002B8A                     l6909:
 11574                           
 11575                           ; BSR set to: 0
 11576  002B8A  4B87               	infsnz	atoi@s& (0+255),f,b
 11577  002B8C  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11578  002B8E  D02F               	goto	l6917
 11579  002B90                     l6911:
 11580                           
 11581                           ; BSR set to: 0
 11582  002B90  C087  FFF6         	movff	atoi@s,tblptrl
 11583  002B94  C088  FFF7         	movff	atoi@s+1,tblptrh
 11584  002B98                     	if	0	;tblptru may be non-zero
 11585  002B98                     	endif
 11586  002B98                     	if	0	;tblptru may be non-zero
 11587  002B98                     	endif
 11588  002B98  0008               	tblrd		*
 11589  002B9A  50F5               	movf	tablat,w,c
 11590  002B9C  6F89               	movwf	??_atoi& (0+255),b
 11591  002B9E  6B8A               	clrf	(??_atoi+1)& (0+255),b
 11592                           
 11593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11594                           ; Switch size 1, requested type "simple"
 11595                           ; Number of cases is 1, Range of values is 0 to 0
 11596                           ; switch strategies available:
 11597                           ; Name         Instructions Cycles
 11598                           ; simple_byte            4     3 (average)
 11599                           ;	Chosen strategy is simple_byte
 11600  002BA0  518A               	movf	(??_atoi+1)& (0+255),w,b
 11601  002BA2  0A00               	xorlw	0	; case 0
 11602  002BA4  A4D8               	btfss	status,2,c
 11603  002BA6  D023               	goto	l6917
 11604                           
 11605                           ; BSR set to: 0
 11606                           ; Switch size 1, requested type "simple"
 11607                           ; Number of cases is 2, Range of values is 43 to 45
 11608                           ; switch strategies available:
 11609                           ; Name         Instructions Cycles
 11610                           ; simple_byte            7     4 (average)
 11611                           ;	Chosen strategy is simple_byte
 11612  002BA8  5189               	movf	??_atoi& (0+255),w,b
 11613  002BAA  0A2B               	xorlw	43	; case 43
 11614  002BAC  B4D8               	btfsc	status,2,c
 11615  002BAE  D7ED               	goto	l6909
 11616  002BB0  0A06               	xorlw	6	; case 45
 11617  002BB2  B4D8               	btfsc	status,2,c
 11618  002BB4  D7E6               	goto	l6907
 11619  002BB6  D01B               	goto	l6917
 11620  002BB8                     l6913:
 11621                           
 11622                           ; BSR set to: 0
 11623  002BB8  C094  F080         	movff	atoi@n,___wmul@multiplier
 11624  002BBC  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 11625  002BC0  0E00               	movlw	0
 11626  002BC2  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11627  002BC4  0E0A               	movlw	10
 11628  002BC6  6F82               	movwf	___wmul@multiplicand& (0+255),b
 11629  002BC8  EC10  F01F         	call	___wmul	;wreg free
 11630  002BCC  C087  FFF6         	movff	atoi@s,tblptrl
 11631  002BD0  C088  FFF7         	movff	atoi@s+1,tblptrh
 11632  002BD4                     	if	0	;tblptru may be non-zero
 11633  002BD4                     	endif
 11634  002BD4                     	if	0	;tblptru may be non-zero
 11635  002BD4                     	endif
 11636  002BD4  0008               	tblrd		*
 11637  002BD6  50F5               	movf	tablat,w,c
 11638  002BD8  0100               	movlb	0	; () banked
 11639  002BDA  5F80               	subwf	?___wmul& (0+255),f,b
 11640  002BDC  0E00               	movlw	0
 11641  002BDE  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 11642  002BE0  0E30               	movlw	48
 11643  002BE2  2580               	addwf	?___wmul& (0+255),w,b
 11644  002BE4  6F94               	movwf	atoi@n& (0+255),b
 11645  002BE6  0E00               	movlw	0
 11646  002BE8  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 11647  002BEA  6F95               	movwf	(atoi@n+1)& (0+255),b
 11648  002BEC  D7CE               	goto	l6909
 11649  002BEE                     l6917:
 11650                           
 11651                           ; BSR set to: 0
 11652  002BEE  0ED0               	movlw	208
 11653  002BF0  6F89               	movwf	??_atoi& (0+255),b
 11654  002BF2  0EFF               	movlw	255
 11655  002BF4  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11656  002BF6  C087  FFF6         	movff	atoi@s,tblptrl
 11657  002BFA  C088  FFF7         	movff	atoi@s+1,tblptrh
 11658  002BFE                     	if	0	;tblptru may be non-zero
 11659  002BFE                     	endif
 11660  002BFE                     	if	0	;tblptru may be non-zero
 11661  002BFE                     	endif
 11662  002BFE  0008               	tblrd		*
 11663  002C00  50F5               	movf	tablat,w,c
 11664  002C02  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11665  002C04  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11666  002C06  5189               	movf	??_atoi& (0+255),w,b
 11667  002C08  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11668  002C0A  518A               	movf	(??_atoi+1)& (0+255),w,b
 11669  002C0C  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11670  002C0E  518C               	movf	(??_atoi+3)& (0+255),w,b
 11671  002C10  E106               	bnz	u7490
 11672  002C12  0E0A               	movlw	10
 11673  002C14  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11674  002C16  B0D8               	btfsc	status,0,c
 11675  002C18  D002               	goto	u7490
 11676  002C1A  0E01               	movlw	1
 11677  002C1C  D001               	goto	u7500
 11678  002C1E                     u7490:
 11679  002C1E  0E00               	movlw	0
 11680  002C20                     u7500:
 11681  002C20  6F91               	movwf	_atoi$1712& (0+255),b
 11682  002C22  6B92               	clrf	(_atoi$1712+1)& (0+255),b
 11683                           
 11684                           ; BSR set to: 0
 11685  002C24  5191               	movf	_atoi$1712& (0+255),w,b
 11686  002C26  1192               	iorwf	(_atoi$1712+1)& (0+255),w,b
 11687  002C28  A4D8               	btfss	status,2,c
 11688  002C2A  D7C6               	goto	l6913
 11689                           
 11690                           ; BSR set to: 0
 11691  002C2C  518D               	movf	atoi@neg& (0+255),w,b
 11692  002C2E  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11693  002C30  A4D8               	btfss	status,2,c
 11694  002C32  D00D               	goto	l1438
 11695                           
 11696                           ; BSR set to: 0
 11697  002C34  C094  F089         	movff	atoi@n,??_atoi
 11698  002C38  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11699  002C3C  1F89               	comf	??_atoi& (0+255),f,b
 11700  002C3E  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11701  002C40  4B89               	infsnz	??_atoi& (0+255),f,b
 11702  002C42  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11703  002C44  C089  F087         	movff	??_atoi,?_atoi
 11704  002C48  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11705  002C4C  0012               	return	
 11706  002C4E                     l1438:
 11707                           
 11708                           ; BSR set to: 0
 11709  002C4E  C094  F087         	movff	atoi@n,?_atoi
 11710  002C52  C095  F088         	movff	atoi@n+1,?_atoi+1
 11711                           
 11712                           ; BSR set to: 0
 11713  002C56  0012               	return		;funcret
 11714  002C58                     __end_of_atoi:
 11715                           	opt callstack 0
 11716                           
 11717 ;; *************** function _isspace *****************
 11718 ;; Defined at:
 11719 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;  c               2    0[BANK0 ] int 
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;		None
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  2    0[BANK0 ] int 
 11726 ;; Registers used:
 11727 ;;		wreg, status,2, status,0
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11734 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11735 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11736 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11737 ;;Total ram usage:        7 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:    3
 11740 ;; This function calls:
 11741 ;;		Nothing
 11742 ;; This function is called by:
 11743 ;;		_atoi
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           	psect	text38
 11748  003B86                     __ptext38:
 11749                           	opt callstack 0
 11750  003B86                     _isspace:
 11751                           	opt callstack 22
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;incstack = 0
 11755  003B86  0E01               	movlw	1
 11756  003B88  0100               	movlb	0	; () banked
 11757  003B8A  6F86               	movwf	_isspace$1737& (0+255),b
 11758                           
 11759                           ; BSR set to: 0
 11760  003B8C  0E20               	movlw	32
 11761  003B8E  1980               	xorwf	isspace@c& (0+255),w,b
 11762  003B90  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11763  003B92  B4D8               	btfsc	status,2,c
 11764  003B94  D014               	goto	l6757
 11765                           
 11766                           ; BSR set to: 0
 11767  003B96  0EF7               	movlw	247
 11768  003B98  6F82               	movwf	??_isspace& (0+255),b
 11769  003B9A  0EFF               	movlw	255
 11770  003B9C  6F83               	movwf	(??_isspace+1)& (0+255),b
 11771  003B9E  C080  F084         	movff	isspace@c,??_isspace+2
 11772  003BA2  C081  F085         	movff	isspace@c+1,??_isspace+3
 11773  003BA6  5182               	movf	??_isspace& (0+255),w,b
 11774  003BA8  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11775  003BAA  5183               	movf	(??_isspace+1)& (0+255),w,b
 11776  003BAC  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11777  003BAE  5185               	movf	(??_isspace+3)& (0+255),w,b
 11778  003BB0  E104               	bnz	u7130
 11779  003BB2  0E05               	movlw	5
 11780  003BB4  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11781  003BB6  A0D8               	btfss	status,0,c
 11782  003BB8  D002               	goto	l6757
 11783  003BBA                     u7130:
 11784                           
 11785                           ; BSR set to: 0
 11786  003BBA  0E00               	movlw	0
 11787  003BBC  6F86               	movwf	_isspace$1737& (0+255),b
 11788  003BBE                     l6757:
 11789                           
 11790                           ; BSR set to: 0
 11791  003BBE  C086  F080         	movff	_isspace$1737,?_isspace
 11792  003BC2  6B81               	clrf	(?_isspace+1)& (0+255),b
 11793                           
 11794                           ; BSR set to: 0
 11795  003BC4  0012               	return		;funcret
 11796  003BC6                     __end_of_isspace:
 11797                           	opt callstack 0
 11798                           
 11799 ;; *************** function _isdigit *****************
 11800 ;; Defined at:
 11801 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;  c               2    0[BANK0 ] int 
 11804 ;; Auto vars:     Size  Location     Type
 11805 ;;		None
 11806 ;; Return value:  Size  Location     Type
 11807 ;;                  2    0[BANK0 ] int 
 11808 ;; Registers used:
 11809 ;;		wreg, status,2, status,0
 11810 ;; Tracked objects:
 11811 ;;		On entry : 0/0
 11812 ;;		On exit  : 0/0
 11813 ;;		Unchanged: 0/0
 11814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11815 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11817 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11818 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11819 ;;Total ram usage:        6 bytes
 11820 ;; Hardware stack levels used:    1
 11821 ;; Hardware stack levels required when called:    3
 11822 ;; This function calls:
 11823 ;;		Nothing
 11824 ;; This function is called by:
 11825 ;;		_vfpfcnvrt
 11826 ;;		_atoi
 11827 ;; This function uses a non-reentrant model
 11828 ;;
 11829                           
 11830                           	psect	text39
 11831  003D40                     __ptext39:
 11832                           	opt callstack 0
 11833  003D40                     _isdigit:
 11834                           	opt callstack 23
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;incstack = 0
 11838  003D40  0ED0               	movlw	208
 11839  003D42  0100               	movlb	0	; () banked
 11840  003D44  6F82               	movwf	??_isdigit& (0+255),b
 11841  003D46  0EFF               	movlw	255
 11842  003D48  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11843  003D4A  C080  F084         	movff	isdigit@c,??_isdigit+2
 11844  003D4E  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11845  003D52  5182               	movf	??_isdigit& (0+255),w,b
 11846  003D54  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11847  003D56  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11848  003D58  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11849  003D5A  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11850  003D5C  E106               	bnz	u6970
 11851  003D5E  0E0A               	movlw	10
 11852  003D60  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11853  003D62  B0D8               	btfsc	status,0,c
 11854  003D64  D002               	goto	u6970
 11855  003D66  0E01               	movlw	1
 11856  003D68  D001               	goto	u6980
 11857  003D6A                     u6970:
 11858  003D6A  0E00               	movlw	0
 11859  003D6C                     u6980:
 11860  003D6C  6F80               	movwf	?_isdigit& (0+255),b
 11861  003D6E  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11862                           
 11863                           ; BSR set to: 0
 11864  003D70  0012               	return		;funcret
 11865  003D72                     __end_of_isdigit:
 11866                           	opt callstack 0
 11867                           
 11868 ;; *************** function ___wmul *****************
 11869 ;; Defined at:
 11870 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11873 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11874 ;; Auto vars:     Size  Location     Type
 11875 ;;  product         2    4[BANK0 ] unsigned int 
 11876 ;; Return value:  Size  Location     Type
 11877 ;;                  2    0[BANK0 ] unsigned int 
 11878 ;; Registers used:
 11879 ;;		wreg, status,2, status,0, prodl, prodh
 11880 ;; Tracked objects:
 11881 ;;		On entry : 0/0
 11882 ;;		On exit  : 0/0
 11883 ;;		Unchanged: 0/0
 11884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11885 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11888 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11889 ;;Total ram usage:        6 bytes
 11890 ;; Hardware stack levels used:    1
 11891 ;; Hardware stack levels required when called:    3
 11892 ;; This function calls:
 11893 ;;		Nothing
 11894 ;; This function is called by:
 11895 ;;		_main
 11896 ;;		_atoi
 11897 ;; This function uses a non-reentrant model
 11898 ;;
 11899                           
 11900                           	psect	text40
 11901  003E20                     __ptext40:
 11902                           	opt callstack 0
 11903  003E20                     ___wmul:
 11904                           	opt callstack 22
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;incstack = 0
 11908  003E20  0100               	movlb	0	; () banked
 11909  003E22  5180               	movf	___wmul@multiplier& (0+255),w,b
 11910  003E24  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11911  003E26  CFF3 F084          	movff	prodl,___wmul@product
 11912  003E2A  CFF4 F085          	movff	prodh,___wmul@product+1
 11913  003E2E  5180               	movf	___wmul@multiplier& (0+255),w,b
 11914  003E30  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11915  003E32  50F3               	movf	prodl,w,c
 11916  003E34  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11917  003E36  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11918  003E38  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11919  003E3A  50F3               	movf	prodl,w,c
 11920  003E3C  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11921                           
 11922                           ; BSR set to: 0
 11923  003E3E  C084  F080         	movff	___wmul@product,?___wmul
 11924  003E42  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11925                           
 11926                           ; BSR set to: 0
 11927  003E46  0012               	return		;funcret
 11928  003E48                     __end_of___wmul:
 11929                           	opt callstack 0
 11930                           
 11931 ;; *************** function _initLCD *****************
 11932 ;; Defined at:
 11933 ;;		line 69 in file "lcd.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;		None
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;		None
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		wreg, status,2, status,0, cstack
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;Total ram usage:        1 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; Hardware stack levels required when called:    7
 11954 ;; This function calls:
 11955 ;;		_lcdInst
 11956 ;;		_send_byte
 11957 ;;		_send_nibble
 11958 ;; This function is called by:
 11959 ;;		_actuators_main
 11960 ;;		_UI_main
 11961 ;;		_main
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           	psect	text41
 11966  003896                     __ptext41:
 11967                           	opt callstack 0
 11968  003896                     _initLCD:
 11969                           	opt callstack 23
 11970                           
 11971                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;incstack = 0
 11975  003896  0E31               	movlw	49
 11976  003898  0100               	movlb	0	; () banked
 11977  00389A  6F84               	movwf	??_initLCD& (0+255),b
 11978  00389C  0EB2               	movlw	178
 11979  00389E                     u10167:
 11980  00389E  2EE8               	decfsz	wreg,f,c
 11981  0038A0  D7FE               	bra	u10167
 11982  0038A2  2F84               	decfsz	??_initLCD& (0+255),f,b
 11983  0038A4  D7FC               	bra	u10167
 11984  0038A6  F000               	nop	
 11985                           
 11986                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11987  0038A8  948C               	bcf	3980,2,c	;volatile
 11988                           
 11989                           ;lcd.c: 74:     send_nibble(0b0011);
 11990  0038AA  0E03               	movlw	3
 11991  0038AC  EC37  F01F         	call	_send_nibble
 11992                           
 11993                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11994  0038B0  0E11               	movlw	17
 11995  0038B2  0100               	movlb	0	; () banked
 11996  0038B4  6F84               	movwf	??_initLCD& (0+255),b
 11997  0038B6  0E3A               	movlw	58
 11998  0038B8                     u10177:
 11999  0038B8  2EE8               	decfsz	wreg,f,c
 12000  0038BA  D7FE               	bra	u10177
 12001  0038BC  2F84               	decfsz	??_initLCD& (0+255),f,b
 12002  0038BE  D7FC               	bra	u10177
 12003  0038C0  F000               	nop	
 12004                           
 12005                           ;lcd.c: 76:     send_nibble(0b0011);
 12006  0038C2  0E03               	movlw	3
 12007  0038C4  EC37  F01F         	call	_send_nibble
 12008                           
 12009                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 12010  0038C8  0E7D               	movlw	125
 12011  0038CA                     u10187:
 12012  0038CA  2EE8               	decfsz	wreg,f,c
 12013  0038CC  D7FE               	bra	u10187
 12014                           
 12015                           ;lcd.c: 78:     send_byte(0b00110010);
 12016  0038CE  0E32               	movlw	50
 12017  0038D0  EC44  F01F         	call	_send_byte
 12018                           
 12019                           ;lcd.c: 80:     send_byte(0b00101000);
 12020  0038D4  0E28               	movlw	40
 12021  0038D6  EC44  F01F         	call	_send_byte
 12022                           
 12023                           ;lcd.c: 81:     send_byte(0b00001000);
 12024  0038DA  0E08               	movlw	8
 12025  0038DC  EC44  F01F         	call	_send_byte
 12026                           
 12027                           ;lcd.c: 82:     send_byte(0b00000001);
 12028  0038E0  0E01               	movlw	1
 12029  0038E2  EC44  F01F         	call	_send_byte
 12030                           
 12031                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 12032  0038E6  0E11               	movlw	17
 12033  0038E8  0100               	movlb	0	; () banked
 12034  0038EA  6F84               	movwf	??_initLCD& (0+255),b
 12035  0038EC  0E3A               	movlw	58
 12036  0038EE                     u10197:
 12037  0038EE  2EE8               	decfsz	wreg,f,c
 12038  0038F0  D7FE               	bra	u10197
 12039  0038F2  2F84               	decfsz	??_initLCD& (0+255),f,b
 12040  0038F4  D7FC               	bra	u10197
 12041  0038F6  F000               	nop	
 12042                           
 12043                           ;lcd.c: 84:     send_byte(0b00000110);
 12044  0038F8  0E06               	movlw	6
 12045  0038FA  EC44  F01F         	call	_send_byte
 12046                           
 12047                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 12048  0038FE  0E0F               	movlw	15
 12049  003900  EC62  F01F         	call	_lcdInst
 12050  003904  0012               	return		;funcret
 12051  003906                     __end_of_initLCD:
 12052                           	opt callstack 0
 12053                           
 12054 ;; *************** function _lcdInst *****************
 12055 ;; Defined at:
 12056 ;;		line 64 in file "lcd.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;  data            1    wreg     unsigned char 
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;  data            1    3[BANK0 ] unsigned char 
 12061 ;; Return value:  Size  Location     Type
 12062 ;;                  1    wreg      void 
 12063 ;; Registers used:
 12064 ;;		wreg, status,2, status,0, cstack
 12065 ;; Tracked objects:
 12066 ;;		On entry : 0/0
 12067 ;;		On exit  : 0/0
 12068 ;;		Unchanged: 0/0
 12069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12073 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12074 ;;Total ram usage:        1 bytes
 12075 ;; Hardware stack levels used:    1
 12076 ;; Hardware stack levels required when called:    6
 12077 ;; This function calls:
 12078 ;;		_send_byte
 12079 ;; This function is called by:
 12080 ;;		_actuators_main
 12081 ;;		_stepper2
 12082 ;;		_stepper2_back
 12083 ;;		_initLCD
 12084 ;;		_print_echo
 12085 ;;		_ultrasonic_main
 12086 ;;		_number_deploy
 12087 ;;		_UI_main
 12088 ;;		_brake
 12089 ;;		_main
 12090 ;;		_lcd_shift_cursor
 12091 ;;		_lcd_shift_display
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text42
 12096  003EC4                     __ptext42:
 12097                           	opt callstack 0
 12098  003EC4                     _lcdInst:
 12099                           	opt callstack 22
 12100                           
 12101                           ;incstack = 0
 12102                           ;lcdInst@data stored from wreg
 12103  003EC4  0100               	movlb	0	; () banked
 12104  003EC6  6F83               	movwf	lcdInst@data& (0+255),b
 12105                           
 12106                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12107  003EC8  948C               	bcf	3980,2,c	;volatile
 12108                           
 12109                           ;lcd.c: 66:     send_byte(data);
 12110  003ECA  0100               	movlb	0	; () banked
 12111  003ECC  5183               	movf	lcdInst@data& (0+255),w,b
 12112  003ECE  EC44  F01F         	call	_send_byte
 12113  003ED2  0012               	return		;funcret
 12114  003ED4                     __end_of_lcdInst:
 12115                           	opt callstack 0
 12116                           
 12117 ;; *************** function _send_byte *****************
 12118 ;; Defined at:
 12119 ;;		line 55 in file "lcd.c"
 12120 ;; Parameters:    Size  Location     Type
 12121 ;;  data            1    wreg     unsigned char 
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;  data            1    2[BANK0 ] unsigned char 
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      void 
 12126 ;; Registers used:
 12127 ;;		wreg, status,2, status,0, cstack
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12137 ;;Total ram usage:        1 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:    5
 12140 ;; This function calls:
 12141 ;;		_send_nibble
 12142 ;; This function is called by:
 12143 ;;		_lcdInst
 12144 ;;		_initLCD
 12145 ;;		_putch
 12146 ;; This function uses a non-reentrant model
 12147 ;;
 12148                           
 12149                           	psect	text43
 12150  003E88                     __ptext43:
 12151                           	opt callstack 0
 12152  003E88                     _send_byte:
 12153                           	opt callstack 16
 12154                           
 12155                           ;incstack = 0
 12156                           ;send_byte@data stored from wreg
 12157  003E88  0100               	movlb	0	; () banked
 12158  003E8A  6F82               	movwf	send_byte@data& (0+255),b
 12159                           
 12160                           ;lcd.c: 57:     send_nibble(data >> 4);
 12161  003E8C  0100               	movlb	0	; () banked
 12162  003E8E  3982               	swapf	send_byte@data& (0+255),w,b
 12163  003E90  0B0F               	andlw	15
 12164  003E92  EC37  F01F         	call	_send_nibble
 12165                           
 12166                           ;lcd.c: 60:     send_nibble(data);
 12167  003E96  0100               	movlb	0	; () banked
 12168  003E98  5182               	movf	send_byte@data& (0+255),w,b
 12169  003E9A  EC37  F01F         	call	_send_nibble
 12170  003E9E  0012               	return		;funcret
 12171  003EA0                     __end_of_send_byte:
 12172                           	opt callstack 0
 12173                           
 12174 ;; *************** function _send_nibble *****************
 12175 ;; Defined at:
 12176 ;;		line 44 in file "lcd.c"
 12177 ;; Parameters:    Size  Location     Type
 12178 ;;  data            1    wreg     unsigned char 
 12179 ;; Auto vars:     Size  Location     Type
 12180 ;;  data            1    1[BANK0 ] unsigned char 
 12181 ;; Return value:  Size  Location     Type
 12182 ;;                  1    wreg      void 
 12183 ;; Registers used:
 12184 ;;		wreg, status,2, status,0, cstack
 12185 ;; Tracked objects:
 12186 ;;		On entry : 0/0
 12187 ;;		On exit  : 0/0
 12188 ;;		Unchanged: 0/0
 12189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;Total ram usage:        1 bytes
 12195 ;; Hardware stack levels used:    1
 12196 ;; Hardware stack levels required when called:    4
 12197 ;; This function calls:
 12198 ;;		_pulse_e
 12199 ;; This function is called by:
 12200 ;;		_send_byte
 12201 ;;		_initLCD
 12202 ;; This function uses a non-reentrant model
 12203 ;;
 12204                           
 12205                           	psect	text44
 12206  003E6E                     __ptext44:
 12207                           	opt callstack 0
 12208  003E6E                     _send_nibble:
 12209                           	opt callstack 16
 12210                           
 12211                           ;incstack = 0
 12212                           ;send_nibble@data stored from wreg
 12213  003E6E  0100               	movlb	0	; () banked
 12214  003E70  6F81               	movwf	send_nibble@data& (0+255),b
 12215                           
 12216                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12217  003E72  508C               	movf	3980,w,c	;volatile
 12218  003E74  0B0F               	andlw	15
 12219  003E76  6E8C               	movwf	3980,c	;volatile
 12220                           
 12221                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12222  003E78  0100               	movlb	0	; () banked
 12223  003E7A  3981               	swapf	send_nibble@data& (0+255),w,b
 12224  003E7C  0BF0               	andlw	240
 12225  003E7E  108C               	iorwf	3980,w,c	;volatile
 12226  003E80  6E8C               	movwf	3980,c	;volatile
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;lcd.c: 48:     pulse_e();
 12230  003E82  ECD0  F01E         	call	_pulse_e	;wreg free
 12231  003E86  0012               	return		;funcret
 12232  003E88                     __end_of_send_nibble:
 12233                           	opt callstack 0
 12234                           
 12235 ;; *************** function _pulse_e *****************
 12236 ;; Defined at:
 12237 ;;		line 28 in file "lcd.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;		None
 12240 ;; Auto vars:     Size  Location     Type
 12241 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;Total ram usage:        1 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; Hardware stack levels required when called:    3
 12258 ;; This function calls:
 12259 ;;		Nothing
 12260 ;; This function is called by:
 12261 ;;		_send_nibble
 12262 ;; This function uses a non-reentrant model
 12263 ;;
 12264                           
 12265                           	psect	text45
 12266  003DA0                     __ptext45:
 12267                           	opt callstack 0
 12268  003DA0                     _pulse_e:
 12269                           	opt callstack 16
 12270                           
 12271                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12272                           
 12273                           ;incstack = 0
 12274  003DA0  0E00               	movlw	0
 12275  003DA2  BEF2               	btfsc	4082,7,c	;volatile
 12276  003DA4  0E01               	movlw	1
 12277  003DA6  0100               	movlb	0	; () banked
 12278  003DA8  6F80               	movwf	pulse_e@interruptState& (0+255),b
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12282  003DAA  9EF2               	bcf	4082,7,c	;volatile
 12283                           
 12284                           ; BSR set to: 0
 12285                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12286  003DAC  868C               	bsf	3980,3,c	;volatile
 12287                           
 12288                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12289  003DAE  0E14               	movlw	20
 12290  003DB0                     u10207:
 12291  003DB0  2EE8               	decfsz	wreg,f,c
 12292  003DB2  D7FE               	bra	u10207
 12293  003DB4  D000               	nop2	
 12294                           
 12295                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12296  003DB6  968C               	bcf	3980,3,c	;volatile
 12297                           
 12298                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12299  003DB8  0E53               	movlw	83
 12300  003DBA                     u10217:
 12301  003DBA  2EE8               	decfsz	wreg,f,c
 12302  003DBC  D7FE               	bra	u10217
 12303  003DBE  F000               	nop	
 12304                           
 12305                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12306  003DC0  0100               	movlb	0	; () banked
 12307  003DC2  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 12308  003DC4  D002               	bra	u6765
 12309  003DC6  9EF2               	bcf	4082,7,c	;volatile
 12310  003DC8  D001               	bra	u6766
 12311  003DCA                     u6765:
 12312  003DCA  8EF2               	bsf	4082,7,c	;volatile
 12313  003DCC                     u6766:
 12314  003DCC  0012               	return		;funcret
 12315  003DCE                     __end_of_pulse_e:
 12316                           	opt callstack 0
 12317                           
 12318 ;; *************** function ___llmod *****************
 12319 ;; Defined at:
 12320 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12321 ;; Parameters:    Size  Location     Type
 12322 ;;  dividend        4    0[BANK0 ] unsigned long 
 12323 ;;  divisor         4    4[BANK0 ] unsigned long 
 12324 ;; Auto vars:     Size  Location     Type
 12325 ;;  counter         1    8[BANK0 ] unsigned char 
 12326 ;; Return value:  Size  Location     Type
 12327 ;;                  4    0[BANK0 ] unsigned long 
 12328 ;; Registers used:
 12329 ;;		wreg, status,2, status,0
 12330 ;; Tracked objects:
 12331 ;;		On entry : 0/0
 12332 ;;		On exit  : 0/0
 12333 ;;		Unchanged: 0/0
 12334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12335 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12336 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;Total ram usage:        9 bytes
 12340 ;; Hardware stack levels used:    1
 12341 ;; Hardware stack levels required when called:    3
 12342 ;; This function calls:
 12343 ;;		Nothing
 12344 ;; This function is called by:
 12345 ;;		_UI_main
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           	psect	text46
 12350  003974                     __ptext46:
 12351                           	opt callstack 0
 12352  003974                     ___llmod:
 12353                           	opt callstack 26
 12354                           
 12355                           ;incstack = 0
 12356  003974  0100               	movlb	0	; () banked
 12357  003976  5184               	movf	___llmod@divisor& (0+255),w,b
 12358  003978  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12359  00397A  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12360  00397C  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12361  00397E  B4D8               	btfsc	status,2,c
 12362  003980  D024               	goto	l1152
 12363                           
 12364                           ; BSR set to: 0
 12365  003982  0E01               	movlw	1
 12366  003984  6F88               	movwf	___llmod@counter& (0+255),b
 12367  003986  D006               	goto	l7797
 12368  003988                     l7795:
 12369                           
 12370                           ; BSR set to: 0
 12371  003988  90D8               	bcf	status,0,c
 12372  00398A  3784               	rlcf	___llmod@divisor& (0+255),f,b
 12373  00398C  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12374  00398E  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12375  003990  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12376  003992  2B88               	incf	___llmod@counter& (0+255),f,b
 12377  003994                     l7797:
 12378                           
 12379                           ; BSR set to: 0
 12380  003994  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12381  003996  D7F8               	goto	l7795
 12382  003998                     u8460:
 12383                           
 12384                           ; BSR set to: 0
 12385  003998  5184               	movf	___llmod@divisor& (0+255),w,b
 12386  00399A  5D80               	subwf	___llmod@dividend& (0+255),w,b
 12387  00399C  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12388  00399E  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12389  0039A0  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12390  0039A2  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12391  0039A4  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12392  0039A6  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12393  0039A8  A0D8               	btfss	status,0,c
 12394  0039AA  D008               	goto	l7803
 12395                           
 12396                           ; BSR set to: 0
 12397  0039AC  5184               	movf	___llmod@divisor& (0+255),w,b
 12398  0039AE  5F80               	subwf	___llmod@dividend& (0+255),f,b
 12399  0039B0  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12400  0039B2  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12401  0039B4  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12402  0039B6  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12403  0039B8  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12404  0039BA  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12405  0039BC                     l7803:
 12406                           
 12407                           ; BSR set to: 0
 12408  0039BC  90D8               	bcf	status,0,c
 12409  0039BE  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12410  0039C0  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12411  0039C2  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12412  0039C4  3384               	rrcf	___llmod@divisor& (0+255),f,b
 12413                           
 12414                           ; BSR set to: 0
 12415  0039C6  2F88               	decfsz	___llmod@counter& (0+255),f,b
 12416  0039C8  D7E7               	goto	u8460
 12417  0039CA                     l1152:
 12418                           
 12419                           ; BSR set to: 0
 12420  0039CA  C080  F080         	movff	___llmod@dividend,?___llmod
 12421  0039CE  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 12422  0039D2  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 12423  0039D6  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 12424                           
 12425                           ; BSR set to: 0
 12426  0039DA  0012               	return		;funcret
 12427  0039DC                     __end_of___llmod:
 12428                           	opt callstack 0
 12429                           
 12430 ;; *************** function _I2C_Master_Write *****************
 12431 ;; Defined at:
 12432 ;;		line 70 in file "I2C.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;		None
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  1    wreg      void 
 12439 ;; Registers used:
 12440 ;;		wreg, status,2, status,0, cstack
 12441 ;; Tracked objects:
 12442 ;;		On entry : 0/0
 12443 ;;		On exit  : 0/0
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12449 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12450 ;;Total ram usage:        2 bytes
 12451 ;; Hardware stack levels used:    1
 12452 ;; Hardware stack levels required when called:    4
 12453 ;; This function calls:
 12454 ;;		_I2C_Master_Wait
 12455 ;; This function is called by:
 12456 ;;		_UI_main
 12457 ;;		_brake
 12458 ;;		_start
 12459 ;;		_backwards
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           	psect	text47
 12464  003ED4                     __ptext47:
 12465                           	opt callstack 0
 12466  003ED4                     _I2C_Master_Write:
 12467                           	opt callstack 25
 12468                           
 12469                           ;I2C.c: 71:     I2C_Master_Wait();
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;incstack = 0
 12473  003ED4  EC50  F01F         	call	_I2C_Master_Wait	;wreg free
 12474                           
 12475                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 12476  003ED8  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 12477  003EDC  0012               	return		;funcret
 12478  003EDE                     __end_of_I2C_Master_Write:
 12479                           	opt callstack 0
 12480                           
 12481 ;; *************** function _I2C_Master_Stop *****************
 12482 ;; Defined at:
 12483 ;;		line 65 in file "I2C.c"
 12484 ;; Parameters:    Size  Location     Type
 12485 ;;		None
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;		None
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  1    wreg      void 
 12490 ;; Registers used:
 12491 ;;		wreg, status,2, status,0, cstack
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12501 ;;Total ram usage:        0 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; Hardware stack levels required when called:    4
 12504 ;; This function calls:
 12505 ;;		_I2C_Master_Wait
 12506 ;; This function is called by:
 12507 ;;		_UI_main
 12508 ;;		_brake
 12509 ;;		_start
 12510 ;;		_backwards
 12511 ;; This function uses a non-reentrant model
 12512 ;;
 12513                           
 12514                           	psect	text48
 12515  003EDE                     __ptext48:
 12516                           	opt callstack 0
 12517  003EDE                     _I2C_Master_Stop:
 12518                           	opt callstack 25
 12519                           
 12520                           ;I2C.c: 66:     I2C_Master_Wait();
 12521                           
 12522                           ;incstack = 0
 12523  003EDE  EC50  F01F         	call	_I2C_Master_Wait	;wreg free
 12524                           
 12525                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 12526  003EE2  84C5               	bsf	4037,2,c	;volatile
 12527  003EE4  0012               	return		;funcret
 12528  003EE6                     __end_of_I2C_Master_Stop:
 12529                           	opt callstack 0
 12530                           
 12531 ;; *************** function _I2C_Master_Start *****************
 12532 ;; Defined at:
 12533 ;;		line 55 in file "I2C.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;		None
 12536 ;; Auto vars:     Size  Location     Type
 12537 ;;		None
 12538 ;; Return value:  Size  Location     Type
 12539 ;;                  1    wreg      void 
 12540 ;; Registers used:
 12541 ;;		wreg, status,2, status,0, cstack
 12542 ;; Tracked objects:
 12543 ;;		On entry : 0/0
 12544 ;;		On exit  : 0/0
 12545 ;;		Unchanged: 0/0
 12546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12551 ;;Total ram usage:        0 bytes
 12552 ;; Hardware stack levels used:    1
 12553 ;; Hardware stack levels required when called:    4
 12554 ;; This function calls:
 12555 ;;		_I2C_Master_Wait
 12556 ;; This function is called by:
 12557 ;;		_UI_main
 12558 ;;		_brake
 12559 ;;		_start
 12560 ;;		_backwards
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text49
 12565  003EE6                     __ptext49:
 12566                           	opt callstack 0
 12567  003EE6                     _I2C_Master_Start:
 12568                           	opt callstack 25
 12569                           
 12570                           ;I2C.c: 56:     I2C_Master_Wait();
 12571                           
 12572                           ;incstack = 0
 12573  003EE6  EC50  F01F         	call	_I2C_Master_Wait	;wreg free
 12574                           
 12575                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 12576  003EEA  80C5               	bsf	4037,0,c	;volatile
 12577  003EEC  0012               	return		;funcret
 12578  003EEE                     __end_of_I2C_Master_Start:
 12579                           	opt callstack 0
 12580                           
 12581 ;; *************** function _I2C_Master_Read *****************
 12582 ;; Defined at:
 12583 ;;		line 77 in file "I2C.c"
 12584 ;; Parameters:    Size  Location     Type
 12585 ;;  ackBit          1    wreg     unsigned char 
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;  ackBit          1    1[BANK0 ] unsigned char 
 12588 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  1    wreg      unsigned char 
 12591 ;; Registers used:
 12592 ;;		wreg, status,2, status,0, cstack
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12599 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12601 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12602 ;;Total ram usage:        2 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:    4
 12605 ;; This function calls:
 12606 ;;		_I2C_Master_Wait
 12607 ;; This function is called by:
 12608 ;;		_UI_main
 12609 ;;		_brake
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text50
 12614  003DCE                     __ptext50:
 12615                           	opt callstack 0
 12616  003DCE                     _I2C_Master_Read:
 12617                           	opt callstack 25
 12618                           
 12619                           ;incstack = 0
 12620                           ;I2C_Master_Read@ackBit stored from wreg
 12621  003DCE  0100               	movlb	0	; () banked
 12622  003DD0  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 12623                           
 12624                           ;I2C.c: 78:     I2C_Master_Wait();
 12625  003DD2  EC50  F01F         	call	_I2C_Master_Wait	;wreg free
 12626                           
 12627                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 12628  003DD6  86C5               	bsf	4037,3,c	;volatile
 12629                           
 12630                           ;I2C.c: 81:     I2C_Master_Wait();
 12631  003DD8  EC50  F01F         	call	_I2C_Master_Wait	;wreg free
 12632                           
 12633                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 12634  003DDC  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 12635                           
 12636                           ;I2C.c: 86:     I2C_Master_Wait();
 12637  003DE0  EC50  F01F         	call	_I2C_Master_Wait	;wreg free
 12638                           
 12639                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 12640  003DE4  0100               	movlb	0	; () banked
 12641  003DE6  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 12642  003DE8  D002               	bra	u7945
 12643  003DEA  9AC5               	bcf	4037,5,c	;volatile
 12644  003DEC  D001               	bra	u7946
 12645  003DEE                     u7945:
 12646  003DEE  8AC5               	bsf	4037,5,c	;volatile
 12647  003DF0                     u7946:
 12648                           
 12649                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 12650  003DF0  88C5               	bsf	4037,4,c	;volatile
 12651                           
 12652                           ;I2C.c: 90:     return receivedByte;
 12653  003DF2  0100               	movlb	0	; () banked
 12654  003DF4  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 12655                           
 12656                           ; BSR set to: 0
 12657  003DF6  0012               	return		;funcret
 12658  003DF8                     __end_of_I2C_Master_Read:
 12659                           	opt callstack 0
 12660                           
 12661 ;; *************** function _I2C_Master_Wait *****************
 12662 ;; Defined at:
 12663 ;;		line 21 in file "I2C.c"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;		None
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;		None
 12668 ;; Return value:  Size  Location     Type
 12669 ;;                  1    wreg      void 
 12670 ;; Registers used:
 12671 ;;		wreg, status,2, status,0
 12672 ;; Tracked objects:
 12673 ;;		On entry : 0/0
 12674 ;;		On exit  : 0/0
 12675 ;;		Unchanged: 0/0
 12676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12680 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12681 ;;Total ram usage:        1 bytes
 12682 ;; Hardware stack levels used:    1
 12683 ;; Hardware stack levels required when called:    3
 12684 ;; This function calls:
 12685 ;;		Nothing
 12686 ;; This function is called by:
 12687 ;;		_I2C_Master_Start
 12688 ;;		_I2C_Master_Stop
 12689 ;;		_I2C_Master_Write
 12690 ;;		_I2C_Master_Read
 12691 ;;		_I2C_Master_RepeatedStart
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           	psect	text51
 12696  003EA0                     __ptext51:
 12697                           	opt callstack 0
 12698  003EA0                     _I2C_Master_Wait:
 12699                           	opt callstack 25
 12700                           
 12701                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12702                           
 12703                           ;I2C.c: 28:     }
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;incstack = 0
 12707  003EA0  B4C7               	btfsc	4039,2,c	;volatile
 12708  003EA2  D7FE               	goto	_I2C_Master_Wait
 12709  003EA4  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12710  003EA8  0E1F               	movlw	31
 12711  003EAA  0100               	movlb	0	; () banked
 12712  003EAC  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12713  003EAE  B4D8               	btfsc	status,2,c
 12714  003EB0  0012               	return	
 12715  003EB2  D7F6               	goto	_I2C_Master_Wait
 12716  003EB4                     __end_of_I2C_Master_Wait:
 12717                           	opt callstack 0
 12718                           
 12719 ;; *************** function _I2C_Master_Init *****************
 12720 ;; Defined at:
 12721 ;;		line 32 in file "I2C.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;		None
 12726 ;; Return value:  Size  Location     Type
 12727 ;;                  1    wreg      void 
 12728 ;; Registers used:
 12729 ;;		wreg, status,2, status,0, cstack
 12730 ;; Tracked objects:
 12731 ;;		On entry : 0/0
 12732 ;;		On exit  : 0/0
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12735 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12737 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12738 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12739 ;;Total ram usage:        8 bytes
 12740 ;; Hardware stack levels used:    1
 12741 ;; Hardware stack levels required when called:    4
 12742 ;; This function calls:
 12743 ;;		___lldiv
 12744 ;; This function is called by:
 12745 ;;		_UI_main
 12746 ;;		_start
 12747 ;; This function uses a non-reentrant model
 12748 ;;
 12749                           
 12750                           	psect	text52
 12751  0039DC                     __ptext52:
 12752                           	opt callstack 0
 12753  0039DC                     _I2C_Master_Init:
 12754                           	opt callstack 25
 12755                           
 12756                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;incstack = 0
 12760  0039DC  9AC6               	bcf	4038,5,c	;volatile
 12761                           
 12762                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12763  0039DE  8694               	bsf	3988,3,c	;volatile
 12764                           
 12765                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12766  0039E0  8894               	bsf	3988,4,c	;volatile
 12767                           
 12768                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12769  0039E2  0E80               	movlw	128
 12770  0039E4  0100               	movlb	0	; () banked
 12771  0039E6  6F80               	movwf	___lldiv@dividend& (0+255),b
 12772  0039E8  0E96               	movlw	150
 12773  0039EA  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12774  0039EC  0E98               	movlw	152
 12775  0039EE  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12776  0039F0  0E00               	movlw	0
 12777  0039F2  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12778  0039F4  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12779  0039F8  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12780  0039FC  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12781  003A00  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12782  003A04  0E02               	movlw	2
 12783  003A06                     u7935:
 12784  003A06  90D8               	bcf	status,0,c
 12785  003A08  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12786  003A0A  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12787  003A0C  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12788  003A0E  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12789  003A10  2EE8               	decfsz	wreg,f,c
 12790  003A12  D7F9               	goto	u7935
 12791  003A14  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12792  003A18  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12793  003A1C  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12794  003A20  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12795  003A24  ECC7  F01B         	call	___lldiv	;wreg free
 12796  003A28  0100               	movlb	0	; () banked
 12797  003A2A  0580               	decf	?___lldiv& (0+255),w,b
 12798  003A2C  6EC8               	movwf	4040,c	;volatile
 12799                           
 12800                           ; BSR set to: 0
 12801                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12802  003A2E  0E80               	movlw	128
 12803  003A30  6EC7               	movwf	4039,c	;volatile
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12807  003A32  0E28               	movlw	40
 12808  003A34  6EC6               	movwf	4038,c	;volatile
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12812  003A36  0E00               	movlw	0
 12813  003A38  6EC5               	movwf	4037,c	;volatile
 12814                           
 12815                           ; BSR set to: 0
 12816  003A3A  0012               	return		;funcret
 12817  003A3C                     __end_of_I2C_Master_Init:
 12818                           	opt callstack 0
 12819                           
 12820 ;; *************** function ___lldiv *****************
 12821 ;; Defined at:
 12822 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12823 ;; Parameters:    Size  Location     Type
 12824 ;;  dividend        4    0[BANK0 ] unsigned long 
 12825 ;;  divisor         4    4[BANK0 ] unsigned long 
 12826 ;; Auto vars:     Size  Location     Type
 12827 ;;  quotient        4    8[BANK0 ] unsigned long 
 12828 ;;  counter         1   12[BANK0 ] unsigned char 
 12829 ;; Return value:  Size  Location     Type
 12830 ;;                  4    0[BANK0 ] unsigned long 
 12831 ;; Registers used:
 12832 ;;		wreg, status,2, status,0
 12833 ;; Tracked objects:
 12834 ;;		On entry : 0/0
 12835 ;;		On exit  : 0/0
 12836 ;;		Unchanged: 0/0
 12837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12838 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12839 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12841 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12842 ;;Total ram usage:       13 bytes
 12843 ;; Hardware stack levels used:    1
 12844 ;; Hardware stack levels required when called:    3
 12845 ;; This function calls:
 12846 ;;		Nothing
 12847 ;; This function is called by:
 12848 ;;		_I2C_Master_Init
 12849 ;; This function uses a non-reentrant model
 12850 ;;
 12851                           
 12852                           	psect	text53
 12853  00378E                     __ptext53:
 12854                           	opt callstack 0
 12855  00378E                     ___lldiv:
 12856                           	opt callstack 25
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;incstack = 0
 12860  00378E  0E00               	movlw	0
 12861  003790  0100               	movlb	0	; () banked
 12862  003792  6F88               	movwf	___lldiv@quotient& (0+255),b
 12863  003794  0E00               	movlw	0
 12864  003796  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12865  003798  0E00               	movlw	0
 12866  00379A  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12867  00379C  0E00               	movlw	0
 12868  00379E  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12869                           
 12870                           ; BSR set to: 0
 12871  0037A0  5184               	movf	___lldiv@divisor& (0+255),w,b
 12872  0037A2  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12873  0037A4  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12874  0037A6  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12875  0037A8  B4D8               	btfsc	status,2,c
 12876  0037AA  D02A               	goto	l759
 12877                           
 12878                           ; BSR set to: 0
 12879  0037AC  0E01               	movlw	1
 12880  0037AE  6F8C               	movwf	___lldiv@counter& (0+255),b
 12881  0037B0  D006               	goto	l7373
 12882  0037B2                     l7371:
 12883                           
 12884                           ; BSR set to: 0
 12885  0037B2  90D8               	bcf	status,0,c
 12886  0037B4  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12887  0037B6  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12888  0037B8  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12889  0037BA  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12890  0037BC  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12891  0037BE                     l7373:
 12892                           
 12893                           ; BSR set to: 0
 12894  0037BE  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12895  0037C0  D7F8               	goto	l7371
 12896  0037C2                     u7910:
 12897                           
 12898                           ; BSR set to: 0
 12899  0037C2  90D8               	bcf	status,0,c
 12900  0037C4  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12901  0037C6  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12902  0037C8  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12903  0037CA  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12904                           
 12905                           ; BSR set to: 0
 12906  0037CC  5184               	movf	___lldiv@divisor& (0+255),w,b
 12907  0037CE  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12908  0037D0  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12909  0037D2  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12910  0037D4  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12911  0037D6  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12912  0037D8  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12913  0037DA  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12914  0037DC  A0D8               	btfss	status,0,c
 12915  0037DE  D009               	goto	l7383
 12916                           
 12917                           ; BSR set to: 0
 12918  0037E0  5184               	movf	___lldiv@divisor& (0+255),w,b
 12919  0037E2  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12920  0037E4  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12921  0037E6  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12922  0037E8  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12923  0037EA  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12924  0037EC  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12925  0037EE  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12926                           
 12927                           ; BSR set to: 0
 12928  0037F0  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12929  0037F2                     l7383:
 12930                           
 12931                           ; BSR set to: 0
 12932  0037F2  90D8               	bcf	status,0,c
 12933  0037F4  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12934  0037F6  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12935  0037F8  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12936  0037FA  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12937                           
 12938                           ; BSR set to: 0
 12939  0037FC  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12940  0037FE  D7E1               	goto	u7910
 12941  003800                     l759:
 12942                           
 12943                           ; BSR set to: 0
 12944  003800  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12945  003804  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12946  003808  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12947  00380C  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12948                           
 12949                           ; BSR set to: 0
 12950  003810  0012               	return		;funcret
 12951  003812                     __end_of___lldiv:
 12952                           	opt callstack 0
 12953                           
 12954 ;; *************** function _ISR *****************
 12955 ;; Defined at:
 12956 ;;		line 71 in file "main.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;		None
 12959 ;; Auto vars:     Size  Location     Type
 12960 ;;		None
 12961 ;; Return value:  Size  Location     Type
 12962 ;;                  1    wreg      void 
 12963 ;; Registers used:
 12964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12965 ;; Tracked objects:
 12966 ;;		On entry : 0/0
 12967 ;;		On exit  : 0/0
 12968 ;;		Unchanged: 0/0
 12969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12974 ;;Total ram usage:        2 bytes
 12975 ;; Hardware stack levels used:    1
 12976 ;; Hardware stack levels required when called:    2
 12977 ;; This function calls:
 12978 ;;		_echo
 12979 ;; This function is called by:
 12980 ;;		Interrupt level 2
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	intcode
 12985  000008                     __pintcode:
 12986                           	opt callstack 0
 12987  000008                     _ISR:
 12988                           	opt callstack 14
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;incstack = 0
 12992  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12993  00000A  EDE3  F01D         	call	int_func,f	;refresh shadow registers
 12994                           
 12995                           	psect	intcode_body
 12996  003BC6                     __pintcode_body:
 12997                           	opt callstack 14
 12998  003BC6                     int_func:
 12999                           	opt callstack 14
 13000  003BC6  0006               	pop		; remove dummy address from shadow register refresh
 13001  003BC8  CFD9 F036          	movff	fsr2l,??_ISR
 13002  003BCC  CFDA F037          	movff	fsr2h,??_ISR+1
 13003                           
 13004                           ;main.c: 72:  if(RBIF == 1){
 13005  003BD0  A0F2               	btfss	4082,0,c	;volatile
 13006  003BD2  D012               	goto	i2l396
 13007                           
 13008                           ;main.c: 73:         if (sens){
 13009  003BD4  5058               	movf	_sens,w,c	;volatile
 13010  003BD6  1059               	iorwf	_sens+1,w,c	;volatile
 13011  003BD8  B4D8               	btfsc	status,2,c
 13012  003BDA  D005               	goto	i2l6263
 13013                           
 13014                           ;main.c: 74:             RBIE = 0;
 13015  003BDC  96F2               	bcf	4082,3,c	;volatile
 13016                           
 13017                           ;main.c: 75:             echo();
 13018  003BDE  EC29  F007         	call	_echo	;wreg free
 13019                           
 13020                           ;main.c: 76:             RBIF = 0;
 13021  003BE2  90F2               	bcf	4082,0,c	;volatile
 13022                           
 13023                           ;main.c: 77:             RBIE = 1;
 13024  003BE4  86F2               	bsf	4082,3,c	;volatile
 13025  003BE6                     i2l6263:
 13026                           
 13027                           ;main.c: 79:         if (~sens){
 13028  003BE6  2858               	incf	_sens,w,c	;volatile
 13029  003BE8  E103               	bnz	i2u650_40
 13030  003BEA  2859               	incf	_sens+1,w,c	;volatile
 13031  003BEC  B4D8               	btfsc	status,2,c
 13032  003BEE  D004               	goto	i2l396
 13033  003BF0                     i2u650_40:
 13034                           
 13035                           ;main.c: 80:             key_was_pressed = 1;
 13036  003BF0  0E01               	movlw	1
 13037  003BF2  0101               	movlb	1	; () banked
 13038  003BF4  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
 13039                           
 13040                           ; BSR set to: 1
 13041                           ;main.c: 81:             INT1IF = 0;
 13042  003BF6  90F0               	bcf	4080,0,c	;volatile
 13043  003BF8                     i2l396:
 13044  003BF8  C037  FFDA         	movff	??_ISR+1,fsr2h
 13045  003BFC  C036  FFD9         	movff	??_ISR,fsr2l
 13046  003C00  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13047  003C02  0011               	retfie		f
 13048  003C04                     __end_of_ISR:
 13049                           	opt callstack 0
 13050                           
 13051 ;; *************** function _echo *****************
 13052 ;; Defined at:
 13053 ;;		line 99 in file "main.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;		None
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;		None
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13069 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13071 ;;Total ram usage:        4 bytes
 13072 ;; Hardware stack levels used:    1
 13073 ;; Hardware stack levels required when called:    1
 13074 ;; This function calls:
 13075 ;;		___fldiv
 13076 ;;		___fltol
 13077 ;;		___xxtofl
 13078 ;;		i2___awdiv
 13079 ;; This function is called by:
 13080 ;;		_ISR
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           	psect	text55
 13085  000E52                     __ptext55:
 13086                           	opt callstack 0
 13087  000E52                     _echo:
 13088                           	opt callstack 14
 13089                           
 13090                           ;main.c: 100:     if (b==1){
 13091                           
 13092                           ;incstack = 0
 13093  000E52  045A               	decf	_b,w,c
 13094  000E54  105B               	iorwf	_b+1,w,c
 13095  000E56  A4D8               	btfss	status,2,c
 13096  000E58  D0A2               	goto	i2l5709
 13097                           
 13098                           ;main.c: 101:         if (RB7 == 1){
 13099  000E5A  BE81               	btfsc	3969,7,c	;volatile
 13100                           
 13101                           ;main.c: 102:             TMR1ON = 1;
 13102  000E5C  80CD               	bsf	4045,0,c	;volatile
 13103                           
 13104                           ;main.c: 104:         if (RB7 == 0){
 13105                           
 13106                           ;main.c: 103:         }
 13107  000E5E  BE81               	btfsc	3969,7,c	;volatile
 13108  000E60  D037               	goto	i2l5685
 13109                           
 13110                           ;main.c: 105:             TMR1ON = 0;
 13111  000E62  90CD               	bcf	4045,0,c	;volatile
 13112                           
 13113                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 13114  000E64  0EAE               	movlw	174
 13115  000E66  6E13               	movwf	___fldiv@a,c
 13116  000E68  0E47               	movlw	71
 13117  000E6A  6E14               	movwf	___fldiv@a+1,c
 13118  000E6C  0E6B               	movlw	107
 13119  000E6E  6E15               	movwf	___fldiv@a+2,c
 13120  000E70  0E42               	movlw	66
 13121  000E72  6E16               	movwf	___fldiv@a+3,c
 13122  000E74  50CF               	movf	4047,w,c	;volatile
 13123  000E76  6E33               	movwf	(??_echo+1)& (0+255),c
 13124  000E78  6A32               	clrf	??_echo& (0+255),c
 13125  000E7A  50CE               	movf	4046,w,c	;volatile
 13126  000E7C  6E34               	movwf	(??_echo+2)& (0+255),c
 13127  000E7E  6A35               	clrf	(??_echo+3)& (0+255),c
 13128  000E80  5032               	movf	??_echo,w,c
 13129  000E82  1234               	iorwf	??_echo+2,f,c
 13130  000E84  5033               	movf	??_echo+1,w,c
 13131  000E86  1235               	iorwf	??_echo+3,f,c
 13132  000E88  C034  F001         	movff	??_echo+2,___xxtofl@val
 13133  000E8C  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13134  000E90  0E00               	movlw	0
 13135  000E92  BE02               	btfsc	___xxtofl@val+1,7,c
 13136  000E94  0EFF               	movlw	-1
 13137  000E96  6E03               	movwf	___xxtofl@val+2,c
 13138  000E98  6E04               	movwf	___xxtofl@val+3,c
 13139  000E9A  0E01               	movlw	1
 13140  000E9C  EC2C  F016         	call	___xxtofl
 13141  000EA0  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13142  000EA4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13143  000EA8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13144  000EAC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13145  000EB0  EC38  F00D         	call	___fldiv	;wreg free
 13146  000EB4  C00F  F028         	movff	?___fldiv,___fltol@f1
 13147  000EB8  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13148  000EBC  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13149  000EC0  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13150  000EC4  EC31  F01A         	call	___fltol	;wreg free
 13151  000EC8  C028  F061         	movff	?___fltol,_a
 13152  000ECC  C029  F062         	movff	?___fltol+1,_a+1
 13153  000ED0                     i2l5685:
 13154                           
 13155                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 13156  000ED0  BE62               	btfsc	_a+1,7,c
 13157  000ED2  D065               	goto	i2l5709
 13158  000ED4  5062               	movf	_a+1,w,c
 13159  000ED6  E104               	bnz	i2u563_40
 13160  000ED8  0E02               	movlw	2
 13161  000EDA  5C61               	subwf	_a,w,c
 13162  000EDC  A0D8               	btfss	status,0,c
 13163  000EDE  D05F               	goto	i2l5709
 13164  000EE0                     i2u563_40:
 13165  000EE0  BE62               	btfsc	_a+1,7,c
 13166  000EE2  D006               	goto	i2u564_40
 13167  000EE4  5062               	movf	_a+1,w,c
 13168  000EE6  E15B               	bnz	i2l5709
 13169  000EE8  0EC9               	movlw	201
 13170  000EEA  5C61               	subwf	_a,w,c
 13171  000EEC  B0D8               	btfsc	status,0,c
 13172  000EEE  D057               	goto	i2l5709
 13173  000EF0                     i2u564_40:
 13174                           
 13175                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 13176  000EF0  0440               	decf	_sumf,w,c
 13177  000EF2  B4D8               	btfsc	status,2,c
 13178  000EF4  D01B               	goto	i2l5701
 13179  000EF6  0102               	movlb	2	; () banked
 13180  000EF8  5150               	movf	_dist_final& (0+255),w,b
 13181  000EFA  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 13182  000EFC  B4D8               	btfsc	status,2,c
 13183  000EFE  D016               	goto	i2l5701
 13184                           
 13185                           ; BSR set to: 2
 13186  000F00  5152               	movf	(_dist_final+2)& (0+255),w,b
 13187  000F02  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 13188  000F04  B4D8               	btfsc	status,2,c
 13189  000F06  D012               	goto	i2l5701
 13190                           
 13191                           ; BSR set to: 2
 13192  000F08  5154               	movf	(_dist_final+4)& (0+255),w,b
 13193  000F0A  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 13194  000F0C  B4D8               	btfsc	status,2,c
 13195  000F0E  D00E               	goto	i2l5701
 13196                           
 13197                           ; BSR set to: 2
 13198                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 13199  000F10  5154               	movf	(_dist_final+4)& (0+255),w,b
 13200  000F12  2552               	addwf	(_dist_final+2)& (0+255),w,b
 13201  000F14  6E32               	movwf	??_echo& (0+255),c
 13202  000F16  5155               	movf	(_dist_final+5)& (0+255),w,b
 13203  000F18  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 13204  000F1A  6E33               	movwf	(??_echo+1)& (0+255),c
 13205  000F1C  5150               	movf	_dist_final& (0+255),w,b
 13206  000F1E  2432               	addwf	??_echo,w,c
 13207  000F20  6E38               	movwf	_sum,c
 13208  000F22  5151               	movf	(_dist_final+1)& (0+255),w,b
 13209  000F24  2033               	addwfc	??_echo+1,w,c
 13210  000F26  6E39               	movwf	_sum+1,c
 13211                           
 13212                           ; BSR set to: 2
 13213                           ;main.c: 113:                 sumf[0] = 1;
 13214  000F28  0E01               	movlw	1
 13215  000F2A  6E40               	movwf	_sumf,c
 13216  000F2C                     i2l5701:
 13217                           
 13218                           ;main.c: 115:             if (sumf[0]){
 13219  000F2C  5040               	movf	_sumf,w,c
 13220  000F2E  B4D8               	btfsc	status,2,c
 13221  000F30  D029               	goto	i2l5707
 13222                           
 13223                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 13224  000F32  90D8               	bcf	status,0,c
 13225  000F34  3450               	rlcf	_meas,w,c	;volatile
 13226  000F36  6ED9               	movwf	fsr2l,c
 13227  000F38  3451               	rlcf	_meas+1,w,c	;volatile
 13228  000F3A  6EDA               	movwf	fsr2h,c
 13229  000F3C  0E50               	movlw	low _dist_final
 13230  000F3E  26D9               	addwf	fsr2l,f,c
 13231  000F40  0E02               	movlw	high _dist_final
 13232  000F42  22DA               	addwfc	fsr2h,f,c
 13233  000F44  CFDE F032          	movff	postinc2,??_echo
 13234  000F48  CFDD F033          	movff	postdec2,??_echo+1
 13235  000F4C  C038  F034         	movff	_sum,??_echo+2
 13236  000F50  C039  F035         	movff	_sum+1,??_echo+3
 13237  000F54  5032               	movf	??_echo,w,c
 13238  000F56  5E34               	subwf	??_echo+2,f,c
 13239  000F58  5033               	movf	??_echo+1,w,c
 13240  000F5A  5A35               	subwfb	??_echo+3,f,c
 13241  000F5C  5061               	movf	_a,w,c
 13242  000F5E  2434               	addwf	??_echo+2,w,c
 13243  000F60  6E38               	movwf	_sum,c
 13244  000F62  5062               	movf	_a+1,w,c
 13245  000F64  2035               	addwfc	??_echo+3,w,c
 13246  000F66  6E39               	movwf	_sum+1,c
 13247                           
 13248                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 13249  000F68  C038  F001         	movff	_sum,i2___awdiv@dividend
 13250  000F6C  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 13251  000F70  0E00               	movlw	0
 13252  000F72  6E04               	movwf	i2___awdiv@divisor+1,c
 13253  000F74  0E05               	movlw	5
 13254  000F76  6E03               	movwf	i2___awdiv@divisor,c
 13255  000F78  EC09  F01C         	call	i2___awdiv	;wreg free
 13256  000F7C  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 13257  000F80  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 13258  000F84                     i2l5707:
 13259                           
 13260                           ;main.c: 119:             dist_final[0][meas] = a[0];
 13261  000F84  90D8               	bcf	status,0,c
 13262  000F86  3450               	rlcf	_meas,w,c	;volatile
 13263  000F88  6ED9               	movwf	fsr2l,c
 13264  000F8A  3451               	rlcf	_meas+1,w,c	;volatile
 13265  000F8C  6EDA               	movwf	fsr2h,c
 13266  000F8E  0E50               	movlw	low _dist_final
 13267  000F90  26D9               	addwf	fsr2l,f,c
 13268  000F92  0E02               	movlw	high _dist_final
 13269  000F94  22DA               	addwfc	fsr2h,f,c
 13270  000F96  C061  FFDE         	movff	_a,postinc2
 13271  000F9A  C062  FFDD         	movff	_a+1,postdec2
 13272  000F9E                     i2l5709:
 13273                           
 13274                           ;main.c: 122:     if (b==2){
 13275  000F9E  0E02               	movlw	2
 13276  000FA0  185A               	xorwf	_b,w,c
 13277  000FA2  105B               	iorwf	_b+1,w,c
 13278  000FA4  A4D8               	btfss	status,2,c
 13279  000FA6  D0A4               	goto	i2l5743
 13280                           
 13281                           ;main.c: 123:         if (RB6 == 1){
 13282  000FA8  BC81               	btfsc	3969,6,c	;volatile
 13283                           
 13284                           ;main.c: 124:             TMR1ON = 1;
 13285  000FAA  80CD               	bsf	4045,0,c	;volatile
 13286                           
 13287                           ;main.c: 126:         if (RB6 == 0){
 13288                           
 13289                           ;main.c: 125:         }
 13290  000FAC  BC81               	btfsc	3969,6,c	;volatile
 13291  000FAE  D037               	goto	i2l5719
 13292                           
 13293                           ;main.c: 127:             TMR1ON = 0;
 13294  000FB0  90CD               	bcf	4045,0,c	;volatile
 13295                           
 13296                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 13297  000FB2  0EAE               	movlw	174
 13298  000FB4  6E13               	movwf	___fldiv@a,c
 13299  000FB6  0E47               	movlw	71
 13300  000FB8  6E14               	movwf	___fldiv@a+1,c
 13301  000FBA  0E6B               	movlw	107
 13302  000FBC  6E15               	movwf	___fldiv@a+2,c
 13303  000FBE  0E42               	movlw	66
 13304  000FC0  6E16               	movwf	___fldiv@a+3,c
 13305  000FC2  50CF               	movf	4047,w,c	;volatile
 13306  000FC4  6E33               	movwf	(??_echo+1)& (0+255),c
 13307  000FC6  6A32               	clrf	??_echo& (0+255),c
 13308  000FC8  50CE               	movf	4046,w,c	;volatile
 13309  000FCA  6E34               	movwf	(??_echo+2)& (0+255),c
 13310  000FCC  6A35               	clrf	(??_echo+3)& (0+255),c
 13311  000FCE  5032               	movf	??_echo,w,c
 13312  000FD0  1234               	iorwf	??_echo+2,f,c
 13313  000FD2  5033               	movf	??_echo+1,w,c
 13314  000FD4  1235               	iorwf	??_echo+3,f,c
 13315  000FD6  C034  F001         	movff	??_echo+2,___xxtofl@val
 13316  000FDA  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13317  000FDE  0E00               	movlw	0
 13318  000FE0  BE02               	btfsc	___xxtofl@val+1,7,c
 13319  000FE2  0EFF               	movlw	-1
 13320  000FE4  6E03               	movwf	___xxtofl@val+2,c
 13321  000FE6  6E04               	movwf	___xxtofl@val+3,c
 13322  000FE8  0E01               	movlw	1
 13323  000FEA  EC2C  F016         	call	___xxtofl
 13324  000FEE  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13325  000FF2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13326  000FF6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13327  000FFA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13328  000FFE  EC38  F00D         	call	___fldiv	;wreg free
 13329  001002  C00F  F028         	movff	?___fldiv,___fltol@f1
 13330  001006  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13331  00100A  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13332  00100E  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13333  001012  EC31  F01A         	call	___fltol	;wreg free
 13334  001016  C028  F063         	movff	?___fltol,_a+2
 13335  00101A  C029  F064         	movff	?___fltol+1,_a+3
 13336  00101E                     i2l5719:
 13337                           
 13338                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 13339  00101E  BE64               	btfsc	_a+3,7,c
 13340  001020  D067               	goto	i2l5743
 13341  001022  5064               	movf	_a+3,w,c
 13342  001024  E104               	bnz	i2u573_40
 13343  001026  0E02               	movlw	2
 13344  001028  5C63               	subwf	_a+2,w,c
 13345  00102A  A0D8               	btfss	status,0,c
 13346  00102C  D061               	goto	i2l5743
 13347  00102E                     i2u573_40:
 13348  00102E  BE64               	btfsc	_a+3,7,c
 13349  001030  D006               	goto	i2u574_40
 13350  001032  5064               	movf	_a+3,w,c
 13351  001034  E15D               	bnz	i2l5743
 13352  001036  0EC9               	movlw	201
 13353  001038  5C63               	subwf	_a+2,w,c
 13354  00103A  B0D8               	btfsc	status,0,c
 13355  00103C  D059               	goto	i2l5743
 13356  00103E                     i2u574_40:
 13357                           
 13358                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 13359  00103E  0441               	decf	_sumf+1,w,c
 13360  001040  B4D8               	btfsc	status,2,c
 13361  001042  D01B               	goto	i2l5735
 13362  001044  0102               	movlb	2	; () banked
 13363  001046  515C               	movf	(_dist_final+12)& (0+255),w,b
 13364  001048  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 13365  00104A  B4D8               	btfsc	status,2,c
 13366  00104C  D016               	goto	i2l5735
 13367                           
 13368                           ; BSR set to: 2
 13369  00104E  515E               	movf	(_dist_final+14)& (0+255),w,b
 13370  001050  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 13371  001052  B4D8               	btfsc	status,2,c
 13372  001054  D012               	goto	i2l5735
 13373                           
 13374                           ; BSR set to: 2
 13375  001056  5160               	movf	(_dist_final+16)& (0+255),w,b
 13376  001058  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 13377  00105A  B4D8               	btfsc	status,2,c
 13378  00105C  D00E               	goto	i2l5735
 13379                           
 13380                           ; BSR set to: 2
 13381                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 13382  00105E  515E               	movf	(_dist_final+14)& (0+255),w,b
 13383  001060  255C               	addwf	(_dist_final+12)& (0+255),w,b
 13384  001062  6E32               	movwf	??_echo& (0+255),c
 13385  001064  515F               	movf	(_dist_final+15)& (0+255),w,b
 13386  001066  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 13387  001068  6E33               	movwf	(??_echo+1)& (0+255),c
 13388  00106A  5160               	movf	(_dist_final+16)& (0+255),w,b
 13389  00106C  2432               	addwf	??_echo,w,c
 13390  00106E  6E3A               	movwf	_sum+2,c
 13391  001070  5161               	movf	(_dist_final+17)& (0+255),w,b
 13392  001072  2033               	addwfc	??_echo+1,w,c
 13393  001074  6E3B               	movwf	_sum+3,c
 13394                           
 13395                           ; BSR set to: 2
 13396                           ;main.c: 135:             sumf[1] = 1;
 13397  001076  0E01               	movlw	1
 13398  001078  6E41               	movwf	_sumf+1,c
 13399  00107A                     i2l5735:
 13400                           
 13401                           ;main.c: 137:         if (sumf[1]){
 13402  00107A  5041               	movf	_sumf+1,w,c
 13403  00107C  B4D8               	btfsc	status,2,c
 13404  00107E  D02B               	goto	i2l5741
 13405                           
 13406                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 13407  001080  90D8               	bcf	status,0,c
 13408  001082  3450               	rlcf	_meas,w,c	;volatile
 13409  001084  6ED9               	movwf	fsr2l,c
 13410  001086  3451               	rlcf	_meas+1,w,c	;volatile
 13411  001088  6EDA               	movwf	fsr2h,c
 13412  00108A  0E5C               	movlw	low (_dist_final+12)
 13413  00108C  26D9               	addwf	fsr2l,f,c
 13414  00108E  0E02               	movlw	high (_dist_final+12)
 13415  001090  22DA               	addwfc	fsr2h,f,c
 13416  001092  CFDE F032          	movff	postinc2,??_echo
 13417  001096  CFDD F033          	movff	postdec2,??_echo+1
 13418  00109A  EE20  F03A         	lfsr	2,_sum+2
 13419  00109E  CFDE F034          	movff	postinc2,??_echo+2
 13420  0010A2  CFDD F035          	movff	postdec2,??_echo+3
 13421  0010A6  5032               	movf	??_echo,w,c
 13422  0010A8  5E34               	subwf	??_echo+2,f,c
 13423  0010AA  5033               	movf	??_echo+1,w,c
 13424  0010AC  5A35               	subwfb	??_echo+3,f,c
 13425  0010AE  5063               	movf	_a+2,w,c
 13426  0010B0  2434               	addwf	??_echo+2,w,c
 13427  0010B2  6E3A               	movwf	_sum+2,c
 13428  0010B4  5064               	movf	_a+3,w,c
 13429  0010B6  2035               	addwfc	??_echo+3,w,c
 13430  0010B8  6E3B               	movwf	_sum+3,c
 13431                           
 13432                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 13433  0010BA  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 13434  0010BE  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 13435  0010C2  0E00               	movlw	0
 13436  0010C4  6E04               	movwf	i2___awdiv@divisor+1,c
 13437  0010C6  0E05               	movlw	5
 13438  0010C8  6E03               	movwf	i2___awdiv@divisor,c
 13439  0010CA  EC09  F01C         	call	i2___awdiv	;wreg free
 13440  0010CE  C001  F266         	movff	?i2___awdiv,_dist_final+22
 13441  0010D2  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 13442  0010D6                     i2l5741:
 13443                           
 13444                           ;main.c: 141:         dist_final[1][meas] = a[1];
 13445  0010D6  90D8               	bcf	status,0,c
 13446  0010D8  3450               	rlcf	_meas,w,c	;volatile
 13447  0010DA  6ED9               	movwf	fsr2l,c
 13448  0010DC  3451               	rlcf	_meas+1,w,c	;volatile
 13449  0010DE  6EDA               	movwf	fsr2h,c
 13450  0010E0  0E5C               	movlw	low (_dist_final+12)
 13451  0010E2  26D9               	addwf	fsr2l,f,c
 13452  0010E4  0E02               	movlw	high (_dist_final+12)
 13453  0010E6  22DA               	addwfc	fsr2h,f,c
 13454  0010E8  C063  FFDE         	movff	_a+2,postinc2
 13455  0010EC  C064  FFDD         	movff	_a+3,postdec2
 13456  0010F0                     i2l5743:
 13457                           
 13458                           ;main.c: 144:     if (b==3){
 13459  0010F0  0E03               	movlw	3
 13460  0010F2  185A               	xorwf	_b,w,c
 13461  0010F4  105B               	iorwf	_b+1,w,c
 13462  0010F6  A4D8               	btfss	status,2,c
 13463  0010F8  D0A4               	goto	i2l5777
 13464                           
 13465                           ;main.c: 145:         if (RB5 == 1){
 13466  0010FA  BA81               	btfsc	3969,5,c	;volatile
 13467                           
 13468                           ;main.c: 146:             TMR1ON = 1;
 13469  0010FC  80CD               	bsf	4045,0,c	;volatile
 13470                           
 13471                           ;main.c: 148:         if (RB5 == 0){
 13472                           
 13473                           ;main.c: 147:         }
 13474  0010FE  BA81               	btfsc	3969,5,c	;volatile
 13475  001100  D037               	goto	i2l5753
 13476                           
 13477                           ;main.c: 149:             TMR1ON = 0;
 13478  001102  90CD               	bcf	4045,0,c	;volatile
 13479                           
 13480                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 13481  001104  0EAE               	movlw	174
 13482  001106  6E13               	movwf	___fldiv@a,c
 13483  001108  0E47               	movlw	71
 13484  00110A  6E14               	movwf	___fldiv@a+1,c
 13485  00110C  0E6B               	movlw	107
 13486  00110E  6E15               	movwf	___fldiv@a+2,c
 13487  001110  0E42               	movlw	66
 13488  001112  6E16               	movwf	___fldiv@a+3,c
 13489  001114  50CF               	movf	4047,w,c	;volatile
 13490  001116  6E33               	movwf	(??_echo+1)& (0+255),c
 13491  001118  6A32               	clrf	??_echo& (0+255),c
 13492  00111A  50CE               	movf	4046,w,c	;volatile
 13493  00111C  6E34               	movwf	(??_echo+2)& (0+255),c
 13494  00111E  6A35               	clrf	(??_echo+3)& (0+255),c
 13495  001120  5032               	movf	??_echo,w,c
 13496  001122  1234               	iorwf	??_echo+2,f,c
 13497  001124  5033               	movf	??_echo+1,w,c
 13498  001126  1235               	iorwf	??_echo+3,f,c
 13499  001128  C034  F001         	movff	??_echo+2,___xxtofl@val
 13500  00112C  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13501  001130  0E00               	movlw	0
 13502  001132  BE02               	btfsc	___xxtofl@val+1,7,c
 13503  001134  0EFF               	movlw	-1
 13504  001136  6E03               	movwf	___xxtofl@val+2,c
 13505  001138  6E04               	movwf	___xxtofl@val+3,c
 13506  00113A  0E01               	movlw	1
 13507  00113C  EC2C  F016         	call	___xxtofl
 13508  001140  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13509  001144  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13510  001148  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13511  00114C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13512  001150  EC38  F00D         	call	___fldiv	;wreg free
 13513  001154  C00F  F028         	movff	?___fldiv,___fltol@f1
 13514  001158  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13515  00115C  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13516  001160  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13517  001164  EC31  F01A         	call	___fltol	;wreg free
 13518  001168  C028  F065         	movff	?___fltol,_a+4
 13519  00116C  C029  F066         	movff	?___fltol+1,_a+5
 13520  001170                     i2l5753:
 13521                           
 13522                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 13523  001170  BE66               	btfsc	_a+5,7,c
 13524  001172  D067               	goto	i2l5777
 13525  001174  5066               	movf	_a+5,w,c
 13526  001176  E104               	bnz	i2u583_40
 13527  001178  0E02               	movlw	2
 13528  00117A  5C65               	subwf	_a+4,w,c
 13529  00117C  A0D8               	btfss	status,0,c
 13530  00117E  D061               	goto	i2l5777
 13531  001180                     i2u583_40:
 13532  001180  BE66               	btfsc	_a+5,7,c
 13533  001182  D006               	goto	i2u584_40
 13534  001184  5066               	movf	_a+5,w,c
 13535  001186  E15D               	bnz	i2l5777
 13536  001188  0EC9               	movlw	201
 13537  00118A  5C65               	subwf	_a+4,w,c
 13538  00118C  B0D8               	btfsc	status,0,c
 13539  00118E  D059               	goto	i2l5777
 13540  001190                     i2u584_40:
 13541                           
 13542                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 13543  001190  0442               	decf	_sumf+2,w,c
 13544  001192  B4D8               	btfsc	status,2,c
 13545  001194  D01B               	goto	i2l5769
 13546  001196  0102               	movlb	2	; () banked
 13547  001198  5168               	movf	(_dist_final+24)& (0+255),w,b
 13548  00119A  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 13549  00119C  B4D8               	btfsc	status,2,c
 13550  00119E  D016               	goto	i2l5769
 13551                           
 13552                           ; BSR set to: 2
 13553  0011A0  516A               	movf	(_dist_final+26)& (0+255),w,b
 13554  0011A2  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 13555  0011A4  B4D8               	btfsc	status,2,c
 13556  0011A6  D012               	goto	i2l5769
 13557                           
 13558                           ; BSR set to: 2
 13559  0011A8  516C               	movf	(_dist_final+28)& (0+255),w,b
 13560  0011AA  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 13561  0011AC  B4D8               	btfsc	status,2,c
 13562  0011AE  D00E               	goto	i2l5769
 13563                           
 13564                           ; BSR set to: 2
 13565                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 13566  0011B0  516A               	movf	(_dist_final+26)& (0+255),w,b
 13567  0011B2  2568               	addwf	(_dist_final+24)& (0+255),w,b
 13568  0011B4  6E32               	movwf	??_echo& (0+255),c
 13569  0011B6  516B               	movf	(_dist_final+27)& (0+255),w,b
 13570  0011B8  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 13571  0011BA  6E33               	movwf	(??_echo+1)& (0+255),c
 13572  0011BC  516C               	movf	(_dist_final+28)& (0+255),w,b
 13573  0011BE  2432               	addwf	??_echo,w,c
 13574  0011C0  6E3C               	movwf	_sum+4,c
 13575  0011C2  516D               	movf	(_dist_final+29)& (0+255),w,b
 13576  0011C4  2033               	addwfc	??_echo+1,w,c
 13577  0011C6  6E3D               	movwf	_sum+5,c
 13578                           
 13579                           ; BSR set to: 2
 13580                           ;main.c: 157:             sumf[2] = 1;
 13581  0011C8  0E01               	movlw	1
 13582  0011CA  6E42               	movwf	_sumf+2,c
 13583  0011CC                     i2l5769:
 13584                           
 13585                           ;main.c: 159:         if (sumf[2]){
 13586  0011CC  5042               	movf	_sumf+2,w,c
 13587  0011CE  B4D8               	btfsc	status,2,c
 13588  0011D0  D02B               	goto	i2l5775
 13589                           
 13590                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 13591  0011D2  90D8               	bcf	status,0,c
 13592  0011D4  3450               	rlcf	_meas,w,c	;volatile
 13593  0011D6  6ED9               	movwf	fsr2l,c
 13594  0011D8  3451               	rlcf	_meas+1,w,c	;volatile
 13595  0011DA  6EDA               	movwf	fsr2h,c
 13596  0011DC  0E68               	movlw	low (_dist_final+24)
 13597  0011DE  26D9               	addwf	fsr2l,f,c
 13598  0011E0  0E02               	movlw	high (_dist_final+24)
 13599  0011E2  22DA               	addwfc	fsr2h,f,c
 13600  0011E4  CFDE F032          	movff	postinc2,??_echo
 13601  0011E8  CFDD F033          	movff	postdec2,??_echo+1
 13602  0011EC  EE20  F03C         	lfsr	2,_sum+4
 13603  0011F0  CFDE F034          	movff	postinc2,??_echo+2
 13604  0011F4  CFDD F035          	movff	postdec2,??_echo+3
 13605  0011F8  5032               	movf	??_echo,w,c
 13606  0011FA  5E34               	subwf	??_echo+2,f,c
 13607  0011FC  5033               	movf	??_echo+1,w,c
 13608  0011FE  5A35               	subwfb	??_echo+3,f,c
 13609  001200  5065               	movf	_a+4,w,c
 13610  001202  2434               	addwf	??_echo+2,w,c
 13611  001204  6E3C               	movwf	_sum+4,c
 13612  001206  5066               	movf	_a+5,w,c
 13613  001208  2035               	addwfc	??_echo+3,w,c
 13614  00120A  6E3D               	movwf	_sum+5,c
 13615                           
 13616                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 13617  00120C  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 13618  001210  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 13619  001214  0E00               	movlw	0
 13620  001216  6E04               	movwf	i2___awdiv@divisor+1,c
 13621  001218  0E05               	movlw	5
 13622  00121A  6E03               	movwf	i2___awdiv@divisor,c
 13623  00121C  EC09  F01C         	call	i2___awdiv	;wreg free
 13624  001220  C001  F272         	movff	?i2___awdiv,_dist_final+34
 13625  001224  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 13626  001228                     i2l5775:
 13627                           
 13628                           ;main.c: 163:         dist_final[2][meas] = a[2];
 13629  001228  90D8               	bcf	status,0,c
 13630  00122A  3450               	rlcf	_meas,w,c	;volatile
 13631  00122C  6ED9               	movwf	fsr2l,c
 13632  00122E  3451               	rlcf	_meas+1,w,c	;volatile
 13633  001230  6EDA               	movwf	fsr2h,c
 13634  001232  0E68               	movlw	low (_dist_final+24)
 13635  001234  26D9               	addwf	fsr2l,f,c
 13636  001236  0E02               	movlw	high (_dist_final+24)
 13637  001238  22DA               	addwfc	fsr2h,f,c
 13638  00123A  C065  FFDE         	movff	_a+4,postinc2
 13639  00123E  C066  FFDD         	movff	_a+5,postdec2
 13640  001242                     i2l5777:
 13641                           
 13642                           ;main.c: 166:     if (b==4){
 13643  001242  0E04               	movlw	4
 13644  001244  185A               	xorwf	_b,w,c
 13645  001246  105B               	iorwf	_b+1,w,c
 13646  001248  A4D8               	btfss	status,2,c
 13647  00124A  0012               	return	
 13648                           
 13649                           ;main.c: 167:         if (RB4 == 1){
 13650  00124C  B881               	btfsc	3969,4,c	;volatile
 13651                           
 13652                           ;main.c: 168:             TMR1ON = 1;
 13653  00124E  80CD               	bsf	4045,0,c	;volatile
 13654                           
 13655                           ;main.c: 170:         if (RB4 == 0){
 13656                           
 13657                           ;main.c: 169:         }
 13658  001250  B881               	btfsc	3969,4,c	;volatile
 13659  001252  D037               	goto	i2l5787
 13660                           
 13661                           ;main.c: 171:             TMR1ON = 0;
 13662  001254  90CD               	bcf	4045,0,c	;volatile
 13663                           
 13664                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 13665  001256  0EAE               	movlw	174
 13666  001258  6E13               	movwf	___fldiv@a,c
 13667  00125A  0E47               	movlw	71
 13668  00125C  6E14               	movwf	___fldiv@a+1,c
 13669  00125E  0E6B               	movlw	107
 13670  001260  6E15               	movwf	___fldiv@a+2,c
 13671  001262  0E42               	movlw	66
 13672  001264  6E16               	movwf	___fldiv@a+3,c
 13673  001266  50CF               	movf	4047,w,c	;volatile
 13674  001268  6E33               	movwf	(??_echo+1)& (0+255),c
 13675  00126A  6A32               	clrf	??_echo& (0+255),c
 13676  00126C  50CE               	movf	4046,w,c	;volatile
 13677  00126E  6E34               	movwf	(??_echo+2)& (0+255),c
 13678  001270  6A35               	clrf	(??_echo+3)& (0+255),c
 13679  001272  5032               	movf	??_echo,w,c
 13680  001274  1234               	iorwf	??_echo+2,f,c
 13681  001276  5033               	movf	??_echo+1,w,c
 13682  001278  1235               	iorwf	??_echo+3,f,c
 13683  00127A  C034  F001         	movff	??_echo+2,___xxtofl@val
 13684  00127E  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13685  001282  0E00               	movlw	0
 13686  001284  BE02               	btfsc	___xxtofl@val+1,7,c
 13687  001286  0EFF               	movlw	-1
 13688  001288  6E03               	movwf	___xxtofl@val+2,c
 13689  00128A  6E04               	movwf	___xxtofl@val+3,c
 13690  00128C  0E01               	movlw	1
 13691  00128E  EC2C  F016         	call	___xxtofl
 13692  001292  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13693  001296  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13694  00129A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13695  00129E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13696  0012A2  EC38  F00D         	call	___fldiv	;wreg free
 13697  0012A6  C00F  F028         	movff	?___fldiv,___fltol@f1
 13698  0012AA  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13699  0012AE  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13700  0012B2  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13701  0012B6  EC31  F01A         	call	___fltol	;wreg free
 13702  0012BA  C028  F067         	movff	?___fltol,_a+6
 13703  0012BE  C029  F068         	movff	?___fltol+1,_a+7
 13704  0012C2                     i2l5787:
 13705                           
 13706                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13707  0012C2  BE68               	btfsc	_a+7,7,c
 13708  0012C4  0012               	return	
 13709  0012C6  5068               	movf	_a+7,w,c
 13710  0012C8  E104               	bnz	i2u593_40
 13711  0012CA  0E02               	movlw	2
 13712  0012CC  5C67               	subwf	_a+6,w,c
 13713  0012CE  A0D8               	btfss	status,0,c
 13714  0012D0  0012               	return	
 13715  0012D2                     i2u593_40:
 13716  0012D2  BE68               	btfsc	_a+7,7,c
 13717  0012D4  D006               	goto	i2u594_40
 13718  0012D6  5068               	movf	_a+7,w,c
 13719  0012D8  E15D               	bnz	i2l423
 13720  0012DA  0EC9               	movlw	201
 13721  0012DC  5C67               	subwf	_a+6,w,c
 13722  0012DE  B0D8               	btfsc	status,0,c
 13723  0012E0  0012               	return	
 13724  0012E2                     i2u594_40:
 13725                           
 13726                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13727  0012E2  0443               	decf	_sumf+3,w,c
 13728  0012E4  B4D8               	btfsc	status,2,c
 13729  0012E6  D01B               	goto	i2l5803
 13730  0012E8  0102               	movlb	2	; () banked
 13731  0012EA  5174               	movf	(_dist_final+36)& (0+255),w,b
 13732  0012EC  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13733  0012EE  B4D8               	btfsc	status,2,c
 13734  0012F0  D016               	goto	i2l5803
 13735                           
 13736                           ; BSR set to: 2
 13737  0012F2  5176               	movf	(_dist_final+38)& (0+255),w,b
 13738  0012F4  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13739  0012F6  B4D8               	btfsc	status,2,c
 13740  0012F8  D012               	goto	i2l5803
 13741                           
 13742                           ; BSR set to: 2
 13743  0012FA  5178               	movf	(_dist_final+40)& (0+255),w,b
 13744  0012FC  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13745  0012FE  B4D8               	btfsc	status,2,c
 13746  001300  D00E               	goto	i2l5803
 13747                           
 13748                           ; BSR set to: 2
 13749                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13750  001302  5176               	movf	(_dist_final+38)& (0+255),w,b
 13751  001304  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13752  001306  6E32               	movwf	??_echo& (0+255),c
 13753  001308  5177               	movf	(_dist_final+39)& (0+255),w,b
 13754  00130A  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13755  00130C  6E33               	movwf	(??_echo+1)& (0+255),c
 13756  00130E  5178               	movf	(_dist_final+40)& (0+255),w,b
 13757  001310  2432               	addwf	??_echo,w,c
 13758  001312  6E3E               	movwf	_sum+6,c
 13759  001314  5179               	movf	(_dist_final+41)& (0+255),w,b
 13760  001316  2033               	addwfc	??_echo+1,w,c
 13761  001318  6E3F               	movwf	_sum+7,c
 13762                           
 13763                           ; BSR set to: 2
 13764                           ;main.c: 179:             sumf[3] = 1;
 13765  00131A  0E01               	movlw	1
 13766  00131C  6E43               	movwf	_sumf+3,c
 13767  00131E                     i2l5803:
 13768                           
 13769                           ;main.c: 181:         if (sumf[3]){
 13770  00131E  5043               	movf	_sumf+3,w,c
 13771  001320  B4D8               	btfsc	status,2,c
 13772  001322  D02B               	goto	i2l5809
 13773                           
 13774                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13775  001324  90D8               	bcf	status,0,c
 13776  001326  3450               	rlcf	_meas,w,c	;volatile
 13777  001328  6ED9               	movwf	fsr2l,c
 13778  00132A  3451               	rlcf	_meas+1,w,c	;volatile
 13779  00132C  6EDA               	movwf	fsr2h,c
 13780  00132E  0E74               	movlw	low (_dist_final+36)
 13781  001330  26D9               	addwf	fsr2l,f,c
 13782  001332  0E02               	movlw	high (_dist_final+36)
 13783  001334  22DA               	addwfc	fsr2h,f,c
 13784  001336  CFDE F032          	movff	postinc2,??_echo
 13785  00133A  CFDD F033          	movff	postdec2,??_echo+1
 13786  00133E  EE20  F03E         	lfsr	2,_sum+6
 13787  001342  CFDE F034          	movff	postinc2,??_echo+2
 13788  001346  CFDD F035          	movff	postdec2,??_echo+3
 13789  00134A  5032               	movf	??_echo,w,c
 13790  00134C  5E34               	subwf	??_echo+2,f,c
 13791  00134E  5033               	movf	??_echo+1,w,c
 13792  001350  5A35               	subwfb	??_echo+3,f,c
 13793  001352  5067               	movf	_a+6,w,c
 13794  001354  2434               	addwf	??_echo+2,w,c
 13795  001356  6E3E               	movwf	_sum+6,c
 13796  001358  5068               	movf	_a+7,w,c
 13797  00135A  2035               	addwfc	??_echo+3,w,c
 13798  00135C  6E3F               	movwf	_sum+7,c
 13799                           
 13800                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13801  00135E  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13802  001362  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13803  001366  0E00               	movlw	0
 13804  001368  6E04               	movwf	i2___awdiv@divisor+1,c
 13805  00136A  0E05               	movlw	5
 13806  00136C  6E03               	movwf	i2___awdiv@divisor,c
 13807  00136E  EC09  F01C         	call	i2___awdiv	;wreg free
 13808  001372  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13809  001376  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13810  00137A                     i2l5809:
 13811                           
 13812                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13813  00137A  90D8               	bcf	status,0,c
 13814  00137C  3450               	rlcf	_meas,w,c	;volatile
 13815  00137E  6ED9               	movwf	fsr2l,c
 13816  001380  3451               	rlcf	_meas+1,w,c	;volatile
 13817  001382  6EDA               	movwf	fsr2h,c
 13818  001384  0E74               	movlw	low (_dist_final+36)
 13819  001386  26D9               	addwf	fsr2l,f,c
 13820  001388  0E02               	movlw	high (_dist_final+36)
 13821  00138A  22DA               	addwfc	fsr2h,f,c
 13822  00138C  C067  FFDE         	movff	_a+6,postinc2
 13823  001390  C068  FFDD         	movff	_a+7,postdec2
 13824  001394                     i2l423:
 13825  001394  0012               	return		;funcret
 13826  001396                     __end_of_echo:
 13827                           	opt callstack 0
 13828                           
 13829 ;; *************** function i2___awdiv *****************
 13830 ;; Defined at:
 13831 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13832 ;; Parameters:    Size  Location     Type
 13833 ;;  dividend        2    0[COMRAM] int 
 13834 ;;  divisor         2    2[COMRAM] int 
 13835 ;; Auto vars:     Size  Location     Type
 13836 ;;  __awdiv         2    6[COMRAM] int 
 13837 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13838 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13839 ;; Return value:  Size  Location     Type
 13840 ;;                  2    0[COMRAM] int 
 13841 ;; Registers used:
 13842 ;;		wreg, status,2, status,0
 13843 ;; Tracked objects:
 13844 ;;		On entry : 0/0
 13845 ;;		On exit  : 0/0
 13846 ;;		Unchanged: 0/0
 13847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13849 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;Total ram usage:        8 bytes
 13853 ;; Hardware stack levels used:    1
 13854 ;; This function calls:
 13855 ;;		Nothing
 13856 ;; This function is called by:
 13857 ;;		_echo
 13858 ;; This function uses a non-reentrant model
 13859 ;;
 13860                           
 13861                           	psect	text56
 13862  003812                     __ptext56:
 13863                           	opt callstack 0
 13864  003812                     i2___awdiv:
 13865                           	opt callstack 14
 13866                           
 13867                           ;incstack = 0
 13868  003812  0E00               	movlw	0
 13869  003814  6E06               	movwf	i2___awdiv@sign,c
 13870  003816  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13871  003818  D006               	goto	i2l5541
 13872  00381A  6C03               	negf	i2___awdiv@divisor,c
 13873  00381C  1E04               	comf	i2___awdiv@divisor+1,f,c
 13874  00381E  B0D8               	btfsc	status,0,c
 13875  003820  2A04               	incf	i2___awdiv@divisor+1,f,c
 13876  003822  0E01               	movlw	1
 13877  003824  6E06               	movwf	i2___awdiv@sign,c
 13878  003826                     i2l5541:
 13879  003826  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13880  003828  D006               	goto	i2l5547
 13881  00382A  6C01               	negf	i2___awdiv@dividend,c
 13882  00382C  1E02               	comf	i2___awdiv@dividend+1,f,c
 13883  00382E  B0D8               	btfsc	status,0,c
 13884  003830  2A02               	incf	i2___awdiv@dividend+1,f,c
 13885  003832  0E01               	movlw	1
 13886  003834  1A06               	xorwf	i2___awdiv@sign,f,c
 13887  003836                     i2l5547:
 13888  003836  0E00               	movlw	0
 13889  003838  6E08               	movwf	i2___awdiv@quotient+1,c
 13890  00383A  0E00               	movlw	0
 13891  00383C  6E07               	movwf	i2___awdiv@quotient,c
 13892  00383E  5003               	movf	i2___awdiv@divisor,w,c
 13893  003840  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13894  003842  B4D8               	btfsc	status,2,c
 13895  003844  D01C               	goto	i2l5569
 13896  003846  0E01               	movlw	1
 13897  003848  6E05               	movwf	i2___awdiv@counter,c
 13898  00384A  D004               	goto	i2l5555
 13899  00384C                     i2l5553:
 13900  00384C  90D8               	bcf	status,0,c
 13901  00384E  3603               	rlcf	i2___awdiv@divisor,f,c
 13902  003850  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13903  003852  2A05               	incf	i2___awdiv@counter,f,c
 13904  003854                     i2l5555:
 13905  003854  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13906  003856  D7FA               	goto	i2l5553
 13907  003858                     i2u554_40:
 13908  003858  90D8               	bcf	status,0,c
 13909  00385A  3607               	rlcf	i2___awdiv@quotient,f,c
 13910  00385C  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13911  00385E  5003               	movf	i2___awdiv@divisor,w,c
 13912  003860  5C01               	subwf	i2___awdiv@dividend,w,c
 13913  003862  5004               	movf	i2___awdiv@divisor+1,w,c
 13914  003864  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13915  003866  A0D8               	btfss	status,0,c
 13916  003868  D005               	goto	i2l5565
 13917  00386A  5003               	movf	i2___awdiv@divisor,w,c
 13918  00386C  5E01               	subwf	i2___awdiv@dividend,f,c
 13919  00386E  5004               	movf	i2___awdiv@divisor+1,w,c
 13920  003870  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13921  003872  8007               	bsf	i2___awdiv@quotient,0,c
 13922  003874                     i2l5565:
 13923  003874  90D8               	bcf	status,0,c
 13924  003876  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13925  003878  3203               	rrcf	i2___awdiv@divisor,f,c
 13926  00387A  2E05               	decfsz	i2___awdiv@counter,f,c
 13927  00387C  D7ED               	goto	i2u554_40
 13928  00387E                     i2l5569:
 13929  00387E  5006               	movf	i2___awdiv@sign,w,c
 13930  003880  B4D8               	btfsc	status,2,c
 13931  003882  D004               	goto	i2l5573
 13932  003884  6C07               	negf	i2___awdiv@quotient,c
 13933  003886  1E08               	comf	i2___awdiv@quotient+1,f,c
 13934  003888  B0D8               	btfsc	status,0,c
 13935  00388A  2A08               	incf	i2___awdiv@quotient+1,f,c
 13936  00388C                     i2l5573:
 13937  00388C  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13938  003890  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13939  003894  0012               	return		;funcret
 13940  003896                     __end_ofi2___awdiv:
 13941                           	opt callstack 0
 13942                           
 13943 ;; *************** function ___xxtofl *****************
 13944 ;; Defined at:
 13945 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13946 ;; Parameters:    Size  Location     Type
 13947 ;;  sign            1    wreg     unsigned char 
 13948 ;;  val             4    0[COMRAM] long 
 13949 ;; Auto vars:     Size  Location     Type
 13950 ;;  sign            1    8[COMRAM] unsigned char 
 13951 ;;  arg             4   10[COMRAM] unsigned long 
 13952 ;;  exp             1    9[COMRAM] unsigned char 
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  4    0[COMRAM] unsigned char 
 13955 ;; Registers used:
 13956 ;;		wreg, status,2, status,0
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13963 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13964 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13965 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13966 ;;Total ram usage:       14 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; This function calls:
 13969 ;;		Nothing
 13970 ;; This function is called by:
 13971 ;;		_echo
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text57
 13976  002C58                     __ptext57:
 13977                           	opt callstack 0
 13978  002C58                     ___xxtofl:
 13979                           	opt callstack 14
 13980                           
 13981                           ;incstack = 0
 13982                           ;___xxtofl@sign stored from wreg
 13983  002C58  6E09               	movwf	___xxtofl@sign,c
 13984  002C5A  5009               	movf	___xxtofl@sign,w,c
 13985  002C5C  A4D8               	btfss	status,2,c
 13986  002C5E  AE04               	btfss	___xxtofl@val+3,7,c
 13987  002C60  D01A               	goto	i2l1387
 13988  002C62  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13989  002C66  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13990  002C6A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13991  002C6E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13992  002C72  1E05               	comf	??___xxtofl,f,c
 13993  002C74  1E06               	comf	??___xxtofl+1,f,c
 13994  002C76  1E07               	comf	??___xxtofl+2,f,c
 13995  002C78  1E08               	comf	??___xxtofl+3,f,c
 13996  002C7A  2A05               	incf	??___xxtofl,f,c
 13997  002C7C  0E00               	movlw	0
 13998  002C7E  2206               	addwfc	??___xxtofl+1,f,c
 13999  002C80  2207               	addwfc	??___xxtofl+2,f,c
 14000  002C82  2208               	addwfc	??___xxtofl+3,f,c
 14001  002C84  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14002  002C88  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14003  002C8C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14004  002C90  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14005  002C94  D008               	goto	i2l5493
 14006  002C96                     i2l1387:
 14007  002C96  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14008  002C9A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14009  002C9E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14010  002CA2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14011  002CA6                     i2l5493:
 14012  002CA6  5001               	movf	___xxtofl@val,w,c
 14013  002CA8  1002               	iorwf	___xxtofl@val+1,w,c
 14014  002CAA  1003               	iorwf	___xxtofl@val+2,w,c
 14015  002CAC  1004               	iorwf	___xxtofl@val+3,w,c
 14016  002CAE  A4D8               	btfss	status,2,c
 14017  002CB0  D009               	goto	i2l5499
 14018  002CB2  0E00               	movlw	0
 14019  002CB4  6E01               	movwf	?___xxtofl,c
 14020  002CB6  0E00               	movlw	0
 14021  002CB8  6E02               	movwf	?___xxtofl+1,c
 14022  002CBA  0E00               	movlw	0
 14023  002CBC  6E03               	movwf	?___xxtofl+2,c
 14024  002CBE  0E00               	movlw	0
 14025  002CC0  6E04               	movwf	?___xxtofl+3,c
 14026  002CC2  0012               	return	
 14027  002CC4                     i2l5499:
 14028  002CC4  0E96               	movlw	150
 14029  002CC6  6E0A               	movwf	___xxtofl@exp,c
 14030  002CC8  D006               	goto	i2l5503
 14031  002CCA                     i2l5501:
 14032  002CCA  2A0A               	incf	___xxtofl@exp,f,c
 14033  002CCC  90D8               	bcf	status,0,c
 14034  002CCE  320E               	rrcf	___xxtofl@arg+3,f,c
 14035  002CD0  320D               	rrcf	___xxtofl@arg+2,f,c
 14036  002CD2  320C               	rrcf	___xxtofl@arg+1,f,c
 14037  002CD4  320B               	rrcf	___xxtofl@arg,f,c
 14038  002CD6                     i2l5503:
 14039  002CD6  0E00               	movlw	0
 14040  002CD8  140B               	andwf	___xxtofl@arg,w,c
 14041  002CDA  6E05               	movwf	??___xxtofl& (0+255),c
 14042  002CDC  0E00               	movlw	0
 14043  002CDE  140C               	andwf	___xxtofl@arg+1,w,c
 14044  002CE0  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14045  002CE2  0E00               	movlw	0
 14046  002CE4  140D               	andwf	___xxtofl@arg+2,w,c
 14047  002CE6  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14048  002CE8  0EFE               	movlw	254
 14049  002CEA  140E               	andwf	___xxtofl@arg+3,w,c
 14050  002CEC  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14051  002CEE  5005               	movf	??___xxtofl,w,c
 14052  002CF0  1006               	iorwf	??___xxtofl+1,w,c
 14053  002CF2  1007               	iorwf	??___xxtofl+2,w,c
 14054  002CF4  1008               	iorwf	??___xxtofl+3,w,c
 14055  002CF6  B4D8               	btfsc	status,2,c
 14056  002CF8  D00D               	goto	i2l1394
 14057  002CFA  D7E7               	goto	i2l5501
 14058  002CFC                     i2l5505:
 14059  002CFC  2A0A               	incf	___xxtofl@exp,f,c
 14060  002CFE  0E01               	movlw	1
 14061  002D00  260B               	addwf	___xxtofl@arg,f,c
 14062  002D02  0E00               	movlw	0
 14063  002D04  220C               	addwfc	___xxtofl@arg+1,f,c
 14064  002D06  220D               	addwfc	___xxtofl@arg+2,f,c
 14065  002D08  220E               	addwfc	___xxtofl@arg+3,f,c
 14066  002D0A  90D8               	bcf	status,0,c
 14067  002D0C  320E               	rrcf	___xxtofl@arg+3,f,c
 14068  002D0E  320D               	rrcf	___xxtofl@arg+2,f,c
 14069  002D10  320C               	rrcf	___xxtofl@arg+1,f,c
 14070  002D12  320B               	rrcf	___xxtofl@arg,f,c
 14071  002D14                     i2l1394:
 14072  002D14  0E00               	movlw	0
 14073  002D16  140B               	andwf	___xxtofl@arg,w,c
 14074  002D18  6E05               	movwf	??___xxtofl& (0+255),c
 14075  002D1A  0E00               	movlw	0
 14076  002D1C  140C               	andwf	___xxtofl@arg+1,w,c
 14077  002D1E  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14078  002D20  0E00               	movlw	0
 14079  002D22  140D               	andwf	___xxtofl@arg+2,w,c
 14080  002D24  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14081  002D26  0EFF               	movlw	255
 14082  002D28  140E               	andwf	___xxtofl@arg+3,w,c
 14083  002D2A  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14084  002D2C  5005               	movf	??___xxtofl,w,c
 14085  002D2E  1006               	iorwf	??___xxtofl+1,w,c
 14086  002D30  1007               	iorwf	??___xxtofl+2,w,c
 14087  002D32  1008               	iorwf	??___xxtofl+3,w,c
 14088  002D34  B4D8               	btfsc	status,2,c
 14089  002D36  D007               	goto	i2l5513
 14090  002D38  D7E1               	goto	i2l5505
 14091  002D3A                     i2l5511:
 14092  002D3A  060A               	decf	___xxtofl@exp,f,c
 14093  002D3C  90D8               	bcf	status,0,c
 14094  002D3E  360B               	rlcf	___xxtofl@arg,f,c
 14095  002D40  360C               	rlcf	___xxtofl@arg+1,f,c
 14096  002D42  360D               	rlcf	___xxtofl@arg+2,f,c
 14097  002D44  360E               	rlcf	___xxtofl@arg+3,f,c
 14098  002D46                     i2l5513:
 14099  002D46  BE0D               	btfsc	___xxtofl@arg+2,7,c
 14100  002D48  D003               	goto	i2u547_40
 14101  002D4A  0E02               	movlw	2
 14102  002D4C  600A               	cpfslt	___xxtofl@exp,c
 14103  002D4E  D7F5               	goto	i2l5511
 14104  002D50                     i2u547_40:
 14105  002D50  A00A               	btfss	___xxtofl@exp,0,c
 14106  002D52  9E0D               	bcf	___xxtofl@arg+2,7,c
 14107  002D54  90D8               	bcf	status,0,c
 14108  002D56  320A               	rrcf	___xxtofl@exp,f,c
 14109  002D58  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14110  002D5C  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 14111  002D5E  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 14112  002D60  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 14113  002D62  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14114  002D66  6A07               	clrf	??___xxtofl+2,c
 14115  002D68  6A06               	clrf	??___xxtofl+1,c
 14116  002D6A  6A05               	clrf	??___xxtofl,c
 14117  002D6C  5005               	movf	??___xxtofl,w,c
 14118  002D6E  120B               	iorwf	___xxtofl@arg,f,c
 14119  002D70  5006               	movf	??___xxtofl+1,w,c
 14120  002D72  120C               	iorwf	___xxtofl@arg+1,f,c
 14121  002D74  5007               	movf	??___xxtofl+2,w,c
 14122  002D76  120D               	iorwf	___xxtofl@arg+2,f,c
 14123  002D78  5008               	movf	??___xxtofl+3,w,c
 14124  002D7A  120E               	iorwf	___xxtofl@arg+3,f,c
 14125  002D7C  5009               	movf	___xxtofl@sign,w,c
 14126  002D7E  A4D8               	btfss	status,2,c
 14127  002D80  AE04               	btfss	___xxtofl@val+3,7,c
 14128  002D82  D001               	goto	i2l5529
 14129  002D84  8E0E               	bsf	___xxtofl@arg+3,7,c
 14130  002D86                     i2l5529:
 14131  002D86  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14132  002D8A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14133  002D8E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14134  002D92  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14135  002D96  0012               	return		;funcret
 14136  002D98                     __end_of___xxtofl:
 14137                           	opt callstack 0
 14138                           
 14139 ;; *************** function ___fltol *****************
 14140 ;; Defined at:
 14141 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14142 ;; Parameters:    Size  Location     Type
 14143 ;;  f1              4   39[COMRAM] unsigned char 
 14144 ;; Auto vars:     Size  Location     Type
 14145 ;;  exp1            1   48[COMRAM] unsigned char 
 14146 ;;  sign1           1   47[COMRAM] unsigned char 
 14147 ;; Return value:  Size  Location     Type
 14148 ;;                  4   39[COMRAM] long 
 14149 ;; Registers used:
 14150 ;;		wreg, status,2, status,0
 14151 ;; Tracked objects:
 14152 ;;		On entry : 0/0
 14153 ;;		On exit  : 0/0
 14154 ;;		Unchanged: 0/0
 14155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14158 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14159 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14160 ;;Total ram usage:       10 bytes
 14161 ;; Hardware stack levels used:    1
 14162 ;; This function calls:
 14163 ;;		Nothing
 14164 ;; This function is called by:
 14165 ;;		_echo
 14166 ;; This function uses a non-reentrant model
 14167 ;;
 14168                           
 14169                           	psect	text58
 14170  003462                     __ptext58:
 14171                           	opt callstack 0
 14172  003462                     ___fltol:
 14173                           	opt callstack 14
 14174                           
 14175                           ;incstack = 0
 14176  003462  342A               	rlcf	___fltol@f1+2,w,c
 14177  003464  342B               	rlcf	___fltol@f1+3,w,c
 14178  003466  6E31               	movwf	___fltol@exp1,c
 14179  003468  5031               	movf	___fltol@exp1,w,c
 14180  00346A  A4D8               	btfss	status,2,c
 14181  00346C  D009               	goto	i2l5433
 14182  00346E                     i2u531_40:
 14183  00346E  0E00               	movlw	0
 14184  003470  6E28               	movwf	?___fltol,c
 14185  003472  0E00               	movlw	0
 14186  003474  6E29               	movwf	?___fltol+1,c
 14187  003476  0E00               	movlw	0
 14188  003478  6E2A               	movwf	?___fltol+2,c
 14189  00347A  0E00               	movlw	0
 14190  00347C  6E2B               	movwf	?___fltol+3,c
 14191  00347E  0012               	return	
 14192  003480                     i2l5433:
 14193  003480  C028  F02C         	movff	___fltol@f1,??___fltol
 14194  003484  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 14195  003488  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 14196  00348C  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 14197  003490  0E20               	movlw	32
 14198  003492  D005               	goto	i2u532_40
 14199  003494                     i2u532_45:
 14200  003494  90D8               	bcf	status,0,c
 14201  003496  322F               	rrcf	??___fltol+3,f,c
 14202  003498  322E               	rrcf	??___fltol+2,f,c
 14203  00349A  322D               	rrcf	??___fltol+1,f,c
 14204  00349C  322C               	rrcf	??___fltol,f,c
 14205  00349E                     i2u532_40:
 14206  00349E  2EE8               	decfsz	wreg,f,c
 14207  0034A0  D7F9               	goto	i2u532_45
 14208  0034A2  502C               	movf	??___fltol,w,c
 14209  0034A4  6E30               	movwf	___fltol@sign1,c
 14210  0034A6  8E2A               	bsf	___fltol@f1+2,7,c
 14211  0034A8  0EFF               	movlw	255
 14212  0034AA  1628               	andwf	___fltol@f1,f,c
 14213  0034AC  0EFF               	movlw	255
 14214  0034AE  1629               	andwf	___fltol@f1+1,f,c
 14215  0034B0  0EFF               	movlw	255
 14216  0034B2  162A               	andwf	___fltol@f1+2,f,c
 14217  0034B4  0E00               	movlw	0
 14218  0034B6  162B               	andwf	___fltol@f1+3,f,c
 14219  0034B8  0E96               	movlw	150
 14220  0034BA  5E31               	subwf	___fltol@exp1,f,c
 14221  0034BC  AE31               	btfss	___fltol@exp1,7,c
 14222  0034BE  D00D               	goto	i2l5453
 14223  0034C0  5031               	movf	___fltol@exp1,w,c
 14224  0034C2  0A80               	xorlw	128
 14225  0034C4  0F97               	addlw	151
 14226  0034C6  A0D8               	btfss	status,0,c
 14227  0034C8  D7D2               	goto	i2u531_40
 14228  0034CA                     i2l5449:
 14229  0034CA  90D8               	bcf	status,0,c
 14230  0034CC  322B               	rrcf	___fltol@f1+3,f,c
 14231  0034CE  322A               	rrcf	___fltol@f1+2,f,c
 14232  0034D0  3229               	rrcf	___fltol@f1+1,f,c
 14233  0034D2  3228               	rrcf	___fltol@f1,f,c
 14234  0034D4  3E31               	incfsz	___fltol@exp1,f,c
 14235  0034D6  D7F9               	goto	i2l5449
 14236  0034D8  D00D               	goto	i2u536_40
 14237  0034DA                     i2l5453:
 14238  0034DA  0E1F               	movlw	31
 14239  0034DC  6431               	cpfsgt	___fltol@exp1,c
 14240  0034DE  D007               	goto	i2l5461
 14241  0034E0  D7C6               	goto	i2u531_40
 14242  0034E2                     i2l5459:
 14243  0034E2  90D8               	bcf	status,0,c
 14244  0034E4  3628               	rlcf	___fltol@f1,f,c
 14245  0034E6  3629               	rlcf	___fltol@f1+1,f,c
 14246  0034E8  362A               	rlcf	___fltol@f1+2,f,c
 14247  0034EA  362B               	rlcf	___fltol@f1+3,f,c
 14248  0034EC  0631               	decf	___fltol@exp1,f,c
 14249  0034EE                     i2l5461:
 14250  0034EE  5031               	movf	___fltol@exp1,w,c
 14251  0034F0  A4D8               	btfss	status,2,c
 14252  0034F2  D7F7               	goto	i2l5459
 14253  0034F4                     i2u536_40:
 14254  0034F4  5030               	movf	___fltol@sign1,w,c
 14255  0034F6  B4D8               	btfsc	status,2,c
 14256  0034F8  D008               	goto	i2l5467
 14257  0034FA  1E2B               	comf	___fltol@f1+3,f,c
 14258  0034FC  1E2A               	comf	___fltol@f1+2,f,c
 14259  0034FE  1E29               	comf	___fltol@f1+1,f,c
 14260  003500  6C28               	negf	___fltol@f1,c
 14261  003502  0E00               	movlw	0
 14262  003504  2229               	addwfc	___fltol@f1+1,f,c
 14263  003506  222A               	addwfc	___fltol@f1+2,f,c
 14264  003508  222B               	addwfc	___fltol@f1+3,f,c
 14265  00350A                     i2l5467:
 14266  00350A  C028  F028         	movff	___fltol@f1,?___fltol
 14267  00350E  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 14268  003512  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 14269  003516  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 14270  00351A  0012               	return		;funcret
 14271  00351C                     __end_of___fltol:
 14272                           	opt callstack 0
 14273                           
 14274 ;; *************** function ___fldiv *****************
 14275 ;; Defined at:
 14276 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14277 ;; Parameters:    Size  Location     Type
 14278 ;;  b               4   14[COMRAM] long 
 14279 ;;  a               4   18[COMRAM] long 
 14280 ;; Auto vars:     Size  Location     Type
 14281 ;;  grs             4   33[COMRAM] unsigned long 
 14282 ;;  rem             4   26[COMRAM] unsigned long 
 14283 ;;  new_exp         2   31[COMRAM] short 
 14284 ;;  aexp            1   38[COMRAM] unsigned char 
 14285 ;;  bexp            1   37[COMRAM] unsigned char 
 14286 ;;  sign            1   30[COMRAM] unsigned char 
 14287 ;; Return value:  Size  Location     Type
 14288 ;;                  4   14[COMRAM] unsigned char 
 14289 ;; Registers used:
 14290 ;;		wreg, status,2, status,0
 14291 ;; Tracked objects:
 14292 ;;		On entry : 0/0
 14293 ;;		On exit  : 0/0
 14294 ;;		Unchanged: 0/0
 14295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14296 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14297 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14299 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14300 ;;Total ram usage:       25 bytes
 14301 ;; Hardware stack levels used:    1
 14302 ;; This function calls:
 14303 ;;		Nothing
 14304 ;; This function is called by:
 14305 ;;		_echo
 14306 ;; This function uses a non-reentrant model
 14307 ;;
 14308                           
 14309                           	psect	text59
 14310  001A70                     __ptext59:
 14311                           	opt callstack 0
 14312  001A70                     ___fldiv:
 14313                           	opt callstack 14
 14314                           
 14315                           ;incstack = 0
 14316  001A70  5012               	movf	___fldiv@b+3,w,c
 14317  001A72  0B80               	andlw	128
 14318  001A74  6E1F               	movwf	___fldiv@sign,c
 14319  001A76  5012               	movf	___fldiv@b+3,w,c
 14320  001A78  2412               	addwf	___fldiv@b+3,w,c
 14321  001A7A  6E26               	movwf	___fldiv@bexp,c
 14322  001A7C  BE11               	btfsc	___fldiv@b+2,7,c
 14323  001A7E  8026               	bsf	___fldiv@bexp,0,c
 14324  001A80  5026               	movf	___fldiv@bexp,w,c
 14325  001A82  B4D8               	btfsc	status,2,c
 14326  001A84  D00D               	goto	i2l5261
 14327  001A86  2826               	incf	___fldiv@bexp,w,c
 14328  001A88  A4D8               	btfss	status,2,c
 14329  001A8A  D008               	goto	i2l5257
 14330  001A8C  0E00               	movlw	0
 14331  001A8E  6E0F               	movwf	___fldiv@b,c
 14332  001A90  0E00               	movlw	0
 14333  001A92  6E10               	movwf	___fldiv@b+1,c
 14334  001A94  0E00               	movlw	0
 14335  001A96  6E11               	movwf	___fldiv@b+2,c
 14336  001A98  0E00               	movlw	0
 14337  001A9A  6E12               	movwf	___fldiv@b+3,c
 14338  001A9C                     i2l5257:
 14339  001A9C  8E11               	bsf	___fldiv@b+2,7,c
 14340  001A9E  D006               	goto	L6
 14341  001AA0                     i2l5261:
 14342  001AA0  0E00               	movlw	0
 14343  001AA2  6E0F               	movwf	___fldiv@b,c
 14344  001AA4  0E00               	movlw	0
 14345  001AA6  6E10               	movwf	___fldiv@b+1,c
 14346  001AA8  0E00               	movlw	0
 14347  001AAA  6E11               	movwf	___fldiv@b+2,c
 14348  001AAC                     L6:
 14349  001AAC  0E00               	movlw	0
 14350  001AAE  6E12               	movwf	___fldiv@b+3,c
 14351  001AB0  5016               	movf	___fldiv@a+3,w,c
 14352  001AB2  0B80               	andlw	128
 14353  001AB4  1A1F               	xorwf	___fldiv@sign,f,c
 14354  001AB6  5016               	movf	___fldiv@a+3,w,c
 14355  001AB8  2416               	addwf	___fldiv@a+3,w,c
 14356  001ABA  6E27               	movwf	___fldiv@aexp,c
 14357  001ABC  BE15               	btfsc	___fldiv@a+2,7,c
 14358  001ABE  8027               	bsf	___fldiv@aexp,0,c
 14359  001AC0  5027               	movf	___fldiv@aexp,w,c
 14360  001AC2  B4D8               	btfsc	status,2,c
 14361  001AC4  D00D               	goto	i2l5281
 14362  001AC6  2827               	incf	___fldiv@aexp,w,c
 14363  001AC8  A4D8               	btfss	status,2,c
 14364  001ACA  D008               	goto	i2l5277
 14365  001ACC  0E00               	movlw	0
 14366  001ACE  6E13               	movwf	___fldiv@a,c
 14367  001AD0  0E00               	movlw	0
 14368  001AD2  6E14               	movwf	___fldiv@a+1,c
 14369  001AD4  0E00               	movlw	0
 14370  001AD6  6E15               	movwf	___fldiv@a+2,c
 14371  001AD8  0E00               	movlw	0
 14372  001ADA  6E16               	movwf	___fldiv@a+3,c
 14373  001ADC                     i2l5277:
 14374  001ADC  8E15               	bsf	___fldiv@a+2,7,c
 14375  001ADE  D006               	goto	L7
 14376  001AE0                     i2l5281:
 14377  001AE0  0E00               	movlw	0
 14378  001AE2  6E13               	movwf	___fldiv@a,c
 14379  001AE4  0E00               	movlw	0
 14380  001AE6  6E14               	movwf	___fldiv@a+1,c
 14381  001AE8  0E00               	movlw	0
 14382  001AEA  6E15               	movwf	___fldiv@a+2,c
 14383  001AEC                     L7:
 14384  001AEC  0E00               	movlw	0
 14385  001AEE  6E16               	movwf	___fldiv@a+3,c
 14386  001AF0  5013               	movf	___fldiv@a,w,c
 14387  001AF2  1014               	iorwf	___fldiv@a+1,w,c
 14388  001AF4  1015               	iorwf	___fldiv@a+2,w,c
 14389  001AF6  1016               	iorwf	___fldiv@a+3,w,c
 14390  001AF8  A4D8               	btfss	status,2,c
 14391  001AFA  D017               	goto	i2l5295
 14392  001AFC  0E00               	movlw	0
 14393  001AFE  6E0F               	movwf	___fldiv@b,c
 14394  001B00  0E00               	movlw	0
 14395  001B02  6E10               	movwf	___fldiv@b+1,c
 14396  001B04  0E00               	movlw	0
 14397  001B06  6E11               	movwf	___fldiv@b+2,c
 14398  001B08  0E00               	movlw	0
 14399  001B0A  6E12               	movwf	___fldiv@b+3,c
 14400  001B0C  0E80               	movlw	128
 14401  001B0E  1211               	iorwf	___fldiv@b+2,f,c
 14402  001B10  0E7F               	movlw	127
 14403  001B12  1212               	iorwf	___fldiv@b+3,f,c
 14404  001B14                     i2l5289:
 14405  001B14  501F               	movf	___fldiv@sign,w,c
 14406  001B16  1212               	iorwf	___fldiv@b+3,f,c
 14407  001B18  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14408  001B1C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14409  001B20  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14410  001B24  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14411  001B28  0012               	return	
 14412  001B2A                     i2l5295:
 14413  001B2A  5026               	movf	___fldiv@bexp,w,c
 14414  001B2C  A4D8               	btfss	status,2,c
 14415  001B2E  D009               	goto	i2l5303
 14416  001B30  0E00               	movlw	0
 14417  001B32  6E0F               	movwf	?___fldiv,c
 14418  001B34  0E00               	movlw	0
 14419  001B36  6E10               	movwf	?___fldiv+1,c
 14420  001B38  0E00               	movlw	0
 14421  001B3A  6E11               	movwf	?___fldiv+2,c
 14422  001B3C  0E00               	movlw	0
 14423  001B3E  6E12               	movwf	?___fldiv+3,c
 14424  001B40  0012               	return	
 14425  001B42                     i2l5303:
 14426  001B42  5027               	movf	___fldiv@aexp,w,c
 14427  001B44  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14428  001B48  6A18               	clrf	(??___fldiv+1)& (0+255),c
 14429  001B4A  5E17               	subwf	??___fldiv,f,c
 14430  001B4C  0E00               	movlw	0
 14431  001B4E  5A18               	subwfb	??___fldiv+1,f,c
 14432  001B50  0E7F               	movlw	127
 14433  001B52  2417               	addwf	??___fldiv,w,c
 14434  001B54  6E20               	movwf	___fldiv@new_exp,c
 14435  001B56  0E00               	movlw	0
 14436  001B58  2018               	addwfc	??___fldiv+1,w,c
 14437  001B5A  6E21               	movwf	___fldiv@new_exp+1,c
 14438  001B5C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14439  001B60  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14440  001B64  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14441  001B68  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14442  001B6C  0E00               	movlw	0
 14443  001B6E  6E0F               	movwf	___fldiv@b,c
 14444  001B70  0E00               	movlw	0
 14445  001B72  6E10               	movwf	___fldiv@b+1,c
 14446  001B74  0E00               	movlw	0
 14447  001B76  6E11               	movwf	___fldiv@b+2,c
 14448  001B78  0E00               	movlw	0
 14449  001B7A  6E12               	movwf	___fldiv@b+3,c
 14450  001B7C  0E00               	movlw	0
 14451  001B7E  6E22               	movwf	___fldiv@grs,c
 14452  001B80  0E00               	movlw	0
 14453  001B82  6E23               	movwf	___fldiv@grs+1,c
 14454  001B84  0E00               	movlw	0
 14455  001B86  6E24               	movwf	___fldiv@grs+2,c
 14456  001B88  0E00               	movlw	0
 14457  001B8A  6E25               	movwf	___fldiv@grs+3,c
 14458  001B8C  0E00               	movlw	0
 14459  001B8E  6E27               	movwf	___fldiv@aexp,c
 14460  001B90  D028               	goto	i2l1316
 14461  001B92                     i2l5313:
 14462  001B92  5027               	movf	___fldiv@aexp,w,c
 14463  001B94  B4D8               	btfsc	status,2,c
 14464  001B96  D011               	goto	i2l5321
 14465  001B98  90D8               	bcf	status,0,c
 14466  001B9A  361B               	rlcf	___fldiv@rem,f,c
 14467  001B9C  361C               	rlcf	___fldiv@rem+1,f,c
 14468  001B9E  361D               	rlcf	___fldiv@rem+2,f,c
 14469  001BA0  361E               	rlcf	___fldiv@rem+3,f,c
 14470  001BA2  90D8               	bcf	status,0,c
 14471  001BA4  360F               	rlcf	___fldiv@b,f,c
 14472  001BA6  3610               	rlcf	___fldiv@b+1,f,c
 14473  001BA8  3611               	rlcf	___fldiv@b+2,f,c
 14474  001BAA  3612               	rlcf	___fldiv@b+3,f,c
 14475  001BAC  BE25               	btfsc	___fldiv@grs+3,7,c
 14476  001BAE  800F               	bsf	___fldiv@b,0,c
 14477  001BB0  90D8               	bcf	status,0,c
 14478  001BB2  3622               	rlcf	___fldiv@grs,f,c
 14479  001BB4  3623               	rlcf	___fldiv@grs+1,f,c
 14480  001BB6  3624               	rlcf	___fldiv@grs+2,f,c
 14481  001BB8  3625               	rlcf	___fldiv@grs+3,f,c
 14482  001BBA                     i2l5321:
 14483  001BBA  5013               	movf	___fldiv@a,w,c
 14484  001BBC  5C1B               	subwf	___fldiv@rem,w,c
 14485  001BBE  5014               	movf	___fldiv@a+1,w,c
 14486  001BC0  581C               	subwfb	___fldiv@rem+1,w,c
 14487  001BC2  5015               	movf	___fldiv@a+2,w,c
 14488  001BC4  581D               	subwfb	___fldiv@rem+2,w,c
 14489  001BC6  5016               	movf	___fldiv@a+3,w,c
 14490  001BC8  581E               	subwfb	___fldiv@rem+3,w,c
 14491  001BCA  A0D8               	btfss	status,0,c
 14492  001BCC  D009               	goto	i2l5327
 14493  001BCE  8C25               	bsf	___fldiv@grs+3,6,c
 14494  001BD0  5013               	movf	___fldiv@a,w,c
 14495  001BD2  5E1B               	subwf	___fldiv@rem,f,c
 14496  001BD4  5014               	movf	___fldiv@a+1,w,c
 14497  001BD6  5A1C               	subwfb	___fldiv@rem+1,f,c
 14498  001BD8  5015               	movf	___fldiv@a+2,w,c
 14499  001BDA  5A1D               	subwfb	___fldiv@rem+2,f,c
 14500  001BDC  5016               	movf	___fldiv@a+3,w,c
 14501  001BDE  5A1E               	subwfb	___fldiv@rem+3,f,c
 14502  001BE0                     i2l5327:
 14503  001BE0  2A27               	incf	___fldiv@aexp,f,c
 14504  001BE2                     i2l1316:
 14505  001BE2  0E19               	movlw	25
 14506  001BE4  6427               	cpfsgt	___fldiv@aexp,c
 14507  001BE6  D7D5               	goto	i2l5313
 14508  001BE8  501B               	movf	___fldiv@rem,w,c
 14509  001BEA  101C               	iorwf	___fldiv@rem+1,w,c
 14510  001BEC  101D               	iorwf	___fldiv@rem+2,w,c
 14511  001BEE  101E               	iorwf	___fldiv@rem+3,w,c
 14512  001BF0  B4D8               	btfsc	status,2,c
 14513  001BF2  D011               	goto	i2l5339
 14514  001BF4  8022               	bsf	___fldiv@grs,0,c
 14515  001BF6  D00F               	goto	i2l5339
 14516  001BF8                     i2l5333:
 14517  001BF8  90D8               	bcf	status,0,c
 14518  001BFA  360F               	rlcf	___fldiv@b,f,c
 14519  001BFC  3610               	rlcf	___fldiv@b+1,f,c
 14520  001BFE  3611               	rlcf	___fldiv@b+2,f,c
 14521  001C00  3612               	rlcf	___fldiv@b+3,f,c
 14522  001C02  BE25               	btfsc	___fldiv@grs+3,7,c
 14523  001C04  800F               	bsf	___fldiv@b,0,c
 14524  001C06  90D8               	bcf	status,0,c
 14525  001C08  3622               	rlcf	___fldiv@grs,f,c
 14526  001C0A  3623               	rlcf	___fldiv@grs+1,f,c
 14527  001C0C  3624               	rlcf	___fldiv@grs+2,f,c
 14528  001C0E  3625               	rlcf	___fldiv@grs+3,f,c
 14529  001C10  0620               	decf	___fldiv@new_exp,f,c
 14530  001C12  A0D8               	btfss	status,0,c
 14531  001C14  0621               	decf	___fldiv@new_exp+1,f,c
 14532  001C16                     i2l5339:
 14533  001C16  AE11               	btfss	___fldiv@b+2,7,c
 14534  001C18  D7EF               	goto	i2l5333
 14535  001C1A  0E00               	movlw	0
 14536  001C1C  6E27               	movwf	___fldiv@aexp,c
 14537  001C1E  AE25               	btfss	___fldiv@grs+3,7,c
 14538  001C20  D017               	goto	i2l1327
 14539  001C22  0EFF               	movlw	255
 14540  001C24  1422               	andwf	___fldiv@grs,w,c
 14541  001C26  6E17               	movwf	??___fldiv& (0+255),c
 14542  001C28  0EFF               	movlw	255
 14543  001C2A  1423               	andwf	___fldiv@grs+1,w,c
 14544  001C2C  6E18               	movwf	(??___fldiv+1)& (0+255),c
 14545  001C2E  0EFF               	movlw	255
 14546  001C30  1424               	andwf	___fldiv@grs+2,w,c
 14547  001C32  6E19               	movwf	(??___fldiv+2)& (0+255),c
 14548  001C34  0E7F               	movlw	127
 14549  001C36  1425               	andwf	___fldiv@grs+3,w,c
 14550  001C38  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 14551  001C3A  5017               	movf	??___fldiv,w,c
 14552  001C3C  1018               	iorwf	??___fldiv+1,w,c
 14553  001C3E  1019               	iorwf	??___fldiv+2,w,c
 14554  001C40  101A               	iorwf	??___fldiv+3,w,c
 14555  001C42  B4D8               	btfsc	status,2,c
 14556  001C44  D003               	goto	i2l1328
 14557  001C46                     i2u518_40:
 14558  001C46  0E01               	movlw	1
 14559  001C48  6E27               	movwf	___fldiv@aexp,c
 14560  001C4A  D002               	goto	i2l1327
 14561  001C4C                     i2l1328:
 14562  001C4C  B00F               	btfsc	___fldiv@b,0,c
 14563  001C4E  D7FB               	goto	i2u518_40
 14564  001C50                     i2l1327:
 14565  001C50  5027               	movf	___fldiv@aexp,w,c
 14566  001C52  B4D8               	btfsc	status,2,c
 14567  001C54  D01F               	goto	i2l5359
 14568  001C56  0E01               	movlw	1
 14569  001C58  260F               	addwf	___fldiv@b,f,c
 14570  001C5A  0E00               	movlw	0
 14571  001C5C  2210               	addwfc	___fldiv@b+1,f,c
 14572  001C5E  2211               	addwfc	___fldiv@b+2,f,c
 14573  001C60  2212               	addwfc	___fldiv@b+3,f,c
 14574  001C62  A012               	btfss	___fldiv@b+3,0,c
 14575  001C64  D017               	goto	i2l5359
 14576  001C66  C00F  F017         	movff	___fldiv@b,??___fldiv
 14577  001C6A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 14578  001C6E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 14579  001C72  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 14580  001C76  341A               	rlcf	??___fldiv+3,w,c
 14581  001C78  321A               	rrcf	??___fldiv+3,f,c
 14582  001C7A  3219               	rrcf	??___fldiv+2,f,c
 14583  001C7C  3218               	rrcf	??___fldiv+1,f,c
 14584  001C7E  3217               	rrcf	??___fldiv,f,c
 14585  001C80  C017  F00F         	movff	??___fldiv,___fldiv@b
 14586  001C84  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 14587  001C88  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 14588  001C8C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 14589  001C90  4A20               	infsnz	___fldiv@new_exp,f,c
 14590  001C92  2A21               	incf	___fldiv@new_exp+1,f,c
 14591  001C94                     i2l5359:
 14592  001C94  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14593  001C96  D010               	goto	i2l5363
 14594  001C98  5021               	movf	___fldiv@new_exp+1,w,c
 14595  001C9A  E103               	bnz	i2u522_40
 14596  001C9C  2820               	incf	___fldiv@new_exp,w,c
 14597  001C9E  A0D8               	btfss	status,0,c
 14598  001CA0  D00B               	goto	i2l5363
 14599  001CA2                     i2u522_40:
 14600  001CA2  0E00               	movlw	0
 14601  001CA4  6E21               	movwf	___fldiv@new_exp+1,c
 14602  001CA6  6820               	setf	___fldiv@new_exp,c
 14603  001CA8  0E00               	movlw	0
 14604  001CAA  6E0F               	movwf	___fldiv@b,c
 14605  001CAC  0E00               	movlw	0
 14606  001CAE  6E10               	movwf	___fldiv@b+1,c
 14607  001CB0  0E00               	movlw	0
 14608  001CB2  6E11               	movwf	___fldiv@b+2,c
 14609  001CB4  0E00               	movlw	0
 14610  001CB6  6E12               	movwf	___fldiv@b+3,c
 14611  001CB8                     i2l5363:
 14612  001CB8  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14613  001CBA  D005               	goto	i2u523_40
 14614  001CBC  5021               	movf	___fldiv@new_exp+1,w,c
 14615  001CBE  E111               	bnz	i2l5367
 14616  001CC0  0420               	decf	___fldiv@new_exp,w,c
 14617  001CC2  B0D8               	btfsc	status,0,c
 14618  001CC4  D00E               	goto	i2l5367
 14619  001CC6                     i2u523_40:
 14620  001CC6  0E00               	movlw	0
 14621  001CC8  6E21               	movwf	___fldiv@new_exp+1,c
 14622  001CCA  0E00               	movlw	0
 14623  001CCC  6E20               	movwf	___fldiv@new_exp,c
 14624  001CCE  0E00               	movlw	0
 14625  001CD0  6E0F               	movwf	___fldiv@b,c
 14626  001CD2  0E00               	movlw	0
 14627  001CD4  6E10               	movwf	___fldiv@b+1,c
 14628  001CD6  0E00               	movlw	0
 14629  001CD8  6E11               	movwf	___fldiv@b+2,c
 14630  001CDA  0E00               	movlw	0
 14631  001CDC  6E12               	movwf	___fldiv@b+3,c
 14632  001CDE  0E00               	movlw	0
 14633  001CE0  6E1F               	movwf	___fldiv@sign,c
 14634  001CE2                     i2l5367:
 14635  001CE2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 14636  001CE6  A026               	btfss	___fldiv@bexp,0,c
 14637  001CE8  D002               	goto	i2l5373
 14638  001CEA  8E11               	bsf	___fldiv@b+2,7,c
 14639  001CEC  D001               	goto	i2l5375
 14640  001CEE                     i2l5373:
 14641  001CEE  9E11               	bcf	___fldiv@b+2,7,c
 14642  001CF0                     i2l5375:
 14643  001CF0  90D8               	bcf	status,0,c
 14644  001CF2  3026               	rrcf	___fldiv@bexp,w,c
 14645  001CF4  6E12               	movwf	___fldiv@b+3,c
 14646  001CF6  D70E               	goto	i2l5289
 14647  001CF8                     __end_of___fldiv:
 14648                           	opt callstack 0
 14649                           
 14650                           	psect	rparam
 14651  0000                     
 14652                           	psect	temp
 14653  00006E                     btemp:
 14654                           	opt callstack 0
 14655  00006E                     	ds	1
 14656  0000                     int$flags	set	btemp
 14657  0000                     wtemp8	set	btemp+1
 14658  0000                     ttemp5	set	btemp+1
 14659  0000                     ttemp6	set	btemp+4
 14660  0000                     ttemp7	set	btemp+8
 14661                           tosu	equ	0xFFF
 14662                           tosh	equ	0xFFE
 14663                           tosl	equ	0xFFD
 14664                           stkptr	equ	0xFFC
 14665                           pclatu	equ	0xFFB
 14666                           pclath	equ	0xFFA
 14667                           pcl	equ	0xFF9
 14668                           tblptru	equ	0xFF8
 14669                           tblptrh	equ	0xFF7
 14670                           tblptrl	equ	0xFF6
 14671                           tablat	equ	0xFF5
 14672                           prodh	equ	0xFF4
 14673                           prodl	equ	0xFF3
 14674                           indf0	equ	0xFEF
 14675                           postinc0	equ	0xFEE
 14676                           postdec0	equ	0xFED
 14677                           preinc0	equ	0xFEC
 14678                           plusw0	equ	0xFEB
 14679                           fsr0h	equ	0xFEA
 14680                           fsr0l	equ	0xFE9
 14681                           wreg	equ	0xFE8
 14682                           indf1	equ	0xFE7
 14683                           postinc1	equ	0xFE6
 14684                           postdec1	equ	0xFE5
 14685                           preinc1	equ	0xFE4
 14686                           plusw1	equ	0xFE3
 14687                           fsr1h	equ	0xFE2
 14688                           fsr1l	equ	0xFE1
 14689                           bsr	equ	0xFE0
 14690                           indf2	equ	0xFDF
 14691                           postinc2	equ	0xFDE
 14692                           postdec2	equ	0xFDD
 14693                           preinc2	equ	0xFDC
 14694                           plusw2	equ	0xFDB
 14695                           fsr2h	equ	0xFDA
 14696                           fsr2l	equ	0xFD9
 14697                           status	equ	0xFD8


Data Sizes:
    Strings     587
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256    202     230
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1750_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_63(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), STR_60(CODE[12]), 
		 -> STR_59(CODE[14]), STR_58(CODE[17]), STR_57(CODE[12]), STR_56(CODE[10]), 
		 -> STR_55(CODE[10]), STR_54(CODE[13]), STR_53(CODE[8]), STR_52(CODE[3]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[15]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[12]), STR_45(CODE[15]), STR_44(CODE[18]), 
		 -> STR_43(CODE[17]), STR_42(CODE[12]), STR_41(CODE[15]), STR_40(CODE[18]), 
		 -> STR_39(CODE[17]), STR_38(CODE[14]), STR_37(CODE[14]), STR_36(CODE[17]), 
		 -> STR_35(CODE[3]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[3]), 
		 -> STR_31(CODE[9]), STR_30(CODE[17]), STR_29(CODE[15]), STR_28(CODE[15]), 
		 -> STR_27(CODE[12]), STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), 
		 -> STR_23(CODE[10]), STR_22(CODE[16]), STR_21(CODE[12]), STR_20(CODE[11]), 
		 -> STR_19(CODE[13]), STR_18(CODE[8]), STR_17(CODE[10]), STR_16(CODE[17]), 
		 -> STR_15(CODE[10]), STR_14(CODE[16]), STR_13(CODE[10]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[17]), STR_9(CODE[5]), STR_8(CODE[10]), 
		 -> STR_7(CODE[14]), STR_6(CODE[6]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[11]), STR_2(CODE[13]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_UI_main
    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0  299164
                                             90 BANK1    112   112      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   47736
                                            124 BANK0      2     0      2
                                              0 BANK1     12    12      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23233
                                            123 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25184
                                            123 BANK0      4     0      4
                                              0 BANK1      8     8      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24589
                                            123 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                      10     4      6  145738
                                             18 BANK1     10     4      6
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   47474
                                              0 BANK1      8     6      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47759
                                              0 BANK1     14    12      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                             18    14      4   24659
                                              0 BANK1     18    14      4
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23984
                                            123 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0    1404
                                              5 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       5     3      2     657
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         5     3      2     747
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26760
                                            123 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   23075
                                            109 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CA      E6       7       89.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     273      34        0.0%
DATA                 0      0     273       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 22:56:54 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 01DB                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             servoRotate180@servo 0080  
           ___wmul@multiplicand 0082                     __CFG_BORV$3 000000                 ??_number_deploy 0100  
             stepper2@direction 010D                   servoRotate0@i 0083                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000             __end_of_system_init 3CDC                             l122 32CE  
                           l140 327E                             l125 3322                             l134 31DE  
               _ultrasonic_main 2584                             l128 336C                             l137 3236  
                           l519 0290                             l640 1D6C                             l464 26D8  
                           l642 1D74                             l629 369C                             l557 0AF0  
                           l665 1F5E                             l667 1F66                             l759 3800  
                           _GIE 007F97                    __CFG_CPB$OFF 000000                             _RB2 007C0A  
                           _RC1 007C11                             _RB3 007C0B                             _RC2 007C12  
                           _RD0 007C18                             _RB4 007C0C                             _RD1 007C19  
                           _RB5 007C0D                             _RB6 007C0E                             _RB7 007C0F  
                           _ISR 0008          __size_of_stepper2_back 00A0                             _abs 3C76  
                           _cnt 01E3                             _pad 366C                             _min 2EBE  
                           _sum 0038                  stepper2_back@i 0106                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                            ?_ISR 0001                    ___fltol@exp1 0031  
                  __CFG_WDT$OFF 000000                            ?_abs 0092                            l1152 39CA  
                          l1407 3CA0                            l1505 3B7C                            l1438 2C4E  
                          l7013 16AA                            ?_pad 0094                            l7023 16F2  
                          l7019 16E6                            l7051 3ACC                            l8011 2212  
                          l8003 21CC                            l7029 170A                            l8021 225C  
                          l8023 2266                            l8007 21FE                            l7049 3AA4  
                          l8121 015E                            l6603 3D7C                            l8035 22B2  
                          ?_min 0080                            l6701 2AB6                            l6605 3D82  
                          l8213 0378                            l7309 19DA                            l7229 18B8  
                          l7173 17B8                            l8053 237C                            l6623 3684  
                          l6705 2ACC                            l6721 2DC6                            l6633 36C0  
                          l7371 37B2                            l6731 2E18                            l6627 3694  
                          l8307 0808                            l8171 0270                            l8091 00BC  
                          l7347 1A5A                            l7267 1942                            l7507 299E  
                          l7523 30EE                            l8403 08FA                            l7373 37BE  
                          l6901 2B72                            l6709 2AF2                            l6741 2E76  
                          l6725 2DEA                            l6637 36EC                            l6629 36A6  
                          l8309 0816                            l8237 051A                            l8181 02B0  
                          l8149 01EA                            l7189 1824                            l7533 3136  
                          l7383 37F2                            l6911 2B90                            l6815 1EFE  
                          l8263 06CC                            l7463 28AA                            l7543 3182  
                          l7527 3106                            l7615 2FE2                            l6913 2BB8  
                          l6745 2E9C                            l6737 2E60                            l6729 2E04  
                          l6585 3920                            l6833 1F7C                            l8521 0CD8  
                          l7803 39BC                            l6907 2B82                            l6691 2A5A  
                          l6683 2A20                            l6595 3C10                            l6819 1F16  
                          l8291 0780                            l8259 06A6                            l7547 319A  
                          l7571 3626                            l7731 2EFE                            l7715 254E  
                          l7707 250A                            l7627 301C                            l8419 0954  
                          l6757 3BBE                            l6917 2BEE                            l6909 2B8A  
                          l6677 29F8                            l6781 1D8E                            l6861 205E  
                          l6941 13DC                            l8197 0310                            l7493 2948  
                          l7477 28E8                            l7469 28D0                            l7901 2876  
                          l7821 278A                            l7637 3050                            l8525 0D24  
                          l8517 0CC8                            l8429 0984                            l6599 3C28  
                          l6767 1D50                            l6847 1FD0                            l6839 1FAE  
                          l6943 13DE                            l8287 0778                            l7743 2FAC  
                          l7647 3084                            l8535 0D84                            l8463 0A56  
                          l8471 0A90                            l8447 0A10                            l8543 0DAE  
                          l6689 2A46                            l6785 1D9E                            l6961 13FE  
                          l6953 13F6                            l6945 13EE                            l8297 079A  
                          l7761 372E                            l7745 2FB0                            l7729 2EF4  
                          l7657 30B8                            l8529 0D34                            l8481 0AD8  
                          l6891 2B28                            l6795 1E98                            l7499 296E  
                          l7755 371E                            l7691 2492                            l7683 245E  
                          l7675 241A                            l7931 2610                            l8539 0D8A  
                          l8563 0E46                            l8475 0AB2                            l8395 089C  
                          l6893 2B2C                            l6885 214C                            l6869 20D6  
                          l6981 14D4                            l6965 1408                            l6957 13FA  
                          l6949 13F2                            l7669 23EC                            l7925 25F8  
                          l8469 0A7C                            l6983 14E2                            l6967 144A  
                          l7767 3744                            l7783 3776                            l7951 2682  
                          l7927 2600                            l7769 374C                            l7795 3988  
                          l6979 14B6                            l7787 3784                            l7779 376C  
                          l7699 24D6                            l7955 26B0                            l7963 26C8  
                          l7797 3994                            l6999 15DC                            l7879 284E  
                          l7969 26DE                            l7997 2192                            STR_1 FFD9  
                          STR_2 FF0A                            STR_3 FF74                            STR_4 FFD9  
                          STR_5 FFCF                            STR_6 FFF4                            STR_7 FEE2  
                          STR_8 FFD9                            STR_9 FFFA                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            u7011 2A26                            u7030 2A5E  
                          _RBIE 007F93                            u7200 1D88                            _RBIF 007F90  
                          u7130 3BBA                            u7210 1EA8                            u8010 2940  
                          u7140 1D22                            u7300 1F52                            u8020 296E  
                          u8100 2FE0                            u7230 1ECA                            u7150 1D24  
                          u8030 2996                            u7231 1EC8                            u7240 1ED8  
                          u7400 20E8                            u7320 1FCC                            u8040 29C4  
                          u8200 242A                            u7090 2E1C                            u7250 1EDC  
                          u7330 2002                            u8210 243A                            u7500 2C20  
                          u7180 1D62                            u7420 210A                            u7340 2004  
                          u8300 255E                            u8220 246E                            u9100 08B8  
                          u7421 2108                            u9101 08B6                            u7270 1EE8  
                          u7430 2118                            u8310 256E                            u8230 247E  
                          u8150 30CE                            u6800 3960                            u7440 211C  
                          u7360 203C                            u7600 152A                            u8320 2EE4  
                          u8240 24A2                            u8160 23BE                            u9200 0AEC  
                          u7370 203E                            u8090 364E                            u8250 24B2  
                          u8170 23CE                            u6900 3D38                            u7620 155E  
                          u7700 3310                            u8420 3750                            u8260 24E6  
                          u8180 23FC                            u7470 2B6E                            u6910 3D3A  
                          u6830 3D06                            u7390 20B2                            u8270 24F6  
                          u8190 240C                            u6920 3C6E                            u6840 3D08  
                          u7640 1610                            u7720 335A                            u7800 32BA  
                          u8360 2F6C                            u8280 251A                            u8520 267A  
                          u9160 0A2E                            u9080 0880                            u7490 2C1E  
                          u6850 3C86                            u6930 3C70                            u8610 2222  
                          u8370 2F92                            u8290 252A                            u8530 2692  
                          u9170 0A3E                            u7395 20A0                            u9307 0C44  
                          u9075 086E                            u8460 3998                            u6780 3918  
                          u6940 3B64                            u7580 151C                            u7740 33A6  
                          u8620 2232                            u9180 0A90                            u6765 3DCA  
                          u9317 0C80                            u9077 0870                            u7910 37C2  
                          u6766 3DCC                            u6950 3B66                            u7590 151E  
                          u8710 238C                            u8630 2242                            u8550 26DE  
                          u9190 0AA0                            u9407 26EC                            u9327 0D96  
                          u9247 0912                            u9095 08A4                            u7760 3224  
                          u8640 2252                            u9417 2718                            u9337 0DC0  
                          u9257 093C                            u9097 08A6                            u6970 3D6A  
                          u8810 0200                            u9507 23A4                            u9427 2FF8  
                          u9347 0DE4                            u9267 0966                            u6980 3D6C  
                          u8900 039A                            u7780 326C                            u8660 227E  
                          u8580 21C2                            u8901 0398                            u9517 2328  
                          u9437 300E                            u9357 0E04                            u9277 099A  
                          u8670 228E                            u8590 21F4                            u7935 3A06  
                          u9607 314A                            u9527 235C                            u9447 302C  
                          u9367 0E28                            u9287 09CC                            u7960 28A2  
                          u8680 229E                            u7945 3DEE                            u9617 1760  
                          u9537 3584                            u9457 3042                            u9377 2596  
                          u9297 0B7C                            u7946 3DF0                            u7970 28D0  
                          u8690 22AE                            u9707 181C                            u9627 1774  
                          u9547 35B8                            u9467 3060                            u9387 25C0  
                          u8860 02AC                            u7980 28E0                            u9717 1846  
                          u9637 1788                            u9557 2750                            u9477 3076  
                          u9397 2648                            u8950 081C                            u7990 290E  
                          u9807 1938                            u9727 1860                            u9647 179C  
                          u9567 277C                            u9487 3094                            u9817 1972  
                          u9737 187A                            u9657 17B0                            u9577 27E6  
                          u9497 30AA                            u8890 038A                            u9907 1A52  
                          u9827 198A                            u9747 1894                            u9667 17CC  
                          u9587 2810                            u9917 33E0                            u9837 19A2  
                          u9757 18AE                            u9677 17E0                            u9597 35E8  
                          u9927 342E                            u9847 19BA                            u9767 18D0  
                          u9687 17F4                            u9937 31E4                            u9857 19D2  
                          u9777 18EA                            u9697 1808                            u9947 31F4  
                          u9867 19F2                            u9787 1904                            u9957 3208  
                          u9877 1A0A                            u9797 191E                            u9967 323A  
                          u9887 1A22                            u9977 3250                            u9897 1A3A  
                          u9987 3288                            u9997 329C                            _Pole 0200  
            main@poles_detected 01C4                     main@t_count 01BE                            abs@a 0092  
                          _data 005E                            _echo 0E52                            _dbuf 0280  
                          _disp 01DD                            _atoi 2B14                            _main 0826  
                          _dtoa 1CF8                            _meas 0050                            _keys FD9D  
                          _send 006D                            _tick 0056                            _prec 004C  
                          _sens 0058                            _temp 00FF                            _time 01D2  
                          _nout 0048                            pad@i 009B                            pad@p 0098  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 009D                            fsr2l 000FD9  
                          _trig 2FCE                            _sumf 0040                            btemp 006E  
                          min@i 0089                            _xtoa 1F40                            prodh 000FF4  
                          prodl 000FF3                            start 000E         __size_of_actuators_main 0150  
                 __CFG_IESO$OFF 000000                 ___fldiv@new_exp 0020                 __end_of_UI_main 0826  
               servoRotate180@i 0083                   __CFG_MCLRE$ON 000000                    main@act_done 01B6  
                  ___param_bank 000000                           ??_ISR 0036                           ??_abs 0094  
                         ??_pad 009A                           ??_min 0084           actuators_main@act_cnt 011A  
         I2C_Master_Read@ackBit 0081                ?_I2C_Master_Init 008D                ?_I2C_Master_Read 0001  
              ?_I2C_Master_Wait 0001                ?_I2C_Master_Stop 0001                           ?_echo 0001  
                 ___fltol@sign1 0030                 __end_of___aodiv 2B14                           ?_atoi 0087  
                         ?_main 0001                           ?_dtoa 009F                 __end_of___aomod 2EBE  
               __end_of___fldiv 1CF8                 __end_of___awdiv 378E                           _EEADR 000FA9  
                         STR_10 FDE8                           STR_11 FF7F                           STR_20 FF5E  
                         STR_12 FE4D                           STR_13 FF89                           STR_21 FF23  
                         STR_14 FE5D                           STR_22 FE3D                           STR_30 FDC6  
                         STR_31 FFE3                           STR_23 FFC5                           STR_15 FF93  
                         STR_32 FEC3                           STR_24 FF47                           STR_16 FDF9  
                         STR_40 FDB4                           STR_33 FE0B                           STR_17 FF9D  
                         STR_41 FE7C                           STR_25 FE6D                           STR_34 FFE3  
                         STR_26 FFC5                           STR_18 FFEC                           STR_42 FF3B  
                         STR_50 FEA9                           STR_51 FDC6                           STR_43 FE1B  
                         STR_35 FEC3                           STR_27 FF47                           STR_19 FEF0  
                         STR_28 FE6D                           STR_52 FEC3                           STR_44 FDB4  
                         STR_60 FF2F                           STR_36 FE0A                           STR_45 FE7C  
                         STR_53 FF02                           STR_61 FF53                           STR_37 FED4  
                         STR_29 FE8B                           STR_46 FF3B                           STR_62 FF69  
                         STR_54 FEFD                           STR_38 FEC6                           STR_55 FFBB  
                         STR_63 FFB1                           STR_39 FE1B                           STR_47 FDD7  
                         STR_56 FFA7                           STR_48 FF17                           STR_57 FF23  
                         STR_49 FE9A                           STR_58 FE2C                           STR_59 FEB8  
               __end_of___fltol 351C                           ?_trig 0001                 __end_of___lldiv 3812  
                         u10007 32DA                           u10017 32E6                           u10107 0228  
                         u10027 32F4                           u10117 02C8                           u10037 332C  
                         u10207 3DB0                           u10127 0328                           u10047 3340  
                         u10217 3DBA                           u10137 03B4                           u10057 3376  
                         u10147 0540                           u10067 3388                           u10157 070E  
                         u10077 007A                           u10167 389E                           u10087 011E  
                         u10177 38B8                           u10097 0192                           u10187 38CA  
               ___awdiv@divisor 0082                           u10197 38EE                           ?_xtoa 009F  
                         _T1CON 000FCD                 __end_of___llmod 39DC                           i2l423 1394  
                         i2l396 3BF8                 ___awdiv@counter 0084                    vfpfcnvrt@fmt 00C8  
                  vfpfcnvrt@llu 00D8                           _TMR1H 000FCF                           _TMR1L 000FCE  
                         _PORTB 000F81                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                 __end_of_lcdInst 3ED4  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                 __end_of_initLCD 3906  
                __CFG_EBTRB$OFF 000000                           _brake 351C                           _flags 004E  
                         _dists 0069                           _fputc 3906                 __end_of_isalpha 3C76  
                         _fputs 3C04                 __end_of_isdigit 3D72                           _servo 33A8  
                         atoi@n 0094                           pad@fp 0094                           atoi@s 0087  
                         _width 004A                           _state 01DF                           _putch 3EB4  
                         _start 3AE8                           main@i 01B2                           main@k 01BC  
                         dtoa@d 00A1                           dtoa@i 00C1                           dtoa@n 00B9  
                         dtoa@p 00B3                           dtoa@s 00B7                           dtoa@w 00B5  
               __end_of_islower 3D0E                 __end_of_isspace 3BC6                 __end_of_isupper 3D40  
                         tablat 000FF5                 send_nibble@data 0081                           plusw2 000FDB  
               __end_of_pulse_e 3DCE                           ttemp5 006F                           ttemp6 0072  
                         ttemp7 0076                           status 000FD8     I2C_Master_Read@receivedByte 0082  
               __end_of_stepper 29CA                           wtemp8 006F                           xtoa@c 00C4  
                         xtoa@d 00A1                           xtoa@i 00C2                           xtoa@n 00BA  
                         xtoa@p 00B6                           xtoa@w 00B8                           xtoa@x 00A9  
                 _stepper2_back 35CC                 __end_of_toupper 3B86                ??_servoRotate180 0082  
            __size_ofi2___awdiv 0084                  __CFG_PBADEN$ON 000000                    _toupper$1802 008C  
               __initialization 3A3C                    __end_of_echo 1396                     _system_init 3CAA  
                  __end_of_atoi 2C58                    __end_of_main 0E52                    __end_of_dtoa 1F40  
                  __end_of_keys FDAE         __end_of_ultrasonic_main 2730                    __end_of_trig 30D0  
                  __end_of_xtoa 2176                          ??_echo 0032                          ??_atoi 0089  
                        ??_main 015A                          ??_dtoa 00A9                          ??_trig 0080  
                        ??_xtoa 00AA                   __activetblptr 000002            number_deploy@t_count 0106  
             ?_I2C_Master_Start 0001               ?_I2C_Master_Write 0081            number_deploy@tires_t 0102  
            ??_I2C_Master_Start 0081                          ?_brake 0001                          _ADCON1 000FC1  
            ??_I2C_Master_Write 0083                    ?_send_nibble 0001                          ?_fputc 0084  
              ___llmod@dividend 0080                          ?_fputs 008D                          _EEDATA 000FA8  
                        _EECON2 000FA7                ___awdiv@dividend 0080                          ?_servo 0001  
                        ?_putch 0001                          ?_start 0001                          _INT1IE 007F83  
                        _INT1IF 007F80              stepper2@steps2_adj 0100                          i2l1316 1BE2  
                        i2l1327 1C50                          i2l1328 1C4C                          i2l1394 2D14  
                        i2l1387 2C96                          i2l5303 1B42                          i2l5321 1BBA  
                        i2l5313 1B92                          i2l5333 1BF8                          i2l5261 1AA0  
                        i2l5501 2CCA                          i2l5327 1BE0                          i2l5511 2D3A  
                        i2l5503 2CD6                          i2l5281 1AE0                          i2l5257 1A9C  
                        i2l5433 3480                          i2l5513 2D46                          i2l5505 2CFC  
                        i2l5363 1CB8                          i2l5339 1C16                          i2l5373 1CEE  
                        i2l5277 1ADC                          i2l5461 34EE                          i2l5453 34DA  
                        i2l5541 3826                          i2l5701 0F2C                          i2l5375 1CF0  
                        i2l5367 1CE2                          i2l5359 1C94                          i2l5295 1B2A  
                        i2l6263 3BE6                          i2l5289 1B14                          i2l5449 34CA  
                        i2l5529 2D86                          i2l5553 384C                          i2l5467 350A  
                        i2l5459 34E2                          i2l5555 3854                          i2l5547 3836  
                        i2l5803 131E                          i2l5707 0F84                          i2l5493 2CA6  
                        i2l5573 388C                          i2l5565 3874                          i2l5741 10D6  
                        i2l5709 0F9E                          i2l5735 107A                          i2l5719 101E  
                        i2l5743 10F0                          i2l5569 387E                          i2l5809 137A  
                        i2l5753 1170                          i2l5499 2CC4                          i2l5685 0ED0  
                        i2l5775 1228                          i2l5769 11CC                          i2l5777 1242  
                        i2l5787 12C2                       ??_UI_main 0100                   vfpfcnvrt@done 00E1  
                        _TMR1ON 007E68                  ?_stepper2_back 0100                          _SSPADD 000FC8  
                        _SSPBUF 000FC9                __end_of___xxtofl 2D98     number_deploy@poles_detected 00FD  
                __CFG_XINST$OFF 000000                    vfprintf@cfmt 00EB                       ??___aodiv 0090  
                     ??___aomod 0090                          ___wmul 3E20                       ??___fldiv 0017  
                     ??___awdiv 0084                       ??___fltol 002C                       ??___lldiv 0088  
                     ??___llmod 0088                          clear_0 3A62                          clear_1 3A6E  
                        clear_2 3A7E                ___awdiv@quotient 0086                       ??_lcdInst 0083  
                        _printf 3DF8                          pad@buf 0096                          dtoa@fp 009F  
                        _strlen 3D72                  i2___awdiv@sign 0006                       ??_initLCD 0084  
                        fputc@c 0084                          fputs@c 0091                          fputs@i 0092  
                  __pdataCOMRAM 0069                          fputs@s 008D                       ??_isalpha 0082  
                     ??_isdigit 0082               __end_ofi2___awdiv 3896                       ??_islower 0082  
                  __mediumconst FD9C                       ??_isspace 0082                          tblptrh 000FF7  
                     ??_isupper 0082                          tblptrl 000FF6                          tblptru 000FF8  
              __end_of_vfprintf 3AE8                       ??_pulse_e 0080                __end_of_stepper2 31CC  
ultrasonic_main@min_us_dist_967 010A                       ??_stepper 0104                          xtoa@fp 009F  
                     ??_toupper 0088                    ___xxtofl@arg 000B           pulse_e@interruptState 0080  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                      __accesstop 0080  
       __end_of__initialization 3A84                  _actuators_main 2730                   ___rparam_used 000001  
                    ___fltol@f1 0028                    stepper@i_480 010E                    stepper@i_481 0110  
                  stepper@i_479 010C              __size_of_backwards 0026             full_drive@direction 00FE  
                __pcstackCOMRAM 0001                    stepper@t_dep 0102                    stepper@stack 0100  
              ?_ultrasonic_main 00FC                   __end_of_brake 35CC                   __end_of_fputc 3974  
                 __end_of_fputs 3C40                   __end_of_servo 3462               servoRotate0@servo 0080  
                 __end_of_putch 3EC4                   __end_of_start 3B3A                 _key_was_pressed 01E5  
         number_deploy@avg_dist 00FB                         ??_brake 00FB                         ??_fputc 0088  
                       ??_fputs 0091                         ??_servo 0085                         ??_putch 0083  
                       ??_start 0095                 ??_stepper2_back 0102                      __pbssBANK0 00FF  
                    __pbssBANK1 01CA                      __pbssBANK2 0200          __end_of_actuators_main 2880  
                       ?___wmul 0080              __size_of_send_byte 0018                         ?_printf 00ED  
        stepper2_back@direction 0103                         ?_strlen 0080           __end_of_number_deploy 2396  
                     ?___xxtofl 0001               __end_of_backwards 3E6E              __size_of_vfpfcnvrt 03AA  
                    _dist_final 0250                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                         _UI_main 0012            __size_of_send_nibble 001A  
               ?_actuators_main 0112                         __Hparam 0000                         __Lparam 0000  
                  ?_system_init 0001                         ___aodiv 29CA                         ___aomod 2D98  
                       ___fldiv 1A70                         ___awdiv 3708                         ___fltol 3462  
                       ___lldiv 378E                 __size_of___wmul 0028                         ___llmod 3974  
                     ?_vfprintf 00E5                       ?_stepper2 0100                 __CFG_STVREN$OFF 000000  
                       __pcinit 3A3C                      _full_drive 1740                         __ramtop 1000  
                       _lcdInst 3EC4                         __ptext0 0826                         __ptext1 2584  
                       __ptext2 2FCE                         __ptext3 2396                         __ptext4 2EBE  
                       __ptext5 3AE8                         __ptext6 2176                         __ptext7 3708  
                       __ptext8 351C                         __ptext9 3E48                 __size_of_printf 0028  
               __size_of_strlen 002E                         _initLCD 3896                    __size_of_ISR 3BFC  
                       _counter 0060                    __size_of_abs 0034                    __size_of_pad 009C  
                       _isalpha 3C40                    __size_of_min 0110                         _isdigit 3D40  
                    ??___xxtofl 0005                         _islower 3CDC                         _isspace 3B86  
                       _isupper 3D0E        __size_of_I2C_Master_Init 0060        __size_of_I2C_Master_Read 002A  
      __size_of_I2C_Master_Wait 0014        __size_of_I2C_Master_Stop 0008                 _prev_dist_final 01CA  
                       _pressed 01D9                         atoi@neg 008D                         _pulse_e 3DA0  
                       _stepper 2880                  __pintcode_body 3BC6                         _toupper 3B3A  
          end_of_initialization 3A84                         min@size 0082             main@arduino_stopped 01B7  
         __end_of_LCD_SIZE_HORZ FDB3               __end_of_send_byte 3EA0           __end_of_LCD_SIZE_VERT FDB2  
                       fputc@fp 0086                   __Lmediumconst FD9C                         int_func 3BC6  
                       fputs@fp 008F       __size_of_I2C_Master_Start 0008       __size_of_I2C_Master_Write 000A  
               ___lldiv@divisor 0084                 ___lldiv@counter 008C               __end_of_vfpfcnvrt 1740  
                 ?_servoRotate0 0080                  main@steps2_adj 01BA                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 00EB                      ??_stepper2 0102  
                       strlen@a 0082                         strlen@s 0080                       _PORTAbits 000F80  
                    _print_echo 2396                   stepper2@i_489 0109                   ___xxtofl@sign 0009  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                      main@i_1081 01C2  
                    main@i_1075 01B4                       i2___awdiv 3812     ultrasonic_main@step2_offset 0106  
                 send_byte@data 0082              i2___awdiv@dividend 0001           UI_main@poles_detected 00FD  
                ??_servoRotate0 0082     number_deploy@tires_detected 0104                     vfpfcnvrt@ap 00CA  
                   vfpfcnvrt@fp 00C6                     vfpfcnvrt@ll 00D0                  __end_of___wmul 3E48  
                   ?_full_drive 00FB         __size_of_servoRotate180 00F0                   __pidataCOMRAM 3EEE  
                __end_of_printf 3E20                  __end_of_strlen 3DA0             start_initialization 3A3C  
                    min@minimum 0087              i2___awdiv@quotient 0007                     __end_of_ISR 3C04  
                   __end_of_abs 3CAA                     __end_of_pad 3708                     __end_of_min 2FCE  
         stepper2@count_stepper 010B                      ?i2___awdiv 0001               ??_I2C_Master_Init 0091  
             ??_I2C_Master_Read 0081               ??_I2C_Master_Wait 0080               ??_I2C_Master_Stop 0081  
             main@prev_avg_dist 01C6                  _poles_detected 0052                 ___llmod@divisor 0084  
               ___llmod@counter 0088                    UI_main@t_dep 00FB                     vfprintf@fmt 00E7  
                      ??___wmul 0084        I2C_Master_Init@clockFreq 008D                __CFG_LPT1OSC$OFF 000000  
          __size_of_system_init 0032                        ??_printf 00F7                        ??_strlen 0082  
                   ?_print_echo 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
      __size_of_ultrasonic_main 01AC                     __pbssCOMRAM 0038                   __pcstackBANK0 0080  
                 __pcstackBANK1 0100                ___aodiv@dividend 0080                ??_actuators_main 0118  
             __size_of___xxtofl 0140                       _backwards 3E48                        ?_UI_main 00FB  
         __end_of_stepper2_back 366C             __size_of_full_drive 0330                       _atoi$1710 008F  
                     _atoi$1711 0093                       _atoi$1712 0091                _I2C_Master_Start 3EE6  
              _I2C_Master_Write 3ED4                       _dtoa$1226 00B1               __CFG_CCP2MX$PORTC 000000  
                     __pintcode 0008                   __pmediumconst FD9C                        ?___aodiv 0080  
                      ?___aomod 0080                        ?___fldiv 000F                        ?___awdiv 0080  
              ___aodiv@quotient 0092                        ?___fltol 0028                        ?___lldiv 0080  
                      ?___llmod 0080                        ?_lcdInst 0001               __size_of_vfprintf 0056  
             __size_of_stepper2 00FC            full_drive@stepper_no 00FB                        ?_initLCD 0001  
                      ?_isalpha 0080                        ?_isdigit 0080                        ?_islower 0080  
                      ?_isspace 0080                        ?_isupper 0080            __end_of_servoRotate0 33A8  
                 ??_send_nibble 0081                        ?_pulse_e 0001                  __size_of_brake 00B0  
                   ??i2___awdiv 0005                        ?_stepper 0100                  __size_of_fputc 006E  
                __size_of_fputs 003C                        ?_toupper 0086                  __size_of_servo 00BA  
                    ?_backwards 0001                  __size_of_putch 0010                  __size_of_start 0052  
                ___wmul@product 0084                        _LATAbits 000F89                        _LATBbits 000F8A  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      UI_main@i 0159                       _send_byte 3E88             __size_of_print_echo 01EE  
        __size_of_number_deploy 0220                  _LCD_LINE1_ADDR FDB0                  _LCD_LINE2_ADDR FDB3  
                _LCD_LINE3_ADDR FDAF                  _LCD_LINE4_ADDR FDAE                        i2u522_40 1CA2  
                      i2u523_40 1CC6                        i2u531_40 346E                        i2u532_40 349E  
                      i2u532_45 3494                        i2u518_40 1C46                        i2u536_40 34F4  
                      i2u554_40 3858                        i2u650_40 3BF0                        i2u547_40 2D50  
                      i2u563_40 0EE0                        i2u564_40 0EF0                        i2u573_40 102E  
                      i2u574_40 103E                        i2u583_40 1180                        i2u584_40 1190  
                      i2u593_40 12D2                        i2u594_40 12E2                __CFG_WDTPS$32768 000000  
    stepper2_back@count_stepper 0104                  _servoRotate180 31CC                       _vfpfcnvrt 1396  
                     _xtoa$1237 00B2                       _xtoa$1238 00B4               ___wmul@multiplier 0080  
                     main@t_dep 01C0               i2___awdiv@divisor 0003                       main@stack 01B8  
             i2___awdiv@counter 0005                    _isspace$1737 0086                      vfpfcnvrt@c 00E0  
           actuators_main@t_dep 0116             actuators_main@stack 0112                       copy_data0 3A50  
             ??_ultrasonic_main 0100                 UI_main@keypress 0154          __end_of_LCD_LINE1_ADDR FDB1  
              __size_of_UI_main 0814          __end_of_LCD_LINE2_ADDR FDB4          __end_of_LCD_LINE3_ADDR FDB0  
        __end_of_LCD_LINE4_ADDR FDAF             __end_of_send_nibble 3E88                      _EECON1bits 000FA6  
                    ?_send_byte 0001                     UI_main@Pole 0104                        __Hrparam 0000  
                   UI_main@tick 0155                      vfprintf@ap 00E9                        __Lrparam 0000  
                    vfprintf@fp 00E5              __CFG_BOREN$SBORDIS 000000          __end_of_servoRotate180 32BC  
              __size_of___aodiv 014A                __size_of___aomod 0126                __size_of___fldiv 0288  
              __size_of___awdiv 0086                __size_of___fltol 00BA                __size_of___lldiv 0084  
              __size_of___llmod 0068                    ??_full_drive 00FD                      ?_vfpfcnvrt 00C6  
               ___aodiv@divisor 0088                 ___aodiv@counter 0090                __size_of_lcdInst 0010  
      actuators_main@steps2_adj 0114                   _number_deploy 2176                 _I2C_Master_Init 39DC  
               _I2C_Master_Read 3DCE                __size_of_initLCD 0070                        ___xxtofl 2C58  
               _I2C_Master_Wait 3EA0                 _I2C_Master_Stop 3EDE                __size_of_isalpha 0036  
              __size_of_isdigit 0032                __size_of_islower 0032                __size_of_isspace 0040  
                      __ptext10 2730                        __ptext11 3CAA                        __ptext20 3DF8  
                      __ptext12 35CC                        __ptext21 3A92                        __ptext13 30D0  
                      __ptext30 3D72                        __ptext22 1396                        __ptext14 2880  
                      __ptext31 3C04                        __ptext23 1F40                        __ptext15 1740  
                      __ptext40 3E20                        __ptext32 3906                        __ptext24 3B3A  
                      __ptext16 33A8                        __ptext41 3896                        __ptext33 3EB4  
                      __ptext25 3CDC                        __ptext17 31CC                        __ptext50 3DCE  
                      __ptext42 3EC4                        __ptext34 3C76                        __ptext26 3D0E  
                      __ptext18 32BC                        __ptext51 3EA0                        __ptext43 3E88  
                      __ptext35 2D98                        __ptext27 3C40                        __ptext19 0012  
                      __ptext52 39DC                        __ptext44 3E6E                        __ptext36 29CA  
                      __ptext28 1CF8                        __ptext53 378E                        __ptext45 3DA0  
                      __ptext37 2B14                        __ptext29 366C                        __ptext46 3974  
                      __ptext38 3B86                        __ptext55 0E52                        __ptext47 3ED4  
                      __ptext39 3D40                        __ptext56 3812                        __ptext48 3EDE  
                      __ptext57 2C58                        __ptext49 3EE6                        __ptext58 3462  
                      __ptext59 1A70                __size_of_isupper 0032                        _avg_dist 0044  
              __size_of_pulse_e 002E                     ??_backwards 0083                __size_of_stepper 014A  
              __size_of_toupper 004C                   __size_of_echo 0544                   __size_of_atoi 0144  
                 __size_of_main 062C                   __size_of_dtoa 0248         stepper2_back@steps2_adj 0100  
                 __size_of_trig 0102                   __size_of_xtoa 0236              __end_of_full_drive 1A70  
                      _keypress 005F                        _temp_int 01E1                 ?_servoRotate180 0080  
                      int$flags 006E                        _vfprintf 3A92                        main@Pole 0162  
                      _stepper2 30D0                       printf@fmt 00ED     I2C_Master_Write@byteToWrite 0081  
              ___aomod@dividend 0080           __size_of_servoRotate0 00EC                        min@array 0080  
                  ??_print_echo 00FB                  ?_number_deploy 00FB                       putch@data 0083  
                _vfpfcnvrt$1252 00E3        __end_of_I2C_Master_Start 3EEE        __end_of_I2C_Master_Write 3EDE  
                    _INTCONbits 000FF2           ultrasonic_main@sensed 0104                        isalpha@c 0080  
                      isdigit@c 0080                       stepper2@i 0107                     _send_nibble 3E6E  
                      intlevel2 0000                   _LCD_SIZE_HORZ FDB2                        islower@c 0080  
                 _LCD_SIZE_VERT FDB1                        isspace@c 0080                ___lldiv@dividend 0080  
                   ??_send_byte 0082                        isupper@c 0080                  _tires_deployed 0054  
            __end_of_print_echo 2584                   ??_system_init 0080                    _servoRotate0 32BC  
                      printf@ap 00F9         __end_of_I2C_Master_Init 3A3C                 ___aomod@divisor 0088  
       __end_of_I2C_Master_Read 3DF8         __end_of_I2C_Master_Wait 3EB4         __end_of_I2C_Master_Stop 3EE6  
                   ??_vfpfcnvrt 00CC                     lcdInst@data 0083                 ___aomod@counter 0090  
                      stepper@i 010A       ultrasonic_main@steps2_adj 0108                ___lldiv@quotient 0088  
                      toupper@c 0086                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                   _timer_count 005C                    ___aodiv@sign 0091                    ___aomod@sign 0091  
          stepper@count_stepper 0108  
