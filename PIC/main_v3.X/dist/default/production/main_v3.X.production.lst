

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 07 21:26:14 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4620 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  003B40                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _dists
   122  003B40  0000               	dw	0
   123  003B42  FFFF               	dw	65535
   124                           
   125                           ;initializer for _send
   126  003B44  01                 	db	1
   127                           
   128                           	psect	mediumconst
   129  00FDBA                     __pmediumconst:
   130                           	opt callstack 0
   131  00FDBA  00                 	db	0
   132  00FDBB                     _keys:
   133                           	opt callstack 0
   134  00FDBB  31                 	db	49
   135  00FDBC  32                 	db	50
   136  00FDBD  33                 	db	51
   137  00FDBE  41                 	db	65
   138  00FDBF  34                 	db	52
   139  00FDC0  35                 	db	53
   140  00FDC1  36                 	db	54
   141  00FDC2  42                 	db	66
   142  00FDC3  37                 	db	55
   143  00FDC4  38                 	db	56
   144  00FDC5  39                 	db	57
   145  00FDC6  43                 	db	67
   146  00FDC7  2A                 	db	42
   147  00FDC8  30                 	db	48
   148  00FDC9  23                 	db	35
   149  00FDCA  44                 	db	68
   150  00FDCB  00                 	db	0
   151  00FDCC                     __end_of_keys:
   152                           	opt callstack 0
   153  00FDCC  50                 	db	80
   154  00FDCD                     __end_of_LCD_LINE4_ADDR:
   155                           	opt callstack 0
   156  00FDCD  10                 	db	16
   157  00FDCE                     __end_of_LCD_LINE3_ADDR:
   158                           	opt callstack 0
   159  00FDCE                     _LCD_LINE1_ADDR:
   160                           	opt callstack 0
   161  00FDCE  00                 	db	0
   162  00FDCF                     __end_of_LCD_LINE1_ADDR:
   163                           	opt callstack 0
   164  00FDCF                     _LCD_SIZE_VERT:
   165                           	opt callstack 0
   166  00FDCF  04                 	db	4
   167  00FDD0                     __end_of_LCD_SIZE_VERT:
   168                           	opt callstack 0
   169  00FDD0                     _LCD_SIZE_HORZ:
   170                           	opt callstack 0
   171  00FDD0  10                 	db	16
   172  00FDD1                     __end_of_LCD_SIZE_HORZ:
   173                           	opt callstack 0
   174  00FDD1  40                 	db	64
   175  00FDD2                     __end_of_LCD_LINE2_ADDR:
   176                           	opt callstack 0
   177  0000                     _PORTAbits	set	3968
   178  0000                     _TRISAbits	set	3986
   179  0000                     _T1CON	set	4045
   180  0000                     _PORTB	set	3969
   181  0000                     _LATBbits	set	3978
   182  0000                     _TRISBbits	set	3987
   183  0000                     _TMR1H	set	4047
   184  0000                     _TMR1L	set	4046
   185  0000                     _LATDbits	set	3980
   186  0000                     _INTCONbits	set	4082
   187  0000                     _LATE	set	3981
   188  0000                     _TRISE	set	3990
   189  0000                     _LATC	set	3979
   190  0000                     _TRISC	set	3988
   191  0000                     _ADCON1	set	4033
   192  0000                     _TRISD	set	3989
   193  0000                     _LATD	set	3980
   194  0000                     _TRISA	set	3986
   195  0000                     _LATB	set	3978
   196  0000                     _TRISB	set	3987
   197  0000                     _LATAbits	set	3977
   198  0000                     _LATEbits	set	3981
   199  0000                     _LATCbits	set	3979
   200  0000                     _LATA	set	3977
   201  0000                     _SSPBUF	set	4041
   202  0000                     _SSPCON2bits	set	4037
   203  0000                     _SSPCON1	set	4038
   204  0000                     _SSPADD	set	4040
   205  0000                     _TRISCbits	set	3988
   206  0000                     _SSPCON1bits	set	4038
   207  0000                     _SSPCON2	set	4037
   208  0000                     _SSPSTAT	set	4039
   209  0000                     _GIE	set	32663
   210  0000                     _INT1IE	set	32643
   211  0000                     _RB2	set	31754
   212  0000                     _RB3	set	31755
   213  0000                     _RD0	set	31768
   214  0000                     _RD1	set	31769
   215  0000                     _RB4	set	31756
   216  0000                     _RB5	set	31757
   217  0000                     _RB6	set	31758
   218  0000                     _TMR1ON	set	32360
   219  0000                     _RB7	set	31759
   220  0000                     _INT1IF	set	32640
   221  0000                     _RBIE	set	32659
   222  0000                     _RBIF	set	32656
   223  0000                     _RC2	set	31762
   224  0000                     _RC1	set	31761
   225  00FDD2                     STR_40:
   226  00FDD2  50                 	db	80	;'P'
   227  00FDD3  25                 	db	37
   228  00FDD4  64                 	db	100	;'d'
   229  00FDD5  20                 	db	32
   230  00FDD6  44                 	db	68	;'D'
   231  00FDD7  65                 	db	101	;'e'
   232  00FDD8  70                 	db	112	;'p'
   233  00FDD9  3A                 	db	58	;':'
   234  00FDDA  25                 	db	37
   235  00FDDB  64                 	db	100	;'d'
   236  00FDDC  2C                 	db	44
   237  00FDDD  54                 	db	84	;'T'
   238  00FDDE  6F                 	db	111	;'o'
   239  00FDDF  74                 	db	116	;'t'
   240  00FDE0  3A                 	db	58	;':'
   241  00FDE1  25                 	db	37
   242  00FDE2  64                 	db	100	;'d'
   243  00FDE3  00                 	db	0
   244  00FDE4                     STR_30:
   245  00FDE4  20                 	db	32
   246  00FDE5  20                 	db	32
   247  00FDE6  20                 	db	32
   248  00FDE7  20                 	db	32
   249  00FDE8  20                 	db	32
   250  00FDE9  30                 	db	48	;'0'
   251  00FDEA  2D                 	db	45
   252  00FDEB  4D                 	db	77	;'M'
   253  00FDEC  65                 	db	101	;'e'
   254  00FDED  6E                 	db	110	;'n'
   255  00FDEE  75                 	db	117	;'u'
   256  00FDEF  20                 	db	32
   257  00FDF0  20                 	db	32
   258  00FDF1  20                 	db	32
   259  00FDF2  20                 	db	32
   260  00FDF3  20                 	db	32
   261  00FDF4  00                 	db	0
   262  00FDF5                     STR_47:
   263  00FDF5  3C                 	db	60	;'<'
   264  00FDF6  2A                 	db	42
   265  00FDF7  20                 	db	32
   266  00FDF8  20                 	db	32
   267  00FDF9  20                 	db	32
   268  00FDFA  30                 	db	48	;'0'
   269  00FDFB  2D                 	db	45
   270  00FDFC  4D                 	db	77	;'M'
   271  00FDFD  65                 	db	101	;'e'
   272  00FDFE  6E                 	db	110	;'n'
   273  00FDFF  75                 	db	117	;'u'
   274  00FE00  20                 	db	32
   275  00FE01  20                 	db	32
   276  00FE02  20                 	db	32
   277  00FE03  20                 	db	32
   278  00FE04  20                 	db	32
   279  00FE05  00                 	db	0
   280  00FE06                     STR_10:
   281  00FE06  44                 	db	68	;'D'
   282  00FE07  69                 	db	105	;'i'
   283  00FE08  73                 	db	115	;'s'
   284  00FE09  74                 	db	116	;'t'
   285  00FE0A  31                 	db	49	;'1'
   286  00FE0B  3D                 	db	61	;'='
   287  00FE0C  25                 	db	37
   288  00FE0D  64                 	db	100	;'d'
   289  00FE0E  2C                 	db	44
   290  00FE0F  41                 	db	65	;'A'
   291  00FE10  76                 	db	118	;'v'
   292  00FE11  67                 	db	103	;'g'
   293  00FE12  3D                 	db	61	;'='
   294  00FE13  25                 	db	37
   295  00FE14  64                 	db	100	;'d'
   296  00FE15  20                 	db	32
   297  00FE16  00                 	db	0
   298  00FE17                     STR_16:
   299  00FE17  44                 	db	68	;'D'
   300  00FE18  69                 	db	105	;'i'
   301  00FE19  73                 	db	115	;'s'
   302  00FE1A  74                 	db	116	;'t'
   303  00FE1B  34                 	db	52	;'4'
   304  00FE1C  3D                 	db	61	;'='
   305  00FE1D  25                 	db	37
   306  00FE1E  64                 	db	100	;'d'
   307  00FE1F  2C                 	db	44
   308  00FE20  41                 	db	65	;'A'
   309  00FE21  76                 	db	118	;'v'
   310  00FE22  67                 	db	103	;'g'
   311  00FE23  3D                 	db	61	;'='
   312  00FE24  25                 	db	37
   313  00FE25  64                 	db	100	;'d'
   314  00FE26  20                 	db	32
   315  00FE27  00                 	db	0
   316  00FE28                     STR_36:
   317  00FE28  20                 	db	32
   318  00FE29  20                 	db	32
   319  00FE2A  20                 	db	32
   320  00FE2B  20                 	db	32
   321  00FE2C  20                 	db	32
   322  00FE2D  30                 	db	48	;'0'
   323  00FE2E  2D                 	db	45
   324  00FE2F  4D                 	db	77	;'M'
   325  00FE30  65                 	db	101	;'e'
   326  00FE31  6E                 	db	110	;'n'
   327  00FE32  75                 	db	117	;'u'
   328  00FE33  20                 	db	32
   329  00FE34  20                 	db	32
   330  00FE35  20                 	db	32
   331  00FE36  23                 	db	35
   332  00FE37  3E                 	db	62	;'>'
   333  00FE38  00                 	db	0
   334  00FE39                     STR_39:
   335  00FE39  3C                 	db	60	;'<'
   336  00FE3A  2A                 	db	42
   337  00FE3B  20                 	db	32
   338  00FE3C  20                 	db	32
   339  00FE3D  20                 	db	32
   340  00FE3E  30                 	db	48	;'0'
   341  00FE3F  2D                 	db	45
   342  00FE40  4D                 	db	77	;'M'
   343  00FE41  65                 	db	101	;'e'
   344  00FE42  6E                 	db	110	;'n'
   345  00FE43  75                 	db	117	;'u'
   346  00FE44  20                 	db	32
   347  00FE45  20                 	db	32
   348  00FE46  20                 	db	32
   349  00FE47  23                 	db	35
   350  00FE48  3E                 	db	62	;'>'
   351  00FE49  00                 	db	0
   352  00FE4A                     STR_22:
   353  00FE4A  64                 	db	100	;'d'
   354  00FE4B  65                 	db	101	;'e'
   355  00FE4C  74                 	db	116	;'t'
   356  00FE4D  2C                 	db	44
   357  00FE4E  25                 	db	37
   358  00FE4F  64                 	db	100	;'d'
   359  00FE50  2C                 	db	44
   360  00FE51  20                 	db	32
   361  00FE52  74                 	db	116	;'t'
   362  00FE53  63                 	db	99	;'c'
   363  00FE54  6E                 	db	110	;'n'
   364  00FE55  74                 	db	116	;'t'
   365  00FE56  20                 	db	32
   366  00FE57  25                 	db	37
   367  00FE58  64                 	db	100	;'d'
   368  00FE59  00                 	db	0
   369  00FE5A                     STR_12:
   370  00FE5A  44                 	db	68	;'D'
   371  00FE5B  69                 	db	105	;'i'
   372  00FE5C  73                 	db	115	;'s'
   373  00FE5D  74                 	db	116	;'t'
   374  00FE5E  32                 	db	50	;'2'
   375  00FE5F  3D                 	db	61	;'='
   376  00FE60  25                 	db	37
   377  00FE61  64                 	db	100	;'d'
   378  00FE62  2C                 	db	44
   379  00FE63  41                 	db	65	;'A'
   380  00FE64  76                 	db	118	;'v'
   381  00FE65  67                 	db	103	;'g'
   382  00FE66  3D                 	db	61	;'='
   383  00FE67  25                 	db	37
   384  00FE68  64                 	db	100	;'d'
   385  00FE69  00                 	db	0
   386  00FE6A                     STR_14:
   387  00FE6A  44                 	db	68	;'D'
   388  00FE6B  69                 	db	105	;'i'
   389  00FE6C  73                 	db	115	;'s'
   390  00FE6D  74                 	db	116	;'t'
   391  00FE6E  33                 	db	51	;'3'
   392  00FE6F  3D                 	db	61	;'='
   393  00FE70  25                 	db	37
   394  00FE71  64                 	db	100	;'d'
   395  00FE72  2C                 	db	44
   396  00FE73  41                 	db	65	;'A'
   397  00FE74  76                 	db	118	;'v'
   398  00FE75  67                 	db	103	;'g'
   399  00FE76  3D                 	db	61	;'='
   400  00FE77  25                 	db	37
   401  00FE78  64                 	db	100	;'d'
   402  00FE79  00                 	db	0
   403  00FE7A                     STR_25:
   404  00FE7A  33                 	db	51	;'3'
   405  00FE7B  20                 	db	32
   406  00FE7C  2D                 	db	45
   407  00FE7D  20                 	db	32
   408  00FE7E  44                 	db	68	;'D'
   409  00FE7F  61                 	db	97	;'a'
   410  00FE80  74                 	db	116	;'t'
   411  00FE81  65                 	db	101	;'e'
   412  00FE82  26                 	db	38
   413  00FE83  54                 	db	84	;'T'
   414  00FE84  69                 	db	105	;'i'
   415  00FE85  6D                 	db	109	;'m'
   416  00FE86  65                 	db	101	;'e'
   417  00FE87  20                 	db	32
   418  00FE88  00                 	db	0
   419  00FE89                     STR_41:
   420  00FE89  44                 	db	68	;'D'
   421  00FE8A  69                 	db	105	;'i'
   422  00FE8B  73                 	db	115	;'s'
   423  00FE8C  74                 	db	116	;'t'
   424  00FE8D  54                 	db	84	;'T'
   425  00FE8E  6F                 	db	111	;'o'
   426  00FE8F  53                 	db	83	;'S'
   427  00FE90  74                 	db	116	;'t'
   428  00FE91  61                 	db	97	;'a'
   429  00FE92  72                 	db	114	;'r'
   430  00FE93  74                 	db	116	;'t'
   431  00FE94  3A                 	db	58	;':'
   432  00FE95  25                 	db	37
   433  00FE96  64                 	db	100	;'d'
   434  00FE97  00                 	db	0
   435  00FE98                     STR_29:
   436  00FE98  4D                 	db	77	;'M'
   437  00FE99  61                 	db	97	;'a'
   438  00FE9A  63                 	db	99	;'c'
   439  00FE9B  68                 	db	104	;'h'
   440  00FE9C  69                 	db	105	;'i'
   441  00FE9D  6E                 	db	110	;'n'
   442  00FE9E  65                 	db	101	;'e'
   443  00FE9F  20                 	db	32
   444  00FEA0  49                 	db	73	;'I'
   445  00FEA1  6E                 	db	110	;'n'
   446  00FEA2  20                 	db	32
   447  00FEA3  55                 	db	85	;'U'
   448  00FEA4  73                 	db	115	;'s'
   449  00FEA5  65                 	db	101	;'e'
   450  00FEA6  00                 	db	0
   451  00FEA7                     STR_49:
   452  00FEA7  25                 	db	37
   453  00FEA8  30                 	db	48	;'0'
   454  00FEA9  32                 	db	50	;'2'
   455  00FEAA  78                 	db	120	;'x'
   456  00FEAB  2F                 	db	47
   457  00FEAC  25                 	db	37
   458  00FEAD  30                 	db	48	;'0'
   459  00FEAE  32                 	db	50	;'2'
   460  00FEAF  78                 	db	120	;'x'
   461  00FEB0  2F                 	db	47
   462  00FEB1  25                 	db	37
   463  00FEB2  30                 	db	48	;'0'
   464  00FEB3  32                 	db	50	;'2'
   465  00FEB4  78                 	db	120	;'x'
   466  00FEB5  00                 	db	0
   467  00FEB6                     STR_50:
   468  00FEB6  25                 	db	37
   469  00FEB7  30                 	db	48	;'0'
   470  00FEB8  32                 	db	50	;'2'
   471  00FEB9  78                 	db	120	;'x'
   472  00FEBA  3A                 	db	58	;':'
   473  00FEBB  25                 	db	37
   474  00FEBC  30                 	db	48	;'0'
   475  00FEBD  32                 	db	50	;'2'
   476  00FEBE  78                 	db	120	;'x'
   477  00FEBF  3A                 	db	58	;':'
   478  00FEC0  25                 	db	37
   479  00FEC1  30                 	db	48	;'0'
   480  00FEC2  32                 	db	50	;'2'
   481  00FEC3  78                 	db	120	;'x'
   482  00FEC4  00                 	db	0
   483  00FEC5                     STR_38:
   484  00FEC5  4E                 	db	78	;'N'
   485  00FEC6  6F                 	db	111	;'o'
   486  00FEC7  2E                 	db	46
   487  00FEC8  20                 	db	32
   488  00FEC9  50                 	db	80	;'P'
   489  00FECA  6F                 	db	111	;'o'
   490  00FECB  6C                 	db	108	;'l'
   491  00FECC  65                 	db	101	;'e'
   492  00FECD  73                 	db	115	;'s'
   493  00FECE  3A                 	db	58	;':'
   494  00FECF  20                 	db	32
   495  00FED0  25                 	db	37
   496  00FED1  64                 	db	100	;'d'
   497  00FED2  00                 	db	0
   498  00FED3                     STR_37:
   499  00FED3  4E                 	db	78	;'N'
   500  00FED4  6F                 	db	111	;'o'
   501  00FED5  2E                 	db	46
   502  00FED6  20                 	db	32
   503  00FED7  54                 	db	84	;'T'
   504  00FED8  69                 	db	105	;'i'
   505  00FED9  72                 	db	114	;'r'
   506  00FEDA  65                 	db	101	;'e'
   507  00FEDB  73                 	db	115	;'s'
   508  00FEDC  3A                 	db	58	;':'
   509  00FEDD  20                 	db	32
   510  00FEDE  25                 	db	37
   511  00FEDF  64                 	db	100	;'d'
   512  00FEE0  00                 	db	0
   513  00FEE1                     STR_7:
   514  00FEE1  53                 	db	83	;'S'
   515  00FEE2  74                 	db	116	;'t'
   516  00FEE3  65                 	db	101	;'e'
   517  00FEE4  70                 	db	112	;'p'
   518  00FEE5  20                 	db	32
   519  00FEE6  73                 	db	115	;'s'
   520  00FEE7  70                 	db	112	;'p'
   521  00FEE8  65                 	db	101	;'e'
   522  00FEE9  65                 	db	101	;'e'
   523  00FEEA  64                 	db	100	;'d'
   524  00FEEB  20                 	db	32
   525  00FEEC  25                 	db	37
   526  00FEED  64                 	db	100	;'d'
   527  00FEEE  00                 	db	0
   528  00FEEF                     STR_19:
   529  00FEEF  62                 	db	98	;'b'
   530  00FEF0  72                 	db	114	;'r'
   531  00FEF1  65                 	db	101	;'e'
   532  00FEF2  61                 	db	97	;'a'
   533  00FEF3  6B                 	db	107	;'k'
   534  00FEF4  20                 	db	32
   535  00FEF5  68                 	db	104	;'h'
   536  00FEF6  65                 	db	101	;'e'
   537  00FEF7  72                 	db	114	;'r'
   538  00FEF8  65                 	db	101	;'e'
   539  00FEF9  65                 	db	101	;'e'
   540  00FEFA  3F                 	db	63	;'?'
   541  00FEFB  00                 	db	0
   542  00FEFC                     STR_54:
   543  00FEFC  6D                 	db	109	;'m'
   544  00FEFD  6F                 	db	111	;'o'
   545  00FEFE  72                 	db	114	;'r'
   546  00FEFF  65                 	db	101	;'e'
   547  00FF00  20                 	db	32
   548  00FF01  77                 	db	119	;'w'
   549  00FF02  61                 	db	97	;'a'
   550  00FF03  69                 	db	105	;'i'
   551  00FF04  74                 	db	116	;'t'
   552  00FF05  69                 	db	105	;'i'
   553  00FF06  6E                 	db	110	;'n'
   554  00FF07  67                 	db	103	;'g'
   555  00FF08  00                 	db	0
   556  00FF09                     STR_2:
   557  00FF09  53                 	db	83	;'S'
   558  00FF0A  74                 	db	116	;'t'
   559  00FF0B  65                 	db	101	;'e'
   560  00FF0C  70                 	db	112	;'p'
   561  00FF0D  70                 	db	112	;'p'
   562  00FF0E  65                 	db	101	;'e'
   563  00FF0F  72                 	db	114	;'r'
   564  00FF10  20                 	db	32
   565  00FF11  64                 	db	100	;'d'
   566  00FF12  6F                 	db	111	;'o'
   567  00FF13  6E                 	db	110	;'n'
   568  00FF14  65                 	db	101	;'e'
   569  00FF15  00                 	db	0
   570  00FF16                     STR_48:
   571  00FF16  44                 	db	68	;'D'
   572  00FF17  41                 	db	65	;'A'
   573  00FF18  54                 	db	84	;'T'
   574  00FF19  45                 	db	69	;'E'
   575  00FF1A  20                 	db	32
   576  00FF1B  26                 	db	38
   577  00FF1C  20                 	db	32
   578  00FF1D  54                 	db	84	;'T'
   579  00FF1E  49                 	db	73	;'I'
   580  00FF1F  4D                 	db	77	;'M'
   581  00FF20  45                 	db	69	;'E'
   582  00FF21  00                 	db	0
   583  00FF22                     STR_21:
   584  00FF22  73                 	db	115	;'s'
   585  00FF23  74                 	db	116	;'t'
   586  00FF24  65                 	db	101	;'e'
   587  00FF25  70                 	db	112	;'p'
   588  00FF26  73                 	db	115	;'s'
   589  00FF27  61                 	db	97	;'a'
   590  00FF28  64                 	db	100	;'d'
   591  00FF29  6A                 	db	106	;'j'
   592  00FF2A  20                 	db	32
   593  00FF2B  25                 	db	37
   594  00FF2C  64                 	db	100	;'d'
   595  00FF2D  00                 	db	0
   596  00FF2E                     STR_58:
   597  00FF2E  61                 	db	97	;'a'
   598  00FF2F  76                 	db	118	;'v'
   599  00FF30  67                 	db	103	;'g'
   600  00FF31  20                 	db	32
   601  00FF32  64                 	db	100	;'d'
   602  00FF33  69                 	db	105	;'i'
   603  00FF34  73                 	db	115	;'s'
   604  00FF35  74                 	db	116	;'t'
   605  00FF36  20                 	db	32
   606  00FF37  25                 	db	37
   607  00FF38  64                 	db	100	;'d'
   608  00FF39  00                 	db	0
   609  00FF3A                     STR_42:
   610  00FF3A  44                 	db	68	;'D'
   611  00FF3B  69                 	db	105	;'i'
   612  00FF3C  73                 	db	115	;'s'
   613  00FF3D  74                 	db	116	;'t'
   614  00FF3E  54                 	db	84	;'T'
   615  00FF3F  6F                 	db	111	;'o'
   616  00FF40  43                 	db	67	;'C'
   617  00FF41  4C                 	db	76	;'L'
   618  00FF42  3A                 	db	58	;':'
   619  00FF43  25                 	db	37
   620  00FF44  64                 	db	100	;'d'
   621  00FF45  00                 	db	0
   622  00FF46                     STR_24:
   623  00FF46  32                 	db	50	;'2'
   624  00FF47  20                 	db	32
   625  00FF48  2D                 	db	45
   626  00FF49  20                 	db	32
   627  00FF4A  53                 	db	83	;'S'
   628  00FF4B  75                 	db	117	;'u'
   629  00FF4C  6D                 	db	109	;'m'
   630  00FF4D  6D                 	db	109	;'m'
   631  00FF4E  61                 	db	97	;'a'
   632  00FF4F  72                 	db	114	;'r'
   633  00FF50  79                 	db	121	;'y'
   634  00FF51  00                 	db	0
   635  00FF52                     STR_59:
   636  00FF52  70                 	db	112	;'p'
   637  00FF53  6F                 	db	111	;'o'
   638  00FF54  6C                 	db	108	;'l'
   639  00FF55  65                 	db	101	;'e'
   640  00FF56  73                 	db	115	;'s'
   641  00FF57  20                 	db	32
   642  00FF58  64                 	db	100	;'d'
   643  00FF59  20                 	db	32
   644  00FF5A  25                 	db	37
   645  00FF5B  64                 	db	100	;'d'
   646  00FF5C  00                 	db	0
   647  00FF5D                     STR_20:
   648  00FF5D  6D                 	db	109	;'m'
   649  00FF5E  69                 	db	105	;'i'
   650  00FF5F  6E                 	db	110	;'n'
   651  00FF60  69                 	db	105	;'i'
   652  00FF61  6D                 	db	109	;'m'
   653  00FF62  75                 	db	117	;'u'
   654  00FF63  6D                 	db	109	;'m'
   655  00FF64  20                 	db	32
   656  00FF65  25                 	db	37
   657  00FF66  64                 	db	100	;'d'
   658  00FF67  00                 	db	0
   659  00FF68                     STR_60:
   660  00FF68  70                 	db	112	;'p'
   661  00FF69  6F                 	db	111	;'o'
   662  00FF6A  6C                 	db	108	;'l'
   663  00FF6B  65                 	db	101	;'e'
   664  00FF6C  73                 	db	115	;'s'
   665  00FF6D  20                 	db	32
   666  00FF6E  64                 	db	100	;'d'
   667  00FF6F  6F                 	db	111	;'o'
   668  00FF70  6E                 	db	110	;'n'
   669  00FF71  65                 	db	101	;'e'
   670  00FF72  00                 	db	0
   671  00FF73                     STR_3:
   672  00FF73  53                 	db	83	;'S'
   673  00FF74  65                 	db	101	;'e'
   674  00FF75  72                 	db	114	;'r'
   675  00FF76  76                 	db	118	;'v'
   676  00FF77  6F                 	db	111	;'o'
   677  00FF78  20                 	db	32
   678  00FF79  64                 	db	100	;'d'
   679  00FF7A  6F                 	db	111	;'o'
   680  00FF7B  6E                 	db	110	;'n'
   681  00FF7C  65                 	db	101	;'e'
   682  00FF7D  00                 	db	0
   683  00FF7E                     STR_11:
   684  00FF7E  44                 	db	68	;'D'
   685  00FF7F  69                 	db	105	;'i'
   686  00FF80  73                 	db	115	;'s'
   687  00FF81  74                 	db	116	;'t'
   688  00FF82  31                 	db	49	;'1'
   689  00FF83  20                 	db	32
   690  00FF84  3D                 	db	61	;'='
   691  00FF85  20                 	db	32
   692  00FF86  58                 	db	88	;'X'
   693  00FF87  00                 	db	0
   694  00FF88                     STR_13:
   695  00FF88  44                 	db	68	;'D'
   696  00FF89  69                 	db	105	;'i'
   697  00FF8A  73                 	db	115	;'s'
   698  00FF8B  74                 	db	116	;'t'
   699  00FF8C  32                 	db	50	;'2'
   700  00FF8D  20                 	db	32
   701  00FF8E  3D                 	db	61	;'='
   702  00FF8F  20                 	db	32
   703  00FF90  58                 	db	88	;'X'
   704  00FF91  00                 	db	0
   705  00FF92                     STR_15:
   706  00FF92  44                 	db	68	;'D'
   707  00FF93  69                 	db	105	;'i'
   708  00FF94  73                 	db	115	;'s'
   709  00FF95  74                 	db	116	;'t'
   710  00FF96  33                 	db	51	;'3'
   711  00FF97  20                 	db	32
   712  00FF98  3D                 	db	61	;'='
   713  00FF99  20                 	db	32
   714  00FF9A  58                 	db	88	;'X'
   715  00FF9B  00                 	db	0
   716  00FF9C                     STR_17:
   717  00FF9C  44                 	db	68	;'D'
   718  00FF9D  69                 	db	105	;'i'
   719  00FF9E  73                 	db	115	;'s'
   720  00FF9F  74                 	db	116	;'t'
   721  00FFA0  34                 	db	52	;'4'
   722  00FFA1  20                 	db	32
   723  00FFA2  3D                 	db	61	;'='
   724  00FFA3  20                 	db	32
   725  00FFA4  58                 	db	88	;'X'
   726  00FFA5  00                 	db	0
   727  00FFA6                     STR_56:
   728  00FFA6  64                 	db	100	;'d'
   729  00FFA7  75                 	db	117	;'u'
   730  00FFA8  6E                 	db	110	;'n'
   731  00FFA9  20                 	db	32
   732  00FFAA  62                 	db	98	;'b'
   733  00FFAB  72                 	db	114	;'r'
   734  00FFAC  65                 	db	101	;'e'
   735  00FFAD  61                 	db	97	;'a'
   736  00FFAE  6B                 	db	107	;'k'
   737  00FFAF  00                 	db	0
   738  00FFB0                     STR_61:
   739  00FFB0  62                 	db	98	;'b'
   740  00FFB1  61                 	db	97	;'a'
   741  00FFB2  63                 	db	99	;'c'
   742  00FFB3  6B                 	db	107	;'k'
   743  00FFB4  77                 	db	119	;'w'
   744  00FFB5  61                 	db	97	;'a'
   745  00FFB6  72                 	db	114	;'r'
   746  00FFB7  64                 	db	100	;'d'
   747  00FFB8  73                 	db	115	;'s'
   748  00FFB9  00                 	db	0
   749  00FFBA                     STR_55:
   750  00FFBA  64                 	db	100	;'d'
   751  00FFBB  6F                 	db	111	;'o'
   752  00FFBC  6E                 	db	110	;'n'
   753  00FFBD  65                 	db	101	;'e'
   754  00FFBE  20                 	db	32
   755  00FFBF  77                 	db	119	;'w'
   756  00FFC0  61                 	db	97	;'a'
   757  00FFC1  69                 	db	105	;'i'
   758  00FFC2  74                 	db	116	;'t'
   759  00FFC3  00                 	db	0
   760  00FFC4                     STR_23:
   761  00FFC4  31                 	db	49	;'1'
   762  00FFC5  20                 	db	32
   763  00FFC6  2D                 	db	45
   764  00FFC7  20                 	db	32
   765  00FFC8  53                 	db	83	;'S'
   766  00FFC9  74                 	db	116	;'t'
   767  00FFCA  61                 	db	97	;'a'
   768  00FFCB  72                 	db	114	;'r'
   769  00FFCC  74                 	db	116	;'t'
   770  00FFCD  00                 	db	0
   771  00FFCE                     STR_5:
   772  00FFCE  73                 	db	115	;'s'
   773  00FFCF  74                 	db	116	;'t'
   774  00FFD0  65                 	db	101	;'e'
   775  00FFD1  70                 	db	112	;'p'
   776  00FFD2  70                 	db	112	;'p'
   777  00FFD3  70                 	db	112	;'p'
   778  00FFD4  20                 	db	32
   779  00FFD5  25                 	db	37
   780  00FFD6  64                 	db	100	;'d'
   781  00FFD7  00                 	db	0
   782  00FFD8                     STR_1:
   783  00FFD8  63                 	db	99	;'c'
   784  00FFD9  6E                 	db	110	;'n'
   785  00FFDA  74                 	db	116	;'t'
   786  00FFDB  20                 	db	32
   787  00FFDC  69                 	db	105	;'i'
   788  00FFDD  73                 	db	115	;'s'
   789  00FFDE  20                 	db	32
   790  00FFDF  25                 	db	37
   791  00FFE0  64                 	db	100	;'d'
   792  00FFE1  00                 	db	0
   793  00FFE2                     STR_31:
   794  00FFE2  4F                 	db	79	;'O'
   795  00FFE3  70                 	db	112	;'p'
   796  00FFE4  20                 	db	32
   797  00FFE5  54                 	db	84	;'T'
   798  00FFE6  69                 	db	105	;'i'
   799  00FFE7  6D                 	db	109	;'m'
   800  00FFE8  65                 	db	101	;'e'
   801  00FFE9  3A                 	db	58	;':'
   802  00FFEA  00                 	db	0
   803  00FFEB                     STR_18:
   804  00FFEB  6F                 	db	111	;'o'
   805  00FFEC  72                 	db	114	;'r'
   806  00FFED  20                 	db	32
   807  00FFEE  68                 	db	104	;'h'
   808  00FFEF  65                 	db	101	;'e'
   809  00FFF0  72                 	db	114	;'r'
   810  00FFF1  65                 	db	101	;'e'
   811  00FFF2  00                 	db	0
   812  00FFF3                     STR_6:
   813  00FFF3  73                 	db	115	;'s'
   814  00FFF4  74                 	db	116	;'t'
   815  00FFF5  65                 	db	101	;'e'
   816  00FFF6  70                 	db	112	;'p'
   817  00FFF7  31                 	db	49	;'1'
   818  00FFF8  00                 	db	0
   819  00FFF9                     STR_9:
   820  00FFF9  77                 	db	119	;'w'
   821  00FFFA  68                 	db	104	;'h'
   822  00FFFB  61                 	db	97	;'a'
   823  00FFFC  74                 	db	116	;'t'
   824  00FFFD  00                 	db	0
   825  0000                     
   826                           ; #config settings
   827  00FFFE  00                 	db	0	; dummy byte at the end
   828  0000                     
   829                           	psect	cinit
   830  0035BC                     __pcinit:
   831                           	opt callstack 0
   832  0035BC                     start_initialization:
   833                           	opt callstack 0
   834  0035BC                     __initialization:
   835                           	opt callstack 0
   836                           
   837                           ; Initialize objects allocated to COMRAM (5 bytes)
   838                           ; load TBLPTR registers with __pidataCOMRAM
   839  0035BC  0E40               	movlw	low __pidataCOMRAM
   840  0035BE  6EF6               	movwf	tblptrl,c
   841  0035C0  0E3B               	movlw	high __pidataCOMRAM
   842  0035C2  6EF7               	movwf	tblptrh,c
   843  0035C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   844  0035C6  6EF8               	movwf	tblptru,c
   845  0035C8  EE00  F069         	lfsr	0,__pdataCOMRAM
   846  0035CC  EE10 F005          	lfsr	1,5
   847  0035D0                     copy_data0:
   848  0035D0  0009               	tblrd		*+
   849  0035D2  CFF5 FFEE          	movff	tablat,postinc0
   850  0035D6  50E5               	movf	postdec1,w,c
   851  0035D8  50E1               	movf	fsr1l,w,c
   852  0035DA  E1FA               	bnz	copy_data0
   853                           
   854                           ; Clear objects allocated to BANK2 (128 bytes)
   855  0035DC  EE02  F000         	lfsr	0,__pbssBANK2
   856  0035E0  0E80               	movlw	128
   857  0035E2                     clear_0:
   858  0035E2  6AEE               	clrf	postinc0,c
   859  0035E4  06E8               	decf	wreg,f,c
   860  0035E6  E1FD               	bnz	clear_0
   861                           
   862                           ; Clear objects allocated to BANK1 (60 bytes)
   863  0035E8  EE01  F05C         	lfsr	0,__pbssBANK1
   864  0035EC  0E3C               	movlw	60
   865  0035EE                     clear_1:
   866  0035EE  6AEE               	clrf	postinc0,c
   867  0035F0  06E8               	decf	wreg,f,c
   868  0035F2  E1FD               	bnz	clear_1
   869                           
   870                           ; Clear objects allocated to BANK0 (1 bytes)
   871  0035F4  0100               	movlb	0
   872  0035F6  6BFF               	clrf	__pbssBANK0& (0+255),b
   873                           
   874                           ; Clear objects allocated to COMRAM (49 bytes)
   875  0035F8  EE00  F038         	lfsr	0,__pbssCOMRAM
   876  0035FC  0E31               	movlw	49
   877  0035FE                     clear_2:
   878  0035FE  6AEE               	clrf	postinc0,c
   879  003600  06E8               	decf	wreg,f,c
   880  003602  E1FD               	bnz	clear_2
   881  003604                     end_of_initialization:
   882                           	opt callstack 0
   883  003604                     __end_of__initialization:
   884                           	opt callstack 0
   885  003604  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   886  003606  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   887  003608  0E00               	movlw	low (__Lmediumconst shr (0+16))
   888  00360A  6EF8               	movwf	tblptru,c
   889  00360C  0100               	movlb	0
   890  00360E  EFB5  F006         	goto	_main	;jump to C main() function
   891                           
   892                           	psect	bssCOMRAM
   893  000038                     __pbssCOMRAM:
   894                           	opt callstack 0
   895  000038                     _sum:
   896                           	opt callstack 0
   897  000038                     	ds	8
   898  000040                     _sumf:
   899                           	opt callstack 0
   900  000040                     	ds	4
   901  000044                     _avg_dist:
   902                           	opt callstack 0
   903  000044                     	ds	4
   904  000048                     _nout:
   905                           	opt callstack 0
   906  000048                     	ds	2
   907  00004A                     _width:
   908                           	opt callstack 0
   909  00004A                     	ds	2
   910  00004C                     _prec:
   911                           	opt callstack 0
   912  00004C                     	ds	2
   913  00004E                     _flags:
   914                           	opt callstack 0
   915  00004E                     	ds	2
   916  000050                     _meas:
   917                           	opt callstack 0
   918  000050                     	ds	2
   919  000052                     _poles_detected:
   920                           	opt callstack 0
   921  000052                     	ds	2
   922  000054                     _tires_deployed:
   923                           	opt callstack 0
   924  000054                     	ds	2
   925  000056                     _tick:
   926                           	opt callstack 0
   927  000056                     	ds	2
   928  000058                     _sens:
   929                           	opt callstack 0
   930  000058                     	ds	2
   931  00005A                     _b:
   932                           	opt callstack 0
   933  00005A                     	ds	2
   934  00005C                     _timer_count:
   935                           	opt callstack 0
   936  00005C                     	ds	2
   937  00005E                     _data:
   938                           	opt callstack 0
   939  00005E                     	ds	1
   940  00005F                     _keypress:
   941                           	opt callstack 0
   942  00005F                     	ds	1
   943  000060                     _counter:
   944                           	opt callstack 0
   945  000060                     	ds	1
   946  000061                     _a:
   947                           	opt callstack 0
   948  000061                     	ds	8
   949                           
   950                           	psect	dataCOMRAM
   951  000069                     __pdataCOMRAM:
   952                           	opt callstack 0
   953  000069                     _dists:
   954                           	opt callstack 0
   955  000069                     	ds	4
   956  00006D                     _send:
   957                           	opt callstack 0
   958  00006D                     	ds	1
   959                           
   960                           	psect	bssBANK0
   961  0000FF                     __pbssBANK0:
   962                           	opt callstack 0
   963  0000FF                     _temp:
   964                           	opt callstack 0
   965  0000FF                     	ds	1
   966                           
   967                           	psect	bssBANK1
   968  00015C                     __pbssBANK1:
   969                           	opt callstack 0
   970  00015C                     _prev_dist_final:
   971                           	opt callstack 0
   972  00015C                     	ds	8
   973  000164                     _time:
   974                           	opt callstack 0
   975  000164                     	ds	7
   976  00016B                     _pressed:
   977                           	opt callstack 0
   978  00016B                     	ds	2
   979  00016D                     _i:
   980                           	opt callstack 0
   981  00016D                     	ds	2
   982  00016F                     _disp:
   983                           	opt callstack 0
   984  00016F                     	ds	2
   985  000171                     _state:
   986                           	opt callstack 0
   987  000171                     	ds	2
   988  000173                     _temp_int:
   989                           	opt callstack 0
   990  000173                     	ds	2
   991  000175                     _cnt:
   992                           	opt callstack 0
   993  000175                     	ds	2
   994  000177                     _key_was_pressed:
   995                           	opt callstack 0
   996  000177                     	ds	1
   997  000178                     _dbuf:
   998                           	opt callstack 0
   999  000178                     	ds	32
  1000                           
  1001                           	psect	bssBANK2
  1002  000200                     __pbssBANK2:
  1003                           	opt callstack 0
  1004  000200                     _Pole:
  1005                           	opt callstack 0
  1006  000200                     	ds	80
  1007  000250                     _dist_final:
  1008                           	opt callstack 0
  1009  000250                     	ds	48
  1010                           
  1011                           	psect	cstackBANK2
  1012  000280                     __pcstackBANK2:
  1013                           	opt callstack 0
  1014  000280                     main@Pole:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 80 bytes @ 0x0
  1018  000280                     	ds	82
  1019  0002D2                     main@pole_cl_dist:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x52
  1023  0002D2                     	ds	2
  1024  0002D4                     main@steps2_adj:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x54
  1028  0002D4                     	ds	2
  1029  0002D6                     main@i:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x56
  1033  0002D6                     	ds	2
  1034  0002D8                     main@i_1018:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x58
  1038  0002D8                     	ds	2
  1039  0002DA                     main@act_done:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x5A
  1043  0002DA                     	ds	1
  1044  0002DB                     main@arduino_stopped:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x5B
  1048  0002DB                     	ds	1
  1049  0002DC                     main@stack:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x5C
  1053  0002DC                     	ds	2
  1054  0002DE                     main@k:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x5E
  1058  0002DE                     	ds	2
  1059  0002E0                     main@t_count:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x60
  1063  0002E0                     	ds	2
  1064  0002E2                     main@t_dep:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x62
  1068  0002E2                     	ds	2
  1069  0002E4                     main@i_1026:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x64
  1073  0002E4                     	ds	2
  1074  0002E6                     main@poles_detected:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x66
  1078  0002E6                     	ds	2
  1079  0002E8                     main@prev_avg_dist:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x68
  1083  0002E8                     	ds	4
  1084                           
  1085                           	psect	cstackBANK1
  1086  000100                     __pcstackBANK1:
  1087                           	opt callstack 0
  1088  000100                     ??_stepper2:
  1089  000100                     ??_stepper2_back:
  1090  000100                     ??_UI_main:
  1091  000100                     stepper@count_stepper:
  1092                           	opt callstack 0
  1093  000100                     number_deploy@tires_t:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x0
  1097  000100                     	ds	1
  1098  000101                     stepper2_back@direction:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x1
  1102  000101                     	ds	1
  1103  000102                     stepper@i:
  1104                           	opt callstack 0
  1105  000102                     stepper2_back@count_stepper:
  1106                           	opt callstack 0
  1107  000102                     ultrasonic_main@sensed:
  1108                           	opt callstack 0
  1109  000102                     number_deploy@tires_detected:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x2
  1113  000102                     	ds	2
  1114  000104                     stepper@i_376:
  1115                           	opt callstack 0
  1116  000104                     stepper2_back@i:
  1117                           	opt callstack 0
  1118  000104                     ultrasonic_main@step2_offset:
  1119                           	opt callstack 0
  1120  000104                     number_deploy@t_count:
  1121                           	opt callstack 0
  1122  000104                     UI_main@Pole:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 80 bytes @ 0x4
  1126  000104                     	ds	1
  1127  000105                     stepper2@i:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x5
  1131  000105                     	ds	1
  1132  000106                     ultrasonic_main@steps2_adj:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x6
  1136  000106                     	ds	1
  1137  000107                     stepper2@i_384:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x7
  1141  000107                     	ds	1
  1142  000108                     ultrasonic_main@min_us_dist_914:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x8
  1146  000108                     	ds	1
  1147  000109                     stepper2@count_stepper:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x9
  1151  000109                     	ds	2
  1152  00010B                     stepper2@direction:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 1 bytes @ 0xB
  1156  00010B                     	ds	1
  1157  00010C                     actuators_main@stack:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 2 bytes @ 0xC
  1161  00010C                     	ds	2
  1162  00010E                     actuators_main@steps2_adj:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0xE
  1166  00010E                     	ds	2
  1167  000110                     ??_actuators_main:
  1168                           
  1169                           ; 1 bytes @ 0x10
  1170  000110                     	ds	2
  1171  000112                     actuators_main@act_cnt:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x12
  1175  000112                     	ds	66
  1176  000154                     UI_main@keypress:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x54
  1180  000154                     	ds	1
  1181  000155                     UI_main@tick:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x55
  1185  000155                     	ds	4
  1186  000159                     UI_main@i:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x59
  1190  000159                     	ds	1
  1191  00015A                     ??_main:
  1192                           
  1193                           ; 1 bytes @ 0x5A
  1194  00015A                     	ds	2
  1195                           
  1196                           	psect	cstackBANK0
  1197  000080                     __pcstackBANK0:
  1198                           	opt callstack 0
  1199  000080                     ??_I2C_Master_Wait:
  1200  000080                     ??_servoRotate0:
  1201  000080                     ??_servoRotate180:
  1202  000080                     ??_trig:
  1203  000080                     ?_strlen:
  1204                           	opt callstack 0
  1205  000080                     ?_isupper:
  1206                           	opt callstack 0
  1207  000080                     ?_isalpha:
  1208                           	opt callstack 0
  1209  000080                     ?_isdigit:
  1210                           	opt callstack 0
  1211  000080                     ?_isspace:
  1212                           	opt callstack 0
  1213  000080                     ?_islower:
  1214                           	opt callstack 0
  1215  000080                     ?_min:
  1216                           	opt callstack 0
  1217  000080                     ?___wmul:
  1218                           	opt callstack 0
  1219  000080                     ?___awdiv:
  1220                           	opt callstack 0
  1221  000080                     ?___lldiv:
  1222                           	opt callstack 0
  1223  000080                     ?___llmod:
  1224                           	opt callstack 0
  1225  000080                     ?___aodiv:
  1226                           	opt callstack 0
  1227  000080                     ?___aomod:
  1228                           	opt callstack 0
  1229  000080                     pulse_e@interruptState:
  1230                           	opt callstack 0
  1231  000080                     min@array:
  1232                           	opt callstack 0
  1233  000080                     ___wmul@multiplier:
  1234                           	opt callstack 0
  1235  000080                     ___awdiv@dividend:
  1236                           	opt callstack 0
  1237  000080                     isalpha@c:
  1238                           	opt callstack 0
  1239  000080                     isdigit@c:
  1240                           	opt callstack 0
  1241  000080                     isspace@c:
  1242                           	opt callstack 0
  1243  000080                     isupper@c:
  1244                           	opt callstack 0
  1245  000080                     strlen@s:
  1246                           	opt callstack 0
  1247  000080                     islower@c:
  1248                           	opt callstack 0
  1249  000080                     ___lldiv@dividend:
  1250                           	opt callstack 0
  1251  000080                     ___llmod@dividend:
  1252                           	opt callstack 0
  1253  000080                     ___aodiv@dividend:
  1254                           	opt callstack 0
  1255  000080                     ___aomod@dividend:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 8 bytes @ 0x0
  1259  000080                     	ds	1
  1260  000081                     I2C_Master_Read@ackBit:
  1261                           	opt callstack 0
  1262  000081                     send_nibble@data:
  1263                           	opt callstack 0
  1264  000081                     I2C_Master_Write@byteToWrite:
  1265                           	opt callstack 0
  1266  000081                     servoRotate0@i:
  1267                           	opt callstack 0
  1268  000081                     servoRotate180@i:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x1
  1272  000081                     	ds	1
  1273  000082                     ??_isupper:
  1274  000082                     ??_isalpha:
  1275  000082                     ??_isdigit:
  1276  000082                     ??_isspace:
  1277  000082                     ??_islower:
  1278  000082                     I2C_Master_Read@receivedByte:
  1279                           	opt callstack 0
  1280  000082                     send_byte@data:
  1281                           	opt callstack 0
  1282  000082                     min@size:
  1283                           	opt callstack 0
  1284  000082                     ___wmul@multiplicand:
  1285                           	opt callstack 0
  1286  000082                     ___awdiv@divisor:
  1287                           	opt callstack 0
  1288  000082                     strlen@a:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x2
  1292  000082                     	ds	1
  1293  000083                     ??_servo:
  1294  000083                     lcdInst@data:
  1295                           	opt callstack 0
  1296  000083                     putch@data:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x3
  1300  000083                     	ds	1
  1301  000084                     ??_initLCD:
  1302  000084                     ??_min:
  1303  000084                     ___awdiv@counter:
  1304                           	opt callstack 0
  1305  000084                     ___wmul@product:
  1306                           	opt callstack 0
  1307  000084                     fputc@c:
  1308                           	opt callstack 0
  1309  000084                     ___lldiv@divisor:
  1310                           	opt callstack 0
  1311  000084                     ___llmod@divisor:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x4
  1315  000084                     	ds	1
  1316  000085                     ___awdiv@sign:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x5
  1320  000085                     	ds	1
  1321  000086                     ?_toupper:
  1322                           	opt callstack 0
  1323  000086                     _isspace$1610:
  1324                           	opt callstack 0
  1325  000086                     ___awdiv@quotient:
  1326                           	opt callstack 0
  1327  000086                     fputc@fp:
  1328                           	opt callstack 0
  1329  000086                     toupper@c:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x6
  1333  000086                     	ds	1
  1334  000087                     ?_atoi:
  1335                           	opt callstack 0
  1336  000087                     min@minimum:
  1337                           	opt callstack 0
  1338  000087                     atoi@s:
  1339                           	opt callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x7
  1342  000087                     	ds	1
  1343  000088                     ??_fputc:
  1344  000088                     ??_toupper:
  1345  000088                     ___llmod@counter:
  1346                           	opt callstack 0
  1347  000088                     ___lldiv@quotient:
  1348                           	opt callstack 0
  1349  000088                     ___aodiv@divisor:
  1350                           	opt callstack 0
  1351  000088                     ___aomod@divisor:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 8 bytes @ 0x8
  1355  000088                     	ds	1
  1356  000089                     ??_atoi:
  1357  000089                     min@i:
  1358                           	opt callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x9
  1361  000089                     	ds	3
  1362  00008C                     ___lldiv@counter:
  1363                           	opt callstack 0
  1364  00008C                     _toupper$1675:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 2 bytes @ 0xC
  1368  00008C                     	ds	1
  1369  00008D                     atoi@neg:
  1370                           	opt callstack 0
  1371  00008D                     fputs@s:
  1372                           	opt callstack 0
  1373  00008D                     I2C_Master_Init@clockFreq:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 4 bytes @ 0xD
  1377  00008D                     	ds	2
  1378  00008F                     _atoi$1583:
  1379                           	opt callstack 0
  1380  00008F                     fputs@fp:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 2 bytes @ 0xF
  1384  00008F                     	ds	1
  1385  000090                     ___aodiv@counter:
  1386                           	opt callstack 0
  1387  000090                     ___aomod@counter:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 1 bytes @ 0x10
  1391  000090                     	ds	1
  1392  000091                     ??_I2C_Master_Init:
  1393  000091                     ___aodiv@sign:
  1394                           	opt callstack 0
  1395  000091                     ___aomod@sign:
  1396                           	opt callstack 0
  1397  000091                     fputs@c:
  1398                           	opt callstack 0
  1399  000091                     _atoi$1585:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x11
  1403  000091                     	ds	1
  1404  000092                     ?_abs:
  1405                           	opt callstack 0
  1406  000092                     abs@a:
  1407                           	opt callstack 0
  1408  000092                     fputs@i:
  1409                           	opt callstack 0
  1410  000092                     ___aodiv@quotient:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 8 bytes @ 0x12
  1414  000092                     	ds	1
  1415  000093                     _atoi$1584:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 1 bytes @ 0x13
  1419  000093                     	ds	1
  1420  000094                     ??_abs:
  1421  000094                     ?_pad:
  1422                           	opt callstack 0
  1423  000094                     pad@fp:
  1424                           	opt callstack 0
  1425  000094                     atoi@n:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x14
  1429  000094                     	ds	1
  1430  000095                     
  1431                           ; 1 bytes @ 0x15
  1432  000095                     	ds	1
  1433  000096                     pad@buf:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x16
  1437  000096                     	ds	2
  1438  000098                     pad@p:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x18
  1442  000098                     	ds	2
  1443  00009A                     ??_pad:
  1444                           
  1445                           ; 1 bytes @ 0x1A
  1446  00009A                     	ds	1
  1447  00009B                     pad@i:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x1B
  1451  00009B                     	ds	2
  1452  00009D                     pad@w:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x1D
  1456  00009D                     	ds	2
  1457  00009F                     ?_dtoa:
  1458                           	opt callstack 0
  1459  00009F                     ?_xtoa:
  1460                           	opt callstack 0
  1461  00009F                     dtoa@fp:
  1462                           	opt callstack 0
  1463  00009F                     xtoa@fp:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x1F
  1467  00009F                     	ds	2
  1468  0000A1                     dtoa@d:
  1469                           	opt callstack 0
  1470  0000A1                     xtoa@d:
  1471                           	opt callstack 0
  1472                           
  1473                           ; 8 bytes @ 0x21
  1474  0000A1                     	ds	8
  1475  0000A9                     ??_dtoa:
  1476  0000A9                     xtoa@x:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x29
  1480  0000A9                     	ds	1
  1481  0000AA                     ??_xtoa:
  1482                           
  1483                           ; 1 bytes @ 0x2A
  1484  0000AA                     	ds	7
  1485  0000B1                     _dtoa$1099:
  1486                           	opt callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x31
  1489  0000B1                     	ds	1
  1490  0000B2                     _xtoa$1110:
  1491                           	opt callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x32
  1494  0000B2                     	ds	1
  1495  0000B3                     dtoa@p:
  1496                           	opt callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x33
  1499  0000B3                     	ds	1
  1500  0000B4                     _xtoa$1111:
  1501                           	opt callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x34
  1504  0000B4                     	ds	1
  1505  0000B5                     dtoa@w:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x35
  1509  0000B5                     	ds	1
  1510  0000B6                     xtoa@p:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x36
  1514  0000B6                     	ds	1
  1515  0000B7                     dtoa@s:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x37
  1519  0000B7                     	ds	1
  1520  0000B8                     xtoa@w:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x38
  1524  0000B8                     	ds	1
  1525  0000B9                     dtoa@n:
  1526                           	opt callstack 0
  1527                           
  1528                           ; 8 bytes @ 0x39
  1529  0000B9                     	ds	1
  1530  0000BA                     xtoa@n:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 8 bytes @ 0x3A
  1534  0000BA                     	ds	7
  1535  0000C1                     dtoa@i:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x41
  1539  0000C1                     	ds	1
  1540  0000C2                     xtoa@i:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x42
  1544  0000C2                     	ds	2
  1545  0000C4                     xtoa@c:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x44
  1549  0000C4                     	ds	2
  1550  0000C6                     ?_vfpfcnvrt:
  1551                           	opt callstack 0
  1552  0000C6                     vfpfcnvrt@fp:
  1553                           	opt callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x46
  1556  0000C6                     	ds	2
  1557  0000C8                     vfpfcnvrt@fmt:
  1558                           	opt callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x48
  1561  0000C8                     	ds	2
  1562  0000CA                     vfpfcnvrt@ap:
  1563                           	opt callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x4A
  1566  0000CA                     	ds	2
  1567  0000CC                     ??_vfpfcnvrt:
  1568                           
  1569                           ; 1 bytes @ 0x4C
  1570  0000CC                     	ds	4
  1571  0000D0                     vfpfcnvrt@ll:
  1572                           	opt callstack 0
  1573                           
  1574                           ; 8 bytes @ 0x50
  1575  0000D0                     	ds	8
  1576  0000D8                     vfpfcnvrt@llu:
  1577                           	opt callstack 0
  1578                           
  1579                           ; 8 bytes @ 0x58
  1580  0000D8                     	ds	8
  1581  0000E0                     vfpfcnvrt@c:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 1 bytes @ 0x60
  1585  0000E0                     	ds	1
  1586  0000E1                     vfpfcnvrt@done:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 2 bytes @ 0x61
  1590  0000E1                     	ds	2
  1591  0000E3                     _vfpfcnvrt$1125:
  1592                           	opt callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x63
  1595  0000E3                     	ds	2
  1596  0000E5                     ?_vfprintf:
  1597                           	opt callstack 0
  1598  0000E5                     vfprintf@fp:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x65
  1602  0000E5                     	ds	2
  1603  0000E7                     vfprintf@fmt:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x67
  1607  0000E7                     	ds	2
  1608  0000E9                     vfprintf@ap:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x69
  1612  0000E9                     	ds	2
  1613  0000EB                     vfprintf@cfmt:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 2 bytes @ 0x6B
  1617  0000EB                     	ds	2
  1618  0000ED                     ?_printf:
  1619                           	opt callstack 0
  1620  0000ED                     printf@fmt:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x6D
  1624  0000ED                     	ds	8
  1625  0000F5                     
  1626                           ; 1 bytes @ 0x75
  1627  0000F5                     	ds	2
  1628  0000F7                     printf@ap:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x77
  1632  0000F7                     	ds	2
  1633  0000F9                     ??_brake:
  1634  0000F9                     ??_print_echo:
  1635  0000F9                     ?_number_deploy:
  1636                           	opt callstack 0
  1637  0000F9                     full_drive@stepper_no:
  1638                           	opt callstack 0
  1639  0000F9                     number_deploy@avg_dist:
  1640                           	opt callstack 0
  1641  0000F9                     UI_main@t_dep:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x79
  1645  0000F9                     	ds	1
  1646  0000FA                     ?_ultrasonic_main:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x7A
  1650  0000FA                     	ds	1
  1651  0000FB                     ??_full_drive:
  1652  0000FB                     number_deploy@poles_detected:
  1653                           	opt callstack 0
  1654  0000FB                     UI_main@poles_detected:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 2 bytes @ 0x7B
  1658  0000FB                     	ds	1
  1659  0000FC                     ??_ultrasonic_main:
  1660  0000FC                     full_drive@direction:
  1661                           	opt callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x7C
  1664  0000FC                     	ds	1
  1665  0000FD                     ??_number_deploy:
  1666  0000FD                     stepper@stack:
  1667                           	opt callstack 0
  1668  0000FD                     stepper2@steps2_adj:
  1669                           	opt callstack 0
  1670  0000FD                     stepper2_back@steps2_adj:
  1671                           	opt callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x7D
  1674  0000FD                     	ds	2
  1675  0000FF                     
  1676                           ; 1 bytes @ 0x7F
  1677                           
  1678                           	psect	cstackCOMRAM
  1679  000001                     __pcstackCOMRAM:
  1680                           	opt callstack 0
  1681  000001                     ?i2___awdiv:
  1682                           	opt callstack 0
  1683  000001                     ?___xxtofl:
  1684                           	opt callstack 0
  1685  000001                     i2___awdiv@dividend:
  1686                           	opt callstack 0
  1687  000001                     ___xxtofl@val:
  1688                           	opt callstack 0
  1689                           
  1690                           ; 4 bytes @ 0x0
  1691  000001                     	ds	2
  1692  000003                     i2___awdiv@divisor:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x2
  1696  000003                     	ds	2
  1697  000005                     ??___xxtofl:
  1698  000005                     i2___awdiv@counter:
  1699                           	opt callstack 0
  1700                           
  1701                           ; 1 bytes @ 0x4
  1702  000005                     	ds	1
  1703  000006                     i2___awdiv@sign:
  1704                           	opt callstack 0
  1705                           
  1706                           ; 1 bytes @ 0x5
  1707  000006                     	ds	1
  1708  000007                     i2___awdiv@quotient:
  1709                           	opt callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x6
  1712  000007                     	ds	2
  1713  000009                     ___xxtofl@sign:
  1714                           	opt callstack 0
  1715                           
  1716                           ; 1 bytes @ 0x8
  1717  000009                     	ds	1
  1718  00000A                     ___xxtofl@exp:
  1719                           	opt callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x9
  1722  00000A                     	ds	1
  1723  00000B                     ___xxtofl@arg:
  1724                           	opt callstack 0
  1725                           
  1726                           ; 4 bytes @ 0xA
  1727  00000B                     	ds	4
  1728  00000F                     ?___fldiv:
  1729                           	opt callstack 0
  1730  00000F                     ___fldiv@b:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 4 bytes @ 0xE
  1734  00000F                     	ds	4
  1735  000013                     ___fldiv@a:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 4 bytes @ 0x12
  1739  000013                     	ds	4
  1740  000017                     ??___fldiv:
  1741                           
  1742                           ; 1 bytes @ 0x16
  1743  000017                     	ds	4
  1744  00001B                     ___fldiv@rem:
  1745                           	opt callstack 0
  1746                           
  1747                           ; 4 bytes @ 0x1A
  1748  00001B                     	ds	4
  1749  00001F                     ___fldiv@sign:
  1750                           	opt callstack 0
  1751                           
  1752                           ; 1 bytes @ 0x1E
  1753  00001F                     	ds	1
  1754  000020                     ___fldiv@new_exp:
  1755                           	opt callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x1F
  1758  000020                     	ds	2
  1759  000022                     ___fldiv@grs:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 4 bytes @ 0x21
  1763  000022                     	ds	4
  1764  000026                     ___fldiv@bexp:
  1765                           	opt callstack 0
  1766                           
  1767                           ; 1 bytes @ 0x25
  1768  000026                     	ds	1
  1769  000027                     ___fldiv@aexp:
  1770                           	opt callstack 0
  1771                           
  1772                           ; 1 bytes @ 0x26
  1773  000027                     	ds	1
  1774  000028                     ?___fltol:
  1775                           	opt callstack 0
  1776  000028                     ___fltol@f1:
  1777                           	opt callstack 0
  1778                           
  1779                           ; 4 bytes @ 0x27
  1780  000028                     	ds	4
  1781  00002C                     ??___fltol:
  1782                           
  1783                           ; 1 bytes @ 0x2B
  1784  00002C                     	ds	4
  1785  000030                     ___fltol@sign1:
  1786                           	opt callstack 0
  1787                           
  1788                           ; 1 bytes @ 0x2F
  1789  000030                     	ds	1
  1790  000031                     ___fltol@exp1:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 1 bytes @ 0x30
  1794  000031                     	ds	1
  1795  000032                     ??_echo:
  1796                           
  1797                           ; 1 bytes @ 0x31
  1798  000032                     	ds	4
  1799  000036                     ??_ISR:
  1800                           
  1801                           ; 1 bytes @ 0x35
  1802  000036                     	ds	2
  1803                           
  1804 ;;
  1805 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1806 ;;
  1807 ;; *************** function _main *****************
  1808 ;; Defined at:
  1809 ;;		line 715 in file "main.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  k               2   94[BANK2 ] int 
  1814 ;;  i               2   88[BANK2 ] int 
  1815 ;;  i               2   86[BANK2 ] int 
  1816 ;;  i               2  100[BANK2 ] int 
  1817 ;;  pole_cl_dist    2   82[BANK2 ] int 
  1818 ;;  Pole           80    0[BANK2 ] struct Poles[10]
  1819 ;;  prev_avg_dis    4  104[BANK2 ] volatile long 
  1820 ;;  poles_detect    2  102[BANK2 ] int 
  1821 ;;  t_dep           2   98[BANK2 ] int 
  1822 ;;  t_count         2   96[BANK2 ] int 
  1823 ;;  stack           2   92[BANK2 ] int 
  1824 ;;  steps2_adj      2   84[BANK2 ] int 
  1825 ;;  read            2    0        int 
  1826 ;;  arduino_stop    1   91[BANK2 ] _Bool 
  1827 ;;  act_done        1   90[BANK2 ] _Bool 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Locals:         0       0       0     108       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Totals:         0       0       2     108       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;Total ram usage:      110 bytes
  1842 ;; Hardware stack levels required when called:   17
  1843 ;; This function calls:
  1844 ;;		_UI_main
  1845 ;;		___wmul
  1846 ;;		_actuators_main
  1847 ;;		_backwards
  1848 ;;		_brake
  1849 ;;		_initLCD
  1850 ;;		_lcdInst
  1851 ;;		_number_deploy
  1852 ;;		_printf
  1853 ;;		_start
  1854 ;;		_ultrasonic_main
  1855 ;; This function is called by:
  1856 ;;		Startup code after reset
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text0
  1861  000D6A                     __ptext0:
  1862                           	opt callstack 0
  1863  000D6A                     _main:
  1864                           	opt callstack 14
  1865                           
  1866                           ;main.c: 717:     int t_dep=0;
  1867                           
  1868                           ;incstack = 0
  1869  000D6A  0E00               	movlw	0
  1870  000D6C  0102               	movlb	2	; () banked
  1871  000D6E  6FE3               	movwf	(main@t_dep+1)& (0+255),b
  1872  000D70  0E00               	movlw	0
  1873  000D72  6FE2               	movwf	main@t_dep& (0+255),b
  1874                           
  1875                           ;main.c: 718:     int t_count;;main.c: 719:  TRISD = 0x00;
  1876  000D74  0E00               	movlw	0
  1877  000D76  6E95               	movwf	3989,c	;volatile
  1878                           
  1879                           ; BSR set to: 2
  1880                           ;main.c: 720:  GIE = 1;
  1881  000D78  8EF2               	bsf	4082,7,c	;volatile
  1882                           
  1883                           ;main.c: 722:     ADCON1=0x0F;
  1884  000D7A  0E0F               	movlw	15
  1885  000D7C  6EC1               	movwf	4033,c	;volatile
  1886                           
  1887                           ; BSR set to: 2
  1888                           ;main.c: 724:  initLCD();
  1889  000D7E  EC0B  F01A         	call	_initLCD	;wreg free
  1890                           
  1891                           ;main.c: 726:  T1CON = 0x10;
  1892  000D82  0E10               	movlw	16
  1893  000D84  6ECD               	movwf	4045,c	;volatile
  1894                           
  1895                           ;main.c: 727:     int poles_detected=0;
  1896  000D86  0E00               	movlw	0
  1897  000D88  0102               	movlb	2	; () banked
  1898  000D8A  6FE7               	movwf	(main@poles_detected+1)& (0+255),b
  1899  000D8C  0E00               	movlw	0
  1900  000D8E  6FE6               	movwf	main@poles_detected& (0+255),b
  1901                           
  1902                           ; BSR set to: 2
  1903                           ;main.c: 729:     volatile long prev_avg_dist=0;
  1904                           
  1905                           ; BSR set to: 2
  1906  000D90  0E00               	movlw	0
  1907  000D92  6FE8               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1908  000D94  0E00               	movlw	0
  1909  000D96  6FE9               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1910  000D98  0E00               	movlw	0
  1911  000D9A  6FEA               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1912  000D9C  0E00               	movlw	0
  1913  000D9E  6FEB               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1914                           
  1915                           ; BSR set to: 2
  1916                           ;main.c: 731:     TRISAbits.RA4 = 0;
  1917  000DA0  9892               	bcf	3986,4,c	;volatile
  1918                           
  1919                           ; BSR set to: 2
  1920                           ;main.c: 732:     PORTAbits.RA4 = LATAbits.LATA4;
  1921  000DA2  A889               	btfss	3977,4,c	;volatile
  1922  000DA4  D002               	bra	u8555
  1923  000DA6  8880               	bsf	3968,4,c	;volatile
  1924  000DA8  D001               	bra	u8557
  1925  000DAA                     u8555:
  1926  000DAA  9880               	bcf	3968,4,c	;volatile
  1927  000DAC                     u8557:
  1928                           
  1929                           ;main.c: 735:     _Bool arduino_stopped = 0;
  1930  000DAC  0E00               	movlw	0
  1931  000DAE  0102               	movlb	2	; () banked
  1932  000DB0  6FDB               	movwf	main@arduino_stopped& (0+255),b
  1933                           
  1934                           ; BSR set to: 2
  1935                           ;main.c: 737:     Poles Pole[10];;main.c: 745:     if (~sens){
  1936  000DB2  2858               	incf	_sens,w,c	;volatile
  1937  000DB4  E103               	bnz	u8560
  1938  000DB6  2859               	incf	_sens+1,w,c	;volatile
  1939  000DB8  B4D8               	btfsc	status,2,c
  1940  000DBA  D00B               	goto	l7948
  1941  000DBC                     u8560:
  1942                           
  1943                           ; BSR set to: 2
  1944                           ;main.c: 746:         UI_main( t_dep, poles_detected);
  1945  000DBC  0E00               	movlw	0
  1946  000DBE  0100               	movlb	0	; () banked
  1947  000DC0  6FFA               	movwf	(UI_main@t_dep+1)& (0+255),b
  1948  000DC2  0E00               	movlw	0
  1949  000DC4  6FF9               	movwf	UI_main@t_dep& (0+255),b
  1950  000DC6  0E00               	movlw	0
  1951  000DC8  6FFC               	movwf	(UI_main@poles_detected+1)& (0+255),b
  1952  000DCA  0E00               	movlw	0
  1953  000DCC  6FFB               	movwf	UI_main@poles_detected& (0+255),b
  1954  000DCE  EC09  F000         	call	_UI_main	;wreg free
  1955  000DD2                     l7948:
  1956                           
  1957                           ;main.c: 749:         PORTAbits.RA4 = LATAbits.LATA4;
  1958  000DD2  A889               	btfss	3977,4,c	;volatile
  1959  000DD4  D002               	bra	u8575
  1960  000DD6  8880               	bsf	3968,4,c	;volatile
  1961  000DD8  D001               	bra	u8577
  1962  000DDA                     u8575:
  1963  000DDA  9880               	bcf	3968,4,c	;volatile
  1964  000DDC                     u8577:
  1965                           
  1966                           ;main.c: 754:         if ((poles_detected <10)&&(avg_dist<4000)){
  1967  000DDC  0102               	movlb	2	; () banked
  1968  000DDE  BFE7               	btfsc	(main@poles_detected+1)& (0+255),7,b
  1969  000DE0  D006               	goto	u8580
  1970  000DE2  51E7               	movf	(main@poles_detected+1)& (0+255),w,b
  1971  000DE4  E103               	bnz	u8581
  1972  000DE6  0E0A               	movlw	10
  1973  000DE8  5DE6               	subwf	main@poles_detected& (0+255),w,b
  1974  000DEA  B0D8               	btfsc	status,0,c
  1975  000DEC                     u8581:
  1976  000DEC  D1F8               	goto	l8084
  1977  000DEE                     u8580:
  1978                           
  1979                           ; BSR set to: 2
  1980  000DEE  BE47               	btfsc	_avg_dist+3,7,c	;volatile
  1981  000DF0  D095               	goto	l8000
  1982  000DF2  5047               	movf	_avg_dist+3,w,c	;volatile
  1983  000DF4  1046               	iorwf	_avg_dist+2,w,c	;volatile
  1984  000DF6  E106               	bnz	u8591
  1985  000DF8  0EA0               	movlw	160
  1986  000DFA  5C44               	subwf	_avg_dist,w,c	;volatile
  1987  000DFC  0E0F               	movlw	15
  1988  000DFE  5845               	subwfb	_avg_dist+1,w,c	;volatile
  1989  000E00  A0D8               	btfss	status,0,c
  1990  000E02  D08C               	goto	l8000
  1991  000E04                     u8591:
  1992  000E04  D1EC               	goto	l8084
  1993  000E06                     l7956:
  1994                           
  1995                           ;main.c: 765:                 t_count = 5;
  1996  000E06  0E00               	movlw	0
  1997  000E08  0102               	movlb	2	; () banked
  1998  000E0A  6FE1               	movwf	(main@t_count+1)& (0+255),b
  1999  000E0C  0E05               	movlw	5
  2000  000E0E  6FE0               	movwf	main@t_count& (0+255),b
  2001                           
  2002                           ; BSR set to: 2
  2003                           ;main.c: 766:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2004  000E10  0E01               	movlw	1
  2005  000E12  EC8B  F01D         	call	_lcdInst
  2006  000E16  0E11               	movlw	17
  2007  000E18  0101               	movlb	1	; () banked
  2008  000E1A  6F5A               	movwf	??_main& (0+255),b
  2009  000E1C  0E3A               	movlw	58
  2010  000E1E                     u8727:
  2011  000E1E  2EE8               	decfsz	wreg,f,c
  2012  000E20  D7FE               	bra	u8727
  2013  000E22  2F5A               	decfsz	??_main& (0+255),f,b
  2014  000E24  D7FC               	bra	u8727
  2015  000E26  F000               	nop	
  2016                           
  2017                           ;main.c: 767:                     printf("waiting");
  2018  000E28  0E01               	movlw	low (STR_54+5)
  2019  000E2A  0100               	movlb	0	; () banked
  2020  000E2C  6FED               	movwf	printf@fmt& (0+255),b
  2021  000E2E  0EFF               	movlw	high (STR_54+5)
  2022  000E30  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2023  000E32  EC25  F01D         	call	_printf	;wreg free
  2024                           
  2025                           ;main.c: 769:                     if (!PORTAbits.RA4){
  2026  000E36  B880               	btfsc	3968,4,c	;volatile
  2027  000E38  D013               	goto	l7972
  2028                           
  2029                           ;main.c: 770:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2030  000E3A  0E01               	movlw	1
  2031  000E3C  EC8B  F01D         	call	_lcdInst
  2032  000E40  0E11               	movlw	17
  2033  000E42  0101               	movlb	1	; () banked
  2034  000E44  6F5A               	movwf	??_main& (0+255),b
  2035  000E46  0E3A               	movlw	58
  2036  000E48                     u8737:
  2037  000E48  2EE8               	decfsz	wreg,f,c
  2038  000E4A  D7FE               	bra	u8737
  2039  000E4C  2F5A               	decfsz	??_main& (0+255),f,b
  2040  000E4E  D7FC               	bra	u8737
  2041  000E50  F000               	nop	
  2042                           
  2043                           ;main.c: 771:                         printf("more waiting");
  2044  000E52  0EFC               	movlw	low STR_54
  2045  000E54  0100               	movlb	0	; () banked
  2046  000E56  6FED               	movwf	printf@fmt& (0+255),b
  2047  000E58  0EFE               	movlw	high STR_54
  2048  000E5A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2049  000E5C  EC25  F01D         	call	_printf	;wreg free
  2050  000E60                     l7972:
  2051                           
  2052                           ;main.c: 773:                     if (PORTAbits.RA4){
  2053  000E60  A880               	btfss	3968,4,c	;volatile
  2054  000E62  D016               	goto	l7982
  2055                           
  2056                           ;main.c: 775:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2057  000E64  0E01               	movlw	1
  2058  000E66  EC8B  F01D         	call	_lcdInst
  2059  000E6A  0E11               	movlw	17
  2060  000E6C  0101               	movlb	1	; () banked
  2061  000E6E  6F5A               	movwf	??_main& (0+255),b
  2062  000E70  0E3A               	movlw	58
  2063  000E72                     u8747:
  2064  000E72  2EE8               	decfsz	wreg,f,c
  2065  000E74  D7FE               	bra	u8747
  2066  000E76  2F5A               	decfsz	??_main& (0+255),f,b
  2067  000E78  D7FC               	bra	u8747
  2068  000E7A  F000               	nop	
  2069                           
  2070                           ;main.c: 776:                         printf("done wait");
  2071  000E7C  0EBA               	movlw	low STR_55
  2072  000E7E  0100               	movlb	0	; () banked
  2073  000E80  6FED               	movwf	printf@fmt& (0+255),b
  2074  000E82  0EFF               	movlw	high STR_55
  2075  000E84  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2076  000E86  EC25  F01D         	call	_printf	;wreg free
  2077                           
  2078                           ;main.c: 777:                         arduino_stopped = 1;
  2079  000E8A  0E01               	movlw	1
  2080  000E8C  0102               	movlb	2	; () banked
  2081  000E8E  6FDB               	movwf	main@arduino_stopped& (0+255),b
  2082  000E90                     l7982:
  2083                           
  2084                           ;main.c: 779:                     if (arduino_stopped){
  2085  000E90  0102               	movlb	2	; () banked
  2086  000E92  51DB               	movf	main@arduino_stopped& (0+255),w,b
  2087  000E94  B4D8               	btfsc	status,2,c
  2088  000E96  D042               	goto	l8000
  2089                           
  2090                           ; BSR set to: 2
  2091                           ;main.c: 780:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2092  000E98  0E01               	movlw	1
  2093  000E9A  EC8B  F01D         	call	_lcdInst
  2094  000E9E  0E11               	movlw	17
  2095  000EA0  0101               	movlb	1	; () banked
  2096  000EA2  6F5A               	movwf	??_main& (0+255),b
  2097  000EA4  0E3A               	movlw	58
  2098  000EA6                     u8757:
  2099  000EA6  2EE8               	decfsz	wreg,f,c
  2100  000EA8  D7FE               	bra	u8757
  2101  000EAA  2F5A               	decfsz	??_main& (0+255),f,b
  2102  000EAC  D7FC               	bra	u8757
  2103  000EAE  F000               	nop	
  2104                           
  2105                           ;main.c: 781:                         printf("dun break");
  2106  000EB0  0EA6               	movlw	low STR_56
  2107  000EB2  0100               	movlb	0	; () banked
  2108  000EB4  6FED               	movwf	printf@fmt& (0+255),b
  2109  000EB6  0EFF               	movlw	high STR_56
  2110  000EB8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2111  000EBA  EC25  F01D         	call	_printf	;wreg free
  2112                           
  2113                           ;main.c: 782:                         steps2_adj=ultrasonic_main();
  2114  000EBE  EC3B  F012         	call	_ultrasonic_main	;wreg free
  2115  000EC2  C0FA  F2D4         	movff	?_ultrasonic_main,main@steps2_adj
  2116  000EC6  C0FB  F2D5         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2117                           
  2118                           ;main.c: 783:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2119  000ECA  0E01               	movlw	1
  2120  000ECC  EC8B  F01D         	call	_lcdInst
  2121  000ED0  0E11               	movlw	17
  2122  000ED2  0101               	movlb	1	; () banked
  2123  000ED4  6F5A               	movwf	??_main& (0+255),b
  2124  000ED6  0E3A               	movlw	58
  2125  000ED8                     u8767:
  2126  000ED8  2EE8               	decfsz	wreg,f,c
  2127  000EDA  D7FE               	bra	u8767
  2128  000EDC  2F5A               	decfsz	??_main& (0+255),f,b
  2129  000EDE  D7FC               	bra	u8767
  2130  000EE0  F000               	nop	
  2131                           
  2132                           ;main.c: 784:                         printf("stepsadj %d", steps2_adj);
  2133  000EE2  0E22               	movlw	low STR_21
  2134  000EE4  0100               	movlb	0	; () banked
  2135  000EE6  6FED               	movwf	printf@fmt& (0+255),b
  2136  000EE8  0EFF               	movlw	high STR_21
  2137  000EEA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2138  000EEC  C2D4  F0EF         	movff	main@steps2_adj,?_printf+2
  2139  000EF0  C2D5  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2140  000EF4  EC25  F01D         	call	_printf	;wreg free
  2141                           
  2142                           ;main.c: 785:                         t_count = number_deploy(avg_dist, poles_detected);
  2143  000EF8  C044  F0F9         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2144  000EFC  C045  F0FA         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2145  000F00  C2E6  F0FB         	movff	main@poles_detected,number_deploy@poles_detected
  2146  000F04  C2E7  F0FC         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2147  000F08  EC33  F010         	call	_number_deploy	;wreg free
  2148  000F0C  C0F9  F2E0         	movff	?_number_deploy,main@t_count
  2149  000F10  C0FA  F2E1         	movff	?_number_deploy+1,main@t_count+1
  2150                           
  2151                           ;main.c: 786:                         sens = 0;
  2152  000F14  0E00               	movlw	0
  2153  000F16  6E59               	movwf	_sens+1,c	;volatile
  2154  000F18  0E00               	movlw	0
  2155  000F1A  6E58               	movwf	_sens,c	;volatile
  2156  000F1C                     l8000:
  2157                           
  2158                           ;main.c: 762:             while (sens){
  2159  000F1C  5058               	movf	_sens,w,c	;volatile
  2160  000F1E  1059               	iorwf	_sens+1,w,c	;volatile
  2161  000F20  A4D8               	btfss	status,2,c
  2162  000F22  D771               	goto	l7956
  2163                           
  2164                           ;main.c: 789:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  2165  000F24  0102               	movlb	2	; () banked
  2166  000F26  51E8               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2167  000F28  5C44               	subwf	_avg_dist,w,c	;volatile
  2168  000F2A  6FD2               	movwf	main@pole_cl_dist& (0+255),b
  2169  000F2C  51E9               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2170  000F2E  5845               	subwfb	_avg_dist+1,w,c	;volatile
  2171  000F30  6FD3               	movwf	(main@pole_cl_dist+1)& (0+255),b
  2172                           
  2173                           ; BSR set to: 2
  2174                           ;main.c: 795:             act_done = 0;
  2175  000F32  0E00               	movlw	0
  2176  000F34  6FDA               	movwf	main@act_done& (0+255),b
  2177                           
  2178                           ; BSR set to: 2
  2179                           ;main.c: 796:             if (t_count<=2){
  2180  000F36  BFE1               	btfsc	(main@t_count+1)& (0+255),7,b
  2181  000F38  D006               	goto	u8640
  2182  000F3A  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2183  000F3C  E165               	bnz	l526
  2184  000F3E  0E03               	movlw	3
  2185  000F40  5DE0               	subwf	main@t_count& (0+255),w,b
  2186  000F42  B0D8               	btfsc	status,0,c
  2187  000F44  D061               	goto	l526
  2188  000F46                     u8640:
  2189                           
  2190                           ; BSR set to: 2
  2191                           ;main.c: 797:                 if (t_dep <8){
  2192  000F46  BFE3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2193  000F48  D006               	goto	u8650
  2194  000F4A  51E3               	movf	(main@t_dep+1)& (0+255),w,b
  2195  000F4C  E12C               	bnz	l8024
  2196  000F4E  0E08               	movlw	8
  2197  000F50  5DE2               	subwf	main@t_dep& (0+255),w,b
  2198  000F52  B0D8               	btfsc	status,0,c
  2199  000F54  D028               	goto	u8660
  2200  000F56                     u8650:
  2201                           
  2202                           ; BSR set to: 2
  2203                           ;main.c: 800:                     stack = 1;
  2204  000F56  0E00               	movlw	0
  2205  000F58  6FDD               	movwf	(main@stack+1)& (0+255),b
  2206  000F5A  0E01               	movlw	1
  2207  000F5C  6FDC               	movwf	main@stack& (0+255),b
  2208                           
  2209                           ; BSR set to: 2
  2210                           ;main.c: 801:                                     brake();
  2211  000F5E  EC0A  F018         	call	_brake	;wreg free
  2212                           
  2213                           ;main.c: 803:                     for(int i=0; i<(t_count); i++){
  2214  000F62  0E00               	movlw	0
  2215  000F64  0102               	movlb	2	; () banked
  2216  000F66  6FD7               	movwf	(main@i+1)& (0+255),b
  2217  000F68  0E00               	movlw	0
  2218  000F6A  6FD6               	movwf	main@i& (0+255),b
  2219  000F6C  D00F               	goto	l8022
  2220  000F6E                     l8016:
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;main.c: 805:                         actuators_main(stack, 110);
  2224  000F6E  C2DC  F10C         	movff	main@stack,actuators_main@stack
  2225  000F72  C2DD  F10D         	movff	main@stack+1,actuators_main@stack+1
  2226  000F76  0E00               	movlw	0
  2227  000F78  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2228  000F7A  0E6E               	movlw	110
  2229  000F7C  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2230  000F7E  ECF8  F014         	call	_actuators_main	;wreg free
  2231                           
  2232                           ;main.c: 806:                         t_dep++;
  2233  000F82  0102               	movlb	2	; () banked
  2234  000F84  4BE2               	infsnz	main@t_dep& (0+255),f,b
  2235  000F86  2BE3               	incf	(main@t_dep+1)& (0+255),f,b
  2236                           
  2237                           ; BSR set to: 2
  2238                           ;main.c: 807:                     }
  2239  000F88  4BD6               	infsnz	main@i& (0+255),f,b
  2240  000F8A  2BD7               	incf	(main@i+1)& (0+255),f,b
  2241  000F8C                     l8022:
  2242                           
  2243                           ; BSR set to: 2
  2244  000F8C  51E0               	movf	main@t_count& (0+255),w,b
  2245  000F8E  5DD6               	subwf	main@i& (0+255),w,b
  2246  000F90  51D7               	movf	(main@i+1)& (0+255),w,b
  2247  000F92  0A80               	xorlw	128
  2248  000F94  0101               	movlb	1	; () banked
  2249  000F96  6F5A               	movwf	??_main& (0+255),b
  2250  000F98  0102               	movlb	2	; () banked
  2251  000F9A  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2252  000F9C  0A80               	xorlw	128
  2253  000F9E  0101               	movlb	1	; () banked
  2254  000FA0  595A               	subwfb	??_main& (0+255),w,b
  2255  000FA2  A0D8               	btfss	status,0,c
  2256  000FA4  D7E4               	goto	l8016
  2257  000FA6                     u8660:
  2258  000FA6                     l8024:
  2259                           
  2260                           ;main.c: 809:                 if (t_dep >= 8){
  2261  000FA6  0102               	movlb	2	; () banked
  2262  000FA8  BFE3               	btfsc	(main@t_dep+1)& (0+255),7,b
  2263  000FAA  D02B               	goto	u8680
  2264  000FAC  51E3               	movf	(main@t_dep+1)& (0+255),w,b
  2265  000FAE  E104               	bnz	u8670
  2266  000FB0  0E08               	movlw	8
  2267  000FB2  5DE2               	subwf	main@t_dep& (0+255),w,b
  2268  000FB4  A0D8               	btfss	status,0,c
  2269  000FB6  D025               	goto	u8680
  2270  000FB8                     u8670:
  2271                           
  2272                           ; BSR set to: 2
  2273                           ;main.c: 810:                     stack = 2;
  2274  000FB8  0E00               	movlw	0
  2275  000FBA  6FDD               	movwf	(main@stack+1)& (0+255),b
  2276  000FBC  0E02               	movlw	2
  2277  000FBE  6FDC               	movwf	main@stack& (0+255),b
  2278                           
  2279                           ;main.c: 811:                     for(int i=0; i<(t_count); i++){
  2280  000FC0  0E00               	movlw	0
  2281  000FC2  6FD9               	movwf	(main@i_1018+1)& (0+255),b
  2282  000FC4  0E00               	movlw	0
  2283  000FC6  6FD8               	movwf	main@i_1018& (0+255),b
  2284  000FC8  D00F               	goto	l8034
  2285  000FCA                     l8028:
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;main.c: 813:                         actuators_main(stack, 110);
  2289  000FCA  C2DC  F10C         	movff	main@stack,actuators_main@stack
  2290  000FCE  C2DD  F10D         	movff	main@stack+1,actuators_main@stack+1
  2291  000FD2  0E00               	movlw	0
  2292  000FD4  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2293  000FD6  0E6E               	movlw	110
  2294  000FD8  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2295  000FDA  ECF8  F014         	call	_actuators_main	;wreg free
  2296                           
  2297                           ;main.c: 814:                         t_dep++;
  2298  000FDE  0102               	movlb	2	; () banked
  2299  000FE0  4BE2               	infsnz	main@t_dep& (0+255),f,b
  2300  000FE2  2BE3               	incf	(main@t_dep+1)& (0+255),f,b
  2301                           
  2302                           ; BSR set to: 2
  2303                           ;main.c: 815:                     }
  2304  000FE4  4BD8               	infsnz	main@i_1018& (0+255),f,b
  2305  000FE6  2BD9               	incf	(main@i_1018+1)& (0+255),f,b
  2306  000FE8                     l8034:
  2307                           
  2308                           ; BSR set to: 2
  2309  000FE8  51E0               	movf	main@t_count& (0+255),w,b
  2310  000FEA  5DD8               	subwf	main@i_1018& (0+255),w,b
  2311  000FEC  51D9               	movf	(main@i_1018+1)& (0+255),w,b
  2312  000FEE  0A80               	xorlw	128
  2313  000FF0  0101               	movlb	1	; () banked
  2314  000FF2  6F5A               	movwf	??_main& (0+255),b
  2315  000FF4  0102               	movlb	2	; () banked
  2316  000FF6  51E1               	movf	(main@t_count+1)& (0+255),w,b
  2317  000FF8  0A80               	xorlw	128
  2318  000FFA  0101               	movlb	1	; () banked
  2319  000FFC  595A               	subwfb	??_main& (0+255),w,b
  2320  000FFE  A0D8               	btfss	status,0,c
  2321  001000  D7E4               	goto	l8028
  2322  001002                     u8680:
  2323                           
  2324                           ;main.c: 817:                 act_done = 1;
  2325  001002  0E01               	movlw	1
  2326  001004  0102               	movlb	2	; () banked
  2327  001006  6FDA               	movwf	main@act_done& (0+255),b
  2328  001008                     l526:
  2329                           
  2330                           ; BSR set to: 2
  2331                           ;main.c: 819:             if (act_done){
  2332  001008  51DA               	movf	main@act_done& (0+255),w,b
  2333  00100A  B4D8               	btfsc	status,2,c
  2334  00100C  D136               	goto	l8106
  2335                           
  2336                           ; BSR set to: 2
  2337                           ;main.c: 821:             Pole[poles_detected].dist_from_cl = pole_cl_dist;
  2338  00100E  C2E6  F15A         	movff	main@poles_detected,??_main
  2339  001012  C2E7  F15B         	movff	main@poles_detected+1,??_main+1
  2340  001016  0101               	movlb	1	; () banked
  2341  001018  90D8               	bcf	status,0,c
  2342  00101A  375A               	rlcf	??_main& (0+255),f,b
  2343  00101C  375B               	rlcf	(??_main+1)& (0+255),f,b
  2344  00101E  90D8               	bcf	status,0,c
  2345  001020  375A               	rlcf	??_main& (0+255),f,b
  2346  001022  375B               	rlcf	(??_main+1)& (0+255),f,b
  2347  001024  90D8               	bcf	status,0,c
  2348  001026  375A               	rlcf	??_main& (0+255),f,b
  2349  001028  375B               	rlcf	(??_main+1)& (0+255),f,b
  2350  00102A  0E06               	movlw	6
  2351  00102C  275A               	addwf	??_main& (0+255),f,b
  2352  00102E  0E00               	movlw	0
  2353  001030  235B               	addwfc	(??_main+1)& (0+255),f,b
  2354  001032  0E80               	movlw	low main@Pole
  2355  001034  255A               	addwf	??_main& (0+255),w,b
  2356  001036  6ED9               	movwf	fsr2l,c
  2357  001038  0E02               	movlw	high main@Pole
  2358  00103A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2359  00103C  6EDA               	movwf	fsr2h,c
  2360  00103E  C2D2  FFDE         	movff	main@pole_cl_dist,postinc2
  2361  001042  C2D3  FFDD         	movff	main@pole_cl_dist+1,postdec2
  2362                           
  2363                           ;main.c: 822:             Pole[poles_detected].dist_from_start = avg_dist;
  2364  001046  C2E6  F15A         	movff	main@poles_detected,??_main
  2365  00104A  C2E7  F15B         	movff	main@poles_detected+1,??_main+1
  2366  00104E  90D8               	bcf	status,0,c
  2367  001050  375A               	rlcf	??_main& (0+255),f,b
  2368  001052  375B               	rlcf	(??_main+1)& (0+255),f,b
  2369  001054  90D8               	bcf	status,0,c
  2370  001056  375A               	rlcf	??_main& (0+255),f,b
  2371  001058  375B               	rlcf	(??_main+1)& (0+255),f,b
  2372  00105A  90D8               	bcf	status,0,c
  2373  00105C  375A               	rlcf	??_main& (0+255),f,b
  2374  00105E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2375  001060  0E04               	movlw	4
  2376  001062  275A               	addwf	??_main& (0+255),f,b
  2377  001064  0E00               	movlw	0
  2378  001066  235B               	addwfc	(??_main+1)& (0+255),f,b
  2379  001068  0E80               	movlw	low main@Pole
  2380  00106A  255A               	addwf	??_main& (0+255),w,b
  2381  00106C  6ED9               	movwf	fsr2l,c
  2382  00106E  0E02               	movlw	high main@Pole
  2383  001070  215B               	addwfc	(??_main+1)& (0+255),w,b
  2384  001072  6EDA               	movwf	fsr2h,c
  2385  001074  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2386  001078  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;main.c: 824:             prev_avg_dist = avg_dist ;
  2390  00107C  C044  F2E8         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2391  001080  C045  F2E9         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2392  001084  C046  F2EA         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2393  001088  C047  F2EB         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;main.c: 825:             poles_detected++;
  2397  00108C  0102               	movlb	2	; () banked
  2398  00108E  4BE6               	infsnz	main@poles_detected& (0+255),f,b
  2399  001090  2BE7               	incf	(main@poles_detected+1)& (0+255),f,b
  2400                           
  2401                           ; BSR set to: 2
  2402                           ;main.c: 827:             start();
  2403  001092  EC5F  F01B         	call	_start	;wreg free
  2404                           
  2405                           ;main.c: 828:             arduino_stopped = 0;
  2406  001096  0E00               	movlw	0
  2407  001098  0102               	movlb	2	; () banked
  2408  00109A  6FDB               	movwf	main@arduino_stopped& (0+255),b
  2409                           
  2410                           ; BSR set to: 2
  2411                           ;main.c: 834:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2412  00109C  0E01               	movlw	1
  2413  00109E  EC8B  F01D         	call	_lcdInst
  2414  0010A2  0E11               	movlw	17
  2415  0010A4  0101               	movlb	1	; () banked
  2416  0010A6  6F5A               	movwf	??_main& (0+255),b
  2417  0010A8  0E3A               	movlw	58
  2418  0010AA                     u8777:
  2419  0010AA  2EE8               	decfsz	wreg,f,c
  2420  0010AC  D7FE               	bra	u8777
  2421  0010AE  2F5A               	decfsz	??_main& (0+255),f,b
  2422  0010B0  D7FC               	bra	u8777
  2423  0010B2  F000               	nop	
  2424                           
  2425                           ;main.c: 835:             printf("avg dist %d", avg_dist);
  2426  0010B4  0E2E               	movlw	low STR_58
  2427  0010B6  0100               	movlb	0	; () banked
  2428  0010B8  6FED               	movwf	printf@fmt& (0+255),b
  2429  0010BA  0EFF               	movlw	high STR_58
  2430  0010BC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2431  0010BE  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2432  0010C2  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2433  0010C6  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2434  0010CA  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2435  0010CE  EC25  F01D         	call	_printf	;wreg free
  2436                           
  2437                           ;main.c: 836:             printf("poles d %d", poles_detected);
  2438  0010D2  0E52               	movlw	low STR_59
  2439  0010D4  0100               	movlb	0	; () banked
  2440  0010D6  6FED               	movwf	printf@fmt& (0+255),b
  2441  0010D8  0EFF               	movlw	high STR_59
  2442  0010DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2443  0010DC  C2E6  F0EF         	movff	main@poles_detected,?_printf+2
  2444  0010E0  C2E7  F0F0         	movff	main@poles_detected+1,?_printf+3
  2445  0010E4  EC25  F01D         	call	_printf	;wreg free
  2446                           
  2447                           ;main.c: 837:                                 for (int i=0;i<4;i++){
  2448  0010E8  0E00               	movlw	0
  2449  0010EA  0102               	movlb	2	; () banked
  2450  0010EC  6FE5               	movwf	(main@i_1026+1)& (0+255),b
  2451  0010EE  0E00               	movlw	0
  2452  0010F0  6FE4               	movwf	main@i_1026& (0+255),b
  2453  0010F2                     l8058:
  2454                           
  2455                           ; BSR set to: 2
  2456  0010F2  BFE5               	btfsc	(main@i_1026+1)& (0+255),7,b
  2457  0010F4  D006               	goto	l8062
  2458  0010F6  51E5               	movf	(main@i_1026+1)& (0+255),w,b
  2459  0010F8  E160               	bnz	l8080
  2460  0010FA  0E04               	movlw	4
  2461  0010FC  5DE4               	subwf	main@i_1026& (0+255),w,b
  2462  0010FE  B0D8               	btfsc	status,0,c
  2463  001100  D05C               	goto	l8080
  2464  001102                     l8062:
  2465                           
  2466                           ; BSR set to: 2
  2467                           ;main.c: 838:                         sum[i] = 0 ;
  2468  001102  90D8               	bcf	status,0,c
  2469  001104  35E4               	rlcf	main@i_1026& (0+255),w,b
  2470  001106  6ED9               	movwf	fsr2l,c
  2471  001108  35E5               	rlcf	(main@i_1026+1)& (0+255),w,b
  2472  00110A  6EDA               	movwf	fsr2h,c
  2473  00110C  0E38               	movlw	low _sum
  2474  00110E  26D9               	addwf	fsr2l,f,c
  2475  001110  0E00               	movlw	high _sum
  2476  001112  22DA               	addwfc	fsr2h,f,c
  2477  001114  0E00               	movlw	0
  2478  001116  6EDE               	movwf	postinc2,c
  2479  001118  0E00               	movlw	0
  2480  00111A  6EDD               	movwf	postdec2,c
  2481                           
  2482                           ;main.c: 839:                         a[i] =0 ;
  2483  00111C  90D8               	bcf	status,0,c
  2484  00111E  35E4               	rlcf	main@i_1026& (0+255),w,b
  2485  001120  6ED9               	movwf	fsr2l,c
  2486  001122  35E5               	rlcf	(main@i_1026+1)& (0+255),w,b
  2487  001124  6EDA               	movwf	fsr2h,c
  2488  001126  0E61               	movlw	low _a
  2489  001128  26D9               	addwf	fsr2l,f,c
  2490  00112A  0E00               	movlw	high _a
  2491  00112C  22DA               	addwfc	fsr2h,f,c
  2492  00112E  0E00               	movlw	0
  2493  001130  6EDE               	movwf	postinc2,c
  2494  001132  0E00               	movlw	0
  2495  001134  6EDD               	movwf	postdec2,c
  2496                           
  2497                           ;main.c: 840:                         sumf[i] = 0 ;
  2498  001136  0E40               	movlw	low _sumf
  2499  001138  25E4               	addwf	main@i_1026& (0+255),w,b
  2500  00113A  6ED9               	movwf	fsr2l,c
  2501  00113C  0E00               	movlw	high _sumf
  2502  00113E  21E5               	addwfc	(main@i_1026+1)& (0+255),w,b
  2503  001140  6EDA               	movwf	fsr2h,c
  2504  001142  0E00               	movlw	0
  2505  001144  6EDF               	movwf	indf2,c
  2506                           
  2507                           ; BSR set to: 2
  2508                           ;main.c: 842:                         for (int k=0;k<6;k++){
  2509  001146  0E00               	movlw	0
  2510  001148  6FDF               	movwf	(main@k+1)& (0+255),b
  2511  00114A  0E00               	movlw	0
  2512  00114C  6FDE               	movwf	main@k& (0+255),b
  2513  00114E                     l8066:
  2514                           
  2515                           ; BSR set to: 2
  2516  00114E  BFDF               	btfsc	(main@k+1)& (0+255),7,b
  2517  001150  D006               	goto	l8070
  2518  001152  51DF               	movf	(main@k+1)& (0+255),w,b
  2519  001154  E12F               	bnz	l8076
  2520  001156  0E06               	movlw	6
  2521  001158  5DDE               	subwf	main@k& (0+255),w,b
  2522  00115A  B0D8               	btfsc	status,0,c
  2523  00115C  D02B               	goto	l8076
  2524  00115E                     l8070:
  2525                           
  2526                           ; BSR set to: 2
  2527                           ;main.c: 843:                             dist_final[i][k] = 0;
  2528  00115E  C2E4  F080         	movff	main@i_1026,___wmul@multiplier
  2529  001162  C2E5  F081         	movff	main@i_1026+1,___wmul@multiplier+1
  2530  001166  0E00               	movlw	0
  2531  001168  0100               	movlb	0	; () banked
  2532  00116A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2533  00116C  0E0C               	movlw	12
  2534  00116E  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2535  001170  EC39  F01D         	call	___wmul	;wreg free
  2536  001174  0E50               	movlw	low _dist_final
  2537  001176  0101               	movlb	1	; () banked
  2538  001178  6F5A               	movwf	??_main& (0+255),b
  2539  00117A  0E02               	movlw	high _dist_final
  2540  00117C  6F5B               	movwf	(??_main+1)& (0+255),b
  2541  00117E  0100               	movlb	0	; () banked
  2542  001180  5180               	movf	?___wmul& (0+255),w,b
  2543  001182  0101               	movlb	1	; () banked
  2544  001184  275A               	addwf	??_main& (0+255),f,b
  2545  001186  0100               	movlb	0	; () banked
  2546  001188  5181               	movf	(?___wmul+1)& (0+255),w,b
  2547  00118A  0101               	movlb	1	; () banked
  2548  00118C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2549  00118E  90D8               	bcf	status,0,c
  2550  001190  0102               	movlb	2	; () banked
  2551  001192  35DE               	rlcf	main@k& (0+255),w,b
  2552  001194  6ED9               	movwf	fsr2l,c
  2553  001196  35DF               	rlcf	(main@k+1)& (0+255),w,b
  2554  001198  6EDA               	movwf	fsr2h,c
  2555  00119A  0101               	movlb	1	; () banked
  2556  00119C  515A               	movf	??_main& (0+255),w,b
  2557  00119E  26D9               	addwf	fsr2l,f,c
  2558  0011A0  515B               	movf	(??_main+1)& (0+255),w,b
  2559  0011A2  22DA               	addwfc	fsr2h,f,c
  2560  0011A4  0E00               	movlw	0
  2561  0011A6  6EDE               	movwf	postinc2,c
  2562  0011A8  0E00               	movlw	0
  2563  0011AA  6EDD               	movwf	postdec2,c
  2564                           
  2565                           ; BSR set to: 1
  2566                           ;main.c: 844:                         }
  2567  0011AC  0102               	movlb	2	; () banked
  2568  0011AE  4BDE               	infsnz	main@k& (0+255),f,b
  2569  0011B0  2BDF               	incf	(main@k+1)& (0+255),f,b
  2570  0011B2  D7CD               	goto	l8066
  2571  0011B4                     l8076:
  2572                           
  2573                           ; BSR set to: 2
  2574                           ;main.c: 845:                     }
  2575  0011B4  4BE4               	infsnz	main@i_1026& (0+255),f,b
  2576  0011B6  2BE5               	incf	(main@i_1026+1)& (0+255),f,b
  2577  0011B8  D79C               	goto	l8058
  2578  0011BA                     l8080:
  2579                           
  2580                           ; BSR set to: 2
  2581                           ;main.c: 846:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2582  0011BA  0E0D               	movlw	13
  2583  0011BC  0101               	movlb	1	; () banked
  2584  0011BE  6F5B               	movwf	(??_main+1)& (0+255),b
  2585  0011C0  0EAF               	movlw	175
  2586  0011C2  6F5A               	movwf	??_main& (0+255),b
  2587  0011C4  0EB6               	movlw	182
  2588  0011C6                     u8787:
  2589  0011C6  2EE8               	decfsz	wreg,f,c
  2590  0011C8  D7FE               	bra	u8787
  2591  0011CA  2F5A               	decfsz	??_main& (0+255),f,b
  2592  0011CC  D7FC               	bra	u8787
  2593  0011CE  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2594  0011D0  D7FA               	bra	u8787
  2595  0011D2  F000               	nop	
  2596                           
  2597                           ;main.c: 847:             sens = 1;
  2598  0011D4  0E00               	movlw	0
  2599  0011D6  6E59               	movwf	_sens+1,c	;volatile
  2600  0011D8  0E01               	movlw	1
  2601  0011DA  6E58               	movwf	_sens,c	;volatile
  2602  0011DC  D04E               	goto	l8106
  2603  0011DE                     l8084:
  2604                           
  2605                           ; BSR set to: 2
  2606                           ;main.c: 851:             brake();
  2607  0011DE  EC0A  F018         	call	_brake	;wreg free
  2608                           
  2609                           ;main.c: 852:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2610  0011E2  0E01               	movlw	1
  2611  0011E4  EC8B  F01D         	call	_lcdInst
  2612  0011E8  0E11               	movlw	17
  2613  0011EA  0101               	movlb	1	; () banked
  2614  0011EC  6F5A               	movwf	??_main& (0+255),b
  2615  0011EE  0E3A               	movlw	58
  2616  0011F0                     u8797:
  2617  0011F0  2EE8               	decfsz	wreg,f,c
  2618  0011F2  D7FE               	bra	u8797
  2619  0011F4  2F5A               	decfsz	??_main& (0+255),f,b
  2620  0011F6  D7FC               	bra	u8797
  2621  0011F8  F000               	nop	
  2622                           
  2623                           ;main.c: 853:             printf("poles done");
  2624  0011FA  0E68               	movlw	low STR_60
  2625  0011FC  0100               	movlb	0	; () banked
  2626  0011FE  6FED               	movwf	printf@fmt& (0+255),b
  2627  001200  0EFF               	movlw	high STR_60
  2628  001202  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2629  001204  EC25  F01D         	call	_printf	;wreg free
  2630                           
  2631                           ;main.c: 854:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2632  001208  0E0D               	movlw	13
  2633  00120A  0101               	movlb	1	; () banked
  2634  00120C  6F5B               	movwf	(??_main+1)& (0+255),b
  2635  00120E  0EAF               	movlw	175
  2636  001210  6F5A               	movwf	??_main& (0+255),b
  2637  001212  0EB6               	movlw	182
  2638  001214                     u8807:
  2639  001214  2EE8               	decfsz	wreg,f,c
  2640  001216  D7FE               	bra	u8807
  2641  001218  2F5A               	decfsz	??_main& (0+255),f,b
  2642  00121A  D7FC               	bra	u8807
  2643  00121C  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2644  00121E  D7FA               	bra	u8807
  2645  001220  F000               	nop	
  2646                           
  2647                           ;main.c: 855:             UI_main(t_dep, poles_detected);
  2648  001222  C2E2  F0F9         	movff	main@t_dep,UI_main@t_dep
  2649  001226  C2E3  F0FA         	movff	main@t_dep+1,UI_main@t_dep+1
  2650  00122A  C2E6  F0FB         	movff	main@poles_detected,UI_main@poles_detected
  2651  00122E  C2E7  F0FC         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2652  001232  EC09  F000         	call	_UI_main	;wreg free
  2653                           
  2654                           ;main.c: 856:             backwards();
  2655  001236  EC4D  F01D         	call	_backwards	;wreg free
  2656                           
  2657                           ;main.c: 857:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2658  00123A  0E01               	movlw	1
  2659  00123C  EC8B  F01D         	call	_lcdInst
  2660  001240  0E11               	movlw	17
  2661  001242  0101               	movlb	1	; () banked
  2662  001244  6F5A               	movwf	??_main& (0+255),b
  2663  001246  0E3A               	movlw	58
  2664  001248                     u8817:
  2665  001248  2EE8               	decfsz	wreg,f,c
  2666  00124A  D7FE               	bra	u8817
  2667  00124C  2F5A               	decfsz	??_main& (0+255),f,b
  2668  00124E  D7FC               	bra	u8817
  2669  001250  F000               	nop	
  2670                           
  2671                           ;main.c: 858:             printf("backwards");
  2672  001252  0EB0               	movlw	low STR_61
  2673  001254  0100               	movlb	0	; () banked
  2674  001256  6FED               	movwf	printf@fmt& (0+255),b
  2675  001258  0EFF               	movlw	high STR_61
  2676  00125A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2677  00125C  EC25  F01D         	call	_printf	;wreg free
  2678                           
  2679                           ;main.c: 859:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2680  001260  0E0D               	movlw	13
  2681  001262  0101               	movlb	1	; () banked
  2682  001264  6F5B               	movwf	(??_main+1)& (0+255),b
  2683  001266  0EAF               	movlw	175
  2684  001268  6F5A               	movwf	??_main& (0+255),b
  2685  00126A  0EB6               	movlw	182
  2686  00126C                     u8827:
  2687  00126C  2EE8               	decfsz	wreg,f,c
  2688  00126E  D7FE               	bra	u8827
  2689  001270  2F5A               	decfsz	??_main& (0+255),f,b
  2690  001272  D7FC               	bra	u8827
  2691  001274  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2692  001276  D7FA               	bra	u8827
  2693  001278  F000               	nop	
  2694  00127A                     l8106:
  2695                           
  2696                           ;main.c: 861:         t_count = 5;
  2697  00127A  0E00               	movlw	0
  2698  00127C  0102               	movlb	2	; () banked
  2699  00127E  6FE1               	movwf	(main@t_count+1)& (0+255),b
  2700  001280  0E05               	movlw	5
  2701  001282  6FE0               	movwf	main@t_count& (0+255),b
  2702  001284  D5A6               	goto	l7948
  2703  001286                     __end_of_main:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _ultrasonic_main *****************
  2707 ;; Defined at:
  2708 ;;		line 291 in file "main.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  min_us_dist     2    8[BANK1 ] int 
  2713 ;;  steps2_adj      2    6[BANK1 ] int 
  2714 ;;  step2_offset    2    4[BANK1 ] int 
  2715 ;;  sensed          2    2[BANK1 ] int 
  2716 ;;  min_us_dist     2    0        int 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  2  122[BANK0 ] int 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;Total ram usage:       14 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:   15
  2733 ;; This function calls:
  2734 ;;		_abs
  2735 ;;		_lcdInst
  2736 ;;		_min
  2737 ;;		_print_echo
  2738 ;;		_printf
  2739 ;;		_trig
  2740 ;; This function is called by:
  2741 ;;		_main
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text1
  2746  002476                     __ptext1:
  2747                           	opt callstack 0
  2748  002476                     _ultrasonic_main:
  2749                           	opt callstack 15
  2750                           
  2751                           ;main.c: 292:     TRISBbits.RB0 = 0;
  2752                           
  2753                           ; BSR set to: 2
  2754                           ;incstack = 0
  2755  002476  9093               	bcf	3987,0,c	;volatile
  2756                           
  2757                           ;main.c: 293:     LATBbits.LATB0 = 1;
  2758  002478  808A               	bsf	3978,0,c	;volatile
  2759                           
  2760                           ;main.c: 295:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2761  00247A  0E01               	movlw	1
  2762  00247C  EC8B  F01D         	call	_lcdInst
  2763  002480  0E11               	movlw	17
  2764  002482  0100               	movlb	0	; () banked
  2765  002484  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2766  002486  0E3A               	movlw	58
  2767  002488                     u8837:
  2768  002488  2EE8               	decfsz	wreg,f,c
  2769  00248A  D7FE               	bra	u8837
  2770  00248C  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2771  00248E  D7FC               	bra	u8837
  2772  002490  F000               	nop	
  2773                           
  2774                           ;main.c: 296:     printf("or here");
  2775  002492  0EEB               	movlw	low STR_18
  2776  002494  0100               	movlb	0	; () banked
  2777  002496  6FED               	movwf	printf@fmt& (0+255),b
  2778  002498  0EFF               	movlw	high STR_18
  2779  00249A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2780  00249C  EC25  F01D         	call	_printf	;wreg free
  2781                           
  2782                           ;main.c: 297:  TRISB = 0b11110000;
  2783  0024A0  0EF0               	movlw	240
  2784  0024A2  6E93               	movwf	3987,c	;volatile
  2785                           
  2786                           ;main.c: 298:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2787  0024A4  0E01               	movlw	1
  2788  0024A6  EC8B  F01D         	call	_lcdInst
  2789  0024AA  0E11               	movlw	17
  2790  0024AC  0100               	movlb	0	; () banked
  2791  0024AE  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2792  0024B0  0E3A               	movlw	58
  2793  0024B2                     u8847:
  2794  0024B2  2EE8               	decfsz	wreg,f,c
  2795  0024B4  D7FE               	bra	u8847
  2796  0024B6  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2797  0024B8  D7FC               	bra	u8847
  2798  0024BA  F000               	nop	
  2799                           
  2800                           ;main.c: 299:     printf("break heree?");
  2801  0024BC  0EEF               	movlw	low STR_19
  2802  0024BE  0100               	movlb	0	; () banked
  2803  0024C0  6FED               	movwf	printf@fmt& (0+255),b
  2804  0024C2  0EFE               	movlw	high STR_19
  2805  0024C4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2806  0024C6  EC25  F01D         	call	_printf	;wreg free
  2807                           
  2808                           ;main.c: 300:     RBIF = 0;
  2809  0024CA  90F2               	bcf	4082,0,c	;volatile
  2810                           
  2811                           ;main.c: 301:  RBIE = 1;
  2812  0024CC  86F2               	bsf	4082,3,c	;volatile
  2813                           
  2814                           ;main.c: 303:     int sensed = 0;
  2815  0024CE  0E00               	movlw	0
  2816  0024D0  0101               	movlb	1	; () banked
  2817  0024D2  6F03               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2818  0024D4  0E00               	movlw	0
  2819  0024D6  6F02               	movwf	ultrasonic_main@sensed& (0+255),b
  2820                           
  2821                           ;main.c: 305:     int steps2_adj=0;
  2822  0024D8  0E00               	movlw	0
  2823  0024DA  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2824  0024DC  0E00               	movlw	0
  2825  0024DE  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2826                           
  2827                           ;main.c: 306:     int step2_offset=0;
  2828  0024E0  0E00               	movlw	0
  2829  0024E2  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2830  0024E4  0E00               	movlw	0
  2831  0024E6  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2832                           
  2833                           ;main.c: 307:     while(send){
  2834  0024E8  D070               	goto	l433
  2835  0024EA                     l7480:
  2836                           
  2837                           ; BSR set to: 1
  2838                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  2839  0024EA  0E00               	movlw	0
  2840  0024EC  6E51               	movwf	_meas+1,c	;volatile
  2841  0024EE  0E00               	movlw	0
  2842  0024F0  6E50               	movwf	_meas,c	;volatile
  2843  0024F2                     l7482:
  2844                           
  2845                           ; BSR set to: 1
  2846  0024F2  BE51               	btfsc	_meas+1,7,c	;volatile
  2847  0024F4  D006               	goto	l7486
  2848  0024F6  5051               	movf	_meas+1,w,c	;volatile
  2849  0024F8  E160               	bnz	l7518
  2850  0024FA  0E03               	movlw	3
  2851  0024FC  5C50               	subwf	_meas,w,c	;volatile
  2852  0024FE  B0D8               	btfsc	status,0,c
  2853  002500  D05C               	goto	l7518
  2854  002502                     l7486:
  2855                           
  2856                           ; BSR set to: 1
  2857                           ;main.c: 309:         trig();
  2858  002502  ECAE  F016         	call	_trig	;wreg free
  2859                           
  2860                           ;main.c: 310:         RBIE = 0;
  2861  002506  96F2               	bcf	4082,3,c	;volatile
  2862                           
  2863                           ;main.c: 311:         print_echo();
  2864  002508  EC44  F011         	call	_print_echo	;wreg free
  2865                           
  2866                           ;main.c: 312:         RBIE = 1;
  2867  00250C  86F2               	bsf	4082,3,c	;volatile
  2868                           
  2869                           ;main.c: 313:         int min_us_dist = min(a, 4);
  2870  00250E  0E61               	movlw	low _a
  2871  002510  0100               	movlb	0	; () banked
  2872  002512  6F80               	movwf	min@array& (0+255),b
  2873  002514  0E00               	movlw	high _a
  2874  002516  6F81               	movwf	(min@array+1)& (0+255),b
  2875  002518  0E00               	movlw	0
  2876  00251A  6F83               	movwf	(min@size+1)& (0+255),b
  2877  00251C  0E04               	movlw	4
  2878  00251E  6F82               	movwf	min@size& (0+255),b
  2879  002520  EC26  F016         	call	_min	;wreg free
  2880  002524  C080  F108         	movff	?_min,ultrasonic_main@min_us_dist_914
  2881  002528  C081  F109         	movff	?_min+1,ultrasonic_main@min_us_dist_914+1
  2882                           
  2883                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2884  00252C  0E01               	movlw	1
  2885  00252E  EC8B  F01D         	call	_lcdInst
  2886  002532  0E11               	movlw	17
  2887  002534  0100               	movlb	0	; () banked
  2888  002536  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2889  002538  0E3A               	movlw	58
  2890  00253A                     u8857:
  2891  00253A  2EE8               	decfsz	wreg,f,c
  2892  00253C  D7FE               	bra	u8857
  2893  00253E  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2894  002540  D7FC               	bra	u8857
  2895  002542  F000               	nop	
  2896                           
  2897                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  2898  002544  0E5D               	movlw	low STR_20
  2899  002546  0100               	movlb	0	; () banked
  2900  002548  6FED               	movwf	printf@fmt& (0+255),b
  2901  00254A  0EFF               	movlw	high STR_20
  2902  00254C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2903  00254E  C108  F0EF         	movff	ultrasonic_main@min_us_dist_914,?_printf+2
  2904  002552  C109  F0F0         	movff	ultrasonic_main@min_us_dist_914+1,?_printf+3
  2905  002556  EC25  F01D         	call	_printf	;wreg free
  2906                           
  2907                           ;main.c: 317:         if (min_us_dist<14){
  2908  00255A  0101               	movlb	1	; () banked
  2909  00255C  BF09               	btfsc	(ultrasonic_main@min_us_dist_914+1)& (0+255),7,b
  2910  00255E  D006               	goto	u8000
  2911  002560  5109               	movf	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2912  002562  E108               	bnz	l7506
  2913  002564  0E0E               	movlw	14
  2914  002566  5D08               	subwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2915  002568  B0D8               	btfsc	status,0,c
  2916  00256A  D004               	goto	l7506
  2917  00256C                     u8000:
  2918                           
  2919                           ; BSR set to: 1
  2920                           ;main.c: 318:             step2_offset = 0;
  2921  00256C  0E00               	movlw	0
  2922  00256E  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2923  002570  0E00               	movlw	0
  2924  002572  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2925  002574                     l7506:
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;main.c: 320:         if (min_us_dist>=14){
  2929  002574  BF09               	btfsc	(ultrasonic_main@min_us_dist_914+1)& (0+255),7,b
  2930  002576  D015               	goto	l7510
  2931  002578  5109               	movf	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2932  00257A  E104               	bnz	u8010
  2933  00257C  0E0E               	movlw	14
  2934  00257E  5D08               	subwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2935  002580  A0D8               	btfss	status,0,c
  2936  002582  D00F               	goto	l7510
  2937  002584                     u8010:
  2938                           
  2939                           ; BSR set to: 1
  2940                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  2941  002584  0EF2               	movlw	242
  2942  002586  2508               	addwf	ultrasonic_main@min_us_dist_914& (0+255),w,b
  2943  002588  0100               	movlb	0	; () banked
  2944  00258A  6F92               	movwf	abs@a& (0+255),b
  2945  00258C  0EFF               	movlw	255
  2946  00258E  0101               	movlb	1	; () banked
  2947  002590  2109               	addwfc	(ultrasonic_main@min_us_dist_914+1)& (0+255),w,b
  2948  002592  0100               	movlb	0	; () banked
  2949  002594  6F93               	movwf	(abs@a+1)& (0+255),b
  2950  002596  EC4E  F01C         	call	_abs	;wreg free
  2951  00259A  C092  F104         	movff	?_abs,ultrasonic_main@step2_offset
  2952  00259E  C093  F105         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  2953  0025A2                     l7510:
  2954                           
  2955                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  2956  0025A2  0E6E               	movlw	110
  2957  0025A4  0101               	movlb	1	; () banked
  2958  0025A6  2504               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  2959  0025A8  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2960  0025AA  0E00               	movlw	0
  2961  0025AC  2105               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  2962  0025AE  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2963                           
  2964                           ; BSR set to: 1
  2965                           ;main.c: 324:         sensed++;
  2966  0025B0  4B02               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  2967  0025B2  2B03               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  2968                           
  2969                           ; BSR set to: 1
  2970                           ;main.c: 327:         }
  2971  0025B4  4A50               	infsnz	_meas,f,c	;volatile
  2972  0025B6  2A51               	incf	_meas+1,f,c	;volatile
  2973  0025B8  D79C               	goto	l7482
  2974  0025BA                     l7518:
  2975                           
  2976                           ; BSR set to: 1
  2977                           ;main.c: 328:         if (sensed>2){
  2978  0025BA  BF03               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  2979  0025BC  D006               	goto	l433
  2980  0025BE  5103               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  2981  0025C0  E107               	bnz	l7524
  2982  0025C2  0E03               	movlw	3
  2983  0025C4  5D02               	subwf	ultrasonic_main@sensed& (0+255),w,b
  2984  0025C6  B0D8               	btfsc	status,0,c
  2985  0025C8  D003               	goto	u8030
  2986  0025CA                     l433:
  2987                           
  2988                           ; BSR set to: 1
  2989                           ;main.c: 307:     while(send){
  2990  0025CA  506D               	movf	_send,w,c
  2991  0025CC  A4D8               	btfss	status,2,c
  2992  0025CE  D78D               	goto	l7480
  2993  0025D0                     u8030:
  2994  0025D0                     l7524:
  2995                           
  2996                           ; BSR set to: 1
  2997                           ;main.c: 375:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  2998  0025D0  0E01               	movlw	1
  2999  0025D2  EC8B  F01D         	call	_lcdInst
  3000  0025D6  0E11               	movlw	17
  3001  0025D8  0100               	movlb	0	; () banked
  3002  0025DA  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3003  0025DC  0E3A               	movlw	58
  3004  0025DE                     u8867:
  3005  0025DE  2EE8               	decfsz	wreg,f,c
  3006  0025E0  D7FE               	bra	u8867
  3007  0025E2  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3008  0025E4  D7FC               	bra	u8867
  3009  0025E6  F000               	nop	
  3010                           
  3011                           ;main.c: 376:     printf("stepsadj %d", steps2_adj);
  3012  0025E8  0E22               	movlw	low STR_21
  3013  0025EA  0100               	movlb	0	; () banked
  3014  0025EC  6FED               	movwf	printf@fmt& (0+255),b
  3015  0025EE  0EFF               	movlw	high STR_21
  3016  0025F0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3017  0025F2  C106  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3018  0025F6  C107  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3019  0025FA  EC25  F01D         	call	_printf	;wreg free
  3020                           
  3021                           ;main.c: 377:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3022  0025FE  0E0D               	movlw	13
  3023  002600  0100               	movlb	0	; () banked
  3024  002602  6FFD               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3025  002604  0EAF               	movlw	175
  3026  002606  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3027  002608  0EB6               	movlw	182
  3028  00260A                     u8877:
  3029  00260A  2EE8               	decfsz	wreg,f,c
  3030  00260C  D7FE               	bra	u8877
  3031  00260E  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3032  002610  D7FC               	bra	u8877
  3033  002612  2FFD               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3034  002614  D7FA               	bra	u8877
  3035  002616  F000               	nop	
  3036                           
  3037                           ;main.c: 378:     return steps2_adj;
  3038  002618  C106  F0FA         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3039  00261C  C107  F0FB         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3040  002620  0012               	return		;funcret
  3041  002622                     __end_of_ultrasonic_main:
  3042                           	opt callstack 0
  3043                           
  3044 ;; *************** function _trig *****************
  3045 ;; Defined at:
  3046 ;;		line 190 in file "main.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:        2 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    3
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_ultrasonic_main
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text2
  3075  002D5C                     __ptext2:
  3076                           	opt callstack 0
  3077  002D5C                     _trig:
  3078                           	opt callstack 26
  3079                           
  3080                           ;main.c: 191:     for(b=1; b<5; b++){
  3081                           
  3082                           ;incstack = 0
  3083  002D5C  0E00               	movlw	0
  3084  002D5E  6E5B               	movwf	_b+1,c
  3085  002D60  0E01               	movlw	1
  3086  002D62  6E5A               	movwf	_b,c
  3087  002D64  BE5B               	btfsc	_b+1,7,c
  3088  002D66  D004               	goto	l7174
  3089  002D68  505B               	movf	_b+1,w,c
  3090  002D6A  E101               	bnz	u7590
  3091  002D6C  D072               	goto	L1
  3092  002D6E                     u7590:
  3093  002D6E  0012               	return	
  3094  002D70                     l7174:
  3095                           
  3096                           ;main.c: 192:         TMR1H = 0;
  3097  002D70  0E00               	movlw	0
  3098  002D72  6ECF               	movwf	4047,c	;volatile
  3099                           
  3100                           ;main.c: 193:         TMR1L = 0;
  3101  002D74  0E00               	movlw	0
  3102  002D76  6ECE               	movwf	4046,c	;volatile
  3103                           
  3104                           ;main.c: 194:         if(b==1){
  3105  002D78  045A               	decf	_b,w,c
  3106  002D7A  105B               	iorwf	_b+1,w,c
  3107  002D7C  A4D8               	btfss	status,2,c
  3108  002D7E  D015               	goto	l7186
  3109                           
  3110                           ;main.c: 195:             RBIE = 0;
  3111  002D80  96F2               	bcf	4082,3,c	;volatile
  3112                           
  3113                           ;main.c: 196:             RD1 = 1;
  3114  002D82  8283               	bsf	3971,1,c	;volatile
  3115                           
  3116                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3117  002D84  0E08               	movlw	8
  3118  002D86                     u8887:
  3119  002D86  2EE8               	decfsz	wreg,f,c
  3120  002D88  D7FE               	bra	u8887
  3121  002D8A  F000               	nop	
  3122                           
  3123                           ;main.c: 198:             RD1 = 0;
  3124  002D8C  9283               	bcf	3971,1,c	;volatile
  3125                           
  3126                           ;main.c: 200:             RBIE = 1;
  3127  002D8E  86F2               	bsf	4082,3,c	;volatile
  3128                           
  3129                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3130  002D90  0E02               	movlw	2
  3131  002D92  0100               	movlb	0	; () banked
  3132  002D94  6F81               	movwf	(??_trig+1)& (0+255),b
  3133  002D96  0EB7               	movlw	183
  3134  002D98  6F80               	movwf	??_trig& (0+255),b
  3135  002D9A  0E4C               	movlw	76
  3136  002D9C                     u8897:
  3137  002D9C  2EE8               	decfsz	wreg,f,c
  3138  002D9E  D7FE               	bra	u8897
  3139  002DA0  2F80               	decfsz	??_trig& (0+255),f,b
  3140  002DA2  D7FC               	bra	u8897
  3141  002DA4  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3142  002DA6  D7FA               	bra	u8897
  3143  002DA8  F000               	nop	
  3144  002DAA                     l7186:
  3145                           
  3146                           ;main.c: 203:         if(b==2){
  3147  002DAA  0E02               	movlw	2
  3148  002DAC  185A               	xorwf	_b,w,c
  3149  002DAE  105B               	iorwf	_b+1,w,c
  3150  002DB0  A4D8               	btfss	status,2,c
  3151  002DB2  D015               	goto	l7196
  3152                           
  3153                           ;main.c: 204:             RBIE = 0;
  3154  002DB4  96F2               	bcf	4082,3,c	;volatile
  3155                           
  3156                           ;main.c: 205:             RD0 = 1;
  3157  002DB6  8083               	bsf	3971,0,c	;volatile
  3158                           
  3159                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3160  002DB8  0E08               	movlw	8
  3161  002DBA                     u8907:
  3162  002DBA  2EE8               	decfsz	wreg,f,c
  3163  002DBC  D7FE               	bra	u8907
  3164  002DBE  F000               	nop	
  3165                           
  3166                           ;main.c: 207:             RD0 = 0;
  3167  002DC0  9083               	bcf	3971,0,c	;volatile
  3168                           
  3169                           ;main.c: 209:             RBIE = 1;
  3170  002DC2  86F2               	bsf	4082,3,c	;volatile
  3171                           
  3172                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3173  002DC4  0E02               	movlw	2
  3174  002DC6  0100               	movlb	0	; () banked
  3175  002DC8  6F81               	movwf	(??_trig+1)& (0+255),b
  3176  002DCA  0EB7               	movlw	183
  3177  002DCC  6F80               	movwf	??_trig& (0+255),b
  3178  002DCE  0E4C               	movlw	76
  3179  002DD0                     u8917:
  3180  002DD0  2EE8               	decfsz	wreg,f,c
  3181  002DD2  D7FE               	bra	u8917
  3182  002DD4  2F80               	decfsz	??_trig& (0+255),f,b
  3183  002DD6  D7FC               	bra	u8917
  3184  002DD8  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3185  002DDA  D7FA               	bra	u8917
  3186  002DDC  F000               	nop	
  3187  002DDE                     l7196:
  3188                           
  3189                           ;main.c: 212:         if(b==3){
  3190  002DDE  0E03               	movlw	3
  3191  002DE0  185A               	xorwf	_b,w,c
  3192  002DE2  105B               	iorwf	_b+1,w,c
  3193  002DE4  A4D8               	btfss	status,2,c
  3194  002DE6  D015               	goto	l7206
  3195                           
  3196                           ;main.c: 213:             RBIE = 0;
  3197  002DE8  96F2               	bcf	4082,3,c	;volatile
  3198                           
  3199                           ;main.c: 214:             RB3 = 1;
  3200  002DEA  8681               	bsf	3969,3,c	;volatile
  3201                           
  3202                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3203  002DEC  0E08               	movlw	8
  3204  002DEE                     u8927:
  3205  002DEE  2EE8               	decfsz	wreg,f,c
  3206  002DF0  D7FE               	bra	u8927
  3207  002DF2  F000               	nop	
  3208                           
  3209                           ;main.c: 216:             RB3 = 0;
  3210  002DF4  9681               	bcf	3969,3,c	;volatile
  3211                           
  3212                           ;main.c: 218:             RBIE = 1;
  3213  002DF6  86F2               	bsf	4082,3,c	;volatile
  3214                           
  3215                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3216  002DF8  0E02               	movlw	2
  3217  002DFA  0100               	movlb	0	; () banked
  3218  002DFC  6F81               	movwf	(??_trig+1)& (0+255),b
  3219  002DFE  0EB7               	movlw	183
  3220  002E00  6F80               	movwf	??_trig& (0+255),b
  3221  002E02  0E4C               	movlw	76
  3222  002E04                     u8937:
  3223  002E04  2EE8               	decfsz	wreg,f,c
  3224  002E06  D7FE               	bra	u8937
  3225  002E08  2F80               	decfsz	??_trig& (0+255),f,b
  3226  002E0A  D7FC               	bra	u8937
  3227  002E0C  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3228  002E0E  D7FA               	bra	u8937
  3229  002E10  F000               	nop	
  3230  002E12                     l7206:
  3231                           
  3232                           ;main.c: 221:         if(b==4){
  3233  002E12  0E04               	movlw	4
  3234  002E14  185A               	xorwf	_b,w,c
  3235  002E16  105B               	iorwf	_b+1,w,c
  3236  002E18  A4D8               	btfss	status,2,c
  3237  002E1A  D015               	goto	l7216
  3238                           
  3239                           ;main.c: 222:             RBIE = 0;
  3240  002E1C  96F2               	bcf	4082,3,c	;volatile
  3241                           
  3242                           ;main.c: 223:             RB2 = 1;
  3243  002E1E  8481               	bsf	3969,2,c	;volatile
  3244                           
  3245                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3246  002E20  0E08               	movlw	8
  3247  002E22                     u8947:
  3248  002E22  2EE8               	decfsz	wreg,f,c
  3249  002E24  D7FE               	bra	u8947
  3250  002E26  F000               	nop	
  3251                           
  3252                           ;main.c: 225:             RB2 = 0;
  3253  002E28  9481               	bcf	3969,2,c	;volatile
  3254                           
  3255                           ;main.c: 227:             RBIE = 1;
  3256  002E2A  86F2               	bsf	4082,3,c	;volatile
  3257                           
  3258                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3259  002E2C  0E02               	movlw	2
  3260  002E2E  0100               	movlb	0	; () banked
  3261  002E30  6F81               	movwf	(??_trig+1)& (0+255),b
  3262  002E32  0EB7               	movlw	183
  3263  002E34  6F80               	movwf	??_trig& (0+255),b
  3264  002E36  0E4C               	movlw	76
  3265  002E38                     u8957:
  3266  002E38  2EE8               	decfsz	wreg,f,c
  3267  002E3A  D7FE               	bra	u8957
  3268  002E3C  2F80               	decfsz	??_trig& (0+255),f,b
  3269  002E3E  D7FC               	bra	u8957
  3270  002E40  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3271  002E42  D7FA               	bra	u8957
  3272  002E44  F000               	nop	
  3273  002E46                     l7216:
  3274                           
  3275                           ;main.c: 230:     }
  3276  002E46  4A5A               	infsnz	_b,f,c
  3277  002E48  2A5B               	incf	_b+1,f,c
  3278  002E4A  BE5B               	btfsc	_b+1,7,c
  3279  002E4C  D791               	goto	l7174
  3280  002E4E  505B               	movf	_b+1,w,c
  3281  002E50  E105               	bnz	u7640
  3282  002E52                     L1:
  3283  002E52  0E05               	movlw	5
  3284  002E54  5C5A               	subwf	_b,w,c
  3285  002E56  B0D8               	btfsc	status,0,c
  3286  002E58  0012               	return	
  3287  002E5A  D78A               	goto	l7174
  3288  002E5C                     u7640:
  3289  002E5C  0012               	return		;funcret
  3290  002E5E                     __end_of_trig:
  3291                           	opt callstack 0
  3292                           
  3293 ;; *************** function _print_echo *****************
  3294 ;; Defined at:
  3295 ;;		line 233 in file "main.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;Total ram usage:        1 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:   14
  3316 ;; This function calls:
  3317 ;;		_lcdInst
  3318 ;;		_printf
  3319 ;; This function is called by:
  3320 ;;		_ultrasonic_main
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text3
  3325  002288                     __ptext3:
  3326                           	opt callstack 0
  3327  002288                     _print_echo:
  3328                           	opt callstack 15
  3329                           
  3330                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3331                           
  3332                           ;incstack = 0
  3333  002288  0E01               	movlw	1
  3334  00228A  EC8B  F01D         	call	_lcdInst
  3335  00228E  0E11               	movlw	17
  3336  002290  0100               	movlb	0	; () banked
  3337  002292  6FF9               	movwf	??_print_echo& (0+255),b
  3338  002294  0E3A               	movlw	58
  3339  002296                     u8967:
  3340  002296  2EE8               	decfsz	wreg,f,c
  3341  002298  D7FE               	bra	u8967
  3342  00229A  2FF9               	decfsz	??_print_echo& (0+255),f,b
  3343  00229C  D7FC               	bra	u8967
  3344  00229E  F000               	nop	
  3345                           
  3346                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3347  0022A0  BE62               	btfsc	_a+1,7,c
  3348  0022A2  D01D               	goto	l7228
  3349  0022A4  5062               	movf	_a+1,w,c
  3350  0022A6  E104               	bnz	u7650
  3351  0022A8  0E02               	movlw	2
  3352  0022AA  5C61               	subwf	_a,w,c
  3353  0022AC  A0D8               	btfss	status,0,c
  3354  0022AE  D017               	goto	l7228
  3355  0022B0                     u7650:
  3356  0022B0  BE62               	btfsc	_a+1,7,c
  3357  0022B2  D006               	goto	u7660
  3358  0022B4  0E91               	movlw	145
  3359  0022B6  5C61               	subwf	_a,w,c
  3360  0022B8  0E01               	movlw	1
  3361  0022BA  5862               	subwfb	_a+1,w,c
  3362  0022BC  B0D8               	btfsc	status,0,c
  3363  0022BE  D00F               	goto	l7228
  3364  0022C0                     u7660:
  3365                           
  3366                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3367  0022C0  0E06               	movlw	low STR_10
  3368  0022C2  0100               	movlb	0	; () banked
  3369  0022C4  6FED               	movwf	printf@fmt& (0+255),b
  3370  0022C6  0EFE               	movlw	high STR_10
  3371  0022C8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3372  0022CA  C061  F0EF         	movff	_a,?_printf+2
  3373  0022CE  C062  F0F0         	movff	_a+1,?_printf+3
  3374  0022D2  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3375  0022D6  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3376  0022DA  EC25  F01D         	call	_printf	;wreg free
  3377  0022DE                     l7228:
  3378                           
  3379                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3380  0022DE  BE62               	btfsc	_a+1,7,c
  3381  0022E0  D00E               	goto	u7680
  3382  0022E2  5062               	movf	_a+1,w,c
  3383  0022E4  E104               	bnz	u7670
  3384  0022E6  0E02               	movlw	2
  3385  0022E8  5C61               	subwf	_a,w,c
  3386  0022EA  A0D8               	btfss	status,0,c
  3387  0022EC  D008               	goto	u7680
  3388  0022EE                     u7670:
  3389  0022EE  BE62               	btfsc	_a+1,7,c
  3390  0022F0  D00D               	goto	l7234
  3391  0022F2  0E91               	movlw	145
  3392  0022F4  5C61               	subwf	_a,w,c
  3393  0022F6  0E01               	movlw	1
  3394  0022F8  5862               	subwfb	_a+1,w,c
  3395  0022FA  A0D8               	btfss	status,0,c
  3396  0022FC  D007               	goto	l7234
  3397  0022FE                     u7680:
  3398                           
  3399                           ;main.c: 239:         printf("Dist1 = X");
  3400  0022FE  0E7E               	movlw	low STR_11
  3401  002300  0100               	movlb	0	; () banked
  3402  002302  6FED               	movwf	printf@fmt& (0+255),b
  3403  002304  0EFF               	movlw	high STR_11
  3404  002306  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3405  002308  EC25  F01D         	call	_printf	;wreg free
  3406  00230C                     l7234:
  3407                           
  3408                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3409  00230C  BE64               	btfsc	_a+3,7,c
  3410  00230E  D020               	goto	l7242
  3411  002310  5064               	movf	_a+3,w,c
  3412  002312  E104               	bnz	u7690
  3413  002314  0E02               	movlw	2
  3414  002316  5C63               	subwf	_a+2,w,c
  3415  002318  A0D8               	btfss	status,0,c
  3416  00231A  D01A               	goto	l7242
  3417  00231C                     u7690:
  3418  00231C  BE64               	btfsc	_a+3,7,c
  3419  00231E  D006               	goto	u7700
  3420  002320  0E91               	movlw	145
  3421  002322  5C63               	subwf	_a+2,w,c
  3422  002324  0E01               	movlw	1
  3423  002326  5864               	subwfb	_a+3,w,c
  3424  002328  B0D8               	btfsc	status,0,c
  3425  00232A  D012               	goto	l7242
  3426  00232C                     u7700:
  3427  00232C  0EC0               	movlw	192
  3428  00232E  EC8B  F01D         	call	_lcdInst
  3429                           
  3430                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3431  002332  0E5A               	movlw	low STR_12
  3432  002334  0100               	movlb	0	; () banked
  3433  002336  6FED               	movwf	printf@fmt& (0+255),b
  3434  002338  0EFE               	movlw	high STR_12
  3435  00233A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3436  00233C  C063  F0EF         	movff	_a+2,?_printf+2
  3437  002340  C064  F0F0         	movff	_a+3,?_printf+3
  3438  002344  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3439  002348  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3440  00234C  EC25  F01D         	call	_printf	;wreg free
  3441  002350                     l7242:
  3442                           
  3443                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3444  002350  BE64               	btfsc	_a+3,7,c
  3445  002352  D00E               	goto	u7720
  3446  002354  5064               	movf	_a+3,w,c
  3447  002356  E104               	bnz	u7710
  3448  002358  0E02               	movlw	2
  3449  00235A  5C63               	subwf	_a+2,w,c
  3450  00235C  A0D8               	btfss	status,0,c
  3451  00235E  D008               	goto	u7720
  3452  002360                     u7710:
  3453  002360  BE64               	btfsc	_a+3,7,c
  3454  002362  D010               	goto	l7250
  3455  002364  0E91               	movlw	145
  3456  002366  5C63               	subwf	_a+2,w,c
  3457  002368  0E01               	movlw	1
  3458  00236A  5864               	subwfb	_a+3,w,c
  3459  00236C  A0D8               	btfss	status,0,c
  3460  00236E  D00A               	goto	l7250
  3461  002370                     u7720:
  3462  002370  0EC0               	movlw	192
  3463  002372  EC8B  F01D         	call	_lcdInst
  3464                           
  3465                           ;main.c: 247:         printf("Dist2 = X");
  3466  002376  0E88               	movlw	low STR_13
  3467  002378  0100               	movlb	0	; () banked
  3468  00237A  6FED               	movwf	printf@fmt& (0+255),b
  3469  00237C  0EFF               	movlw	high STR_13
  3470  00237E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3471  002380  EC25  F01D         	call	_printf	;wreg free
  3472  002384                     l7250:
  3473                           
  3474                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3475  002384  BE66               	btfsc	_a+5,7,c
  3476  002386  D020               	goto	l7258
  3477  002388  5066               	movf	_a+5,w,c
  3478  00238A  E104               	bnz	u7730
  3479  00238C  0E02               	movlw	2
  3480  00238E  5C65               	subwf	_a+4,w,c
  3481  002390  A0D8               	btfss	status,0,c
  3482  002392  D01A               	goto	l7258
  3483  002394                     u7730:
  3484  002394  BE66               	btfsc	_a+5,7,c
  3485  002396  D006               	goto	u7740
  3486  002398  0E91               	movlw	145
  3487  00239A  5C65               	subwf	_a+4,w,c
  3488  00239C  0E01               	movlw	1
  3489  00239E  5866               	subwfb	_a+5,w,c
  3490  0023A0  B0D8               	btfsc	status,0,c
  3491  0023A2  D012               	goto	l7258
  3492  0023A4                     u7740:
  3493  0023A4  0E90               	movlw	144
  3494  0023A6  EC8B  F01D         	call	_lcdInst
  3495                           
  3496                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3497  0023AA  0E6A               	movlw	low STR_14
  3498  0023AC  0100               	movlb	0	; () banked
  3499  0023AE  6FED               	movwf	printf@fmt& (0+255),b
  3500  0023B0  0EFE               	movlw	high STR_14
  3501  0023B2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3502  0023B4  C065  F0EF         	movff	_a+4,?_printf+2
  3503  0023B8  C066  F0F0         	movff	_a+5,?_printf+3
  3504  0023BC  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3505  0023C0  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3506  0023C4  EC25  F01D         	call	_printf	;wreg free
  3507  0023C8                     l7258:
  3508                           
  3509                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3510  0023C8  BE66               	btfsc	_a+5,7,c
  3511  0023CA  D00E               	goto	u7760
  3512  0023CC  5066               	movf	_a+5,w,c
  3513  0023CE  E104               	bnz	u7750
  3514  0023D0  0E02               	movlw	2
  3515  0023D2  5C65               	subwf	_a+4,w,c
  3516  0023D4  A0D8               	btfss	status,0,c
  3517  0023D6  D008               	goto	u7760
  3518  0023D8                     u7750:
  3519  0023D8  BE66               	btfsc	_a+5,7,c
  3520  0023DA  D010               	goto	l7266
  3521  0023DC  0E91               	movlw	145
  3522  0023DE  5C65               	subwf	_a+4,w,c
  3523  0023E0  0E01               	movlw	1
  3524  0023E2  5866               	subwfb	_a+5,w,c
  3525  0023E4  A0D8               	btfss	status,0,c
  3526  0023E6  D00A               	goto	l7266
  3527  0023E8                     u7760:
  3528  0023E8  0E90               	movlw	144
  3529  0023EA  EC8B  F01D         	call	_lcdInst
  3530                           
  3531                           ;main.c: 255:         printf("Dist3 = X");
  3532  0023EE  0E92               	movlw	low STR_15
  3533  0023F0  0100               	movlb	0	; () banked
  3534  0023F2  6FED               	movwf	printf@fmt& (0+255),b
  3535  0023F4  0EFF               	movlw	high STR_15
  3536  0023F6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3537  0023F8  EC25  F01D         	call	_printf	;wreg free
  3538  0023FC                     l7266:
  3539                           
  3540                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3541  0023FC  BE68               	btfsc	_a+7,7,c
  3542  0023FE  D020               	goto	l7274
  3543  002400  5068               	movf	_a+7,w,c
  3544  002402  E104               	bnz	u7770
  3545  002404  0E02               	movlw	2
  3546  002406  5C67               	subwf	_a+6,w,c
  3547  002408  A0D8               	btfss	status,0,c
  3548  00240A  D01A               	goto	l7274
  3549  00240C                     u7770:
  3550  00240C  BE68               	btfsc	_a+7,7,c
  3551  00240E  D006               	goto	u7780
  3552  002410  0E91               	movlw	145
  3553  002412  5C67               	subwf	_a+6,w,c
  3554  002414  0E01               	movlw	1
  3555  002416  5868               	subwfb	_a+7,w,c
  3556  002418  B0D8               	btfsc	status,0,c
  3557  00241A  D012               	goto	l7274
  3558  00241C                     u7780:
  3559  00241C  0ED0               	movlw	208
  3560  00241E  EC8B  F01D         	call	_lcdInst
  3561                           
  3562                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3563  002422  0E17               	movlw	low STR_16
  3564  002424  0100               	movlb	0	; () banked
  3565  002426  6FED               	movwf	printf@fmt& (0+255),b
  3566  002428  0EFE               	movlw	high STR_16
  3567  00242A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3568  00242C  C067  F0EF         	movff	_a+6,?_printf+2
  3569  002430  C068  F0F0         	movff	_a+7,?_printf+3
  3570  002434  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3571  002438  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3572  00243C  EC25  F01D         	call	_printf	;wreg free
  3573  002440                     l7274:
  3574                           
  3575                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3576  002440  BE68               	btfsc	_a+7,7,c
  3577  002442  D00E               	goto	u7800
  3578  002444  5068               	movf	_a+7,w,c
  3579  002446  E104               	bnz	u7790
  3580  002448  0E02               	movlw	2
  3581  00244A  5C67               	subwf	_a+6,w,c
  3582  00244C  A0D8               	btfss	status,0,c
  3583  00244E  D008               	goto	u7800
  3584  002450                     u7790:
  3585  002450  BE68               	btfsc	_a+7,7,c
  3586  002452  0012               	return	
  3587  002454  0E91               	movlw	145
  3588  002456  5C67               	subwf	_a+6,w,c
  3589  002458  0E01               	movlw	1
  3590  00245A  5868               	subwfb	_a+7,w,c
  3591  00245C  A0D8               	btfss	status,0,c
  3592  00245E  0012               	return	
  3593  002460                     u7800:
  3594  002460  0ED0               	movlw	208
  3595  002462  EC8B  F01D         	call	_lcdInst
  3596                           
  3597                           ;main.c: 264:         printf("Dist4 = X");
  3598  002466  0E9C               	movlw	low STR_17
  3599  002468  0100               	movlb	0	; () banked
  3600  00246A  6FED               	movwf	printf@fmt& (0+255),b
  3601  00246C  0EFF               	movlw	high STR_17
  3602  00246E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3603  002470  EC25  F01D         	call	_printf	;wreg free
  3604  002474  0012               	return		;funcret
  3605  002476                     __end_of_print_echo:
  3606                           	opt callstack 0
  3607                           
  3608 ;; *************** function _min *****************
  3609 ;; Defined at:
  3610 ;;		line 267 in file "main.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  array           2    0[BANK0 ] PTR int 
  3613 ;;		 -> a(8), 
  3614 ;;  size            2    2[BANK0 ] int 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  i               2    9[BANK0 ] int 
  3617 ;;  minimum         2    7[BANK0 ] int 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  2    0[BANK0 ] int 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3627 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;Total ram usage:       11 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    3
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_ultrasonic_main
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text4
  3642  002C4C                     __ptext4:
  3643                           	opt callstack 0
  3644  002C4C                     _min:
  3645                           	opt callstack 26
  3646                           
  3647                           ;main.c: 268:     int minimum =0 ;
  3648                           
  3649                           ;incstack = 0
  3650  002C4C  0E00               	movlw	0
  3651  002C4E  0100               	movlb	0	; () banked
  3652  002C50  6F88               	movwf	(min@minimum+1)& (0+255),b
  3653  002C52  0E00               	movlw	0
  3654  002C54  6F87               	movwf	min@minimum& (0+255),b
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;main.c: 269:     if (array[0]<=23){
  3658  002C56  C080  FFD9         	movff	min@array,fsr2l
  3659  002C5A  C081  FFDA         	movff	min@array+1,fsr2h
  3660  002C5E  0E01               	movlw	1
  3661  002C60  BEDB               	btfsc	plusw2,7,c
  3662  002C62  D007               	goto	u7810
  3663  002C64  0E01               	movlw	1
  3664  002C66  50DB               	movf	plusw2,w,c
  3665  002C68  E10C               	bnz	l7288
  3666  002C6A  0E18               	movlw	24
  3667  002C6C  5CDE               	subwf	postinc2,w,c
  3668  002C6E  B0D8               	btfsc	status,0,c
  3669  002C70  D008               	goto	l7288
  3670  002C72                     u7810:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;main.c: 270:          minimum = array[0];}
  3674  002C72  C080  FFD9         	movff	min@array,fsr2l
  3675  002C76  C081  FFDA         	movff	min@array+1,fsr2h
  3676  002C7A  CFDE F087          	movff	postinc2,min@minimum
  3677  002C7E  CFDD F088          	movff	postdec2,min@minimum+1
  3678  002C82                     l7288:
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3682  002C82  0E00               	movlw	0
  3683  002C84  6F8A               	movwf	(min@i+1)& (0+255),b
  3684  002C86  0E00               	movlw	0
  3685  002C88  6F89               	movwf	min@i& (0+255),b
  3686  002C8A  D059               	goto	l7304
  3687  002C8C                     l7290:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3691  002C8C  5187               	movf	min@minimum& (0+255),w,b
  3692  002C8E  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3693  002C90  B4D8               	btfsc	status,2,c
  3694  002C92  D046               	goto	u7860
  3695                           
  3696                           ; BSR set to: 0
  3697  002C94  90D8               	bcf	status,0,c
  3698  002C96  3589               	rlcf	min@i& (0+255),w,b
  3699  002C98  6ED9               	movwf	fsr2l,c
  3700  002C9A  358A               	rlcf	(min@i+1)& (0+255),w,b
  3701  002C9C  6EDA               	movwf	fsr2h,c
  3702  002C9E  5180               	movf	min@array& (0+255),w,b
  3703  002CA0  26D9               	addwf	fsr2l,f,c
  3704  002CA2  5181               	movf	(min@array+1)& (0+255),w,b
  3705  002CA4  22DA               	addwfc	fsr2h,f,c
  3706  002CA6  50DE               	movf	postinc2,w,c
  3707  002CA8  5D87               	subwf	min@minimum& (0+255),w,b
  3708  002CAA  5188               	movf	(min@minimum+1)& (0+255),w,b
  3709  002CAC  0A80               	xorlw	128
  3710  002CAE  6F86               	movwf	(??_min+2)& (0+255),b
  3711  002CB0  50DE               	movf	postinc2,w,c
  3712  002CB2  0A80               	xorlw	128
  3713  002CB4  5986               	subwfb	(??_min+2)& (0+255),w,b
  3714  002CB6  A0D8               	btfss	status,0,c
  3715  002CB8  D040               	goto	l7302
  3716                           
  3717                           ; BSR set to: 0
  3718  002CBA  90D8               	bcf	status,0,c
  3719  002CBC  3589               	rlcf	min@i& (0+255),w,b
  3720  002CBE  6ED9               	movwf	fsr2l,c
  3721  002CC0  358A               	rlcf	(min@i+1)& (0+255),w,b
  3722  002CC2  6EDA               	movwf	fsr2h,c
  3723  002CC4  5180               	movf	min@array& (0+255),w,b
  3724  002CC6  26D9               	addwf	fsr2l,f,c
  3725  002CC8  5181               	movf	(min@array+1)& (0+255),w,b
  3726  002CCA  22DA               	addwfc	fsr2h,f,c
  3727  002CCC  50DE               	movf	postinc2,w,c
  3728  002CCE  10DE               	iorwf	postinc2,w,c
  3729  002CD0  B4D8               	btfsc	status,2,c
  3730  002CD2  D033               	goto	l7302
  3731                           
  3732                           ; BSR set to: 0
  3733  002CD4  90D8               	bcf	status,0,c
  3734  002CD6  3589               	rlcf	min@i& (0+255),w,b
  3735  002CD8  6ED9               	movwf	fsr2l,c
  3736  002CDA  358A               	rlcf	(min@i+1)& (0+255),w,b
  3737  002CDC  6EDA               	movwf	fsr2h,c
  3738  002CDE  5180               	movf	min@array& (0+255),w,b
  3739  002CE0  26D9               	addwf	fsr2l,f,c
  3740  002CE2  5181               	movf	(min@array+1)& (0+255),w,b
  3741  002CE4  22DA               	addwfc	fsr2h,f,c
  3742  002CE6  0E01               	movlw	1
  3743  002CE8  BEDB               	btfsc	plusw2,7,c
  3744  002CEA  D027               	goto	l7302
  3745  002CEC  0E01               	movlw	1
  3746  002CEE  50DB               	movf	plusw2,w,c
  3747  002CF0  E104               	bnz	u7850
  3748  002CF2  0E0E               	movlw	14
  3749  002CF4  5CDE               	subwf	postinc2,w,c
  3750  002CF6  A0D8               	btfss	status,0,c
  3751  002CF8  D020               	goto	l7302
  3752  002CFA                     u7850:
  3753                           
  3754                           ; BSR set to: 0
  3755  002CFA  90D8               	bcf	status,0,c
  3756  002CFC  3589               	rlcf	min@i& (0+255),w,b
  3757  002CFE  6ED9               	movwf	fsr2l,c
  3758  002D00  358A               	rlcf	(min@i+1)& (0+255),w,b
  3759  002D02  6EDA               	movwf	fsr2h,c
  3760  002D04  5180               	movf	min@array& (0+255),w,b
  3761  002D06  26D9               	addwf	fsr2l,f,c
  3762  002D08  5181               	movf	(min@array+1)& (0+255),w,b
  3763  002D0A  22DA               	addwfc	fsr2h,f,c
  3764  002D0C  0E01               	movlw	1
  3765  002D0E  BEDB               	btfsc	plusw2,7,c
  3766  002D10  D007               	goto	u7860
  3767  002D12  0E01               	movlw	1
  3768  002D14  50DB               	movf	plusw2,w,c
  3769  002D16  E111               	bnz	l7302
  3770  002D18  0E18               	movlw	24
  3771  002D1A  5CDE               	subwf	postinc2,w,c
  3772  002D1C  B0D8               	btfsc	status,0,c
  3773  002D1E  D00D               	goto	l7302
  3774  002D20                     u7860:
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;main.c: 282:             minimum = array[i];
  3778  002D20  90D8               	bcf	status,0,c
  3779  002D22  3589               	rlcf	min@i& (0+255),w,b
  3780  002D24  6ED9               	movwf	fsr2l,c
  3781  002D26  358A               	rlcf	(min@i+1)& (0+255),w,b
  3782  002D28  6EDA               	movwf	fsr2h,c
  3783  002D2A  5180               	movf	min@array& (0+255),w,b
  3784  002D2C  26D9               	addwf	fsr2l,f,c
  3785  002D2E  5181               	movf	(min@array+1)& (0+255),w,b
  3786  002D30  22DA               	addwfc	fsr2h,f,c
  3787  002D32  CFDE F087          	movff	postinc2,min@minimum
  3788  002D36  CFDD F088          	movff	postdec2,min@minimum+1
  3789  002D3A                     l7302:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;main.c: 287:     }
  3793  002D3A  4B89               	infsnz	min@i& (0+255),f,b
  3794  002D3C  2B8A               	incf	(min@i+1)& (0+255),f,b
  3795  002D3E                     l7304:
  3796                           
  3797                           ; BSR set to: 0
  3798  002D3E  5182               	movf	min@size& (0+255),w,b
  3799  002D40  5D89               	subwf	min@i& (0+255),w,b
  3800  002D42  518A               	movf	(min@i+1)& (0+255),w,b
  3801  002D44  0A80               	xorlw	128
  3802  002D46  6F84               	movwf	??_min& (0+255),b
  3803  002D48  5183               	movf	(min@size+1)& (0+255),w,b
  3804  002D4A  0A80               	xorlw	128
  3805  002D4C  5984               	subwfb	??_min& (0+255),w,b
  3806  002D4E  A0D8               	btfss	status,0,c
  3807  002D50  D79D               	goto	l7290
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;main.c: 288:     return minimum;
  3811  002D52  C087  F080         	movff	min@minimum,?_min
  3812  002D56  C088  F081         	movff	min@minimum+1,?_min+1
  3813                           
  3814                           ; BSR set to: 0
  3815  002D5A  0012               	return		;funcret
  3816  002D5C                     __end_of_min:
  3817                           	opt callstack 0
  3818                           
  3819 ;; *************** function _start *****************
  3820 ;; Defined at:
  3821 ;;		line 697 in file "main.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    5
  3842 ;; This function calls:
  3843 ;;		_I2C_Master_Init
  3844 ;;		_I2C_Master_Start
  3845 ;;		_I2C_Master_Stop
  3846 ;;		_I2C_Master_Write
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text5
  3853  0036BE                     __ptext5:
  3854                           	opt callstack 0
  3855  0036BE                     _start:
  3856                           	opt callstack 25
  3857                           
  3858                           ;main.c: 698:     I2C_Master_Init(100000);
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;incstack = 0
  3862  0036BE  0EA0               	movlw	160
  3863  0036C0  0100               	movlb	0	; () banked
  3864  0036C2  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  3865  0036C4  0E86               	movlw	134
  3866  0036C6  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  3867  0036C8  0E01               	movlw	1
  3868  0036CA  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  3869  0036CC  0E00               	movlw	0
  3870  0036CE  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  3871  0036D0  ECAE  F01A         	call	_I2C_Master_Init	;wreg free
  3872                           
  3873                           ;main.c: 699:     I2C_Master_Start();
  3874  0036D4  EC9C  F01D         	call	_I2C_Master_Start	;wreg free
  3875                           
  3876                           ;main.c: 700:     I2C_Master_Write(0b00010000);
  3877  0036D8  0E00               	movlw	0
  3878  0036DA  0100               	movlb	0	; () banked
  3879  0036DC  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3880  0036DE  0E10               	movlw	16
  3881  0036E0  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3882  0036E2  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  3883                           
  3884                           ;main.c: 701:     I2C_Master_Stop();
  3885  0036E6  EC98  F01D         	call	_I2C_Master_Stop	;wreg free
  3886                           
  3887                           ;main.c: 703:     I2C_Master_Start();
  3888  0036EA  EC9C  F01D         	call	_I2C_Master_Start	;wreg free
  3889                           
  3890                           ;main.c: 704:     I2C_Master_Write(0b00010000);
  3891  0036EE  0E00               	movlw	0
  3892  0036F0  0100               	movlb	0	; () banked
  3893  0036F2  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3894  0036F4  0E10               	movlw	16
  3895  0036F6  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3896  0036F8  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  3897                           
  3898                           ;main.c: 705:     I2C_Master_Write('2');
  3899  0036FC  0E00               	movlw	0
  3900  0036FE  0100               	movlb	0	; () banked
  3901  003700  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3902  003702  0E32               	movlw	50
  3903  003704  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3904  003706  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  3905                           
  3906                           ;main.c: 706:     I2C_Master_Stop();
  3907  00370A  EC98  F01D         	call	_I2C_Master_Stop	;wreg free
  3908  00370E  0012               	return		;funcret
  3909  003710                     __end_of_start:
  3910                           	opt callstack 0
  3911                           
  3912 ;; *************** function _number_deploy *****************
  3913 ;; Defined at:
  3914 ;;		line 416 in file "main.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  avg_dist        2  121[BANK0 ] int 
  3917 ;;  poles_detect    2  123[BANK0 ] int 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  t_count         2    4[BANK1 ] int 
  3920 ;;  tires_detect    2    2[BANK1 ] int 
  3921 ;;  tires_t         2    0[BANK1 ] int 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  2  121[BANK0 ] int 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;Total ram usage:       12 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:   14
  3938 ;; This function calls:
  3939 ;;		___awdiv
  3940 ;;		_lcdInst
  3941 ;;		_printf
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text6
  3948  002066                     __ptext6:
  3949                           	opt callstack 0
  3950  002066                     _number_deploy:
  3951                           	opt callstack 16
  3952                           
  3953                           ;main.c: 417:     int tires_t=0;
  3954                           
  3955                           ;incstack = 0
  3956  002066  0E00               	movlw	0
  3957  002068  0101               	movlb	1	; () banked
  3958  00206A  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3959  00206C  0E00               	movlw	0
  3960  00206E  6F00               	movwf	number_deploy@tires_t& (0+255),b
  3961                           
  3962                           ;main.c: 418:     int tires_detected=0;
  3963  002070  0E00               	movlw	0
  3964  002072  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  3965  002074  0E00               	movlw	0
  3966  002076  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  3967                           
  3968                           ;main.c: 419:     int t_count = 0;
  3969  002078  0E00               	movlw	0
  3970  00207A  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  3971  00207C  0E00               	movlw	0
  3972  00207E  6F04               	movwf	number_deploy@t_count& (0+255),b
  3973                           
  3974                           ;main.c: 422:     while (t_count<3){
  3975  002080  D0F6               	goto	l7608
  3976  002082                     l7552:
  3977                           
  3978                           ; BSR set to: 1
  3979                           ;main.c: 423:   if (poles_detected != 0){
  3980  002082  0100               	movlb	0	; () banked
  3981  002084  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  3982  002086  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  3983  002088  B4D8               	btfsc	status,2,c
  3984  00208A  D031               	goto	l7562
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;main.c: 424:    if ((avg_dist/1000)<30){
  3988  00208C  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  3989  002090  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  3990  002094  0E03               	movlw	3
  3991  002096  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3992  002098  0EE8               	movlw	232
  3993  00209A  6F82               	movwf	___awdiv@divisor& (0+255),b
  3994  00209C  EC44  F019         	call	___awdiv	;wreg free
  3995  0020A0  0100               	movlb	0	; () banked
  3996  0020A2  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  3997  0020A4  D006               	goto	u8060
  3998  0020A6  5181               	movf	(?___awdiv+1)& (0+255),w,b
  3999  0020A8  E109               	bnz	l7558
  4000  0020AA  0E1E               	movlw	30
  4001  0020AC  5D80               	subwf	?___awdiv& (0+255),w,b
  4002  0020AE  B0D8               	btfsc	status,0,c
  4003  0020B0  D005               	goto	l7558
  4004  0020B2                     u8060:
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;main.c: 426:     tires_t = 1;
  4008  0020B2  0E00               	movlw	0
  4009  0020B4  0101               	movlb	1	; () banked
  4010  0020B6  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4011  0020B8  0E01               	movlw	1
  4012  0020BA  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4013  0020BC                     l7558:
  4014                           
  4015                           ;main.c: 428:    if ((avg_dist/1000)>30){
  4016  0020BC  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4017  0020C0  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4018  0020C4  0E03               	movlw	3
  4019  0020C6  0100               	movlb	0	; () banked
  4020  0020C8  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4021  0020CA  0EE8               	movlw	232
  4022  0020CC  6F82               	movwf	___awdiv@divisor& (0+255),b
  4023  0020CE  EC44  F019         	call	___awdiv	;wreg free
  4024  0020D2  0100               	movlb	0	; () banked
  4025  0020D4  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4026  0020D6  D00B               	goto	l7562
  4027  0020D8  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4028  0020DA  E104               	bnz	u8070
  4029  0020DC  0E1F               	movlw	31
  4030  0020DE  5D80               	subwf	?___awdiv& (0+255),w,b
  4031  0020E0  A0D8               	btfss	status,0,c
  4032  0020E2  D005               	goto	l7562
  4033  0020E4                     u8070:
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;main.c: 429:     tires_t = 2;
  4037  0020E4  0E00               	movlw	0
  4038  0020E6  0101               	movlb	1	; () banked
  4039  0020E8  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4040  0020EA  0E02               	movlw	2
  4041  0020EC  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4042  0020EE                     l7562:
  4043                           
  4044                           ;main.c: 433:   if (poles_detected == 0){
  4045  0020EE  0100               	movlb	0	; () banked
  4046  0020F0  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  4047  0020F2  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4048  0020F4  A4D8               	btfss	status,2,c
  4049  0020F6  D005               	goto	l7566
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;main.c: 434:    tires_t = 2;
  4053  0020F8  0E00               	movlw	0
  4054  0020FA  0101               	movlb	1	; () banked
  4055  0020FC  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4056  0020FE  0E02               	movlw	2
  4057  002100  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4058  002102                     l7566:
  4059                           
  4060                           ;main.c: 437:   if ((a[0]>=2 && a[0] <= 15)){
  4061  002102  BE62               	btfsc	_a+1,7,c
  4062  002104  D028               	goto	l7578
  4063  002106  5062               	movf	_a+1,w,c
  4064  002108  E104               	bnz	u8090
  4065  00210A  0E02               	movlw	2
  4066  00210C  5C61               	subwf	_a,w,c
  4067  00210E  A0D8               	btfss	status,0,c
  4068  002110  D022               	goto	l7578
  4069  002112                     u8090:
  4070  002112  BE62               	btfsc	_a+1,7,c
  4071  002114  D006               	goto	u8100
  4072  002116  5062               	movf	_a+1,w,c
  4073  002118  E11E               	bnz	l7578
  4074  00211A  0E10               	movlw	16
  4075  00211C  5C61               	subwf	_a,w,c
  4076  00211E  B0D8               	btfsc	status,0,c
  4077  002120  D01A               	goto	l7578
  4078  002122                     u8100:
  4079                           
  4080                           ;main.c: 439:             if ((a[1]>=2 && a[1] <= 15)){
  4081  002122  BE64               	btfsc	_a+3,7,c
  4082  002124  D013               	goto	l7576
  4083  002126  5064               	movf	_a+3,w,c
  4084  002128  E104               	bnz	u8110
  4085  00212A  0E02               	movlw	2
  4086  00212C  5C63               	subwf	_a+2,w,c
  4087  00212E  A0D8               	btfss	status,0,c
  4088  002130  D00D               	goto	l7576
  4089  002132                     u8110:
  4090  002132  BE64               	btfsc	_a+3,7,c
  4091  002134  D006               	goto	u8120
  4092  002136  5064               	movf	_a+3,w,c
  4093  002138  E109               	bnz	l7576
  4094  00213A  0E10               	movlw	16
  4095  00213C  5C63               	subwf	_a+2,w,c
  4096  00213E  B0D8               	btfsc	status,0,c
  4097  002140  D005               	goto	l7576
  4098  002142                     u8120:
  4099                           
  4100                           ;main.c: 441:                 tires_detected = 1;
  4101  002142  0E00               	movlw	0
  4102  002144  0101               	movlb	1	; () banked
  4103  002146  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4104  002148  0E01               	movlw	1
  4105  00214A  D004               	goto	L2
  4106  00214C                     l7576:
  4107                           
  4108                           ;main.c: 444:                 tires_detected = 0;
  4109  00214C  0E00               	movlw	0
  4110  00214E  0101               	movlb	1	; () banked
  4111  002150  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4112  002152  0E00               	movlw	0
  4113  002154                     L2:
  4114  002154  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  4115  002156                     l7578:
  4116                           
  4117                           ;main.c: 447:         if ((tires_detected==1)){
  4118  002156  0101               	movlb	1	; () banked
  4119  002158  0502               	decf	number_deploy@tires_detected& (0+255),w,b
  4120  00215A  1103               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4121  00215C  B4D8               	btfsc	status,2,c
  4122                           
  4123                           ; BSR set to: 1
  4124                           ;main.c: 448:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4125  00215E  BE66               	btfsc	_a+5,7,c
  4126  002160  D020               	goto	l7590
  4127  002162  5066               	movf	_a+5,w,c
  4128  002164  E104               	bnz	u8140
  4129  002166  0E02               	movlw	2
  4130  002168  5C65               	subwf	_a+4,w,c
  4131  00216A  A0D8               	btfss	status,0,c
  4132  00216C  D01A               	goto	l7590
  4133  00216E                     u8140:
  4134                           
  4135                           ; BSR set to: 1
  4136  00216E  BE66               	btfsc	_a+5,7,c
  4137  002170  D006               	goto	u8150
  4138  002172  5066               	movf	_a+5,w,c
  4139  002174  E116               	bnz	l7590
  4140  002176  0E10               	movlw	16
  4141  002178  5C65               	subwf	_a+4,w,c
  4142  00217A  B0D8               	btfsc	status,0,c
  4143  00217C  D012               	goto	l7590
  4144  00217E                     u8150:
  4145                           
  4146                           ; BSR set to: 1
  4147  00217E  BE68               	btfsc	_a+7,7,c
  4148  002180  D010               	goto	l7590
  4149  002182  5068               	movf	_a+7,w,c
  4150  002184  E104               	bnz	u8160
  4151  002186  0E02               	movlw	2
  4152  002188  5C67               	subwf	_a+6,w,c
  4153  00218A  A0D8               	btfss	status,0,c
  4154  00218C  D00A               	goto	l7590
  4155  00218E                     u8160:
  4156                           
  4157                           ; BSR set to: 1
  4158  00218E  BE68               	btfsc	_a+7,7,c
  4159  002190  D006               	goto	u8170
  4160  002192  5068               	movf	_a+7,w,c
  4161  002194  E106               	bnz	l7590
  4162  002196  0E10               	movlw	16
  4163  002198  5C67               	subwf	_a+6,w,c
  4164  00219A  B0D8               	btfsc	status,0,c
  4165  00219C  D002               	goto	l7590
  4166  00219E                     u8170:
  4167                           
  4168                           ; BSR set to: 1
  4169                           ;main.c: 449:                 tires_detected++;
  4170  00219E  4B02               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4171  0021A0  2B03               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4172  0021A2                     l7590:
  4173                           
  4174                           ; BSR set to: 1
  4175                           ;main.c: 453:         t_count = tires_t - tires_detected;
  4176  0021A2  5102               	movf	number_deploy@tires_detected& (0+255),w,b
  4177  0021A4  5D00               	subwf	number_deploy@tires_t& (0+255),w,b
  4178  0021A6  6F04               	movwf	number_deploy@t_count& (0+255),b
  4179  0021A8  5103               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4180  0021AA  5901               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4181  0021AC  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  4182                           
  4183                           ; BSR set to: 1
  4184                           ;main.c: 454:         Pole[poles_detected].tires_deployed = t_count;
  4185  0021AE  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4186  0021B2  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4187  0021B6  0100               	movlb	0	; () banked
  4188  0021B8  90D8               	bcf	status,0,c
  4189  0021BA  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4190  0021BC  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4191  0021BE  90D8               	bcf	status,0,c
  4192  0021C0  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4193  0021C2  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4194  0021C4  90D8               	bcf	status,0,c
  4195  0021C6  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4196  0021C8  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4197  0021CA  0E00               	movlw	low _Pole
  4198  0021CC  25FD               	addwf	??_number_deploy& (0+255),w,b
  4199  0021CE  6ED9               	movwf	fsr2l,c
  4200  0021D0  0E02               	movlw	high _Pole
  4201  0021D2  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4202  0021D4  6EDA               	movwf	fsr2h,c
  4203  0021D6  C104  FFDE         	movff	number_deploy@t_count,postinc2
  4204  0021DA  C105  FFDD         	movff	number_deploy@t_count+1,postdec2
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;main.c: 455:         Pole[poles_detected].tires_final = tires_t;
  4208  0021DE  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4209  0021E2  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4210  0021E6  90D8               	bcf	status,0,c
  4211  0021E8  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4212  0021EA  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4213  0021EC  90D8               	bcf	status,0,c
  4214  0021EE  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4215  0021F0  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4216  0021F2  90D8               	bcf	status,0,c
  4217  0021F4  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4218  0021F6  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4219  0021F8  0E02               	movlw	low (_Pole+2)
  4220  0021FA  25FD               	addwf	??_number_deploy& (0+255),w,b
  4221  0021FC  6ED9               	movwf	fsr2l,c
  4222  0021FE  0E02               	movlw	high (_Pole+2)
  4223  002200  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4224  002202  6EDA               	movwf	fsr2h,c
  4225  002204  C100  FFDE         	movff	number_deploy@tires_t,postinc2
  4226  002208  C101  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;main.c: 456:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4230  00220C  0E01               	movlw	1
  4231  00220E  EC8B  F01D         	call	_lcdInst
  4232  002212  0E11               	movlw	17
  4233  002214  0100               	movlb	0	; () banked
  4234  002216  6FFD               	movwf	??_number_deploy& (0+255),b
  4235  002218  0E3A               	movlw	58
  4236  00221A                     u8977:
  4237  00221A  2EE8               	decfsz	wreg,f,c
  4238  00221C  D7FE               	bra	u8977
  4239  00221E  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4240  002220  D7FC               	bra	u8977
  4241  002222  F000               	nop	
  4242                           
  4243                           ;main.c: 457:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4244  002224  0E4A               	movlw	low STR_22
  4245  002226  0100               	movlb	0	; () banked
  4246  002228  6FED               	movwf	printf@fmt& (0+255),b
  4247  00222A  0EFE               	movlw	high STR_22
  4248  00222C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4249  00222E  C102  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4250  002232  C103  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4251  002236  C104  F0F1         	movff	number_deploy@t_count,?_printf+4
  4252  00223A  C105  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4253  00223E  EC25  F01D         	call	_printf	;wreg free
  4254                           
  4255                           ;main.c: 458:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4256  002242  0E0D               	movlw	13
  4257  002244  0100               	movlb	0	; () banked
  4258  002246  6FFE               	movwf	(??_number_deploy+1)& (0+255),b
  4259  002248  0EAF               	movlw	175
  4260  00224A  6FFD               	movwf	??_number_deploy& (0+255),b
  4261  00224C  0EB6               	movlw	182
  4262  00224E                     u8987:
  4263  00224E  2EE8               	decfsz	wreg,f,c
  4264  002250  D7FE               	bra	u8987
  4265  002252  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4266  002254  D7FC               	bra	u8987
  4267  002256  2FFE               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4268  002258  D7FA               	bra	u8987
  4269  00225A  F000               	nop	
  4270                           
  4271                           ;main.c: 460:         if (t_count<=2){
  4272  00225C  0101               	movlb	1	; () banked
  4273  00225E  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4274  002260  D00E               	goto	u8190
  4275  002262  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4276  002264  E104               	bnz	l7608
  4277  002266  0E03               	movlw	3
  4278  002268  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4279  00226A  A0D8               	btfss	status,0,c
  4280  00226C  D008               	goto	u8190
  4281  00226E                     l7608:
  4282                           
  4283                           ; BSR set to: 1
  4284                           ;main.c: 422:     while (t_count<3){
  4285  00226E  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4286  002270  D708               	goto	l7552
  4287  002272  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4288  002274  E104               	bnz	u8190
  4289  002276  0E03               	movlw	3
  4290  002278  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4291  00227A  A0D8               	btfss	status,0,c
  4292  00227C  D702               	goto	l7552
  4293  00227E                     u8190:
  4294                           
  4295                           ; BSR set to: 1
  4296                           ;main.c: 468:     return (int) t_count;
  4297  00227E  C104  F0F9         	movff	number_deploy@t_count,?_number_deploy
  4298  002282  C105  F0FA         	movff	number_deploy@t_count+1,?_number_deploy+1
  4299                           
  4300                           ; BSR set to: 1
  4301  002286  0012               	return		;funcret
  4302  002288                     __end_of_number_deploy:
  4303                           	opt callstack 0
  4304                           
  4305 ;; *************** function ___awdiv *****************
  4306 ;; Defined at:
  4307 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  dividend        2    0[BANK0 ] int 
  4310 ;;  divisor         2    2[BANK0 ] int 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  quotient        2    6[BANK0 ] int 
  4313 ;;  sign            1    5[BANK0 ] unsigned char 
  4314 ;;  counter         1    4[BANK0 ] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  2    0[BANK0 ] int 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;Total ram usage:        8 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    3
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_number_deploy
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text7
  4339  003288                     __ptext7:
  4340                           	opt callstack 0
  4341  003288                     ___awdiv:
  4342                           	opt callstack 26
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;incstack = 0
  4346  003288  0E00               	movlw	0
  4347  00328A  0100               	movlb	0	; () banked
  4348  00328C  6F85               	movwf	___awdiv@sign& (0+255),b
  4349                           
  4350                           ; BSR set to: 0
  4351  00328E  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4352  003290  D006               	goto	l7314
  4353                           
  4354                           ; BSR set to: 0
  4355  003292  6D82               	negf	___awdiv@divisor& (0+255),b
  4356  003294  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4357  003296  B0D8               	btfsc	status,0,c
  4358  003298  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4359                           
  4360                           ; BSR set to: 0
  4361  00329A  0E01               	movlw	1
  4362  00329C  6F85               	movwf	___awdiv@sign& (0+255),b
  4363  00329E                     l7314:
  4364                           
  4365                           ; BSR set to: 0
  4366  00329E  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4367  0032A0  D006               	goto	l7320
  4368                           
  4369                           ; BSR set to: 0
  4370  0032A2  6D80               	negf	___awdiv@dividend& (0+255),b
  4371  0032A4  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4372  0032A6  B0D8               	btfsc	status,0,c
  4373  0032A8  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4374                           
  4375                           ; BSR set to: 0
  4376  0032AA  0E01               	movlw	1
  4377  0032AC  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4378  0032AE                     l7320:
  4379                           
  4380                           ; BSR set to: 0
  4381  0032AE  0E00               	movlw	0
  4382  0032B0  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4383  0032B2  0E00               	movlw	0
  4384  0032B4  6F86               	movwf	___awdiv@quotient& (0+255),b
  4385                           
  4386                           ; BSR set to: 0
  4387  0032B6  5182               	movf	___awdiv@divisor& (0+255),w,b
  4388  0032B8  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4389  0032BA  B4D8               	btfsc	status,2,c
  4390  0032BC  D01C               	goto	l7342
  4391                           
  4392                           ; BSR set to: 0
  4393  0032BE  0E01               	movlw	1
  4394  0032C0  6F84               	movwf	___awdiv@counter& (0+255),b
  4395  0032C2  D004               	goto	l7328
  4396  0032C4                     l7326:
  4397                           
  4398                           ; BSR set to: 0
  4399  0032C4  90D8               	bcf	status,0,c
  4400  0032C6  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4401  0032C8  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4402  0032CA  2B84               	incf	___awdiv@counter& (0+255),f,b
  4403  0032CC                     l7328:
  4404                           
  4405                           ; BSR set to: 0
  4406  0032CC  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4407  0032CE  D7FA               	goto	l7326
  4408  0032D0                     u7910:
  4409                           
  4410                           ; BSR set to: 0
  4411  0032D0  90D8               	bcf	status,0,c
  4412  0032D2  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4413  0032D4  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4414                           
  4415                           ; BSR set to: 0
  4416  0032D6  5182               	movf	___awdiv@divisor& (0+255),w,b
  4417  0032D8  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4418  0032DA  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4419  0032DC  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4420  0032DE  A0D8               	btfss	status,0,c
  4421  0032E0  D005               	goto	l7338
  4422                           
  4423                           ; BSR set to: 0
  4424  0032E2  5182               	movf	___awdiv@divisor& (0+255),w,b
  4425  0032E4  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4426  0032E6  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4427  0032E8  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4428                           
  4429                           ; BSR set to: 0
  4430  0032EA  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4431  0032EC                     l7338:
  4432                           
  4433                           ; BSR set to: 0
  4434  0032EC  90D8               	bcf	status,0,c
  4435  0032EE  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4436  0032F0  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4437                           
  4438                           ; BSR set to: 0
  4439  0032F2  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4440  0032F4  D7ED               	goto	u7910
  4441  0032F6                     l7342:
  4442                           
  4443                           ; BSR set to: 0
  4444  0032F6  5185               	movf	___awdiv@sign& (0+255),w,b
  4445  0032F8  B4D8               	btfsc	status,2,c
  4446  0032FA  D004               	goto	l7346
  4447                           
  4448                           ; BSR set to: 0
  4449  0032FC  6D86               	negf	___awdiv@quotient& (0+255),b
  4450  0032FE  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4451  003300  B0D8               	btfsc	status,0,c
  4452  003302  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4453  003304                     l7346:
  4454                           
  4455                           ; BSR set to: 0
  4456  003304  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4457  003308  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4458                           
  4459                           ; BSR set to: 0
  4460  00330C  0012               	return		;funcret
  4461  00330E                     __end_of___awdiv:
  4462                           	opt callstack 0
  4463                           
  4464 ;; *************** function _brake *****************
  4465 ;; Defined at:
  4466 ;;		line 666 in file "main.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;Total ram usage:        2 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:   14
  4487 ;; This function calls:
  4488 ;;		_I2C_Master_Read
  4489 ;;		_I2C_Master_Start
  4490 ;;		_I2C_Master_Stop
  4491 ;;		_I2C_Master_Write
  4492 ;;		_lcdInst
  4493 ;;		_printf
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;;		_sense_tires
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text8
  4501  003014                     __ptext8:
  4502                           	opt callstack 0
  4503  003014                     _brake:
  4504                           	opt callstack 16
  4505                           
  4506                           ;main.c: 667:     I2C_Master_Start();
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;incstack = 0
  4510  003014  EC9C  F01D         	call	_I2C_Master_Start	;wreg free
  4511                           
  4512                           ;main.c: 668:     I2C_Master_Write(0b00010000);
  4513  003018  0E00               	movlw	0
  4514  00301A  0100               	movlb	0	; () banked
  4515  00301C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4516  00301E  0E10               	movlw	16
  4517  003020  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4518  003022  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  4519                           
  4520                           ;main.c: 669:     I2C_Master_Write('9');
  4521  003026  0E00               	movlw	0
  4522  003028  0100               	movlb	0	; () banked
  4523  00302A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4524  00302C  0E39               	movlw	57
  4525  00302E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4526  003030  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  4527                           
  4528                           ;main.c: 670:     I2C_Master_Stop();
  4529  003034  EC98  F01D         	call	_I2C_Master_Stop	;wreg free
  4530                           
  4531                           ;main.c: 671:     I2C_Master_Start();
  4532  003038  EC9C  F01D         	call	_I2C_Master_Start	;wreg free
  4533                           
  4534                           ;main.c: 672:     I2C_Master_Write(0b00010001);
  4535  00303C  0E00               	movlw	0
  4536  00303E  0100               	movlb	0	; () banked
  4537  003040  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4538  003042  0E11               	movlw	17
  4539  003044  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4540  003046  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  4541                           
  4542                           ;main.c: 673:     avg_dist = I2C_Master_Read(1);
  4543  00304A  0E01               	movlw	1
  4544  00304C  EC10  F01D         	call	_I2C_Master_Read
  4545  003050  0100               	movlb	0	; () banked
  4546  003052  6FF9               	movwf	??_brake& (0+255),b
  4547  003054  51F9               	movf	??_brake& (0+255),w,b
  4548  003056  6E44               	movwf	_avg_dist,c	;volatile
  4549  003058  6A45               	clrf	_avg_dist+1,c	;volatile
  4550  00305A  6A46               	clrf	_avg_dist+2,c	;volatile
  4551  00305C  6A47               	clrf	_avg_dist+3,c	;volatile
  4552                           
  4553                           ;main.c: 674:     I2C_Master_Stop();
  4554  00305E  EC98  F01D         	call	_I2C_Master_Stop	;wreg free
  4555                           
  4556                           ;main.c: 675:     if(avg_dist){
  4557  003062  5044               	movf	_avg_dist,w,c	;volatile
  4558  003064  1045               	iorwf	_avg_dist+1,w,c	;volatile
  4559  003066  1046               	iorwf	_avg_dist+2,w,c	;volatile
  4560  003068  1047               	iorwf	_avg_dist+3,w,c	;volatile
  4561  00306A  B4D8               	btfsc	status,2,c
  4562  00306C  0012               	return	
  4563                           
  4564                           ;main.c: 678:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4565  00306E  0E01               	movlw	1
  4566  003070  EC8B  F01D         	call	_lcdInst
  4567  003074  0E11               	movlw	17
  4568  003076  0100               	movlb	0	; () banked
  4569  003078  6FF9               	movwf	??_brake& (0+255),b
  4570  00307A  0E3A               	movlw	58
  4571  00307C                     u8997:
  4572  00307C  2EE8               	decfsz	wreg,f,c
  4573  00307E  D7FE               	bra	u8997
  4574  003080  2FF9               	decfsz	??_brake& (0+255),f,b
  4575  003082  D7FC               	bra	u8997
  4576  003084  F000               	nop	
  4577                           
  4578                           ;main.c: 686:         printf("%d",avg_dist);
  4579  003086  0ED0               	movlw	low (STR_38+11)
  4580  003088  0100               	movlb	0	; () banked
  4581  00308A  6FED               	movwf	printf@fmt& (0+255),b
  4582  00308C  0EFE               	movlw	high (STR_38+11)
  4583  00308E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4584  003090  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  4585  003094  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  4586  003098  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  4587  00309C  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  4588  0030A0  EC25  F01D         	call	_printf	;wreg free
  4589                           
  4590                           ;main.c: 691:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4591  0030A4  0E0D               	movlw	13
  4592  0030A6  0100               	movlb	0	; () banked
  4593  0030A8  6FFA               	movwf	(??_brake+1)& (0+255),b
  4594  0030AA  0EAF               	movlw	175
  4595  0030AC  6FF9               	movwf	??_brake& (0+255),b
  4596  0030AE  0EB6               	movlw	182
  4597  0030B0                     u9007:
  4598  0030B0  2EE8               	decfsz	wreg,f,c
  4599  0030B2  D7FE               	bra	u9007
  4600  0030B4  2FF9               	decfsz	??_brake& (0+255),f,b
  4601  0030B6  D7FC               	bra	u9007
  4602  0030B8  2FFA               	decfsz	(??_brake+1)& (0+255),f,b
  4603  0030BA  D7FA               	bra	u9007
  4604  0030BC  F000               	nop	
  4605                           
  4606                           ;main.c: 693:     send = 1;
  4607  0030BE  0E01               	movlw	1
  4608  0030C0  6E6D               	movwf	_send,c
  4609  0030C2  0012               	return		;funcret
  4610  0030C4                     __end_of_brake:
  4611                           	opt callstack 0
  4612                           
  4613 ;; *************** function _backwards *****************
  4614 ;; Defined at:
  4615 ;;		line 708 in file "main.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    5
  4636 ;; This function calls:
  4637 ;;		_I2C_Master_Start
  4638 ;;		_I2C_Master_Stop
  4639 ;;		_I2C_Master_Write
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text9
  4646  003A9A                     __ptext9:
  4647                           	opt callstack 0
  4648  003A9A                     _backwards:
  4649                           	opt callstack 25
  4650                           
  4651                           ;main.c: 709:     I2C_Master_Start();
  4652                           
  4653                           ;incstack = 0
  4654  003A9A  EC9C  F01D         	call	_I2C_Master_Start	;wreg free
  4655                           
  4656                           ;main.c: 710:     I2C_Master_Write(0b00010000);
  4657  003A9E  0E00               	movlw	0
  4658  003AA0  0100               	movlb	0	; () banked
  4659  003AA2  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4660  003AA4  0E10               	movlw	16
  4661  003AA6  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4662  003AA8  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  4663                           
  4664                           ;main.c: 711:     I2C_Master_Write('5');
  4665  003AAC  0E00               	movlw	0
  4666  003AAE  0100               	movlb	0	; () banked
  4667  003AB0  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4668  003AB2  0E35               	movlw	53
  4669  003AB4  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4670  003AB6  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  4671                           
  4672                           ;main.c: 712:     I2C_Master_Stop();
  4673  003ABA  EC98  F01D         	call	_I2C_Master_Stop	;wreg free
  4674  003ABE  0012               	return		;funcret
  4675  003AC0                     __end_of_backwards:
  4676                           	opt callstack 0
  4677                           
  4678 ;; *************** function _actuators_main *****************
  4679 ;; Defined at:
  4680 ;;		line 3 in file "actuators_main.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  stack           2   12[BANK1 ] int 
  4683 ;;  steps2_adj      2   14[BANK1 ] int 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;  act_cnt         2   18[BANK1 ] int 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4695 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4696 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4697 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;Total ram usage:        8 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:   16
  4702 ;; This function calls:
  4703 ;;		_initLCD
  4704 ;;		_lcdInst
  4705 ;;		_printf
  4706 ;;		_servo
  4707 ;;		_stepper
  4708 ;;		_stepper2
  4709 ;;		_stepper2_back
  4710 ;;		_system_init
  4711 ;; This function is called by:
  4712 ;;		_main
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text10
  4717  0029F0                     __ptext10:
  4718                           	opt callstack 0
  4719  0029F0                     _actuators_main:
  4720                           	opt callstack 14
  4721                           
  4722                           ;actuators_main.c: 4:     int act_cnt = 0;
  4723                           
  4724                           ;incstack = 0
  4725  0029F0  0E00               	movlw	0
  4726  0029F2  0101               	movlb	1	; () banked
  4727  0029F4  6F13               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4728  0029F6  0E00               	movlw	0
  4729  0029F8  6F12               	movwf	actuators_main@act_cnt& (0+255),b
  4730                           
  4731                           ; BSR set to: 1
  4732                           ;actuators_main.c: 5:     system_init();
  4733  0029FA  EC68  F01C         	call	_system_init	;wreg free
  4734                           
  4735                           ;actuators_main.c: 6:     initLCD();
  4736  0029FE  EC0B  F01A         	call	_initLCD	;wreg free
  4737                           
  4738                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4739  002A02  0E01               	movlw	1
  4740  002A04  EC8B  F01D         	call	_lcdInst
  4741  002A08  0E11               	movlw	17
  4742  002A0A  0101               	movlb	1	; () banked
  4743  002A0C  6F10               	movwf	??_actuators_main& (0+255),b
  4744  002A0E  0E3A               	movlw	58
  4745  002A10                     u9017:
  4746  002A10  2EE8               	decfsz	wreg,f,c
  4747  002A12  D7FE               	bra	u9017
  4748  002A14  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4749  002A16  D7FC               	bra	u9017
  4750  002A18  F000               	nop	
  4751                           
  4752                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4753  002A1A  0ED8               	movlw	low STR_1
  4754  002A1C  0100               	movlb	0	; () banked
  4755  002A1E  6FED               	movwf	printf@fmt& (0+255),b
  4756  002A20  0EFF               	movlw	high STR_1
  4757  002A22  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4758  002A24  0E00               	movlw	0
  4759  002A26  6FF0               	movwf	(?_printf+3)& (0+255),b
  4760  002A28  0E00               	movlw	0
  4761  002A2A  6FEF               	movwf	(?_printf+2)& (0+255),b
  4762  002A2C  EC25  F01D         	call	_printf	;wreg free
  4763                           
  4764                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4765  002A30  0E03               	movlw	3
  4766  002A32  0101               	movlb	1	; () banked
  4767  002A34  6F11               	movwf	(??_actuators_main+1)& (0+255),b
  4768  002A36  0E8A               	movlw	138
  4769  002A38  6F10               	movwf	??_actuators_main& (0+255),b
  4770  002A3A  0E55               	movlw	85
  4771  002A3C                     u9027:
  4772  002A3C  2EE8               	decfsz	wreg,f,c
  4773  002A3E  D7FE               	bra	u9027
  4774  002A40  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4775  002A42  D7FC               	bra	u9027
  4776  002A44  2F11               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4777  002A46  D7FA               	bra	u9027
  4778  002A48  D000               	nop2	
  4779  002A4A                     l7380:
  4780                           
  4781                           ;actuators_main.c: 11:     if (act_cnt==0){
  4782  002A4A  0101               	movlb	1	; () banked
  4783  002A4C  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4784  002A4E  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4785  002A50  A4D8               	btfss	status,2,c
  4786  002A52  D064               	goto	l7456
  4787                           
  4788                           ; BSR set to: 1
  4789                           ;actuators_main.c: 15:         stepper(stack);
  4790  002A54  C10C  F0FD         	movff	actuators_main@stack,stepper@stack
  4791  002A58  C10D  F0FE         	movff	actuators_main@stack+1,stepper@stack+1
  4792  002A5C  EC00  F019         	call	_stepper	;wreg free
  4793                           
  4794                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4795  002A60  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4796  002A64  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4797  002A68  0E00               	movlw	0
  4798  002A6A  EC2F  F017         	call	_stepper2
  4799                           
  4800                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4801  002A6E  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4802  002A72  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4803  002A76  0E01               	movlw	1
  4804  002A78  EC62  F018         	call	_stepper2_back
  4805                           
  4806                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4807  002A7C  0E00               	movlw	0
  4808  002A7E  6E89               	movwf	3977,c	;volatile
  4809                           
  4810                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4811  002A80  908B               	bcf	3979,0,c	;volatile
  4812                           
  4813                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4814  002A82  908D               	bcf	3981,0,c	;volatile
  4815                           
  4816                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4817  002A84  928D               	bcf	3981,1,c	;volatile
  4818                           
  4819                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  4820  002A86  948D               	bcf	3981,2,c	;volatile
  4821                           
  4822                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  4823  002A88  9A8B               	bcf	3979,5,c	;volatile
  4824                           
  4825                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  4826  002A8A  9C8B               	bcf	3979,6,c	;volatile
  4827                           
  4828                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  4829  002A8C  9E8B               	bcf	3979,7,c	;volatile
  4830                           
  4831                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  4832  002A8E  9A89               	bcf	3977,5,c	;volatile
  4833                           
  4834                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4835  002A90  0E01               	movlw	1
  4836  002A92  EC8B  F01D         	call	_lcdInst
  4837  002A96  0E11               	movlw	17
  4838  002A98  0101               	movlb	1	; () banked
  4839  002A9A  6F10               	movwf	??_actuators_main& (0+255),b
  4840  002A9C  0E3A               	movlw	58
  4841  002A9E                     u9037:
  4842  002A9E  2EE8               	decfsz	wreg,f,c
  4843  002AA0  D7FE               	bra	u9037
  4844  002AA2  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4845  002AA4  D7FC               	bra	u9037
  4846  002AA6  F000               	nop	
  4847                           
  4848                           ;actuators_main.c: 31:         printf("Stepper done");
  4849  002AA8  0E09               	movlw	low STR_2
  4850  002AAA  0100               	movlb	0	; () banked
  4851  002AAC  6FED               	movwf	printf@fmt& (0+255),b
  4852  002AAE  0EFF               	movlw	high STR_2
  4853  002AB0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4854  002AB2  EC25  F01D         	call	_printf	;wreg free
  4855                           
  4856                           ;actuators_main.c: 33:         servo();
  4857  002AB6  ECFA  F01C         	call	_servo	;wreg free
  4858                           
  4859                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4860  002ABA  0E01               	movlw	1
  4861  002ABC  EC8B  F01D         	call	_lcdInst
  4862  002AC0  0E11               	movlw	17
  4863  002AC2  0101               	movlb	1	; () banked
  4864  002AC4  6F10               	movwf	??_actuators_main& (0+255),b
  4865  002AC6  0E3A               	movlw	58
  4866  002AC8                     u9047:
  4867  002AC8  2EE8               	decfsz	wreg,f,c
  4868  002ACA  D7FE               	bra	u9047
  4869  002ACC  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4870  002ACE  D7FC               	bra	u9047
  4871  002AD0  F000               	nop	
  4872                           
  4873                           ;actuators_main.c: 35:         printf("Servo done");
  4874  002AD2  0E73               	movlw	low STR_3
  4875  002AD4  0100               	movlb	0	; () banked
  4876  002AD6  6FED               	movwf	printf@fmt& (0+255),b
  4877  002AD8  0EFF               	movlw	high STR_3
  4878  002ADA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4879  002ADC  EC25  F01D         	call	_printf	;wreg free
  4880                           
  4881                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  4882  002AE0  0E00               	movlw	0
  4883  002AE2  6E89               	movwf	3977,c	;volatile
  4884                           
  4885                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  4886  002AE4  908B               	bcf	3979,0,c	;volatile
  4887                           
  4888                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  4889  002AE6  908D               	bcf	3981,0,c	;volatile
  4890                           
  4891                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  4892  002AE8  928D               	bcf	3981,1,c	;volatile
  4893                           
  4894                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  4895  002AEA  948D               	bcf	3981,2,c	;volatile
  4896                           
  4897                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  4898  002AEC  9A8B               	bcf	3979,5,c	;volatile
  4899                           
  4900                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  4901  002AEE  9C8B               	bcf	3979,6,c	;volatile
  4902                           
  4903                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  4904  002AF0  9E8B               	bcf	3979,7,c	;volatile
  4905                           
  4906                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  4907  002AF2  9A89               	bcf	3977,5,c	;volatile
  4908                           
  4909                           ;actuators_main.c: 49:         stepper2(1, steps2_adj);
  4910  002AF4  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4911  002AF8  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4912  002AFC  0E01               	movlw	1
  4913  002AFE  EC2F  F017         	call	_stepper2
  4914                           
  4915                           ;actuators_main.c: 50:                         LATA = 0b00000000;
  4916  002B02  0E00               	movlw	0
  4917  002B04  6E89               	movwf	3977,c	;volatile
  4918                           
  4919                           ;actuators_main.c: 51:         LATCbits.LATC0 = 0;
  4920  002B06  908B               	bcf	3979,0,c	;volatile
  4921                           
  4922                           ;actuators_main.c: 52:         LATEbits.LATE0 = 0;
  4923  002B08  908D               	bcf	3981,0,c	;volatile
  4924                           
  4925                           ;actuators_main.c: 53:         LATEbits.LATE1 = 0;
  4926  002B0A  928D               	bcf	3981,1,c	;volatile
  4927                           
  4928                           ;actuators_main.c: 54:         LATEbits.LATE2 = 0;
  4929  002B0C  948D               	bcf	3981,2,c	;volatile
  4930                           
  4931                           ;actuators_main.c: 55:         LATCbits.LATC5 = 0;
  4932  002B0E  9A8B               	bcf	3979,5,c	;volatile
  4933                           
  4934                           ;actuators_main.c: 56:         LATCbits.LATC6 = 0;
  4935  002B10  9C8B               	bcf	3979,6,c	;volatile
  4936                           
  4937                           ;actuators_main.c: 57:         LATCbits.LATC7 = 0;
  4938  002B12  9E8B               	bcf	3979,7,c	;volatile
  4939                           
  4940                           ;actuators_main.c: 58:         LATAbits.LATA5 = 0;
  4941  002B14  9A89               	bcf	3977,5,c	;volatile
  4942                           
  4943                           ;actuators_main.c: 59:         act_cnt++;
  4944  002B16  0101               	movlb	1	; () banked
  4945  002B18  4B12               	infsnz	actuators_main@act_cnt& (0+255),f,b
  4946  002B1A  2B13               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  4947  002B1C                     l7456:
  4948                           
  4949                           ; BSR set to: 1
  4950                           ;actuators_main.c: 62:     if(act_cnt){
  4951  002B1C  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4952  002B1E  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4953  002B20  A4D8               	btfss	status,2,c
  4954  002B22  0012               	return	
  4955  002B24  D792               	goto	l7380
  4956  002B26                     __end_of_actuators_main:
  4957                           	opt callstack 0
  4958                           
  4959 ;; *************** function _system_init *****************
  4960 ;; Defined at:
  4961 ;;		line 72 in file "actuators_main.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;Total ram usage:        0 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:    3
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_actuators_main
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text11
  4990  0038D0                     __ptext11:
  4991                           	opt callstack 0
  4992  0038D0                     _system_init:
  4993                           	opt callstack 26
  4994                           
  4995                           ;actuators_main.c: 73:     TRISB = 0x00;
  4996                           
  4997                           ; BSR set to: 1
  4998                           ;incstack = 0
  4999  0038D0  0E00               	movlw	0
  5000  0038D2  6E93               	movwf	3987,c	;volatile
  5001                           
  5002                           ;actuators_main.c: 75:     LATB = 0x0F;
  5003  0038D4  0E0F               	movlw	15
  5004  0038D6  6E8A               	movwf	3978,c	;volatile
  5005                           
  5006                           ;actuators_main.c: 76:     TRISA = 0x00;
  5007  0038D8  0E00               	movlw	0
  5008  0038DA  6E92               	movwf	3986,c	;volatile
  5009                           
  5010                           ;actuators_main.c: 77:     LATA = 0x0F;
  5011  0038DC  0E0F               	movlw	15
  5012  0038DE  6E89               	movwf	3977,c	;volatile
  5013                           
  5014                           ;actuators_main.c: 79:     TRISCbits.TRISC1 = 0;
  5015  0038E0  9294               	bcf	3988,1,c	;volatile
  5016                           
  5017                           ;actuators_main.c: 82:     TRISCbits.TRISC2 = 0;
  5018  0038E2  9494               	bcf	3988,2,c	;volatile
  5019                           
  5020                           ;actuators_main.c: 85:     LATD = 0x00;
  5021  0038E4  0E00               	movlw	0
  5022  0038E6  6E8C               	movwf	3980,c	;volatile
  5023                           
  5024                           ;actuators_main.c: 86:     TRISD = 0x00;
  5025  0038E8  0E00               	movlw	0
  5026  0038EA  6E95               	movwf	3989,c	;volatile
  5027                           
  5028                           ;actuators_main.c: 88:     ADCON1 = 0b00001111;
  5029  0038EC  0E0F               	movlw	15
  5030  0038EE  6EC1               	movwf	4033,c	;volatile
  5031                           
  5032                           ;actuators_main.c: 90:     TRISC = 0x00;
  5033  0038F0  0E00               	movlw	0
  5034  0038F2  6E94               	movwf	3988,c	;volatile
  5035                           
  5036                           ;actuators_main.c: 91:     LATC = 0x00;
  5037  0038F4  0E00               	movlw	0
  5038  0038F6  6E8B               	movwf	3979,c	;volatile
  5039                           
  5040                           ;actuators_main.c: 92:     TRISE = 0x00;
  5041  0038F8  0E00               	movlw	0
  5042  0038FA  6E96               	movwf	3990,c	;volatile
  5043                           
  5044                           ;actuators_main.c: 93:     LATE = 0x00;
  5045  0038FC  0E00               	movlw	0
  5046  0038FE  6E8D               	movwf	3981,c	;volatile
  5047  003900  0012               	return		;funcret
  5048  003902                     __end_of_system_init:
  5049                           	opt callstack 0
  5050                           
  5051 ;; *************** function _stepper2_back *****************
  5052 ;; Defined at:
  5053 ;;		line 314 in file "actuators_main.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  direction       1    wreg     unsigned char 
  5056 ;;  steps2_adj      2  125[BANK0 ] int 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  direction       1    1[BANK1 ] unsigned char 
  5059 ;;  i               2    4[BANK1 ] int 
  5060 ;;  count_steppe    2    2[BANK1 ] int 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;Total ram usage:        8 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:   15
  5077 ;; This function calls:
  5078 ;;		_full_drive
  5079 ;;		_lcdInst
  5080 ;;		_printf
  5081 ;; This function is called by:
  5082 ;;		_actuators_main
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text12
  5087  0030C4                     __ptext12:
  5088                           	opt callstack 0
  5089  0030C4                     _stepper2_back:
  5090                           	opt callstack 14
  5091                           
  5092                           ;incstack = 0
  5093                           ;stepper2_back@direction stored from wreg
  5094  0030C4  0101               	movlb	1	; () banked
  5095  0030C6  6F01               	movwf	stepper2_back@direction& (0+255),b
  5096                           
  5097                           ;actuators_main.c: 332:     int count_stepper = 0;
  5098  0030C8  0E00               	movlw	0
  5099  0030CA  0101               	movlb	1	; () banked
  5100  0030CC  6F03               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5101  0030CE  0E00               	movlw	0
  5102  0030D0  6F02               	movwf	stepper2_back@count_stepper& (0+255),b
  5103                           
  5104                           ; BSR set to: 1
  5105                           ;actuators_main.c: 335:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5106                           
  5107                           ; BSR set to: 1
  5108                           ;actuators_main.c: 334:         if (count_stepper<1){
  5109  0030D2  0E01               	movlw	1
  5110  0030D4  EC8B  F01D         	call	_lcdInst
  5111  0030D8  0E11               	movlw	17
  5112  0030DA  0101               	movlb	1	; () banked
  5113  0030DC  6F00               	movwf	??_stepper2_back& (0+255),b
  5114  0030DE  0E3A               	movlw	58
  5115  0030E0                     u9057:
  5116  0030E0  2EE8               	decfsz	wreg,f,c
  5117  0030E2  D7FE               	bra	u9057
  5118  0030E4  2F00               	decfsz	??_stepper2_back& (0+255),f,b
  5119  0030E6  D7FC               	bra	u9057
  5120  0030E8  F000               	nop	
  5121                           
  5122                           ;actuators_main.c: 336:             printf("step1");
  5123  0030EA  0EF3               	movlw	low STR_6
  5124  0030EC  0100               	movlb	0	; () banked
  5125  0030EE  6FED               	movwf	printf@fmt& (0+255),b
  5126  0030F0  0EFF               	movlw	high STR_6
  5127  0030F2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5128  0030F4  EC25  F01D         	call	_printf	;wreg free
  5129  0030F8  0EC0               	movlw	192
  5130  0030FA  EC8B  F01D         	call	_lcdInst
  5131                           
  5132                           ;actuators_main.c: 338:             printf("Step speed %d",4);
  5133  0030FE  0EE1               	movlw	low STR_7
  5134  003100  0100               	movlb	0	; () banked
  5135  003102  6FED               	movwf	printf@fmt& (0+255),b
  5136  003104  0EFE               	movlw	high STR_7
  5137  003106  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5138  003108  0E00               	movlw	0
  5139  00310A  6FF0               	movwf	(?_printf+3)& (0+255),b
  5140  00310C  0E04               	movlw	4
  5141  00310E  6FEF               	movwf	(?_printf+2)& (0+255),b
  5142  003110  EC25  F01D         	call	_printf	;wreg free
  5143                           
  5144                           ;actuators_main.c: 339:             for(int i=0;i<5;i++){
  5145  003114  0E00               	movlw	0
  5146  003116  0101               	movlb	1	; () banked
  5147  003118  6F05               	movwf	(stepper2_back@i+1)& (0+255),b
  5148  00311A  0E00               	movlw	0
  5149  00311C  6F04               	movwf	stepper2_back@i& (0+255),b
  5150  00311E                     l7148:
  5151                           
  5152                           ; BSR set to: 1
  5153                           ;actuators_main.c: 341:                 full_drive(direction, 2);
  5154  00311E  0E00               	movlw	0
  5155  003120  0100               	movlb	0	; () banked
  5156  003122  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5157  003124  0E02               	movlw	2
  5158  003126  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5159  003128  0101               	movlb	1	; () banked
  5160  00312A  5101               	movf	stepper2_back@direction& (0+255),w,b
  5161  00312C  EC18  F00B         	call	_full_drive
  5162                           
  5163                           ;actuators_main.c: 343:             }
  5164  003130  0101               	movlb	1	; () banked
  5165  003132  4B04               	infsnz	stepper2_back@i& (0+255),f,b
  5166  003134  2B05               	incf	(stepper2_back@i+1)& (0+255),f,b
  5167                           
  5168                           ; BSR set to: 1
  5169  003136  BF05               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5170  003138  D7F2               	goto	l7148
  5171  00313A  5105               	movf	(stepper2_back@i+1)& (0+255),w,b
  5172  00313C  E104               	bnz	u7580
  5173  00313E  0E05               	movlw	5
  5174  003140  5D04               	subwf	stepper2_back@i& (0+255),w,b
  5175  003142  A0D8               	btfss	status,0,c
  5176  003144  D7EC               	goto	l7148
  5177  003146                     u7580:
  5178                           
  5179                           ; BSR set to: 1
  5180                           ;actuators_main.c: 344:             printf("cnt is %d", count_stepper);
  5181  003146  0ED8               	movlw	low STR_1
  5182  003148  0100               	movlb	0	; () banked
  5183  00314A  6FED               	movwf	printf@fmt& (0+255),b
  5184  00314C  0EFF               	movlw	high STR_1
  5185  00314E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5186  003150  C102  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5187  003154  C103  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5188  003158  EC25  F01D         	call	_printf	;wreg free
  5189                           
  5190                           ;actuators_main.c: 345:             count_stepper++;
  5191  00315C  0101               	movlb	1	; () banked
  5192  00315E  4B02               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5193  003160  2B03               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5194                           
  5195                           ; BSR set to: 1
  5196  003162  0012               	return		;funcret
  5197  003164                     __end_of_stepper2_back:
  5198                           	opt callstack 0
  5199                           
  5200 ;; *************** function _stepper2 *****************
  5201 ;; Defined at:
  5202 ;;		line 229 in file "actuators_main.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  direction       1    wreg     unsigned char 
  5205 ;;  steps2_adj      2  125[BANK0 ] int 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  direction       1   11[BANK1 ] unsigned char 
  5208 ;;  i               2    7[BANK1 ] int 
  5209 ;;  i               2    5[BANK1 ] int 
  5210 ;;  count_steppe    2    9[BANK1 ] int 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;Total ram usage:       14 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:   15
  5227 ;; This function calls:
  5228 ;;		_full_drive
  5229 ;;		_lcdInst
  5230 ;;		_printf
  5231 ;; This function is called by:
  5232 ;;		_actuators_main
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text13
  5237  002E5E                     __ptext13:
  5238                           	opt callstack 0
  5239  002E5E                     _stepper2:
  5240                           	opt callstack 14
  5241                           
  5242                           ; BSR set to: 1
  5243                           ;incstack = 0
  5244                           ;stepper2@direction stored from wreg
  5245  002E5E  0101               	movlb	1	; () banked
  5246  002E60  6F0B               	movwf	stepper2@direction& (0+255),b
  5247                           
  5248                           ;actuators_main.c: 247:     int count_stepper = 0;
  5249  002E62  0E00               	movlw	0
  5250  002E64  0101               	movlb	1	; () banked
  5251  002E66  6F0A               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5252  002E68  0E00               	movlw	0
  5253  002E6A  6F09               	movwf	stepper2@count_stepper& (0+255),b
  5254                           
  5255                           ; BSR set to: 1
  5256                           ;actuators_main.c: 250:     if (direction == 0){
  5257                           
  5258                           ; BSR set to: 1
  5259                           ;actuators_main.c: 249:         if (count_stepper<1){
  5260  002E6C  510B               	movf	stepper2@direction& (0+255),w,b
  5261  002E6E  A4D8               	btfss	status,2,c
  5262  002E70  D02D               	goto	l7110
  5263                           
  5264                           ; BSR set to: 1
  5265                           ;actuators_main.c: 255:             for(int i=0;i<steps2_adj;i++){
  5266  002E72  0E00               	movlw	0
  5267  002E74  6F06               	movwf	(stepper2@i+1)& (0+255),b
  5268  002E76  0E00               	movlw	0
  5269  002E78  6F05               	movwf	stepper2@i& (0+255),b
  5270  002E7A  D00C               	goto	l7104
  5271  002E7C                     l7100:
  5272                           
  5273                           ; BSR set to: 1
  5274                           ;actuators_main.c: 257:                 full_drive(direction, 2);
  5275  002E7C  0E00               	movlw	0
  5276  002E7E  0100               	movlb	0	; () banked
  5277  002E80  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5278  002E82  0E02               	movlw	2
  5279  002E84  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5280  002E86  0101               	movlb	1	; () banked
  5281  002E88  510B               	movf	stepper2@direction& (0+255),w,b
  5282  002E8A  EC18  F00B         	call	_full_drive
  5283                           
  5284                           ;actuators_main.c: 259:             }
  5285  002E8E  0101               	movlb	1	; () banked
  5286  002E90  4B05               	infsnz	stepper2@i& (0+255),f,b
  5287  002E92  2B06               	incf	(stepper2@i+1)& (0+255),f,b
  5288  002E94                     l7104:
  5289                           
  5290                           ; BSR set to: 1
  5291  002E94  0100               	movlb	0	; () banked
  5292  002E96  51FD               	movf	stepper2@steps2_adj& (0+255),w,b
  5293  002E98  0101               	movlb	1	; () banked
  5294  002E9A  5D05               	subwf	stepper2@i& (0+255),w,b
  5295  002E9C  5106               	movf	(stepper2@i+1)& (0+255),w,b
  5296  002E9E  0A80               	xorlw	128
  5297  002EA0  6F00               	movwf	??_stepper2& (0+255),b
  5298  002EA2  0100               	movlb	0	; () banked
  5299  002EA4  51FE               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5300  002EA6  0A80               	xorlw	128
  5301  002EA8  0101               	movlb	1	; () banked
  5302  002EAA  5900               	subwfb	??_stepper2& (0+255),w,b
  5303  002EAC  A0D8               	btfss	status,0,c
  5304  002EAE  D7E6               	goto	l7100
  5305                           
  5306                           ; BSR set to: 1
  5307                           ;actuators_main.c: 260:             printf("cnt is %d", count_stepper);
  5308  002EB0  0ED8               	movlw	low STR_1
  5309  002EB2  0100               	movlb	0	; () banked
  5310  002EB4  6FED               	movwf	printf@fmt& (0+255),b
  5311  002EB6  0EFF               	movlw	high STR_1
  5312  002EB8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5313  002EBA  C109  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5314  002EBE  C10A  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5315  002EC2  EC25  F01D         	call	_printf	;wreg free
  5316                           
  5317                           ;actuators_main.c: 261:             count_stepper++;
  5318  002EC6  0101               	movlb	1	; () banked
  5319  002EC8  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5320  002ECA  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5321  002ECC                     l7110:
  5322                           
  5323                           ; BSR set to: 1
  5324                           ;actuators_main.c: 263:     if (direction == 1){
  5325  002ECC  050B               	decf	stepper2@direction& (0+255),w,b
  5326  002ECE  A4D8               	btfss	status,2,c
  5327  002ED0  0012               	return	
  5328                           
  5329                           ; BSR set to: 1
  5330                           ;actuators_main.c: 264:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5331  002ED2  0E01               	movlw	1
  5332  002ED4  EC8B  F01D         	call	_lcdInst
  5333  002ED8  0E11               	movlw	17
  5334  002EDA  0101               	movlb	1	; () banked
  5335  002EDC  6F00               	movwf	??_stepper2& (0+255),b
  5336  002EDE  0E3A               	movlw	58
  5337  002EE0                     u9067:
  5338  002EE0  2EE8               	decfsz	wreg,f,c
  5339  002EE2  D7FE               	bra	u9067
  5340  002EE4  2F00               	decfsz	??_stepper2& (0+255),f,b
  5341  002EE6  D7FC               	bra	u9067
  5342  002EE8  F000               	nop	
  5343                           
  5344                           ;actuators_main.c: 265:                         printf("steppp %d", steps2_adj-(5));
  5345  002EEA  0ECE               	movlw	low STR_5
  5346  002EEC  0100               	movlb	0	; () banked
  5347  002EEE  6FED               	movwf	printf@fmt& (0+255),b
  5348  002EF0  0EFF               	movlw	high STR_5
  5349  002EF2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5350  002EF4  0EFB               	movlw	251
  5351  002EF6  25FD               	addwf	stepper2@steps2_adj& (0+255),w,b
  5352  002EF8  6FEF               	movwf	(?_printf+2)& (0+255),b
  5353  002EFA  0EFF               	movlw	255
  5354  002EFC  21FE               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5355  002EFE  6FF0               	movwf	(?_printf+3)& (0+255),b
  5356  002F00  EC25  F01D         	call	_printf	;wreg free
  5357                           
  5358                           ;actuators_main.c: 267:                 for(int i=0;i<(steps2_adj-(5));i++){
  5359  002F04  0E00               	movlw	0
  5360  002F06  0101               	movlb	1	; () banked
  5361  002F08  6F08               	movwf	(stepper2@i_384+1)& (0+255),b
  5362  002F0A  0E00               	movlw	0
  5363  002F0C  6F07               	movwf	stepper2@i_384& (0+255),b
  5364  002F0E  D00C               	goto	l7124
  5365  002F10                     l7120:
  5366                           
  5367                           ; BSR set to: 1
  5368                           ;actuators_main.c: 269:                     full_drive(direction, 2);
  5369  002F10  0E00               	movlw	0
  5370  002F12  0100               	movlb	0	; () banked
  5371  002F14  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5372  002F16  0E02               	movlw	2
  5373  002F18  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5374  002F1A  0101               	movlb	1	; () banked
  5375  002F1C  510B               	movf	stepper2@direction& (0+255),w,b
  5376  002F1E  EC18  F00B         	call	_full_drive
  5377                           
  5378                           ;actuators_main.c: 271:                 }
  5379  002F22  0101               	movlb	1	; () banked
  5380  002F24  4B07               	infsnz	stepper2@i_384& (0+255),f,b
  5381  002F26  2B08               	incf	(stepper2@i_384+1)& (0+255),f,b
  5382  002F28                     l7124:
  5383                           
  5384                           ; BSR set to: 1
  5385  002F28  0EFB               	movlw	251
  5386  002F2A  6F00               	movwf	??_stepper2& (0+255),b
  5387  002F2C  0EFF               	movlw	255
  5388  002F2E  6F01               	movwf	(??_stepper2+1)& (0+255),b
  5389  002F30  C0FD  F102         	movff	stepper2@steps2_adj,??_stepper2+2
  5390  002F34  C0FE  F103         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5391  002F38  5100               	movf	??_stepper2& (0+255),w,b
  5392  002F3A  2702               	addwf	(??_stepper2+2)& (0+255),f,b
  5393  002F3C  5101               	movf	(??_stepper2+1)& (0+255),w,b
  5394  002F3E  2303               	addwfc	(??_stepper2+3)& (0+255),f,b
  5395  002F40  5102               	movf	(??_stepper2+2)& (0+255),w,b
  5396  002F42  5D07               	subwf	stepper2@i_384& (0+255),w,b
  5397  002F44  5108               	movf	(stepper2@i_384+1)& (0+255),w,b
  5398  002F46  0A80               	xorlw	128
  5399  002F48  6F04               	movwf	(??_stepper2+4)& (0+255),b
  5400  002F4A  5103               	movf	(??_stepper2+3)& (0+255),w,b
  5401  002F4C  0A80               	xorlw	128
  5402  002F4E  5904               	subwfb	(??_stepper2+4)& (0+255),w,b
  5403  002F50  A0D8               	btfss	status,0,c
  5404  002F52  D7DE               	goto	l7120
  5405                           
  5406                           ; BSR set to: 1
  5407                           ;actuators_main.c: 272:                 count_stepper++;
  5408  002F54  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5409  002F56  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5410                           
  5411                           ; BSR set to: 1
  5412  002F58  0012               	return		;funcret
  5413  002F5A                     __end_of_stepper2:
  5414                           	opt callstack 0
  5415                           
  5416 ;; *************** function _stepper *****************
  5417 ;; Defined at:
  5418 ;;		line 182 in file "actuators_main.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  stack           2  125[BANK0 ] int 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  i               2    4[BANK1 ] int 
  5423 ;;  i               2    2[BANK1 ] int 
  5424 ;;  count_steppe    2    0[BANK1 ] int 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5434 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;Total ram usage:        8 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:   15
  5441 ;; This function calls:
  5442 ;;		_full_drive
  5443 ;; This function is called by:
  5444 ;;		_actuators_main
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text14
  5449  003200                     __ptext14:
  5450                           	opt callstack 0
  5451  003200                     _stepper:
  5452                           	opt callstack 14
  5453                           
  5454                           ;actuators_main.c: 183:     int count_stepper = 0;
  5455                           
  5456                           ; BSR set to: 1
  5457                           ;incstack = 0
  5458  003200  0E00               	movlw	0
  5459  003202  0101               	movlb	1	; () banked
  5460  003204  6F01               	movwf	(stepper@count_stepper+1)& (0+255),b
  5461  003206  0E00               	movlw	0
  5462  003208  6F00               	movwf	stepper@count_stepper& (0+255),b
  5463                           
  5464                           ; BSR set to: 1
  5465                           ;actuators_main.c: 192:             if (stack == 1){
  5466                           
  5467                           ; BSR set to: 1
  5468                           ;actuators_main.c: 186:         if (count_stepper<1){
  5469  00320A  0100               	movlb	0	; () banked
  5470  00320C  05FD               	decf	stepper@stack& (0+255),w,b
  5471  00320E  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5472  003210  A4D8               	btfss	status,2,c
  5473  003212  D018               	goto	u7510
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;actuators_main.c: 193:                 for(int i=0;i<14;i++){
  5477  003214  0E00               	movlw	0
  5478  003216  0101               	movlb	1	; () banked
  5479  003218  6F03               	movwf	(stepper@i+1)& (0+255),b
  5480  00321A  0E00               	movlw	0
  5481  00321C  6F02               	movwf	stepper@i& (0+255),b
  5482  00321E                     l7070:
  5483                           
  5484                           ; BSR set to: 1
  5485                           ;actuators_main.c: 195:                     full_drive(0, 1);
  5486  00321E  0E00               	movlw	0
  5487  003220  0100               	movlb	0	; () banked
  5488  003222  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5489  003224  0E01               	movlw	1
  5490  003226  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5491  003228  0E00               	movlw	0
  5492  00322A  EC18  F00B         	call	_full_drive
  5493                           
  5494                           ;actuators_main.c: 197:                 }
  5495  00322E  0101               	movlb	1	; () banked
  5496  003230  4B02               	infsnz	stepper@i& (0+255),f,b
  5497  003232  2B03               	incf	(stepper@i+1)& (0+255),f,b
  5498                           
  5499                           ; BSR set to: 1
  5500  003234  BF03               	btfsc	(stepper@i+1)& (0+255),7,b
  5501  003236  D7F3               	goto	l7070
  5502  003238  5103               	movf	(stepper@i+1)& (0+255),w,b
  5503  00323A  E104               	bnz	u7510
  5504  00323C  0E0E               	movlw	14
  5505  00323E  5D02               	subwf	stepper@i& (0+255),w,b
  5506  003240  A0D8               	btfss	status,0,c
  5507  003242  D7ED               	goto	l7070
  5508  003244                     u7510:
  5509                           
  5510                           ;actuators_main.c: 199:             if (stack == 2){
  5511  003244  0E02               	movlw	2
  5512  003246  0100               	movlb	0	; () banked
  5513  003248  19FD               	xorwf	stepper@stack& (0+255),w,b
  5514  00324A  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5515  00324C  A4D8               	btfss	status,2,c
  5516  00324E  D018               	goto	u7530
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;actuators_main.c: 200:                 for(int i=0;i<14;i++){
  5520  003250  0E00               	movlw	0
  5521  003252  0101               	movlb	1	; () banked
  5522  003254  6F05               	movwf	(stepper@i_376+1)& (0+255),b
  5523  003256  0E00               	movlw	0
  5524  003258  6F04               	movwf	stepper@i_376& (0+255),b
  5525  00325A                     l7084:
  5526                           
  5527                           ; BSR set to: 1
  5528                           ;actuators_main.c: 201:                     full_drive(0, 3);
  5529  00325A  0E00               	movlw	0
  5530  00325C  0100               	movlb	0	; () banked
  5531  00325E  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5532  003260  0E03               	movlw	3
  5533  003262  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5534  003264  0E00               	movlw	0
  5535  003266  EC18  F00B         	call	_full_drive
  5536                           
  5537                           ;actuators_main.c: 204:                 }
  5538  00326A  0101               	movlb	1	; () banked
  5539  00326C  4B04               	infsnz	stepper@i_376& (0+255),f,b
  5540  00326E  2B05               	incf	(stepper@i_376+1)& (0+255),f,b
  5541                           
  5542                           ; BSR set to: 1
  5543  003270  BF05               	btfsc	(stepper@i_376+1)& (0+255),7,b
  5544  003272  D7F3               	goto	l7084
  5545  003274  5105               	movf	(stepper@i_376+1)& (0+255),w,b
  5546  003276  E104               	bnz	u7530
  5547  003278  0E0E               	movlw	14
  5548  00327A  5D04               	subwf	stepper@i_376& (0+255),w,b
  5549  00327C  A0D8               	btfss	status,0,c
  5550  00327E  D7ED               	goto	l7084
  5551  003280                     u7530:
  5552                           
  5553                           ;actuators_main.c: 207:             count_stepper++;
  5554  003280  0101               	movlb	1	; () banked
  5555  003282  4B00               	infsnz	stepper@count_stepper& (0+255),f,b
  5556  003284  2B01               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5557                           
  5558                           ; BSR set to: 1
  5559                           
  5560                           ;actuators_main.c: 208:         }
  5561  003286  0012               	return		;funcret
  5562  003288                     __end_of_stepper:
  5563                           	opt callstack 0
  5564                           
  5565 ;; *************** function _full_drive *****************
  5566 ;; Defined at:
  5567 ;;		line 363 in file "actuators_main.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  direction       1    wreg     unsigned char 
  5570 ;;  stepper_no      2  121[BANK0 ] int 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  direction       1  124[BANK0 ] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;Total ram usage:        4 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:   14
  5589 ;; This function calls:
  5590 ;;		_printf
  5591 ;; This function is called by:
  5592 ;;		_stepper
  5593 ;;		_stepper2
  5594 ;;		_stepper2_back
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text15
  5599  001630                     __ptext15:
  5600                           	opt callstack 0
  5601  001630                     _full_drive:
  5602                           	opt callstack 14
  5603                           
  5604                           ; BSR set to: 1
  5605                           ;incstack = 0
  5606                           ;full_drive@direction stored from wreg
  5607  001630  0100               	movlb	0	; () banked
  5608  001632  6FFC               	movwf	full_drive@direction& (0+255),b
  5609                           
  5610                           ;actuators_main.c: 364:     if (stepper_no == 1){
  5611  001634  0100               	movlb	0	; () banked
  5612  001636  05F9               	decf	full_drive@stepper_no& (0+255),w,b
  5613  001638  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5614  00163A  A4D8               	btfss	status,2,c
  5615  00163C  D06B               	goto	l6798
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;actuators_main.c: 365:         if (direction == 1){
  5619  00163E  05FC               	decf	full_drive@direction& (0+255),w,b
  5620  001640  A4D8               	btfss	status,2,c
  5621  001642  D032               	goto	l6782
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;actuators_main.c: 366:             LATA = 0b00000011;
  5625  001644  0E03               	movlw	3
  5626  001646  6E89               	movwf	3977,c	;volatile
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;actuators_main.c: 367:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5630  001648  0E1E               	movlw	30
  5631  00164A  0100               	movlb	0	; () banked
  5632  00164C  6FFB               	movwf	??_full_drive& (0+255),b
  5633  00164E  0E37               	movlw	55
  5634  001650                     u9077:
  5635  001650  2EE8               	decfsz	wreg,f,c
  5636  001652  D7FE               	bra	u9077
  5637  001654  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5638  001656  D7FC               	bra	u9077
  5639                           
  5640                           ;actuators_main.c: 368:             LATA = 0b00000110;
  5641  001658  0E06               	movlw	6
  5642  00165A  6E89               	movwf	3977,c	;volatile
  5643                           
  5644                           ;actuators_main.c: 369:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5645  00165C  0E1E               	movlw	30
  5646  00165E  0100               	movlb	0	; () banked
  5647  001660  6FFB               	movwf	??_full_drive& (0+255),b
  5648  001662  0E37               	movlw	55
  5649  001664                     u9087:
  5650  001664  2EE8               	decfsz	wreg,f,c
  5651  001666  D7FE               	bra	u9087
  5652  001668  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5653  00166A  D7FC               	bra	u9087
  5654                           
  5655                           ;actuators_main.c: 370:             LATA = 0b00001100;
  5656  00166C  0E0C               	movlw	12
  5657  00166E  6E89               	movwf	3977,c	;volatile
  5658                           
  5659                           ;actuators_main.c: 371:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5660  001670  0E1E               	movlw	30
  5661  001672  0100               	movlb	0	; () banked
  5662  001674  6FFB               	movwf	??_full_drive& (0+255),b
  5663  001676  0E37               	movlw	55
  5664  001678                     u9097:
  5665  001678  2EE8               	decfsz	wreg,f,c
  5666  00167A  D7FE               	bra	u9097
  5667  00167C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5668  00167E  D7FC               	bra	u9097
  5669                           
  5670                           ;actuators_main.c: 372:             LATA = 0b00001001;
  5671  001680  0E09               	movlw	9
  5672  001682  6E89               	movwf	3977,c	;volatile
  5673                           
  5674                           ;actuators_main.c: 373:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5675  001684  0E1E               	movlw	30
  5676  001686  0100               	movlb	0	; () banked
  5677  001688  6FFB               	movwf	??_full_drive& (0+255),b
  5678  00168A  0E37               	movlw	55
  5679  00168C                     u9107:
  5680  00168C  2EE8               	decfsz	wreg,f,c
  5681  00168E  D7FE               	bra	u9107
  5682  001690  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5683  001692  D7FC               	bra	u9107
  5684                           
  5685                           ;actuators_main.c: 374:             LATA = 0b00000011;
  5686  001694  0E03               	movlw	3
  5687  001696  6E89               	movwf	3977,c	;volatile
  5688                           
  5689                           ;actuators_main.c: 375:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5690  001698  0E1E               	movlw	30
  5691  00169A  0100               	movlb	0	; () banked
  5692  00169C  6FFB               	movwf	??_full_drive& (0+255),b
  5693  00169E  0E37               	movlw	55
  5694  0016A0                     u9117:
  5695  0016A0  2EE8               	decfsz	wreg,f,c
  5696  0016A2  D7FE               	bra	u9117
  5697  0016A4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5698  0016A6  D7FC               	bra	u9117
  5699  0016A8                     l6782:
  5700                           
  5701                           ;actuators_main.c: 377:         if (direction == 0){
  5702  0016A8  0100               	movlb	0	; () banked
  5703  0016AA  51FC               	movf	full_drive@direction& (0+255),w,b
  5704  0016AC  A4D8               	btfss	status,2,c
  5705  0016AE  D032               	goto	l6798
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;actuators_main.c: 378:             LATA = 0b00001001;
  5709  0016B0  0E09               	movlw	9
  5710  0016B2  6E89               	movwf	3977,c	;volatile
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;actuators_main.c: 379:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5714  0016B4  0E1E               	movlw	30
  5715  0016B6  0100               	movlb	0	; () banked
  5716  0016B8  6FFB               	movwf	??_full_drive& (0+255),b
  5717  0016BA  0E37               	movlw	55
  5718  0016BC                     u9127:
  5719  0016BC  2EE8               	decfsz	wreg,f,c
  5720  0016BE  D7FE               	bra	u9127
  5721  0016C0  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5722  0016C2  D7FC               	bra	u9127
  5723                           
  5724                           ;actuators_main.c: 380:             LATA = 0b00001100;
  5725  0016C4  0E0C               	movlw	12
  5726  0016C6  6E89               	movwf	3977,c	;volatile
  5727                           
  5728                           ;actuators_main.c: 381:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5729  0016C8  0E1E               	movlw	30
  5730  0016CA  0100               	movlb	0	; () banked
  5731  0016CC  6FFB               	movwf	??_full_drive& (0+255),b
  5732  0016CE  0E37               	movlw	55
  5733  0016D0                     u9137:
  5734  0016D0  2EE8               	decfsz	wreg,f,c
  5735  0016D2  D7FE               	bra	u9137
  5736  0016D4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5737  0016D6  D7FC               	bra	u9137
  5738                           
  5739                           ;actuators_main.c: 382:             LATA = 0b00000110;
  5740  0016D8  0E06               	movlw	6
  5741  0016DA  6E89               	movwf	3977,c	;volatile
  5742                           
  5743                           ;actuators_main.c: 383:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5744  0016DC  0E1E               	movlw	30
  5745  0016DE  0100               	movlb	0	; () banked
  5746  0016E0  6FFB               	movwf	??_full_drive& (0+255),b
  5747  0016E2  0E37               	movlw	55
  5748  0016E4                     u9147:
  5749  0016E4  2EE8               	decfsz	wreg,f,c
  5750  0016E6  D7FE               	bra	u9147
  5751  0016E8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5752  0016EA  D7FC               	bra	u9147
  5753                           
  5754                           ;actuators_main.c: 384:             LATA = 0b00000011;
  5755  0016EC  0E03               	movlw	3
  5756  0016EE  6E89               	movwf	3977,c	;volatile
  5757                           
  5758                           ;actuators_main.c: 385:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5759  0016F0  0E1E               	movlw	30
  5760  0016F2  0100               	movlb	0	; () banked
  5761  0016F4  6FFB               	movwf	??_full_drive& (0+255),b
  5762  0016F6  0E37               	movlw	55
  5763  0016F8                     u9157:
  5764  0016F8  2EE8               	decfsz	wreg,f,c
  5765  0016FA  D7FE               	bra	u9157
  5766  0016FC  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5767  0016FE  D7FC               	bra	u9157
  5768                           
  5769                           ;actuators_main.c: 386:             LATA = 0b00001001;
  5770  001700  0E09               	movlw	9
  5771  001702  6E89               	movwf	3977,c	;volatile
  5772                           
  5773                           ;actuators_main.c: 387:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5774  001704  0E1E               	movlw	30
  5775  001706  0100               	movlb	0	; () banked
  5776  001708  6FFB               	movwf	??_full_drive& (0+255),b
  5777  00170A  0E37               	movlw	55
  5778  00170C                     u9167:
  5779  00170C  2EE8               	decfsz	wreg,f,c
  5780  00170E  D7FE               	bra	u9167
  5781  001710  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5782  001712  D7FC               	bra	u9167
  5783  001714                     l6798:
  5784                           
  5785                           ;actuators_main.c: 390:     if (stepper_no == 2){
  5786  001714  0E02               	movlw	2
  5787  001716  0100               	movlb	0	; () banked
  5788  001718  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  5789  00171A  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5790  00171C  A4D8               	btfss	status,2,c
  5791  00171E  D089               	goto	l6876
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;actuators_main.c: 391:         if (direction == 1){
  5795  001720  05FC               	decf	full_drive@direction& (0+255),w,b
  5796  001722  A4D8               	btfss	status,2,c
  5797  001724  D041               	goto	l6838
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;actuators_main.c: 392:             LATCbits.LATC0 = 1;
  5801  001726  808B               	bsf	3979,0,c	;volatile
  5802                           
  5803                           ;actuators_main.c: 393:             LATEbits.LATE0 = 1;
  5804  001728  808D               	bsf	3981,0,c	;volatile
  5805                           
  5806                           ;actuators_main.c: 394:             LATEbits.LATE1 = 0;
  5807  00172A  928D               	bcf	3981,1,c	;volatile
  5808                           
  5809                           ;actuators_main.c: 395:             LATEbits.LATE2 = 0;
  5810  00172C  948D               	bcf	3981,2,c	;volatile
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;actuators_main.c: 396:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5814  00172E  0E0D               	movlw	13
  5815  001730  0100               	movlb	0	; () banked
  5816  001732  6FFB               	movwf	??_full_drive& (0+255),b
  5817  001734  0EFB               	movlw	251
  5818  001736                     u9177:
  5819  001736  2EE8               	decfsz	wreg,f,c
  5820  001738  D7FE               	bra	u9177
  5821  00173A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5822  00173C  D7FC               	bra	u9177
  5823  00173E  D000               	nop2	
  5824                           
  5825                           ;actuators_main.c: 397:             LATCbits.LATC0 = 0;
  5826  001740  908B               	bcf	3979,0,c	;volatile
  5827                           
  5828                           ;actuators_main.c: 398:             LATEbits.LATE0 = 1;
  5829  001742  808D               	bsf	3981,0,c	;volatile
  5830                           
  5831                           ;actuators_main.c: 399:             LATEbits.LATE1 = 1;
  5832  001744  828D               	bsf	3981,1,c	;volatile
  5833                           
  5834                           ;actuators_main.c: 400:             LATEbits.LATE2 = 0;
  5835  001746  948D               	bcf	3981,2,c	;volatile
  5836                           
  5837                           ;actuators_main.c: 401:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5838  001748  0E0D               	movlw	13
  5839  00174A  0100               	movlb	0	; () banked
  5840  00174C  6FFB               	movwf	??_full_drive& (0+255),b
  5841  00174E  0EFB               	movlw	251
  5842  001750                     u9187:
  5843  001750  2EE8               	decfsz	wreg,f,c
  5844  001752  D7FE               	bra	u9187
  5845  001754  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5846  001756  D7FC               	bra	u9187
  5847  001758  D000               	nop2	
  5848                           
  5849                           ;actuators_main.c: 402:             LATCbits.LATC0 = 0;
  5850  00175A  908B               	bcf	3979,0,c	;volatile
  5851                           
  5852                           ;actuators_main.c: 403:             LATEbits.LATE0 = 0;
  5853  00175C  908D               	bcf	3981,0,c	;volatile
  5854                           
  5855                           ;actuators_main.c: 404:             LATEbits.LATE1 = 1;
  5856  00175E  828D               	bsf	3981,1,c	;volatile
  5857                           
  5858                           ;actuators_main.c: 405:             LATEbits.LATE2 = 1;
  5859  001760  848D               	bsf	3981,2,c	;volatile
  5860                           
  5861                           ;actuators_main.c: 406:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5862  001762  0E0D               	movlw	13
  5863  001764  0100               	movlb	0	; () banked
  5864  001766  6FFB               	movwf	??_full_drive& (0+255),b
  5865  001768  0EFB               	movlw	251
  5866  00176A                     u9197:
  5867  00176A  2EE8               	decfsz	wreg,f,c
  5868  00176C  D7FE               	bra	u9197
  5869  00176E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5870  001770  D7FC               	bra	u9197
  5871  001772  D000               	nop2	
  5872                           
  5873                           ;actuators_main.c: 407:             LATCbits.LATC0 = 1;
  5874  001774  808B               	bsf	3979,0,c	;volatile
  5875                           
  5876                           ;actuators_main.c: 408:             LATEbits.LATE0 = 0;
  5877  001776  908D               	bcf	3981,0,c	;volatile
  5878                           
  5879                           ;actuators_main.c: 409:             LATEbits.LATE1 = 0;
  5880  001778  928D               	bcf	3981,1,c	;volatile
  5881                           
  5882                           ;actuators_main.c: 410:             LATEbits.LATE2 = 1;
  5883  00177A  848D               	bsf	3981,2,c	;volatile
  5884                           
  5885                           ;actuators_main.c: 411:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5886  00177C  0E0D               	movlw	13
  5887  00177E  0100               	movlb	0	; () banked
  5888  001780  6FFB               	movwf	??_full_drive& (0+255),b
  5889  001782  0EFB               	movlw	251
  5890  001784                     u9207:
  5891  001784  2EE8               	decfsz	wreg,f,c
  5892  001786  D7FE               	bra	u9207
  5893  001788  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5894  00178A  D7FC               	bra	u9207
  5895  00178C  D000               	nop2	
  5896                           
  5897                           ;actuators_main.c: 412:             LATCbits.LATC0 = 1;
  5898  00178E  808B               	bsf	3979,0,c	;volatile
  5899                           
  5900                           ;actuators_main.c: 413:             LATEbits.LATE0 = 1;
  5901  001790  808D               	bsf	3981,0,c	;volatile
  5902                           
  5903                           ;actuators_main.c: 414:             LATEbits.LATE1 = 0;
  5904  001792  928D               	bcf	3981,1,c	;volatile
  5905                           
  5906                           ;actuators_main.c: 415:             LATEbits.LATE2 = 0;
  5907  001794  948D               	bcf	3981,2,c	;volatile
  5908                           
  5909                           ;actuators_main.c: 416:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5910  001796  0E0D               	movlw	13
  5911  001798  0100               	movlb	0	; () banked
  5912  00179A  6FFB               	movwf	??_full_drive& (0+255),b
  5913  00179C  0EFB               	movlw	251
  5914  00179E                     u9217:
  5915  00179E  2EE8               	decfsz	wreg,f,c
  5916  0017A0  D7FE               	bra	u9217
  5917  0017A2  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5918  0017A4  D7FC               	bra	u9217
  5919  0017A6  D000               	nop2	
  5920  0017A8                     l6838:
  5921                           
  5922                           ;actuators_main.c: 418:         if (direction == 0){
  5923  0017A8  0100               	movlb	0	; () banked
  5924  0017AA  51FC               	movf	full_drive@direction& (0+255),w,b
  5925  0017AC  A4D8               	btfss	status,2,c
  5926  0017AE  D041               	goto	l6876
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;actuators_main.c: 419:             LATCbits.LATC0 = 1;
  5930  0017B0  808B               	bsf	3979,0,c	;volatile
  5931                           
  5932                           ;actuators_main.c: 420:             LATEbits.LATE0 = 0;
  5933  0017B2  908D               	bcf	3981,0,c	;volatile
  5934                           
  5935                           ;actuators_main.c: 421:             LATEbits.LATE1 = 0;
  5936  0017B4  928D               	bcf	3981,1,c	;volatile
  5937                           
  5938                           ;actuators_main.c: 422:             LATEbits.LATE2 = 1;
  5939  0017B6  848D               	bsf	3981,2,c	;volatile
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;actuators_main.c: 423:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5943  0017B8  0E0D               	movlw	13
  5944  0017BA  0100               	movlb	0	; () banked
  5945  0017BC  6FFB               	movwf	??_full_drive& (0+255),b
  5946  0017BE  0EFB               	movlw	251
  5947  0017C0                     u9227:
  5948  0017C0  2EE8               	decfsz	wreg,f,c
  5949  0017C2  D7FE               	bra	u9227
  5950  0017C4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5951  0017C6  D7FC               	bra	u9227
  5952  0017C8  D000               	nop2	
  5953                           
  5954                           ;actuators_main.c: 424:             LATCbits.LATC0 = 0;
  5955  0017CA  908B               	bcf	3979,0,c	;volatile
  5956                           
  5957                           ;actuators_main.c: 425:             LATEbits.LATE0 = 0;
  5958  0017CC  908D               	bcf	3981,0,c	;volatile
  5959                           
  5960                           ;actuators_main.c: 426:             LATEbits.LATE1 = 1;
  5961  0017CE  828D               	bsf	3981,1,c	;volatile
  5962                           
  5963                           ;actuators_main.c: 427:             LATEbits.LATE2 = 1;
  5964  0017D0  848D               	bsf	3981,2,c	;volatile
  5965                           
  5966                           ;actuators_main.c: 428:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5967  0017D2  0E0D               	movlw	13
  5968  0017D4  0100               	movlb	0	; () banked
  5969  0017D6  6FFB               	movwf	??_full_drive& (0+255),b
  5970  0017D8  0EFB               	movlw	251
  5971  0017DA                     u9237:
  5972  0017DA  2EE8               	decfsz	wreg,f,c
  5973  0017DC  D7FE               	bra	u9237
  5974  0017DE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5975  0017E0  D7FC               	bra	u9237
  5976  0017E2  D000               	nop2	
  5977                           
  5978                           ;actuators_main.c: 429:             LATCbits.LATC0 = 0;
  5979  0017E4  908B               	bcf	3979,0,c	;volatile
  5980                           
  5981                           ;actuators_main.c: 430:             LATEbits.LATE0 = 1;
  5982  0017E6  808D               	bsf	3981,0,c	;volatile
  5983                           
  5984                           ;actuators_main.c: 431:             LATEbits.LATE1 = 1;
  5985  0017E8  828D               	bsf	3981,1,c	;volatile
  5986                           
  5987                           ;actuators_main.c: 432:             LATEbits.LATE2 = 0;
  5988  0017EA  948D               	bcf	3981,2,c	;volatile
  5989                           
  5990                           ;actuators_main.c: 433:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5991  0017EC  0E0D               	movlw	13
  5992  0017EE  0100               	movlb	0	; () banked
  5993  0017F0  6FFB               	movwf	??_full_drive& (0+255),b
  5994  0017F2  0EFB               	movlw	251
  5995  0017F4                     u9247:
  5996  0017F4  2EE8               	decfsz	wreg,f,c
  5997  0017F6  D7FE               	bra	u9247
  5998  0017F8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5999  0017FA  D7FC               	bra	u9247
  6000  0017FC  D000               	nop2	
  6001                           
  6002                           ;actuators_main.c: 434:             LATCbits.LATC0 = 1;
  6003  0017FE  808B               	bsf	3979,0,c	;volatile
  6004                           
  6005                           ;actuators_main.c: 435:             LATEbits.LATE0 = 1;
  6006  001800  808D               	bsf	3981,0,c	;volatile
  6007                           
  6008                           ;actuators_main.c: 436:             LATEbits.LATE1 = 0;
  6009  001802  928D               	bcf	3981,1,c	;volatile
  6010                           
  6011                           ;actuators_main.c: 437:             LATEbits.LATE2 = 0;
  6012  001804  948D               	bcf	3981,2,c	;volatile
  6013                           
  6014                           ;actuators_main.c: 438:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6015  001806  0E0D               	movlw	13
  6016  001808  0100               	movlb	0	; () banked
  6017  00180A  6FFB               	movwf	??_full_drive& (0+255),b
  6018  00180C  0EFB               	movlw	251
  6019  00180E                     u9257:
  6020  00180E  2EE8               	decfsz	wreg,f,c
  6021  001810  D7FE               	bra	u9257
  6022  001812  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6023  001814  D7FC               	bra	u9257
  6024  001816  D000               	nop2	
  6025                           
  6026                           ;actuators_main.c: 439:             LATCbits.LATC0 = 1;
  6027  001818  808B               	bsf	3979,0,c	;volatile
  6028                           
  6029                           ;actuators_main.c: 440:             LATEbits.LATE0 = 0;
  6030  00181A  908D               	bcf	3981,0,c	;volatile
  6031                           
  6032                           ;actuators_main.c: 441:             LATEbits.LATE1 = 0;
  6033  00181C  928D               	bcf	3981,1,c	;volatile
  6034                           
  6035                           ;actuators_main.c: 442:             LATEbits.LATE2 = 1;
  6036  00181E  848D               	bsf	3981,2,c	;volatile
  6037                           
  6038                           ;actuators_main.c: 443:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6039  001820  0E0D               	movlw	13
  6040  001822  0100               	movlb	0	; () banked
  6041  001824  6FFB               	movwf	??_full_drive& (0+255),b
  6042  001826  0EFB               	movlw	251
  6043  001828                     u9267:
  6044  001828  2EE8               	decfsz	wreg,f,c
  6045  00182A  D7FE               	bra	u9267
  6046  00182C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6047  00182E  D7FC               	bra	u9267
  6048  001830  D000               	nop2	
  6049  001832                     l6876:
  6050                           
  6051                           ;actuators_main.c: 446:     if (stepper_no == 3){
  6052  001832  0E03               	movlw	3
  6053  001834  0100               	movlb	0	; () banked
  6054  001836  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  6055  001838  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6056  00183A  A4D8               	btfss	status,2,c
  6057  00183C  D086               	goto	l6956
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;actuators_main.c: 447:         printf("what");
  6061  00183E  0EF9               	movlw	low STR_9
  6062  001840  6FED               	movwf	printf@fmt& (0+255),b
  6063  001842  0EFF               	movlw	high STR_9
  6064  001844  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6065  001846  EC25  F01D         	call	_printf	;wreg free
  6066                           
  6067                           ;actuators_main.c: 448:         if (direction == 0){
  6068  00184A  0100               	movlb	0	; () banked
  6069  00184C  51FC               	movf	full_drive@direction& (0+255),w,b
  6070  00184E  A4D8               	btfss	status,2,c
  6071  001850  D03C               	goto	l6918
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;actuators_main.c: 449:             LATCbits.LATC5 = 1;
  6075  001852  8A8B               	bsf	3979,5,c	;volatile
  6076                           
  6077                           ;actuators_main.c: 450:             LATCbits.LATC6 = 0;
  6078  001854  9C8B               	bcf	3979,6,c	;volatile
  6079                           
  6080                           ;actuators_main.c: 451:             LATCbits.LATC7 = 0;
  6081  001856  9E8B               	bcf	3979,7,c	;volatile
  6082                           
  6083                           ;actuators_main.c: 452:             LATAbits.LATA5 = 1;
  6084  001858  8A89               	bsf	3977,5,c	;volatile
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;actuators_main.c: 453:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6088  00185A  0E1E               	movlw	30
  6089  00185C  0100               	movlb	0	; () banked
  6090  00185E  6FFB               	movwf	??_full_drive& (0+255),b
  6091  001860  0E37               	movlw	55
  6092  001862                     u9277:
  6093  001862  2EE8               	decfsz	wreg,f,c
  6094  001864  D7FE               	bra	u9277
  6095  001866  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6096  001868  D7FC               	bra	u9277
  6097                           
  6098                           ;actuators_main.c: 454:             LATCbits.LATC5 = 1;
  6099  00186A  8A8B               	bsf	3979,5,c	;volatile
  6100                           
  6101                           ;actuators_main.c: 455:             LATCbits.LATC6 = 1;
  6102  00186C  8C8B               	bsf	3979,6,c	;volatile
  6103                           
  6104                           ;actuators_main.c: 456:             LATCbits.LATC7 = 0;
  6105  00186E  9E8B               	bcf	3979,7,c	;volatile
  6106                           
  6107                           ;actuators_main.c: 457:             LATAbits.LATA5 = 0;
  6108  001870  9A89               	bcf	3977,5,c	;volatile
  6109                           
  6110                           ;actuators_main.c: 458:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6111  001872  0E1E               	movlw	30
  6112  001874  0100               	movlb	0	; () banked
  6113  001876  6FFB               	movwf	??_full_drive& (0+255),b
  6114  001878  0E37               	movlw	55
  6115  00187A                     u9287:
  6116  00187A  2EE8               	decfsz	wreg,f,c
  6117  00187C  D7FE               	bra	u9287
  6118  00187E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6119  001880  D7FC               	bra	u9287
  6120                           
  6121                           ;actuators_main.c: 459:             LATCbits.LATC5 = 0;
  6122  001882  9A8B               	bcf	3979,5,c	;volatile
  6123                           
  6124                           ;actuators_main.c: 460:             LATCbits.LATC6 = 1;
  6125  001884  8C8B               	bsf	3979,6,c	;volatile
  6126                           
  6127                           ;actuators_main.c: 461:             LATCbits.LATC7 = 1;
  6128  001886  8E8B               	bsf	3979,7,c	;volatile
  6129                           
  6130                           ;actuators_main.c: 462:             LATAbits.LATA5 = 0;
  6131  001888  9A89               	bcf	3977,5,c	;volatile
  6132                           
  6133                           ;actuators_main.c: 463:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6134  00188A  0E1E               	movlw	30
  6135  00188C  0100               	movlb	0	; () banked
  6136  00188E  6FFB               	movwf	??_full_drive& (0+255),b
  6137  001890  0E37               	movlw	55
  6138  001892                     u9297:
  6139  001892  2EE8               	decfsz	wreg,f,c
  6140  001894  D7FE               	bra	u9297
  6141  001896  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6142  001898  D7FC               	bra	u9297
  6143                           
  6144                           ;actuators_main.c: 464:             LATCbits.LATC5 = 0;
  6145  00189A  9A8B               	bcf	3979,5,c	;volatile
  6146                           
  6147                           ;actuators_main.c: 465:             LATCbits.LATC6 = 0;
  6148  00189C  9C8B               	bcf	3979,6,c	;volatile
  6149                           
  6150                           ;actuators_main.c: 466:             LATCbits.LATC7 = 1;
  6151  00189E  8E8B               	bsf	3979,7,c	;volatile
  6152                           
  6153                           ;actuators_main.c: 467:             LATAbits.LATA5 = 1;
  6154  0018A0  8A89               	bsf	3977,5,c	;volatile
  6155                           
  6156                           ;actuators_main.c: 468:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6157  0018A2  0E1E               	movlw	30
  6158  0018A4  0100               	movlb	0	; () banked
  6159  0018A6  6FFB               	movwf	??_full_drive& (0+255),b
  6160  0018A8  0E37               	movlw	55
  6161  0018AA                     u9307:
  6162  0018AA  2EE8               	decfsz	wreg,f,c
  6163  0018AC  D7FE               	bra	u9307
  6164  0018AE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6165  0018B0  D7FC               	bra	u9307
  6166                           
  6167                           ;actuators_main.c: 469:             LATCbits.LATC5 = 1;
  6168  0018B2  8A8B               	bsf	3979,5,c	;volatile
  6169                           
  6170                           ;actuators_main.c: 470:             LATCbits.LATC6 = 0;
  6171  0018B4  9C8B               	bcf	3979,6,c	;volatile
  6172                           
  6173                           ;actuators_main.c: 471:             LATCbits.LATC7 = 0;
  6174  0018B6  9E8B               	bcf	3979,7,c	;volatile
  6175                           
  6176                           ;actuators_main.c: 472:             LATAbits.LATA5 = 1;
  6177  0018B8  8A89               	bsf	3977,5,c	;volatile
  6178                           
  6179                           ;actuators_main.c: 473:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6180  0018BA  0E1E               	movlw	30
  6181  0018BC  0100               	movlb	0	; () banked
  6182  0018BE  6FFB               	movwf	??_full_drive& (0+255),b
  6183  0018C0  0E37               	movlw	55
  6184  0018C2                     u9317:
  6185  0018C2  2EE8               	decfsz	wreg,f,c
  6186  0018C4  D7FE               	bra	u9317
  6187  0018C6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6188  0018C8  D7FC               	bra	u9317
  6189  0018CA                     l6918:
  6190                           
  6191                           ;actuators_main.c: 475:         if (direction == 1){
  6192  0018CA  0100               	movlb	0	; () banked
  6193  0018CC  05FC               	decf	full_drive@direction& (0+255),w,b
  6194  0018CE  A4D8               	btfss	status,2,c
  6195  0018D0  D03C               	goto	l6956
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;actuators_main.c: 476:             LATCbits.LATC5 = 1;
  6199  0018D2  8A8B               	bsf	3979,5,c	;volatile
  6200                           
  6201                           ;actuators_main.c: 477:             LATCbits.LATC6 = 1;
  6202  0018D4  8C8B               	bsf	3979,6,c	;volatile
  6203                           
  6204                           ;actuators_main.c: 478:             LATCbits.LATC7 = 0;
  6205  0018D6  9E8B               	bcf	3979,7,c	;volatile
  6206                           
  6207                           ;actuators_main.c: 479:             LATAbits.LATA5 = 0;
  6208  0018D8  9A89               	bcf	3977,5,c	;volatile
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;actuators_main.c: 480:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6212  0018DA  0E1E               	movlw	30
  6213  0018DC  0100               	movlb	0	; () banked
  6214  0018DE  6FFB               	movwf	??_full_drive& (0+255),b
  6215  0018E0  0E37               	movlw	55
  6216  0018E2                     u9327:
  6217  0018E2  2EE8               	decfsz	wreg,f,c
  6218  0018E4  D7FE               	bra	u9327
  6219  0018E6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6220  0018E8  D7FC               	bra	u9327
  6221                           
  6222                           ;actuators_main.c: 481:             LATCbits.LATC5 = 0;
  6223  0018EA  9A8B               	bcf	3979,5,c	;volatile
  6224                           
  6225                           ;actuators_main.c: 482:             LATCbits.LATC6 = 1;
  6226  0018EC  8C8B               	bsf	3979,6,c	;volatile
  6227                           
  6228                           ;actuators_main.c: 483:             LATCbits.LATC7 = 1;
  6229  0018EE  8E8B               	bsf	3979,7,c	;volatile
  6230                           
  6231                           ;actuators_main.c: 484:             LATAbits.LATA5 = 0;
  6232  0018F0  9A89               	bcf	3977,5,c	;volatile
  6233                           
  6234                           ;actuators_main.c: 485:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6235  0018F2  0E1E               	movlw	30
  6236  0018F4  0100               	movlb	0	; () banked
  6237  0018F6  6FFB               	movwf	??_full_drive& (0+255),b
  6238  0018F8  0E37               	movlw	55
  6239  0018FA                     u9337:
  6240  0018FA  2EE8               	decfsz	wreg,f,c
  6241  0018FC  D7FE               	bra	u9337
  6242  0018FE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6243  001900  D7FC               	bra	u9337
  6244                           
  6245                           ;actuators_main.c: 486:             LATCbits.LATC5 = 0;
  6246  001902  9A8B               	bcf	3979,5,c	;volatile
  6247                           
  6248                           ;actuators_main.c: 487:             LATCbits.LATC6 = 0;
  6249  001904  9C8B               	bcf	3979,6,c	;volatile
  6250                           
  6251                           ;actuators_main.c: 488:             LATCbits.LATC7 = 1;
  6252  001906  8E8B               	bsf	3979,7,c	;volatile
  6253                           
  6254                           ;actuators_main.c: 489:             LATAbits.LATA5 = 1;
  6255  001908  8A89               	bsf	3977,5,c	;volatile
  6256                           
  6257                           ;actuators_main.c: 490:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6258  00190A  0E1E               	movlw	30
  6259  00190C  0100               	movlb	0	; () banked
  6260  00190E  6FFB               	movwf	??_full_drive& (0+255),b
  6261  001910  0E37               	movlw	55
  6262  001912                     u9347:
  6263  001912  2EE8               	decfsz	wreg,f,c
  6264  001914  D7FE               	bra	u9347
  6265  001916  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6266  001918  D7FC               	bra	u9347
  6267                           
  6268                           ;actuators_main.c: 491:             LATCbits.LATC5 = 1;
  6269  00191A  8A8B               	bsf	3979,5,c	;volatile
  6270                           
  6271                           ;actuators_main.c: 492:             LATCbits.LATC6 = 0;
  6272  00191C  9C8B               	bcf	3979,6,c	;volatile
  6273                           
  6274                           ;actuators_main.c: 493:             LATCbits.LATC7 = 0;
  6275  00191E  9E8B               	bcf	3979,7,c	;volatile
  6276                           
  6277                           ;actuators_main.c: 494:             LATAbits.LATA5 = 1;
  6278  001920  8A89               	bsf	3977,5,c	;volatile
  6279                           
  6280                           ;actuators_main.c: 495:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6281  001922  0E1E               	movlw	30
  6282  001924  0100               	movlb	0	; () banked
  6283  001926  6FFB               	movwf	??_full_drive& (0+255),b
  6284  001928  0E37               	movlw	55
  6285  00192A                     u9357:
  6286  00192A  2EE8               	decfsz	wreg,f,c
  6287  00192C  D7FE               	bra	u9357
  6288  00192E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6289  001930  D7FC               	bra	u9357
  6290                           
  6291                           ;actuators_main.c: 496:             LATCbits.LATC5 = 1;
  6292  001932  8A8B               	bsf	3979,5,c	;volatile
  6293                           
  6294                           ;actuators_main.c: 497:             LATCbits.LATC6 = 1;
  6295  001934  8C8B               	bsf	3979,6,c	;volatile
  6296                           
  6297                           ;actuators_main.c: 498:             LATCbits.LATC7 = 0;
  6298  001936  9E8B               	bcf	3979,7,c	;volatile
  6299                           
  6300                           ;actuators_main.c: 499:             LATAbits.LATA5 = 0;
  6301  001938  9A89               	bcf	3977,5,c	;volatile
  6302                           
  6303                           ;actuators_main.c: 500:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6304  00193A  0E1E               	movlw	30
  6305  00193C  0100               	movlb	0	; () banked
  6306  00193E  6FFB               	movwf	??_full_drive& (0+255),b
  6307  001940  0E37               	movlw	55
  6308  001942                     u9367:
  6309  001942  2EE8               	decfsz	wreg,f,c
  6310  001944  D7FE               	bra	u9367
  6311  001946  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6312  001948  D7FC               	bra	u9367
  6313  00194A                     l6956:
  6314                           
  6315                           ;actuators_main.c: 503:                     LATA = 0b00000000;
  6316  00194A  0E00               	movlw	0
  6317  00194C  6E89               	movwf	3977,c	;volatile
  6318                           
  6319                           ;actuators_main.c: 504:         LATCbits.LATC0 = 0;
  6320  00194E  908B               	bcf	3979,0,c	;volatile
  6321                           
  6322                           ;actuators_main.c: 505:         LATEbits.LATE0 = 0;
  6323  001950  908D               	bcf	3981,0,c	;volatile
  6324                           
  6325                           ;actuators_main.c: 506:         LATEbits.LATE1 = 0;
  6326  001952  928D               	bcf	3981,1,c	;volatile
  6327                           
  6328                           ;actuators_main.c: 507:         LATEbits.LATE2 = 0;
  6329  001954  948D               	bcf	3981,2,c	;volatile
  6330                           
  6331                           ;actuators_main.c: 508:         LATCbits.LATC5 = 0;
  6332  001956  9A8B               	bcf	3979,5,c	;volatile
  6333                           
  6334                           ;actuators_main.c: 509:         LATCbits.LATC6 = 0;
  6335  001958  9C8B               	bcf	3979,6,c	;volatile
  6336                           
  6337                           ;actuators_main.c: 510:         LATCbits.LATC7 = 0;
  6338  00195A  9E8B               	bcf	3979,7,c	;volatile
  6339                           
  6340                           ;actuators_main.c: 511:         LATAbits.LATA5 = 0;
  6341  00195C  9A89               	bcf	3977,5,c	;volatile
  6342  00195E  0012               	return		;funcret
  6343  001960                     __end_of_full_drive:
  6344                           	opt callstack 0
  6345                           
  6346 ;; *************** function _servo *****************
  6347 ;; Defined at:
  6348 ;;		line 165 in file "actuators_main.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;		None
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;		None
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  1    wreg      void 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0, cstack
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;Total ram usage:        2 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    4
  6369 ;; This function calls:
  6370 ;;		_servoRotate0
  6371 ;;		_servoRotate180
  6372 ;; This function is called by:
  6373 ;;		_actuators_main
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text16
  6378  0039F4                     __ptext16:
  6379                           	opt callstack 0
  6380  0039F4                     _servo:
  6381                           	opt callstack 25
  6382                           
  6383                           ;actuators_main.c: 167:   TRISC = 0;
  6384                           
  6385                           ;incstack = 0
  6386  0039F4  0E00               	movlw	0
  6387  0039F6  6E94               	movwf	3988,c	;volatile
  6388                           
  6389                           ;actuators_main.c: 168:   {;actuators_main.c: 170:     servoRotate0();
  6390  0039F8  EC88  F01B         	call	_servoRotate0	;wreg free
  6391                           
  6392                           ;actuators_main.c: 174:     servoRotate180();
  6393  0039FC  EC09  F01B         	call	_servoRotate180	;wreg free
  6394                           
  6395                           ;actuators_main.c: 176:     _delay((unsigned long)((500)*(10000000/4000.0)));
  6396  003A00  0E07               	movlw	7
  6397  003A02  0100               	movlb	0	; () banked
  6398  003A04  6F84               	movwf	(??_servo+1)& (0+255),b
  6399  003A06  0E58               	movlw	88
  6400  003A08  6F83               	movwf	??_servo& (0+255),b
  6401  003A0A  0E59               	movlw	89
  6402  003A0C                     u9377:
  6403  003A0C  2EE8               	decfsz	wreg,f,c
  6404  003A0E  D7FE               	bra	u9377
  6405  003A10  2F83               	decfsz	??_servo& (0+255),f,b
  6406  003A12  D7FC               	bra	u9377
  6407  003A14  2F84               	decfsz	(??_servo+1)& (0+255),f,b
  6408  003A16  D7FA               	bra	u9377
  6409  003A18  D000               	nop2	
  6410                           
  6411                           ;actuators_main.c: 177:     servoRotate0();
  6412  003A1A  EC88  F01B         	call	_servoRotate0	;wreg free
  6413  003A1E  0012               	return		;funcret
  6414  003A20                     __end_of_servo:
  6415                           	opt callstack 0
  6416                           
  6417 ;; *************** function _servoRotate180 *****************
  6418 ;; Defined at:
  6419 ;;		line 136 in file "actuators_main.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;		None
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  i               2    1[BANK0 ] unsigned int 
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      void 
  6426 ;; Registers used:
  6427 ;;		wreg, status,2, status,0
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;Total ram usage:        3 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    3
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_servo
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text17
  6448  003612                     __ptext17:
  6449                           	opt callstack 0
  6450  003612                     _servoRotate180:
  6451                           	opt callstack 25
  6452                           
  6453                           ;actuators_main.c: 138:   unsigned int i;;actuators_main.c: 141: for(i=0;i<15;i++){
  6454                           
  6455                           ;incstack = 0
  6456  003612  0E00               	movlw	0
  6457  003614  0100               	movlb	0	; () banked
  6458  003616  6F82               	movwf	(servoRotate180@i+1)& (0+255),b
  6459  003618  0E00               	movlw	0
  6460  00361A  6F81               	movwf	servoRotate180@i& (0+255),b
  6461  00361C                     l117:
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;actuators_main.c: 143:         {;actuators_main.c: 144:           RC1 = 1;
  6465  00361C  8282               	bsf	3970,1,c	;volatile
  6466                           
  6467                           ;actuators_main.c: 145:           RC2 = 1;
  6468  00361E  8482               	bsf	3970,2,c	;volatile
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;actuators_main.c: 147:           _delay((unsigned long)((475)*(10000000/4000000.0)));
  6472  003620  0EED               	movlw	237
  6473  003622                     u9387:
  6474  003622  D000               	nop2	
  6475  003624  2EE8               	decfsz	wreg,f,c
  6476  003626  D7FD               	bra	u9387
  6477  003628  D000               	nop2	
  6478                           
  6479                           ;actuators_main.c: 148:           RC2 =0;
  6480  00362A  9482               	bcf	3970,2,c	;volatile
  6481                           
  6482                           ;actuators_main.c: 149:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6483  00362C  0E07               	movlw	7
  6484  00362E  0100               	movlb	0	; () banked
  6485  003630  6F80               	movwf	??_servoRotate180& (0+255),b
  6486  003632  0ED0               	movlw	208
  6487  003634                     u9397:
  6488  003634  2EE8               	decfsz	wreg,f,c
  6489  003636  D7FE               	bra	u9397
  6490  003638  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6491  00363A  D7FC               	bra	u9397
  6492  00363C  F000               	nop	
  6493                           
  6494                           ;actuators_main.c: 150:           RC1 = 0;
  6495  00363E  9282               	bcf	3970,1,c	;volatile
  6496                           
  6497                           ;actuators_main.c: 151:           _delay((unsigned long)((13525)*(10000000/4000000.0)));
  6498  003640  0E2C               	movlw	44
  6499  003642  0100               	movlb	0	; () banked
  6500  003644  6F80               	movwf	??_servoRotate180& (0+255),b
  6501  003646  0EE8               	movlw	232
  6502  003648                     u9407:
  6503  003648  2EE8               	decfsz	wreg,f,c
  6504  00364A  D7FE               	bra	u9407
  6505  00364C  2F80               	decfsz	??_servoRotate180& (0+255),f,b
  6506  00364E  D7FC               	bra	u9407
  6507  003650  F000               	nop	
  6508                           
  6509                           ;actuators_main.c: 152:         };actuators_main.c: 163: }
  6510  003652  0100               	movlb	0	; () banked
  6511  003654  4B81               	infsnz	servoRotate180@i& (0+255),f,b
  6512  003656  2B82               	incf	(servoRotate180@i+1)& (0+255),f,b
  6513  003658  5182               	movf	(servoRotate180@i+1)& (0+255),w,b
  6514  00365A  E105               	bnz	u7350
  6515  00365C  0E0F               	movlw	15
  6516  00365E  5D81               	subwf	servoRotate180@i& (0+255),w,b
  6517  003660  B0D8               	btfsc	status,0,c
  6518  003662  0012               	return	
  6519  003664  D7DB               	goto	l117
  6520  003666                     u7350:
  6521                           
  6522                           ; BSR set to: 0
  6523  003666  0012               	return		;funcret
  6524  003668                     __end_of_servoRotate180:
  6525                           	opt callstack 0
  6526                           
  6527 ;; *************** function _servoRotate0 *****************
  6528 ;; Defined at:
  6529 ;;		line 97 in file "actuators_main.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  i               2    1[BANK0 ] unsigned int 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  1    wreg      void 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;Total ram usage:        3 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    3
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_servo
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text18
  6558  003710                     __ptext18:
  6559                           	opt callstack 0
  6560  003710                     _servoRotate0:
  6561                           	opt callstack 25
  6562                           
  6563                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 102:       for(i=0;i<15;i++
      +                          )
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;incstack = 0
  6567  003710  0E00               	movlw	0
  6568  003712  0100               	movlb	0	; () banked
  6569  003714  6F82               	movwf	(servoRotate0@i+1)& (0+255),b
  6570  003716  0E00               	movlw	0
  6571  003718  6F81               	movwf	servoRotate0@i& (0+255),b
  6572  00371A                     l112:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;actuators_main.c: 103:           {;actuators_main.c: 105:             RC1 = 1;
  6576  00371A  8282               	bsf	3970,1,c	;volatile
  6577                           
  6578                           ;actuators_main.c: 106:             RC2 = 1;
  6579  00371C  8482               	bsf	3970,2,c	;volatile
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;actuators_main.c: 107:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  6583  00371E  0E04               	movlw	4
  6584  003720  0100               	movlb	0	; () banked
  6585  003722  6F80               	movwf	??_servoRotate0& (0+255),b
  6586  003724  0E91               	movlw	145
  6587  003726                     u9417:
  6588  003726  2EE8               	decfsz	wreg,f,c
  6589  003728  D7FE               	bra	u9417
  6590  00372A  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6591  00372C  D7FC               	bra	u9417
  6592                           
  6593                           ;actuators_main.c: 108:             RC2 = 0;
  6594  00372E  9482               	bcf	3970,2,c	;volatile
  6595                           
  6596                           ;actuators_main.c: 109:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  6597  003730  0EFA               	movlw	250
  6598  003732                     u9427:
  6599  003732  2EE8               	decfsz	wreg,f,c
  6600  003734  D7FE               	bra	u9427
  6601                           
  6602                           ;actuators_main.c: 110:             RC1 = 0;
  6603  003736  9282               	bcf	3970,1,c	;volatile
  6604                           
  6605                           ;actuators_main.c: 114:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  6606  003738  0E3D               	movlw	61
  6607  00373A  0100               	movlb	0	; () banked
  6608  00373C  6F80               	movwf	??_servoRotate0& (0+255),b
  6609  00373E  0E62               	movlw	98
  6610  003740                     u9437:
  6611  003740  2EE8               	decfsz	wreg,f,c
  6612  003742  D7FE               	bra	u9437
  6613  003744  2F80               	decfsz	??_servoRotate0& (0+255),f,b
  6614  003746  D7FC               	bra	u9437
  6615  003748  F000               	nop	
  6616                           
  6617                           ;actuators_main.c: 124:           }
  6618  00374A  0100               	movlb	0	; () banked
  6619  00374C  4B81               	infsnz	servoRotate0@i& (0+255),f,b
  6620  00374E  2B82               	incf	(servoRotate0@i+1)& (0+255),f,b
  6621  003750  5182               	movf	(servoRotate0@i+1)& (0+255),w,b
  6622  003752  E105               	bnz	u7340
  6623  003754  0E0F               	movlw	15
  6624  003756  5D81               	subwf	servoRotate0@i& (0+255),w,b
  6625  003758  B0D8               	btfsc	status,0,c
  6626  00375A  0012               	return	
  6627  00375C  D7DE               	goto	l112
  6628  00375E                     u7340:
  6629                           
  6630                           ; BSR set to: 0
  6631  00375E  0012               	return		;funcret
  6632  003760                     __end_of_servoRotate0:
  6633                           	opt callstack 0
  6634                           
  6635 ;; *************** function _UI_main *****************
  6636 ;; Defined at:
  6637 ;;		line 482 in file "main.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  t_dep           2  121[BANK0 ] int 
  6640 ;;  poles_detect    2  123[BANK0 ] int 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  i               1   89[BANK1 ] unsigned char 
  6643 ;;  keypress        1   84[BANK1 ] unsigned char 
  6644 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  6645 ;;  tick            4   85[BANK1 ] unsigned long 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6655 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;Total ram usage:       94 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:   14
  6662 ;; This function calls:
  6663 ;;		_I2C_Master_Init
  6664 ;;		_I2C_Master_Read
  6665 ;;		_I2C_Master_Start
  6666 ;;		_I2C_Master_Stop
  6667 ;;		_I2C_Master_Write
  6668 ;;		___llmod
  6669 ;;		_initLCD
  6670 ;;		_lcdInst
  6671 ;;		_printf
  6672 ;; This function is called by:
  6673 ;;		_main
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text19
  6678  000012                     __ptext19:
  6679                           	opt callstack 0
  6680  000012                     _UI_main:
  6681                           	opt callstack 16
  6682                           
  6683                           ;main.c: 483:     sens = 0;
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;incstack = 0
  6687  000012  0E00               	movlw	0
  6688  000014  6E59               	movwf	_sens+1,c	;volatile
  6689  000016  0E00               	movlw	0
  6690  000018  6E58               	movwf	_sens,c	;volatile
  6691                           
  6692                           ;main.c: 488:     LATD = 0x00;
  6693  00001A  0E00               	movlw	0
  6694  00001C  6E8C               	movwf	3980,c	;volatile
  6695                           
  6696                           ;main.c: 489:     TRISD = 0x00;
  6697  00001E  0E00               	movlw	0
  6698  000020  6E95               	movwf	3989,c	;volatile
  6699                           
  6700                           ;main.c: 492:     TRISD = 0x00;
  6701  000022  0E00               	movlw	0
  6702  000024  6E95               	movwf	3989,c	;volatile
  6703                           
  6704                           ;main.c: 495:     INT1IE = 1;
  6705  000026  86F0               	bsf	4080,3,c	;volatile
  6706                           
  6707                           ;main.c: 498:     initLCD();
  6708  000028  EC0B  F01A         	call	_initLCD	;wreg free
  6709                           
  6710                           ;main.c: 501:     (INTCONbits.GIE = 1);
  6711  00002C  8EF2               	bsf	4082,7,c	;volatile
  6712                           
  6713                           ;main.c: 503:     I2C_Master_Init(100000);
  6714  00002E  0EA0               	movlw	160
  6715  000030  0100               	movlb	0	; () banked
  6716  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  6717  000034  0E86               	movlw	134
  6718  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  6719  000038  0E01               	movlw	1
  6720  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  6721  00003C  0E00               	movlw	0
  6722  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  6723  000040  ECAE  F01A         	call	_I2C_Master_Init	;wreg free
  6724                           
  6725                           ;main.c: 504:     I2C_Master_Start();
  6726  000044  EC9C  F01D         	call	_I2C_Master_Start	;wreg free
  6727                           
  6728                           ;main.c: 505:     I2C_Master_Write(0b00010000);
  6729  000048  0E00               	movlw	0
  6730  00004A  0100               	movlb	0	; () banked
  6731  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6732  00004E  0E10               	movlw	16
  6733  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6734  000052  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  6735                           
  6736                           ;main.c: 506:     I2C_Master_Stop();
  6737  000056  EC98  F01D         	call	_I2C_Master_Stop	;wreg free
  6738                           
  6739                           ;main.c: 516:     if((pressed == 0)&&(sens==0)){
  6740  00005A  0101               	movlb	1	; () banked
  6741  00005C  516B               	movf	_pressed& (0+255),w,b
  6742  00005E  116C               	iorwf	(_pressed+1)& (0+255),w,b
  6743  000060  A4D8               	btfss	status,2,c
  6744  000062  D3DC               	goto	u8430
  6745                           
  6746                           ; BSR set to: 1
  6747  000064  5058               	movf	_sens,w,c	;volatile
  6748  000066  1059               	iorwf	_sens+1,w,c	;volatile
  6749  000068  A4D8               	btfss	status,2,c
  6750  00006A  D3D8               	goto	u8430
  6751                           
  6752                           ; BSR set to: 1
  6753                           ;main.c: 517:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  6754  00006C  0E01               	movlw	1
  6755  00006E  EC8B  F01D         	call	_lcdInst
  6756  000072  0E11               	movlw	17
  6757  000074  0101               	movlb	1	; () banked
  6758  000076  6F00               	movwf	??_UI_main& (0+255),b
  6759  000078  0E3A               	movlw	58
  6760  00007A                     u9447:
  6761  00007A  2EE8               	decfsz	wreg,f,c
  6762  00007C  D7FE               	bra	u9447
  6763  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  6764  000080  D7FC               	bra	u9447
  6765  000082  F000               	nop	
  6766                           
  6767                           ;main.c: 518:         printf("1 - Start");
  6768  000084  0EC4               	movlw	low STR_23
  6769  000086  0100               	movlb	0	; () banked
  6770  000088  6FED               	movwf	printf@fmt& (0+255),b
  6771  00008A  0EFF               	movlw	high STR_23
  6772  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6773  00008E  EC25  F01D         	call	_printf	;wreg free
  6774  000092  0EC0               	movlw	192
  6775  000094  EC8B  F01D         	call	_lcdInst
  6776                           
  6777                           ;main.c: 520:         printf("2 - Summary");
  6778  000098  0E46               	movlw	low STR_24
  6779  00009A  0100               	movlb	0	; () banked
  6780  00009C  6FED               	movwf	printf@fmt& (0+255),b
  6781  00009E  0EFF               	movlw	high STR_24
  6782  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6783  0000A2  EC25  F01D         	call	_printf	;wreg free
  6784  0000A6  0E90               	movlw	144
  6785  0000A8  EC8B  F01D         	call	_lcdInst
  6786                           
  6787                           ;main.c: 522:         printf("3 - Date&Time ");
  6788  0000AC  0E7A               	movlw	low STR_25
  6789  0000AE  0100               	movlb	0	; () banked
  6790  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  6791  0000B2  0EFE               	movlw	high STR_25
  6792  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6793  0000B6  EC25  F01D         	call	_printf	;wreg free
  6794  0000BA  D3B0               	goto	u8430
  6795  0000BC                     l7646:
  6796                           
  6797                           ;main.c: 533:         if (send){
  6798  0000BC  506D               	movf	_send,w,c
  6799  0000BE  B4D8               	btfsc	status,2,c
  6800  0000C0  D3AD               	goto	u8430
  6801                           
  6802                           ;main.c: 534:         if(key_was_pressed){
  6803  0000C2  0101               	movlb	1	; () banked
  6804  0000C4  5177               	movf	_key_was_pressed& (0+255),w,b	;volatile
  6805  0000C6  B4D8               	btfsc	status,2,c
  6806  0000C8  D3A9               	goto	u8430
  6807                           
  6808                           ; BSR set to: 1
  6809                           ;main.c: 535:             pressed = 1;
  6810  0000CA  0E00               	movlw	0
  6811  0000CC  6F6C               	movwf	(_pressed+1)& (0+255),b
  6812  0000CE  0E01               	movlw	1
  6813  0000D0  6F6B               	movwf	_pressed& (0+255),b
  6814                           
  6815                           ;main.c: 536:             key_was_pressed = 0;
  6816  0000D2  0E00               	movlw	0
  6817  0000D4  6F77               	movwf	_key_was_pressed& (0+255),b	;volatile
  6818                           
  6819                           ; BSR set to: 1
  6820                           ;main.c: 537:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  6821  0000D6  3881               	swapf	3969,w,c	;volatile
  6822  0000D8  0B0F               	andlw	15
  6823  0000DA  0B0F               	andlw	15
  6824  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  6825                           
  6826                           ; BSR set to: 1
  6827                           ;main.c: 538:             temp = keys[keypress];
  6828  0000DE  0EBB               	movlw	low _keys
  6829  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  6830  0000E2  6EF6               	movwf	tblptrl,c
  6831  0000E4  6AF7               	clrf	tblptrh,c
  6832  0000E6  0EFD               	movlw	high _keys
  6833  0000E8  22F7               	addwfc	tblptrh,f,c
  6834  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  6835  0000EA                     	endif
  6836  0000EA  0008               	tblrd		*
  6837  0000EC  CFF5 F0FF          	movff	tablat,_temp
  6838                           
  6839                           ; BSR set to: 1
  6840                           ;main.c: 539:             temp_int = (temp-'0');
  6841  0000F0  0ED0               	movlw	208
  6842  0000F2  0100               	movlb	0	; () banked
  6843  0000F4  25FF               	addwf	_temp& (0+255),w,b
  6844  0000F6  0101               	movlb	1	; () banked
  6845  0000F8  6F73               	movwf	_temp_int& (0+255),b
  6846  0000FA  6B74               	clrf	(_temp_int+1)& (0+255),b
  6847  0000FC  0EFF               	movlw	255
  6848  0000FE  2374               	addwfc	(_temp_int+1)& (0+255),f,b
  6849                           
  6850                           ; BSR set to: 1
  6851                           ;main.c: 541:             if (temp_int == 0){
  6852  000100  5173               	movf	_temp_int& (0+255),w,b
  6853  000102  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  6854  000104  A4D8               	btfss	status,2,c
  6855  000106  D02B               	goto	l7676
  6856                           
  6857                           ; BSR set to: 1
  6858                           ;main.c: 542:                 state = 0;
  6859  000108  0E00               	movlw	0
  6860  00010A  6F72               	movwf	(_state+1)& (0+255),b
  6861  00010C  0E00               	movlw	0
  6862  00010E  6F71               	movwf	_state& (0+255),b
  6863                           
  6864                           ; BSR set to: 1
  6865                           ;main.c: 543:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6866  000110  0E01               	movlw	1
  6867  000112  EC8B  F01D         	call	_lcdInst
  6868  000116  0E11               	movlw	17
  6869  000118  0101               	movlb	1	; () banked
  6870  00011A  6F00               	movwf	??_UI_main& (0+255),b
  6871  00011C  0E3A               	movlw	58
  6872  00011E                     u9457:
  6873  00011E  2EE8               	decfsz	wreg,f,c
  6874  000120  D7FE               	bra	u9457
  6875  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  6876  000124  D7FC               	bra	u9457
  6877  000126  F000               	nop	
  6878                           
  6879                           ;main.c: 544:                 printf("1 - Start");
  6880  000128  0EC4               	movlw	low STR_23
  6881  00012A  0100               	movlb	0	; () banked
  6882  00012C  6FED               	movwf	printf@fmt& (0+255),b
  6883  00012E  0EFF               	movlw	high STR_23
  6884  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6885  000132  EC25  F01D         	call	_printf	;wreg free
  6886  000136  0EC0               	movlw	192
  6887  000138  EC8B  F01D         	call	_lcdInst
  6888                           
  6889                           ;main.c: 546:                 printf("2 - Summary");
  6890  00013C  0E46               	movlw	low STR_24
  6891  00013E  0100               	movlb	0	; () banked
  6892  000140  6FED               	movwf	printf@fmt& (0+255),b
  6893  000142  0EFF               	movlw	high STR_24
  6894  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6895  000146  EC25  F01D         	call	_printf	;wreg free
  6896  00014A  0E90               	movlw	144
  6897  00014C  EC8B  F01D         	call	_lcdInst
  6898                           
  6899                           ;main.c: 548:                 printf("3 - Date&Time ");
  6900  000150  0E7A               	movlw	low STR_25
  6901  000152  0100               	movlb	0	; () banked
  6902  000154  6FED               	movwf	printf@fmt& (0+255),b
  6903  000156  0EFE               	movlw	high STR_25
  6904  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6905  00015A  EC25  F01D         	call	_printf	;wreg free
  6906  00015E                     l7676:
  6907                           
  6908                           ;main.c: 551:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  6909  00015E  0101               	movlb	1	; () banked
  6910  000160  0573               	decf	_temp_int& (0+255),w,b
  6911  000162  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  6912  000164  A4D8               	btfss	status,2,c
  6913  000166  D041               	goto	l7704
  6914                           
  6915                           ; BSR set to: 1
  6916  000168  0E2A               	movlw	42
  6917  00016A  0100               	movlb	0	; () banked
  6918  00016C  19FF               	xorwf	_temp& (0+255),w,b
  6919  00016E  B4D8               	btfsc	status,2,c
  6920  000170  D03C               	goto	l7704
  6921                           
  6922                           ; BSR set to: 0
  6923  000172  0E23               	movlw	35
  6924  000174  19FF               	xorwf	_temp& (0+255),w,b
  6925  000176  B4D8               	btfsc	status,2,c
  6926  000178  D038               	goto	l7704
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;main.c: 552:                 state = 0;
  6930  00017A  0E00               	movlw	0
  6931  00017C  0101               	movlb	1	; () banked
  6932  00017E  6F72               	movwf	(_state+1)& (0+255),b
  6933  000180  0E00               	movlw	0
  6934  000182  6F71               	movwf	_state& (0+255),b
  6935                           
  6936                           ; BSR set to: 1
  6937                           ;main.c: 553:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  6938  000184  0E01               	movlw	1
  6939  000186  EC8B  F01D         	call	_lcdInst
  6940  00018A  0E11               	movlw	17
  6941  00018C  0101               	movlb	1	; () banked
  6942  00018E  6F00               	movwf	??_UI_main& (0+255),b
  6943  000190  0E3A               	movlw	58
  6944  000192                     u9467:
  6945  000192  2EE8               	decfsz	wreg,f,c
  6946  000194  D7FE               	bra	u9467
  6947  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  6948  000198  D7FC               	bra	u9467
  6949  00019A  F000               	nop	
  6950                           
  6951                           ;main.c: 554:                 printf("Machine In Use");
  6952  00019C  0E98               	movlw	low STR_29
  6953  00019E  0100               	movlb	0	; () banked
  6954  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  6955  0001A2  0EFE               	movlw	high STR_29
  6956  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6957  0001A6  EC25  F01D         	call	_printf	;wreg free
  6958  0001AA  0ED0               	movlw	208
  6959  0001AC  EC8B  F01D         	call	_lcdInst
  6960                           
  6961                           ;main.c: 556:                 printf("     0-Menu     ");
  6962  0001B0  0EE4               	movlw	low STR_30
  6963  0001B2  0100               	movlb	0	; () banked
  6964  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  6965  0001B6  0EFD               	movlw	high STR_30
  6966  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6967  0001BA  EC25  F01D         	call	_printf	;wreg free
  6968                           
  6969                           ;main.c: 560:                 I2C_Master_Start();
  6970  0001BE  EC9C  F01D         	call	_I2C_Master_Start	;wreg free
  6971                           
  6972                           ;main.c: 561:                 I2C_Master_Write(0b00010000);
  6973  0001C2  0E00               	movlw	0
  6974  0001C4  0100               	movlb	0	; () banked
  6975  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6976  0001C8  0E10               	movlw	16
  6977  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6978  0001CC  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  6979                           
  6980                           ;main.c: 562:                 I2C_Master_Write('1');
  6981  0001D0  0E00               	movlw	0
  6982  0001D2  0100               	movlb	0	; () banked
  6983  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  6984  0001D6  0E31               	movlw	49
  6985  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  6986  0001DA  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  6987                           
  6988                           ;main.c: 563:                 I2C_Master_Stop();
  6989  0001DE  EC98  F01D         	call	_I2C_Master_Stop	;wreg free
  6990                           
  6991                           ;main.c: 565:                 sens = 1;
  6992  0001E2  0E00               	movlw	0
  6993  0001E4  6E59               	movwf	_sens+1,c	;volatile
  6994  0001E6  0E01               	movlw	1
  6995  0001E8  6E58               	movwf	_sens,c	;volatile
  6996  0001EA                     l7704:
  6997                           
  6998                           ;main.c: 568:                 if ((temp_int == 2)||(state == 2)){
  6999  0001EA  0E02               	movlw	2
  7000  0001EC  0101               	movlb	1	; () banked
  7001  0001EE  1973               	xorwf	_temp_int& (0+255),w,b
  7002  0001F0  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7003  0001F2  B4D8               	btfsc	status,2,c
  7004  0001F4  D005               	goto	u8290
  7005                           
  7006                           ; BSR set to: 1
  7007  0001F6  0E02               	movlw	2
  7008  0001F8  1971               	xorwf	_state& (0+255),w,b
  7009  0001FA  1172               	iorwf	(_state+1)& (0+255),w,b
  7010  0001FC  A4D8               	btfss	status,2,c
  7011  0001FE  D253               	goto	l7814
  7012  000200                     u8290:
  7013                           
  7014                           ; BSR set to: 1
  7015                           ;main.c: 569:                     if ((temp_int == 2)){
  7016  000200  0E02               	movlw	2
  7017  000202  1973               	xorwf	_temp_int& (0+255),w,b
  7018  000204  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7019  000206  A4D8               	btfss	status,2,c
  7020  000208  D033               	goto	l7726
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;main.c: 570:                         state = 2;
  7024  00020A  0E00               	movlw	0
  7025  00020C  6F72               	movwf	(_state+1)& (0+255),b
  7026  00020E  0E02               	movlw	2
  7027  000210  6F71               	movwf	_state& (0+255),b
  7028                           
  7029                           ;main.c: 571:                         disp = 0;
  7030  000212  0E00               	movlw	0
  7031  000214  6F70               	movwf	(_disp+1)& (0+255),b
  7032  000216  0E00               	movlw	0
  7033  000218  6F6F               	movwf	_disp& (0+255),b
  7034                           
  7035                           ; BSR set to: 1
  7036                           ;main.c: 572:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7037  00021A  0E01               	movlw	1
  7038  00021C  EC8B  F01D         	call	_lcdInst
  7039  000220  0E11               	movlw	17
  7040  000222  0101               	movlb	1	; () banked
  7041  000224  6F00               	movwf	??_UI_main& (0+255),b
  7042  000226  0E3A               	movlw	58
  7043  000228                     u9477:
  7044  000228  2EE8               	decfsz	wreg,f,c
  7045  00022A  D7FE               	bra	u9477
  7046  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7047  00022E  D7FC               	bra	u9477
  7048  000230  F000               	nop	
  7049                           
  7050                           ;main.c: 573:                         printf("Op Time:");
  7051  000232  0EE2               	movlw	low STR_31
  7052  000234  0100               	movlb	0	; () banked
  7053  000236  6FED               	movwf	printf@fmt& (0+255),b
  7054  000238  0EFF               	movlw	high STR_31
  7055  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7056  00023C  EC25  F01D         	call	_printf	;wreg free
  7057  000240  0EC0               	movlw	192
  7058  000242  EC8B  F01D         	call	_lcdInst
  7059                           
  7060                           ;main.c: 575:                         printf("%d", cnt);
  7061  000246  0ED0               	movlw	low (STR_38+11)
  7062  000248  0100               	movlb	0	; () banked
  7063  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7064  00024C  0EFE               	movlw	high (STR_38+11)
  7065  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7066  000250  0E00               	movlw	0
  7067  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7068  000254  0E00               	movlw	0
  7069  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7070  000258  EC25  F01D         	call	_printf	;wreg free
  7071  00025C  0ED0               	movlw	208
  7072  00025E  EC8B  F01D         	call	_lcdInst
  7073                           
  7074                           ;main.c: 577:                         printf("    0-Menu   #>");
  7075  000262  0E29               	movlw	low (STR_36+1)
  7076  000264  0100               	movlb	0	; () banked
  7077  000266  6FED               	movwf	printf@fmt& (0+255),b
  7078  000268  0EFE               	movlw	high (STR_36+1)
  7079  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7080  00026C  EC25  F01D         	call	_printf	;wreg free
  7081  000270                     l7726:
  7082                           
  7083                           ;main.c: 579:                     if ((temp == '*') && (disp != 0)){
  7084  000270  0E2A               	movlw	42
  7085  000272  0100               	movlb	0	; () banked
  7086  000274  19FF               	xorwf	_temp& (0+255),w,b
  7087  000276  A4D8               	btfss	status,2,c
  7088  000278  D00B               	goto	l488
  7089                           
  7090                           ; BSR set to: 0
  7091  00027A  0101               	movlb	1	; () banked
  7092  00027C  516F               	movf	_disp& (0+255),w,b
  7093  00027E  1170               	iorwf	(_disp+1)& (0+255),w,b
  7094  000280  B4D8               	btfsc	status,2,c
  7095  000282  D006               	goto	l488
  7096                           
  7097                           ; BSR set to: 1
  7098                           ;main.c: 580:                         disp = disp - 1;
  7099  000284  0EFF               	movlw	255
  7100  000286  256F               	addwf	_disp& (0+255),w,b
  7101  000288  6F6F               	movwf	_disp& (0+255),b
  7102  00028A  0EFF               	movlw	255
  7103  00028C  2170               	addwfc	(_disp+1)& (0+255),w,b
  7104  00028E  6F70               	movwf	(_disp+1)& (0+255),b
  7105  000290                     l488:
  7106                           
  7107                           ;main.c: 582:                     if ((temp == '#')&& (disp <12)){
  7108  000290  0E23               	movlw	35
  7109  000292  0100               	movlb	0	; () banked
  7110  000294  19FF               	xorwf	_temp& (0+255),w,b
  7111  000296  A4D8               	btfss	status,2,c
  7112  000298  D00B               	goto	l7736
  7113                           
  7114                           ; BSR set to: 0
  7115  00029A  0101               	movlb	1	; () banked
  7116  00029C  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7117  00029E  D006               	goto	u8340
  7118  0002A0  5170               	movf	(_disp+1)& (0+255),w,b
  7119  0002A2  E106               	bnz	l7736
  7120  0002A4  0E0C               	movlw	12
  7121  0002A6  5D6F               	subwf	_disp& (0+255),w,b
  7122  0002A8  B0D8               	btfsc	status,0,c
  7123  0002AA  D002               	goto	l7736
  7124  0002AC                     u8340:
  7125                           
  7126                           ; BSR set to: 1
  7127                           ;main.c: 583:                         disp++;
  7128  0002AC  4B6F               	infsnz	_disp& (0+255),f,b
  7129  0002AE  2B70               	incf	(_disp+1)& (0+255),f,b
  7130  0002B0                     l7736:
  7131                           
  7132                           ;main.c: 585:                     if (disp == 0){
  7133  0002B0  0101               	movlb	1	; () banked
  7134  0002B2  516F               	movf	_disp& (0+255),w,b
  7135  0002B4  1170               	iorwf	(_disp+1)& (0+255),w,b
  7136  0002B6  A4D8               	btfss	status,2,c
  7137  0002B8  D02B               	goto	l7752
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;main.c: 586:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7141  0002BA  0E01               	movlw	1
  7142  0002BC  EC8B  F01D         	call	_lcdInst
  7143  0002C0  0E11               	movlw	17
  7144  0002C2  0101               	movlb	1	; () banked
  7145  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7146  0002C6  0E3A               	movlw	58
  7147  0002C8                     u9487:
  7148  0002C8  2EE8               	decfsz	wreg,f,c
  7149  0002CA  D7FE               	bra	u9487
  7150  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7151  0002CE  D7FC               	bra	u9487
  7152  0002D0  F000               	nop	
  7153                           
  7154                           ;main.c: 587:                         printf("Op Time:");
  7155  0002D2  0EE2               	movlw	low STR_31
  7156  0002D4  0100               	movlb	0	; () banked
  7157  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7158  0002D8  0EFF               	movlw	high STR_31
  7159  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7160  0002DC  EC25  F01D         	call	_printf	;wreg free
  7161  0002E0  0EC0               	movlw	192
  7162  0002E2  EC8B  F01D         	call	_lcdInst
  7163                           
  7164                           ;main.c: 589:                         printf("%d", cnt);
  7165  0002E6  0ED0               	movlw	low (STR_38+11)
  7166  0002E8  0100               	movlb	0	; () banked
  7167  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7168  0002EC  0EFE               	movlw	high (STR_38+11)
  7169  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7170  0002F0  0E00               	movlw	0
  7171  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7172  0002F4  0E00               	movlw	0
  7173  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7174  0002F8  EC25  F01D         	call	_printf	;wreg free
  7175  0002FC  0ED0               	movlw	208
  7176  0002FE  EC8B  F01D         	call	_lcdInst
  7177                           
  7178                           ;main.c: 591:                         printf("     0-Menu   #>");
  7179  000302  0E28               	movlw	low STR_36
  7180  000304  0100               	movlb	0	; () banked
  7181  000306  6FED               	movwf	printf@fmt& (0+255),b
  7182  000308  0EFE               	movlw	high STR_36
  7183  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7184  00030C  EC25  F01D         	call	_printf	;wreg free
  7185  000310                     l7752:
  7186                           
  7187                           ;main.c: 594:                     if (disp == 1){
  7188  000310  0101               	movlb	1	; () banked
  7189  000312  056F               	decf	_disp& (0+255),w,b
  7190  000314  1170               	iorwf	(_disp+1)& (0+255),w,b
  7191  000316  A4D8               	btfss	status,2,c
  7192  000318  D02F               	goto	l7768
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;main.c: 595:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7196  00031A  0E01               	movlw	1
  7197  00031C  EC8B  F01D         	call	_lcdInst
  7198  000320  0E11               	movlw	17
  7199  000322  0101               	movlb	1	; () banked
  7200  000324  6F00               	movwf	??_UI_main& (0+255),b
  7201  000326  0E3A               	movlw	58
  7202  000328                     u9497:
  7203  000328  2EE8               	decfsz	wreg,f,c
  7204  00032A  D7FE               	bra	u9497
  7205  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7206  00032E  D7FC               	bra	u9497
  7207  000330  F000               	nop	
  7208                           
  7209                           ;main.c: 596:                         printf("No. Tires: %d",t_dep);
  7210  000332  0ED3               	movlw	low STR_37
  7211  000334  0100               	movlb	0	; () banked
  7212  000336  6FED               	movwf	printf@fmt& (0+255),b
  7213  000338  0EFE               	movlw	high STR_37
  7214  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7215  00033C  C0F9  F0EF         	movff	UI_main@t_dep,?_printf+2
  7216  000340  C0FA  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7217  000344  EC25  F01D         	call	_printf	;wreg free
  7218  000348  0EC0               	movlw	192
  7219  00034A  EC8B  F01D         	call	_lcdInst
  7220                           
  7221                           ;main.c: 598:                         printf("No. Poles: %d", poles_detected);
  7222  00034E  0EC5               	movlw	low STR_38
  7223  000350  0100               	movlb	0	; () banked
  7224  000352  6FED               	movwf	printf@fmt& (0+255),b
  7225  000354  0EFE               	movlw	high STR_38
  7226  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7227  000358  C0FB  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7228  00035C  C0FC  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7229  000360  EC25  F01D         	call	_printf	;wreg free
  7230  000364  0ED0               	movlw	208
  7231  000366  EC8B  F01D         	call	_lcdInst
  7232                           
  7233                           ;main.c: 600:                         printf("<*   0-Menu   #>");
  7234  00036A  0E39               	movlw	low STR_39
  7235  00036C  0100               	movlb	0	; () banked
  7236  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7237  000370  0EFE               	movlw	high STR_39
  7238  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7239  000374  EC25  F01D         	call	_printf	;wreg free
  7240  000378                     l7768:
  7241                           
  7242                           ;main.c: 603:                     if (disp > 1 && disp <11){
  7243  000378  0101               	movlb	1	; () banked
  7244  00037A  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7245  00037C  D0CE               	goto	l7792
  7246  00037E  5170               	movf	(_disp+1)& (0+255),w,b
  7247  000380  E104               	bnz	u8370
  7248  000382  0E02               	movlw	2
  7249  000384  5D6F               	subwf	_disp& (0+255),w,b
  7250  000386  A0D8               	btfss	status,0,c
  7251  000388  D0C8               	goto	l7792
  7252  00038A                     u8370:
  7253                           
  7254                           ; BSR set to: 1
  7255  00038A  BF70               	btfsc	(_disp+1)& (0+255),7,b
  7256  00038C  D006               	goto	u8380
  7257  00038E  5170               	movf	(_disp+1)& (0+255),w,b
  7258  000390  E103               	bnz	u8381
  7259  000392  0E0B               	movlw	11
  7260  000394  5D6F               	subwf	_disp& (0+255),w,b
  7261  000396  B0D8               	btfsc	status,0,c
  7262  000398                     u8381:
  7263  000398  D0C0               	goto	l7792
  7264  00039A                     u8380:
  7265                           
  7266                           ; BSR set to: 1
  7267                           ;main.c: 604:                         i = disp - 2;
  7268  00039A  0EFE               	movlw	254
  7269  00039C  256F               	addwf	_disp& (0+255),w,b
  7270  00039E  6F6D               	movwf	_i& (0+255),b
  7271  0003A0  0EFF               	movlw	255
  7272  0003A2  2170               	addwfc	(_disp+1)& (0+255),w,b
  7273  0003A4  6F6E               	movwf	(_i+1)& (0+255),b
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;main.c: 605:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7277  0003A6  0E01               	movlw	1
  7278  0003A8  EC8B  F01D         	call	_lcdInst
  7279  0003AC  0E11               	movlw	17
  7280  0003AE  0101               	movlb	1	; () banked
  7281  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7282  0003B2  0E3A               	movlw	58
  7283  0003B4                     u9507:
  7284  0003B4  2EE8               	decfsz	wreg,f,c
  7285  0003B6  D7FE               	bra	u9507
  7286  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7287  0003BA  D7FC               	bra	u9507
  7288  0003BC  F000               	nop	
  7289                           
  7290                           ;main.c: 606:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7291  0003BE  0ED2               	movlw	low STR_40
  7292  0003C0  0100               	movlb	0	; () banked
  7293  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7294  0003C4  0EFD               	movlw	high STR_40
  7295  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7296  0003C8  0E01               	movlw	1
  7297  0003CA  0101               	movlb	1	; () banked
  7298  0003CC  256D               	addwf	_i& (0+255),w,b
  7299  0003CE  0100               	movlb	0	; () banked
  7300  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7301  0003D2  0E00               	movlw	0
  7302  0003D4  0101               	movlb	1	; () banked
  7303  0003D6  216E               	addwfc	(_i+1)& (0+255),w,b
  7304  0003D8  0100               	movlb	0	; () banked
  7305  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7306  0003DC  C16D  F100         	movff	_i,??_UI_main
  7307  0003E0  C16E  F101         	movff	_i+1,??_UI_main+1
  7308  0003E4  0101               	movlb	1	; () banked
  7309  0003E6  90D8               	bcf	status,0,c
  7310  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7311  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7312  0003EC  90D8               	bcf	status,0,c
  7313  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7314  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7315  0003F2  90D8               	bcf	status,0,c
  7316  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7317  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7318  0003F8  0E04               	movlw	low UI_main@Pole
  7319  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7320  0003FC  6ED9               	movwf	fsr2l,c
  7321  0003FE  0E01               	movlw	high UI_main@Pole
  7322  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7323  000402  6EDA               	movwf	fsr2h,c
  7324  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7325  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7326  00040C  C16D  F102         	movff	_i,??_UI_main+2
  7327  000410  C16E  F103         	movff	_i+1,??_UI_main+3
  7328  000414  90D8               	bcf	status,0,c
  7329  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7330  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7331  00041A  90D8               	bcf	status,0,c
  7332  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7333  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7334  000420  90D8               	bcf	status,0,c
  7335  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7336  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7337  000426  0E02               	movlw	2
  7338  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7339  00042A  0E00               	movlw	0
  7340  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7341  00042E  0E04               	movlw	low UI_main@Pole
  7342  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7343  000432  6ED9               	movwf	fsr2l,c
  7344  000434  0E01               	movlw	high UI_main@Pole
  7345  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7346  000438  6EDA               	movwf	fsr2h,c
  7347  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  7348  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  7349  000442  EC25  F01D         	call	_printf	;wreg free
  7350  000446  0EC0               	movlw	192
  7351  000448  EC8B  F01D         	call	_lcdInst
  7352                           
  7353                           ;main.c: 608:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7354  00044C  0E89               	movlw	low STR_41
  7355  00044E  0100               	movlb	0	; () banked
  7356  000450  6FED               	movwf	printf@fmt& (0+255),b
  7357  000452  0EFE               	movlw	high STR_41
  7358  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7359  000456  0E01               	movlw	1
  7360  000458  0101               	movlb	1	; () banked
  7361  00045A  256D               	addwf	_i& (0+255),w,b
  7362  00045C  0100               	movlb	0	; () banked
  7363  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  7364  000460  0E00               	movlw	0
  7365  000462  0101               	movlb	1	; () banked
  7366  000464  216E               	addwfc	(_i+1)& (0+255),w,b
  7367  000466  0100               	movlb	0	; () banked
  7368  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  7369  00046A  C16D  F100         	movff	_i,??_UI_main
  7370  00046E  C16E  F101         	movff	_i+1,??_UI_main+1
  7371  000472  0101               	movlb	1	; () banked
  7372  000474  90D8               	bcf	status,0,c
  7373  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  7374  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7375  00047A  90D8               	bcf	status,0,c
  7376  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  7377  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7378  000480  90D8               	bcf	status,0,c
  7379  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  7380  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7381  000486  0E04               	movlw	4
  7382  000488  2700               	addwf	??_UI_main& (0+255),f,b
  7383  00048A  0E00               	movlw	0
  7384  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7385  00048E  0E04               	movlw	low UI_main@Pole
  7386  000490  2500               	addwf	??_UI_main& (0+255),w,b
  7387  000492  6ED9               	movwf	fsr2l,c
  7388  000494  0E01               	movlw	high UI_main@Pole
  7389  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7390  000498  6EDA               	movwf	fsr2h,c
  7391  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  7392  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  7393  0004A2  EC25  F01D         	call	_printf	;wreg free
  7394  0004A6  0E90               	movlw	144
  7395  0004A8  EC8B  F01D         	call	_lcdInst
  7396                           
  7397                           ;main.c: 610:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7398  0004AC  0E3A               	movlw	low STR_42
  7399  0004AE  0100               	movlb	0	; () banked
  7400  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  7401  0004B2  0EFF               	movlw	high STR_42
  7402  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7403  0004B6  0E01               	movlw	1
  7404  0004B8  0101               	movlb	1	; () banked
  7405  0004BA  256D               	addwf	_i& (0+255),w,b
  7406  0004BC  0100               	movlb	0	; () banked
  7407  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  7408  0004C0  0E00               	movlw	0
  7409  0004C2  0101               	movlb	1	; () banked
  7410  0004C4  216E               	addwfc	(_i+1)& (0+255),w,b
  7411  0004C6  0100               	movlb	0	; () banked
  7412  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  7413  0004CA  C16D  F100         	movff	_i,??_UI_main
  7414  0004CE  C16E  F101         	movff	_i+1,??_UI_main+1
  7415  0004D2  0101               	movlb	1	; () banked
  7416  0004D4  90D8               	bcf	status,0,c
  7417  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  7418  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7419  0004DA  90D8               	bcf	status,0,c
  7420  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  7421  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7422  0004E0  90D8               	bcf	status,0,c
  7423  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  7424  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7425  0004E6  0E06               	movlw	6
  7426  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  7427  0004EA  0E00               	movlw	0
  7428  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7429  0004EE  0E04               	movlw	low UI_main@Pole
  7430  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  7431  0004F2  6ED9               	movwf	fsr2l,c
  7432  0004F4  0E01               	movlw	high UI_main@Pole
  7433  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7434  0004F8  6EDA               	movwf	fsr2h,c
  7435  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  7436  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  7437  000502  EC25  F01D         	call	_printf	;wreg free
  7438  000506  0ED0               	movlw	208
  7439  000508  EC8B  F01D         	call	_lcdInst
  7440                           
  7441                           ;main.c: 612:                         printf("<*   0-Menu   #>");
  7442  00050C  0E39               	movlw	low STR_39
  7443  00050E  0100               	movlb	0	; () banked
  7444  000510  6FED               	movwf	printf@fmt& (0+255),b
  7445  000512  0EFE               	movlw	high STR_39
  7446  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7447  000516  EC25  F01D         	call	_printf	;wreg free
  7448  00051A                     l7792:
  7449                           
  7450                           ;main.c: 614:                     if (disp == 11){
  7451  00051A  0E0B               	movlw	11
  7452  00051C  0101               	movlb	1	; () banked
  7453  00051E  196F               	xorwf	_disp& (0+255),w,b
  7454  000520  1170               	iorwf	(_disp+1)& (0+255),w,b
  7455  000522  A4D8               	btfss	status,2,c
  7456  000524  D0C0               	goto	l7814
  7457                           
  7458                           ; BSR set to: 1
  7459                           ;main.c: 615:                         i = disp - 2;
  7460  000526  0EFE               	movlw	254
  7461  000528  256F               	addwf	_disp& (0+255),w,b
  7462  00052A  6F6D               	movwf	_i& (0+255),b
  7463  00052C  0EFF               	movlw	255
  7464  00052E  2170               	addwfc	(_disp+1)& (0+255),w,b
  7465  000530  6F6E               	movwf	(_i+1)& (0+255),b
  7466                           
  7467                           ; BSR set to: 1
  7468                           ;main.c: 616:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7469  000532  0E01               	movlw	1
  7470  000534  EC8B  F01D         	call	_lcdInst
  7471  000538  0E11               	movlw	17
  7472  00053A  0101               	movlb	1	; () banked
  7473  00053C  6F00               	movwf	??_UI_main& (0+255),b
  7474  00053E  0E3A               	movlw	58
  7475  000540                     u9517:
  7476  000540  2EE8               	decfsz	wreg,f,c
  7477  000542  D7FE               	bra	u9517
  7478  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  7479  000546  D7FC               	bra	u9517
  7480  000548  F000               	nop	
  7481                           
  7482                           ;main.c: 617:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7483  00054A  0ED2               	movlw	low STR_40
  7484  00054C  0100               	movlb	0	; () banked
  7485  00054E  6FED               	movwf	printf@fmt& (0+255),b
  7486  000550  0EFD               	movlw	high STR_40
  7487  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7488  000554  0E01               	movlw	1
  7489  000556  0101               	movlb	1	; () banked
  7490  000558  256D               	addwf	_i& (0+255),w,b
  7491  00055A  0100               	movlb	0	; () banked
  7492  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  7493  00055E  0E00               	movlw	0
  7494  000560  0101               	movlb	1	; () banked
  7495  000562  216E               	addwfc	(_i+1)& (0+255),w,b
  7496  000564  0100               	movlb	0	; () banked
  7497  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  7498  000568  C16D  F100         	movff	_i,??_UI_main
  7499  00056C  C16E  F101         	movff	_i+1,??_UI_main+1
  7500  000570  0101               	movlb	1	; () banked
  7501  000572  90D8               	bcf	status,0,c
  7502  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  7503  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7504  000578  90D8               	bcf	status,0,c
  7505  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  7506  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7507  00057E  90D8               	bcf	status,0,c
  7508  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  7509  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7510  000584  0E04               	movlw	low UI_main@Pole
  7511  000586  2500               	addwf	??_UI_main& (0+255),w,b
  7512  000588  6ED9               	movwf	fsr2l,c
  7513  00058A  0E01               	movlw	high UI_main@Pole
  7514  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7515  00058E  6EDA               	movwf	fsr2h,c
  7516  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  7517  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  7518  000598  C16D  F102         	movff	_i,??_UI_main+2
  7519  00059C  C16E  F103         	movff	_i+1,??_UI_main+3
  7520  0005A0  90D8               	bcf	status,0,c
  7521  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7522  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7523  0005A6  90D8               	bcf	status,0,c
  7524  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7525  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7526  0005AC  90D8               	bcf	status,0,c
  7527  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7528  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7529  0005B2  0E02               	movlw	2
  7530  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7531  0005B6  0E00               	movlw	0
  7532  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7533  0005BA  0E04               	movlw	low UI_main@Pole
  7534  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7535  0005BE  6ED9               	movwf	fsr2l,c
  7536  0005C0  0E01               	movlw	high UI_main@Pole
  7537  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7538  0005C4  6EDA               	movwf	fsr2h,c
  7539  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  7540  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  7541  0005CE  EC25  F01D         	call	_printf	;wreg free
  7542  0005D2  0EC0               	movlw	192
  7543  0005D4  EC8B  F01D         	call	_lcdInst
  7544                           
  7545                           ;main.c: 619:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7546  0005D8  0E89               	movlw	low STR_41
  7547  0005DA  0100               	movlb	0	; () banked
  7548  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  7549  0005DE  0EFE               	movlw	high STR_41
  7550  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7551  0005E2  0E01               	movlw	1
  7552  0005E4  0101               	movlb	1	; () banked
  7553  0005E6  256D               	addwf	_i& (0+255),w,b
  7554  0005E8  0100               	movlb	0	; () banked
  7555  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  7556  0005EC  0E00               	movlw	0
  7557  0005EE  0101               	movlb	1	; () banked
  7558  0005F0  216E               	addwfc	(_i+1)& (0+255),w,b
  7559  0005F2  0100               	movlb	0	; () banked
  7560  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  7561  0005F6  C16D  F100         	movff	_i,??_UI_main
  7562  0005FA  C16E  F101         	movff	_i+1,??_UI_main+1
  7563  0005FE  0101               	movlb	1	; () banked
  7564  000600  90D8               	bcf	status,0,c
  7565  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  7566  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7567  000606  90D8               	bcf	status,0,c
  7568  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  7569  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7570  00060C  90D8               	bcf	status,0,c
  7571  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  7572  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7573  000612  0E04               	movlw	4
  7574  000614  2700               	addwf	??_UI_main& (0+255),f,b
  7575  000616  0E00               	movlw	0
  7576  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7577  00061A  0E04               	movlw	low UI_main@Pole
  7578  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  7579  00061E  6ED9               	movwf	fsr2l,c
  7580  000620  0E01               	movlw	high UI_main@Pole
  7581  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7582  000624  6EDA               	movwf	fsr2h,c
  7583  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  7584  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  7585  00062E  EC25  F01D         	call	_printf	;wreg free
  7586  000632  0E90               	movlw	144
  7587  000634  EC8B  F01D         	call	_lcdInst
  7588                           
  7589                           ;main.c: 621:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7590  000638  0E3A               	movlw	low STR_42
  7591  00063A  0100               	movlb	0	; () banked
  7592  00063C  6FED               	movwf	printf@fmt& (0+255),b
  7593  00063E  0EFF               	movlw	high STR_42
  7594  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7595  000642  0E01               	movlw	1
  7596  000644  0101               	movlb	1	; () banked
  7597  000646  256D               	addwf	_i& (0+255),w,b
  7598  000648  0100               	movlb	0	; () banked
  7599  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  7600  00064C  0E00               	movlw	0
  7601  00064E  0101               	movlb	1	; () banked
  7602  000650  216E               	addwfc	(_i+1)& (0+255),w,b
  7603  000652  0100               	movlb	0	; () banked
  7604  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  7605  000656  C16D  F100         	movff	_i,??_UI_main
  7606  00065A  C16E  F101         	movff	_i+1,??_UI_main+1
  7607  00065E  0101               	movlb	1	; () banked
  7608  000660  90D8               	bcf	status,0,c
  7609  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  7610  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7611  000666  90D8               	bcf	status,0,c
  7612  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  7613  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7614  00066C  90D8               	bcf	status,0,c
  7615  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  7616  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7617  000672  0E06               	movlw	6
  7618  000674  2700               	addwf	??_UI_main& (0+255),f,b
  7619  000676  0E00               	movlw	0
  7620  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7621  00067A  0E04               	movlw	low UI_main@Pole
  7622  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  7623  00067E  6ED9               	movwf	fsr2l,c
  7624  000680  0E01               	movlw	high UI_main@Pole
  7625  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7626  000684  6EDA               	movwf	fsr2h,c
  7627  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  7628  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  7629  00068E  EC25  F01D         	call	_printf	;wreg free
  7630  000692  0ED0               	movlw	208
  7631  000694  EC8B  F01D         	call	_lcdInst
  7632                           
  7633                           ;main.c: 623:                         printf("<*   0-Menu     ");
  7634  000698  0EF5               	movlw	low STR_47
  7635  00069A  0100               	movlb	0	; () banked
  7636  00069C  6FED               	movwf	printf@fmt& (0+255),b
  7637  00069E  0EFD               	movlw	high STR_47
  7638  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7639  0006A2  EC25  F01D         	call	_printf	;wreg free
  7640  0006A6                     l7814:
  7641                           
  7642                           ;main.c: 626:             if (temp_int == 3){
  7643  0006A6  0E03               	movlw	3
  7644  0006A8  0101               	movlb	1	; () banked
  7645  0006AA  1973               	xorwf	_temp_int& (0+255),w,b
  7646  0006AC  1174               	iorwf	(_temp_int+1)& (0+255),w,b
  7647  0006AE  A4D8               	btfss	status,2,c
  7648  0006B0  D0B5               	goto	u8430
  7649                           
  7650                           ; BSR set to: 1
  7651                           ;main.c: 627:                 state = 0;
  7652  0006B2  0E00               	movlw	0
  7653  0006B4  6F72               	movwf	(_state+1)& (0+255),b
  7654  0006B6  0E00               	movlw	0
  7655  0006B8  6F71               	movwf	_state& (0+255),b
  7656                           
  7657                           ;main.c: 628:                 tick = 0;
  7658  0006BA  0E00               	movlw	0
  7659  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  7660  0006BE  0E00               	movlw	0
  7661  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  7662  0006C2  0E00               	movlw	0
  7663  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  7664  0006C6  0E00               	movlw	0
  7665  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  7666                           
  7667                           ;main.c: 629:                 while(~key_was_pressed){
  7668  0006CA  D0A5               	goto	l7864
  7669  0006CC                     l7818:
  7670                           
  7671                           ; BSR set to: 1
  7672                           ;main.c: 630:                     if(tick % 1000 == 0){
  7673  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  7674  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  7675  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  7676  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  7677  0006DC  0EE8               	movlw	232
  7678  0006DE  0100               	movlb	0	; () banked
  7679  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  7680  0006E2  0E03               	movlw	3
  7681  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  7682  0006E6  0E00               	movlw	0
  7683  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  7684  0006EA  0E00               	movlw	0
  7685  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  7686  0006EE  EC7A  F01A         	call	___llmod	;wreg free
  7687  0006F2  0100               	movlb	0	; () banked
  7688  0006F4  5180               	movf	?___llmod& (0+255),w,b
  7689  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  7690  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  7691  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  7692  0006FC  A4D8               	btfss	status,2,c
  7693  0006FE  D084               	goto	l7862
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;main.c: 631:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7697  000700  0E01               	movlw	1
  7698  000702  EC8B  F01D         	call	_lcdInst
  7699  000706  0E11               	movlw	17
  7700  000708  0101               	movlb	1	; () banked
  7701  00070A  6F00               	movwf	??_UI_main& (0+255),b
  7702  00070C  0E3A               	movlw	58
  7703  00070E                     u9527:
  7704  00070E  2EE8               	decfsz	wreg,f,c
  7705  000710  D7FE               	bra	u9527
  7706  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  7707  000714  D7FC               	bra	u9527
  7708  000716  F000               	nop	
  7709                           
  7710                           ;main.c: 632:                         printf("DATE & TIME");
  7711  000718  0E16               	movlw	low STR_48
  7712  00071A  0100               	movlb	0	; () banked
  7713  00071C  6FED               	movwf	printf@fmt& (0+255),b
  7714  00071E  0EFF               	movlw	high STR_48
  7715  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7716  000722  EC25  F01D         	call	_printf	;wreg free
  7717                           
  7718                           ;main.c: 633:                         I2C_Master_Init(100000);
  7719  000726  0EA0               	movlw	160
  7720  000728  0100               	movlb	0	; () banked
  7721  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7722  00072C  0E86               	movlw	134
  7723  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7724  000730  0E01               	movlw	1
  7725  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7726  000734  0E00               	movlw	0
  7727  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7728  000738  ECAE  F01A         	call	_I2C_Master_Init	;wreg free
  7729                           
  7730                           ;main.c: 634:                         I2C_Master_Start();
  7731  00073C  EC9C  F01D         	call	_I2C_Master_Start	;wreg free
  7732                           
  7733                           ;main.c: 635:                         I2C_Master_Write(0b11010000);
  7734  000740  0E00               	movlw	0
  7735  000742  0100               	movlb	0	; () banked
  7736  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7737  000746  0ED0               	movlw	208
  7738  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7739  00074A  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  7740                           
  7741                           ;main.c: 636:                         I2C_Master_Write(0x00);
  7742  00074E  0E00               	movlw	0
  7743  000750  0100               	movlb	0	; () banked
  7744  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7745  000754  0E00               	movlw	0
  7746  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7747  000758  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  7748                           
  7749                           ;main.c: 637:                         I2C_Master_Stop();
  7750  00075C  EC98  F01D         	call	_I2C_Master_Stop	;wreg free
  7751                           
  7752                           ;main.c: 639:                         I2C_Master_Start();
  7753  000760  EC9C  F01D         	call	_I2C_Master_Start	;wreg free
  7754                           
  7755                           ;main.c: 640:                         I2C_Master_Write(0b11010001);
  7756  000764  0E00               	movlw	0
  7757  000766  0100               	movlb	0	; () banked
  7758  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7759  00076A  0ED1               	movlw	209
  7760  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7761  00076E  EC93  F01D         	call	_I2C_Master_Write	;wreg free
  7762                           
  7763                           ;main.c: 641:                         for(unsigned char i = 0; i < 6; i++){
  7764  000772  0E00               	movlw	0
  7765  000774  0101               	movlb	1	; () banked
  7766  000776  6F59               	movwf	UI_main@i& (0+255),b
  7767  000778                     l7842:
  7768                           
  7769                           ; BSR set to: 1
  7770  000778  0E05               	movlw	5
  7771  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  7772  00077C  D001               	goto	l7846
  7773  00077E  D00D               	goto	l7852
  7774  000780                     l7846:
  7775                           
  7776                           ; BSR set to: 1
  7777                           ;main.c: 642:                             time[i] = I2C_Master_Read(0);
  7778  000780  0E64               	movlw	low _time
  7779  000782  2559               	addwf	UI_main@i& (0+255),w,b
  7780  000784  6ED9               	movwf	fsr2l,c
  7781  000786  6ADA               	clrf	fsr2h,c
  7782  000788  0E01               	movlw	high _time
  7783  00078A  22DA               	addwfc	fsr2h,f,c
  7784  00078C  0E00               	movlw	0
  7785  00078E  EC10  F01D         	call	_I2C_Master_Read
  7786  000792  6EDF               	movwf	indf2,c
  7787                           
  7788                           ;main.c: 643:                         }
  7789  000794  0101               	movlb	1	; () banked
  7790  000796  2B59               	incf	UI_main@i& (0+255),f,b
  7791  000798  D7EF               	goto	l7842
  7792  00079A                     l7852:
  7793                           
  7794                           ; BSR set to: 1
  7795                           ;main.c: 644:                         time[6] = I2C_Master_Read(1);
  7796  00079A  0E01               	movlw	1
  7797  00079C  EC10  F01D         	call	_I2C_Master_Read
  7798  0007A0  0101               	movlb	1	; () banked
  7799  0007A2  6F6A               	movwf	(_time+6)& (0+255),b
  7800                           
  7801                           ;main.c: 645:                         I2C_Master_Stop();
  7802  0007A4  EC98  F01D         	call	_I2C_Master_Stop	;wreg free
  7803  0007A8  0EC0               	movlw	192
  7804  0007AA  EC8B  F01D         	call	_lcdInst
  7805                           
  7806                           ;main.c: 649:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  7807  0007AE  0EA7               	movlw	low STR_49
  7808  0007B0  0100               	movlb	0	; () banked
  7809  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  7810  0007B4  0EFE               	movlw	high STR_49
  7811  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7812  0007B8  C16A  F0EF         	movff	_time+6,?_printf+2
  7813  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  7814  0007BE  C169  F0F1         	movff	_time+5,?_printf+4
  7815  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  7816  0007C4  C168  F0F3         	movff	_time+4,?_printf+6
  7817  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  7818  0007CA  EC25  F01D         	call	_printf	;wreg free
  7819  0007CE  0E90               	movlw	144
  7820  0007D0  EC8B  F01D         	call	_lcdInst
  7821                           
  7822                           ;main.c: 651:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  7823  0007D4  0EB6               	movlw	low STR_50
  7824  0007D6  0100               	movlb	0	; () banked
  7825  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  7826  0007DA  0EFE               	movlw	high STR_50
  7827  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7828  0007DE  C166  F0EF         	movff	_time+2,?_printf+2
  7829  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  7830  0007E4  C165  F0F1         	movff	_time+1,?_printf+4
  7831  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  7832  0007EA  C164  F0F3         	movff	_time,?_printf+6
  7833  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  7834  0007F0  EC25  F01D         	call	_printf	;wreg free
  7835  0007F4  0ED0               	movlw	208
  7836  0007F6  EC8B  F01D         	call	_lcdInst
  7837                           
  7838                           ;main.c: 653:                         printf("     0-Menu     ");
  7839  0007FA  0EE4               	movlw	low STR_30
  7840  0007FC  0100               	movlb	0	; () banked
  7841  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  7842  000800  0EFD               	movlw	high STR_30
  7843  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7844  000804  EC25  F01D         	call	_printf	;wreg free
  7845  000808                     l7862:
  7846                           
  7847                           ;main.c: 656:                     tick++;
  7848  000808  0E01               	movlw	1
  7849  00080A  0101               	movlb	1	; () banked
  7850  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  7851  00080E  0E00               	movlw	0
  7852  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  7853  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  7854  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  7855  000816                     l7864:
  7856                           
  7857                           ; BSR set to: 1
  7858                           ;main.c: 629:                 while(~key_was_pressed){
  7859  000816  0577               	decf	_key_was_pressed& (0+255),w,b	;volatile
  7860  000818  A4D8               	btfss	status,2,c
  7861  00081A  D758               	goto	l7818
  7862  00081C                     u8430:
  7863                           
  7864                           ;main.c: 524:     while(sens==0){
  7865  00081C  5058               	movf	_sens,w,c	;volatile
  7866  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  7867  000820  A4D8               	btfss	status,2,c
  7868  000822  0012               	return	
  7869  000824  D44B               	goto	l7646
  7870  000826                     __end_of_UI_main:
  7871                           	opt callstack 0
  7872                           
  7873 ;; *************** function _printf *****************
  7874 ;; Defined at:
  7875 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  7878 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  7879 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  7880 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
  7881 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
  7882 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
  7883 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
  7884 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
  7885 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
  7886 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
  7887 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  7888 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  7889 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  7890 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  7891 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  7892 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  7893 ;;		 -> STR_1(10), 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  ap              2  119[BANK0 ] PTR void [1]
  7896 ;;		 -> ?_printf(2), 
  7897 ;;  ret             2    0        int 
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  2  109[BANK0 ] int 
  7900 ;; Registers used:
  7901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7907 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7911 ;;Total ram usage:       12 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:   13
  7914 ;; This function calls:
  7915 ;;		_vfprintf
  7916 ;; This function is called by:
  7917 ;;		_actuators_main
  7918 ;;		_stepper2
  7919 ;;		_stepper2_back
  7920 ;;		_full_drive
  7921 ;;		_print_echo
  7922 ;;		_ultrasonic_main
  7923 ;;		_number_deploy
  7924 ;;		_UI_main
  7925 ;;		_brake
  7926 ;;		_main
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text20
  7931  003A4A                     __ptext20:
  7932                           	opt callstack 0
  7933  003A4A                     _printf:
  7934                           	opt callstack 16
  7935                           
  7936                           ;incstack = 0
  7937  003A4A  0EEF               	movlw	low (?_printf+2)
  7938  003A4C  0100               	movlb	0	; () banked
  7939  003A4E  6FF7               	movwf	printf@ap& (0+255),b
  7940  003A50  0E00               	movlw	high (?_printf+2)
  7941  003A52  6FF8               	movwf	(printf@ap+1)& (0+255),b
  7942                           
  7943                           ; BSR set to: 0
  7944  003A54  0E00               	movlw	0
  7945  003A56  6FE5               	movwf	vfprintf@fp& (0+255),b
  7946  003A58  0E00               	movlw	0
  7947  003A5A  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  7948  003A5C  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  7949  003A60  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  7950  003A64  0EF7               	movlw	low printf@ap
  7951  003A66  6FE9               	movwf	vfprintf@ap& (0+255),b
  7952  003A68  0E00               	movlw	high printf@ap
  7953  003A6A  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  7954  003A6C  EC34  F01B         	call	_vfprintf	;wreg free
  7955  003A70  0012               	return		;funcret
  7956  003A72                     __end_of_printf:
  7957                           	opt callstack 0
  7958                           
  7959 ;; *************** function _vfprintf *****************
  7960 ;; Defined at:
  7961 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  7964 ;;		 -> NULL(0), 
  7965 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  7966 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  7967 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  7968 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
  7969 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
  7970 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
  7971 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
  7972 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
  7973 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
  7974 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
  7975 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  7976 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  7977 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  7978 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  7979 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  7980 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  7981 ;;		 -> STR_1(10), 
  7982 ;;  ap              2  105[BANK0 ] PTR PTR void 
  7983 ;;		 -> printf@ap(2), 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  7986 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  7987 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  7988 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
  7989 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
  7990 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
  7991 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
  7992 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
  7993 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
  7994 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
  7995 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  7996 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  7997 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  7998 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  7999 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  8000 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  8001 ;;		 -> STR_1(10), 
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  2  101[BANK0 ] int 
  8004 ;; Registers used:
  8005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8011 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8012 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;Total ram usage:        8 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:   12
  8018 ;; This function calls:
  8019 ;;		_vfpfcnvrt
  8020 ;; This function is called by:
  8021 ;;		_printf
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           	psect	text21
  8026  003668                     __ptext21:
  8027                           	opt callstack 0
  8028  003668                     _vfprintf:
  8029                           	opt callstack 16
  8030                           
  8031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8032                           
  8033                           ;incstack = 0
  8034  003668  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8035  00366C  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8036                           
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8038  003670  0E00               	movlw	0
  8039  003672  6E49               	movwf	_nout+1,c
  8040  003674  0E00               	movlw	0
  8041  003676  6E48               	movwf	_nout,c
  8042                           
  8043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8044  003678  D014               	goto	l6720
  8045  00367A                     l6718:
  8046                           
  8047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8048  00367A  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8049  00367E  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8050  003682  0EEB               	movlw	low vfprintf@cfmt
  8051  003684  0100               	movlb	0	; () banked
  8052  003686  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8053  003688  0E00               	movlw	high vfprintf@cfmt
  8054  00368A  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8055  00368C  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8056  003690  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8057  003694  EC43  F009         	call	_vfpfcnvrt	;wreg free
  8058  003698  0100               	movlb	0	; () banked
  8059  00369A  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8060  00369C  2648               	addwf	_nout,f,c
  8061  00369E  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8062  0036A0  2249               	addwfc	_nout+1,f,c
  8063  0036A2                     l6720:
  8064                           
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8066  0036A2  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8067  0036A6  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8068  0036AA                     	if	0	;tblptru may be non-zero
  8069  0036AA                     	endif
  8070  0036AA                     	if	0	;tblptru may be non-zero
  8071  0036AA                     	endif
  8072  0036AA  0008               	tblrd		*
  8073  0036AC  50F5               	movf	tablat,w,c
  8074  0036AE  0900               	iorlw	0
  8075  0036B0  A4D8               	btfss	status,2,c
  8076  0036B2  D7E3               	goto	l6718
  8077                           
  8078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8079  0036B4  C048  F0E5         	movff	_nout,?_vfprintf
  8080  0036B8  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8081  0036BC  0012               	return		;funcret
  8082  0036BE                     __end_of_vfprintf:
  8083                           	opt callstack 0
  8084                           
  8085 ;; *************** function _vfpfcnvrt *****************
  8086 ;; Defined at:
  8087 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8090 ;;		 -> NULL(0), 
  8091 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8092 ;;		 -> vfprintf@cfmt(2), 
  8093 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8094 ;;		 -> printf@ap(2), 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;  llu             8   88[BANK0 ] unsigned long long 
  8097 ;;  ll              8   80[BANK0 ] long long 
  8098 ;;  f               4    0        long long 
  8099 ;;  vp              3    0        PTR void 
  8100 ;;  ct              3    0        unsigned char [3]
  8101 ;;  cp              3    0        PTR unsigned char 
  8102 ;;  done            2   97[BANK0 ] int 
  8103 ;;  i               2    0        int 
  8104 ;;  c               1   96[BANK0 ] unsigned char 
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  2   70[BANK0 ] int 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8114 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;Total ram usage:       31 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:   11
  8121 ;; This function calls:
  8122 ;;		_atoi
  8123 ;;		_dtoa
  8124 ;;		_fputc
  8125 ;;		_isdigit
  8126 ;;		_xtoa
  8127 ;; This function is called by:
  8128 ;;		_vfprintf
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text22
  8133  001286                     __ptext22:
  8134                           	opt callstack 0
  8135  001286                     _vfpfcnvrt:
  8136                           	opt callstack 16
  8137                           
  8138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8139                           
  8140                           ;incstack = 0
  8141  001286  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8142  00128A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8143  00128E  CFDE FFF6          	movff	postinc2,tblptrl
  8144  001292  CFDD FFF7          	movff	postdec2,tblptrh
  8145  001296                     	if	0	;tblptru may be non-zero
  8146  001296                     	endif
  8147  001296                     	if	0	;tblptru may be non-zero
  8148  001296                     	endif
  8149  001296  0008               	tblrd		*
  8150  001298  50F5               	movf	tablat,w,c
  8151  00129A  0A25               	xorlw	37
  8152  00129C  A4D8               	btfss	status,2,c
  8153  00129E  D1AD               	goto	l6698
  8154                           
  8155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8156  0012A0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8157  0012A4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8158  0012A8  2ADE               	incf	postinc2,f,c
  8159  0012AA  0E00               	movlw	0
  8160  0012AC  22DD               	addwfc	postdec2,f,c
  8161                           
  8162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8163  0012AE  0E00               	movlw	0
  8164  0012B0  6E4B               	movwf	_width+1,c
  8165  0012B2  0E00               	movlw	0
  8166  0012B4  6E4A               	movwf	_width,c
  8167  0012B6  C04A  F04E         	movff	_width,_flags
  8168  0012BA  C04B  F04F         	movff	_width+1,_flags+1
  8169                           
  8170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8171  0012BE  684C               	setf	_prec,c
  8172  0012C0  684D               	setf	_prec+1,c
  8173                           
  8174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8175  0012C2  0E00               	movlw	0
  8176  0012C4  0100               	movlb	0	; () banked
  8177  0012C6  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8178  0012C8  0E00               	movlw	0
  8179  0012CA  D014               	goto	L3
  8180  0012CC                     l6610:
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8184  0012CC  804E               	bsf	_flags,0,c
  8185  0012CE                     l6612:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8189  0012CE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8190  0012D2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8191  0012D6  2ADE               	incf	postinc2,f,c
  8192  0012D8  0E00               	movlw	0
  8193  0012DA  22DD               	addwfc	postdec2,f,c
  8194                           
  8195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8196  0012DC  D02E               	goto	l6636
  8197  0012DE                     l6614:
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8201  0012DE  824E               	bsf	_flags,1,c
  8202  0012E0  D7F6               	goto	l6612
  8203  0012E2                     l6618:
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8207  0012E2  844E               	bsf	_flags,2,c
  8208  0012E4  D7F4               	goto	l6612
  8209  0012E6                     l6622:
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8213  0012E6  864E               	bsf	_flags,3,c
  8214  0012E8  D7F2               	goto	l6612
  8215  0012EA                     l6626:
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8219  0012EA  884E               	bsf	_flags,4,c
  8220  0012EC  D7F0               	goto	l6612
  8221  0012EE                     l6630:
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8225  0012EE  0E00               	movlw	0
  8226  0012F0  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8227  0012F2  0E01               	movlw	1
  8228  0012F4                     L3:
  8229  0012F4  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8230                           
  8231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8232  0012F6  D021               	goto	l6636
  8233  0012F8                     l6634:
  8234                           
  8235                           ; BSR set to: 0
  8236  0012F8  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8237  0012FC  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8238  001300  CFDE FFF6          	movff	postinc2,tblptrl
  8239  001304  CFDD FFF7          	movff	postdec2,tblptrh
  8240  001308                     	if	0	;tblptru may be non-zero
  8241  001308                     	endif
  8242  001308                     	if	0	;tblptru may be non-zero
  8243  001308                     	endif
  8244  001308  0008               	tblrd		*
  8245  00130A  50F5               	movf	tablat,w,c
  8246  00130C  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8247  00130E  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8248                           
  8249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8250                           ; Switch size 1, requested type "simple"
  8251                           ; Number of cases is 1, Range of values is 0 to 0
  8252                           ; switch strategies available:
  8253                           ; Name         Instructions Cycles
  8254                           ; simple_byte            4     3 (average)
  8255                           ;	Chosen strategy is simple_byte
  8256  001310  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8257  001312  0A00               	xorlw	0	; case 0
  8258  001314  A4D8               	btfss	status,2,c
  8259  001316  D7EB               	goto	l6630
  8260                           
  8261                           ; BSR set to: 0
  8262                           ; Switch size 1, requested type "simple"
  8263                           ; Number of cases is 5, Range of values is 32 to 48
  8264                           ; switch strategies available:
  8265                           ; Name         Instructions Cycles
  8266                           ; simple_byte           16     9 (average)
  8267                           ;	Chosen strategy is simple_byte
  8268  001318  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8269  00131A  0A20               	xorlw	32	; case 32
  8270  00131C  B4D8               	btfsc	status,2,c
  8271  00131E  D7E3               	goto	l6622
  8272  001320  0A03               	xorlw	3	; case 35
  8273  001322  B4D8               	btfsc	status,2,c
  8274  001324  D7E2               	goto	l6626
  8275  001326  0A08               	xorlw	8	; case 43
  8276  001328  B4D8               	btfsc	status,2,c
  8277  00132A  D7DB               	goto	l6618
  8278  00132C  0A06               	xorlw	6	; case 45
  8279  00132E  B4D8               	btfsc	status,2,c
  8280  001330  D7CD               	goto	l6610
  8281  001332  0A1D               	xorlw	29	; case 48
  8282  001334  B4D8               	btfsc	status,2,c
  8283  001336  D7D3               	goto	l6614
  8284  001338  D7DA               	goto	l6630
  8285  00133A                     l6636:
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8289  00133A  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8290  00133C  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8291  00133E  B4D8               	btfsc	status,2,c
  8292  001340  D7DB               	goto	l6634
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8296  001342  B04E               	btfsc	_flags,0,c
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8300  001344  924E               	bcf	_flags,1,c
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8304  001346  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8305  00134A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8306  00134E  CFDE FFF6          	movff	postinc2,tblptrl
  8307  001352  CFDD FFF7          	movff	postdec2,tblptrh
  8308  001356                     	if	0	;tblptru may be non-zero
  8309  001356                     	endif
  8310  001356                     	if	0	;tblptru may be non-zero
  8311  001356                     	endif
  8312  001356  0008               	tblrd		*
  8313  001358  50F5               	movf	tablat,w,c
  8314  00135A  0A2A               	xorlw	42
  8315  00135C  A4D8               	btfss	status,2,c
  8316  00135E  D023               	goto	l6648
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8320  001360  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8321  001364  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8322  001368  2ADE               	incf	postinc2,f,c
  8323  00136A  0E00               	movlw	0
  8324  00136C  22DD               	addwfc	postdec2,f,c
  8325                           
  8326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8327  00136E  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8328  001372  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8329  001376  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8330  00137A  0E02               	movlw	2
  8331  00137C  26DE               	addwf	postinc2,f,c
  8332  00137E  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8333  001382  0E00               	movlw	0
  8334  001384  22DD               	addwfc	postdec2,f,c
  8335  001386  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8336  00138A  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8337  00138E  CFDE F04A          	movff	postinc2,_width
  8338  001392  CFDD F04B          	movff	postdec2,_width+1
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8342  001396  AE4B               	btfss	_width+1,7,c
  8343  001398  D040               	goto	u7250
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8347  00139A  804E               	bsf	_flags,0,c
  8348                           
  8349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8350  00139C  6C4A               	negf	_width,c
  8351  00139E  1E4B               	comf	_width+1,f,c
  8352  0013A0  B0D8               	btfsc	status,0,c
  8353  0013A2  2A4B               	incf	_width+1,f,c
  8354  0013A4  D03A               	goto	u7250
  8355  0013A6                     l6648:
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8359  0013A6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8360  0013AA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8361  0013AE  CFDE F087          	movff	postinc2,atoi@s
  8362  0013B2  CFDD F088          	movff	postdec2,atoi@s+1
  8363  0013B6  ECB6  F013         	call	_atoi	;wreg free
  8364  0013BA  C087  F04A         	movff	?_atoi,_width
  8365  0013BE  C088  F04B         	movff	?_atoi+1,_width+1
  8366                           
  8367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8368  0013C2  D007               	goto	l6652
  8369  0013C4                     l6650:
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8373  0013C4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8374  0013C8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8375  0013CC  2ADE               	incf	postinc2,f,c
  8376  0013CE  0E00               	movlw	0
  8377  0013D0  22DD               	addwfc	postdec2,f,c
  8378  0013D2                     l6652:
  8379  0013D2  0ED0               	movlw	208
  8380  0013D4  0100               	movlb	0	; () banked
  8381  0013D6  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8382  0013D8  0EFF               	movlw	255
  8383  0013DA  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8384  0013DC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8385  0013E0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8386  0013E4  CFDE FFF6          	movff	postinc2,tblptrl
  8387  0013E8  CFDD FFF7          	movff	postdec2,tblptrh
  8388  0013EC                     	if	0	;tblptru may be non-zero
  8389  0013EC                     	endif
  8390  0013EC                     	if	0	;tblptru may be non-zero
  8391  0013EC                     	endif
  8392  0013EC  0008               	tblrd		*
  8393  0013EE  50F5               	movf	tablat,w,c
  8394  0013F0  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8395  0013F2  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8396  0013F4  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8397  0013F6  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8398  0013F8  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8399  0013FA  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8400  0013FC  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8401  0013FE  E106               	bnz	u7230
  8402  001400  0E0A               	movlw	10
  8403  001402  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8404  001404  B0D8               	btfsc	status,0,c
  8405  001406  D002               	goto	u7230
  8406  001408  0E01               	movlw	1
  8407  00140A  D001               	goto	u7240
  8408  00140C                     u7230:
  8409  00140C  0E00               	movlw	0
  8410  00140E                     u7240:
  8411  00140E  6FE3               	movwf	_vfpfcnvrt$1125& (0+255),b
  8412  001410  6BE4               	clrf	(_vfpfcnvrt$1125+1)& (0+255),b
  8413                           
  8414                           ; BSR set to: 0
  8415  001412  51E3               	movf	_vfpfcnvrt$1125& (0+255),w,b
  8416  001414  11E4               	iorwf	(_vfpfcnvrt$1125+1)& (0+255),w,b
  8417  001416  A4D8               	btfss	status,2,c
  8418  001418  D7D5               	goto	l6650
  8419  00141A                     u7250:
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8423  00141A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8424  00141E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8425  001422  CFDE FFF6          	movff	postinc2,tblptrl
  8426  001426  CFDD FFF7          	movff	postdec2,tblptrh
  8427  00142A                     	if	0	;tblptru may be non-zero
  8428  00142A                     	endif
  8429  00142A                     	if	0	;tblptru may be non-zero
  8430  00142A                     	endif
  8431  00142A  0008               	tblrd		*
  8432  00142C  50F5               	movf	tablat,w,c
  8433  00142E  0A64               	xorlw	100
  8434  001430  B4D8               	btfsc	status,2,c
  8435  001432  D00D               	goto	u7270
  8436                           
  8437                           ; BSR set to: 0
  8438  001434  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8439  001438  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8440  00143C  CFDE FFF6          	movff	postinc2,tblptrl
  8441  001440  CFDD FFF7          	movff	postdec2,tblptrh
  8442  001444                     	if	0	;tblptru may be non-zero
  8443  001444                     	endif
  8444  001444                     	if	0	;tblptru may be non-zero
  8445  001444                     	endif
  8446  001444  0008               	tblrd		*
  8447  001446  50F5               	movf	tablat,w,c
  8448  001448  0A69               	xorlw	105
  8449  00144A  A4D8               	btfss	status,2,c
  8450  00144C  D03F               	goto	l6668
  8451  00144E                     u7270:
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8455  00144E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8456  001452  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8457  001456  2ADE               	incf	postinc2,f,c
  8458  001458  0E00               	movlw	0
  8459  00145A  22DD               	addwfc	postdec2,f,c
  8460                           
  8461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8462  00145C  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8463  001460  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8464  001464  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8465  001468  0E02               	movlw	2
  8466  00146A  26DE               	addwf	postinc2,f,c
  8467  00146C  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8468  001470  0E00               	movlw	0
  8469  001472  22DD               	addwfc	postdec2,f,c
  8470  001474  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8471  001478  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8472  00147C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  8473  001480  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  8474  001484  0E00               	movlw	0
  8475  001486  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8476  001488  0EFF               	movlw	-1
  8477  00148A  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8478  00148C  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8479  00148E  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8480  001490  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8481  001492  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8482  001494  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8486  001496  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  8487  00149A  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8488  00149E  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  8489  0014A2  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8490  0014A6  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8491  0014AA  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8492  0014AE  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8493  0014B2  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8494  0014B6  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8495  0014BA  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8496  0014BE  ECF4  F00D         	call	_dtoa	;wreg free
  8497  0014C2  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  8498  0014C6  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8499  0014CA  0012               	return	
  8500  0014CC                     l6668:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8504  0014CC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8505  0014D0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8506  0014D4  CFDE FFF6          	movff	postinc2,tblptrl
  8507  0014D8  CFDD FFF7          	movff	postdec2,tblptrh
  8508  0014DC                     	if	0	;tblptru may be non-zero
  8509  0014DC                     	endif
  8510  0014DC                     	if	0	;tblptru may be non-zero
  8511  0014DC                     	endif
  8512  0014DC  0008               	tblrd		*
  8513  0014DE  50F5               	movf	tablat,w,c
  8514  0014E0  0A78               	xorlw	120
  8515  0014E2  B4D8               	btfsc	status,2,c
  8516  0014E4  D00D               	goto	u7290
  8517                           
  8518                           ; BSR set to: 0
  8519  0014E6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8520  0014EA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8521  0014EE  CFDE FFF6          	movff	postinc2,tblptrl
  8522  0014F2  CFDD FFF7          	movff	postdec2,tblptrh
  8523  0014F6                     	if	0	;tblptru may be non-zero
  8524  0014F6                     	endif
  8525  0014F6                     	if	0	;tblptru may be non-zero
  8526  0014F6                     	endif
  8527  0014F6  0008               	tblrd		*
  8528  0014F8  50F5               	movf	tablat,w,c
  8529  0014FA  0A58               	xorlw	88
  8530  0014FC  A4D8               	btfss	status,2,c
  8531  0014FE  D04D               	goto	l6682
  8532  001500                     u7290:
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  8536  001500  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8537  001504  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8538  001508  CFDE FFF6          	movff	postinc2,tblptrl
  8539  00150C  CFDD FFF7          	movff	postdec2,tblptrh
  8540  001510                     	if	0	;tblptru may be non-zero
  8541  001510                     	endif
  8542  001510                     	if	0	;tblptru may be non-zero
  8543  001510                     	endif
  8544  001510  0008               	tblrd		*
  8545  001512  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  8549  001516  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8550  00151A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8551  00151E  2ADE               	incf	postinc2,f,c
  8552  001520  0E00               	movlw	0
  8553  001522  22DD               	addwfc	postdec2,f,c
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  8557  001524  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8558  001528  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8559  00152C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8560  001530  0E02               	movlw	2
  8561  001532  26DE               	addwf	postinc2,f,c
  8562  001534  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8563  001538  0E00               	movlw	0
  8564  00153A  22DD               	addwfc	postdec2,f,c
  8565  00153C  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8566  001540  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8567  001544  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  8568  001548  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  8569  00154C  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8570  001550  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8571  001554  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8572  001556  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8573  001558  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8574  00155A  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8575  00155C  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8576  00155E  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  8580  001560  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  8581  001564  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8582  001568  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  8583  00156C  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  8584  001570  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  8585  001574  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  8586  001578  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  8587  00157C  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  8588  001580  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  8589  001584  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  8590  001588  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  8591  00158C  EC18  F00F         	call	_xtoa	;wreg free
  8592  001590  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  8593  001594  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8594  001598  0012               	return	
  8595  00159A                     l6682:
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8599  00159A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8600  00159E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8601  0015A2  CFDE FFF6          	movff	postinc2,tblptrl
  8602  0015A6  CFDD FFF7          	movff	postdec2,tblptrh
  8603  0015AA                     	if	0	;tblptru may be non-zero
  8604  0015AA                     	endif
  8605  0015AA                     	if	0	;tblptru may be non-zero
  8606  0015AA                     	endif
  8607  0015AA  0008               	tblrd		*
  8608  0015AC  50F5               	movf	tablat,w,c
  8609  0015AE  0A25               	xorlw	37
  8610  0015B0  A4D8               	btfss	status,2,c
  8611  0015B2  D017               	goto	l6692
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8615  0015B4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8616  0015B8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8617  0015BC  2ADE               	incf	postinc2,f,c
  8618  0015BE  0E00               	movlw	0
  8619  0015C0  22DD               	addwfc	postdec2,f,c
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8623  0015C2  0E00               	movlw	0
  8624  0015C4  6F85               	movwf	(fputc@c+1)& (0+255),b
  8625  0015C6  0E25               	movlw	37
  8626  0015C8  6F84               	movwf	fputc@c& (0+255),b
  8627  0015CA  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8628  0015CE  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8629  0015D2  EC43  F01A         	call	_fputc	;wreg free
  8630  0015D6                     l6688:
  8631                           
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8633  0015D6  0E00               	movlw	0
  8634  0015D8  0100               	movlb	0	; () banked
  8635  0015DA  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8636  0015DC  0E01               	movlw	1
  8637  0015DE  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8638  0015E0  0012               	return	
  8639  0015E2                     l6692:
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8643  0015E2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8644  0015E6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8645  0015EA  2ADE               	incf	postinc2,f,c
  8646  0015EC  0E00               	movlw	0
  8647  0015EE  22DD               	addwfc	postdec2,f,c
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8651  0015F0  0E00               	movlw	0
  8652  0015F2  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8653  0015F4  0E00               	movlw	0
  8654  0015F6  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8655  0015F8  0012               	return	
  8656  0015FA                     l6698:
  8657                           
  8658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8659  0015FA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8660  0015FE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8661  001602  CFDE FFF6          	movff	postinc2,tblptrl
  8662  001606  CFDD FFF7          	movff	postdec2,tblptrh
  8663  00160A                     	if	0	;tblptru may be non-zero
  8664  00160A                     	endif
  8665  00160A                     	if	0	;tblptru may be non-zero
  8666  00160A                     	endif
  8667  00160A  0008               	tblrd		*
  8668  00160C  50F5               	movf	tablat,w,c
  8669  00160E  0100               	movlb	0	; () banked
  8670  001610  6F84               	movwf	fputc@c& (0+255),b
  8671  001612  6B85               	clrf	(fputc@c+1)& (0+255),b
  8672  001614  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8673  001618  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8674  00161C  EC43  F01A         	call	_fputc	;wreg free
  8675                           
  8676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8677  001620  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8678  001624  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8679  001628  2ADE               	incf	postinc2,f,c
  8680  00162A  0E00               	movlw	0
  8681  00162C  22DD               	addwfc	postdec2,f,c
  8682  00162E  D7D3               	goto	l6688
  8683  001630                     __end_of_vfpfcnvrt:
  8684                           	opt callstack 0
  8685                           
  8686 ;; *************** function _xtoa *****************
  8687 ;; Defined at:
  8688 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  8691 ;;		 -> NULL(0), 
  8692 ;;  d               8   33[BANK0 ] unsigned long long 
  8693 ;;  x               1   41[BANK0 ] unsigned char 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  n               8   58[BANK0 ] unsigned long long 
  8696 ;;  c               2   68[BANK0 ] int 
  8697 ;;  i               2   66[BANK0 ] int 
  8698 ;;  w               2   56[BANK0 ] int 
  8699 ;;  p               2   54[BANK0 ] int 
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  2   31[BANK0 ] int 
  8702 ;; Registers used:
  8703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8709 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8713 ;;Total ram usage:       39 bytes
  8714 ;; Hardware stack levels used:    1
  8715 ;; Hardware stack levels required when called:   10
  8716 ;; This function calls:
  8717 ;;		_isalpha
  8718 ;;		_isupper
  8719 ;;		_pad
  8720 ;;		_toupper
  8721 ;; This function is called by:
  8722 ;;		_vfpfcnvrt
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text23
  8727  001E30                     __ptext23:
  8728                           	opt callstack 0
  8729  001E30                     _xtoa:
  8730                           	opt callstack 16
  8731                           
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  8733                           
  8734                           ;incstack = 0
  8735  001E30  AE4D               	btfss	_prec+1,7,c
  8736                           
  8737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  8738  001E32  924E               	bcf	_flags,1,c
  8739                           
  8740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  8741  001E34  BE4D               	btfsc	_prec+1,7,c
  8742  001E36  D005               	goto	u6950
  8743  001E38  504D               	movf	_prec+1,w,c
  8744  001E3A  E109               	bnz	l616
  8745  001E3C  044C               	decf	_prec,w,c
  8746  001E3E  B0D8               	btfsc	status,0,c
  8747  001E40  D006               	goto	l616
  8748  001E42                     u6950:
  8749  001E42  0E00               	movlw	0
  8750  001E44  0100               	movlb	0	; () banked
  8751  001E46  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  8752  001E48  0E01               	movlw	1
  8753  001E4A  6FB6               	movwf	xtoa@p& (0+255),b
  8754  001E4C  D004               	goto	l618
  8755  001E4E                     l616:
  8756  001E4E  C04C  F0B6         	movff	_prec,xtoa@p
  8757  001E52  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  8758  001E56                     l618:
  8759                           
  8760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  8761  001E56  C04A  F0B8         	movff	_width,xtoa@w
  8762  001E5A  C04B  F0B9         	movff	_width+1,xtoa@w+1
  8763                           
  8764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  8765  001E5E  A84E               	btfss	_flags,4,c
  8766  001E60  D005               	goto	l6502
  8767                           
  8768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  8769  001E62  0100               	movlb	0	; () banked
  8770  001E64  0EFE               	movlw	254
  8771  001E66  27B8               	addwf	xtoa@w& (0+255),f,b
  8772  001E68  0EFF               	movlw	255
  8773  001E6A  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  8774  001E6C                     l6502:
  8775                           
  8776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  8777  001E6C  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  8778  001E70  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  8779  001E74  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  8780  001E78  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  8781  001E7C  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  8782  001E80  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  8783  001E84  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  8784  001E88  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  8785                           
  8786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  8787  001E8C  0E00               	movlw	0
  8788  001E8E  0100               	movlb	0	; () banked
  8789  001E90  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  8790  001E92  0E1F               	movlw	31
  8791  001E94  6FC2               	movwf	xtoa@i& (0+255),b
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  8795  001E96  0E00               	movlw	0
  8796  001E98  0101               	movlb	1	; () banked
  8797  001E9A  6F97               	movwf	(_dbuf+31)& (0+255),b
  8798                           
  8799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8800  001E9C  D094               	goto	l6538
  8801  001E9E                     l6508:
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  8805  001E9E  07C2               	decf	xtoa@i& (0+255),f,b
  8806  001EA0  A0D8               	btfss	status,0,c
  8807  001EA2  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  8811  001EA4  0E0F               	movlw	15
  8812  001EA6  15BA               	andwf	xtoa@n& (0+255),w,b
  8813  001EA8  6FC4               	movwf	xtoa@c& (0+255),b
  8814  001EAA  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  8818  001EAC  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  8819  001EAE  D008               	goto	l6516
  8820  001EB0  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  8821  001EB2  E104               	bnz	u6970
  8822  001EB4  0E0A               	movlw	10
  8823  001EB6  5DC4               	subwf	xtoa@c& (0+255),w,b
  8824  001EB8  A0D8               	btfss	status,0,c
  8825  001EBA  D002               	goto	l6516
  8826  001EBC                     u6970:
  8827                           
  8828                           ; BSR set to: 0
  8829  001EBC  0E57               	movlw	87
  8830  001EBE  D001               	goto	L4
  8831  001EC0                     l6516:
  8832                           
  8833                           ; BSR set to: 0
  8834  001EC0  0E30               	movlw	48
  8835  001EC2                     L4:
  8836  001EC2  25C4               	addwf	xtoa@c& (0+255),w,b
  8837  001EC4  6FC4               	movwf	xtoa@c& (0+255),b
  8838  001EC6  0E00               	movlw	0
  8839  001EC8  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  8840  001ECA  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  8841                           
  8842                           ; BSR set to: 0
  8843                           
  8844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  8845  001ECC  0EBF               	movlw	191
  8846  001ECE  6FAA               	movwf	??_xtoa& (0+255),b
  8847  001ED0  0EFF               	movlw	255
  8848  001ED2  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8849  001ED4  51A9               	movf	xtoa@x& (0+255),w,b
  8850  001ED6  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8851  001ED8  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  8852  001EDA  51AA               	movf	??_xtoa& (0+255),w,b
  8853  001EDC  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8854  001EDE  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8855  001EE0  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8856  001EE2  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8857  001EE4  E106               	bnz	u6980
  8858  001EE6  0E1A               	movlw	26
  8859  001EE8  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8860  001EEA  B0D8               	btfsc	status,0,c
  8861  001EEC  D002               	goto	u6980
  8862  001EEE  0E01               	movlw	1
  8863  001EF0  D001               	goto	u6990
  8864  001EF2                     u6980:
  8865  001EF2  0E00               	movlw	0
  8866  001EF4                     u6990:
  8867  001EF4  6FB2               	movwf	_xtoa$1110& (0+255),b
  8868  001EF6  6BB3               	clrf	(_xtoa$1110+1)& (0+255),b
  8869                           
  8870                           ; BSR set to: 0
  8871  001EF8  51B2               	movf	_xtoa$1110& (0+255),w,b
  8872  001EFA  11B3               	iorwf	(_xtoa$1110+1)& (0+255),w,b
  8873  001EFC  B4D8               	btfsc	status,2,c
  8874  001EFE  D027               	goto	l6530
  8875                           
  8876                           ; BSR set to: 0
  8877  001F00  0E9F               	movlw	159
  8878  001F02  6FAA               	movwf	??_xtoa& (0+255),b
  8879  001F04  0EFF               	movlw	255
  8880  001F06  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  8881  001F08  0E20               	movlw	32
  8882  001F0A  11C4               	iorwf	xtoa@c& (0+255),w,b
  8883  001F0C  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  8884  001F0E  0E00               	movlw	0
  8885  001F10  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  8886  001F12  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  8887  001F14  51AA               	movf	??_xtoa& (0+255),w,b
  8888  001F16  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  8889  001F18  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  8890  001F1A  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  8891  001F1C  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  8892  001F1E  E106               	bnz	u7010
  8893  001F20  0E1A               	movlw	26
  8894  001F22  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  8895  001F24  B0D8               	btfsc	status,0,c
  8896  001F26  D002               	goto	u7010
  8897  001F28  0E01               	movlw	1
  8898  001F2A  D001               	goto	u7020
  8899  001F2C                     u7010:
  8900  001F2C  0E00               	movlw	0
  8901  001F2E                     u7020:
  8902  001F2E  6FB4               	movwf	_xtoa$1111& (0+255),b
  8903  001F30  6BB5               	clrf	(_xtoa$1111+1)& (0+255),b
  8904                           
  8905                           ; BSR set to: 0
  8906  001F32  51B4               	movf	_xtoa$1111& (0+255),w,b
  8907  001F34  11B5               	iorwf	(_xtoa$1111+1)& (0+255),w,b
  8908  001F36  B4D8               	btfsc	status,2,c
  8909  001F38  D00A               	goto	l6530
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  8913  001F3A  C0C4  F086         	movff	xtoa@c,toupper@c
  8914  001F3E  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  8915  001F42  ECB0  F01B         	call	_toupper	;wreg free
  8916  001F46  C086  F0C4         	movff	?_toupper,xtoa@c
  8917  001F4A  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  8918  001F4E                     l6530:
  8919                           
  8920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  8921  001F4E  0E78               	movlw	low _dbuf
  8922  001F50  0100               	movlb	0	; () banked
  8923  001F52  25C2               	addwf	xtoa@i& (0+255),w,b
  8924  001F54  6ED9               	movwf	fsr2l,c
  8925  001F56  0E01               	movlw	high _dbuf
  8926  001F58  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  8927  001F5A  6EDA               	movwf	fsr2h,c
  8928  001F5C  C0C4  FFDF         	movff	xtoa@c,indf2
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  8932  001F60  07B6               	decf	xtoa@p& (0+255),f,b
  8933  001F62  A0D8               	btfss	status,0,c
  8934  001F64  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  8935                           
  8936                           ; BSR set to: 0
  8937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  8938  001F66  07B8               	decf	xtoa@w& (0+255),f,b
  8939  001F68  A0D8               	btfss	status,0,c
  8940  001F6A  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  8944  001F6C  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  8945  001F70  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  8946  001F74  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  8947  001F78  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  8948  001F7C  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  8949  001F80  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  8950  001F84  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  8951  001F88  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  8952  001F8C  0E05               	movlw	5
  8953  001F8E  D009               	goto	u7040
  8954  001F90                     u7045:
  8955  001F90  90D8               	bcf	status,0,c
  8956  001F92  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  8957  001F94  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  8958  001F96  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  8959  001F98  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  8960  001F9A  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  8961  001F9C  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  8962  001F9E  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  8963  001FA0  33AA               	rrcf	??_xtoa& (0+255),f,b
  8964  001FA2                     u7040:
  8965  001FA2  2EE8               	decfsz	wreg,f,c
  8966  001FA4  D7F5               	goto	u7045
  8967  001FA6  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  8968  001FAA  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  8969  001FAE  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  8970  001FB2  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  8971  001FB6  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  8972  001FBA  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  8973  001FBE  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  8974  001FC2  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  8975  001FC6                     l6538:
  8976                           
  8977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8978  001FC6  0100               	movlb	0	; () banked
  8979  001FC8  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  8980  001FCA  D020               	goto	u7090
  8981  001FCC  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  8982  001FCE  E104               	bnz	u7050
  8983  001FD0  0E02               	movlw	2
  8984  001FD2  5DC2               	subwf	xtoa@i& (0+255),w,b
  8985  001FD4  A0D8               	btfss	status,0,c
  8986  001FD6  D01A               	goto	u7090
  8987  001FD8                     u7050:
  8988                           
  8989                           ; BSR set to: 0
  8990  001FD8  51BA               	movf	xtoa@n& (0+255),w,b
  8991  001FDA  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  8992  001FDC  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  8993  001FDE  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  8994  001FE0  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  8995  001FE2  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  8996  001FE4  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  8997  001FE6  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  8998  001FE8  A4D8               	btfss	status,2,c
  8999  001FEA  D759               	goto	l6508
  9000                           
  9001                           ; BSR set to: 0
  9002  001FEC  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9003  001FEE  D005               	goto	u7070
  9004  001FF0  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9005  001FF2  E102               	bnz	u7071
  9006  001FF4  05B6               	decf	xtoa@p& (0+255),w,b
  9007  001FF6  B0D8               	btfsc	status,0,c
  9008  001FF8                     u7071:
  9009  001FF8  D752               	goto	l6508
  9010  001FFA                     u7070:
  9011                           
  9012                           ; BSR set to: 0
  9013  001FFA  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9014  001FFC  D007               	goto	u7090
  9015  001FFE  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9016  002000  E103               	bnz	u7080
  9017  002002  05B8               	decf	xtoa@w& (0+255),w,b
  9018  002004  A0D8               	btfss	status,0,c
  9019  002006  D002               	goto	u7090
  9020  002008                     u7080:
  9021                           
  9022                           ; BSR set to: 0
  9023  002008  B24E               	btfsc	_flags,1,c
  9024  00200A  D749               	goto	l6508
  9025  00200C                     u7090:
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9029  00200C  A84E               	btfss	_flags,4,c
  9030  00200E  D016               	goto	l6554
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9034  002010  07C2               	decf	xtoa@i& (0+255),f,b
  9035  002012  A0D8               	btfss	status,0,c
  9036  002014  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9040  002016  0E78               	movlw	low _dbuf
  9041  002018  25C2               	addwf	xtoa@i& (0+255),w,b
  9042  00201A  6ED9               	movwf	fsr2l,c
  9043  00201C  0E01               	movlw	high _dbuf
  9044  00201E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9045  002020  6EDA               	movwf	fsr2h,c
  9046  002022  C0A9  FFDF         	movff	xtoa@x,indf2
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9050  002026  07C2               	decf	xtoa@i& (0+255),f,b
  9051  002028  A0D8               	btfss	status,0,c
  9052  00202A  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9053                           
  9054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9055  00202C  0E78               	movlw	low _dbuf
  9056  00202E  25C2               	addwf	xtoa@i& (0+255),w,b
  9057  002030  6ED9               	movwf	fsr2l,c
  9058  002032  0E01               	movlw	high _dbuf
  9059  002034  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9060  002036  6EDA               	movwf	fsr2h,c
  9061  002038  0E30               	movlw	48
  9062  00203A  6EDF               	movwf	indf2,c
  9063  00203C                     l6554:
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9067  00203C  C09F  F094         	movff	xtoa@fp,pad@fp
  9068  002040  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9069  002044  0E78               	movlw	low _dbuf
  9070  002046  25C2               	addwf	xtoa@i& (0+255),w,b
  9071  002048  6F96               	movwf	pad@buf& (0+255),b
  9072  00204A  0E01               	movlw	high _dbuf
  9073  00204C  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9074  00204E  6F97               	movwf	(pad@buf+1)& (0+255),b
  9075  002050  C0B8  F098         	movff	xtoa@w,pad@p
  9076  002054  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9077  002058  ECB2  F018         	call	_pad	;wreg free
  9078  00205C  C094  F09F         	movff	?_pad,?_xtoa
  9079  002060  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9080  002064  0012               	return		;funcret
  9081  002066                     __end_of_xtoa:
  9082                           	opt callstack 0
  9083                           
  9084 ;; *************** function _toupper *****************
  9085 ;; Defined at:
  9086 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;  c               2    6[BANK0 ] int 
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;		None
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  2    6[BANK0 ] int 
  9093 ;; Registers used:
  9094 ;;		wreg, status,2, status,0
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9101 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9102 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9104 ;;Total ram usage:        8 bytes
  9105 ;; Hardware stack levels used:    1
  9106 ;; Hardware stack levels required when called:    4
  9107 ;; This function calls:
  9108 ;;		_islower
  9109 ;; This function is called by:
  9110 ;;		_xtoa
  9111 ;; This function uses a non-reentrant model
  9112 ;;
  9113                           
  9114                           	psect	text24
  9115  003760                     __ptext24:
  9116                           	opt callstack 0
  9117  003760                     _toupper:
  9118                           	opt callstack 21
  9119                           
  9120                           ;incstack = 0
  9121  003760  0E9F               	movlw	159
  9122  003762  0100               	movlb	0	; () banked
  9123  003764  6F88               	movwf	??_toupper& (0+255),b
  9124  003766  0EFF               	movlw	255
  9125  003768  6F89               	movwf	(??_toupper+1)& (0+255),b
  9126  00376A  C086  F08A         	movff	toupper@c,??_toupper+2
  9127  00376E  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9128  003772  5188               	movf	??_toupper& (0+255),w,b
  9129  003774  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9130  003776  5189               	movf	(??_toupper+1)& (0+255),w,b
  9131  003778  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9132  00377A  518B               	movf	(??_toupper+3)& (0+255),w,b
  9133  00377C  E106               	bnz	u6590
  9134  00377E  0E1A               	movlw	26
  9135  003780  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9136  003782  B0D8               	btfsc	status,0,c
  9137  003784  D002               	goto	u6590
  9138  003786  0E01               	movlw	1
  9139  003788  D001               	goto	u6600
  9140  00378A                     u6590:
  9141  00378A  0E00               	movlw	0
  9142  00378C                     u6600:
  9143  00378C  6F8C               	movwf	_toupper$1675& (0+255),b
  9144  00378E  6B8D               	clrf	(_toupper$1675+1)& (0+255),b
  9145                           
  9146                           ; BSR set to: 0
  9147  003790  518C               	movf	_toupper$1675& (0+255),w,b
  9148  003792  118D               	iorwf	(_toupper$1675+1)& (0+255),w,b
  9149  003794  B4D8               	btfsc	status,2,c
  9150  003796  D005               	goto	l1456
  9151                           
  9152                           ; BSR set to: 0
  9153  003798  0E5F               	movlw	95
  9154  00379A  1586               	andwf	toupper@c& (0+255),w,b
  9155  00379C  6F86               	movwf	?_toupper& (0+255),b
  9156  00379E  6B87               	clrf	(?_toupper+1)& (0+255),b
  9157  0037A0  0012               	return	
  9158  0037A2                     l1456:
  9159                           
  9160                           ; BSR set to: 0
  9161  0037A2  C086  F086         	movff	toupper@c,?_toupper
  9162  0037A6  C087  F087         	movff	toupper@c+1,?_toupper+1
  9163                           
  9164                           ; BSR set to: 0
  9165  0037AA  0012               	return		;funcret
  9166  0037AC                     __end_of_toupper:
  9167                           	opt callstack 0
  9168                           
  9169 ;; *************** function _islower *****************
  9170 ;; Defined at:
  9171 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  c               2    0[BANK0 ] int 
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;		None
  9176 ;; Return value:  Size  Location     Type
  9177 ;;                  2    0[BANK0 ] int 
  9178 ;; Registers used:
  9179 ;;		wreg, status,2, status,0
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;Total ram usage:        6 bytes
  9190 ;; Hardware stack levels used:    1
  9191 ;; Hardware stack levels required when called:    3
  9192 ;; This function calls:
  9193 ;;		Nothing
  9194 ;; This function is called by:
  9195 ;;		_toupper
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text25
  9200  003902                     __ptext25:
  9201                           	opt callstack 0
  9202  003902                     _islower:
  9203                           	opt callstack 21
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;incstack = 0
  9207  003902  0E9F               	movlw	159
  9208  003904  0100               	movlb	0	; () banked
  9209  003906  6F82               	movwf	??_islower& (0+255),b
  9210  003908  0EFF               	movlw	255
  9211  00390A  6F83               	movwf	(??_islower+1)& (0+255),b
  9212  00390C  C080  F084         	movff	islower@c,??_islower+2
  9213  003910  C081  F085         	movff	islower@c+1,??_islower+3
  9214  003914  5182               	movf	??_islower& (0+255),w,b
  9215  003916  2784               	addwf	(??_islower+2)& (0+255),f,b
  9216  003918  5183               	movf	(??_islower+1)& (0+255),w,b
  9217  00391A  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9218  00391C  5185               	movf	(??_islower+3)& (0+255),w,b
  9219  00391E  E106               	bnz	u6480
  9220  003920  0E1A               	movlw	26
  9221  003922  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9222  003924  B0D8               	btfsc	status,0,c
  9223  003926  D002               	goto	u6480
  9224  003928  0E01               	movlw	1
  9225  00392A  D001               	goto	u6490
  9226  00392C                     u6480:
  9227  00392C  0E00               	movlw	0
  9228  00392E                     u6490:
  9229  00392E  6F80               	movwf	?_islower& (0+255),b
  9230  003930  6B81               	clrf	(?_islower+1)& (0+255),b
  9231                           
  9232                           ; BSR set to: 0
  9233  003932  0012               	return		;funcret
  9234  003934                     __end_of_islower:
  9235                           	opt callstack 0
  9236                           
  9237 ;; *************** function _isupper *****************
  9238 ;; Defined at:
  9239 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  c               2    0[BANK0 ] int 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  2    0[BANK0 ] int 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9253 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;Total ram usage:        6 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; Hardware stack levels required when called:    3
  9260 ;; This function calls:
  9261 ;;		Nothing
  9262 ;; This function is called by:
  9263 ;;		_xtoa
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text26
  9268  003934                     __ptext26:
  9269                           	opt callstack 0
  9270  003934                     _isupper:
  9271                           	opt callstack 22
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;incstack = 0
  9275  003934  0EBF               	movlw	191
  9276  003936  0100               	movlb	0	; () banked
  9277  003938  6F82               	movwf	??_isupper& (0+255),b
  9278  00393A  0EFF               	movlw	255
  9279  00393C  6F83               	movwf	(??_isupper+1)& (0+255),b
  9280  00393E  C080  F084         	movff	isupper@c,??_isupper+2
  9281  003942  C081  F085         	movff	isupper@c+1,??_isupper+3
  9282  003946  5182               	movf	??_isupper& (0+255),w,b
  9283  003948  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9284  00394A  5183               	movf	(??_isupper+1)& (0+255),w,b
  9285  00394C  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9286  00394E  5185               	movf	(??_isupper+3)& (0+255),w,b
  9287  003950  E106               	bnz	u6550
  9288  003952  0E1A               	movlw	26
  9289  003954  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9290  003956  B0D8               	btfsc	status,0,c
  9291  003958  D002               	goto	u6550
  9292  00395A  0E01               	movlw	1
  9293  00395C  D001               	goto	u6560
  9294  00395E                     u6550:
  9295  00395E  0E00               	movlw	0
  9296  003960                     u6560:
  9297  003960  6F80               	movwf	?_isupper& (0+255),b
  9298  003962  6B81               	clrf	(?_isupper+1)& (0+255),b
  9299                           
  9300                           ; BSR set to: 0
  9301  003964  0012               	return		;funcret
  9302  003966                     __end_of_isupper:
  9303                           	opt callstack 0
  9304                           
  9305 ;; *************** function _isalpha *****************
  9306 ;; Defined at:
  9307 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9308 ;; Parameters:    Size  Location     Type
  9309 ;;  c               2    0[BANK0 ] int 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;		None
  9312 ;; Return value:  Size  Location     Type
  9313 ;;                  2    0[BANK0 ] int 
  9314 ;; Registers used:
  9315 ;;		wreg, status,2, status,0
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9323 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9324 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;Total ram usage:        6 bytes
  9326 ;; Hardware stack levels used:    1
  9327 ;; Hardware stack levels required when called:    3
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		_xtoa
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text27
  9336  003866                     __ptext27:
  9337                           	opt callstack 0
  9338  003866                     _isalpha:
  9339                           	opt callstack 22
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;incstack = 0
  9343  003866  0E9F               	movlw	159
  9344  003868  0100               	movlb	0	; () banked
  9345  00386A  6F82               	movwf	??_isalpha& (0+255),b
  9346  00386C  0EFF               	movlw	255
  9347  00386E  6F83               	movwf	(??_isalpha+1)& (0+255),b
  9348  003870  0E20               	movlw	32
  9349  003872  1180               	iorwf	isalpha@c& (0+255),w,b
  9350  003874  6F84               	movwf	(??_isalpha+2)& (0+255),b
  9351  003876  0E00               	movlw	0
  9352  003878  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
  9353  00387A  6F85               	movwf	(??_isalpha+3)& (0+255),b
  9354  00387C  5182               	movf	??_isalpha& (0+255),w,b
  9355  00387E  2784               	addwf	(??_isalpha+2)& (0+255),f,b
  9356  003880  5183               	movf	(??_isalpha+1)& (0+255),w,b
  9357  003882  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
  9358  003884  5185               	movf	(??_isalpha+3)& (0+255),w,b
  9359  003886  E106               	bnz	u6570
  9360  003888  0E1A               	movlw	26
  9361  00388A  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
  9362  00388C  B0D8               	btfsc	status,0,c
  9363  00388E  D002               	goto	u6570
  9364  003890  0E01               	movlw	1
  9365  003892  D001               	goto	u6580
  9366  003894                     u6570:
  9367  003894  0E00               	movlw	0
  9368  003896                     u6580:
  9369  003896  6F80               	movwf	?_isalpha& (0+255),b
  9370  003898  6B81               	clrf	(?_isalpha+1)& (0+255),b
  9371                           
  9372                           ; BSR set to: 0
  9373  00389A  0012               	return		;funcret
  9374  00389C                     __end_of_isalpha:
  9375                           	opt callstack 0
  9376                           
  9377 ;; *************** function _dtoa *****************
  9378 ;; Defined at:
  9379 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9382 ;;		 -> NULL(0), 
  9383 ;;  d               8   33[BANK0 ] long long 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;  n               8   57[BANK0 ] long long 
  9386 ;;  i               2   65[BANK0 ] int 
  9387 ;;  s               2   55[BANK0 ] int 
  9388 ;;  w               2   53[BANK0 ] int 
  9389 ;;  p               2   51[BANK0 ] int 
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  2   31[BANK0 ] int 
  9392 ;; Registers used:
  9393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9399 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9400 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;Total ram usage:       36 bytes
  9404 ;; Hardware stack levels used:    1
  9405 ;; Hardware stack levels required when called:   10
  9406 ;; This function calls:
  9407 ;;		___aodiv
  9408 ;;		___aomod
  9409 ;;		_abs
  9410 ;;		_pad
  9411 ;; This function is called by:
  9412 ;;		_vfpfcnvrt
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           	psect	text28
  9417  001BE8                     __ptext28:
  9418                           	opt callstack 0
  9419  001BE8                     _dtoa:
  9420                           	opt callstack 16
  9421                           
  9422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;incstack = 0
  9426  001BE8  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  9427  001BEC  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  9428  001BF0  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  9429  001BF4  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  9430  001BF8  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  9431  001BFC  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  9432  001C00  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  9433  001C04  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  9434                           
  9435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9436  001C08  0100               	movlb	0	; () banked
  9437  001C0A  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  9438  001C0C  D002               	goto	u6790
  9439  001C0E  0E01               	movlw	1
  9440  001C10  D001               	goto	u6800
  9441  001C12                     u6790:
  9442  001C12  0E00               	movlw	0
  9443  001C14                     u6800:
  9444  001C14  6FB7               	movwf	dtoa@s& (0+255),b
  9445  001C16  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  9446                           
  9447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9448  001C18  51B7               	movf	dtoa@s& (0+255),w,b
  9449  001C1A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9450  001C1C  B4D8               	btfsc	status,2,c
  9451  001C1E  D010               	goto	l6436
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9455  001C20  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  9456  001C22  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  9457  001C24  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  9458  001C26  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  9459  001C28  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  9460  001C2A  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  9461  001C2C  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  9462  001C2E  6DB9               	negf	dtoa@n& (0+255),b
  9463  001C30  0E00               	movlw	0
  9464  001C32  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  9465  001C34  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  9466  001C36  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  9467  001C38  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  9468  001C3A  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  9469  001C3C  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  9470  001C3E  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  9471  001C40                     l6436:
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9475  001C40  AE4D               	btfss	_prec+1,7,c
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9479  001C42  924E               	bcf	_flags,1,c
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9483  001C44  BE4D               	btfsc	_prec+1,7,c
  9484  001C46  D005               	goto	u6830
  9485  001C48  504D               	movf	_prec+1,w,c
  9486  001C4A  E108               	bnz	l591
  9487  001C4C  044C               	decf	_prec,w,c
  9488  001C4E  B0D8               	btfsc	status,0,c
  9489  001C50  D005               	goto	l591
  9490  001C52                     u6830:
  9491                           
  9492                           ; BSR set to: 0
  9493  001C52  0E00               	movlw	0
  9494  001C54  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  9495  001C56  0E01               	movlw	1
  9496  001C58  6FB3               	movwf	dtoa@p& (0+255),b
  9497  001C5A  D004               	goto	l593
  9498  001C5C                     l591:
  9499                           
  9500                           ; BSR set to: 0
  9501  001C5C  C04C  F0B3         	movff	_prec,dtoa@p
  9502  001C60  C04D  F0B4         	movff	_prec+1,dtoa@p+1
  9503  001C64                     l593:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9507  001C64  C04A  F0B5         	movff	_width,dtoa@w
  9508  001C68  C04B  F0B6         	movff	_width+1,dtoa@w+1
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9512  001C6C  51B7               	movf	dtoa@s& (0+255),w,b
  9513  001C6E  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9514  001C70  A4D8               	btfss	status,2,c
  9515  001C72  D002               	goto	u6850
  9516                           
  9517                           ; BSR set to: 0
  9518  001C74  A44E               	btfss	_flags,2,c
  9519  001C76  D003               	goto	l6450
  9520  001C78                     u6850:
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9524  001C78  07B5               	decf	dtoa@w& (0+255),f,b
  9525  001C7A  A0D8               	btfss	status,0,c
  9526  001C7C  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9527  001C7E                     l6450:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9531  001C7E  0E00               	movlw	0
  9532  001C80  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  9533  001C82  0E1F               	movlw	31
  9534  001C84  6FC1               	movwf	dtoa@i& (0+255),b
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9538  001C86  0E00               	movlw	0
  9539  001C88  0101               	movlb	1	; () banked
  9540  001C8A  6F97               	movwf	(_dbuf+31)& (0+255),b
  9541                           
  9542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9543  001C8C  D07D               	goto	l6464
  9544  001C8E                     l6454:
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9548  001C8E  07C1               	decf	dtoa@i& (0+255),f,b
  9549  001C90  A0D8               	btfss	status,0,c
  9550  001C92  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9554  001C94  0E78               	movlw	low _dbuf
  9555  001C96  25C1               	addwf	dtoa@i& (0+255),w,b
  9556  001C98  6ED9               	movwf	fsr2l,c
  9557  001C9A  0E01               	movlw	high _dbuf
  9558  001C9C  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9559  001C9E  6EDA               	movwf	fsr2h,c
  9560  001CA0  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  9561  001CA4  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  9562  001CA8  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  9563  001CAC  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  9564  001CB0  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  9565  001CB4  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  9566  001CB8  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  9567  001CBC  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  9568  001CC0  0E0A               	movlw	10
  9569  001CC2  6F88               	movwf	___aomod@divisor& (0+255),b
  9570  001CC4  0E00               	movlw	0
  9571  001CC6  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  9572  001CC8  0E00               	movlw	0
  9573  001CCA  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  9574  001CCC  0E00               	movlw	0
  9575  001CCE  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  9576  001CD0  0E00               	movlw	0
  9577  001CD2  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  9578  001CD4  0E00               	movlw	0
  9579  001CD6  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  9580  001CD8  0E00               	movlw	0
  9581  001CDA  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  9582  001CDC  0E00               	movlw	0
  9583  001CDE  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  9584  001CE0  EC93  F015         	call	___aomod	;wreg free
  9585  001CE4  C080  F0A9         	movff	?___aomod,??_dtoa
  9586  001CE8  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  9587  001CEC  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  9588  001CF0  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  9589  001CF4  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  9590  001CF8  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  9591  001CFC  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  9592  001D00  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  9593  001D04  C0A9  F092         	movff	??_dtoa,abs@a
  9594  001D08  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  9595  001D0C  EC4E  F01C         	call	_abs	;wreg free
  9596  001D10  0100               	movlb	0	; () banked
  9597  001D12  5192               	movf	?_abs& (0+255),w,b
  9598  001D14  0F30               	addlw	48
  9599  001D16  6EDF               	movwf	indf2,c
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9603  001D18  07B3               	decf	dtoa@p& (0+255),f,b
  9604  001D1A  A0D8               	btfss	status,0,c
  9605  001D1C  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9609  001D1E  07B5               	decf	dtoa@w& (0+255),f,b
  9610  001D20  A0D8               	btfss	status,0,c
  9611  001D22  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9615  001D24  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  9616  001D28  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  9617  001D2C  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  9618  001D30  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  9619  001D34  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  9620  001D38  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  9621  001D3C  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  9622  001D40  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  9623  001D44  0E0A               	movlw	10
  9624  001D46  6F88               	movwf	___aodiv@divisor& (0+255),b
  9625  001D48  0E00               	movlw	0
  9626  001D4A  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  9627  001D4C  0E00               	movlw	0
  9628  001D4E  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  9629  001D50  0E00               	movlw	0
  9630  001D52  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  9631  001D54  0E00               	movlw	0
  9632  001D56  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  9633  001D58  0E00               	movlw	0
  9634  001D5A  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  9635  001D5C  0E00               	movlw	0
  9636  001D5E  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  9637  001D60  0E00               	movlw	0
  9638  001D62  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  9639  001D64  EC11  F013         	call	___aodiv	;wreg free
  9640  001D68  C080  F0B9         	movff	?___aodiv,dtoa@n
  9641  001D6C  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  9642  001D70  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  9643  001D74  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  9644  001D78  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  9645  001D7C  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  9646  001D80  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  9647  001D84  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  9648  001D88                     l6464:
  9649                           
  9650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9651  001D88  0100               	movlb	0	; () banked
  9652  001D8A  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  9653  001D8C  D01F               	goto	u6900
  9654  001D8E  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  9655  001D90  E103               	bnz	u6860
  9656  001D92  05C1               	decf	dtoa@i& (0+255),w,b
  9657  001D94  A0D8               	btfss	status,0,c
  9658  001D96  D01A               	goto	u6900
  9659  001D98                     u6860:
  9660                           
  9661                           ; BSR set to: 0
  9662  001D98  51B9               	movf	dtoa@n& (0+255),w,b
  9663  001D9A  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  9664  001D9C  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  9665  001D9E  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  9666  001DA0  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  9667  001DA2  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  9668  001DA4  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  9669  001DA6  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  9670  001DA8  A4D8               	btfss	status,2,c
  9671  001DAA  D771               	goto	l6454
  9672                           
  9673                           ; BSR set to: 0
  9674  001DAC  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  9675  001DAE  D005               	goto	u6880
  9676  001DB0  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  9677  001DB2  E102               	bnz	u6881
  9678  001DB4  05B3               	decf	dtoa@p& (0+255),w,b
  9679  001DB6  B0D8               	btfsc	status,0,c
  9680  001DB8                     u6881:
  9681  001DB8  D76A               	goto	l6454
  9682  001DBA                     u6880:
  9683                           
  9684                           ; BSR set to: 0
  9685  001DBA  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  9686  001DBC  D007               	goto	u6900
  9687  001DBE  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  9688  001DC0  E103               	bnz	u6890
  9689  001DC2  05B5               	decf	dtoa@w& (0+255),w,b
  9690  001DC4  A0D8               	btfss	status,0,c
  9691  001DC6  D002               	goto	u6900
  9692  001DC8                     u6890:
  9693                           
  9694                           ; BSR set to: 0
  9695  001DC8  B24E               	btfsc	_flags,1,c
  9696  001DCA  D761               	goto	l6454
  9697  001DCC                     u6900:
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9701  001DCC  51B7               	movf	dtoa@s& (0+255),w,b
  9702  001DCE  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9703  001DD0  A4D8               	btfss	status,2,c
  9704  001DD2  D002               	goto	u6920
  9705                           
  9706                           ; BSR set to: 0
  9707  001DD4  A44E               	btfss	_flags,2,c
  9708  001DD6  D017               	goto	l6488
  9709  001DD8                     u6920:
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9713  001DD8  07C1               	decf	dtoa@i& (0+255),f,b
  9714  001DDA  A0D8               	btfss	status,0,c
  9715  001DDC  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9719  001DDE  51B7               	movf	dtoa@s& (0+255),w,b
  9720  001DE0  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9721  001DE2  A4D8               	btfss	status,2,c
  9722  001DE4  D004               	goto	l6484
  9723                           
  9724                           ; BSR set to: 0
  9725  001DE6  0E00               	movlw	0
  9726  001DE8  6FB2               	movwf	(_dtoa$1099+1)& (0+255),b
  9727  001DEA  0E2B               	movlw	43
  9728  001DEC  D003               	goto	L5
  9729  001DEE                     l6484:
  9730                           
  9731                           ; BSR set to: 0
  9732  001DEE  0E00               	movlw	0
  9733  001DF0  6FB2               	movwf	(_dtoa$1099+1)& (0+255),b
  9734  001DF2  0E2D               	movlw	45
  9735  001DF4                     L5:
  9736  001DF4  6FB1               	movwf	_dtoa$1099& (0+255),b
  9737                           
  9738                           ; BSR set to: 0
  9739  001DF6  0E78               	movlw	low _dbuf
  9740  001DF8  25C1               	addwf	dtoa@i& (0+255),w,b
  9741  001DFA  6ED9               	movwf	fsr2l,c
  9742  001DFC  0E01               	movlw	high _dbuf
  9743  001DFE  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9744  001E00  6EDA               	movwf	fsr2h,c
  9745  001E02  C0B1  FFDF         	movff	_dtoa$1099,indf2
  9746  001E06                     l6488:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9750  001E06  C09F  F094         	movff	dtoa@fp,pad@fp
  9751  001E0A  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  9752  001E0E  0E78               	movlw	low _dbuf
  9753  001E10  25C1               	addwf	dtoa@i& (0+255),w,b
  9754  001E12  6F96               	movwf	pad@buf& (0+255),b
  9755  001E14  0E01               	movlw	high _dbuf
  9756  001E16  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9757  001E18  6F97               	movwf	(pad@buf+1)& (0+255),b
  9758  001E1A  C0B5  F098         	movff	dtoa@w,pad@p
  9759  001E1E  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  9760  001E22  ECB2  F018         	call	_pad	;wreg free
  9761  001E26  C094  F09F         	movff	?_pad,?_dtoa
  9762  001E2A  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  9763  001E2E  0012               	return		;funcret
  9764  001E30                     __end_of_dtoa:
  9765                           	opt callstack 0
  9766                           
  9767 ;; *************** function _pad *****************
  9768 ;; Defined at:
  9769 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  9772 ;;		 -> NULL(0), 
  9773 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  9774 ;;		 -> dbuf(32), 
  9775 ;;  p               2   24[BANK0 ] int 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;  w               2   29[BANK0 ] int 
  9778 ;;  i               2   27[BANK0 ] int 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  2   20[BANK0 ] int 
  9781 ;; Registers used:
  9782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9788 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9789 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9792 ;;Total ram usage:       11 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:    9
  9795 ;; This function calls:
  9796 ;;		_fputc
  9797 ;;		_fputs
  9798 ;;		_strlen
  9799 ;; This function is called by:
  9800 ;;		_dtoa
  9801 ;;		_xtoa
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text29
  9806  003164                     __ptext29:
  9807                           	opt callstack 0
  9808  003164                     _pad:
  9809                           	opt callstack 16
  9810                           
  9811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9812                           
  9813                           ;incstack = 0
  9814  003164  A04E               	btfss	_flags,0,c
  9815  003166  D00A               	goto	l6292
  9816                           
  9817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9818  003168  C096  F08D         	movff	pad@buf,fputs@s
  9819  00316C  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9820  003170  C094  F08F         	movff	pad@fp,fputs@fp
  9821  003174  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9822  003178  EC15  F01C         	call	_fputs	;wreg free
  9823  00317C                     l6292:
  9824                           
  9825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9826  00317C  0100               	movlb	0	; () banked
  9827  00317E  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  9828  003180  D005               	goto	l6296
  9829                           
  9830                           ; BSR set to: 0
  9831  003182  C098  F09D         	movff	pad@p,pad@w
  9832  003186  C099  F09E         	movff	pad@p+1,pad@w+1
  9833  00318A  D004               	goto	l580
  9834  00318C                     l6296:
  9835                           
  9836                           ; BSR set to: 0
  9837  00318C  0E00               	movlw	0
  9838  00318E  6F9E               	movwf	(pad@w+1)& (0+255),b
  9839  003190  0E00               	movlw	0
  9840  003192  6F9D               	movwf	pad@w& (0+255),b
  9841  003194                     l580:
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9845  003194  0E00               	movlw	0
  9846  003196  6F9C               	movwf	(pad@i+1)& (0+255),b
  9847  003198  0E00               	movlw	0
  9848  00319A  6F9B               	movwf	pad@i& (0+255),b
  9849                           
  9850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9851  00319C  D00D               	goto	l6302
  9852  00319E                     l6298:
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9856  00319E  0E00               	movlw	0
  9857  0031A0  6F85               	movwf	(fputc@c+1)& (0+255),b
  9858  0031A2  0E20               	movlw	32
  9859  0031A4  6F84               	movwf	fputc@c& (0+255),b
  9860  0031A6  C094  F086         	movff	pad@fp,fputc@fp
  9861  0031AA  C095  F087         	movff	pad@fp+1,fputc@fp+1
  9862  0031AE  EC43  F01A         	call	_fputc	;wreg free
  9863                           
  9864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9865  0031B2  0100               	movlb	0	; () banked
  9866  0031B4  4B9B               	infsnz	pad@i& (0+255),f,b
  9867  0031B6  2B9C               	incf	(pad@i+1)& (0+255),f,b
  9868  0031B8                     l6302:
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9872  0031B8  519D               	movf	pad@w& (0+255),w,b
  9873  0031BA  5D9B               	subwf	pad@i& (0+255),w,b
  9874  0031BC  519C               	movf	(pad@i+1)& (0+255),w,b
  9875  0031BE  0A80               	xorlw	128
  9876  0031C0  6F9A               	movwf	??_pad& (0+255),b
  9877  0031C2  519E               	movf	(pad@w+1)& (0+255),w,b
  9878  0031C4  0A80               	xorlw	128
  9879  0031C6  599A               	subwfb	??_pad& (0+255),w,b
  9880  0031C8  A0D8               	btfss	status,0,c
  9881  0031CA  D7E9               	goto	l6298
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9885  0031CC  B04E               	btfsc	_flags,0,c
  9886  0031CE  D00A               	goto	l6306
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9890  0031D0  C096  F08D         	movff	pad@buf,fputs@s
  9891  0031D4  C097  F08E         	movff	pad@buf+1,fputs@s+1
  9892  0031D8  C094  F08F         	movff	pad@fp,fputs@fp
  9893  0031DC  C095  F090         	movff	pad@fp+1,fputs@fp+1
  9894  0031E0  EC15  F01C         	call	_fputs	;wreg free
  9895  0031E4                     l6306:
  9896                           
  9897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9898  0031E4  C096  F080         	movff	pad@buf,strlen@s
  9899  0031E8  C097  F081         	movff	pad@buf+1,strlen@s+1
  9900  0031EC  ECCC  F01C         	call	_strlen	;wreg free
  9901  0031F0  0100               	movlb	0	; () banked
  9902  0031F2  519D               	movf	pad@w& (0+255),w,b
  9903  0031F4  2580               	addwf	?_strlen& (0+255),w,b
  9904  0031F6  6F94               	movwf	?_pad& (0+255),b
  9905  0031F8  519E               	movf	(pad@w+1)& (0+255),w,b
  9906  0031FA  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  9907  0031FC  6F95               	movwf	(?_pad+1)& (0+255),b
  9908                           
  9909                           ; BSR set to: 0
  9910  0031FE  0012               	return		;funcret
  9911  003200                     __end_of_pad:
  9912                           	opt callstack 0
  9913                           
  9914 ;; *************** function _strlen *****************
  9915 ;; Defined at:
  9916 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  9919 ;;		 -> dbuf(32), 
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  9922 ;;		 -> dbuf(32), 
  9923 ;; Return value:  Size  Location     Type
  9924 ;;                  2    0[BANK0 ] unsigned int 
  9925 ;; Registers used:
  9926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9936 ;;Total ram usage:        4 bytes
  9937 ;; Hardware stack levels used:    1
  9938 ;; Hardware stack levels required when called:    3
  9939 ;; This function calls:
  9940 ;;		Nothing
  9941 ;; This function is called by:
  9942 ;;		_pad
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text30
  9947  003998                     __ptext30:
  9948                           	opt callstack 0
  9949  003998                     _strlen:
  9950                           	opt callstack 21
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;incstack = 0
  9954  003998  C080  F082         	movff	strlen@s,strlen@a
  9955  00399C  C081  F083         	movff	strlen@s+1,strlen@a+1
  9956  0039A0  D003               	goto	l6274
  9957  0039A2                     l6272:
  9958  0039A2  0100               	movlb	0	; () banked
  9959  0039A4  4B80               	infsnz	strlen@s& (0+255),f,b
  9960  0039A6  2B81               	incf	(strlen@s+1)& (0+255),f,b
  9961  0039A8                     l6274:
  9962  0039A8  C080  FFD9         	movff	strlen@s,fsr2l
  9963  0039AC  C081  FFDA         	movff	strlen@s+1,fsr2h
  9964  0039B0  50DF               	movf	indf2,w,c
  9965  0039B2  A4D8               	btfss	status,2,c
  9966  0039B4  D7F6               	goto	l6272
  9967  0039B6  0100               	movlb	0	; () banked
  9968  0039B8  5182               	movf	strlen@a& (0+255),w,b
  9969  0039BA  5D80               	subwf	strlen@s& (0+255),w,b
  9970  0039BC  6F80               	movwf	?_strlen& (0+255),b
  9971  0039BE  5183               	movf	(strlen@a+1)& (0+255),w,b
  9972  0039C0  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  9973  0039C2  6F81               	movwf	(?_strlen+1)& (0+255),b
  9974                           
  9975                           ; BSR set to: 0
  9976  0039C4  0012               	return		;funcret
  9977  0039C6                     __end_of_strlen:
  9978                           	opt callstack 0
  9979                           
  9980 ;; *************** function _fputs *****************
  9981 ;; Defined at:
  9982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  9985 ;;		 -> dbuf(32), 
  9986 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  9987 ;;		 -> NULL(0), 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  i               2   18[BANK0 ] int 
  9990 ;;  c               1   17[BANK0 ] unsigned char 
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  2   13[BANK0 ] int 
  9993 ;; Registers used:
  9994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10001 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10003 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10004 ;;Total ram usage:        7 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:    8
 10007 ;; This function calls:
 10008 ;;		_fputc
 10009 ;; This function is called by:
 10010 ;;		_pad
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           	psect	text31
 10015  00382A                     __ptext31:
 10016                           	opt callstack 0
 10017  00382A                     _fputs:
 10018                           	opt callstack 16
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;incstack = 0
 10022  00382A  0E00               	movlw	0
 10023  00382C  0100               	movlb	0	; () banked
 10024  00382E  6F93               	movwf	(fputs@i+1)& (0+255),b
 10025  003830  0E00               	movlw	0
 10026  003832  6F92               	movwf	fputs@i& (0+255),b
 10027  003834  D00C               	goto	l6268
 10028  003836                     l6264:
 10029                           
 10030                           ; BSR set to: 0
 10031  003836  C091  F084         	movff	fputs@c,fputc@c
 10032  00383A  6B85               	clrf	(fputc@c+1)& (0+255),b
 10033  00383C  C08F  F086         	movff	fputs@fp,fputc@fp
 10034  003840  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10035  003844  EC43  F01A         	call	_fputc	;wreg free
 10036  003848  0100               	movlb	0	; () banked
 10037  00384A  4B92               	infsnz	fputs@i& (0+255),f,b
 10038  00384C  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10039  00384E                     l6268:
 10040                           
 10041                           ; BSR set to: 0
 10042  00384E  5192               	movf	fputs@i& (0+255),w,b
 10043  003850  258D               	addwf	fputs@s& (0+255),w,b
 10044  003852  6ED9               	movwf	fsr2l,c
 10045  003854  5193               	movf	(fputs@i+1)& (0+255),w,b
 10046  003856  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10047  003858  6EDA               	movwf	fsr2h,c
 10048  00385A  50DF               	movf	indf2,w,c
 10049  00385C  6F91               	movwf	fputs@c& (0+255),b
 10050  00385E  5191               	movf	fputs@c& (0+255),w,b
 10051  003860  B4D8               	btfsc	status,2,c
 10052  003862  0012               	return	
 10053  003864  D7E8               	goto	l6264
 10054  003866                     __end_of_fputs:
 10055                           	opt callstack 0
 10056                           
 10057 ;; *************** function _fputc *****************
 10058 ;; Defined at:
 10059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10060 ;; Parameters:    Size  Location     Type
 10061 ;;  c               2    4[BANK0 ] int 
 10062 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10063 ;;		 -> NULL(0), 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;		None
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  2    4[BANK0 ] int 
 10068 ;; Registers used:
 10069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10078 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10079 ;;Total ram usage:        9 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; Hardware stack levels required when called:    7
 10082 ;; This function calls:
 10083 ;;		_putch
 10084 ;; This function is called by:
 10085 ;;		_pad
 10086 ;;		_vfpfcnvrt
 10087 ;;		_fputs
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           	psect	text32
 10092  003486                     __ptext32:
 10093                           	opt callstack 0
 10094  003486                     _fputc:
 10095                           	opt callstack 16
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;incstack = 0
 10099  003486  0100               	movlb	0	; () banked
 10100  003488  5186               	movf	fputc@fp& (0+255),w,b
 10101  00348A  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10102  00348C  B4D8               	btfsc	status,2,c
 10103  00348E  D004               	goto	u6430
 10104                           
 10105                           ; BSR set to: 0
 10106  003490  5186               	movf	fputc@fp& (0+255),w,b
 10107  003492  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10108  003494  A4D8               	btfss	status,2,c
 10109  003496  D004               	goto	l6254
 10110  003498                     u6430:
 10111                           
 10112                           ; BSR set to: 0
 10113  003498  5184               	movf	fputc@c& (0+255),w,b
 10114  00349A  EC83  F01D         	call	_putch
 10115  00349E  0012               	return	
 10116  0034A0                     l6254:
 10117                           
 10118                           ; BSR set to: 0
 10119  0034A0  EE20 F004          	lfsr	2,4
 10120  0034A4  5186               	movf	fputc@fp& (0+255),w,b
 10121  0034A6  26D9               	addwf	fsr2l,f,c
 10122  0034A8  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10123  0034AA  22DA               	addwfc	fsr2h,f,c
 10124  0034AC  50DE               	movf	postinc2,w,c
 10125  0034AE  10DE               	iorwf	postinc2,w,c
 10126  0034B0  B4D8               	btfsc	status,2,c
 10127  0034B2  D016               	goto	u6450
 10128                           
 10129                           ; BSR set to: 0
 10130  0034B4  EE20 F004          	lfsr	2,4
 10131  0034B8  5186               	movf	fputc@fp& (0+255),w,b
 10132  0034BA  26D9               	addwf	fsr2l,f,c
 10133  0034BC  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10134  0034BE  22DA               	addwfc	fsr2h,f,c
 10135  0034C0  EE10 F002          	lfsr	1,2
 10136  0034C4  5186               	movf	fputc@fp& (0+255),w,b
 10137  0034C6  26E1               	addwf	fsr1l,f,c
 10138  0034C8  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10139  0034CA  22E2               	addwfc	fsr1h,f,c
 10140  0034CC  50DE               	movf	postinc2,w,c
 10141  0034CE  5CE6               	subwf	postinc1,w,c
 10142  0034D0  50E6               	movf	postinc1,w,c
 10143  0034D2  0A80               	xorlw	128
 10144  0034D4  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10145  0034D6  50DE               	movf	postinc2,w,c
 10146  0034D8  0A80               	xorlw	128
 10147  0034DA  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10148  0034DC  B0D8               	btfsc	status,0,c
 10149  0034DE  0012               	return	
 10150  0034E0                     u6450:
 10151                           
 10152                           ; BSR set to: 0
 10153  0034E0  EE20 F002          	lfsr	2,2
 10154  0034E4  5186               	movf	fputc@fp& (0+255),w,b
 10155  0034E6  26D9               	addwf	fsr2l,f,c
 10156  0034E8  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10157  0034EA  22DA               	addwfc	fsr2h,f,c
 10158  0034EC  2ADE               	incf	postinc2,f,c
 10159  0034EE  0E00               	movlw	0
 10160  0034F0  22DD               	addwfc	postdec2,f,c
 10161  0034F2  0012               	return		;funcret
 10162  0034F4                     __end_of_fputc:
 10163                           	opt callstack 0
 10164                           
 10165 ;; *************** function _putch *****************
 10166 ;; Defined at:
 10167 ;;		line 102 in file "lcd.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  data            1    wreg     unsigned char 
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;  data            1    3[BANK0 ] unsigned char 
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      void 
 10174 ;; Registers used:
 10175 ;;		wreg, status,2, status,0, cstack
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;Total ram usage:        1 bytes
 10186 ;; Hardware stack levels used:    1
 10187 ;; Hardware stack levels required when called:    6
 10188 ;; This function calls:
 10189 ;;		_send_byte
 10190 ;; This function is called by:
 10191 ;;		_fputc
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text33
 10196  003B06                     __ptext33:
 10197                           	opt callstack 0
 10198  003B06                     _putch:
 10199                           	opt callstack 16
 10200                           
 10201                           ;incstack = 0
 10202                           ;putch@data stored from wreg
 10203  003B06  0100               	movlb	0	; () banked
 10204  003B08  6F83               	movwf	putch@data& (0+255),b
 10205                           
 10206                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10207  003B0A  848C               	bsf	3980,2,c	;volatile
 10208                           
 10209                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10210  003B0C  0100               	movlb	0	; () banked
 10211  003B0E  5183               	movf	putch@data& (0+255),w,b
 10212  003B10  EC6D  F01D         	call	_send_byte
 10213  003B14  0012               	return		;funcret
 10214  003B16                     __end_of_putch:
 10215                           	opt callstack 0
 10216                           
 10217 ;; *************** function _abs *****************
 10218 ;; Defined at:
 10219 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;  a               2   18[BANK0 ] int 
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;		None
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  2   18[BANK0 ] int 
 10226 ;; Registers used:
 10227 ;;		wreg, status,2, status,0
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;Total ram usage:        4 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:    3
 10240 ;; This function calls:
 10241 ;;		Nothing
 10242 ;; This function is called by:
 10243 ;;		_ultrasonic_main
 10244 ;;		_dtoa
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text34
 10249  00389C                     __ptext34:
 10250                           	opt callstack 0
 10251  00389C                     _abs:
 10252                           	opt callstack 22
 10253                           
 10254                           ;incstack = 0
 10255  00389C  0100               	movlb	0	; () banked
 10256  00389E  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10257  0038A0  D005               	goto	u6500
 10258  0038A2  5193               	movf	(abs@a+1)& (0+255),w,b
 10259  0038A4  E110               	bnz	l1358
 10260  0038A6  0592               	decf	abs@a& (0+255),w,b
 10261  0038A8  B0D8               	btfsc	status,0,c
 10262  0038AA  D00D               	goto	l1358
 10263  0038AC                     u6500:
 10264                           
 10265                           ; BSR set to: 0
 10266  0038AC  C092  F094         	movff	abs@a,??_abs
 10267  0038B0  C093  F095         	movff	abs@a+1,??_abs+1
 10268  0038B4  1F94               	comf	??_abs& (0+255),f,b
 10269  0038B6  1F95               	comf	(??_abs+1)& (0+255),f,b
 10270  0038B8  4B94               	infsnz	??_abs& (0+255),f,b
 10271  0038BA  2B95               	incf	(??_abs+1)& (0+255),f,b
 10272  0038BC  C094  F092         	movff	??_abs,?_abs
 10273  0038C0  C095  F093         	movff	??_abs+1,?_abs+1
 10274  0038C4  0012               	return	
 10275  0038C6                     l1358:
 10276                           
 10277                           ; BSR set to: 0
 10278  0038C6  C092  F092         	movff	abs@a,?_abs
 10279  0038CA  C093  F093         	movff	abs@a+1,?_abs+1
 10280                           
 10281                           ; BSR set to: 0
 10282  0038CE  0012               	return		;funcret
 10283  0038D0                     __end_of_abs:
 10284                           	opt callstack 0
 10285                           
 10286 ;; *************** function ___aomod *****************
 10287 ;; Defined at:
 10288 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  dividend        8    0[BANK0 ] long long 
 10291 ;;  divisor         8    8[BANK0 ] long long 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;  sign            1   17[BANK0 ] unsigned char 
 10294 ;;  counter         1   16[BANK0 ] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  8    0[BANK0 ] long long 
 10297 ;; Registers used:
 10298 ;;		wreg, status,2, status,0
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10304 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10307 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;Total ram usage:       18 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    3
 10311 ;; This function calls:
 10312 ;;		Nothing
 10313 ;; This function is called by:
 10314 ;;		_dtoa
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           	psect	text35
 10319  002B26                     __ptext35:
 10320                           	opt callstack 0
 10321  002B26                     ___aomod:
 10322                           	opt callstack 22
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;incstack = 0
 10326  002B26  0E00               	movlw	0
 10327  002B28  0100               	movlb	0	; () banked
 10328  002B2A  6F91               	movwf	___aomod@sign& (0+255),b
 10329                           
 10330                           ; BSR set to: 0
 10331  002B2C  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10332  002B2E  D012               	goto	l6390
 10333                           
 10334                           ; BSR set to: 0
 10335  002B30  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10336  002B32  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10337  002B34  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10338  002B36  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10339  002B38  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10340  002B3A  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10341  002B3C  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10342  002B3E  6D80               	negf	___aomod@dividend& (0+255),b
 10343  002B40  0E00               	movlw	0
 10344  002B42  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10345  002B44  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10346  002B46  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10347  002B48  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10348  002B4A  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10349  002B4C  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10350  002B4E  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10351                           
 10352                           ; BSR set to: 0
 10353  002B50  0E01               	movlw	1
 10354  002B52  6F91               	movwf	___aomod@sign& (0+255),b
 10355  002B54                     l6390:
 10356                           
 10357                           ; BSR set to: 0
 10358  002B54  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10359  002B56  D010               	goto	l6394
 10360                           
 10361                           ; BSR set to: 0
 10362  002B58  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 10363  002B5A  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 10364  002B5C  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 10365  002B5E  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 10366  002B60  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 10367  002B62  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 10368  002B64  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 10369  002B66  6D88               	negf	___aomod@divisor& (0+255),b
 10370  002B68  0E00               	movlw	0
 10371  002B6A  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10372  002B6C  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10373  002B6E  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10374  002B70  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10375  002B72  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10376  002B74  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10377  002B76  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10378  002B78                     l6394:
 10379                           
 10380                           ; BSR set to: 0
 10381  002B78  5188               	movf	___aomod@divisor& (0+255),w,b
 10382  002B7A  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10383  002B7C  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10384  002B7E  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10385  002B80  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10386  002B82  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10387  002B84  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10388  002B86  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10389  002B88  B4D8               	btfsc	status,2,c
 10390  002B8A  D03C               	goto	l6410
 10391                           
 10392                           ; BSR set to: 0
 10393  002B8C  0E01               	movlw	1
 10394  002B8E  6F90               	movwf	___aomod@counter& (0+255),b
 10395  002B90  D00A               	goto	l6400
 10396  002B92                     l6398:
 10397                           
 10398                           ; BSR set to: 0
 10399  002B92  90D8               	bcf	status,0,c
 10400  002B94  3788               	rlcf	___aomod@divisor& (0+255),f,b
 10401  002B96  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10402  002B98  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10403  002B9A  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10404  002B9C  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10405  002B9E  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10406  002BA0  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10407  002BA2  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10408  002BA4  2B90               	incf	___aomod@counter& (0+255),f,b
 10409  002BA6                     l6400:
 10410                           
 10411                           ; BSR set to: 0
 10412  002BA6  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10413  002BA8  D7F4               	goto	l6398
 10414  002BAA                     u6740:
 10415                           
 10416                           ; BSR set to: 0
 10417  002BAA  5188               	movf	___aomod@divisor& (0+255),w,b
 10418  002BAC  5D80               	subwf	___aomod@dividend& (0+255),w,b
 10419  002BAE  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10420  002BB0  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10421  002BB2  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10422  002BB4  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10423  002BB6  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10424  002BB8  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10425  002BBA  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10426  002BBC  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10427  002BBE  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10428  002BC0  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10429  002BC2  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10430  002BC4  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10431  002BC6  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10432  002BC8  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10433  002BCA  A0D8               	btfss	status,0,c
 10434  002BCC  D010               	goto	l6406
 10435                           
 10436                           ; BSR set to: 0
 10437  002BCE  5188               	movf	___aomod@divisor& (0+255),w,b
 10438  002BD0  5F80               	subwf	___aomod@dividend& (0+255),f,b
 10439  002BD2  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10440  002BD4  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10441  002BD6  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10442  002BD8  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10443  002BDA  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10444  002BDC  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10445  002BDE  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10446  002BE0  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10447  002BE2  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10448  002BE4  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10449  002BE6  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10450  002BE8  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10451  002BEA  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10452  002BEC  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10453  002BEE                     l6406:
 10454                           
 10455                           ; BSR set to: 0
 10456  002BEE  90D8               	bcf	status,0,c
 10457  002BF0  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10458  002BF2  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10459  002BF4  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10460  002BF6  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10461  002BF8  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10462  002BFA  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10463  002BFC  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10464  002BFE  3388               	rrcf	___aomod@divisor& (0+255),f,b
 10465                           
 10466                           ; BSR set to: 0
 10467  002C00  2F90               	decfsz	___aomod@counter& (0+255),f,b
 10468  002C02  D7D3               	goto	u6740
 10469  002C04                     l6410:
 10470                           
 10471                           ; BSR set to: 0
 10472  002C04  5191               	movf	___aomod@sign& (0+255),w,b
 10473  002C06  B4D8               	btfsc	status,2,c
 10474  002C08  D010               	goto	l6414
 10475                           
 10476                           ; BSR set to: 0
 10477  002C0A  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10478  002C0C  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10479  002C0E  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10480  002C10  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10481  002C12  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10482  002C14  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10483  002C16  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10484  002C18  6D80               	negf	___aomod@dividend& (0+255),b
 10485  002C1A  0E00               	movlw	0
 10486  002C1C  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10487  002C1E  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10488  002C20  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10489  002C22  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10490  002C24  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10491  002C26  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10492  002C28  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10493  002C2A                     l6414:
 10494                           
 10495                           ; BSR set to: 0
 10496  002C2A  C080  F080         	movff	___aomod@dividend,?___aomod
 10497  002C2E  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 10498  002C32  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 10499  002C36  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 10500  002C3A  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 10501  002C3E  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 10502  002C42  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 10503  002C46  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 10504                           
 10505                           ; BSR set to: 0
 10506  002C4A  0012               	return		;funcret
 10507  002C4C                     __end_of___aomod:
 10508                           	opt callstack 0
 10509                           
 10510 ;; *************** function ___aodiv *****************
 10511 ;; Defined at:
 10512 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;  dividend        8    0[BANK0 ] long long 
 10515 ;;  divisor         8    8[BANK0 ] long long 
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;  quotient        8   18[BANK0 ] long long 
 10518 ;;  sign            1   17[BANK0 ] unsigned char 
 10519 ;;  counter         1   16[BANK0 ] unsigned char 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  8    0[BANK0 ] long long 
 10522 ;; Registers used:
 10523 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10529 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;Total ram usage:       26 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:    3
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_dtoa
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text36
 10544  002622                     __ptext36:
 10545                           	opt callstack 0
 10546  002622                     ___aodiv:
 10547                           	opt callstack 22
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;incstack = 0
 10551  002622  0E00               	movlw	0
 10552  002624  0100               	movlb	0	; () banked
 10553  002626  6F91               	movwf	___aodiv@sign& (0+255),b
 10554                           
 10555                           ; BSR set to: 0
 10556  002628  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10557  00262A  D012               	goto	l6346
 10558                           
 10559                           ; BSR set to: 0
 10560  00262C  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10561  00262E  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10562  002630  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10563  002632  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10564  002634  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10565  002636  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10566  002638  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10567  00263A  6D88               	negf	___aodiv@divisor& (0+255),b
 10568  00263C  0E00               	movlw	0
 10569  00263E  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10570  002640  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10571  002642  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10572  002644  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10573  002646  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10574  002648  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10575  00264A  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10576                           
 10577                           ; BSR set to: 0
 10578  00264C  0E01               	movlw	1
 10579  00264E  6F91               	movwf	___aodiv@sign& (0+255),b
 10580  002650                     l6346:
 10581                           
 10582                           ; BSR set to: 0
 10583  002650  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 10584  002652  D012               	goto	l6352
 10585                           
 10586                           ; BSR set to: 0
 10587  002654  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10588  002656  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10589  002658  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10590  00265A  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10591  00265C  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10592  00265E  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10593  002660  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10594  002662  6D80               	negf	___aodiv@dividend& (0+255),b
 10595  002664  0E00               	movlw	0
 10596  002666  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10597  002668  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10598  00266A  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10599  00266C  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10600  00266E  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10601  002670  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10602  002672  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10603                           
 10604                           ; BSR set to: 0
 10605  002674  0E01               	movlw	1
 10606  002676  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 10607  002678                     l6352:
 10608                           
 10609                           ; BSR set to: 0
 10610  002678  EE20  F092         	lfsr	2,___aodiv@quotient
 10611  00267C  0E07               	movlw	7
 10612  00267E                     u6661:
 10613  00267E  6ADE               	clrf	postinc2,c
 10614  002680  06E8               	decf	wreg,f,c
 10615  002682  E2FD               	bc	u6661
 10616                           
 10617                           ; BSR set to: 0
 10618  002684  5188               	movf	___aodiv@divisor& (0+255),w,b
 10619  002686  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10620  002688  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10621  00268A  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10622  00268C  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10623  00268E  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10624  002690  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10625  002692  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10626  002694  B4D8               	btfsc	status,2,c
 10627  002696  D046               	goto	l6374
 10628                           
 10629                           ; BSR set to: 0
 10630  002698  0E01               	movlw	1
 10631  00269A  6F90               	movwf	___aodiv@counter& (0+255),b
 10632  00269C  D00A               	goto	l6360
 10633  00269E                     l6358:
 10634                           
 10635                           ; BSR set to: 0
 10636  00269E  90D8               	bcf	status,0,c
 10637  0026A0  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 10638  0026A2  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10639  0026A4  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10640  0026A6  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10641  0026A8  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10642  0026AA  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10643  0026AC  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10644  0026AE  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10645  0026B0  2B90               	incf	___aodiv@counter& (0+255),f,b
 10646  0026B2                     l6360:
 10647                           
 10648                           ; BSR set to: 0
 10649  0026B2  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10650  0026B4  D7F4               	goto	l6358
 10651  0026B6                     u6680:
 10652                           
 10653                           ; BSR set to: 0
 10654  0026B6  90D8               	bcf	status,0,c
 10655  0026B8  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 10656  0026BA  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10657  0026BC  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10658  0026BE  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10659  0026C0  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10660  0026C2  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10661  0026C4  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10662  0026C6  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10663                           
 10664                           ; BSR set to: 0
 10665  0026C8  5188               	movf	___aodiv@divisor& (0+255),w,b
 10666  0026CA  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 10667  0026CC  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10668  0026CE  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10669  0026D0  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10670  0026D2  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10671  0026D4  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10672  0026D6  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10673  0026D8  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10674  0026DA  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10675  0026DC  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10676  0026DE  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10677  0026E0  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10678  0026E2  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10679  0026E4  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10680  0026E6  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10681  0026E8  A0D8               	btfss	status,0,c
 10682  0026EA  D011               	goto	l6370
 10683                           
 10684                           ; BSR set to: 0
 10685  0026EC  5188               	movf	___aodiv@divisor& (0+255),w,b
 10686  0026EE  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 10687  0026F0  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10688  0026F2  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10689  0026F4  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10690  0026F6  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10691  0026F8  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10692  0026FA  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10693  0026FC  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10694  0026FE  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10695  002700  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10696  002702  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10697  002704  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10698  002706  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10699  002708  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10700  00270A  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10701                           
 10702                           ; BSR set to: 0
 10703  00270C  8192               	bsf	___aodiv@quotient& (0+255),0,b
 10704  00270E                     l6370:
 10705                           
 10706                           ; BSR set to: 0
 10707  00270E  90D8               	bcf	status,0,c
 10708  002710  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10709  002712  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10710  002714  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10711  002716  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10712  002718  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10713  00271A  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10714  00271C  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10715  00271E  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 10716                           
 10717                           ; BSR set to: 0
 10718  002720  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 10719  002722  D7C9               	goto	u6680
 10720  002724                     l6374:
 10721                           
 10722                           ; BSR set to: 0
 10723  002724  5191               	movf	___aodiv@sign& (0+255),w,b
 10724  002726  B4D8               	btfsc	status,2,c
 10725  002728  D010               	goto	l6378
 10726                           
 10727                           ; BSR set to: 0
 10728  00272A  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10729  00272C  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10730  00272E  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10731  002730  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10732  002732  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10733  002734  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10734  002736  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10735  002738  6D92               	negf	___aodiv@quotient& (0+255),b
 10736  00273A  0E00               	movlw	0
 10737  00273C  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10738  00273E  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10739  002740  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10740  002742  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10741  002744  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10742  002746  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10743  002748  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10744  00274A                     l6378:
 10745                           
 10746                           ; BSR set to: 0
 10747  00274A  C092  F080         	movff	___aodiv@quotient,?___aodiv
 10748  00274E  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 10749  002752  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 10750  002756  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 10751  00275A  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 10752  00275E  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 10753  002762  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 10754  002766  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 10755                           
 10756                           ; BSR set to: 0
 10757  00276A  0012               	return		;funcret
 10758  00276C                     __end_of___aodiv:
 10759                           	opt callstack 0
 10760                           
 10761 ;; *************** function _atoi *****************
 10762 ;; Defined at:
 10763 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 10766 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
 10767 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
 10768 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
 10769 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
 10770 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
 10771 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
 10772 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
 10773 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
 10774 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
 10775 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
 10776 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
 10777 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
 10778 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
 10779 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
 10780 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
 10781 ;;		 -> STR_1(10), 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;  n               2   20[BANK0 ] int 
 10784 ;;  neg             2   13[BANK0 ] int 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  2    7[BANK0 ] int 
 10787 ;; Registers used:
 10788 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10795 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10796 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10797 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10798 ;;Total ram usage:       15 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    4
 10801 ;; This function calls:
 10802 ;;		___wmul
 10803 ;;		_isdigit
 10804 ;;		_isspace
 10805 ;; This function is called by:
 10806 ;;		_vfpfcnvrt
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text37
 10811  00276C                     __ptext37:
 10812                           	opt callstack 0
 10813  00276C                     _atoi:
 10814                           	opt callstack 22
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;incstack = 0
 10818  00276C  0E00               	movlw	0
 10819  00276E  0100               	movlb	0	; () banked
 10820  002770  6F95               	movwf	(atoi@n+1)& (0+255),b
 10821  002772  0E00               	movlw	0
 10822  002774  6F94               	movwf	atoi@n& (0+255),b
 10823  002776  0E00               	movlw	0
 10824  002778  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10825  00277A  0E00               	movlw	0
 10826  00277C  6F8D               	movwf	atoi@neg& (0+255),b
 10827  00277E  D002               	goto	l6562
 10828  002780                     l6560:
 10829                           
 10830                           ; BSR set to: 0
 10831  002780  4B87               	infsnz	atoi@s& (0+255),f,b
 10832  002782  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10833  002784                     l6562:
 10834                           
 10835                           ; BSR set to: 0
 10836  002784  0E01               	movlw	1
 10837  002786  6F93               	movwf	_atoi$1584& (0+255),b
 10838                           
 10839                           ; BSR set to: 0
 10840  002788  C087  FFF6         	movff	atoi@s,tblptrl
 10841  00278C  C088  FFF7         	movff	atoi@s+1,tblptrh
 10842  002790                     	if	0	;tblptru may be non-zero
 10843  002790                     	endif
 10844  002790                     	if	0	;tblptru may be non-zero
 10845  002790                     	endif
 10846  002790  0008               	tblrd		*
 10847  002792  50F5               	movf	tablat,w,c
 10848  002794  0A20               	xorlw	32
 10849  002796  B4D8               	btfsc	status,2,c
 10850  002798  D018               	goto	l6570
 10851                           
 10852                           ; BSR set to: 0
 10853  00279A  0EF7               	movlw	247
 10854  00279C  6F89               	movwf	??_atoi& (0+255),b
 10855  00279E  0EFF               	movlw	255
 10856  0027A0  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10857  0027A2  C087  FFF6         	movff	atoi@s,tblptrl
 10858  0027A6  C088  FFF7         	movff	atoi@s+1,tblptrh
 10859  0027AA                     	if	0	;tblptru may be non-zero
 10860  0027AA                     	endif
 10861  0027AA                     	if	0	;tblptru may be non-zero
 10862  0027AA                     	endif
 10863  0027AA  0008               	tblrd		*
 10864  0027AC  50F5               	movf	tablat,w,c
 10865  0027AE  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10866  0027B0  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10867  0027B2  5189               	movf	??_atoi& (0+255),w,b
 10868  0027B4  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10869  0027B6  518A               	movf	(??_atoi+1)& (0+255),w,b
 10870  0027B8  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10871  0027BA  518C               	movf	(??_atoi+3)& (0+255),w,b
 10872  0027BC  E104               	bnz	u7120
 10873  0027BE  0E05               	movlw	5
 10874  0027C0  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 10875  0027C2  A0D8               	btfss	status,0,c
 10876  0027C4  D002               	goto	l6570
 10877  0027C6                     u7120:
 10878                           
 10879                           ; BSR set to: 0
 10880  0027C6  0E00               	movlw	0
 10881  0027C8  6F93               	movwf	_atoi$1584& (0+255),b
 10882  0027CA                     l6570:
 10883                           
 10884                           ; BSR set to: 0
 10885  0027CA  C093  F08F         	movff	_atoi$1584,_atoi$1583
 10886  0027CE  6B90               	clrf	(_atoi$1583+1)& (0+255),b
 10887                           
 10888                           ; BSR set to: 0
 10889  0027D0  518F               	movf	_atoi$1583& (0+255),w,b
 10890  0027D2  1190               	iorwf	(_atoi$1583+1)& (0+255),w,b
 10891  0027D4  B4D8               	btfsc	status,2,c
 10892  0027D6  D008               	goto	l6580
 10893  0027D8  D7D3               	goto	l6560
 10894  0027DA                     l6576:
 10895                           
 10896                           ; BSR set to: 0
 10897  0027DA  0E00               	movlw	0
 10898  0027DC  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 10899  0027DE  0E01               	movlw	1
 10900  0027E0  6F8D               	movwf	atoi@neg& (0+255),b
 10901  0027E2                     l6578:
 10902                           
 10903                           ; BSR set to: 0
 10904  0027E2  4B87               	infsnz	atoi@s& (0+255),f,b
 10905  0027E4  2B88               	incf	(atoi@s+1)& (0+255),f,b
 10906  0027E6  D02F               	goto	l6586
 10907  0027E8                     l6580:
 10908                           
 10909                           ; BSR set to: 0
 10910  0027E8  C087  FFF6         	movff	atoi@s,tblptrl
 10911  0027EC  C088  FFF7         	movff	atoi@s+1,tblptrh
 10912  0027F0                     	if	0	;tblptru may be non-zero
 10913  0027F0                     	endif
 10914  0027F0                     	if	0	;tblptru may be non-zero
 10915  0027F0                     	endif
 10916  0027F0  0008               	tblrd		*
 10917  0027F2  50F5               	movf	tablat,w,c
 10918  0027F4  6F89               	movwf	??_atoi& (0+255),b
 10919  0027F6  6B8A               	clrf	(??_atoi+1)& (0+255),b
 10920                           
 10921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10922                           ; Switch size 1, requested type "simple"
 10923                           ; Number of cases is 1, Range of values is 0 to 0
 10924                           ; switch strategies available:
 10925                           ; Name         Instructions Cycles
 10926                           ; simple_byte            4     3 (average)
 10927                           ;	Chosen strategy is simple_byte
 10928  0027F8  518A               	movf	(??_atoi+1)& (0+255),w,b
 10929  0027FA  0A00               	xorlw	0	; case 0
 10930  0027FC  A4D8               	btfss	status,2,c
 10931  0027FE  D023               	goto	l6586
 10932                           
 10933                           ; BSR set to: 0
 10934                           ; Switch size 1, requested type "simple"
 10935                           ; Number of cases is 2, Range of values is 43 to 45
 10936                           ; switch strategies available:
 10937                           ; Name         Instructions Cycles
 10938                           ; simple_byte            7     4 (average)
 10939                           ;	Chosen strategy is simple_byte
 10940  002800  5189               	movf	??_atoi& (0+255),w,b
 10941  002802  0A2B               	xorlw	43	; case 43
 10942  002804  B4D8               	btfsc	status,2,c
 10943  002806  D7ED               	goto	l6578
 10944  002808  0A06               	xorlw	6	; case 45
 10945  00280A  B4D8               	btfsc	status,2,c
 10946  00280C  D7E6               	goto	l6576
 10947  00280E  D01B               	goto	l6586
 10948  002810                     l6582:
 10949                           
 10950                           ; BSR set to: 0
 10951  002810  C094  F080         	movff	atoi@n,___wmul@multiplier
 10952  002814  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 10953  002818  0E00               	movlw	0
 10954  00281A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10955  00281C  0E0A               	movlw	10
 10956  00281E  6F82               	movwf	___wmul@multiplicand& (0+255),b
 10957  002820  EC39  F01D         	call	___wmul	;wreg free
 10958  002824  C087  FFF6         	movff	atoi@s,tblptrl
 10959  002828  C088  FFF7         	movff	atoi@s+1,tblptrh
 10960  00282C                     	if	0	;tblptru may be non-zero
 10961  00282C                     	endif
 10962  00282C                     	if	0	;tblptru may be non-zero
 10963  00282C                     	endif
 10964  00282C  0008               	tblrd		*
 10965  00282E  50F5               	movf	tablat,w,c
 10966  002830  0100               	movlb	0	; () banked
 10967  002832  5F80               	subwf	?___wmul& (0+255),f,b
 10968  002834  0E00               	movlw	0
 10969  002836  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 10970  002838  0E30               	movlw	48
 10971  00283A  2580               	addwf	?___wmul& (0+255),w,b
 10972  00283C  6F94               	movwf	atoi@n& (0+255),b
 10973  00283E  0E00               	movlw	0
 10974  002840  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 10975  002842  6F95               	movwf	(atoi@n+1)& (0+255),b
 10976  002844  D7CE               	goto	l6578
 10977  002846                     l6586:
 10978                           
 10979                           ; BSR set to: 0
 10980  002846  0ED0               	movlw	208
 10981  002848  6F89               	movwf	??_atoi& (0+255),b
 10982  00284A  0EFF               	movlw	255
 10983  00284C  6F8A               	movwf	(??_atoi+1)& (0+255),b
 10984  00284E  C087  FFF6         	movff	atoi@s,tblptrl
 10985  002852  C088  FFF7         	movff	atoi@s+1,tblptrh
 10986  002856                     	if	0	;tblptru may be non-zero
 10987  002856                     	endif
 10988  002856                     	if	0	;tblptru may be non-zero
 10989  002856                     	endif
 10990  002856  0008               	tblrd		*
 10991  002858  50F5               	movf	tablat,w,c
 10992  00285A  6F8B               	movwf	(??_atoi+2)& (0+255),b
 10993  00285C  6B8C               	clrf	(??_atoi+3)& (0+255),b
 10994  00285E  5189               	movf	??_atoi& (0+255),w,b
 10995  002860  278B               	addwf	(??_atoi+2)& (0+255),f,b
 10996  002862  518A               	movf	(??_atoi+1)& (0+255),w,b
 10997  002864  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 10998  002866  518C               	movf	(??_atoi+3)& (0+255),w,b
 10999  002868  E106               	bnz	u7140
 11000  00286A  0E0A               	movlw	10
 11001  00286C  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11002  00286E  B0D8               	btfsc	status,0,c
 11003  002870  D002               	goto	u7140
 11004  002872  0E01               	movlw	1
 11005  002874  D001               	goto	u7150
 11006  002876                     u7140:
 11007  002876  0E00               	movlw	0
 11008  002878                     u7150:
 11009  002878  6F91               	movwf	_atoi$1585& (0+255),b
 11010  00287A  6B92               	clrf	(_atoi$1585+1)& (0+255),b
 11011                           
 11012                           ; BSR set to: 0
 11013  00287C  5191               	movf	_atoi$1585& (0+255),w,b
 11014  00287E  1192               	iorwf	(_atoi$1585+1)& (0+255),w,b
 11015  002880  A4D8               	btfss	status,2,c
 11016  002882  D7C6               	goto	l6582
 11017                           
 11018                           ; BSR set to: 0
 11019  002884  518D               	movf	atoi@neg& (0+255),w,b
 11020  002886  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11021  002888  A4D8               	btfss	status,2,c
 11022  00288A  D00D               	goto	l1389
 11023                           
 11024                           ; BSR set to: 0
 11025  00288C  C094  F089         	movff	atoi@n,??_atoi
 11026  002890  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11027  002894  1F89               	comf	??_atoi& (0+255),f,b
 11028  002896  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11029  002898  4B89               	infsnz	??_atoi& (0+255),f,b
 11030  00289A  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11031  00289C  C089  F087         	movff	??_atoi,?_atoi
 11032  0028A0  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11033  0028A4  0012               	return	
 11034  0028A6                     l1389:
 11035                           
 11036                           ; BSR set to: 0
 11037  0028A6  C094  F087         	movff	atoi@n,?_atoi
 11038  0028AA  C095  F088         	movff	atoi@n+1,?_atoi+1
 11039                           
 11040                           ; BSR set to: 0
 11041  0028AE  0012               	return		;funcret
 11042  0028B0                     __end_of_atoi:
 11043                           	opt callstack 0
 11044                           
 11045 ;; *************** function _isspace *****************
 11046 ;; Defined at:
 11047 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  c               2    0[BANK0 ] int 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;		None
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  2    0[BANK0 ] int 
 11054 ;; Registers used:
 11055 ;;		wreg, status,2, status,0
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11063 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11064 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11065 ;;Total ram usage:        7 bytes
 11066 ;; Hardware stack levels used:    1
 11067 ;; Hardware stack levels required when called:    3
 11068 ;; This function calls:
 11069 ;;		Nothing
 11070 ;; This function is called by:
 11071 ;;		_atoi
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           	psect	text38
 11076  0037AC                     __ptext38:
 11077                           	opt callstack 0
 11078  0037AC                     _isspace:
 11079                           	opt callstack 22
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;incstack = 0
 11083  0037AC  0E01               	movlw	1
 11084  0037AE  0100               	movlb	0	; () banked
 11085  0037B0  6F86               	movwf	_isspace$1610& (0+255),b
 11086                           
 11087                           ; BSR set to: 0
 11088  0037B2  0E20               	movlw	32
 11089  0037B4  1980               	xorwf	isspace@c& (0+255),w,b
 11090  0037B6  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11091  0037B8  B4D8               	btfsc	status,2,c
 11092  0037BA  D014               	goto	l6426
 11093                           
 11094                           ; BSR set to: 0
 11095  0037BC  0EF7               	movlw	247
 11096  0037BE  6F82               	movwf	??_isspace& (0+255),b
 11097  0037C0  0EFF               	movlw	255
 11098  0037C2  6F83               	movwf	(??_isspace+1)& (0+255),b
 11099  0037C4  C080  F084         	movff	isspace@c,??_isspace+2
 11100  0037C8  C081  F085         	movff	isspace@c+1,??_isspace+3
 11101  0037CC  5182               	movf	??_isspace& (0+255),w,b
 11102  0037CE  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11103  0037D0  5183               	movf	(??_isspace+1)& (0+255),w,b
 11104  0037D2  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11105  0037D4  5185               	movf	(??_isspace+3)& (0+255),w,b
 11106  0037D6  E104               	bnz	u6780
 11107  0037D8  0E05               	movlw	5
 11108  0037DA  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11109  0037DC  A0D8               	btfss	status,0,c
 11110  0037DE  D002               	goto	l6426
 11111  0037E0                     u6780:
 11112                           
 11113                           ; BSR set to: 0
 11114  0037E0  0E00               	movlw	0
 11115  0037E2  6F86               	movwf	_isspace$1610& (0+255),b
 11116  0037E4                     l6426:
 11117                           
 11118                           ; BSR set to: 0
 11119  0037E4  C086  F080         	movff	_isspace$1610,?_isspace
 11120  0037E8  6B81               	clrf	(?_isspace+1)& (0+255),b
 11121                           
 11122                           ; BSR set to: 0
 11123  0037EA  0012               	return		;funcret
 11124  0037EC                     __end_of_isspace:
 11125                           	opt callstack 0
 11126                           
 11127 ;; *************** function _isdigit *****************
 11128 ;; Defined at:
 11129 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  c               2    0[BANK0 ] int 
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  2    0[BANK0 ] int 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2, status,0
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11143 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11147 ;;Total ram usage:        6 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:    3
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_vfpfcnvrt
 11154 ;;		_atoi
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           	psect	text39
 11159  003966                     __ptext39:
 11160                           	opt callstack 0
 11161  003966                     _isdigit:
 11162                           	opt callstack 23
 11163                           
 11164                           ; BSR set to: 0
 11165                           ;incstack = 0
 11166  003966  0ED0               	movlw	208
 11167  003968  0100               	movlb	0	; () banked
 11168  00396A  6F82               	movwf	??_isdigit& (0+255),b
 11169  00396C  0EFF               	movlw	255
 11170  00396E  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11171  003970  C080  F084         	movff	isdigit@c,??_isdigit+2
 11172  003974  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11173  003978  5182               	movf	??_isdigit& (0+255),w,b
 11174  00397A  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11175  00397C  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11176  00397E  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11177  003980  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11178  003982  E106               	bnz	u6620
 11179  003984  0E0A               	movlw	10
 11180  003986  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11181  003988  B0D8               	btfsc	status,0,c
 11182  00398A  D002               	goto	u6620
 11183  00398C  0E01               	movlw	1
 11184  00398E  D001               	goto	u6630
 11185  003990                     u6620:
 11186  003990  0E00               	movlw	0
 11187  003992                     u6630:
 11188  003992  6F80               	movwf	?_isdigit& (0+255),b
 11189  003994  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11190                           
 11191                           ; BSR set to: 0
 11192  003996  0012               	return		;funcret
 11193  003998                     __end_of_isdigit:
 11194                           	opt callstack 0
 11195                           
 11196 ;; *************** function ___wmul *****************
 11197 ;; Defined at:
 11198 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11201 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;  product         2    4[BANK0 ] unsigned int 
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  2    0[BANK0 ] unsigned int 
 11206 ;; Registers used:
 11207 ;;		wreg, status,2, status,0, prodl, prodh
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11213 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11214 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11217 ;;Total ram usage:        6 bytes
 11218 ;; Hardware stack levels used:    1
 11219 ;; Hardware stack levels required when called:    3
 11220 ;; This function calls:
 11221 ;;		Nothing
 11222 ;; This function is called by:
 11223 ;;		_main
 11224 ;;		_atoi
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           
 11228                           	psect	text40
 11229  003A72                     __ptext40:
 11230                           	opt callstack 0
 11231  003A72                     ___wmul:
 11232                           	opt callstack 22
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;incstack = 0
 11236  003A72  0100               	movlb	0	; () banked
 11237  003A74  5180               	movf	___wmul@multiplier& (0+255),w,b
 11238  003A76  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11239  003A78  CFF3 F084          	movff	prodl,___wmul@product
 11240  003A7C  CFF4 F085          	movff	prodh,___wmul@product+1
 11241  003A80  5180               	movf	___wmul@multiplier& (0+255),w,b
 11242  003A82  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11243  003A84  50F3               	movf	prodl,w,c
 11244  003A86  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11245  003A88  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11246  003A8A  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11247  003A8C  50F3               	movf	prodl,w,c
 11248  003A8E  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11249                           
 11250                           ; BSR set to: 0
 11251  003A90  C084  F080         	movff	___wmul@product,?___wmul
 11252  003A94  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11253                           
 11254                           ; BSR set to: 0
 11255  003A98  0012               	return		;funcret
 11256  003A9A                     __end_of___wmul:
 11257                           	opt callstack 0
 11258                           
 11259 ;; *************** function _initLCD *****************
 11260 ;; Defined at:
 11261 ;;		line 69 in file "lcd.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;		None
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1    wreg      void 
 11268 ;; Registers used:
 11269 ;;		wreg, status,2, status,0, cstack
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;Total ram usage:        1 bytes
 11280 ;; Hardware stack levels used:    1
 11281 ;; Hardware stack levels required when called:    7
 11282 ;; This function calls:
 11283 ;;		_lcdInst
 11284 ;;		_send_byte
 11285 ;;		_send_nibble
 11286 ;; This function is called by:
 11287 ;;		_actuators_main
 11288 ;;		_UI_main
 11289 ;;		_main
 11290 ;; This function uses a non-reentrant model
 11291 ;;
 11292                           
 11293                           	psect	text41
 11294  003416                     __ptext41:
 11295                           	opt callstack 0
 11296  003416                     _initLCD:
 11297                           	opt callstack 23
 11298                           
 11299                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11300                           
 11301                           ; BSR set to: 0
 11302                           ;incstack = 0
 11303  003416  0E31               	movlw	49
 11304  003418  0100               	movlb	0	; () banked
 11305  00341A  6F84               	movwf	??_initLCD& (0+255),b
 11306  00341C  0EB2               	movlw	178
 11307  00341E                     u9537:
 11308  00341E  2EE8               	decfsz	wreg,f,c
 11309  003420  D7FE               	bra	u9537
 11310  003422  2F84               	decfsz	??_initLCD& (0+255),f,b
 11311  003424  D7FC               	bra	u9537
 11312  003426  F000               	nop	
 11313                           
 11314                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11315  003428  948C               	bcf	3980,2,c	;volatile
 11316                           
 11317                           ;lcd.c: 74:     send_nibble(0b0011);
 11318  00342A  0E03               	movlw	3
 11319  00342C  EC60  F01D         	call	_send_nibble
 11320                           
 11321                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11322  003430  0E11               	movlw	17
 11323  003432  0100               	movlb	0	; () banked
 11324  003434  6F84               	movwf	??_initLCD& (0+255),b
 11325  003436  0E3A               	movlw	58
 11326  003438                     u9547:
 11327  003438  2EE8               	decfsz	wreg,f,c
 11328  00343A  D7FE               	bra	u9547
 11329  00343C  2F84               	decfsz	??_initLCD& (0+255),f,b
 11330  00343E  D7FC               	bra	u9547
 11331  003440  F000               	nop	
 11332                           
 11333                           ;lcd.c: 76:     send_nibble(0b0011);
 11334  003442  0E03               	movlw	3
 11335  003444  EC60  F01D         	call	_send_nibble
 11336                           
 11337                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 11338  003448  0E7D               	movlw	125
 11339  00344A                     u9557:
 11340  00344A  2EE8               	decfsz	wreg,f,c
 11341  00344C  D7FE               	bra	u9557
 11342                           
 11343                           ;lcd.c: 78:     send_byte(0b00110010);
 11344  00344E  0E32               	movlw	50
 11345  003450  EC6D  F01D         	call	_send_byte
 11346                           
 11347                           ;lcd.c: 80:     send_byte(0b00101000);
 11348  003454  0E28               	movlw	40
 11349  003456  EC6D  F01D         	call	_send_byte
 11350                           
 11351                           ;lcd.c: 81:     send_byte(0b00001000);
 11352  00345A  0E08               	movlw	8
 11353  00345C  EC6D  F01D         	call	_send_byte
 11354                           
 11355                           ;lcd.c: 82:     send_byte(0b00000001);
 11356  003460  0E01               	movlw	1
 11357  003462  EC6D  F01D         	call	_send_byte
 11358                           
 11359                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11360  003466  0E11               	movlw	17
 11361  003468  0100               	movlb	0	; () banked
 11362  00346A  6F84               	movwf	??_initLCD& (0+255),b
 11363  00346C  0E3A               	movlw	58
 11364  00346E                     u9567:
 11365  00346E  2EE8               	decfsz	wreg,f,c
 11366  003470  D7FE               	bra	u9567
 11367  003472  2F84               	decfsz	??_initLCD& (0+255),f,b
 11368  003474  D7FC               	bra	u9567
 11369  003476  F000               	nop	
 11370                           
 11371                           ;lcd.c: 84:     send_byte(0b00000110);
 11372  003478  0E06               	movlw	6
 11373  00347A  EC6D  F01D         	call	_send_byte
 11374                           
 11375                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 11376  00347E  0E0F               	movlw	15
 11377  003480  EC8B  F01D         	call	_lcdInst
 11378  003484  0012               	return		;funcret
 11379  003486                     __end_of_initLCD:
 11380                           	opt callstack 0
 11381                           
 11382 ;; *************** function _lcdInst *****************
 11383 ;; Defined at:
 11384 ;;		line 64 in file "lcd.c"
 11385 ;; Parameters:    Size  Location     Type
 11386 ;;  data            1    wreg     unsigned char 
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;  data            1    3[BANK0 ] unsigned char 
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      void 
 11391 ;; Registers used:
 11392 ;;		wreg, status,2, status,0, cstack
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11401 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11402 ;;Total ram usage:        1 bytes
 11403 ;; Hardware stack levels used:    1
 11404 ;; Hardware stack levels required when called:    6
 11405 ;; This function calls:
 11406 ;;		_send_byte
 11407 ;; This function is called by:
 11408 ;;		_actuators_main
 11409 ;;		_stepper2
 11410 ;;		_stepper2_back
 11411 ;;		_initLCD
 11412 ;;		_print_echo
 11413 ;;		_ultrasonic_main
 11414 ;;		_number_deploy
 11415 ;;		_UI_main
 11416 ;;		_brake
 11417 ;;		_main
 11418 ;;		_lcd_shift_cursor
 11419 ;;		_lcd_shift_display
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423                           	psect	text42
 11424  003B16                     __ptext42:
 11425                           	opt callstack 0
 11426  003B16                     _lcdInst:
 11427                           	opt callstack 22
 11428                           
 11429                           ;incstack = 0
 11430                           ;lcdInst@data stored from wreg
 11431  003B16  0100               	movlb	0	; () banked
 11432  003B18  6F83               	movwf	lcdInst@data& (0+255),b
 11433                           
 11434                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 11435  003B1A  948C               	bcf	3980,2,c	;volatile
 11436                           
 11437                           ;lcd.c: 66:     send_byte(data);
 11438  003B1C  0100               	movlb	0	; () banked
 11439  003B1E  5183               	movf	lcdInst@data& (0+255),w,b
 11440  003B20  EC6D  F01D         	call	_send_byte
 11441  003B24  0012               	return		;funcret
 11442  003B26                     __end_of_lcdInst:
 11443                           	opt callstack 0
 11444                           
 11445 ;; *************** function _send_byte *****************
 11446 ;; Defined at:
 11447 ;;		line 55 in file "lcd.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  data            1    wreg     unsigned char 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;  data            1    2[BANK0 ] unsigned char 
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  1    wreg      void 
 11454 ;; Registers used:
 11455 ;;		wreg, status,2, status,0, cstack
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/0
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11464 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11465 ;;Total ram usage:        1 bytes
 11466 ;; Hardware stack levels used:    1
 11467 ;; Hardware stack levels required when called:    5
 11468 ;; This function calls:
 11469 ;;		_send_nibble
 11470 ;; This function is called by:
 11471 ;;		_lcdInst
 11472 ;;		_initLCD
 11473 ;;		_putch
 11474 ;; This function uses a non-reentrant model
 11475 ;;
 11476                           
 11477                           	psect	text43
 11478  003ADA                     __ptext43:
 11479                           	opt callstack 0
 11480  003ADA                     _send_byte:
 11481                           	opt callstack 16
 11482                           
 11483                           ;incstack = 0
 11484                           ;send_byte@data stored from wreg
 11485  003ADA  0100               	movlb	0	; () banked
 11486  003ADC  6F82               	movwf	send_byte@data& (0+255),b
 11487                           
 11488                           ;lcd.c: 57:     send_nibble(data >> 4);
 11489  003ADE  0100               	movlb	0	; () banked
 11490  003AE0  3982               	swapf	send_byte@data& (0+255),w,b
 11491  003AE2  0B0F               	andlw	15
 11492  003AE4  EC60  F01D         	call	_send_nibble
 11493                           
 11494                           ;lcd.c: 60:     send_nibble(data);
 11495  003AE8  0100               	movlb	0	; () banked
 11496  003AEA  5182               	movf	send_byte@data& (0+255),w,b
 11497  003AEC  EC60  F01D         	call	_send_nibble
 11498  003AF0  0012               	return		;funcret
 11499  003AF2                     __end_of_send_byte:
 11500                           	opt callstack 0
 11501                           
 11502 ;; *************** function _send_nibble *****************
 11503 ;; Defined at:
 11504 ;;		line 44 in file "lcd.c"
 11505 ;; Parameters:    Size  Location     Type
 11506 ;;  data            1    wreg     unsigned char 
 11507 ;; Auto vars:     Size  Location     Type
 11508 ;;  data            1    1[BANK0 ] unsigned char 
 11509 ;; Return value:  Size  Location     Type
 11510 ;;                  1    wreg      void 
 11511 ;; Registers used:
 11512 ;;		wreg, status,2, status,0, cstack
 11513 ;; Tracked objects:
 11514 ;;		On entry : 0/0
 11515 ;;		On exit  : 0/0
 11516 ;;		Unchanged: 0/0
 11517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11519 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11522 ;;Total ram usage:        1 bytes
 11523 ;; Hardware stack levels used:    1
 11524 ;; Hardware stack levels required when called:    4
 11525 ;; This function calls:
 11526 ;;		_pulse_e
 11527 ;; This function is called by:
 11528 ;;		_send_byte
 11529 ;;		_initLCD
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text44
 11534  003AC0                     __ptext44:
 11535                           	opt callstack 0
 11536  003AC0                     _send_nibble:
 11537                           	opt callstack 16
 11538                           
 11539                           ;incstack = 0
 11540                           ;send_nibble@data stored from wreg
 11541  003AC0  0100               	movlb	0	; () banked
 11542  003AC2  6F81               	movwf	send_nibble@data& (0+255),b
 11543                           
 11544                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 11545  003AC4  508C               	movf	3980,w,c	;volatile
 11546  003AC6  0B0F               	andlw	15
 11547  003AC8  6E8C               	movwf	3980,c	;volatile
 11548                           
 11549                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 11550  003ACA  0100               	movlb	0	; () banked
 11551  003ACC  3981               	swapf	send_nibble@data& (0+255),w,b
 11552  003ACE  0BF0               	andlw	240
 11553  003AD0  108C               	iorwf	3980,w,c	;volatile
 11554  003AD2  6E8C               	movwf	3980,c	;volatile
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;lcd.c: 48:     pulse_e();
 11558  003AD4  ECE3  F01C         	call	_pulse_e	;wreg free
 11559  003AD8  0012               	return		;funcret
 11560  003ADA                     __end_of_send_nibble:
 11561                           	opt callstack 0
 11562                           
 11563 ;; *************** function _pulse_e *****************
 11564 ;; Defined at:
 11565 ;;		line 28 in file "lcd.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;		None
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 11570 ;; Return value:  Size  Location     Type
 11571 ;;                  1    wreg      void 
 11572 ;; Registers used:
 11573 ;;		wreg
 11574 ;; Tracked objects:
 11575 ;;		On entry : 0/0
 11576 ;;		On exit  : 0/0
 11577 ;;		Unchanged: 0/0
 11578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11580 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11582 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11583 ;;Total ram usage:        1 bytes
 11584 ;; Hardware stack levels used:    1
 11585 ;; Hardware stack levels required when called:    3
 11586 ;; This function calls:
 11587 ;;		Nothing
 11588 ;; This function is called by:
 11589 ;;		_send_nibble
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text45
 11594  0039C6                     __ptext45:
 11595                           	opt callstack 0
 11596  0039C6                     _pulse_e:
 11597                           	opt callstack 16
 11598                           
 11599                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 11600                           
 11601                           ;incstack = 0
 11602  0039C6  0E00               	movlw	0
 11603  0039C8  BEF2               	btfsc	4082,7,c	;volatile
 11604  0039CA  0E01               	movlw	1
 11605  0039CC  0100               	movlb	0	; () banked
 11606  0039CE  6F80               	movwf	pulse_e@interruptState& (0+255),b
 11607                           
 11608                           ; BSR set to: 0
 11609                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 11610  0039D0  9EF2               	bcf	4082,7,c	;volatile
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 11614  0039D2  868C               	bsf	3980,3,c	;volatile
 11615                           
 11616                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 11617  0039D4  0E14               	movlw	20
 11618  0039D6                     u9577:
 11619  0039D6  2EE8               	decfsz	wreg,f,c
 11620  0039D8  D7FE               	bra	u9577
 11621  0039DA  D000               	nop2	
 11622                           
 11623                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 11624  0039DC  968C               	bcf	3980,3,c	;volatile
 11625                           
 11626                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 11627  0039DE  0E53               	movlw	83
 11628  0039E0                     u9587:
 11629  0039E0  2EE8               	decfsz	wreg,f,c
 11630  0039E2  D7FE               	bra	u9587
 11631  0039E4  F000               	nop	
 11632                           
 11633                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 11634  0039E6  0100               	movlb	0	; () banked
 11635  0039E8  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 11636  0039EA  D002               	bra	u6415
 11637  0039EC  9EF2               	bcf	4082,7,c	;volatile
 11638  0039EE  D001               	bra	u6416
 11639  0039F0                     u6415:
 11640  0039F0  8EF2               	bsf	4082,7,c	;volatile
 11641  0039F2                     u6416:
 11642  0039F2  0012               	return		;funcret
 11643  0039F4                     __end_of_pulse_e:
 11644                           	opt callstack 0
 11645                           
 11646 ;; *************** function ___llmod *****************
 11647 ;; Defined at:
 11648 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  dividend        4    0[BANK0 ] unsigned long 
 11651 ;;  divisor         4    4[BANK0 ] unsigned long 
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;  counter         1    8[BANK0 ] unsigned char 
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  4    0[BANK0 ] unsigned long 
 11656 ;; Registers used:
 11657 ;;		wreg, status,2, status,0
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11663 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11666 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11667 ;;Total ram usage:        9 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; Hardware stack levels required when called:    3
 11670 ;; This function calls:
 11671 ;;		Nothing
 11672 ;; This function is called by:
 11673 ;;		_UI_main
 11674 ;; This function uses a non-reentrant model
 11675 ;;
 11676                           
 11677                           	psect	text46
 11678  0034F4                     __ptext46:
 11679                           	opt callstack 0
 11680  0034F4                     ___llmod:
 11681                           	opt callstack 26
 11682                           
 11683                           ;incstack = 0
 11684  0034F4  0100               	movlb	0	; () banked
 11685  0034F6  5184               	movf	___llmod@divisor& (0+255),w,b
 11686  0034F8  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11687  0034FA  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11688  0034FC  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11689  0034FE  B4D8               	btfsc	status,2,c
 11690  003500  D024               	goto	l1103
 11691                           
 11692                           ; BSR set to: 0
 11693  003502  0E01               	movlw	1
 11694  003504  6F88               	movwf	___llmod@counter& (0+255),b
 11695  003506  D006               	goto	l7356
 11696  003508                     l7354:
 11697                           
 11698                           ; BSR set to: 0
 11699  003508  90D8               	bcf	status,0,c
 11700  00350A  3784               	rlcf	___llmod@divisor& (0+255),f,b
 11701  00350C  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11702  00350E  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11703  003510  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11704  003512  2B88               	incf	___llmod@counter& (0+255),f,b
 11705  003514                     l7356:
 11706                           
 11707                           ; BSR set to: 0
 11708  003514  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11709  003516  D7F8               	goto	l7354
 11710  003518                     u7950:
 11711                           
 11712                           ; BSR set to: 0
 11713  003518  5184               	movf	___llmod@divisor& (0+255),w,b
 11714  00351A  5D80               	subwf	___llmod@dividend& (0+255),w,b
 11715  00351C  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11716  00351E  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11717  003520  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11718  003522  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11719  003524  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11720  003526  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11721  003528  A0D8               	btfss	status,0,c
 11722  00352A  D008               	goto	l7362
 11723                           
 11724                           ; BSR set to: 0
 11725  00352C  5184               	movf	___llmod@divisor& (0+255),w,b
 11726  00352E  5F80               	subwf	___llmod@dividend& (0+255),f,b
 11727  003530  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 11728  003532  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11729  003534  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 11730  003536  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11731  003538  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 11732  00353A  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11733  00353C                     l7362:
 11734                           
 11735                           ; BSR set to: 0
 11736  00353C  90D8               	bcf	status,0,c
 11737  00353E  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11738  003540  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11739  003542  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11740  003544  3384               	rrcf	___llmod@divisor& (0+255),f,b
 11741                           
 11742                           ; BSR set to: 0
 11743  003546  2F88               	decfsz	___llmod@counter& (0+255),f,b
 11744  003548  D7E7               	goto	u7950
 11745  00354A                     l1103:
 11746                           
 11747                           ; BSR set to: 0
 11748  00354A  C080  F080         	movff	___llmod@dividend,?___llmod
 11749  00354E  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 11750  003552  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 11751  003556  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 11752                           
 11753                           ; BSR set to: 0
 11754  00355A  0012               	return		;funcret
 11755  00355C                     __end_of___llmod:
 11756                           	opt callstack 0
 11757                           
 11758 ;; *************** function _I2C_Master_Write *****************
 11759 ;; Defined at:
 11760 ;;		line 70 in file "I2C.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      void 
 11767 ;; Registers used:
 11768 ;;		wreg, status,2, status,0, cstack
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;Total ram usage:        2 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; Hardware stack levels required when called:    4
 11781 ;; This function calls:
 11782 ;;		_I2C_Master_Wait
 11783 ;; This function is called by:
 11784 ;;		_UI_main
 11785 ;;		_brake
 11786 ;;		_start
 11787 ;;		_backwards
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text47
 11792  003B26                     __ptext47:
 11793                           	opt callstack 0
 11794  003B26                     _I2C_Master_Write:
 11795                           	opt callstack 25
 11796                           
 11797                           ;I2C.c: 71:     I2C_Master_Wait();
 11798                           
 11799                           ; BSR set to: 0
 11800                           ;incstack = 0
 11801  003B26  EC79  F01D         	call	_I2C_Master_Wait	;wreg free
 11802                           
 11803                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 11804  003B2A  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 11805  003B2E  0012               	return		;funcret
 11806  003B30                     __end_of_I2C_Master_Write:
 11807                           	opt callstack 0
 11808                           
 11809 ;; *************** function _I2C_Master_Stop *****************
 11810 ;; Defined at:
 11811 ;;		line 65 in file "I2C.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;		None
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  1    wreg      void 
 11818 ;; Registers used:
 11819 ;;		wreg, status,2, status,0, cstack
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;Total ram usage:        0 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; Hardware stack levels required when called:    4
 11832 ;; This function calls:
 11833 ;;		_I2C_Master_Wait
 11834 ;; This function is called by:
 11835 ;;		_UI_main
 11836 ;;		_brake
 11837 ;;		_start
 11838 ;;		_backwards
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text48
 11843  003B30                     __ptext48:
 11844                           	opt callstack 0
 11845  003B30                     _I2C_Master_Stop:
 11846                           	opt callstack 25
 11847                           
 11848                           ;I2C.c: 66:     I2C_Master_Wait();
 11849                           
 11850                           ;incstack = 0
 11851  003B30  EC79  F01D         	call	_I2C_Master_Wait	;wreg free
 11852                           
 11853                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 11854  003B34  84C5               	bsf	4037,2,c	;volatile
 11855  003B36  0012               	return		;funcret
 11856  003B38                     __end_of_I2C_Master_Stop:
 11857                           	opt callstack 0
 11858                           
 11859 ;; *************** function _I2C_Master_Start *****************
 11860 ;; Defined at:
 11861 ;;		line 55 in file "I2C.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;		None
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;		None
 11866 ;; Return value:  Size  Location     Type
 11867 ;;                  1    wreg      void 
 11868 ;; Registers used:
 11869 ;;		wreg, status,2, status,0, cstack
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11879 ;;Total ram usage:        0 bytes
 11880 ;; Hardware stack levels used:    1
 11881 ;; Hardware stack levels required when called:    4
 11882 ;; This function calls:
 11883 ;;		_I2C_Master_Wait
 11884 ;; This function is called by:
 11885 ;;		_UI_main
 11886 ;;		_brake
 11887 ;;		_start
 11888 ;;		_backwards
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           
 11892                           	psect	text49
 11893  003B38                     __ptext49:
 11894                           	opt callstack 0
 11895  003B38                     _I2C_Master_Start:
 11896                           	opt callstack 25
 11897                           
 11898                           ;I2C.c: 56:     I2C_Master_Wait();
 11899                           
 11900                           ;incstack = 0
 11901  003B38  EC79  F01D         	call	_I2C_Master_Wait	;wreg free
 11902                           
 11903                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 11904  003B3C  80C5               	bsf	4037,0,c	;volatile
 11905  003B3E  0012               	return		;funcret
 11906  003B40                     __end_of_I2C_Master_Start:
 11907                           	opt callstack 0
 11908                           
 11909 ;; *************** function _I2C_Master_Read *****************
 11910 ;; Defined at:
 11911 ;;		line 77 in file "I2C.c"
 11912 ;; Parameters:    Size  Location     Type
 11913 ;;  ackBit          1    wreg     unsigned char 
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;  ackBit          1    1[BANK0 ] unsigned char 
 11916 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      unsigned char 
 11919 ;; Registers used:
 11920 ;;		wreg, status,2, status,0, cstack
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11927 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11930 ;;Total ram usage:        2 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; Hardware stack levels required when called:    4
 11933 ;; This function calls:
 11934 ;;		_I2C_Master_Wait
 11935 ;; This function is called by:
 11936 ;;		_UI_main
 11937 ;;		_brake
 11938 ;; This function uses a non-reentrant model
 11939 ;;
 11940                           
 11941                           	psect	text50
 11942  003A20                     __ptext50:
 11943                           	opt callstack 0
 11944  003A20                     _I2C_Master_Read:
 11945                           	opt callstack 25
 11946                           
 11947                           ;incstack = 0
 11948                           ;I2C_Master_Read@ackBit stored from wreg
 11949  003A20  0100               	movlb	0	; () banked
 11950  003A22  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 11951                           
 11952                           ;I2C.c: 78:     I2C_Master_Wait();
 11953  003A24  EC79  F01D         	call	_I2C_Master_Wait	;wreg free
 11954                           
 11955                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 11956  003A28  86C5               	bsf	4037,3,c	;volatile
 11957                           
 11958                           ;I2C.c: 81:     I2C_Master_Wait();
 11959  003A2A  EC79  F01D         	call	_I2C_Master_Wait	;wreg free
 11960                           
 11961                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 11962  003A2E  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 11963                           
 11964                           ;I2C.c: 86:     I2C_Master_Wait();
 11965  003A32  EC79  F01D         	call	_I2C_Master_Wait	;wreg free
 11966                           
 11967                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 11968  003A36  0100               	movlb	0	; () banked
 11969  003A38  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 11970  003A3A  D002               	bra	u7495
 11971  003A3C  9AC5               	bcf	4037,5,c	;volatile
 11972  003A3E  D001               	bra	u7496
 11973  003A40                     u7495:
 11974  003A40  8AC5               	bsf	4037,5,c	;volatile
 11975  003A42                     u7496:
 11976                           
 11977                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 11978  003A42  88C5               	bsf	4037,4,c	;volatile
 11979                           
 11980                           ;I2C.c: 90:     return receivedByte;
 11981  003A44  0100               	movlb	0	; () banked
 11982  003A46  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 11983                           
 11984                           ; BSR set to: 0
 11985  003A48  0012               	return		;funcret
 11986  003A4A                     __end_of_I2C_Master_Read:
 11987                           	opt callstack 0
 11988                           
 11989 ;; *************** function _I2C_Master_Wait *****************
 11990 ;; Defined at:
 11991 ;;		line 21 in file "I2C.c"
 11992 ;; Parameters:    Size  Location     Type
 11993 ;;		None
 11994 ;; Auto vars:     Size  Location     Type
 11995 ;;		None
 11996 ;; Return value:  Size  Location     Type
 11997 ;;                  1    wreg      void 
 11998 ;; Registers used:
 11999 ;;		wreg, status,2, status,0
 12000 ;; Tracked objects:
 12001 ;;		On entry : 0/0
 12002 ;;		On exit  : 0/0
 12003 ;;		Unchanged: 0/0
 12004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12009 ;;Total ram usage:        1 bytes
 12010 ;; Hardware stack levels used:    1
 12011 ;; Hardware stack levels required when called:    3
 12012 ;; This function calls:
 12013 ;;		Nothing
 12014 ;; This function is called by:
 12015 ;;		_I2C_Master_Start
 12016 ;;		_I2C_Master_Stop
 12017 ;;		_I2C_Master_Write
 12018 ;;		_I2C_Master_Read
 12019 ;;		_I2C_Master_RepeatedStart
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text51
 12024  003AF2                     __ptext51:
 12025                           	opt callstack 0
 12026  003AF2                     _I2C_Master_Wait:
 12027                           	opt callstack 25
 12028                           
 12029                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12030                           
 12031                           ;I2C.c: 28:     }
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;incstack = 0
 12035  003AF2  B4C7               	btfsc	4039,2,c	;volatile
 12036  003AF4  D7FE               	goto	_I2C_Master_Wait
 12037  003AF6  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12038  003AFA  0E1F               	movlw	31
 12039  003AFC  0100               	movlb	0	; () banked
 12040  003AFE  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12041  003B00  B4D8               	btfsc	status,2,c
 12042  003B02  0012               	return	
 12043  003B04  D7F6               	goto	_I2C_Master_Wait
 12044  003B06                     __end_of_I2C_Master_Wait:
 12045                           	opt callstack 0
 12046                           
 12047 ;; *************** function _I2C_Master_Init *****************
 12048 ;; Defined at:
 12049 ;;		line 32 in file "I2C.c"
 12050 ;; Parameters:    Size  Location     Type
 12051 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;		None
 12054 ;; Return value:  Size  Location     Type
 12055 ;;                  1    wreg      void 
 12056 ;; Registers used:
 12057 ;;		wreg, status,2, status,0, cstack
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12065 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;Total ram usage:        8 bytes
 12068 ;; Hardware stack levels used:    1
 12069 ;; Hardware stack levels required when called:    4
 12070 ;; This function calls:
 12071 ;;		___lldiv
 12072 ;; This function is called by:
 12073 ;;		_UI_main
 12074 ;;		_start
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           	psect	text52
 12079  00355C                     __ptext52:
 12080                           	opt callstack 0
 12081  00355C                     _I2C_Master_Init:
 12082                           	opt callstack 25
 12083                           
 12084                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;incstack = 0
 12088  00355C  9AC6               	bcf	4038,5,c	;volatile
 12089                           
 12090                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12091  00355E  8694               	bsf	3988,3,c	;volatile
 12092                           
 12093                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12094  003560  8894               	bsf	3988,4,c	;volatile
 12095                           
 12096                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12097  003562  0E80               	movlw	128
 12098  003564  0100               	movlb	0	; () banked
 12099  003566  6F80               	movwf	___lldiv@dividend& (0+255),b
 12100  003568  0E96               	movlw	150
 12101  00356A  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12102  00356C  0E98               	movlw	152
 12103  00356E  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12104  003570  0E00               	movlw	0
 12105  003572  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12106  003574  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12107  003578  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12108  00357C  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12109  003580  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12110  003584  0E02               	movlw	2
 12111  003586                     u7485:
 12112  003586  90D8               	bcf	status,0,c
 12113  003588  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12114  00358A  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12115  00358C  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12116  00358E  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12117  003590  2EE8               	decfsz	wreg,f,c
 12118  003592  D7F9               	goto	u7485
 12119  003594  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12120  003598  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12121  00359C  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12122  0035A0  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12123  0035A4  EC87  F019         	call	___lldiv	;wreg free
 12124  0035A8  0100               	movlb	0	; () banked
 12125  0035AA  0580               	decf	?___lldiv& (0+255),w,b
 12126  0035AC  6EC8               	movwf	4040,c	;volatile
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12130  0035AE  0E80               	movlw	128
 12131  0035B0  6EC7               	movwf	4039,c	;volatile
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12135  0035B2  0E28               	movlw	40
 12136  0035B4  6EC6               	movwf	4038,c	;volatile
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12140  0035B6  0E00               	movlw	0
 12141  0035B8  6EC5               	movwf	4037,c	;volatile
 12142                           
 12143                           ; BSR set to: 0
 12144  0035BA  0012               	return		;funcret
 12145  0035BC                     __end_of_I2C_Master_Init:
 12146                           	opt callstack 0
 12147                           
 12148 ;; *************** function ___lldiv *****************
 12149 ;; Defined at:
 12150 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;  dividend        4    0[BANK0 ] unsigned long 
 12153 ;;  divisor         4    4[BANK0 ] unsigned long 
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;  quotient        4    8[BANK0 ] unsigned long 
 12156 ;;  counter         1   12[BANK0 ] unsigned char 
 12157 ;; Return value:  Size  Location     Type
 12158 ;;                  4    0[BANK0 ] unsigned long 
 12159 ;; Registers used:
 12160 ;;		wreg, status,2, status,0
 12161 ;; Tracked objects:
 12162 ;;		On entry : 0/0
 12163 ;;		On exit  : 0/0
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12166 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12167 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12169 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12170 ;;Total ram usage:       13 bytes
 12171 ;; Hardware stack levels used:    1
 12172 ;; Hardware stack levels required when called:    3
 12173 ;; This function calls:
 12174 ;;		Nothing
 12175 ;; This function is called by:
 12176 ;;		_I2C_Master_Init
 12177 ;; This function uses a non-reentrant model
 12178 ;;
 12179                           
 12180                           	psect	text53
 12181  00330E                     __ptext53:
 12182                           	opt callstack 0
 12183  00330E                     ___lldiv:
 12184                           	opt callstack 25
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;incstack = 0
 12188  00330E  0E00               	movlw	0
 12189  003310  0100               	movlb	0	; () banked
 12190  003312  6F88               	movwf	___lldiv@quotient& (0+255),b
 12191  003314  0E00               	movlw	0
 12192  003316  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12193  003318  0E00               	movlw	0
 12194  00331A  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12195  00331C  0E00               	movlw	0
 12196  00331E  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12197                           
 12198                           ; BSR set to: 0
 12199  003320  5184               	movf	___lldiv@divisor& (0+255),w,b
 12200  003322  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12201  003324  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12202  003326  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12203  003328  B4D8               	btfsc	status,2,c
 12204  00332A  D02A               	goto	l710
 12205                           
 12206                           ; BSR set to: 0
 12207  00332C  0E01               	movlw	1
 12208  00332E  6F8C               	movwf	___lldiv@counter& (0+255),b
 12209  003330  D006               	goto	l6982
 12210  003332                     l6980:
 12211                           
 12212                           ; BSR set to: 0
 12213  003332  90D8               	bcf	status,0,c
 12214  003334  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12215  003336  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12216  003338  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12217  00333A  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12218  00333C  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12219  00333E                     l6982:
 12220                           
 12221                           ; BSR set to: 0
 12222  00333E  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12223  003340  D7F8               	goto	l6980
 12224  003342                     u7460:
 12225                           
 12226                           ; BSR set to: 0
 12227  003342  90D8               	bcf	status,0,c
 12228  003344  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12229  003346  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12230  003348  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12231  00334A  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12232                           
 12233                           ; BSR set to: 0
 12234  00334C  5184               	movf	___lldiv@divisor& (0+255),w,b
 12235  00334E  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12236  003350  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12237  003352  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12238  003354  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12239  003356  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12240  003358  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12241  00335A  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12242  00335C  A0D8               	btfss	status,0,c
 12243  00335E  D009               	goto	l6992
 12244                           
 12245                           ; BSR set to: 0
 12246  003360  5184               	movf	___lldiv@divisor& (0+255),w,b
 12247  003362  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12248  003364  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12249  003366  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12250  003368  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12251  00336A  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12252  00336C  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12253  00336E  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12254                           
 12255                           ; BSR set to: 0
 12256  003370  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12257  003372                     l6992:
 12258                           
 12259                           ; BSR set to: 0
 12260  003372  90D8               	bcf	status,0,c
 12261  003374  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12262  003376  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12263  003378  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12264  00337A  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12265                           
 12266                           ; BSR set to: 0
 12267  00337C  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12268  00337E  D7E1               	goto	u7460
 12269  003380                     l710:
 12270                           
 12271                           ; BSR set to: 0
 12272  003380  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12273  003384  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12274  003388  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12275  00338C  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12276                           
 12277                           ; BSR set to: 0
 12278  003390  0012               	return		;funcret
 12279  003392                     __end_of___lldiv:
 12280                           	opt callstack 0
 12281                           
 12282 ;; *************** function _ISR *****************
 12283 ;; Defined at:
 12284 ;;		line 71 in file "main.c"
 12285 ;; Parameters:    Size  Location     Type
 12286 ;;		None
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;		None
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  1    wreg      void 
 12291 ;; Registers used:
 12292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12293 ;; Tracked objects:
 12294 ;;		On entry : 0/0
 12295 ;;		On exit  : 0/0
 12296 ;;		Unchanged: 0/0
 12297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;Total ram usage:        2 bytes
 12303 ;; Hardware stack levels used:    1
 12304 ;; Hardware stack levels required when called:    2
 12305 ;; This function calls:
 12306 ;;		_echo
 12307 ;; This function is called by:
 12308 ;;		Interrupt level 2
 12309 ;; This function uses a non-reentrant model
 12310 ;;
 12311                           
 12312                           	psect	intcode
 12313  000008                     __pintcode:
 12314                           	opt callstack 0
 12315  000008                     _ISR:
 12316                           	opt callstack 14
 12317                           
 12318                           ; BSR set to: 0
 12319                           ;incstack = 0
 12320  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12321  00000A  EDF6  F01B         	call	int_func,f	;refresh shadow registers
 12322                           
 12323                           	psect	intcode_body
 12324  0037EC                     __pintcode_body:
 12325                           	opt callstack 14
 12326  0037EC                     int_func:
 12327                           	opt callstack 14
 12328  0037EC  0006               	pop		; remove dummy address from shadow register refresh
 12329  0037EE  CFD9 F036          	movff	fsr2l,??_ISR
 12330  0037F2  CFDA F037          	movff	fsr2h,??_ISR+1
 12331                           
 12332                           ;main.c: 72:  if(RBIF == 1){
 12333  0037F6  A0F2               	btfss	4082,0,c	;volatile
 12334  0037F8  D012               	goto	i2l365
 12335                           
 12336                           ;main.c: 73:         if (sens){
 12337  0037FA  5058               	movf	_sens,w,c	;volatile
 12338  0037FC  1059               	iorwf	_sens+1,w,c	;volatile
 12339  0037FE  B4D8               	btfsc	status,2,c
 12340  003800  D005               	goto	i2l5944
 12341                           
 12342                           ;main.c: 74:             RBIE = 0;
 12343  003802  96F2               	bcf	4082,3,c	;volatile
 12344                           
 12345                           ;main.c: 75:             echo();
 12346  003804  EC13  F004         	call	_echo	;wreg free
 12347                           
 12348                           ;main.c: 76:             RBIF = 0;
 12349  003808  90F2               	bcf	4082,0,c	;volatile
 12350                           
 12351                           ;main.c: 77:             RBIE = 1;
 12352  00380A  86F2               	bsf	4082,3,c	;volatile
 12353  00380C                     i2l5944:
 12354                           
 12355                           ;main.c: 79:         if (~sens){
 12356  00380C  2858               	incf	_sens,w,c	;volatile
 12357  00380E  E103               	bnz	i2u615_40
 12358  003810  2859               	incf	_sens+1,w,c	;volatile
 12359  003812  B4D8               	btfsc	status,2,c
 12360  003814  D004               	goto	i2l365
 12361  003816                     i2u615_40:
 12362                           
 12363                           ;main.c: 80:             key_was_pressed = 1;
 12364  003816  0E01               	movlw	1
 12365  003818  0101               	movlb	1	; () banked
 12366  00381A  6F77               	movwf	_key_was_pressed& (0+255),b	;volatile
 12367                           
 12368                           ; BSR set to: 1
 12369                           ;main.c: 81:             INT1IF = 0;
 12370  00381C  90F0               	bcf	4080,0,c	;volatile
 12371  00381E                     i2l365:
 12372  00381E  C037  FFDA         	movff	??_ISR+1,fsr2h
 12373  003822  C036  FFD9         	movff	??_ISR,fsr2l
 12374  003826  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12375  003828  0011               	retfie		f
 12376  00382A                     __end_of_ISR:
 12377                           	opt callstack 0
 12378                           
 12379 ;; *************** function _echo *****************
 12380 ;; Defined at:
 12381 ;;		line 99 in file "main.c"
 12382 ;; Parameters:    Size  Location     Type
 12383 ;;		None
 12384 ;; Auto vars:     Size  Location     Type
 12385 ;;		None
 12386 ;; Return value:  Size  Location     Type
 12387 ;;                  1    wreg      void 
 12388 ;; Registers used:
 12389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12390 ;; Tracked objects:
 12391 ;;		On entry : 0/0
 12392 ;;		On exit  : 0/0
 12393 ;;		Unchanged: 0/0
 12394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12398 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12399 ;;Total ram usage:        4 bytes
 12400 ;; Hardware stack levels used:    1
 12401 ;; Hardware stack levels required when called:    1
 12402 ;; This function calls:
 12403 ;;		___fldiv
 12404 ;;		___fltol
 12405 ;;		___xxtofl
 12406 ;;		i2___awdiv
 12407 ;; This function is called by:
 12408 ;;		_ISR
 12409 ;; This function uses a non-reentrant model
 12410 ;;
 12411                           
 12412                           	psect	text55
 12413  000826                     __ptext55:
 12414                           	opt callstack 0
 12415  000826                     _echo:
 12416                           	opt callstack 14
 12417                           
 12418                           ;main.c: 100:     if (b==1){
 12419                           
 12420                           ;incstack = 0
 12421  000826  045A               	decf	_b,w,c
 12422  000828  105B               	iorwf	_b+1,w,c
 12423  00082A  A4D8               	btfss	status,2,c
 12424  00082C  D0A2               	goto	i2l5390
 12425                           
 12426                           ;main.c: 101:         if (RB7 == 1){
 12427  00082E  BE81               	btfsc	3969,7,c	;volatile
 12428                           
 12429                           ;main.c: 102:             TMR1ON = 1;
 12430  000830  80CD               	bsf	4045,0,c	;volatile
 12431                           
 12432                           ;main.c: 104:         if (RB7 == 0){
 12433                           
 12434                           ;main.c: 103:         }
 12435  000832  BE81               	btfsc	3969,7,c	;volatile
 12436  000834  D037               	goto	i2l5366
 12437                           
 12438                           ;main.c: 105:             TMR1ON = 0;
 12439  000836  90CD               	bcf	4045,0,c	;volatile
 12440                           
 12441                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 12442  000838  0EAE               	movlw	174
 12443  00083A  6E13               	movwf	___fldiv@a,c
 12444  00083C  0E47               	movlw	71
 12445  00083E  6E14               	movwf	___fldiv@a+1,c
 12446  000840  0E6B               	movlw	107
 12447  000842  6E15               	movwf	___fldiv@a+2,c
 12448  000844  0E42               	movlw	66
 12449  000846  6E16               	movwf	___fldiv@a+3,c
 12450  000848  50CF               	movf	4047,w,c	;volatile
 12451  00084A  6E33               	movwf	(??_echo+1)& (0+255),c
 12452  00084C  6A32               	clrf	??_echo& (0+255),c
 12453  00084E  50CE               	movf	4046,w,c	;volatile
 12454  000850  6E34               	movwf	(??_echo+2)& (0+255),c
 12455  000852  6A35               	clrf	(??_echo+3)& (0+255),c
 12456  000854  5032               	movf	??_echo,w,c
 12457  000856  1234               	iorwf	??_echo+2,f,c
 12458  000858  5033               	movf	??_echo+1,w,c
 12459  00085A  1235               	iorwf	??_echo+3,f,c
 12460  00085C  C034  F001         	movff	??_echo+2,___xxtofl@val
 12461  000860  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12462  000864  0E00               	movlw	0
 12463  000866  BE02               	btfsc	___xxtofl@val+1,7,c
 12464  000868  0EFF               	movlw	-1
 12465  00086A  6E03               	movwf	___xxtofl@val+2,c
 12466  00086C  6E04               	movwf	___xxtofl@val+3,c
 12467  00086E  0E01               	movlw	1
 12468  000870  EC58  F014         	call	___xxtofl
 12469  000874  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12470  000878  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12471  00087C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12472  000880  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12473  000884  ECB0  F00C         	call	___fldiv	;wreg free
 12474  000888  C00F  F028         	movff	?___fldiv,___fltol@f1
 12475  00088C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12476  000890  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12477  000894  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12478  000898  ECAD  F017         	call	___fltol	;wreg free
 12479  00089C  C028  F061         	movff	?___fltol,_a
 12480  0008A0  C029  F062         	movff	?___fltol+1,_a+1
 12481  0008A4                     i2l5366:
 12482                           
 12483                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 12484  0008A4  BE62               	btfsc	_a+1,7,c
 12485  0008A6  D065               	goto	i2l5390
 12486  0008A8  5062               	movf	_a+1,w,c
 12487  0008AA  E104               	bnz	i2u528_40
 12488  0008AC  0E02               	movlw	2
 12489  0008AE  5C61               	subwf	_a,w,c
 12490  0008B0  A0D8               	btfss	status,0,c
 12491  0008B2  D05F               	goto	i2l5390
 12492  0008B4                     i2u528_40:
 12493  0008B4  BE62               	btfsc	_a+1,7,c
 12494  0008B6  D006               	goto	i2u529_40
 12495  0008B8  5062               	movf	_a+1,w,c
 12496  0008BA  E15B               	bnz	i2l5390
 12497  0008BC  0EC9               	movlw	201
 12498  0008BE  5C61               	subwf	_a,w,c
 12499  0008C0  B0D8               	btfsc	status,0,c
 12500  0008C2  D057               	goto	i2l5390
 12501  0008C4                     i2u529_40:
 12502                           
 12503                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 12504  0008C4  0440               	decf	_sumf,w,c
 12505  0008C6  B4D8               	btfsc	status,2,c
 12506  0008C8  D01B               	goto	i2l5382
 12507  0008CA  0102               	movlb	2	; () banked
 12508  0008CC  5150               	movf	_dist_final& (0+255),w,b
 12509  0008CE  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 12510  0008D0  B4D8               	btfsc	status,2,c
 12511  0008D2  D016               	goto	i2l5382
 12512                           
 12513                           ; BSR set to: 2
 12514  0008D4  5152               	movf	(_dist_final+2)& (0+255),w,b
 12515  0008D6  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 12516  0008D8  B4D8               	btfsc	status,2,c
 12517  0008DA  D012               	goto	i2l5382
 12518                           
 12519                           ; BSR set to: 2
 12520  0008DC  5154               	movf	(_dist_final+4)& (0+255),w,b
 12521  0008DE  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 12522  0008E0  B4D8               	btfsc	status,2,c
 12523  0008E2  D00E               	goto	i2l5382
 12524                           
 12525                           ; BSR set to: 2
 12526                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 12527  0008E4  5154               	movf	(_dist_final+4)& (0+255),w,b
 12528  0008E6  2552               	addwf	(_dist_final+2)& (0+255),w,b
 12529  0008E8  6E32               	movwf	??_echo& (0+255),c
 12530  0008EA  5155               	movf	(_dist_final+5)& (0+255),w,b
 12531  0008EC  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 12532  0008EE  6E33               	movwf	(??_echo+1)& (0+255),c
 12533  0008F0  5150               	movf	_dist_final& (0+255),w,b
 12534  0008F2  2432               	addwf	??_echo,w,c
 12535  0008F4  6E38               	movwf	_sum,c
 12536  0008F6  5151               	movf	(_dist_final+1)& (0+255),w,b
 12537  0008F8  2033               	addwfc	??_echo+1,w,c
 12538  0008FA  6E39               	movwf	_sum+1,c
 12539                           
 12540                           ; BSR set to: 2
 12541                           ;main.c: 113:                 sumf[0] = 1;
 12542  0008FC  0E01               	movlw	1
 12543  0008FE  6E40               	movwf	_sumf,c
 12544  000900                     i2l5382:
 12545                           
 12546                           ;main.c: 115:             if (sumf[0]){
 12547  000900  5040               	movf	_sumf,w,c
 12548  000902  B4D8               	btfsc	status,2,c
 12549  000904  D029               	goto	i2l5388
 12550                           
 12551                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 12552  000906  90D8               	bcf	status,0,c
 12553  000908  3450               	rlcf	_meas,w,c	;volatile
 12554  00090A  6ED9               	movwf	fsr2l,c
 12555  00090C  3451               	rlcf	_meas+1,w,c	;volatile
 12556  00090E  6EDA               	movwf	fsr2h,c
 12557  000910  0E50               	movlw	low _dist_final
 12558  000912  26D9               	addwf	fsr2l,f,c
 12559  000914  0E02               	movlw	high _dist_final
 12560  000916  22DA               	addwfc	fsr2h,f,c
 12561  000918  CFDE F032          	movff	postinc2,??_echo
 12562  00091C  CFDD F033          	movff	postdec2,??_echo+1
 12563  000920  C038  F034         	movff	_sum,??_echo+2
 12564  000924  C039  F035         	movff	_sum+1,??_echo+3
 12565  000928  5032               	movf	??_echo,w,c
 12566  00092A  5E34               	subwf	??_echo+2,f,c
 12567  00092C  5033               	movf	??_echo+1,w,c
 12568  00092E  5A35               	subwfb	??_echo+3,f,c
 12569  000930  5061               	movf	_a,w,c
 12570  000932  2434               	addwf	??_echo+2,w,c
 12571  000934  6E38               	movwf	_sum,c
 12572  000936  5062               	movf	_a+1,w,c
 12573  000938  2035               	addwfc	??_echo+3,w,c
 12574  00093A  6E39               	movwf	_sum+1,c
 12575                           
 12576                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 12577  00093C  C038  F001         	movff	_sum,i2___awdiv@dividend
 12578  000940  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 12579  000944  0E00               	movlw	0
 12580  000946  6E04               	movwf	i2___awdiv@divisor+1,c
 12581  000948  0E05               	movlw	5
 12582  00094A  6E03               	movwf	i2___awdiv@divisor,c
 12583  00094C  ECC9  F019         	call	i2___awdiv	;wreg free
 12584  000950  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 12585  000954  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 12586  000958                     i2l5388:
 12587                           
 12588                           ;main.c: 119:             dist_final[0][meas] = a[0];
 12589  000958  90D8               	bcf	status,0,c
 12590  00095A  3450               	rlcf	_meas,w,c	;volatile
 12591  00095C  6ED9               	movwf	fsr2l,c
 12592  00095E  3451               	rlcf	_meas+1,w,c	;volatile
 12593  000960  6EDA               	movwf	fsr2h,c
 12594  000962  0E50               	movlw	low _dist_final
 12595  000964  26D9               	addwf	fsr2l,f,c
 12596  000966  0E02               	movlw	high _dist_final
 12597  000968  22DA               	addwfc	fsr2h,f,c
 12598  00096A  C061  FFDE         	movff	_a,postinc2
 12599  00096E  C062  FFDD         	movff	_a+1,postdec2
 12600  000972                     i2l5390:
 12601                           
 12602                           ;main.c: 122:     if (b==2){
 12603  000972  0E02               	movlw	2
 12604  000974  185A               	xorwf	_b,w,c
 12605  000976  105B               	iorwf	_b+1,w,c
 12606  000978  A4D8               	btfss	status,2,c
 12607  00097A  D0A4               	goto	i2l5424
 12608                           
 12609                           ;main.c: 123:         if (RB6 == 1){
 12610  00097C  BC81               	btfsc	3969,6,c	;volatile
 12611                           
 12612                           ;main.c: 124:             TMR1ON = 1;
 12613  00097E  80CD               	bsf	4045,0,c	;volatile
 12614                           
 12615                           ;main.c: 126:         if (RB6 == 0){
 12616                           
 12617                           ;main.c: 125:         }
 12618  000980  BC81               	btfsc	3969,6,c	;volatile
 12619  000982  D037               	goto	i2l5400
 12620                           
 12621                           ;main.c: 127:             TMR1ON = 0;
 12622  000984  90CD               	bcf	4045,0,c	;volatile
 12623                           
 12624                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 12625  000986  0EAE               	movlw	174
 12626  000988  6E13               	movwf	___fldiv@a,c
 12627  00098A  0E47               	movlw	71
 12628  00098C  6E14               	movwf	___fldiv@a+1,c
 12629  00098E  0E6B               	movlw	107
 12630  000990  6E15               	movwf	___fldiv@a+2,c
 12631  000992  0E42               	movlw	66
 12632  000994  6E16               	movwf	___fldiv@a+3,c
 12633  000996  50CF               	movf	4047,w,c	;volatile
 12634  000998  6E33               	movwf	(??_echo+1)& (0+255),c
 12635  00099A  6A32               	clrf	??_echo& (0+255),c
 12636  00099C  50CE               	movf	4046,w,c	;volatile
 12637  00099E  6E34               	movwf	(??_echo+2)& (0+255),c
 12638  0009A0  6A35               	clrf	(??_echo+3)& (0+255),c
 12639  0009A2  5032               	movf	??_echo,w,c
 12640  0009A4  1234               	iorwf	??_echo+2,f,c
 12641  0009A6  5033               	movf	??_echo+1,w,c
 12642  0009A8  1235               	iorwf	??_echo+3,f,c
 12643  0009AA  C034  F001         	movff	??_echo+2,___xxtofl@val
 12644  0009AE  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12645  0009B2  0E00               	movlw	0
 12646  0009B4  BE02               	btfsc	___xxtofl@val+1,7,c
 12647  0009B6  0EFF               	movlw	-1
 12648  0009B8  6E03               	movwf	___xxtofl@val+2,c
 12649  0009BA  6E04               	movwf	___xxtofl@val+3,c
 12650  0009BC  0E01               	movlw	1
 12651  0009BE  EC58  F014         	call	___xxtofl
 12652  0009C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12653  0009C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12654  0009CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12655  0009CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12656  0009D2  ECB0  F00C         	call	___fldiv	;wreg free
 12657  0009D6  C00F  F028         	movff	?___fldiv,___fltol@f1
 12658  0009DA  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12659  0009DE  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12660  0009E2  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12661  0009E6  ECAD  F017         	call	___fltol	;wreg free
 12662  0009EA  C028  F063         	movff	?___fltol,_a+2
 12663  0009EE  C029  F064         	movff	?___fltol+1,_a+3
 12664  0009F2                     i2l5400:
 12665                           
 12666                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 12667  0009F2  BE64               	btfsc	_a+3,7,c
 12668  0009F4  D067               	goto	i2l5424
 12669  0009F6  5064               	movf	_a+3,w,c
 12670  0009F8  E104               	bnz	i2u538_40
 12671  0009FA  0E02               	movlw	2
 12672  0009FC  5C63               	subwf	_a+2,w,c
 12673  0009FE  A0D8               	btfss	status,0,c
 12674  000A00  D061               	goto	i2l5424
 12675  000A02                     i2u538_40:
 12676  000A02  BE64               	btfsc	_a+3,7,c
 12677  000A04  D006               	goto	i2u539_40
 12678  000A06  5064               	movf	_a+3,w,c
 12679  000A08  E15D               	bnz	i2l5424
 12680  000A0A  0EC9               	movlw	201
 12681  000A0C  5C63               	subwf	_a+2,w,c
 12682  000A0E  B0D8               	btfsc	status,0,c
 12683  000A10  D059               	goto	i2l5424
 12684  000A12                     i2u539_40:
 12685                           
 12686                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 12687  000A12  0441               	decf	_sumf+1,w,c
 12688  000A14  B4D8               	btfsc	status,2,c
 12689  000A16  D01B               	goto	i2l5416
 12690  000A18  0102               	movlb	2	; () banked
 12691  000A1A  515C               	movf	(_dist_final+12)& (0+255),w,b
 12692  000A1C  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 12693  000A1E  B4D8               	btfsc	status,2,c
 12694  000A20  D016               	goto	i2l5416
 12695                           
 12696                           ; BSR set to: 2
 12697  000A22  515E               	movf	(_dist_final+14)& (0+255),w,b
 12698  000A24  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 12699  000A26  B4D8               	btfsc	status,2,c
 12700  000A28  D012               	goto	i2l5416
 12701                           
 12702                           ; BSR set to: 2
 12703  000A2A  5160               	movf	(_dist_final+16)& (0+255),w,b
 12704  000A2C  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 12705  000A2E  B4D8               	btfsc	status,2,c
 12706  000A30  D00E               	goto	i2l5416
 12707                           
 12708                           ; BSR set to: 2
 12709                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 12710  000A32  515E               	movf	(_dist_final+14)& (0+255),w,b
 12711  000A34  255C               	addwf	(_dist_final+12)& (0+255),w,b
 12712  000A36  6E32               	movwf	??_echo& (0+255),c
 12713  000A38  515F               	movf	(_dist_final+15)& (0+255),w,b
 12714  000A3A  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 12715  000A3C  6E33               	movwf	(??_echo+1)& (0+255),c
 12716  000A3E  5160               	movf	(_dist_final+16)& (0+255),w,b
 12717  000A40  2432               	addwf	??_echo,w,c
 12718  000A42  6E3A               	movwf	_sum+2,c
 12719  000A44  5161               	movf	(_dist_final+17)& (0+255),w,b
 12720  000A46  2033               	addwfc	??_echo+1,w,c
 12721  000A48  6E3B               	movwf	_sum+3,c
 12722                           
 12723                           ; BSR set to: 2
 12724                           ;main.c: 135:             sumf[1] = 1;
 12725  000A4A  0E01               	movlw	1
 12726  000A4C  6E41               	movwf	_sumf+1,c
 12727  000A4E                     i2l5416:
 12728                           
 12729                           ;main.c: 137:         if (sumf[1]){
 12730  000A4E  5041               	movf	_sumf+1,w,c
 12731  000A50  B4D8               	btfsc	status,2,c
 12732  000A52  D02B               	goto	i2l5422
 12733                           
 12734                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 12735  000A54  90D8               	bcf	status,0,c
 12736  000A56  3450               	rlcf	_meas,w,c	;volatile
 12737  000A58  6ED9               	movwf	fsr2l,c
 12738  000A5A  3451               	rlcf	_meas+1,w,c	;volatile
 12739  000A5C  6EDA               	movwf	fsr2h,c
 12740  000A5E  0E5C               	movlw	low (_dist_final+12)
 12741  000A60  26D9               	addwf	fsr2l,f,c
 12742  000A62  0E02               	movlw	high (_dist_final+12)
 12743  000A64  22DA               	addwfc	fsr2h,f,c
 12744  000A66  CFDE F032          	movff	postinc2,??_echo
 12745  000A6A  CFDD F033          	movff	postdec2,??_echo+1
 12746  000A6E  EE20  F03A         	lfsr	2,_sum+2
 12747  000A72  CFDE F034          	movff	postinc2,??_echo+2
 12748  000A76  CFDD F035          	movff	postdec2,??_echo+3
 12749  000A7A  5032               	movf	??_echo,w,c
 12750  000A7C  5E34               	subwf	??_echo+2,f,c
 12751  000A7E  5033               	movf	??_echo+1,w,c
 12752  000A80  5A35               	subwfb	??_echo+3,f,c
 12753  000A82  5063               	movf	_a+2,w,c
 12754  000A84  2434               	addwf	??_echo+2,w,c
 12755  000A86  6E3A               	movwf	_sum+2,c
 12756  000A88  5064               	movf	_a+3,w,c
 12757  000A8A  2035               	addwfc	??_echo+3,w,c
 12758  000A8C  6E3B               	movwf	_sum+3,c
 12759                           
 12760                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 12761  000A8E  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 12762  000A92  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 12763  000A96  0E00               	movlw	0
 12764  000A98  6E04               	movwf	i2___awdiv@divisor+1,c
 12765  000A9A  0E05               	movlw	5
 12766  000A9C  6E03               	movwf	i2___awdiv@divisor,c
 12767  000A9E  ECC9  F019         	call	i2___awdiv	;wreg free
 12768  000AA2  C001  F266         	movff	?i2___awdiv,_dist_final+22
 12769  000AA6  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 12770  000AAA                     i2l5422:
 12771                           
 12772                           ;main.c: 141:         dist_final[1][meas] = a[1];
 12773  000AAA  90D8               	bcf	status,0,c
 12774  000AAC  3450               	rlcf	_meas,w,c	;volatile
 12775  000AAE  6ED9               	movwf	fsr2l,c
 12776  000AB0  3451               	rlcf	_meas+1,w,c	;volatile
 12777  000AB2  6EDA               	movwf	fsr2h,c
 12778  000AB4  0E5C               	movlw	low (_dist_final+12)
 12779  000AB6  26D9               	addwf	fsr2l,f,c
 12780  000AB8  0E02               	movlw	high (_dist_final+12)
 12781  000ABA  22DA               	addwfc	fsr2h,f,c
 12782  000ABC  C063  FFDE         	movff	_a+2,postinc2
 12783  000AC0  C064  FFDD         	movff	_a+3,postdec2
 12784  000AC4                     i2l5424:
 12785                           
 12786                           ;main.c: 144:     if (b==3){
 12787  000AC4  0E03               	movlw	3
 12788  000AC6  185A               	xorwf	_b,w,c
 12789  000AC8  105B               	iorwf	_b+1,w,c
 12790  000ACA  A4D8               	btfss	status,2,c
 12791  000ACC  D0A4               	goto	i2l5458
 12792                           
 12793                           ;main.c: 145:         if (RB5 == 1){
 12794  000ACE  BA81               	btfsc	3969,5,c	;volatile
 12795                           
 12796                           ;main.c: 146:             TMR1ON = 1;
 12797  000AD0  80CD               	bsf	4045,0,c	;volatile
 12798                           
 12799                           ;main.c: 148:         if (RB5 == 0){
 12800                           
 12801                           ;main.c: 147:         }
 12802  000AD2  BA81               	btfsc	3969,5,c	;volatile
 12803  000AD4  D037               	goto	i2l5434
 12804                           
 12805                           ;main.c: 149:             TMR1ON = 0;
 12806  000AD6  90CD               	bcf	4045,0,c	;volatile
 12807                           
 12808                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 12809  000AD8  0EAE               	movlw	174
 12810  000ADA  6E13               	movwf	___fldiv@a,c
 12811  000ADC  0E47               	movlw	71
 12812  000ADE  6E14               	movwf	___fldiv@a+1,c
 12813  000AE0  0E6B               	movlw	107
 12814  000AE2  6E15               	movwf	___fldiv@a+2,c
 12815  000AE4  0E42               	movlw	66
 12816  000AE6  6E16               	movwf	___fldiv@a+3,c
 12817  000AE8  50CF               	movf	4047,w,c	;volatile
 12818  000AEA  6E33               	movwf	(??_echo+1)& (0+255),c
 12819  000AEC  6A32               	clrf	??_echo& (0+255),c
 12820  000AEE  50CE               	movf	4046,w,c	;volatile
 12821  000AF0  6E34               	movwf	(??_echo+2)& (0+255),c
 12822  000AF2  6A35               	clrf	(??_echo+3)& (0+255),c
 12823  000AF4  5032               	movf	??_echo,w,c
 12824  000AF6  1234               	iorwf	??_echo+2,f,c
 12825  000AF8  5033               	movf	??_echo+1,w,c
 12826  000AFA  1235               	iorwf	??_echo+3,f,c
 12827  000AFC  C034  F001         	movff	??_echo+2,___xxtofl@val
 12828  000B00  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12829  000B04  0E00               	movlw	0
 12830  000B06  BE02               	btfsc	___xxtofl@val+1,7,c
 12831  000B08  0EFF               	movlw	-1
 12832  000B0A  6E03               	movwf	___xxtofl@val+2,c
 12833  000B0C  6E04               	movwf	___xxtofl@val+3,c
 12834  000B0E  0E01               	movlw	1
 12835  000B10  EC58  F014         	call	___xxtofl
 12836  000B14  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12837  000B18  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12838  000B1C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12839  000B20  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12840  000B24  ECB0  F00C         	call	___fldiv	;wreg free
 12841  000B28  C00F  F028         	movff	?___fldiv,___fltol@f1
 12842  000B2C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12843  000B30  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12844  000B34  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12845  000B38  ECAD  F017         	call	___fltol	;wreg free
 12846  000B3C  C028  F065         	movff	?___fltol,_a+4
 12847  000B40  C029  F066         	movff	?___fltol+1,_a+5
 12848  000B44                     i2l5434:
 12849                           
 12850                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 12851  000B44  BE66               	btfsc	_a+5,7,c
 12852  000B46  D067               	goto	i2l5458
 12853  000B48  5066               	movf	_a+5,w,c
 12854  000B4A  E104               	bnz	i2u548_40
 12855  000B4C  0E02               	movlw	2
 12856  000B4E  5C65               	subwf	_a+4,w,c
 12857  000B50  A0D8               	btfss	status,0,c
 12858  000B52  D061               	goto	i2l5458
 12859  000B54                     i2u548_40:
 12860  000B54  BE66               	btfsc	_a+5,7,c
 12861  000B56  D006               	goto	i2u549_40
 12862  000B58  5066               	movf	_a+5,w,c
 12863  000B5A  E15D               	bnz	i2l5458
 12864  000B5C  0EC9               	movlw	201
 12865  000B5E  5C65               	subwf	_a+4,w,c
 12866  000B60  B0D8               	btfsc	status,0,c
 12867  000B62  D059               	goto	i2l5458
 12868  000B64                     i2u549_40:
 12869                           
 12870                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 12871  000B64  0442               	decf	_sumf+2,w,c
 12872  000B66  B4D8               	btfsc	status,2,c
 12873  000B68  D01B               	goto	i2l5450
 12874  000B6A  0102               	movlb	2	; () banked
 12875  000B6C  5168               	movf	(_dist_final+24)& (0+255),w,b
 12876  000B6E  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 12877  000B70  B4D8               	btfsc	status,2,c
 12878  000B72  D016               	goto	i2l5450
 12879                           
 12880                           ; BSR set to: 2
 12881  000B74  516A               	movf	(_dist_final+26)& (0+255),w,b
 12882  000B76  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 12883  000B78  B4D8               	btfsc	status,2,c
 12884  000B7A  D012               	goto	i2l5450
 12885                           
 12886                           ; BSR set to: 2
 12887  000B7C  516C               	movf	(_dist_final+28)& (0+255),w,b
 12888  000B7E  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 12889  000B80  B4D8               	btfsc	status,2,c
 12890  000B82  D00E               	goto	i2l5450
 12891                           
 12892                           ; BSR set to: 2
 12893                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 12894  000B84  516A               	movf	(_dist_final+26)& (0+255),w,b
 12895  000B86  2568               	addwf	(_dist_final+24)& (0+255),w,b
 12896  000B88  6E32               	movwf	??_echo& (0+255),c
 12897  000B8A  516B               	movf	(_dist_final+27)& (0+255),w,b
 12898  000B8C  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 12899  000B8E  6E33               	movwf	(??_echo+1)& (0+255),c
 12900  000B90  516C               	movf	(_dist_final+28)& (0+255),w,b
 12901  000B92  2432               	addwf	??_echo,w,c
 12902  000B94  6E3C               	movwf	_sum+4,c
 12903  000B96  516D               	movf	(_dist_final+29)& (0+255),w,b
 12904  000B98  2033               	addwfc	??_echo+1,w,c
 12905  000B9A  6E3D               	movwf	_sum+5,c
 12906                           
 12907                           ; BSR set to: 2
 12908                           ;main.c: 157:             sumf[2] = 1;
 12909  000B9C  0E01               	movlw	1
 12910  000B9E  6E42               	movwf	_sumf+2,c
 12911  000BA0                     i2l5450:
 12912                           
 12913                           ;main.c: 159:         if (sumf[2]){
 12914  000BA0  5042               	movf	_sumf+2,w,c
 12915  000BA2  B4D8               	btfsc	status,2,c
 12916  000BA4  D02B               	goto	i2l5456
 12917                           
 12918                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 12919  000BA6  90D8               	bcf	status,0,c
 12920  000BA8  3450               	rlcf	_meas,w,c	;volatile
 12921  000BAA  6ED9               	movwf	fsr2l,c
 12922  000BAC  3451               	rlcf	_meas+1,w,c	;volatile
 12923  000BAE  6EDA               	movwf	fsr2h,c
 12924  000BB0  0E68               	movlw	low (_dist_final+24)
 12925  000BB2  26D9               	addwf	fsr2l,f,c
 12926  000BB4  0E02               	movlw	high (_dist_final+24)
 12927  000BB6  22DA               	addwfc	fsr2h,f,c
 12928  000BB8  CFDE F032          	movff	postinc2,??_echo
 12929  000BBC  CFDD F033          	movff	postdec2,??_echo+1
 12930  000BC0  EE20  F03C         	lfsr	2,_sum+4
 12931  000BC4  CFDE F034          	movff	postinc2,??_echo+2
 12932  000BC8  CFDD F035          	movff	postdec2,??_echo+3
 12933  000BCC  5032               	movf	??_echo,w,c
 12934  000BCE  5E34               	subwf	??_echo+2,f,c
 12935  000BD0  5033               	movf	??_echo+1,w,c
 12936  000BD2  5A35               	subwfb	??_echo+3,f,c
 12937  000BD4  5065               	movf	_a+4,w,c
 12938  000BD6  2434               	addwf	??_echo+2,w,c
 12939  000BD8  6E3C               	movwf	_sum+4,c
 12940  000BDA  5066               	movf	_a+5,w,c
 12941  000BDC  2035               	addwfc	??_echo+3,w,c
 12942  000BDE  6E3D               	movwf	_sum+5,c
 12943                           
 12944                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 12945  000BE0  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 12946  000BE4  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 12947  000BE8  0E00               	movlw	0
 12948  000BEA  6E04               	movwf	i2___awdiv@divisor+1,c
 12949  000BEC  0E05               	movlw	5
 12950  000BEE  6E03               	movwf	i2___awdiv@divisor,c
 12951  000BF0  ECC9  F019         	call	i2___awdiv	;wreg free
 12952  000BF4  C001  F272         	movff	?i2___awdiv,_dist_final+34
 12953  000BF8  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 12954  000BFC                     i2l5456:
 12955                           
 12956                           ;main.c: 163:         dist_final[2][meas] = a[2];
 12957  000BFC  90D8               	bcf	status,0,c
 12958  000BFE  3450               	rlcf	_meas,w,c	;volatile
 12959  000C00  6ED9               	movwf	fsr2l,c
 12960  000C02  3451               	rlcf	_meas+1,w,c	;volatile
 12961  000C04  6EDA               	movwf	fsr2h,c
 12962  000C06  0E68               	movlw	low (_dist_final+24)
 12963  000C08  26D9               	addwf	fsr2l,f,c
 12964  000C0A  0E02               	movlw	high (_dist_final+24)
 12965  000C0C  22DA               	addwfc	fsr2h,f,c
 12966  000C0E  C065  FFDE         	movff	_a+4,postinc2
 12967  000C12  C066  FFDD         	movff	_a+5,postdec2
 12968  000C16                     i2l5458:
 12969                           
 12970                           ;main.c: 166:     if (b==4){
 12971  000C16  0E04               	movlw	4
 12972  000C18  185A               	xorwf	_b,w,c
 12973  000C1A  105B               	iorwf	_b+1,w,c
 12974  000C1C  A4D8               	btfss	status,2,c
 12975  000C1E  0012               	return	
 12976                           
 12977                           ;main.c: 167:         if (RB4 == 1){
 12978  000C20  B881               	btfsc	3969,4,c	;volatile
 12979                           
 12980                           ;main.c: 168:             TMR1ON = 1;
 12981  000C22  80CD               	bsf	4045,0,c	;volatile
 12982                           
 12983                           ;main.c: 170:         if (RB4 == 0){
 12984                           
 12985                           ;main.c: 169:         }
 12986  000C24  B881               	btfsc	3969,4,c	;volatile
 12987  000C26  D037               	goto	i2l5468
 12988                           
 12989                           ;main.c: 171:             TMR1ON = 0;
 12990  000C28  90CD               	bcf	4045,0,c	;volatile
 12991                           
 12992                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 12993  000C2A  0EAE               	movlw	174
 12994  000C2C  6E13               	movwf	___fldiv@a,c
 12995  000C2E  0E47               	movlw	71
 12996  000C30  6E14               	movwf	___fldiv@a+1,c
 12997  000C32  0E6B               	movlw	107
 12998  000C34  6E15               	movwf	___fldiv@a+2,c
 12999  000C36  0E42               	movlw	66
 13000  000C38  6E16               	movwf	___fldiv@a+3,c
 13001  000C3A  50CF               	movf	4047,w,c	;volatile
 13002  000C3C  6E33               	movwf	(??_echo+1)& (0+255),c
 13003  000C3E  6A32               	clrf	??_echo& (0+255),c
 13004  000C40  50CE               	movf	4046,w,c	;volatile
 13005  000C42  6E34               	movwf	(??_echo+2)& (0+255),c
 13006  000C44  6A35               	clrf	(??_echo+3)& (0+255),c
 13007  000C46  5032               	movf	??_echo,w,c
 13008  000C48  1234               	iorwf	??_echo+2,f,c
 13009  000C4A  5033               	movf	??_echo+1,w,c
 13010  000C4C  1235               	iorwf	??_echo+3,f,c
 13011  000C4E  C034  F001         	movff	??_echo+2,___xxtofl@val
 13012  000C52  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13013  000C56  0E00               	movlw	0
 13014  000C58  BE02               	btfsc	___xxtofl@val+1,7,c
 13015  000C5A  0EFF               	movlw	-1
 13016  000C5C  6E03               	movwf	___xxtofl@val+2,c
 13017  000C5E  6E04               	movwf	___xxtofl@val+3,c
 13018  000C60  0E01               	movlw	1
 13019  000C62  EC58  F014         	call	___xxtofl
 13020  000C66  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13021  000C6A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13022  000C6E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13023  000C72  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13024  000C76  ECB0  F00C         	call	___fldiv	;wreg free
 13025  000C7A  C00F  F028         	movff	?___fldiv,___fltol@f1
 13026  000C7E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13027  000C82  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13028  000C86  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13029  000C8A  ECAD  F017         	call	___fltol	;wreg free
 13030  000C8E  C028  F067         	movff	?___fltol,_a+6
 13031  000C92  C029  F068         	movff	?___fltol+1,_a+7
 13032  000C96                     i2l5468:
 13033                           
 13034                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13035  000C96  BE68               	btfsc	_a+7,7,c
 13036  000C98  0012               	return	
 13037  000C9A  5068               	movf	_a+7,w,c
 13038  000C9C  E104               	bnz	i2u558_40
 13039  000C9E  0E02               	movlw	2
 13040  000CA0  5C67               	subwf	_a+6,w,c
 13041  000CA2  A0D8               	btfss	status,0,c
 13042  000CA4  0012               	return	
 13043  000CA6                     i2u558_40:
 13044  000CA6  BE68               	btfsc	_a+7,7,c
 13045  000CA8  D006               	goto	i2u559_40
 13046  000CAA  5068               	movf	_a+7,w,c
 13047  000CAC  E15D               	bnz	i2l392
 13048  000CAE  0EC9               	movlw	201
 13049  000CB0  5C67               	subwf	_a+6,w,c
 13050  000CB2  B0D8               	btfsc	status,0,c
 13051  000CB4  0012               	return	
 13052  000CB6                     i2u559_40:
 13053                           
 13054                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13055  000CB6  0443               	decf	_sumf+3,w,c
 13056  000CB8  B4D8               	btfsc	status,2,c
 13057  000CBA  D01B               	goto	i2l5484
 13058  000CBC  0102               	movlb	2	; () banked
 13059  000CBE  5174               	movf	(_dist_final+36)& (0+255),w,b
 13060  000CC0  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13061  000CC2  B4D8               	btfsc	status,2,c
 13062  000CC4  D016               	goto	i2l5484
 13063                           
 13064                           ; BSR set to: 2
 13065  000CC6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13066  000CC8  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13067  000CCA  B4D8               	btfsc	status,2,c
 13068  000CCC  D012               	goto	i2l5484
 13069                           
 13070                           ; BSR set to: 2
 13071  000CCE  5178               	movf	(_dist_final+40)& (0+255),w,b
 13072  000CD0  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13073  000CD2  B4D8               	btfsc	status,2,c
 13074  000CD4  D00E               	goto	i2l5484
 13075                           
 13076                           ; BSR set to: 2
 13077                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13078  000CD6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13079  000CD8  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13080  000CDA  6E32               	movwf	??_echo& (0+255),c
 13081  000CDC  5177               	movf	(_dist_final+39)& (0+255),w,b
 13082  000CDE  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13083  000CE0  6E33               	movwf	(??_echo+1)& (0+255),c
 13084  000CE2  5178               	movf	(_dist_final+40)& (0+255),w,b
 13085  000CE4  2432               	addwf	??_echo,w,c
 13086  000CE6  6E3E               	movwf	_sum+6,c
 13087  000CE8  5179               	movf	(_dist_final+41)& (0+255),w,b
 13088  000CEA  2033               	addwfc	??_echo+1,w,c
 13089  000CEC  6E3F               	movwf	_sum+7,c
 13090                           
 13091                           ; BSR set to: 2
 13092                           ;main.c: 179:             sumf[3] = 1;
 13093  000CEE  0E01               	movlw	1
 13094  000CF0  6E43               	movwf	_sumf+3,c
 13095  000CF2                     i2l5484:
 13096                           
 13097                           ;main.c: 181:         if (sumf[3]){
 13098  000CF2  5043               	movf	_sumf+3,w,c
 13099  000CF4  B4D8               	btfsc	status,2,c
 13100  000CF6  D02B               	goto	i2l5490
 13101                           
 13102                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13103  000CF8  90D8               	bcf	status,0,c
 13104  000CFA  3450               	rlcf	_meas,w,c	;volatile
 13105  000CFC  6ED9               	movwf	fsr2l,c
 13106  000CFE  3451               	rlcf	_meas+1,w,c	;volatile
 13107  000D00  6EDA               	movwf	fsr2h,c
 13108  000D02  0E74               	movlw	low (_dist_final+36)
 13109  000D04  26D9               	addwf	fsr2l,f,c
 13110  000D06  0E02               	movlw	high (_dist_final+36)
 13111  000D08  22DA               	addwfc	fsr2h,f,c
 13112  000D0A  CFDE F032          	movff	postinc2,??_echo
 13113  000D0E  CFDD F033          	movff	postdec2,??_echo+1
 13114  000D12  EE20  F03E         	lfsr	2,_sum+6
 13115  000D16  CFDE F034          	movff	postinc2,??_echo+2
 13116  000D1A  CFDD F035          	movff	postdec2,??_echo+3
 13117  000D1E  5032               	movf	??_echo,w,c
 13118  000D20  5E34               	subwf	??_echo+2,f,c
 13119  000D22  5033               	movf	??_echo+1,w,c
 13120  000D24  5A35               	subwfb	??_echo+3,f,c
 13121  000D26  5067               	movf	_a+6,w,c
 13122  000D28  2434               	addwf	??_echo+2,w,c
 13123  000D2A  6E3E               	movwf	_sum+6,c
 13124  000D2C  5068               	movf	_a+7,w,c
 13125  000D2E  2035               	addwfc	??_echo+3,w,c
 13126  000D30  6E3F               	movwf	_sum+7,c
 13127                           
 13128                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13129  000D32  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13130  000D36  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13131  000D3A  0E00               	movlw	0
 13132  000D3C  6E04               	movwf	i2___awdiv@divisor+1,c
 13133  000D3E  0E05               	movlw	5
 13134  000D40  6E03               	movwf	i2___awdiv@divisor,c
 13135  000D42  ECC9  F019         	call	i2___awdiv	;wreg free
 13136  000D46  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13137  000D4A  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13138  000D4E                     i2l5490:
 13139                           
 13140                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13141  000D4E  90D8               	bcf	status,0,c
 13142  000D50  3450               	rlcf	_meas,w,c	;volatile
 13143  000D52  6ED9               	movwf	fsr2l,c
 13144  000D54  3451               	rlcf	_meas+1,w,c	;volatile
 13145  000D56  6EDA               	movwf	fsr2h,c
 13146  000D58  0E74               	movlw	low (_dist_final+36)
 13147  000D5A  26D9               	addwf	fsr2l,f,c
 13148  000D5C  0E02               	movlw	high (_dist_final+36)
 13149  000D5E  22DA               	addwfc	fsr2h,f,c
 13150  000D60  C067  FFDE         	movff	_a+6,postinc2
 13151  000D64  C068  FFDD         	movff	_a+7,postdec2
 13152  000D68                     i2l392:
 13153  000D68  0012               	return		;funcret
 13154  000D6A                     __end_of_echo:
 13155                           	opt callstack 0
 13156                           
 13157 ;; *************** function i2___awdiv *****************
 13158 ;; Defined at:
 13159 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;  dividend        2    0[COMRAM] int 
 13162 ;;  divisor         2    2[COMRAM] int 
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;  __awdiv         2    6[COMRAM] int 
 13165 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13166 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13167 ;; Return value:  Size  Location     Type
 13168 ;;                  2    0[COMRAM] int 
 13169 ;; Registers used:
 13170 ;;		wreg, status,2, status,0
 13171 ;; Tracked objects:
 13172 ;;		On entry : 0/0
 13173 ;;		On exit  : 0/0
 13174 ;;		Unchanged: 0/0
 13175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13177 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13179 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13180 ;;Total ram usage:        8 bytes
 13181 ;; Hardware stack levels used:    1
 13182 ;; This function calls:
 13183 ;;		Nothing
 13184 ;; This function is called by:
 13185 ;;		_echo
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           	psect	text56
 13190  003392                     __ptext56:
 13191                           	opt callstack 0
 13192  003392                     i2___awdiv:
 13193                           	opt callstack 14
 13194                           
 13195                           ;incstack = 0
 13196  003392  0E00               	movlw	0
 13197  003394  6E06               	movwf	i2___awdiv@sign,c
 13198  003396  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13199  003398  D006               	goto	i2l5226
 13200  00339A  6C03               	negf	i2___awdiv@divisor,c
 13201  00339C  1E04               	comf	i2___awdiv@divisor+1,f,c
 13202  00339E  B0D8               	btfsc	status,0,c
 13203  0033A0  2A04               	incf	i2___awdiv@divisor+1,f,c
 13204  0033A2  0E01               	movlw	1
 13205  0033A4  6E06               	movwf	i2___awdiv@sign,c
 13206  0033A6                     i2l5226:
 13207  0033A6  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13208  0033A8  D006               	goto	i2l5232
 13209  0033AA  6C01               	negf	i2___awdiv@dividend,c
 13210  0033AC  1E02               	comf	i2___awdiv@dividend+1,f,c
 13211  0033AE  B0D8               	btfsc	status,0,c
 13212  0033B0  2A02               	incf	i2___awdiv@dividend+1,f,c
 13213  0033B2  0E01               	movlw	1
 13214  0033B4  1A06               	xorwf	i2___awdiv@sign,f,c
 13215  0033B6                     i2l5232:
 13216  0033B6  0E00               	movlw	0
 13217  0033B8  6E08               	movwf	i2___awdiv@quotient+1,c
 13218  0033BA  0E00               	movlw	0
 13219  0033BC  6E07               	movwf	i2___awdiv@quotient,c
 13220  0033BE  5003               	movf	i2___awdiv@divisor,w,c
 13221  0033C0  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13222  0033C2  B4D8               	btfsc	status,2,c
 13223  0033C4  D01C               	goto	i2l5254
 13224  0033C6  0E01               	movlw	1
 13225  0033C8  6E05               	movwf	i2___awdiv@counter,c
 13226  0033CA  D004               	goto	i2l5240
 13227  0033CC                     i2l5238:
 13228  0033CC  90D8               	bcf	status,0,c
 13229  0033CE  3603               	rlcf	i2___awdiv@divisor,f,c
 13230  0033D0  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13231  0033D2  2A05               	incf	i2___awdiv@counter,f,c
 13232  0033D4                     i2l5240:
 13233  0033D4  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13234  0033D6  D7FA               	goto	i2l5238
 13235  0033D8                     i2u520_40:
 13236  0033D8  90D8               	bcf	status,0,c
 13237  0033DA  3607               	rlcf	i2___awdiv@quotient,f,c
 13238  0033DC  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13239  0033DE  5003               	movf	i2___awdiv@divisor,w,c
 13240  0033E0  5C01               	subwf	i2___awdiv@dividend,w,c
 13241  0033E2  5004               	movf	i2___awdiv@divisor+1,w,c
 13242  0033E4  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13243  0033E6  A0D8               	btfss	status,0,c
 13244  0033E8  D005               	goto	i2l5250
 13245  0033EA  5003               	movf	i2___awdiv@divisor,w,c
 13246  0033EC  5E01               	subwf	i2___awdiv@dividend,f,c
 13247  0033EE  5004               	movf	i2___awdiv@divisor+1,w,c
 13248  0033F0  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13249  0033F2  8007               	bsf	i2___awdiv@quotient,0,c
 13250  0033F4                     i2l5250:
 13251  0033F4  90D8               	bcf	status,0,c
 13252  0033F6  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13253  0033F8  3203               	rrcf	i2___awdiv@divisor,f,c
 13254  0033FA  2E05               	decfsz	i2___awdiv@counter,f,c
 13255  0033FC  D7ED               	goto	i2u520_40
 13256  0033FE                     i2l5254:
 13257  0033FE  5006               	movf	i2___awdiv@sign,w,c
 13258  003400  B4D8               	btfsc	status,2,c
 13259  003402  D004               	goto	i2l5258
 13260  003404  6C07               	negf	i2___awdiv@quotient,c
 13261  003406  1E08               	comf	i2___awdiv@quotient+1,f,c
 13262  003408  B0D8               	btfsc	status,0,c
 13263  00340A  2A08               	incf	i2___awdiv@quotient+1,f,c
 13264  00340C                     i2l5258:
 13265  00340C  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13266  003410  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13267  003414  0012               	return		;funcret
 13268  003416                     __end_ofi2___awdiv:
 13269                           	opt callstack 0
 13270                           
 13271 ;; *************** function ___xxtofl *****************
 13272 ;; Defined at:
 13273 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13274 ;; Parameters:    Size  Location     Type
 13275 ;;  sign            1    wreg     unsigned char 
 13276 ;;  val             4    0[COMRAM] long 
 13277 ;; Auto vars:     Size  Location     Type
 13278 ;;  sign            1    8[COMRAM] unsigned char 
 13279 ;;  arg             4   10[COMRAM] unsigned long 
 13280 ;;  exp             1    9[COMRAM] unsigned char 
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  4    0[COMRAM] unsigned char 
 13283 ;; Registers used:
 13284 ;;		wreg, status,2, status,0
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13291 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13292 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13293 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13294 ;;Total ram usage:       14 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; This function calls:
 13297 ;;		Nothing
 13298 ;; This function is called by:
 13299 ;;		_echo
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           	psect	text57
 13304  0028B0                     __ptext57:
 13305                           	opt callstack 0
 13306  0028B0                     ___xxtofl:
 13307                           	opt callstack 14
 13308                           
 13309                           ;incstack = 0
 13310                           ;___xxtofl@sign stored from wreg
 13311  0028B0  6E09               	movwf	___xxtofl@sign,c
 13312  0028B2  5009               	movf	___xxtofl@sign,w,c
 13313  0028B4  A4D8               	btfss	status,2,c
 13314  0028B6  AE04               	btfss	___xxtofl@val+3,7,c
 13315  0028B8  D01A               	goto	i2l1338
 13316  0028BA  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13317  0028BE  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13318  0028C2  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13319  0028C6  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13320  0028CA  1E05               	comf	??___xxtofl,f,c
 13321  0028CC  1E06               	comf	??___xxtofl+1,f,c
 13322  0028CE  1E07               	comf	??___xxtofl+2,f,c
 13323  0028D0  1E08               	comf	??___xxtofl+3,f,c
 13324  0028D2  2A05               	incf	??___xxtofl,f,c
 13325  0028D4  0E00               	movlw	0
 13326  0028D6  2206               	addwfc	??___xxtofl+1,f,c
 13327  0028D8  2207               	addwfc	??___xxtofl+2,f,c
 13328  0028DA  2208               	addwfc	??___xxtofl+3,f,c
 13329  0028DC  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13330  0028E0  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13331  0028E4  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13332  0028E8  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13333  0028EC  D008               	goto	i2l5178
 13334  0028EE                     i2l1338:
 13335  0028EE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13336  0028F2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13337  0028F6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13338  0028FA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13339  0028FE                     i2l5178:
 13340  0028FE  5001               	movf	___xxtofl@val,w,c
 13341  002900  1002               	iorwf	___xxtofl@val+1,w,c
 13342  002902  1003               	iorwf	___xxtofl@val+2,w,c
 13343  002904  1004               	iorwf	___xxtofl@val+3,w,c
 13344  002906  A4D8               	btfss	status,2,c
 13345  002908  D009               	goto	i2l5184
 13346  00290A  0E00               	movlw	0
 13347  00290C  6E01               	movwf	?___xxtofl,c
 13348  00290E  0E00               	movlw	0
 13349  002910  6E02               	movwf	?___xxtofl+1,c
 13350  002912  0E00               	movlw	0
 13351  002914  6E03               	movwf	?___xxtofl+2,c
 13352  002916  0E00               	movlw	0
 13353  002918  6E04               	movwf	?___xxtofl+3,c
 13354  00291A  0012               	return	
 13355  00291C                     i2l5184:
 13356  00291C  0E96               	movlw	150
 13357  00291E  6E0A               	movwf	___xxtofl@exp,c
 13358  002920  D006               	goto	i2l5188
 13359  002922                     i2l5186:
 13360  002922  2A0A               	incf	___xxtofl@exp,f,c
 13361  002924  90D8               	bcf	status,0,c
 13362  002926  320E               	rrcf	___xxtofl@arg+3,f,c
 13363  002928  320D               	rrcf	___xxtofl@arg+2,f,c
 13364  00292A  320C               	rrcf	___xxtofl@arg+1,f,c
 13365  00292C  320B               	rrcf	___xxtofl@arg,f,c
 13366  00292E                     i2l5188:
 13367  00292E  0E00               	movlw	0
 13368  002930  140B               	andwf	___xxtofl@arg,w,c
 13369  002932  6E05               	movwf	??___xxtofl& (0+255),c
 13370  002934  0E00               	movlw	0
 13371  002936  140C               	andwf	___xxtofl@arg+1,w,c
 13372  002938  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13373  00293A  0E00               	movlw	0
 13374  00293C  140D               	andwf	___xxtofl@arg+2,w,c
 13375  00293E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13376  002940  0EFE               	movlw	254
 13377  002942  140E               	andwf	___xxtofl@arg+3,w,c
 13378  002944  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13379  002946  5005               	movf	??___xxtofl,w,c
 13380  002948  1006               	iorwf	??___xxtofl+1,w,c
 13381  00294A  1007               	iorwf	??___xxtofl+2,w,c
 13382  00294C  1008               	iorwf	??___xxtofl+3,w,c
 13383  00294E  B4D8               	btfsc	status,2,c
 13384  002950  D00D               	goto	i2l1345
 13385  002952  D7E7               	goto	i2l5186
 13386  002954                     i2l5190:
 13387  002954  2A0A               	incf	___xxtofl@exp,f,c
 13388  002956  0E01               	movlw	1
 13389  002958  260B               	addwf	___xxtofl@arg,f,c
 13390  00295A  0E00               	movlw	0
 13391  00295C  220C               	addwfc	___xxtofl@arg+1,f,c
 13392  00295E  220D               	addwfc	___xxtofl@arg+2,f,c
 13393  002960  220E               	addwfc	___xxtofl@arg+3,f,c
 13394  002962  90D8               	bcf	status,0,c
 13395  002964  320E               	rrcf	___xxtofl@arg+3,f,c
 13396  002966  320D               	rrcf	___xxtofl@arg+2,f,c
 13397  002968  320C               	rrcf	___xxtofl@arg+1,f,c
 13398  00296A  320B               	rrcf	___xxtofl@arg,f,c
 13399  00296C                     i2l1345:
 13400  00296C  0E00               	movlw	0
 13401  00296E  140B               	andwf	___xxtofl@arg,w,c
 13402  002970  6E05               	movwf	??___xxtofl& (0+255),c
 13403  002972  0E00               	movlw	0
 13404  002974  140C               	andwf	___xxtofl@arg+1,w,c
 13405  002976  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13406  002978  0E00               	movlw	0
 13407  00297A  140D               	andwf	___xxtofl@arg+2,w,c
 13408  00297C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13409  00297E  0EFF               	movlw	255
 13410  002980  140E               	andwf	___xxtofl@arg+3,w,c
 13411  002982  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13412  002984  5005               	movf	??___xxtofl,w,c
 13413  002986  1006               	iorwf	??___xxtofl+1,w,c
 13414  002988  1007               	iorwf	??___xxtofl+2,w,c
 13415  00298A  1008               	iorwf	??___xxtofl+3,w,c
 13416  00298C  B4D8               	btfsc	status,2,c
 13417  00298E  D007               	goto	i2l5198
 13418  002990  D7E1               	goto	i2l5190
 13419  002992                     i2l5196:
 13420  002992  060A               	decf	___xxtofl@exp,f,c
 13421  002994  90D8               	bcf	status,0,c
 13422  002996  360B               	rlcf	___xxtofl@arg,f,c
 13423  002998  360C               	rlcf	___xxtofl@arg+1,f,c
 13424  00299A  360D               	rlcf	___xxtofl@arg+2,f,c
 13425  00299C  360E               	rlcf	___xxtofl@arg+3,f,c
 13426  00299E                     i2l5198:
 13427  00299E  BE0D               	btfsc	___xxtofl@arg+2,7,c
 13428  0029A0  D003               	goto	i2u513_40
 13429  0029A2  0E02               	movlw	2
 13430  0029A4  600A               	cpfslt	___xxtofl@exp,c
 13431  0029A6  D7F5               	goto	i2l5196
 13432  0029A8                     i2u513_40:
 13433  0029A8  A00A               	btfss	___xxtofl@exp,0,c
 13434  0029AA  9E0D               	bcf	___xxtofl@arg+2,7,c
 13435  0029AC  90D8               	bcf	status,0,c
 13436  0029AE  320A               	rrcf	___xxtofl@exp,f,c
 13437  0029B0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13438  0029B4  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 13439  0029B6  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 13440  0029B8  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 13441  0029BA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13442  0029BE  6A07               	clrf	??___xxtofl+2,c
 13443  0029C0  6A06               	clrf	??___xxtofl+1,c
 13444  0029C2  6A05               	clrf	??___xxtofl,c
 13445  0029C4  5005               	movf	??___xxtofl,w,c
 13446  0029C6  120B               	iorwf	___xxtofl@arg,f,c
 13447  0029C8  5006               	movf	??___xxtofl+1,w,c
 13448  0029CA  120C               	iorwf	___xxtofl@arg+1,f,c
 13449  0029CC  5007               	movf	??___xxtofl+2,w,c
 13450  0029CE  120D               	iorwf	___xxtofl@arg+2,f,c
 13451  0029D0  5008               	movf	??___xxtofl+3,w,c
 13452  0029D2  120E               	iorwf	___xxtofl@arg+3,f,c
 13453  0029D4  5009               	movf	___xxtofl@sign,w,c
 13454  0029D6  A4D8               	btfss	status,2,c
 13455  0029D8  AE04               	btfss	___xxtofl@val+3,7,c
 13456  0029DA  D001               	goto	i2l5214
 13457  0029DC  8E0E               	bsf	___xxtofl@arg+3,7,c
 13458  0029DE                     i2l5214:
 13459  0029DE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13460  0029E2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13461  0029E6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13462  0029EA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13463  0029EE  0012               	return		;funcret
 13464  0029F0                     __end_of___xxtofl:
 13465                           	opt callstack 0
 13466                           
 13467 ;; *************** function ___fltol *****************
 13468 ;; Defined at:
 13469 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13470 ;; Parameters:    Size  Location     Type
 13471 ;;  f1              4   39[COMRAM] unsigned char 
 13472 ;; Auto vars:     Size  Location     Type
 13473 ;;  exp1            1   48[COMRAM] unsigned char 
 13474 ;;  sign1           1   47[COMRAM] unsigned char 
 13475 ;; Return value:  Size  Location     Type
 13476 ;;                  4   39[COMRAM] long 
 13477 ;; Registers used:
 13478 ;;		wreg, status,2, status,0
 13479 ;; Tracked objects:
 13480 ;;		On entry : 0/0
 13481 ;;		On exit  : 0/0
 13482 ;;		Unchanged: 0/0
 13483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13487 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13488 ;;Total ram usage:       10 bytes
 13489 ;; Hardware stack levels used:    1
 13490 ;; This function calls:
 13491 ;;		Nothing
 13492 ;; This function is called by:
 13493 ;;		_echo
 13494 ;; This function uses a non-reentrant model
 13495 ;;
 13496                           
 13497                           	psect	text58
 13498  002F5A                     __ptext58:
 13499                           	opt callstack 0
 13500  002F5A                     ___fltol:
 13501                           	opt callstack 14
 13502                           
 13503                           ;incstack = 0
 13504  002F5A  342A               	rlcf	___fltol@f1+2,w,c
 13505  002F5C  342B               	rlcf	___fltol@f1+3,w,c
 13506  002F5E  6E31               	movwf	___fltol@exp1,c
 13507  002F60  5031               	movf	___fltol@exp1,w,c
 13508  002F62  A4D8               	btfss	status,2,c
 13509  002F64  D009               	goto	i2l5118
 13510  002F66                     i2u497_40:
 13511  002F66  0E00               	movlw	0
 13512  002F68  6E28               	movwf	?___fltol,c
 13513  002F6A  0E00               	movlw	0
 13514  002F6C  6E29               	movwf	?___fltol+1,c
 13515  002F6E  0E00               	movlw	0
 13516  002F70  6E2A               	movwf	?___fltol+2,c
 13517  002F72  0E00               	movlw	0
 13518  002F74  6E2B               	movwf	?___fltol+3,c
 13519  002F76  0012               	return	
 13520  002F78                     i2l5118:
 13521  002F78  C028  F02C         	movff	___fltol@f1,??___fltol
 13522  002F7C  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 13523  002F80  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 13524  002F84  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 13525  002F88  0E20               	movlw	32
 13526  002F8A  D005               	goto	i2u498_40
 13527  002F8C                     i2u498_45:
 13528  002F8C  90D8               	bcf	status,0,c
 13529  002F8E  322F               	rrcf	??___fltol+3,f,c
 13530  002F90  322E               	rrcf	??___fltol+2,f,c
 13531  002F92  322D               	rrcf	??___fltol+1,f,c
 13532  002F94  322C               	rrcf	??___fltol,f,c
 13533  002F96                     i2u498_40:
 13534  002F96  2EE8               	decfsz	wreg,f,c
 13535  002F98  D7F9               	goto	i2u498_45
 13536  002F9A  502C               	movf	??___fltol,w,c
 13537  002F9C  6E30               	movwf	___fltol@sign1,c
 13538  002F9E  8E2A               	bsf	___fltol@f1+2,7,c
 13539  002FA0  0EFF               	movlw	255
 13540  002FA2  1628               	andwf	___fltol@f1,f,c
 13541  002FA4  0EFF               	movlw	255
 13542  002FA6  1629               	andwf	___fltol@f1+1,f,c
 13543  002FA8  0EFF               	movlw	255
 13544  002FAA  162A               	andwf	___fltol@f1+2,f,c
 13545  002FAC  0E00               	movlw	0
 13546  002FAE  162B               	andwf	___fltol@f1+3,f,c
 13547  002FB0  0E96               	movlw	150
 13548  002FB2  5E31               	subwf	___fltol@exp1,f,c
 13549  002FB4  AE31               	btfss	___fltol@exp1,7,c
 13550  002FB6  D00D               	goto	i2l5138
 13551  002FB8  5031               	movf	___fltol@exp1,w,c
 13552  002FBA  0A80               	xorlw	128
 13553  002FBC  0F97               	addlw	151
 13554  002FBE  A0D8               	btfss	status,0,c
 13555  002FC0  D7D2               	goto	i2u497_40
 13556  002FC2                     i2l5134:
 13557  002FC2  90D8               	bcf	status,0,c
 13558  002FC4  322B               	rrcf	___fltol@f1+3,f,c
 13559  002FC6  322A               	rrcf	___fltol@f1+2,f,c
 13560  002FC8  3229               	rrcf	___fltol@f1+1,f,c
 13561  002FCA  3228               	rrcf	___fltol@f1,f,c
 13562  002FCC  3E31               	incfsz	___fltol@exp1,f,c
 13563  002FCE  D7F9               	goto	i2l5134
 13564  002FD0  D00D               	goto	i2u502_40
 13565  002FD2                     i2l5138:
 13566  002FD2  0E1F               	movlw	31
 13567  002FD4  6431               	cpfsgt	___fltol@exp1,c
 13568  002FD6  D007               	goto	i2l5146
 13569  002FD8  D7C6               	goto	i2u497_40
 13570  002FDA                     i2l5144:
 13571  002FDA  90D8               	bcf	status,0,c
 13572  002FDC  3628               	rlcf	___fltol@f1,f,c
 13573  002FDE  3629               	rlcf	___fltol@f1+1,f,c
 13574  002FE0  362A               	rlcf	___fltol@f1+2,f,c
 13575  002FE2  362B               	rlcf	___fltol@f1+3,f,c
 13576  002FE4  0631               	decf	___fltol@exp1,f,c
 13577  002FE6                     i2l5146:
 13578  002FE6  5031               	movf	___fltol@exp1,w,c
 13579  002FE8  A4D8               	btfss	status,2,c
 13580  002FEA  D7F7               	goto	i2l5144
 13581  002FEC                     i2u502_40:
 13582  002FEC  5030               	movf	___fltol@sign1,w,c
 13583  002FEE  B4D8               	btfsc	status,2,c
 13584  002FF0  D008               	goto	i2l5152
 13585  002FF2  1E2B               	comf	___fltol@f1+3,f,c
 13586  002FF4  1E2A               	comf	___fltol@f1+2,f,c
 13587  002FF6  1E29               	comf	___fltol@f1+1,f,c
 13588  002FF8  6C28               	negf	___fltol@f1,c
 13589  002FFA  0E00               	movlw	0
 13590  002FFC  2229               	addwfc	___fltol@f1+1,f,c
 13591  002FFE  222A               	addwfc	___fltol@f1+2,f,c
 13592  003000  222B               	addwfc	___fltol@f1+3,f,c
 13593  003002                     i2l5152:
 13594  003002  C028  F028         	movff	___fltol@f1,?___fltol
 13595  003006  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 13596  00300A  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 13597  00300E  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 13598  003012  0012               	return		;funcret
 13599  003014                     __end_of___fltol:
 13600                           	opt callstack 0
 13601                           
 13602 ;; *************** function ___fldiv *****************
 13603 ;; Defined at:
 13604 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;  b               4   14[COMRAM] long 
 13607 ;;  a               4   18[COMRAM] long 
 13608 ;; Auto vars:     Size  Location     Type
 13609 ;;  grs             4   33[COMRAM] unsigned long 
 13610 ;;  rem             4   26[COMRAM] unsigned long 
 13611 ;;  new_exp         2   31[COMRAM] short 
 13612 ;;  aexp            1   38[COMRAM] unsigned char 
 13613 ;;  bexp            1   37[COMRAM] unsigned char 
 13614 ;;  sign            1   30[COMRAM] unsigned char 
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  4   14[COMRAM] unsigned char 
 13617 ;; Registers used:
 13618 ;;		wreg, status,2, status,0
 13619 ;; Tracked objects:
 13620 ;;		On entry : 0/0
 13621 ;;		On exit  : 0/0
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13624 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13625 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13626 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13627 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13628 ;;Total ram usage:       25 bytes
 13629 ;; Hardware stack levels used:    1
 13630 ;; This function calls:
 13631 ;;		Nothing
 13632 ;; This function is called by:
 13633 ;;		_echo
 13634 ;; This function uses a non-reentrant model
 13635 ;;
 13636                           
 13637                           	psect	text59
 13638  001960                     __ptext59:
 13639                           	opt callstack 0
 13640  001960                     ___fldiv:
 13641                           	opt callstack 14
 13642                           
 13643                           ;incstack = 0
 13644  001960  5012               	movf	___fldiv@b+3,w,c
 13645  001962  0B80               	andlw	128
 13646  001964  6E1F               	movwf	___fldiv@sign,c
 13647  001966  5012               	movf	___fldiv@b+3,w,c
 13648  001968  2412               	addwf	___fldiv@b+3,w,c
 13649  00196A  6E26               	movwf	___fldiv@bexp,c
 13650  00196C  BE11               	btfsc	___fldiv@b+2,7,c
 13651  00196E  8026               	bsf	___fldiv@bexp,0,c
 13652  001970  5026               	movf	___fldiv@bexp,w,c
 13653  001972  B4D8               	btfsc	status,2,c
 13654  001974  D00D               	goto	i2l4946
 13655  001976  2826               	incf	___fldiv@bexp,w,c
 13656  001978  A4D8               	btfss	status,2,c
 13657  00197A  D008               	goto	i2l4942
 13658  00197C  0E00               	movlw	0
 13659  00197E  6E0F               	movwf	___fldiv@b,c
 13660  001980  0E00               	movlw	0
 13661  001982  6E10               	movwf	___fldiv@b+1,c
 13662  001984  0E00               	movlw	0
 13663  001986  6E11               	movwf	___fldiv@b+2,c
 13664  001988  0E00               	movlw	0
 13665  00198A  6E12               	movwf	___fldiv@b+3,c
 13666  00198C                     i2l4942:
 13667  00198C  8E11               	bsf	___fldiv@b+2,7,c
 13668  00198E  D006               	goto	L6
 13669  001990                     i2l4946:
 13670  001990  0E00               	movlw	0
 13671  001992  6E0F               	movwf	___fldiv@b,c
 13672  001994  0E00               	movlw	0
 13673  001996  6E10               	movwf	___fldiv@b+1,c
 13674  001998  0E00               	movlw	0
 13675  00199A  6E11               	movwf	___fldiv@b+2,c
 13676  00199C                     L6:
 13677  00199C  0E00               	movlw	0
 13678  00199E  6E12               	movwf	___fldiv@b+3,c
 13679  0019A0  5016               	movf	___fldiv@a+3,w,c
 13680  0019A2  0B80               	andlw	128
 13681  0019A4  1A1F               	xorwf	___fldiv@sign,f,c
 13682  0019A6  5016               	movf	___fldiv@a+3,w,c
 13683  0019A8  2416               	addwf	___fldiv@a+3,w,c
 13684  0019AA  6E27               	movwf	___fldiv@aexp,c
 13685  0019AC  BE15               	btfsc	___fldiv@a+2,7,c
 13686  0019AE  8027               	bsf	___fldiv@aexp,0,c
 13687  0019B0  5027               	movf	___fldiv@aexp,w,c
 13688  0019B2  B4D8               	btfsc	status,2,c
 13689  0019B4  D00D               	goto	i2l4966
 13690  0019B6  2827               	incf	___fldiv@aexp,w,c
 13691  0019B8  A4D8               	btfss	status,2,c
 13692  0019BA  D008               	goto	i2l4962
 13693  0019BC  0E00               	movlw	0
 13694  0019BE  6E13               	movwf	___fldiv@a,c
 13695  0019C0  0E00               	movlw	0
 13696  0019C2  6E14               	movwf	___fldiv@a+1,c
 13697  0019C4  0E00               	movlw	0
 13698  0019C6  6E15               	movwf	___fldiv@a+2,c
 13699  0019C8  0E00               	movlw	0
 13700  0019CA  6E16               	movwf	___fldiv@a+3,c
 13701  0019CC                     i2l4962:
 13702  0019CC  8E15               	bsf	___fldiv@a+2,7,c
 13703  0019CE  D006               	goto	L7
 13704  0019D0                     i2l4966:
 13705  0019D0  0E00               	movlw	0
 13706  0019D2  6E13               	movwf	___fldiv@a,c
 13707  0019D4  0E00               	movlw	0
 13708  0019D6  6E14               	movwf	___fldiv@a+1,c
 13709  0019D8  0E00               	movlw	0
 13710  0019DA  6E15               	movwf	___fldiv@a+2,c
 13711  0019DC                     L7:
 13712  0019DC  0E00               	movlw	0
 13713  0019DE  6E16               	movwf	___fldiv@a+3,c
 13714  0019E0  5013               	movf	___fldiv@a,w,c
 13715  0019E2  1014               	iorwf	___fldiv@a+1,w,c
 13716  0019E4  1015               	iorwf	___fldiv@a+2,w,c
 13717  0019E6  1016               	iorwf	___fldiv@a+3,w,c
 13718  0019E8  A4D8               	btfss	status,2,c
 13719  0019EA  D017               	goto	i2l4980
 13720  0019EC  0E00               	movlw	0
 13721  0019EE  6E0F               	movwf	___fldiv@b,c
 13722  0019F0  0E00               	movlw	0
 13723  0019F2  6E10               	movwf	___fldiv@b+1,c
 13724  0019F4  0E00               	movlw	0
 13725  0019F6  6E11               	movwf	___fldiv@b+2,c
 13726  0019F8  0E00               	movlw	0
 13727  0019FA  6E12               	movwf	___fldiv@b+3,c
 13728  0019FC  0E80               	movlw	128
 13729  0019FE  1211               	iorwf	___fldiv@b+2,f,c
 13730  001A00  0E7F               	movlw	127
 13731  001A02  1212               	iorwf	___fldiv@b+3,f,c
 13732  001A04                     i2l4974:
 13733  001A04  501F               	movf	___fldiv@sign,w,c
 13734  001A06  1212               	iorwf	___fldiv@b+3,f,c
 13735  001A08  C00F  F00F         	movff	___fldiv@b,?___fldiv
 13736  001A0C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 13737  001A10  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 13738  001A14  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 13739  001A18  0012               	return	
 13740  001A1A                     i2l4980:
 13741  001A1A  5026               	movf	___fldiv@bexp,w,c
 13742  001A1C  A4D8               	btfss	status,2,c
 13743  001A1E  D009               	goto	i2l4988
 13744  001A20  0E00               	movlw	0
 13745  001A22  6E0F               	movwf	?___fldiv,c
 13746  001A24  0E00               	movlw	0
 13747  001A26  6E10               	movwf	?___fldiv+1,c
 13748  001A28  0E00               	movlw	0
 13749  001A2A  6E11               	movwf	?___fldiv+2,c
 13750  001A2C  0E00               	movlw	0
 13751  001A2E  6E12               	movwf	?___fldiv+3,c
 13752  001A30  0012               	return	
 13753  001A32                     i2l4988:
 13754  001A32  5027               	movf	___fldiv@aexp,w,c
 13755  001A34  C026  F017         	movff	___fldiv@bexp,??___fldiv
 13756  001A38  6A18               	clrf	(??___fldiv+1)& (0+255),c
 13757  001A3A  5E17               	subwf	??___fldiv,f,c
 13758  001A3C  0E00               	movlw	0
 13759  001A3E  5A18               	subwfb	??___fldiv+1,f,c
 13760  001A40  0E7F               	movlw	127
 13761  001A42  2417               	addwf	??___fldiv,w,c
 13762  001A44  6E20               	movwf	___fldiv@new_exp,c
 13763  001A46  0E00               	movlw	0
 13764  001A48  2018               	addwfc	??___fldiv+1,w,c
 13765  001A4A  6E21               	movwf	___fldiv@new_exp+1,c
 13766  001A4C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 13767  001A50  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 13768  001A54  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 13769  001A58  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 13770  001A5C  0E00               	movlw	0
 13771  001A5E  6E0F               	movwf	___fldiv@b,c
 13772  001A60  0E00               	movlw	0
 13773  001A62  6E10               	movwf	___fldiv@b+1,c
 13774  001A64  0E00               	movlw	0
 13775  001A66  6E11               	movwf	___fldiv@b+2,c
 13776  001A68  0E00               	movlw	0
 13777  001A6A  6E12               	movwf	___fldiv@b+3,c
 13778  001A6C  0E00               	movlw	0
 13779  001A6E  6E22               	movwf	___fldiv@grs,c
 13780  001A70  0E00               	movlw	0
 13781  001A72  6E23               	movwf	___fldiv@grs+1,c
 13782  001A74  0E00               	movlw	0
 13783  001A76  6E24               	movwf	___fldiv@grs+2,c
 13784  001A78  0E00               	movlw	0
 13785  001A7A  6E25               	movwf	___fldiv@grs+3,c
 13786  001A7C  0E00               	movlw	0
 13787  001A7E  6E27               	movwf	___fldiv@aexp,c
 13788  001A80  D028               	goto	i2l1267
 13789  001A82                     i2l4998:
 13790  001A82  5027               	movf	___fldiv@aexp,w,c
 13791  001A84  B4D8               	btfsc	status,2,c
 13792  001A86  D011               	goto	i2l5006
 13793  001A88  90D8               	bcf	status,0,c
 13794  001A8A  361B               	rlcf	___fldiv@rem,f,c
 13795  001A8C  361C               	rlcf	___fldiv@rem+1,f,c
 13796  001A8E  361D               	rlcf	___fldiv@rem+2,f,c
 13797  001A90  361E               	rlcf	___fldiv@rem+3,f,c
 13798  001A92  90D8               	bcf	status,0,c
 13799  001A94  360F               	rlcf	___fldiv@b,f,c
 13800  001A96  3610               	rlcf	___fldiv@b+1,f,c
 13801  001A98  3611               	rlcf	___fldiv@b+2,f,c
 13802  001A9A  3612               	rlcf	___fldiv@b+3,f,c
 13803  001A9C  BE25               	btfsc	___fldiv@grs+3,7,c
 13804  001A9E  800F               	bsf	___fldiv@b,0,c
 13805  001AA0  90D8               	bcf	status,0,c
 13806  001AA2  3622               	rlcf	___fldiv@grs,f,c
 13807  001AA4  3623               	rlcf	___fldiv@grs+1,f,c
 13808  001AA6  3624               	rlcf	___fldiv@grs+2,f,c
 13809  001AA8  3625               	rlcf	___fldiv@grs+3,f,c
 13810  001AAA                     i2l5006:
 13811  001AAA  5013               	movf	___fldiv@a,w,c
 13812  001AAC  5C1B               	subwf	___fldiv@rem,w,c
 13813  001AAE  5014               	movf	___fldiv@a+1,w,c
 13814  001AB0  581C               	subwfb	___fldiv@rem+1,w,c
 13815  001AB2  5015               	movf	___fldiv@a+2,w,c
 13816  001AB4  581D               	subwfb	___fldiv@rem+2,w,c
 13817  001AB6  5016               	movf	___fldiv@a+3,w,c
 13818  001AB8  581E               	subwfb	___fldiv@rem+3,w,c
 13819  001ABA  A0D8               	btfss	status,0,c
 13820  001ABC  D009               	goto	i2l5012
 13821  001ABE  8C25               	bsf	___fldiv@grs+3,6,c
 13822  001AC0  5013               	movf	___fldiv@a,w,c
 13823  001AC2  5E1B               	subwf	___fldiv@rem,f,c
 13824  001AC4  5014               	movf	___fldiv@a+1,w,c
 13825  001AC6  5A1C               	subwfb	___fldiv@rem+1,f,c
 13826  001AC8  5015               	movf	___fldiv@a+2,w,c
 13827  001ACA  5A1D               	subwfb	___fldiv@rem+2,f,c
 13828  001ACC  5016               	movf	___fldiv@a+3,w,c
 13829  001ACE  5A1E               	subwfb	___fldiv@rem+3,f,c
 13830  001AD0                     i2l5012:
 13831  001AD0  2A27               	incf	___fldiv@aexp,f,c
 13832  001AD2                     i2l1267:
 13833  001AD2  0E19               	movlw	25
 13834  001AD4  6427               	cpfsgt	___fldiv@aexp,c
 13835  001AD6  D7D5               	goto	i2l4998
 13836  001AD8  501B               	movf	___fldiv@rem,w,c
 13837  001ADA  101C               	iorwf	___fldiv@rem+1,w,c
 13838  001ADC  101D               	iorwf	___fldiv@rem+2,w,c
 13839  001ADE  101E               	iorwf	___fldiv@rem+3,w,c
 13840  001AE0  B4D8               	btfsc	status,2,c
 13841  001AE2  D011               	goto	i2l5024
 13842  001AE4  8022               	bsf	___fldiv@grs,0,c
 13843  001AE6  D00F               	goto	i2l5024
 13844  001AE8                     i2l5018:
 13845  001AE8  90D8               	bcf	status,0,c
 13846  001AEA  360F               	rlcf	___fldiv@b,f,c
 13847  001AEC  3610               	rlcf	___fldiv@b+1,f,c
 13848  001AEE  3611               	rlcf	___fldiv@b+2,f,c
 13849  001AF0  3612               	rlcf	___fldiv@b+3,f,c
 13850  001AF2  BE25               	btfsc	___fldiv@grs+3,7,c
 13851  001AF4  800F               	bsf	___fldiv@b,0,c
 13852  001AF6  90D8               	bcf	status,0,c
 13853  001AF8  3622               	rlcf	___fldiv@grs,f,c
 13854  001AFA  3623               	rlcf	___fldiv@grs+1,f,c
 13855  001AFC  3624               	rlcf	___fldiv@grs+2,f,c
 13856  001AFE  3625               	rlcf	___fldiv@grs+3,f,c
 13857  001B00  0620               	decf	___fldiv@new_exp,f,c
 13858  001B02  A0D8               	btfss	status,0,c
 13859  001B04  0621               	decf	___fldiv@new_exp+1,f,c
 13860  001B06                     i2l5024:
 13861  001B06  AE11               	btfss	___fldiv@b+2,7,c
 13862  001B08  D7EF               	goto	i2l5018
 13863  001B0A  0E00               	movlw	0
 13864  001B0C  6E27               	movwf	___fldiv@aexp,c
 13865  001B0E  AE25               	btfss	___fldiv@grs+3,7,c
 13866  001B10  D017               	goto	i2l1278
 13867  001B12  0EFF               	movlw	255
 13868  001B14  1422               	andwf	___fldiv@grs,w,c
 13869  001B16  6E17               	movwf	??___fldiv& (0+255),c
 13870  001B18  0EFF               	movlw	255
 13871  001B1A  1423               	andwf	___fldiv@grs+1,w,c
 13872  001B1C  6E18               	movwf	(??___fldiv+1)& (0+255),c
 13873  001B1E  0EFF               	movlw	255
 13874  001B20  1424               	andwf	___fldiv@grs+2,w,c
 13875  001B22  6E19               	movwf	(??___fldiv+2)& (0+255),c
 13876  001B24  0E7F               	movlw	127
 13877  001B26  1425               	andwf	___fldiv@grs+3,w,c
 13878  001B28  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 13879  001B2A  5017               	movf	??___fldiv,w,c
 13880  001B2C  1018               	iorwf	??___fldiv+1,w,c
 13881  001B2E  1019               	iorwf	??___fldiv+2,w,c
 13882  001B30  101A               	iorwf	??___fldiv+3,w,c
 13883  001B32  B4D8               	btfsc	status,2,c
 13884  001B34  D003               	goto	i2l1279
 13885  001B36                     i2u484_40:
 13886  001B36  0E01               	movlw	1
 13887  001B38  6E27               	movwf	___fldiv@aexp,c
 13888  001B3A  D002               	goto	i2l1278
 13889  001B3C                     i2l1279:
 13890  001B3C  B00F               	btfsc	___fldiv@b,0,c
 13891  001B3E  D7FB               	goto	i2u484_40
 13892  001B40                     i2l1278:
 13893  001B40  5027               	movf	___fldiv@aexp,w,c
 13894  001B42  B4D8               	btfsc	status,2,c
 13895  001B44  D01F               	goto	i2l5044
 13896  001B46  0E01               	movlw	1
 13897  001B48  260F               	addwf	___fldiv@b,f,c
 13898  001B4A  0E00               	movlw	0
 13899  001B4C  2210               	addwfc	___fldiv@b+1,f,c
 13900  001B4E  2211               	addwfc	___fldiv@b+2,f,c
 13901  001B50  2212               	addwfc	___fldiv@b+3,f,c
 13902  001B52  A012               	btfss	___fldiv@b+3,0,c
 13903  001B54  D017               	goto	i2l5044
 13904  001B56  C00F  F017         	movff	___fldiv@b,??___fldiv
 13905  001B5A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13906  001B5E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13907  001B62  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13908  001B66  341A               	rlcf	??___fldiv+3,w,c
 13909  001B68  321A               	rrcf	??___fldiv+3,f,c
 13910  001B6A  3219               	rrcf	??___fldiv+2,f,c
 13911  001B6C  3218               	rrcf	??___fldiv+1,f,c
 13912  001B6E  3217               	rrcf	??___fldiv,f,c
 13913  001B70  C017  F00F         	movff	??___fldiv,___fldiv@b
 13914  001B74  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13915  001B78  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13916  001B7C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13917  001B80  4A20               	infsnz	___fldiv@new_exp,f,c
 13918  001B82  2A21               	incf	___fldiv@new_exp+1,f,c
 13919  001B84                     i2l5044:
 13920  001B84  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13921  001B86  D010               	goto	i2l5048
 13922  001B88  5021               	movf	___fldiv@new_exp+1,w,c
 13923  001B8A  E103               	bnz	i2u488_40
 13924  001B8C  2820               	incf	___fldiv@new_exp,w,c
 13925  001B8E  A0D8               	btfss	status,0,c
 13926  001B90  D00B               	goto	i2l5048
 13927  001B92                     i2u488_40:
 13928  001B92  0E00               	movlw	0
 13929  001B94  6E21               	movwf	___fldiv@new_exp+1,c
 13930  001B96  6820               	setf	___fldiv@new_exp,c
 13931  001B98  0E00               	movlw	0
 13932  001B9A  6E0F               	movwf	___fldiv@b,c
 13933  001B9C  0E00               	movlw	0
 13934  001B9E  6E10               	movwf	___fldiv@b+1,c
 13935  001BA0  0E00               	movlw	0
 13936  001BA2  6E11               	movwf	___fldiv@b+2,c
 13937  001BA4  0E00               	movlw	0
 13938  001BA6  6E12               	movwf	___fldiv@b+3,c
 13939  001BA8                     i2l5048:
 13940  001BA8  BE21               	btfsc	___fldiv@new_exp+1,7,c
 13941  001BAA  D005               	goto	i2u489_40
 13942  001BAC  5021               	movf	___fldiv@new_exp+1,w,c
 13943  001BAE  E111               	bnz	i2l5052
 13944  001BB0  0420               	decf	___fldiv@new_exp,w,c
 13945  001BB2  B0D8               	btfsc	status,0,c
 13946  001BB4  D00E               	goto	i2l5052
 13947  001BB6                     i2u489_40:
 13948  001BB6  0E00               	movlw	0
 13949  001BB8  6E21               	movwf	___fldiv@new_exp+1,c
 13950  001BBA  0E00               	movlw	0
 13951  001BBC  6E20               	movwf	___fldiv@new_exp,c
 13952  001BBE  0E00               	movlw	0
 13953  001BC0  6E0F               	movwf	___fldiv@b,c
 13954  001BC2  0E00               	movlw	0
 13955  001BC4  6E10               	movwf	___fldiv@b+1,c
 13956  001BC6  0E00               	movlw	0
 13957  001BC8  6E11               	movwf	___fldiv@b+2,c
 13958  001BCA  0E00               	movlw	0
 13959  001BCC  6E12               	movwf	___fldiv@b+3,c
 13960  001BCE  0E00               	movlw	0
 13961  001BD0  6E1F               	movwf	___fldiv@sign,c
 13962  001BD2                     i2l5052:
 13963  001BD2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13964  001BD6  A026               	btfss	___fldiv@bexp,0,c
 13965  001BD8  D002               	goto	i2l5058
 13966  001BDA  8E11               	bsf	___fldiv@b+2,7,c
 13967  001BDC  D001               	goto	i2l5060
 13968  001BDE                     i2l5058:
 13969  001BDE  9E11               	bcf	___fldiv@b+2,7,c
 13970  001BE0                     i2l5060:
 13971  001BE0  90D8               	bcf	status,0,c
 13972  001BE2  3026               	rrcf	___fldiv@bexp,w,c
 13973  001BE4  6E12               	movwf	___fldiv@b+3,c
 13974  001BE6  D70E               	goto	i2l4974
 13975  001BE8                     __end_of___fldiv:
 13976                           	opt callstack 0
 13977                           
 13978                           	psect	rparam
 13979  0000                     
 13980                           	psect	temp
 13981  00006E                     btemp:
 13982                           	opt callstack 0
 13983  00006E                     	ds	1
 13984  0000                     int$flags	set	btemp
 13985  0000                     wtemp8	set	btemp+1
 13986  0000                     ttemp5	set	btemp+1
 13987  0000                     ttemp6	set	btemp+4
 13988  0000                     ttemp7	set	btemp+8
 13989                           tosu	equ	0xFFF
 13990                           tosh	equ	0xFFE
 13991                           tosl	equ	0xFFD
 13992                           stkptr	equ	0xFFC
 13993                           pclatu	equ	0xFFB
 13994                           pclath	equ	0xFFA
 13995                           pcl	equ	0xFF9
 13996                           tblptru	equ	0xFF8
 13997                           tblptrh	equ	0xFF7
 13998                           tblptrl	equ	0xFF6
 13999                           tablat	equ	0xFF5
 14000                           prodh	equ	0xFF4
 14001                           prodl	equ	0xFF3
 14002                           indf0	equ	0xFEF
 14003                           postinc0	equ	0xFEE
 14004                           postdec0	equ	0xFED
 14005                           preinc0	equ	0xFEC
 14006                           plusw0	equ	0xFEB
 14007                           fsr0h	equ	0xFEA
 14008                           fsr0l	equ	0xFE9
 14009                           wreg	equ	0xFE8
 14010                           indf1	equ	0xFE7
 14011                           postinc1	equ	0xFE6
 14012                           postdec1	equ	0xFE5
 14013                           preinc1	equ	0xFE4
 14014                           plusw1	equ	0xFE3
 14015                           fsr1h	equ	0xFE2
 14016                           fsr1l	equ	0xFE1
 14017                           bsr	equ	0xFE0
 14018                           indf2	equ	0xFDF
 14019                           postinc2	equ	0xFDE
 14020                           postdec2	equ	0xFDD
 14021                           preinc2	equ	0xFDC
 14022                           plusw2	equ	0xFDB
 14023                           fsr2h	equ	0xFDA
 14024                           fsr2l	equ	0xFD9
 14025                           status	equ	0xFD8


Data Sizes:
    Strings     556
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256     92     152
    BANK2           256    108     236
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1623_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _actuators_main->_stepper
    _actuators_main->_stepper2
    _actuators_main->_stepper2_back
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper2

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  294431
                                             90 BANK1      2     2      0
                                              0 BANK2    108   108      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   47376
                                            122 BANK0      4     2      2
                                              0 BANK1     10    10      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23053
                                            121 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25004
                                            121 BANK0      6     2      4
                                              0 BANK1      6     6      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24409
                                            121 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       8     4      4  142224
                                             12 BANK1      8     4      4
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   46934
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47219
                                            125 BANK0      2     0      2
                                              0 BANK1     12    12      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   23949
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23624
                                            121 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0     136
                                              3 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26760
                                            121 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   22895
                                            109 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     6C      EC       9       92.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5C      98       7       59.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     271      34        0.0%
DATA                 0      0     271       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 07 21:26:14 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 016D                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             ___wmul@multiplicand 0082  
                   __CFG_BORV$3 000000                 ??_number_deploy 00FD               stepper2@direction 010B  
                 servoRotate0@i 0081                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                     __CFG_OSC$HS 000000  
           __end_of_system_init 3902                             l112 371A                             l117 361C  
               _ultrasonic_main 2476                             l433 25CA                             l710 3380  
                           l526 1008                             l616 1E4E                             l618 1E56  
                           l580 3194                             l591 1C5C                             l488 0290  
                           l593 1C64                             _GIE 007F97                    __CFG_CPB$OFF 000000  
                           _RB2 007C0A                             _RC1 007C11                             _RB3 007C0B  
                           _RC2 007C12                             _RB4 007C0C                             _RD0 007C18  
                           _RB5 007C0D                             _RD1 007C19                             _RB6 007C0E  
                           _RB7 007C0F                             _ISR 0008          __size_of_stepper2_back 00A0  
                           _abs 389C                             _cnt 0175                             _pad 3164  
                           _min 2C4C                             _sum 0038                  stepper2_back@i 0104  
                           wreg 000FE8                    __CFG_LVP$OFF 000000                            ?_ISR 0001  
                  ___fltol@exp1 0031                    __CFG_WDT$OFF 000000                            l1103 354A  
                          ?_abs 0092                            l1358 38C6                            l1456 37A2  
                          l1389 28A6                            l7100 2E7C                            l6302 31B8  
                          l7110 2ECC                            ?_pad 0094                            l6400 2BA6  
                          l7120 2F10                            l7104 2E94                            l8000 0F1C  
                          l6410 2C04                            l6306 31E4                            l7124 2F28  
                          l6414 2C2A                            l6406 2BEE                            l6254 34A0  
                          l6502 1E6C                            l7070 321E                            l7302 2D3A  
                          l7206 2E12                            l8022 0F8C                            l6360 26B2  
                          l6352 2678                            l6264 3836                            l6272 39A2  
                          l7320 32AE                            l7304 2D3E                            l7216 2E46  
                          l8016 0F6E                            l8024 0FA6                            l6426 37E4  
                          l6370 270E                            l6346 2650                            l6274 39A8  
                          l6450 1C7E                            l6530 1F4E                            l6610 12CC  
                          l7314 329E                            l7250 2384                            l7242 2350  
                          l7234 230C                            l8106 127A                            l8034 0FE8  
                          l6268 384E                            l6292 317C                            l6436 1C40  
                          l6516 1EC0                            l6508 1E9E                            l6612 12CE  
                          l7084 325A                            l7148 311E                            l7228 22DE  
                          l8028 0FCA                            ?_min 0080                            l6358 269E  
                          l6374 2724                            l6390 2B54                            l6454 1C8E  
                          l6630 12EE                            l6622 12E6                            l6614 12DE  
                          l7326 32C4                            l7342 32F6                            l7174 2D70  
                          l7510 25A2                            l8070 115E                            l8062 1102  
                          l6560 2780                            l6296 318C                            l6464 1D88  
                          l6720 36A2                            l7328 32CC                            l8080 11BA  
                          l7362 353C                            l7354 3508                            l6570 27CA  
                          l6562 2784                            l6378 274A                            l6394 2B78  
                          l6298 319E                            l6554 203C                            l6538 1FC6  
                          l6650 13C4                            l6634 12F8                            l6626 12EA  
                          l6618 12E2                            l7346 3304                            l7338 32EC  
                          l7290 2C8C                            l7274 2440                            l7266 23FC  
                          l7258 23C8                            l7186 2DAA                            l7506 2574  
                          l8066 114E                            l8058 10F2                            l7356 3514  
                          l6580 27E8                            l6484 1DEE                            l6652 13D2  
                          l6636 133A                            l7380 2A4A                            l7196 2DDE  
                          l7524 25D0                            l8076 11B4                            l8084 11DE  
                          l6582 2810                            l6398 2B92                            l6718 367A  
                          l7518 25BA                            l6576 27DA                            l6488 1E06  
                          l6648 13A6                            l7704 01EA                            l7456 2B1C  
                          l7552 2082                            l7608 226E                            l7288 2C82  
                          l7480 24EA                            l6586 2846                            l6578 27E2  
                          l6682 159A                            l7562 20EE                            l7482 24F2  
                          l6692 15E2                            l6668 14CC                            l7726 0270  
                          l7814 06A6                            l7646 00BC                            l6918 18CA  
                          l6838 17A8                            l6782 16A8                            l7590 21A2  
                          l7566 2102                            l7558 20BC                            l7486 2502  
                          l6688 15D6                            l7752 0310                            l7736 02B0  
                          l7576 214C                            l6698 15FA                            l7842 0778  
                          l7818 06CC                            l7578 2156                            l6980 3332  
                          l7852 079A                            l7676 015E                            l6956 194A  
                          l6876 1832                            l6982 333E                            l7846 0780  
                          l7862 0808                            l6798 1714                            l6992 3372  
                          l7864 0816                            l7792 051A                            l7768 0378  
                          l7972 0E60                            l7956 0E06                            l7948 0DD2  
                          l7982 0E90                            STR_1 FFD8                            STR_2 FF09  
                          STR_3 FF73                            STR_4 FFD8                            STR_5 FFCE  
                          STR_6 FFF3                            STR_7 FEE1                            STR_8 FFD8  
                          STR_9 FFF9                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            _LATD 000F8C                            _LATE 000F8D  
                          u7010 1F2C                            u7020 1F2E                            _RBIE 007F93  
                          u7120 27C6                            u7040 1FA2                            u8000 256C  
                          _RBIF 007F90                            u7050 1FD8                            u8010 2584  
                          u7140 2876                            u6500 38AC                            u8100 2122  
                          u7045 1F90                            u7150 2878                            u6430 3498  
                          u7070 1FFA                            u7230 140C                            u8110 2132  
                          u8030 25D0                            u6415 39F0                            u7071 1FF8  
                          u6416 39F2                            u6600 378C                            u7080 2008  
                          u7240 140E                            u8120 2142                            u6450 34E0  
                          u7090 200C                            u7250 141A                            u6620 3990  
                          u7340 375E                            u8140 216E                            u8060 20B2  
                          u6630 3992                            u6550 395E                            u7270 144E  
                          u7350 3666                            u7510 3244                            u8150 217E  
                          u8070 20E4                            u9007 30B0                            u6800 1C14  
                          u6560 3960                            u6480 392C                            u8160 218E  
                          u9017 2A10                            u6570 3894                            u6490 392E  
                          u7290 1500                            u7530 3280                            u8170 219E  
                          u8090 2112                            u9107 168C                            u9027 2A3C  
                          u7460 3342                            u6740 2BAA                            u6900 1DCC  
                          u6580 3896                            u8340 02AC                            u7700 232C  
                          u6661 267E                            u9117 16A0                            u9037 2A9E  
                          u6830 1C52                            u6590 378A                            u8430 081C  
                          u8190 227E                            u7710 2360                            u9207 1784  
                          u9127 16BC                            u9047 2AC8                            u6680 26B6  
                          u6920 1DD8                            u7800 2460                            u7720 2370  
                          u7640 2E5C                            u9217 179E                            u9137 16D0  
                          u9057 30E0                            u6850 1C78                            u8370 038A  
                          u8290 0200                            u7810 2C72                            u7730 2394  
                          u7650 22B0                            u9307 18AA                            u9227 17C0  
                          u9147 16E4                            u9067 2EE0                            u6780 37E0  
                          u6860 1D98                            u8380 039A                            u7580 3146  
                          u7740 23A4                            u7660 22C0                            u7485 3586  
                          u8381 0398                            u9317 18C2                            u9237 17DA  
                          u9157 16F8                            u9077 1650                            u6790 1C12  
                          u6950 1E42                            u7910 32D0                            u7750 23D8  
                          u7670 22EE                            u7590 2D6E                            u7495 3A40  
                          u9407 3648                            u9327 18E2                            u9247 17F4  
                          u9167 170C                            u9087 1664                            u7496 3A42  
                          u6880 1DBA                            u7760 23E8                            u7680 22FE  
                          u8640 0F46                            u8560 0DBC                            u6881 1DB8  
                          u9417 3726                            u9337 18FA                            u9257 180E  
                          u9177 1736                            u9097 1678                            u6890 1DC8  
                          u6970 1EBC                            u7850 2CFA                            u7770 240C  
                          u7690 231C                            u8650 0F56                            u9507 03B4  
                          u9427 3732                            u9347 1912                            u9267 1828  
                          u9187 1750                            u8555 0DAA                            u6980 1EF2  
                          u7860 2D20                            u7780 241C                            u8660 0FA6  
                          u8580 0DEE                            u9517 0540                            u9437 3740  
                          u9357 192A                            u9277 1862                            u9197 176A  
                          u8581 0DEC                            u8557 0DAC                            u7950 3518  
                          u6990 1EF4                            u7790 2450                            u8670 0FB8  
                          u9527 070E                            u9447 007A                            u9367 1942  
                          u9287 187A                            u8807 1214                            u8727 0E1E  
                          u8591 0E04                            u8575 0DDA                            u8680 1002  
                          u9537 341E                            u9457 011E                            u9377 3A0C  
                          u9297 1892                            u8817 1248                            u8737 0E48  
                          u8577 0DDC                            u9547 3438                            u9467 0192  
                          u9387 3622                            u8907 2DBA                            u8827 126C  
                          u8747 0E72                            u9557 344A                            u9477 0228  
                          u9397 3634                            u8917 2DD0                            u8837 2488  
                          u8757 0EA6                            u9567 346E                            u9487 02C8  
                          u8927 2DEE                            u8847 24B2                            u8767 0ED8  
                          u9577 39D6                            u9497 0328                            u8937 2E04  
                          u8857 253A                            u8777 10AA                            u9587 39E0  
                          u8947 2E22                            u8867 25DE                            u8787 11C6  
                          u8957 2E38                            u8877 260A                            u8797 11F0  
                          u8967 2296                            u8887 2D86                            u8977 221A  
                          u8897 2D9C                            u8987 224E                            u8997 307C  
                          _Pole 0200              main@poles_detected 02E6                     main@t_count 02E0  
                          abs@a 0092                            _data 005E                            _echo 0826  
                          _dbuf 0178                            _disp 016F                            _atoi 276C  
                          _main 0D6A                            _dtoa 1BE8                            _meas 0050  
                          _keys FDBB                            _send 006D                            _tick 0056  
                          _prec 004C                            _sens 0058                            _temp 00FF  
                          _time 0164                            _nout 0048                            pad@i 009B  
                          pad@p 0098                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 009D  
                          fsr2l 000FD9                            _trig 2D5C                            _sumf 0040  
                          btemp 006E                            min@i 0089                            _xtoa 1E30  
                          prodh 000FF4                            prodl 000FF3                            start 000E  
       __size_of_actuators_main 0136                   __CFG_IESO$OFF 000000                 ___fldiv@new_exp 0020  
               __end_of_UI_main 0826                 servoRotate180@i 0081                   __CFG_MCLRE$ON 000000  
                  main@act_done 02DA                    ___param_bank 000000                           ??_ISR 0036  
                         ??_abs 0094                           ??_pad 009A                           ??_min 0084  
         actuators_main@act_cnt 0112           I2C_Master_Read@ackBit 0081                ?_I2C_Master_Init 008D  
              ?_I2C_Master_Read 0001                ?_I2C_Master_Wait 0001                ?_I2C_Master_Stop 0001  
                         ?_echo 0001                   ___fltol@sign1 0030                 __end_of___aodiv 276C  
                         ?_atoi 0087                           ?_main 0001                           ?_dtoa 009F  
               __end_of___aomod 2C4C                 __end_of___fldiv 1BE8                 __end_of___awdiv 330E  
                         STR_10 FE06                           STR_11 FF7E                           STR_20 FF5D  
                         STR_12 FE5A                           STR_13 FF88                           STR_21 FF22  
                         STR_14 FE6A                           STR_22 FE4A                           STR_30 FDE4  
                         STR_31 FFE2                           STR_23 FFC4                           STR_15 FF92  
                         STR_32 FED0                           STR_24 FF46                           STR_16 FE17  
                         STR_40 FDD2                           STR_33 FE29                           STR_17 FF9C  
                         STR_41 FE89                           STR_25 FE7A                           STR_34 FFE2  
                         STR_26 FFC4                           STR_18 FFEB                           STR_42 FF3A  
                         STR_50 FEB6                           STR_51 FDE4                           STR_43 FE39  
                         STR_35 FED0                           STR_27 FF46                           STR_19 FEEF  
                         STR_28 FE7A                           STR_52 FED0                           STR_44 FDD2  
                         STR_60 FF68                           STR_36 FE28                           STR_45 FE89  
                         STR_53 FF01                           STR_61 FFB0                           STR_37 FED3  
                         STR_29 FE98                           STR_46 FF3A                           STR_54 FEFC  
                         STR_38 FEC5                           STR_55 FFBA                           STR_39 FE39  
                         STR_47 FDF5                           STR_56 FFA6                           STR_48 FF16  
                         STR_57 FF22                           STR_49 FEA7                           STR_58 FF2E  
                         STR_59 FF52                 __end_of___fltol 3014                           ?_trig 0001  
               __end_of___lldiv 3392                 ___awdiv@divisor 0082                           ?_xtoa 009F  
                         _T1CON 000FCD                 __end_of___llmod 355C                           i2l365 381E  
                         i2l392 0D68                 ___awdiv@counter 0084                    vfpfcnvrt@fmt 00C8  
                  vfpfcnvrt@llu 00D8                           _TMR1H 000FCF                           _TMR1L 000FCE  
                         _PORTB 000F81                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                 __end_of_lcdInst 3B26  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                 __end_of_initLCD 3486  
                __CFG_EBTRB$OFF 000000                           _brake 3014                           _flags 004E  
                         _dists 0069                           _fputc 3486                 __end_of_isalpha 389C  
                         _fputs 382A                 __end_of_isdigit 3998                           _servo 39F4  
                         atoi@n 0094                           pad@fp 0094                           atoi@s 0087  
                         _width 004A                           _state 0171                           _putch 3B06  
                         _start 36BE                           main@i 02D6                           main@k 02DE  
                         dtoa@d 00A1                           dtoa@i 00C1                           dtoa@n 00B9  
                         dtoa@p 00B3                           dtoa@s 00B7                           dtoa@w 00B5  
               __end_of_islower 3934                 __end_of_isspace 37EC                 __end_of_isupper 3966  
                         tablat 000FF5                 send_nibble@data 0081                           plusw2 000FDB  
               __end_of_pulse_e 39F4                           ttemp5 006F                           ttemp6 0072  
                         ttemp7 0076                           status 000FD8     I2C_Master_Read@receivedByte 0082  
               __end_of_stepper 3288                           wtemp8 006F                           xtoa@c 00C4  
                         xtoa@d 00A1                           xtoa@i 00C2                           xtoa@n 00BA  
                         xtoa@p 00B6                           xtoa@w 00B8                           xtoa@x 00A9  
                 _stepper2_back 30C4                 __end_of_toupper 37AC                ??_servoRotate180 0080  
            __size_ofi2___awdiv 0084                  __CFG_PBADEN$ON 000000                    _toupper$1675 008C  
               __initialization 35BC                    __end_of_echo 0D6A                     _system_init 38D0  
                  __end_of_atoi 28B0                    __end_of_main 1286                    __end_of_dtoa 1E30  
                  __end_of_keys FDCC         __end_of_ultrasonic_main 2622                    __end_of_trig 2E5E  
                  __end_of_xtoa 2066                          ??_echo 0032                          ??_atoi 0089  
                        ??_main 015A                          ??_dtoa 00A9                          ??_trig 0080  
                        ??_xtoa 00AA                   __activetblptr 000002            number_deploy@t_count 0104  
             ?_I2C_Master_Start 0001               ?_I2C_Master_Write 0081            number_deploy@tires_t 0100  
            ??_I2C_Master_Start 0081                          ?_brake 0001                          _ADCON1 000FC1  
            ??_I2C_Master_Write 0083                    ?_send_nibble 0001                          ?_fputc 0084  
              ___llmod@dividend 0080                          ?_fputs 008D                ___awdiv@dividend 0080  
                        ?_servo 0001                          ?_putch 0001                          ?_start 0001  
                        _INT1IE 007F83                          _INT1IF 007F80              stepper2@steps2_adj 00FD  
                        i2l1345 296C                          i2l1338 28EE                          i2l1267 1AD2  
                        i2l1278 1B40                          i2l1279 1B3C                          i2l5012 1AD0  
                        i2l5006 1AAA                          i2l5024 1B06                          i2l5018 1AE8  
                        i2l5060 1BE0                          i2l5052 1BD2                          i2l5044 1B84  
                        i2l5134 2FC2                          i2l5118 2F78                          i2l5214 29DE  
                        i2l5048 1BA8                          i2l5152 3002                          i2l5144 2FDA  
                        i2l5240 33D4                          i2l5232 33B6                          i2l5400 09F2  
                        i2l5058 1BDE                          i2l5146 2FE6                          i2l5138 2FD2  
                        i2l5250 33F4                          i2l5226 33A6                          i2l5190 2954  
                        i2l5238 33CC                          i2l5254 33FE                          i2l5422 0AAA  
                        i2l5184 291C                          i2l5416 0A4E                          i2l5424 0AC4  
                        i2l5186 2922                          i2l5178 28FE                          i2l5258 340C  
                        i2l5450 0BA0                          i2l5434 0B44                          i2l5196 2992  
                        i2l5188 292E                          i2l5198 299E                          i2l5382 0900  
                        i2l5366 08A4                          i2l5390 0972                          i2l5456 0BFC  
                        i2l5490 0D4E                          i2l5458 0C16                          i2l5484 0CF2  
                        i2l5468 0C96                          i2l5388 0958                          i2l4942 198C  
                        i2l4962 19CC                          i2l4946 1990                          i2l4980 1A1A  
                        i2l4974 1A04                          i2l4966 19D0                          i2l5944 380C  
                        i2l4988 1A32                          i2l4998 1A82                       ??_UI_main 0100  
                 vfpfcnvrt@done 00E1                          _TMR1ON 007E68                  ?_stepper2_back 00FD  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                __end_of___xxtofl 29F0  
   number_deploy@poles_detected 00FB                  __CFG_XINST$OFF 000000                    vfprintf@cfmt 00EB  
                     ??___aodiv 0090                       ??___aomod 0090                          ___wmul 3A72  
                     ??___fldiv 0017                       ??___awdiv 0084                       ??___fltol 002C  
                     ??___lldiv 0088                       ??___llmod 0088                          clear_0 35E2  
                        clear_1 35EE                          clear_2 35FE                ___awdiv@quotient 0086  
                     ??_lcdInst 0083                          _printf 3A4A                          pad@buf 0096  
                        dtoa@fp 009F                          _strlen 3998                  i2___awdiv@sign 0006  
                     ??_initLCD 0084                          fputc@c 0084                          fputs@c 0091  
                        fputs@i 0092                    __pdataCOMRAM 0069                          fputs@s 008D  
                     ??_isalpha 0082                       ??_isdigit 0082               __end_ofi2___awdiv 3416  
                     ??_islower 0082                    __mediumconst FDBA                       ??_isspace 0082  
                        tblptrh 000FF7                       ??_isupper 0082                          tblptrl 000FF6  
                        tblptru 000FF8                __end_of_vfprintf 36BE                       ??_pulse_e 0080  
              __end_of_stepper2 2F5A  ultrasonic_main@min_us_dist_914 0108                       ??_stepper 00FF  
                        xtoa@fp 009F                       ??_toupper 0088                    ___xxtofl@arg 000B  
         pulse_e@interruptState 0080                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                    __accesstop 0080         __end_of__initialization 3604                  _actuators_main 29F0  
                 ___rparam_used 000001                      ___fltol@f1 0028                    stepper@i_376 0104  
            __size_of_backwards 0026             full_drive@direction 00FC                  __pcstackCOMRAM 0001  
                  stepper@stack 00FD                ?_ultrasonic_main 00FA                   __end_of_brake 30C4  
                 __end_of_fputc 34F4                   __end_of_fputs 3866                   __end_of_servo 3A20  
                 __end_of_putch 3B16                   __end_of_start 3710                 _key_was_pressed 0177  
         number_deploy@avg_dist 00F9                         ??_brake 00F9                         ??_fputc 0088  
                       ??_fputs 0091                         ??_servo 0083                         ??_putch 0083  
                       ??_start 0095                 ??_stepper2_back 0100                      __pbssBANK0 00FF  
                    __pbssBANK1 015C                      __pbssBANK2 0200          __end_of_actuators_main 2B26  
                       ?___wmul 0080              __size_of_send_byte 0018                         ?_printf 00ED  
        stepper2_back@direction 0101                         ?_strlen 0080           __end_of_number_deploy 2288  
                     ?___xxtofl 0001               __end_of_backwards 3AC0              __size_of_vfpfcnvrt 03AA  
                    _dist_final 0250                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                         _UI_main 0012            __size_of_send_nibble 001A  
               ?_actuators_main 010C                         __Hparam 0000                         __Lparam 0000  
                  ?_system_init 0001                         ___aodiv 2622                         ___aomod 2B26  
                       ___fldiv 1960                         ___awdiv 3288                         ___fltol 2F5A  
                       ___lldiv 330E                 __size_of___wmul 0028                         ___llmod 34F4  
                     ?_vfprintf 00E5                       ?_stepper2 00FD                 __CFG_STVREN$OFF 000000  
                       __pcinit 35BC                      _full_drive 1630                         __ramtop 1000  
                       _lcdInst 3B16                         __ptext0 0D6A                         __ptext1 2476  
                       __ptext2 2D5C                         __ptext3 2288                         __ptext4 2C4C  
                       __ptext5 36BE                         __ptext6 2066                         __ptext7 3288  
                       __ptext8 3014                         __ptext9 3A9A                 __size_of_printf 0028  
               __size_of_strlen 002E                         _initLCD 3416                    __size_of_ISR 3822  
                       _counter 0060                    __size_of_abs 0034                    __size_of_pad 009C  
                       _isalpha 3866                    __size_of_min 0110                         _isdigit 3966  
                    ??___xxtofl 0005                         _islower 3902                         _isspace 37AC  
                       _isupper 3934        __size_of_I2C_Master_Init 0060        __size_of_I2C_Master_Read 002A  
      __size_of_I2C_Master_Wait 0014        __size_of_I2C_Master_Stop 0008                 _prev_dist_final 015C  
                       _pressed 016B                         atoi@neg 008D                         _pulse_e 39C6  
                       _stepper 3200                  __pintcode_body 37EC                         _toupper 3760  
          end_of_initialization 3604                         min@size 0082             main@arduino_stopped 02DB  
         __end_of_LCD_SIZE_HORZ FDD1               __end_of_send_byte 3AF2           __end_of_LCD_SIZE_VERT FDD0  
                       fputc@fp 0086                   __Lmediumconst FDBA                         int_func 37EC  
                       fputs@fp 008F       __size_of_I2C_Master_Start 0008       __size_of_I2C_Master_Write 000A  
               ___lldiv@divisor 0084                 ___lldiv@counter 008C               __end_of_vfpfcnvrt 1630  
                 ?_servoRotate0 0001                  main@steps2_adj 02D4                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 00EB                      ??_stepper2 0100  
                       strlen@a 0082                         strlen@s 0080                       _PORTAbits 000F80  
                    _print_echo 2288                   stepper2@i_384 0107                   ___xxtofl@sign 0009  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                      main@i_1026 02E4  
                    main@i_1018 02D8                       i2___awdiv 3392     ultrasonic_main@step2_offset 0104  
                 send_byte@data 0082              i2___awdiv@dividend 0001           UI_main@poles_detected 00FB  
                ??_servoRotate0 0080     number_deploy@tires_detected 0102                     vfpfcnvrt@ap 00CA  
                   vfpfcnvrt@fp 00C6                     vfpfcnvrt@ll 00D0                  __end_of___wmul 3A9A  
                   ?_full_drive 00F9         __size_of_servoRotate180 0056                   __pidataCOMRAM 3B40  
                __end_of_printf 3A72                  __end_of_strlen 39C6             start_initialization 35BC  
                    min@minimum 0087              i2___awdiv@quotient 0007                     __end_of_ISR 382A  
                   __end_of_abs 38D0                     __end_of_pad 3200                     __end_of_min 2D5C  
         stepper2@count_stepper 0109                      ?i2___awdiv 0001               ??_I2C_Master_Init 0091  
             ??_I2C_Master_Read 0081               ??_I2C_Master_Wait 0080               ??_I2C_Master_Stop 0081  
             main@prev_avg_dist 02E8                  _poles_detected 0052                 ___llmod@divisor 0084  
               ___llmod@counter 0088                    UI_main@t_dep 00F9                     vfprintf@fmt 00E7  
                      ??___wmul 0084        I2C_Master_Init@clockFreq 008D                __CFG_LPT1OSC$OFF 000000  
          __size_of_system_init 0032                        ??_printf 00F5                        ??_strlen 0082  
                   ?_print_echo 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
      __size_of_ultrasonic_main 01AC                     __pbssCOMRAM 0038                   __pcstackBANK0 0080  
                 __pcstackBANK1 0100                   __pcstackBANK2 0280                ___aodiv@dividend 0080  
              ??_actuators_main 0110               __size_of___xxtofl 0140                       _backwards 3A9A  
                      ?_UI_main 00F9           __end_of_stepper2_back 3164             __size_of_full_drive 0330  
                     _atoi$1583 008F                       _atoi$1584 0093                       _atoi$1585 0091  
              _I2C_Master_Start 3B38                _I2C_Master_Write 3B26                       _dtoa$1099 00B1  
             __CFG_CCP2MX$PORTC 000000                       __pintcode 0008                   __pmediumconst FDBA  
                      ?___aodiv 0080                        ?___aomod 0080                        ?___fldiv 000F  
                      ?___awdiv 0080                ___aodiv@quotient 0092                        ?___fltol 0028  
                      ?___lldiv 0080                        ?___llmod 0080                        ?_lcdInst 0001  
             __size_of_vfprintf 0056               __size_of_stepper2 00FC            full_drive@stepper_no 00F9  
                      ?_initLCD 0001                        ?_isalpha 0080                        ?_isdigit 0080  
                      ?_islower 0080                        ?_isspace 0080                        ?_isupper 0080  
          __end_of_servoRotate0 3760                   ??_send_nibble 0081                        ?_pulse_e 0001  
                __size_of_brake 00B0                     ??i2___awdiv 0005                        ?_stepper 00FD  
                __size_of_fputc 006E                  __size_of_fputs 003C                        ?_toupper 0086  
                __size_of_servo 002C                      ?_backwards 0001                  __size_of_putch 0010  
                __size_of_start 0052                  ___wmul@product 0084                        _LATAbits 000F89  
                      _LATBbits 000F8A                        _LATCbits 000F8B                        _LATDbits 000F8C  
                      _LATEbits 000F8D                        UI_main@i 0159                main@pole_cl_dist 02D2  
                     _send_byte 3ADA             __size_of_print_echo 01EE          __size_of_number_deploy 0222  
                _LCD_LINE1_ADDR FDCE                  _LCD_LINE2_ADDR FDD1                  _LCD_LINE3_ADDR FDCD  
                _LCD_LINE4_ADDR FDCC                        i2u502_40 2FEC                        i2u520_40 33D8  
                      i2u513_40 29A8                        i2u615_40 3816                        i2u528_40 08B4  
                      i2u529_40 08C4                        i2u538_40 0A02                        i2u539_40 0A12  
                      i2u484_40 1B36                        i2u548_40 0B54                        i2u549_40 0B64  
                      i2u558_40 0CA6                        i2u559_40 0CB6                        i2u488_40 1B92  
                      i2u489_40 1BB6                        i2u497_40 2F66                        i2u498_40 2F96  
                      i2u498_45 2F8C                __CFG_WDTPS$32768 000000      stepper2_back@count_stepper 0102  
                _servoRotate180 3612                       _vfpfcnvrt 1286                       _xtoa$1110 00B2  
                     _xtoa$1111 00B4               ___wmul@multiplier 0080                       main@t_dep 02E2  
             i2___awdiv@divisor 0003                       main@stack 02DC               i2___awdiv@counter 0005  
                  _isspace$1610 0086                      vfpfcnvrt@c 00E0             actuators_main@stack 010C  
                     copy_data0 35D0               ??_ultrasonic_main 00FC                 UI_main@keypress 0154  
        __end_of_LCD_LINE1_ADDR FDCF                __size_of_UI_main 0814          __end_of_LCD_LINE2_ADDR FDD2  
        __end_of_LCD_LINE3_ADDR FDCE          __end_of_LCD_LINE4_ADDR FDCD             __end_of_send_nibble 3ADA  
                    ?_send_byte 0001                     UI_main@Pole 0104                        __Hrparam 0000  
                   UI_main@tick 0155                      vfprintf@ap 00E9                        __Lrparam 0000  
                    vfprintf@fp 00E5              __CFG_BOREN$SBORDIS 000000          __end_of_servoRotate180 3668  
              __size_of___aodiv 014A                __size_of___aomod 0126                __size_of___fldiv 0288  
              __size_of___awdiv 0086                __size_of___fltol 00BA                __size_of___lldiv 0084  
              __size_of___llmod 0068                    ??_full_drive 00FB                      ?_vfpfcnvrt 00C6  
               ___aodiv@divisor 0088                 ___aodiv@counter 0090                __size_of_lcdInst 0010  
      actuators_main@steps2_adj 010E                   _number_deploy 2066                 _I2C_Master_Init 355C  
               _I2C_Master_Read 3A20                __size_of_initLCD 0070                        ___xxtofl 28B0  
               _I2C_Master_Wait 3AF2                 _I2C_Master_Stop 3B30                __size_of_isalpha 0036  
              __size_of_isdigit 0032                __size_of_islower 0032                __size_of_isspace 0040  
                      __ptext10 29F0                        __ptext11 38D0                        __ptext20 3A4A  
                      __ptext12 30C4                        __ptext21 3668                        __ptext13 2E5E  
                      __ptext30 3998                        __ptext22 1286                        __ptext14 3200  
                      __ptext31 382A                        __ptext23 1E30                        __ptext15 1630  
                      __ptext40 3A72                        __ptext32 3486                        __ptext24 3760  
                      __ptext16 39F4                        __ptext41 3416                        __ptext33 3B06  
                      __ptext25 3902                        __ptext17 3612                        __ptext50 3A20  
                      __ptext42 3B16                        __ptext34 389C                        __ptext26 3934  
                      __ptext18 3710                        __ptext51 3AF2                        __ptext43 3ADA  
                      __ptext35 2B26                        __ptext27 3866                        __ptext19 0012  
                      __ptext52 355C                        __ptext44 3AC0                        __ptext36 2622  
                      __ptext28 1BE8                        __ptext53 330E                        __ptext45 39C6  
                      __ptext37 276C                        __ptext29 3164                        __ptext46 34F4  
                      __ptext38 37AC                        __ptext55 0826                        __ptext47 3B26  
                      __ptext39 3966                        __ptext56 3392                        __ptext48 3B30  
                      __ptext57 28B0                        __ptext49 3B38                        __ptext58 2F5A  
                      __ptext59 1960                __size_of_isupper 0032                        _avg_dist 0044  
              __size_of_pulse_e 002E                     ??_backwards 0083                __size_of_stepper 0088  
              __size_of_toupper 004C                   __size_of_echo 0544                   __size_of_atoi 0144  
                 __size_of_main 051C                   __size_of_dtoa 0248         stepper2_back@steps2_adj 00FD  
                 __size_of_trig 0102                   __size_of_xtoa 0236              __end_of_full_drive 1960  
                      _keypress 005F                        _temp_int 0173                 ?_servoRotate180 0001  
                      int$flags 006E                        _vfprintf 3668                        main@Pole 0280  
                      _stepper2 2E5E                       printf@fmt 00ED     I2C_Master_Write@byteToWrite 0081  
              ___aomod@dividend 0080           __size_of_servoRotate0 0050                        min@array 0080  
                  ??_print_echo 00F9                  ?_number_deploy 00F9                       putch@data 0083  
                _vfpfcnvrt$1125 00E3        __end_of_I2C_Master_Start 3B40        __end_of_I2C_Master_Write 3B30  
                    _INTCONbits 000FF2           ultrasonic_main@sensed 0102                        isalpha@c 0080  
                      isdigit@c 0080                       stepper2@i 0105                     _send_nibble 3AC0  
                      intlevel2 0000                   _LCD_SIZE_HORZ FDD0                        islower@c 0080  
                 _LCD_SIZE_VERT FDCF                        isspace@c 0080                ___lldiv@dividend 0080  
                   ??_send_byte 0082                        isupper@c 0080                  _tires_deployed 0054  
            __end_of_print_echo 2476                   ??_system_init 0080                    _servoRotate0 3710  
                      printf@ap 00F7         __end_of_I2C_Master_Init 35BC                 ___aomod@divisor 0088  
       __end_of_I2C_Master_Read 3A4A         __end_of_I2C_Master_Wait 3B06         __end_of_I2C_Master_Stop 3B38  
                   ??_vfpfcnvrt 00CC                     lcdInst@data 0083                 ___aomod@counter 0090  
                      stepper@i 0102       ultrasonic_main@steps2_adj 0106                ___lldiv@quotient 0088  
                      toupper@c 0086                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                   _timer_count 005C                    ___aodiv@sign 0091                    ___aomod@sign 0091  
          stepper@count_stepper 0100  
