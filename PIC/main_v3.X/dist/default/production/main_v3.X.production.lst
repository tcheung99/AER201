

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 04:25:42 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4620 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  003D10                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for _dists
   121  003D10  0000               	dw	0
   122  003D12  FFFF               	dw	65535
   123                           
   124                           ;initializer for _send
   125  003D14  01                 	db	1
   126                           
   127                           	psect	mediumconst
   128  00FDBA                     __pmediumconst:
   129                           	opt callstack 0
   130  00FDBA  00                 	db	0
   131  00FDBB                     _keys:
   132                           	opt callstack 0
   133  00FDBB  31                 	db	49
   134  00FDBC  32                 	db	50
   135  00FDBD  33                 	db	51
   136  00FDBE  41                 	db	65
   137  00FDBF  34                 	db	52
   138  00FDC0  35                 	db	53
   139  00FDC1  36                 	db	54
   140  00FDC2  42                 	db	66
   141  00FDC3  37                 	db	55
   142  00FDC4  38                 	db	56
   143  00FDC5  39                 	db	57
   144  00FDC6  43                 	db	67
   145  00FDC7  2A                 	db	42
   146  00FDC8  30                 	db	48
   147  00FDC9  23                 	db	35
   148  00FDCA  44                 	db	68
   149  00FDCB  00                 	db	0
   150  00FDCC                     __end_of_keys:
   151                           	opt callstack 0
   152  00FDCC  50                 	db	80
   153  00FDCD                     __end_of_LCD_LINE4_ADDR:
   154                           	opt callstack 0
   155  00FDCD  10                 	db	16
   156  00FDCE                     __end_of_LCD_LINE3_ADDR:
   157                           	opt callstack 0
   158  00FDCE                     _LCD_LINE1_ADDR:
   159                           	opt callstack 0
   160  00FDCE  00                 	db	0
   161  00FDCF                     __end_of_LCD_LINE1_ADDR:
   162                           	opt callstack 0
   163  00FDCF                     _LCD_SIZE_VERT:
   164                           	opt callstack 0
   165  00FDCF  04                 	db	4
   166  00FDD0                     __end_of_LCD_SIZE_VERT:
   167                           	opt callstack 0
   168  00FDD0                     _LCD_SIZE_HORZ:
   169                           	opt callstack 0
   170  00FDD0  10                 	db	16
   171  00FDD1                     __end_of_LCD_SIZE_HORZ:
   172                           	opt callstack 0
   173  00FDD1  40                 	db	64
   174  00FDD2                     __end_of_LCD_LINE2_ADDR:
   175                           	opt callstack 0
   176  0000                     _PORTAbits	set	3968
   177  0000                     _TRISAbits	set	3986
   178  0000                     _T1CON	set	4045
   179  0000                     _PORTB	set	3969
   180  0000                     _LATBbits	set	3978
   181  0000                     _TRISBbits	set	3987
   182  0000                     _TMR1H	set	4047
   183  0000                     _TMR1L	set	4046
   184  0000                     _LATDbits	set	3980
   185  0000                     _INTCONbits	set	4082
   186  0000                     _LATE	set	3981
   187  0000                     _TRISE	set	3990
   188  0000                     _LATC	set	3979
   189  0000                     _TRISC	set	3988
   190  0000                     _ADCON1	set	4033
   191  0000                     _TRISD	set	3989
   192  0000                     _LATD	set	3980
   193  0000                     _TRISA	set	3986
   194  0000                     _LATB	set	3978
   195  0000                     _TRISB	set	3987
   196  0000                     _LATAbits	set	3977
   197  0000                     _LATEbits	set	3981
   198  0000                     _LATCbits	set	3979
   199  0000                     _LATA	set	3977
   200  0000                     _SSPBUF	set	4041
   201  0000                     _SSPCON2bits	set	4037
   202  0000                     _SSPCON1	set	4038
   203  0000                     _SSPADD	set	4040
   204  0000                     _TRISCbits	set	3988
   205  0000                     _SSPCON1bits	set	4038
   206  0000                     _SSPCON2	set	4037
   207  0000                     _SSPSTAT	set	4039
   208  0000                     _GIE	set	32663
   209  0000                     _INT1IE	set	32643
   210  0000                     _RB2	set	31754
   211  0000                     _RB3	set	31755
   212  0000                     _RB4	set	31756
   213  0000                     _RB5	set	31757
   214  0000                     _RB6	set	31758
   215  0000                     _TMR1ON	set	32360
   216  0000                     _RB7	set	31759
   217  0000                     _INT1IF	set	32640
   218  0000                     _RBIE	set	32659
   219  0000                     _RBIF	set	32656
   220  0000                     _RD0	set	31768
   221  0000                     _RD1	set	31769
   222  0000                     _RC2	set	31762
   223  0000                     _RC1	set	31761
   224  00FDD2                     STR_40:
   225  00FDD2  50                 	db	80	;'P'
   226  00FDD3  25                 	db	37
   227  00FDD4  64                 	db	100	;'d'
   228  00FDD5  20                 	db	32
   229  00FDD6  44                 	db	68	;'D'
   230  00FDD7  65                 	db	101	;'e'
   231  00FDD8  70                 	db	112	;'p'
   232  00FDD9  3A                 	db	58	;':'
   233  00FDDA  25                 	db	37
   234  00FDDB  64                 	db	100	;'d'
   235  00FDDC  2C                 	db	44
   236  00FDDD  54                 	db	84	;'T'
   237  00FDDE  6F                 	db	111	;'o'
   238  00FDDF  74                 	db	116	;'t'
   239  00FDE0  3A                 	db	58	;':'
   240  00FDE1  25                 	db	37
   241  00FDE2  64                 	db	100	;'d'
   242  00FDE3  00                 	db	0
   243  00FDE4                     STR_30:
   244  00FDE4  20                 	db	32
   245  00FDE5  20                 	db	32
   246  00FDE6  20                 	db	32
   247  00FDE7  20                 	db	32
   248  00FDE8  20                 	db	32
   249  00FDE9  30                 	db	48	;'0'
   250  00FDEA  2D                 	db	45
   251  00FDEB  4D                 	db	77	;'M'
   252  00FDEC  65                 	db	101	;'e'
   253  00FDED  6E                 	db	110	;'n'
   254  00FDEE  75                 	db	117	;'u'
   255  00FDEF  20                 	db	32
   256  00FDF0  20                 	db	32
   257  00FDF1  20                 	db	32
   258  00FDF2  20                 	db	32
   259  00FDF3  20                 	db	32
   260  00FDF4  00                 	db	0
   261  00FDF5                     STR_47:
   262  00FDF5  3C                 	db	60	;'<'
   263  00FDF6  2A                 	db	42
   264  00FDF7  20                 	db	32
   265  00FDF8  20                 	db	32
   266  00FDF9  20                 	db	32
   267  00FDFA  30                 	db	48	;'0'
   268  00FDFB  2D                 	db	45
   269  00FDFC  4D                 	db	77	;'M'
   270  00FDFD  65                 	db	101	;'e'
   271  00FDFE  6E                 	db	110	;'n'
   272  00FDFF  75                 	db	117	;'u'
   273  00FE00  20                 	db	32
   274  00FE01  20                 	db	32
   275  00FE02  20                 	db	32
   276  00FE03  20                 	db	32
   277  00FE04  20                 	db	32
   278  00FE05  00                 	db	0
   279  00FE06                     STR_10:
   280  00FE06  44                 	db	68	;'D'
   281  00FE07  69                 	db	105	;'i'
   282  00FE08  73                 	db	115	;'s'
   283  00FE09  74                 	db	116	;'t'
   284  00FE0A  31                 	db	49	;'1'
   285  00FE0B  3D                 	db	61	;'='
   286  00FE0C  25                 	db	37
   287  00FE0D  64                 	db	100	;'d'
   288  00FE0E  2C                 	db	44
   289  00FE0F  41                 	db	65	;'A'
   290  00FE10  76                 	db	118	;'v'
   291  00FE11  67                 	db	103	;'g'
   292  00FE12  3D                 	db	61	;'='
   293  00FE13  25                 	db	37
   294  00FE14  64                 	db	100	;'d'
   295  00FE15  20                 	db	32
   296  00FE16  00                 	db	0
   297  00FE17                     STR_16:
   298  00FE17  44                 	db	68	;'D'
   299  00FE18  69                 	db	105	;'i'
   300  00FE19  73                 	db	115	;'s'
   301  00FE1A  74                 	db	116	;'t'
   302  00FE1B  34                 	db	52	;'4'
   303  00FE1C  3D                 	db	61	;'='
   304  00FE1D  25                 	db	37
   305  00FE1E  64                 	db	100	;'d'
   306  00FE1F  2C                 	db	44
   307  00FE20  41                 	db	65	;'A'
   308  00FE21  76                 	db	118	;'v'
   309  00FE22  67                 	db	103	;'g'
   310  00FE23  3D                 	db	61	;'='
   311  00FE24  25                 	db	37
   312  00FE25  64                 	db	100	;'d'
   313  00FE26  20                 	db	32
   314  00FE27  00                 	db	0
   315  00FE28                     STR_36:
   316  00FE28  20                 	db	32
   317  00FE29  20                 	db	32
   318  00FE2A  20                 	db	32
   319  00FE2B  20                 	db	32
   320  00FE2C  20                 	db	32
   321  00FE2D  30                 	db	48	;'0'
   322  00FE2E  2D                 	db	45
   323  00FE2F  4D                 	db	77	;'M'
   324  00FE30  65                 	db	101	;'e'
   325  00FE31  6E                 	db	110	;'n'
   326  00FE32  75                 	db	117	;'u'
   327  00FE33  20                 	db	32
   328  00FE34  20                 	db	32
   329  00FE35  20                 	db	32
   330  00FE36  23                 	db	35
   331  00FE37  3E                 	db	62	;'>'
   332  00FE38  00                 	db	0
   333  00FE39                     STR_39:
   334  00FE39  3C                 	db	60	;'<'
   335  00FE3A  2A                 	db	42
   336  00FE3B  20                 	db	32
   337  00FE3C  20                 	db	32
   338  00FE3D  20                 	db	32
   339  00FE3E  30                 	db	48	;'0'
   340  00FE3F  2D                 	db	45
   341  00FE40  4D                 	db	77	;'M'
   342  00FE41  65                 	db	101	;'e'
   343  00FE42  6E                 	db	110	;'n'
   344  00FE43  75                 	db	117	;'u'
   345  00FE44  20                 	db	32
   346  00FE45  20                 	db	32
   347  00FE46  20                 	db	32
   348  00FE47  23                 	db	35
   349  00FE48  3E                 	db	62	;'>'
   350  00FE49  00                 	db	0
   351  00FE4A                     STR_22:
   352  00FE4A  64                 	db	100	;'d'
   353  00FE4B  65                 	db	101	;'e'
   354  00FE4C  74                 	db	116	;'t'
   355  00FE4D  2C                 	db	44
   356  00FE4E  25                 	db	37
   357  00FE4F  64                 	db	100	;'d'
   358  00FE50  2C                 	db	44
   359  00FE51  20                 	db	32
   360  00FE52  74                 	db	116	;'t'
   361  00FE53  63                 	db	99	;'c'
   362  00FE54  6E                 	db	110	;'n'
   363  00FE55  74                 	db	116	;'t'
   364  00FE56  20                 	db	32
   365  00FE57  25                 	db	37
   366  00FE58  64                 	db	100	;'d'
   367  00FE59  00                 	db	0
   368  00FE5A                     STR_12:
   369  00FE5A  44                 	db	68	;'D'
   370  00FE5B  69                 	db	105	;'i'
   371  00FE5C  73                 	db	115	;'s'
   372  00FE5D  74                 	db	116	;'t'
   373  00FE5E  32                 	db	50	;'2'
   374  00FE5F  3D                 	db	61	;'='
   375  00FE60  25                 	db	37
   376  00FE61  64                 	db	100	;'d'
   377  00FE62  2C                 	db	44
   378  00FE63  41                 	db	65	;'A'
   379  00FE64  76                 	db	118	;'v'
   380  00FE65  67                 	db	103	;'g'
   381  00FE66  3D                 	db	61	;'='
   382  00FE67  25                 	db	37
   383  00FE68  64                 	db	100	;'d'
   384  00FE69  00                 	db	0
   385  00FE6A                     STR_14:
   386  00FE6A  44                 	db	68	;'D'
   387  00FE6B  69                 	db	105	;'i'
   388  00FE6C  73                 	db	115	;'s'
   389  00FE6D  74                 	db	116	;'t'
   390  00FE6E  33                 	db	51	;'3'
   391  00FE6F  3D                 	db	61	;'='
   392  00FE70  25                 	db	37
   393  00FE71  64                 	db	100	;'d'
   394  00FE72  2C                 	db	44
   395  00FE73  41                 	db	65	;'A'
   396  00FE74  76                 	db	118	;'v'
   397  00FE75  67                 	db	103	;'g'
   398  00FE76  3D                 	db	61	;'='
   399  00FE77  25                 	db	37
   400  00FE78  64                 	db	100	;'d'
   401  00FE79  00                 	db	0
   402  00FE7A                     STR_25:
   403  00FE7A  33                 	db	51	;'3'
   404  00FE7B  20                 	db	32
   405  00FE7C  2D                 	db	45
   406  00FE7D  20                 	db	32
   407  00FE7E  44                 	db	68	;'D'
   408  00FE7F  61                 	db	97	;'a'
   409  00FE80  74                 	db	116	;'t'
   410  00FE81  65                 	db	101	;'e'
   411  00FE82  26                 	db	38
   412  00FE83  54                 	db	84	;'T'
   413  00FE84  69                 	db	105	;'i'
   414  00FE85  6D                 	db	109	;'m'
   415  00FE86  65                 	db	101	;'e'
   416  00FE87  20                 	db	32
   417  00FE88  00                 	db	0
   418  00FE89                     STR_41:
   419  00FE89  44                 	db	68	;'D'
   420  00FE8A  69                 	db	105	;'i'
   421  00FE8B  73                 	db	115	;'s'
   422  00FE8C  74                 	db	116	;'t'
   423  00FE8D  54                 	db	84	;'T'
   424  00FE8E  6F                 	db	111	;'o'
   425  00FE8F  53                 	db	83	;'S'
   426  00FE90  74                 	db	116	;'t'
   427  00FE91  61                 	db	97	;'a'
   428  00FE92  72                 	db	114	;'r'
   429  00FE93  74                 	db	116	;'t'
   430  00FE94  3A                 	db	58	;':'
   431  00FE95  25                 	db	37
   432  00FE96  64                 	db	100	;'d'
   433  00FE97  00                 	db	0
   434  00FE98                     STR_29:
   435  00FE98  4D                 	db	77	;'M'
   436  00FE99  61                 	db	97	;'a'
   437  00FE9A  63                 	db	99	;'c'
   438  00FE9B  68                 	db	104	;'h'
   439  00FE9C  69                 	db	105	;'i'
   440  00FE9D  6E                 	db	110	;'n'
   441  00FE9E  65                 	db	101	;'e'
   442  00FE9F  20                 	db	32
   443  00FEA0  49                 	db	73	;'I'
   444  00FEA1  6E                 	db	110	;'n'
   445  00FEA2  20                 	db	32
   446  00FEA3  55                 	db	85	;'U'
   447  00FEA4  73                 	db	115	;'s'
   448  00FEA5  65                 	db	101	;'e'
   449  00FEA6  00                 	db	0
   450  00FEA7                     STR_49:
   451  00FEA7  25                 	db	37
   452  00FEA8  30                 	db	48	;'0'
   453  00FEA9  32                 	db	50	;'2'
   454  00FEAA  78                 	db	120	;'x'
   455  00FEAB  2F                 	db	47
   456  00FEAC  25                 	db	37
   457  00FEAD  30                 	db	48	;'0'
   458  00FEAE  32                 	db	50	;'2'
   459  00FEAF  78                 	db	120	;'x'
   460  00FEB0  2F                 	db	47
   461  00FEB1  25                 	db	37
   462  00FEB2  30                 	db	48	;'0'
   463  00FEB3  32                 	db	50	;'2'
   464  00FEB4  78                 	db	120	;'x'
   465  00FEB5  00                 	db	0
   466  00FEB6                     STR_50:
   467  00FEB6  25                 	db	37
   468  00FEB7  30                 	db	48	;'0'
   469  00FEB8  32                 	db	50	;'2'
   470  00FEB9  78                 	db	120	;'x'
   471  00FEBA  3A                 	db	58	;':'
   472  00FEBB  25                 	db	37
   473  00FEBC  30                 	db	48	;'0'
   474  00FEBD  32                 	db	50	;'2'
   475  00FEBE  78                 	db	120	;'x'
   476  00FEBF  3A                 	db	58	;':'
   477  00FEC0  25                 	db	37
   478  00FEC1  30                 	db	48	;'0'
   479  00FEC2  32                 	db	50	;'2'
   480  00FEC3  78                 	db	120	;'x'
   481  00FEC4  00                 	db	0
   482  00FEC5                     STR_38:
   483  00FEC5  4E                 	db	78	;'N'
   484  00FEC6  6F                 	db	111	;'o'
   485  00FEC7  2E                 	db	46
   486  00FEC8  20                 	db	32
   487  00FEC9  50                 	db	80	;'P'
   488  00FECA  6F                 	db	111	;'o'
   489  00FECB  6C                 	db	108	;'l'
   490  00FECC  65                 	db	101	;'e'
   491  00FECD  73                 	db	115	;'s'
   492  00FECE  3A                 	db	58	;':'
   493  00FECF  20                 	db	32
   494  00FED0  25                 	db	37
   495  00FED1  64                 	db	100	;'d'
   496  00FED2  00                 	db	0
   497  00FED3                     STR_37:
   498  00FED3  4E                 	db	78	;'N'
   499  00FED4  6F                 	db	111	;'o'
   500  00FED5  2E                 	db	46
   501  00FED6  20                 	db	32
   502  00FED7  54                 	db	84	;'T'
   503  00FED8  69                 	db	105	;'i'
   504  00FED9  72                 	db	114	;'r'
   505  00FEDA  65                 	db	101	;'e'
   506  00FEDB  73                 	db	115	;'s'
   507  00FEDC  3A                 	db	58	;':'
   508  00FEDD  20                 	db	32
   509  00FEDE  25                 	db	37
   510  00FEDF  64                 	db	100	;'d'
   511  00FEE0  00                 	db	0
   512  00FEE1                     STR_7:
   513  00FEE1  53                 	db	83	;'S'
   514  00FEE2  74                 	db	116	;'t'
   515  00FEE3  65                 	db	101	;'e'
   516  00FEE4  70                 	db	112	;'p'
   517  00FEE5  20                 	db	32
   518  00FEE6  73                 	db	115	;'s'
   519  00FEE7  70                 	db	112	;'p'
   520  00FEE8  65                 	db	101	;'e'
   521  00FEE9  65                 	db	101	;'e'
   522  00FEEA  64                 	db	100	;'d'
   523  00FEEB  20                 	db	32
   524  00FEEC  25                 	db	37
   525  00FEED  64                 	db	100	;'d'
   526  00FEEE  00                 	db	0
   527  00FEEF                     STR_19:
   528  00FEEF  62                 	db	98	;'b'
   529  00FEF0  72                 	db	114	;'r'
   530  00FEF1  65                 	db	101	;'e'
   531  00FEF2  61                 	db	97	;'a'
   532  00FEF3  6B                 	db	107	;'k'
   533  00FEF4  20                 	db	32
   534  00FEF5  68                 	db	104	;'h'
   535  00FEF6  65                 	db	101	;'e'
   536  00FEF7  72                 	db	114	;'r'
   537  00FEF8  65                 	db	101	;'e'
   538  00FEF9  65                 	db	101	;'e'
   539  00FEFA  3F                 	db	63	;'?'
   540  00FEFB  00                 	db	0
   541  00FEFC                     STR_54:
   542  00FEFC  6D                 	db	109	;'m'
   543  00FEFD  6F                 	db	111	;'o'
   544  00FEFE  72                 	db	114	;'r'
   545  00FEFF  65                 	db	101	;'e'
   546  00FF00  20                 	db	32
   547  00FF01  77                 	db	119	;'w'
   548  00FF02  61                 	db	97	;'a'
   549  00FF03  69                 	db	105	;'i'
   550  00FF04  74                 	db	116	;'t'
   551  00FF05  69                 	db	105	;'i'
   552  00FF06  6E                 	db	110	;'n'
   553  00FF07  67                 	db	103	;'g'
   554  00FF08  00                 	db	0
   555  00FF09                     STR_2:
   556  00FF09  53                 	db	83	;'S'
   557  00FF0A  74                 	db	116	;'t'
   558  00FF0B  65                 	db	101	;'e'
   559  00FF0C  70                 	db	112	;'p'
   560  00FF0D  70                 	db	112	;'p'
   561  00FF0E  65                 	db	101	;'e'
   562  00FF0F  72                 	db	114	;'r'
   563  00FF10  20                 	db	32
   564  00FF11  64                 	db	100	;'d'
   565  00FF12  6F                 	db	111	;'o'
   566  00FF13  6E                 	db	110	;'n'
   567  00FF14  65                 	db	101	;'e'
   568  00FF15  00                 	db	0
   569  00FF16                     STR_48:
   570  00FF16  44                 	db	68	;'D'
   571  00FF17  41                 	db	65	;'A'
   572  00FF18  54                 	db	84	;'T'
   573  00FF19  45                 	db	69	;'E'
   574  00FF1A  20                 	db	32
   575  00FF1B  26                 	db	38
   576  00FF1C  20                 	db	32
   577  00FF1D  54                 	db	84	;'T'
   578  00FF1E  49                 	db	73	;'I'
   579  00FF1F  4D                 	db	77	;'M'
   580  00FF20  45                 	db	69	;'E'
   581  00FF21  00                 	db	0
   582  00FF22                     STR_21:
   583  00FF22  73                 	db	115	;'s'
   584  00FF23  74                 	db	116	;'t'
   585  00FF24  65                 	db	101	;'e'
   586  00FF25  70                 	db	112	;'p'
   587  00FF26  73                 	db	115	;'s'
   588  00FF27  61                 	db	97	;'a'
   589  00FF28  64                 	db	100	;'d'
   590  00FF29  6A                 	db	106	;'j'
   591  00FF2A  20                 	db	32
   592  00FF2B  25                 	db	37
   593  00FF2C  64                 	db	100	;'d'
   594  00FF2D  00                 	db	0
   595  00FF2E                     STR_58:
   596  00FF2E  61                 	db	97	;'a'
   597  00FF2F  76                 	db	118	;'v'
   598  00FF30  67                 	db	103	;'g'
   599  00FF31  20                 	db	32
   600  00FF32  64                 	db	100	;'d'
   601  00FF33  69                 	db	105	;'i'
   602  00FF34  73                 	db	115	;'s'
   603  00FF35  74                 	db	116	;'t'
   604  00FF36  20                 	db	32
   605  00FF37  25                 	db	37
   606  00FF38  64                 	db	100	;'d'
   607  00FF39  00                 	db	0
   608  00FF3A                     STR_42:
   609  00FF3A  44                 	db	68	;'D'
   610  00FF3B  69                 	db	105	;'i'
   611  00FF3C  73                 	db	115	;'s'
   612  00FF3D  74                 	db	116	;'t'
   613  00FF3E  54                 	db	84	;'T'
   614  00FF3F  6F                 	db	111	;'o'
   615  00FF40  43                 	db	67	;'C'
   616  00FF41  4C                 	db	76	;'L'
   617  00FF42  3A                 	db	58	;':'
   618  00FF43  25                 	db	37
   619  00FF44  64                 	db	100	;'d'
   620  00FF45  00                 	db	0
   621  00FF46                     STR_24:
   622  00FF46  32                 	db	50	;'2'
   623  00FF47  20                 	db	32
   624  00FF48  2D                 	db	45
   625  00FF49  20                 	db	32
   626  00FF4A  53                 	db	83	;'S'
   627  00FF4B  75                 	db	117	;'u'
   628  00FF4C  6D                 	db	109	;'m'
   629  00FF4D  6D                 	db	109	;'m'
   630  00FF4E  61                 	db	97	;'a'
   631  00FF4F  72                 	db	114	;'r'
   632  00FF50  79                 	db	121	;'y'
   633  00FF51  00                 	db	0
   634  00FF52                     STR_59:
   635  00FF52  70                 	db	112	;'p'
   636  00FF53  6F                 	db	111	;'o'
   637  00FF54  6C                 	db	108	;'l'
   638  00FF55  65                 	db	101	;'e'
   639  00FF56  73                 	db	115	;'s'
   640  00FF57  20                 	db	32
   641  00FF58  64                 	db	100	;'d'
   642  00FF59  20                 	db	32
   643  00FF5A  25                 	db	37
   644  00FF5B  64                 	db	100	;'d'
   645  00FF5C  00                 	db	0
   646  00FF5D                     STR_20:
   647  00FF5D  6D                 	db	109	;'m'
   648  00FF5E  69                 	db	105	;'i'
   649  00FF5F  6E                 	db	110	;'n'
   650  00FF60  69                 	db	105	;'i'
   651  00FF61  6D                 	db	109	;'m'
   652  00FF62  75                 	db	117	;'u'
   653  00FF63  6D                 	db	109	;'m'
   654  00FF64  20                 	db	32
   655  00FF65  25                 	db	37
   656  00FF66  64                 	db	100	;'d'
   657  00FF67  00                 	db	0
   658  00FF68                     STR_60:
   659  00FF68  70                 	db	112	;'p'
   660  00FF69  6F                 	db	111	;'o'
   661  00FF6A  6C                 	db	108	;'l'
   662  00FF6B  65                 	db	101	;'e'
   663  00FF6C  73                 	db	115	;'s'
   664  00FF6D  20                 	db	32
   665  00FF6E  64                 	db	100	;'d'
   666  00FF6F  6F                 	db	111	;'o'
   667  00FF70  6E                 	db	110	;'n'
   668  00FF71  65                 	db	101	;'e'
   669  00FF72  00                 	db	0
   670  00FF73                     STR_3:
   671  00FF73  53                 	db	83	;'S'
   672  00FF74  65                 	db	101	;'e'
   673  00FF75  72                 	db	114	;'r'
   674  00FF76  76                 	db	118	;'v'
   675  00FF77  6F                 	db	111	;'o'
   676  00FF78  20                 	db	32
   677  00FF79  64                 	db	100	;'d'
   678  00FF7A  6F                 	db	111	;'o'
   679  00FF7B  6E                 	db	110	;'n'
   680  00FF7C  65                 	db	101	;'e'
   681  00FF7D  00                 	db	0
   682  00FF7E                     STR_11:
   683  00FF7E  44                 	db	68	;'D'
   684  00FF7F  69                 	db	105	;'i'
   685  00FF80  73                 	db	115	;'s'
   686  00FF81  74                 	db	116	;'t'
   687  00FF82  31                 	db	49	;'1'
   688  00FF83  20                 	db	32
   689  00FF84  3D                 	db	61	;'='
   690  00FF85  20                 	db	32
   691  00FF86  58                 	db	88	;'X'
   692  00FF87  00                 	db	0
   693  00FF88                     STR_13:
   694  00FF88  44                 	db	68	;'D'
   695  00FF89  69                 	db	105	;'i'
   696  00FF8A  73                 	db	115	;'s'
   697  00FF8B  74                 	db	116	;'t'
   698  00FF8C  32                 	db	50	;'2'
   699  00FF8D  20                 	db	32
   700  00FF8E  3D                 	db	61	;'='
   701  00FF8F  20                 	db	32
   702  00FF90  58                 	db	88	;'X'
   703  00FF91  00                 	db	0
   704  00FF92                     STR_15:
   705  00FF92  44                 	db	68	;'D'
   706  00FF93  69                 	db	105	;'i'
   707  00FF94  73                 	db	115	;'s'
   708  00FF95  74                 	db	116	;'t'
   709  00FF96  33                 	db	51	;'3'
   710  00FF97  20                 	db	32
   711  00FF98  3D                 	db	61	;'='
   712  00FF99  20                 	db	32
   713  00FF9A  58                 	db	88	;'X'
   714  00FF9B  00                 	db	0
   715  00FF9C                     STR_17:
   716  00FF9C  44                 	db	68	;'D'
   717  00FF9D  69                 	db	105	;'i'
   718  00FF9E  73                 	db	115	;'s'
   719  00FF9F  74                 	db	116	;'t'
   720  00FFA0  34                 	db	52	;'4'
   721  00FFA1  20                 	db	32
   722  00FFA2  3D                 	db	61	;'='
   723  00FFA3  20                 	db	32
   724  00FFA4  58                 	db	88	;'X'
   725  00FFA5  00                 	db	0
   726  00FFA6                     STR_56:
   727  00FFA6  64                 	db	100	;'d'
   728  00FFA7  75                 	db	117	;'u'
   729  00FFA8  6E                 	db	110	;'n'
   730  00FFA9  20                 	db	32
   731  00FFAA  62                 	db	98	;'b'
   732  00FFAB  72                 	db	114	;'r'
   733  00FFAC  65                 	db	101	;'e'
   734  00FFAD  61                 	db	97	;'a'
   735  00FFAE  6B                 	db	107	;'k'
   736  00FFAF  00                 	db	0
   737  00FFB0                     STR_61:
   738  00FFB0  62                 	db	98	;'b'
   739  00FFB1  61                 	db	97	;'a'
   740  00FFB2  63                 	db	99	;'c'
   741  00FFB3  6B                 	db	107	;'k'
   742  00FFB4  77                 	db	119	;'w'
   743  00FFB5  61                 	db	97	;'a'
   744  00FFB6  72                 	db	114	;'r'
   745  00FFB7  64                 	db	100	;'d'
   746  00FFB8  73                 	db	115	;'s'
   747  00FFB9  00                 	db	0
   748  00FFBA                     STR_55:
   749  00FFBA  64                 	db	100	;'d'
   750  00FFBB  6F                 	db	111	;'o'
   751  00FFBC  6E                 	db	110	;'n'
   752  00FFBD  65                 	db	101	;'e'
   753  00FFBE  20                 	db	32
   754  00FFBF  77                 	db	119	;'w'
   755  00FFC0  61                 	db	97	;'a'
   756  00FFC1  69                 	db	105	;'i'
   757  00FFC2  74                 	db	116	;'t'
   758  00FFC3  00                 	db	0
   759  00FFC4                     STR_23:
   760  00FFC4  31                 	db	49	;'1'
   761  00FFC5  20                 	db	32
   762  00FFC6  2D                 	db	45
   763  00FFC7  20                 	db	32
   764  00FFC8  53                 	db	83	;'S'
   765  00FFC9  74                 	db	116	;'t'
   766  00FFCA  61                 	db	97	;'a'
   767  00FFCB  72                 	db	114	;'r'
   768  00FFCC  74                 	db	116	;'t'
   769  00FFCD  00                 	db	0
   770  00FFCE                     STR_5:
   771  00FFCE  73                 	db	115	;'s'
   772  00FFCF  74                 	db	116	;'t'
   773  00FFD0  65                 	db	101	;'e'
   774  00FFD1  70                 	db	112	;'p'
   775  00FFD2  70                 	db	112	;'p'
   776  00FFD3  70                 	db	112	;'p'
   777  00FFD4  20                 	db	32
   778  00FFD5  25                 	db	37
   779  00FFD6  64                 	db	100	;'d'
   780  00FFD7  00                 	db	0
   781  00FFD8                     STR_1:
   782  00FFD8  63                 	db	99	;'c'
   783  00FFD9  6E                 	db	110	;'n'
   784  00FFDA  74                 	db	116	;'t'
   785  00FFDB  20                 	db	32
   786  00FFDC  69                 	db	105	;'i'
   787  00FFDD  73                 	db	115	;'s'
   788  00FFDE  20                 	db	32
   789  00FFDF  25                 	db	37
   790  00FFE0  64                 	db	100	;'d'
   791  00FFE1  00                 	db	0
   792  00FFE2                     STR_31:
   793  00FFE2  4F                 	db	79	;'O'
   794  00FFE3  70                 	db	112	;'p'
   795  00FFE4  20                 	db	32
   796  00FFE5  54                 	db	84	;'T'
   797  00FFE6  69                 	db	105	;'i'
   798  00FFE7  6D                 	db	109	;'m'
   799  00FFE8  65                 	db	101	;'e'
   800  00FFE9  3A                 	db	58	;':'
   801  00FFEA  00                 	db	0
   802  00FFEB                     STR_18:
   803  00FFEB  6F                 	db	111	;'o'
   804  00FFEC  72                 	db	114	;'r'
   805  00FFED  20                 	db	32
   806  00FFEE  68                 	db	104	;'h'
   807  00FFEF  65                 	db	101	;'e'
   808  00FFF0  72                 	db	114	;'r'
   809  00FFF1  65                 	db	101	;'e'
   810  00FFF2  00                 	db	0
   811  00FFF3                     STR_6:
   812  00FFF3  73                 	db	115	;'s'
   813  00FFF4  74                 	db	116	;'t'
   814  00FFF5  65                 	db	101	;'e'
   815  00FFF6  70                 	db	112	;'p'
   816  00FFF7  31                 	db	49	;'1'
   817  00FFF8  00                 	db	0
   818  00FFF9                     STR_9:
   819  00FFF9  77                 	db	119	;'w'
   820  00FFFA  68                 	db	104	;'h'
   821  00FFFB  61                 	db	97	;'a'
   822  00FFFC  74                 	db	116	;'t'
   823  00FFFD  00                 	db	0
   824  0000                     
   825                           ; #config settings
   826  00FFFE  00                 	db	0	; dummy byte at the end
   827  0000                     
   828                           	psect	cinit
   829  00385E                     __pcinit:
   830                           	opt callstack 0
   831  00385E                     start_initialization:
   832                           	opt callstack 0
   833  00385E                     __initialization:
   834                           	opt callstack 0
   835                           
   836                           ; Initialize objects allocated to COMRAM (5 bytes)
   837                           ; load TBLPTR registers with __pidataCOMRAM
   838  00385E  0E10               	movlw	low __pidataCOMRAM
   839  003860  6EF6               	movwf	tblptrl,c
   840  003862  0E3D               	movlw	high __pidataCOMRAM
   841  003864  6EF7               	movwf	tblptrh,c
   842  003866  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   843  003868  6EF8               	movwf	tblptru,c
   844  00386A  EE00  F069         	lfsr	0,__pdataCOMRAM
   845  00386E  EE10 F005          	lfsr	1,5
   846  003872                     copy_data0:
   847  003872  0009               	tblrd		*+
   848  003874  CFF5 FFEE          	movff	tablat,postinc0
   849  003878  50E5               	movf	postdec1,w,c
   850  00387A  50E1               	movf	fsr1l,w,c
   851  00387C  E1FA               	bnz	copy_data0
   852                           
   853                           ; Clear objects allocated to BANK2 (160 bytes)
   854  00387E  EE02  F000         	lfsr	0,__pbssBANK2
   855  003882  0EA0               	movlw	160
   856  003884                     clear_0:
   857  003884  6AEE               	clrf	postinc0,c
   858  003886  06E8               	decf	wreg,f,c
   859  003888  E1FD               	bnz	clear_0
   860                           
   861                           ; Clear objects allocated to BANK1 (28 bytes)
   862  00388A  EE01  F0CA         	lfsr	0,__pbssBANK1
   863  00388E  0E1C               	movlw	28
   864  003890                     clear_1:
   865  003890  6AEE               	clrf	postinc0,c
   866  003892  06E8               	decf	wreg,f,c
   867  003894  E1FD               	bnz	clear_1
   868                           
   869                           ; Clear objects allocated to BANK0 (1 bytes)
   870  003896  0100               	movlb	0
   871  003898  6BFF               	clrf	__pbssBANK0& (0+255),b
   872                           
   873                           ; Clear objects allocated to COMRAM (49 bytes)
   874  00389A  EE00  F038         	lfsr	0,__pbssCOMRAM
   875  00389E  0E31               	movlw	49
   876  0038A0                     clear_2:
   877  0038A0  6AEE               	clrf	postinc0,c
   878  0038A2  06E8               	decf	wreg,f,c
   879  0038A4  E1FD               	bnz	clear_2
   880  0038A6                     end_of_initialization:
   881                           	opt callstack 0
   882  0038A6                     __end_of__initialization:
   883                           	opt callstack 0
   884  0038A6  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   885  0038A8  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   886  0038AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   887  0038AC  6EF8               	movwf	tblptru,c
   888  0038AE  0100               	movlb	0
   889  0038B0  EFB5  F006         	goto	_main	;jump to C main() function
   890                           
   891                           	psect	bssCOMRAM
   892  000038                     __pbssCOMRAM:
   893                           	opt callstack 0
   894  000038                     _sum:
   895                           	opt callstack 0
   896  000038                     	ds	8
   897  000040                     _sumf:
   898                           	opt callstack 0
   899  000040                     	ds	4
   900  000044                     _avg_dist:
   901                           	opt callstack 0
   902  000044                     	ds	4
   903  000048                     _nout:
   904                           	opt callstack 0
   905  000048                     	ds	2
   906  00004A                     _width:
   907                           	opt callstack 0
   908  00004A                     	ds	2
   909  00004C                     _prec:
   910                           	opt callstack 0
   911  00004C                     	ds	2
   912  00004E                     _flags:
   913                           	opt callstack 0
   914  00004E                     	ds	2
   915  000050                     _meas:
   916                           	opt callstack 0
   917  000050                     	ds	2
   918  000052                     _poles_detected:
   919                           	opt callstack 0
   920  000052                     	ds	2
   921  000054                     _tires_deployed:
   922                           	opt callstack 0
   923  000054                     	ds	2
   924  000056                     _tick:
   925                           	opt callstack 0
   926  000056                     	ds	2
   927  000058                     _sens:
   928                           	opt callstack 0
   929  000058                     	ds	2
   930  00005A                     _b:
   931                           	opt callstack 0
   932  00005A                     	ds	2
   933  00005C                     _timer_count:
   934                           	opt callstack 0
   935  00005C                     	ds	2
   936  00005E                     _data:
   937                           	opt callstack 0
   938  00005E                     	ds	1
   939  00005F                     _keypress:
   940                           	opt callstack 0
   941  00005F                     	ds	1
   942  000060                     _counter:
   943                           	opt callstack 0
   944  000060                     	ds	1
   945  000061                     _a:
   946                           	opt callstack 0
   947  000061                     	ds	8
   948                           
   949                           	psect	dataCOMRAM
   950  000069                     __pdataCOMRAM:
   951                           	opt callstack 0
   952  000069                     _dists:
   953                           	opt callstack 0
   954  000069                     	ds	4
   955  00006D                     _send:
   956                           	opt callstack 0
   957  00006D                     	ds	1
   958                           
   959                           	psect	bssBANK0
   960  0000FF                     __pbssBANK0:
   961                           	opt callstack 0
   962  0000FF                     _temp:
   963                           	opt callstack 0
   964  0000FF                     	ds	1
   965                           
   966                           	psect	bssBANK1
   967  0001CA                     __pbssBANK1:
   968                           	opt callstack 0
   969  0001CA                     _prev_dist_final:
   970                           	opt callstack 0
   971  0001CA                     	ds	8
   972  0001D2                     _time:
   973                           	opt callstack 0
   974  0001D2                     	ds	7
   975  0001D9                     _pressed:
   976                           	opt callstack 0
   977  0001D9                     	ds	2
   978  0001DB                     _i:
   979                           	opt callstack 0
   980  0001DB                     	ds	2
   981  0001DD                     _disp:
   982                           	opt callstack 0
   983  0001DD                     	ds	2
   984  0001DF                     _state:
   985                           	opt callstack 0
   986  0001DF                     	ds	2
   987  0001E1                     _temp_int:
   988                           	opt callstack 0
   989  0001E1                     	ds	2
   990  0001E3                     _cnt:
   991                           	opt callstack 0
   992  0001E3                     	ds	2
   993  0001E5                     _key_was_pressed:
   994                           	opt callstack 0
   995  0001E5                     	ds	1
   996                           
   997                           	psect	bssBANK2
   998  000200                     __pbssBANK2:
   999                           	opt callstack 0
  1000  000200                     _Pole:
  1001                           	opt callstack 0
  1002  000200                     	ds	80
  1003  000250                     _dist_final:
  1004                           	opt callstack 0
  1005  000250                     	ds	48
  1006  000280                     _dbuf:
  1007                           	opt callstack 0
  1008  000280                     	ds	32
  1009                           
  1010                           	psect	cstackBANK1
  1011  000100                     __pcstackBANK1:
  1012                           	opt callstack 0
  1013  000100                     ??_stepper2:
  1014  000100                     ??_stepper2_back:
  1015  000100                     ??_UI_main:
  1016  000100                     stepper@count_stepper:
  1017                           	opt callstack 0
  1018  000100                     number_deploy@tires_t:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x0
  1022  000100                     	ds	1
  1023  000101                     stepper2_back@direction:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x1
  1027  000101                     	ds	1
  1028  000102                     stepper@i:
  1029                           	opt callstack 0
  1030  000102                     stepper2_back@count_stepper:
  1031                           	opt callstack 0
  1032  000102                     ultrasonic_main@sensed:
  1033                           	opt callstack 0
  1034  000102                     number_deploy@tires_detected:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x2
  1038  000102                     	ds	2
  1039  000104                     stepper@i_380:
  1040                           	opt callstack 0
  1041  000104                     stepper2_back@i:
  1042                           	opt callstack 0
  1043  000104                     ultrasonic_main@step2_offset:
  1044                           	opt callstack 0
  1045  000104                     number_deploy@t_count:
  1046                           	opt callstack 0
  1047  000104                     UI_main@Pole:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 80 bytes @ 0x4
  1051  000104                     	ds	1
  1052  000105                     stepper2@i:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x5
  1056  000105                     	ds	1
  1057  000106                     ultrasonic_main@steps2_adj:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x6
  1061  000106                     	ds	1
  1062  000107                     stepper2@i_388:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x7
  1066  000107                     	ds	1
  1067  000108                     ultrasonic_main@min_us_dist_918:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x8
  1071  000108                     	ds	1
  1072  000109                     stepper2@count_stepper:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x9
  1076  000109                     	ds	2
  1077  00010B                     stepper2@direction:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 1 bytes @ 0xB
  1081  00010B                     	ds	1
  1082  00010C                     actuators_main@stack:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0xC
  1086  00010C                     	ds	2
  1087  00010E                     actuators_main@steps2_adj:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 2 bytes @ 0xE
  1091  00010E                     	ds	2
  1092  000110                     ??_actuators_main:
  1093                           
  1094                           ; 1 bytes @ 0x10
  1095  000110                     	ds	2
  1096  000112                     actuators_main@act_cnt:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x12
  1100  000112                     	ds	66
  1101  000154                     UI_main@keypress:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x54
  1105  000154                     	ds	1
  1106  000155                     UI_main@tick:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x55
  1110  000155                     	ds	4
  1111  000159                     UI_main@i:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x59
  1115  000159                     	ds	1
  1116  00015A                     ??_main:
  1117                           
  1118                           ; 1 bytes @ 0x5A
  1119  00015A                     	ds	4
  1120  00015E                     main@Pole:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 80 bytes @ 0x5E
  1124  00015E                     	ds	84
  1125  0001B2                     main@steps2_adj:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0xB2
  1129  0001B2                     	ds	2
  1130  0001B4                     main@i:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0xB4
  1134  0001B4                     	ds	2
  1135  0001B6                     main@i_1026:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0xB6
  1139  0001B6                     	ds	2
  1140  0001B8                     main@act_done:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 1 bytes @ 0xB8
  1144  0001B8                     	ds	1
  1145  0001B9                     main@arduino_stopped:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 1 bytes @ 0xB9
  1149  0001B9                     	ds	1
  1150  0001BA                     main@stack:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0xBA
  1154  0001BA                     	ds	2
  1155  0001BC                     main@k:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0xBC
  1159  0001BC                     	ds	2
  1160  0001BE                     main@t_count:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 2 bytes @ 0xBE
  1164  0001BE                     	ds	2
  1165  0001C0                     main@t_dep:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 2 bytes @ 0xC0
  1169  0001C0                     	ds	2
  1170  0001C2                     main@i_1030:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0xC2
  1174  0001C2                     	ds	2
  1175  0001C4                     main@poles_detected:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 2 bytes @ 0xC4
  1179  0001C4                     	ds	2
  1180  0001C6                     main@prev_avg_dist:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 4 bytes @ 0xC6
  1184  0001C6                     	ds	4
  1185                           
  1186                           	psect	cstackBANK0
  1187  000080                     __pcstackBANK0:
  1188                           	opt callstack 0
  1189  000080                     ??_I2C_Master_Wait:
  1190  000080                     ??_trig:
  1191  000080                     ?_strlen:
  1192                           	opt callstack 0
  1193  000080                     ?_isupper:
  1194                           	opt callstack 0
  1195  000080                     ?_isalpha:
  1196                           	opt callstack 0
  1197  000080                     ?_isdigit:
  1198                           	opt callstack 0
  1199  000080                     ?_isspace:
  1200                           	opt callstack 0
  1201  000080                     ?_islower:
  1202                           	opt callstack 0
  1203  000080                     ?_min:
  1204                           	opt callstack 0
  1205  000080                     ?___wmul:
  1206                           	opt callstack 0
  1207  000080                     ?___awdiv:
  1208                           	opt callstack 0
  1209  000080                     ?___lldiv:
  1210                           	opt callstack 0
  1211  000080                     ?___llmod:
  1212                           	opt callstack 0
  1213  000080                     ?___aodiv:
  1214                           	opt callstack 0
  1215  000080                     ?___aomod:
  1216                           	opt callstack 0
  1217  000080                     pulse_e@interruptState:
  1218                           	opt callstack 0
  1219  000080                     servoRotate0@servo:
  1220                           	opt callstack 0
  1221  000080                     servoRotate180@servo:
  1222                           	opt callstack 0
  1223  000080                     min@array:
  1224                           	opt callstack 0
  1225  000080                     ___wmul@multiplier:
  1226                           	opt callstack 0
  1227  000080                     ___awdiv@dividend:
  1228                           	opt callstack 0
  1229  000080                     isalpha@c:
  1230                           	opt callstack 0
  1231  000080                     isdigit@c:
  1232                           	opt callstack 0
  1233  000080                     isspace@c:
  1234                           	opt callstack 0
  1235  000080                     isupper@c:
  1236                           	opt callstack 0
  1237  000080                     strlen@s:
  1238                           	opt callstack 0
  1239  000080                     islower@c:
  1240                           	opt callstack 0
  1241  000080                     ___lldiv@dividend:
  1242                           	opt callstack 0
  1243  000080                     ___llmod@dividend:
  1244                           	opt callstack 0
  1245  000080                     ___aodiv@dividend:
  1246                           	opt callstack 0
  1247  000080                     ___aomod@dividend:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 8 bytes @ 0x0
  1251  000080                     	ds	1
  1252  000081                     I2C_Master_Read@ackBit:
  1253                           	opt callstack 0
  1254  000081                     send_nibble@data:
  1255                           	opt callstack 0
  1256  000081                     I2C_Master_Write@byteToWrite:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x1
  1260  000081                     	ds	1
  1261  000082                     ??_isupper:
  1262  000082                     ??_isalpha:
  1263  000082                     ??_isdigit:
  1264  000082                     ??_isspace:
  1265  000082                     ??_islower:
  1266  000082                     ??_servoRotate0:
  1267  000082                     ??_servoRotate180:
  1268  000082                     I2C_Master_Read@receivedByte:
  1269                           	opt callstack 0
  1270  000082                     send_byte@data:
  1271                           	opt callstack 0
  1272  000082                     min@size:
  1273                           	opt callstack 0
  1274  000082                     ___wmul@multiplicand:
  1275                           	opt callstack 0
  1276  000082                     ___awdiv@divisor:
  1277                           	opt callstack 0
  1278  000082                     strlen@a:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x2
  1282  000082                     	ds	1
  1283  000083                     lcdInst@data:
  1284                           	opt callstack 0
  1285  000083                     putch@data:
  1286                           	opt callstack 0
  1287  000083                     servoRotate0@i:
  1288                           	opt callstack 0
  1289  000083                     servoRotate180@i:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x3
  1293  000083                     	ds	1
  1294  000084                     ??_initLCD:
  1295  000084                     ??_min:
  1296  000084                     ___awdiv@counter:
  1297                           	opt callstack 0
  1298  000084                     ___wmul@product:
  1299                           	opt callstack 0
  1300  000084                     fputc@c:
  1301                           	opt callstack 0
  1302  000084                     ___lldiv@divisor:
  1303                           	opt callstack 0
  1304  000084                     ___llmod@divisor:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 4 bytes @ 0x4
  1308  000084                     	ds	1
  1309  000085                     ??_servo:
  1310  000085                     ___awdiv@sign:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 1 bytes @ 0x5
  1314  000085                     	ds	1
  1315  000086                     ?_toupper:
  1316                           	opt callstack 0
  1317  000086                     _isspace$1614:
  1318                           	opt callstack 0
  1319  000086                     ___awdiv@quotient:
  1320                           	opt callstack 0
  1321  000086                     fputc@fp:
  1322                           	opt callstack 0
  1323  000086                     toupper@c:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x6
  1327  000086                     	ds	1
  1328  000087                     ?_atoi:
  1329                           	opt callstack 0
  1330  000087                     min@minimum:
  1331                           	opt callstack 0
  1332  000087                     atoi@s:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x7
  1336  000087                     	ds	1
  1337  000088                     ??_fputc:
  1338  000088                     ??_toupper:
  1339  000088                     ___llmod@counter:
  1340                           	opt callstack 0
  1341  000088                     ___lldiv@quotient:
  1342                           	opt callstack 0
  1343  000088                     ___aodiv@divisor:
  1344                           	opt callstack 0
  1345  000088                     ___aomod@divisor:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 8 bytes @ 0x8
  1349  000088                     	ds	1
  1350  000089                     ??_atoi:
  1351  000089                     min@i:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x9
  1355  000089                     	ds	3
  1356  00008C                     ___lldiv@counter:
  1357                           	opt callstack 0
  1358  00008C                     _toupper$1679:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0xC
  1362  00008C                     	ds	1
  1363  00008D                     atoi@neg:
  1364                           	opt callstack 0
  1365  00008D                     fputs@s:
  1366                           	opt callstack 0
  1367  00008D                     I2C_Master_Init@clockFreq:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 4 bytes @ 0xD
  1371  00008D                     	ds	2
  1372  00008F                     _atoi$1587:
  1373                           	opt callstack 0
  1374  00008F                     fputs@fp:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 2 bytes @ 0xF
  1378  00008F                     	ds	1
  1379  000090                     ___aodiv@counter:
  1380                           	opt callstack 0
  1381  000090                     ___aomod@counter:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 1 bytes @ 0x10
  1385  000090                     	ds	1
  1386  000091                     ??_I2C_Master_Init:
  1387  000091                     ___aodiv@sign:
  1388                           	opt callstack 0
  1389  000091                     ___aomod@sign:
  1390                           	opt callstack 0
  1391  000091                     fputs@c:
  1392                           	opt callstack 0
  1393  000091                     _atoi$1589:
  1394                           	opt callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x11
  1397  000091                     	ds	1
  1398  000092                     ?_abs:
  1399                           	opt callstack 0
  1400  000092                     abs@a:
  1401                           	opt callstack 0
  1402  000092                     fputs@i:
  1403                           	opt callstack 0
  1404  000092                     ___aodiv@quotient:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 8 bytes @ 0x12
  1408  000092                     	ds	1
  1409  000093                     _atoi$1588:
  1410                           	opt callstack 0
  1411                           
  1412                           ; 1 bytes @ 0x13
  1413  000093                     	ds	1
  1414  000094                     ??_abs:
  1415  000094                     ?_pad:
  1416                           	opt callstack 0
  1417  000094                     pad@fp:
  1418                           	opt callstack 0
  1419  000094                     atoi@n:
  1420                           	opt callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x14
  1423  000094                     	ds	1
  1424  000095                     
  1425                           ; 1 bytes @ 0x15
  1426  000095                     	ds	1
  1427  000096                     pad@buf:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0x16
  1431  000096                     	ds	2
  1432  000098                     pad@p:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x18
  1436  000098                     	ds	2
  1437  00009A                     ??_pad:
  1438                           
  1439                           ; 1 bytes @ 0x1A
  1440  00009A                     	ds	1
  1441  00009B                     pad@i:
  1442                           	opt callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x1B
  1445  00009B                     	ds	2
  1446  00009D                     pad@w:
  1447                           	opt callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x1D
  1450  00009D                     	ds	2
  1451  00009F                     ?_dtoa:
  1452                           	opt callstack 0
  1453  00009F                     ?_xtoa:
  1454                           	opt callstack 0
  1455  00009F                     dtoa@fp:
  1456                           	opt callstack 0
  1457  00009F                     xtoa@fp:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x1F
  1461  00009F                     	ds	2
  1462  0000A1                     dtoa@d:
  1463                           	opt callstack 0
  1464  0000A1                     xtoa@d:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 8 bytes @ 0x21
  1468  0000A1                     	ds	8
  1469  0000A9                     ??_dtoa:
  1470  0000A9                     xtoa@x:
  1471                           	opt callstack 0
  1472                           
  1473                           ; 1 bytes @ 0x29
  1474  0000A9                     	ds	1
  1475  0000AA                     ??_xtoa:
  1476                           
  1477                           ; 1 bytes @ 0x2A
  1478  0000AA                     	ds	7
  1479  0000B1                     _dtoa$1103:
  1480                           	opt callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x31
  1483  0000B1                     	ds	1
  1484  0000B2                     _xtoa$1114:
  1485                           	opt callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x32
  1488  0000B2                     	ds	1
  1489  0000B3                     dtoa@p:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x33
  1493  0000B3                     	ds	1
  1494  0000B4                     _xtoa$1115:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x34
  1498  0000B4                     	ds	1
  1499  0000B5                     dtoa@w:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x35
  1503  0000B5                     	ds	1
  1504  0000B6                     xtoa@p:
  1505                           	opt callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x36
  1508  0000B6                     	ds	1
  1509  0000B7                     dtoa@s:
  1510                           	opt callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x37
  1513  0000B7                     	ds	1
  1514  0000B8                     xtoa@w:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x38
  1518  0000B8                     	ds	1
  1519  0000B9                     dtoa@n:
  1520                           	opt callstack 0
  1521                           
  1522                           ; 8 bytes @ 0x39
  1523  0000B9                     	ds	1
  1524  0000BA                     xtoa@n:
  1525                           	opt callstack 0
  1526                           
  1527                           ; 8 bytes @ 0x3A
  1528  0000BA                     	ds	7
  1529  0000C1                     dtoa@i:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x41
  1533  0000C1                     	ds	1
  1534  0000C2                     xtoa@i:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x42
  1538  0000C2                     	ds	2
  1539  0000C4                     xtoa@c:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 2 bytes @ 0x44
  1543  0000C4                     	ds	2
  1544  0000C6                     ?_vfpfcnvrt:
  1545                           	opt callstack 0
  1546  0000C6                     vfpfcnvrt@fp:
  1547                           	opt callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x46
  1550  0000C6                     	ds	2
  1551  0000C8                     vfpfcnvrt@fmt:
  1552                           	opt callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x48
  1555  0000C8                     	ds	2
  1556  0000CA                     vfpfcnvrt@ap:
  1557                           	opt callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x4A
  1560  0000CA                     	ds	2
  1561  0000CC                     ??_vfpfcnvrt:
  1562                           
  1563                           ; 1 bytes @ 0x4C
  1564  0000CC                     	ds	4
  1565  0000D0                     vfpfcnvrt@ll:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 8 bytes @ 0x50
  1569  0000D0                     	ds	8
  1570  0000D8                     vfpfcnvrt@llu:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 8 bytes @ 0x58
  1574  0000D8                     	ds	8
  1575  0000E0                     vfpfcnvrt@c:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 1 bytes @ 0x60
  1579  0000E0                     	ds	1
  1580  0000E1                     vfpfcnvrt@done:
  1581                           	opt callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x61
  1584  0000E1                     	ds	2
  1585  0000E3                     _vfpfcnvrt$1129:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x63
  1589  0000E3                     	ds	2
  1590  0000E5                     ?_vfprintf:
  1591                           	opt callstack 0
  1592  0000E5                     vfprintf@fp:
  1593                           	opt callstack 0
  1594                           
  1595                           ; 2 bytes @ 0x65
  1596  0000E5                     	ds	2
  1597  0000E7                     vfprintf@fmt:
  1598                           	opt callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x67
  1601  0000E7                     	ds	2
  1602  0000E9                     vfprintf@ap:
  1603                           	opt callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x69
  1606  0000E9                     	ds	2
  1607  0000EB                     vfprintf@cfmt:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 2 bytes @ 0x6B
  1611  0000EB                     	ds	2
  1612  0000ED                     ?_printf:
  1613                           	opt callstack 0
  1614  0000ED                     printf@fmt:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x6D
  1618  0000ED                     	ds	8
  1619  0000F5                     
  1620                           ; 1 bytes @ 0x75
  1621  0000F5                     	ds	2
  1622  0000F7                     printf@ap:
  1623                           	opt callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x77
  1626  0000F7                     	ds	2
  1627  0000F9                     ??_brake:
  1628  0000F9                     ??_print_echo:
  1629  0000F9                     ?_number_deploy:
  1630                           	opt callstack 0
  1631  0000F9                     full_drive@stepper_no:
  1632                           	opt callstack 0
  1633  0000F9                     number_deploy@avg_dist:
  1634                           	opt callstack 0
  1635  0000F9                     UI_main@t_dep:
  1636                           	opt callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x79
  1639  0000F9                     	ds	1
  1640  0000FA                     ?_ultrasonic_main:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x7A
  1644  0000FA                     	ds	1
  1645  0000FB                     ??_full_drive:
  1646  0000FB                     number_deploy@poles_detected:
  1647                           	opt callstack 0
  1648  0000FB                     UI_main@poles_detected:
  1649                           	opt callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x7B
  1652  0000FB                     	ds	1
  1653  0000FC                     ??_ultrasonic_main:
  1654  0000FC                     full_drive@direction:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 1 bytes @ 0x7C
  1658  0000FC                     	ds	1
  1659  0000FD                     ??_number_deploy:
  1660  0000FD                     stepper@stack:
  1661                           	opt callstack 0
  1662  0000FD                     stepper2@steps2_adj:
  1663                           	opt callstack 0
  1664  0000FD                     stepper2_back@steps2_adj:
  1665                           	opt callstack 0
  1666                           
  1667                           ; 2 bytes @ 0x7D
  1668  0000FD                     	ds	2
  1669  0000FF                     
  1670                           ; 1 bytes @ 0x7F
  1671                           
  1672                           	psect	cstackCOMRAM
  1673  000001                     __pcstackCOMRAM:
  1674                           	opt callstack 0
  1675  000001                     ?i2___awdiv:
  1676                           	opt callstack 0
  1677  000001                     ?___xxtofl:
  1678                           	opt callstack 0
  1679  000001                     i2___awdiv@dividend:
  1680                           	opt callstack 0
  1681  000001                     ___xxtofl@val:
  1682                           	opt callstack 0
  1683                           
  1684                           ; 4 bytes @ 0x0
  1685  000001                     	ds	2
  1686  000003                     i2___awdiv@divisor:
  1687                           	opt callstack 0
  1688                           
  1689                           ; 2 bytes @ 0x2
  1690  000003                     	ds	2
  1691  000005                     ??___xxtofl:
  1692  000005                     i2___awdiv@counter:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 1 bytes @ 0x4
  1696  000005                     	ds	1
  1697  000006                     i2___awdiv@sign:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x5
  1701  000006                     	ds	1
  1702  000007                     i2___awdiv@quotient:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 2 bytes @ 0x6
  1706  000007                     	ds	2
  1707  000009                     ___xxtofl@sign:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 1 bytes @ 0x8
  1711  000009                     	ds	1
  1712  00000A                     ___xxtofl@exp:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 1 bytes @ 0x9
  1716  00000A                     	ds	1
  1717  00000B                     ___xxtofl@arg:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 4 bytes @ 0xA
  1721  00000B                     	ds	4
  1722  00000F                     ?___fldiv:
  1723                           	opt callstack 0
  1724  00000F                     ___fldiv@b:
  1725                           	opt callstack 0
  1726                           
  1727                           ; 4 bytes @ 0xE
  1728  00000F                     	ds	4
  1729  000013                     ___fldiv@a:
  1730                           	opt callstack 0
  1731                           
  1732                           ; 4 bytes @ 0x12
  1733  000013                     	ds	4
  1734  000017                     ??___fldiv:
  1735                           
  1736                           ; 1 bytes @ 0x16
  1737  000017                     	ds	4
  1738  00001B                     ___fldiv@rem:
  1739                           	opt callstack 0
  1740                           
  1741                           ; 4 bytes @ 0x1A
  1742  00001B                     	ds	4
  1743  00001F                     ___fldiv@sign:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 1 bytes @ 0x1E
  1747  00001F                     	ds	1
  1748  000020                     ___fldiv@new_exp:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x1F
  1752  000020                     	ds	2
  1753  000022                     ___fldiv@grs:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 4 bytes @ 0x21
  1757  000022                     	ds	4
  1758  000026                     ___fldiv@bexp:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 1 bytes @ 0x25
  1762  000026                     	ds	1
  1763  000027                     ___fldiv@aexp:
  1764                           	opt callstack 0
  1765                           
  1766                           ; 1 bytes @ 0x26
  1767  000027                     	ds	1
  1768  000028                     ?___fltol:
  1769                           	opt callstack 0
  1770  000028                     ___fltol@f1:
  1771                           	opt callstack 0
  1772                           
  1773                           ; 4 bytes @ 0x27
  1774  000028                     	ds	4
  1775  00002C                     ??___fltol:
  1776                           
  1777                           ; 1 bytes @ 0x2B
  1778  00002C                     	ds	4
  1779  000030                     ___fltol@sign1:
  1780                           	opt callstack 0
  1781                           
  1782                           ; 1 bytes @ 0x2F
  1783  000030                     	ds	1
  1784  000031                     ___fltol@exp1:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 1 bytes @ 0x30
  1788  000031                     	ds	1
  1789  000032                     ??_echo:
  1790                           
  1791                           ; 1 bytes @ 0x31
  1792  000032                     	ds	4
  1793  000036                     ??_ISR:
  1794                           
  1795                           ; 1 bytes @ 0x35
  1796  000036                     	ds	2
  1797                           
  1798 ;;
  1799 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1800 ;;
  1801 ;; *************** function _main *****************
  1802 ;; Defined at:
  1803 ;;		line 715 in file "main.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  k               2  188[BANK1 ] int 
  1808 ;;  i               2  182[BANK1 ] int 
  1809 ;;  i               2  180[BANK1 ] int 
  1810 ;;  i               2  194[BANK1 ] int 
  1811 ;;  pole_cl_dist    2    0        int 
  1812 ;;  Pole           80   94[BANK1 ] struct Poles[10]
  1813 ;;  prev_avg_dis    4  198[BANK1 ] volatile long 
  1814 ;;  poles_detect    2  196[BANK1 ] int 
  1815 ;;  t_dep           2  192[BANK1 ] int 
  1816 ;;  t_count         2  190[BANK1 ] int 
  1817 ;;  stack           2  186[BANK1 ] int 
  1818 ;;  steps2_adj      2  178[BANK1 ] int 
  1819 ;;  read            2    0        int 
  1820 ;;  arduino_stop    1  185[BANK1 ] _Bool 
  1821 ;;  act_done        1  184[BANK1 ] _Bool 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Totals:         0       0     112       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;Total ram usage:      112 bytes
  1836 ;; Hardware stack levels required when called:   17
  1837 ;; This function calls:
  1838 ;;		_UI_main
  1839 ;;		___wmul
  1840 ;;		_actuators_main
  1841 ;;		_backwards
  1842 ;;		_brake
  1843 ;;		_initLCD
  1844 ;;		_lcdInst
  1845 ;;		_number_deploy
  1846 ;;		_printf
  1847 ;;		_start
  1848 ;;		_ultrasonic_main
  1849 ;; This function is called by:
  1850 ;;		Startup code after reset
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text0
  1855  000D6A                     __ptext0:
  1856                           	opt callstack 0
  1857  000D6A                     _main:
  1858                           	opt callstack 14
  1859                           
  1860                           ;main.c: 717:     int t_dep=0;
  1861                           
  1862                           ;incstack = 0
  1863  000D6A  0E00               	movlw	0
  1864  000D6C  0101               	movlb	1	; () banked
  1865  000D6E  6FC1               	movwf	(main@t_dep+1)& (0+255),b
  1866  000D70  0E00               	movlw	0
  1867  000D72  6FC0               	movwf	main@t_dep& (0+255),b
  1868                           
  1869                           ;main.c: 718:     int t_count;;main.c: 719:  TRISD = 0x00;
  1870  000D74  0E00               	movlw	0
  1871  000D76  6E95               	movwf	3989,c	;volatile
  1872                           
  1873                           ; BSR set to: 1
  1874                           ;main.c: 720:  GIE = 1;
  1875  000D78  8EF2               	bsf	4082,7,c	;volatile
  1876                           
  1877                           ;main.c: 722:     ADCON1=0x0F;
  1878  000D7A  0E0F               	movlw	15
  1879  000D7C  6EC1               	movwf	4033,c	;volatile
  1880                           
  1881                           ; BSR set to: 1
  1882                           ;main.c: 724:  initLCD();
  1883  000D7E  EC5C  F01B         	call	_initLCD	;wreg free
  1884                           
  1885                           ;main.c: 726:  T1CON = 0x10;
  1886  000D82  0E10               	movlw	16
  1887  000D84  6ECD               	movwf	4045,c	;volatile
  1888                           
  1889                           ;main.c: 727:     int poles_detected=0;
  1890  000D86  0E00               	movlw	0
  1891  000D88  0101               	movlb	1	; () banked
  1892  000D8A  6FC5               	movwf	(main@poles_detected+1)& (0+255),b
  1893  000D8C  0E00               	movlw	0
  1894  000D8E  6FC4               	movwf	main@poles_detected& (0+255),b
  1895                           
  1896                           ; BSR set to: 1
  1897                           ;main.c: 729:     volatile long prev_avg_dist=0;
  1898                           
  1899                           ; BSR set to: 1
  1900  000D90  0E00               	movlw	0
  1901  000D92  6FC6               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  1902  000D94  0E00               	movlw	0
  1903  000D96  6FC7               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  1904  000D98  0E00               	movlw	0
  1905  000D9A  6FC8               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  1906  000D9C  0E00               	movlw	0
  1907  000D9E  6FC9               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  1908                           
  1909                           ; BSR set to: 1
  1910                           ;main.c: 731:     TRISAbits.RA4 = 0;
  1911  000DA0  9892               	bcf	3986,4,c	;volatile
  1912                           
  1913                           ; BSR set to: 1
  1914                           ;main.c: 732:     PORTAbits.RA4 = LATAbits.LATA4;
  1915  000DA2  A889               	btfss	3977,4,c	;volatile
  1916  000DA4  D002               	bra	u8855
  1917  000DA6  8880               	bsf	3968,4,c	;volatile
  1918  000DA8  D001               	bra	u8857
  1919  000DAA                     u8855:
  1920  000DAA  9880               	bcf	3968,4,c	;volatile
  1921  000DAC                     u8857:
  1922                           
  1923                           ;main.c: 735:     _Bool arduino_stopped = 0;
  1924  000DAC  0E00               	movlw	0
  1925  000DAE  0101               	movlb	1	; () banked
  1926  000DB0  6FB9               	movwf	main@arduino_stopped& (0+255),b
  1927                           
  1928                           ; BSR set to: 1
  1929                           ;main.c: 737:     Poles Pole[10];;main.c: 745:     if (~sens){
  1930  000DB2  2858               	incf	_sens,w,c	;volatile
  1931  000DB4  E103               	bnz	u8860
  1932  000DB6  2859               	incf	_sens+1,w,c	;volatile
  1933  000DB8  B4D8               	btfsc	status,2,c
  1934  000DBA  D00B               	goto	l8188
  1935  000DBC                     u8860:
  1936                           
  1937                           ; BSR set to: 1
  1938                           ;main.c: 746:         UI_main( t_dep, poles_detected);
  1939  000DBC  0E00               	movlw	0
  1940  000DBE  0100               	movlb	0	; () banked
  1941  000DC0  6FFA               	movwf	(UI_main@t_dep+1)& (0+255),b
  1942  000DC2  0E00               	movlw	0
  1943  000DC4  6FF9               	movwf	UI_main@t_dep& (0+255),b
  1944  000DC6  0E00               	movlw	0
  1945  000DC8  6FFC               	movwf	(UI_main@poles_detected+1)& (0+255),b
  1946  000DCA  0E00               	movlw	0
  1947  000DCC  6FFB               	movwf	UI_main@poles_detected& (0+255),b
  1948  000DCE  EC09  F000         	call	_UI_main	;wreg free
  1949  000DD2                     l8188:
  1950                           
  1951                           ;main.c: 749:         PORTAbits.RA4 = LATAbits.LATA4;
  1952  000DD2  A889               	btfss	3977,4,c	;volatile
  1953  000DD4  D002               	bra	u8875
  1954  000DD6  8880               	bsf	3968,4,c	;volatile
  1955  000DD8  D001               	bra	u8877
  1956  000DDA                     u8875:
  1957  000DDA  9880               	bcf	3968,4,c	;volatile
  1958  000DDC                     u8877:
  1959                           
  1960                           ;main.c: 754:         if ((poles_detected <10)&&((Pole[poles_detected].dist_from_start )
      +                          <4000)){
  1961  000DDC  0101               	movlb	1	; () banked
  1962  000DDE  BFC5               	btfsc	(main@poles_detected+1)& (0+255),7,b
  1963  000DE0  D006               	goto	u8880
  1964  000DE2  51C5               	movf	(main@poles_detected+1)& (0+255),w,b
  1965  000DE4  E103               	bnz	u8881
  1966  000DE6  0E0A               	movlw	10
  1967  000DE8  5DC4               	subwf	main@poles_detected& (0+255),w,b
  1968  000DEA  B0D8               	btfsc	status,0,c
  1969  000DEC                     u8881:
  1970  000DEC  D200               	goto	l8324
  1971  000DEE                     u8880:
  1972                           
  1973                           ; BSR set to: 1
  1974  000DEE  C1C4  F15A         	movff	main@poles_detected,??_main
  1975  000DF2  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  1976  000DF6  90D8               	bcf	status,0,c
  1977  000DF8  375A               	rlcf	??_main& (0+255),f,b
  1978  000DFA  375B               	rlcf	(??_main+1)& (0+255),f,b
  1979  000DFC  90D8               	bcf	status,0,c
  1980  000DFE  375A               	rlcf	??_main& (0+255),f,b
  1981  000E00  375B               	rlcf	(??_main+1)& (0+255),f,b
  1982  000E02  90D8               	bcf	status,0,c
  1983  000E04  375A               	rlcf	??_main& (0+255),f,b
  1984  000E06  375B               	rlcf	(??_main+1)& (0+255),f,b
  1985  000E08  0E04               	movlw	4
  1986  000E0A  275A               	addwf	??_main& (0+255),f,b
  1987  000E0C  0E00               	movlw	0
  1988  000E0E  235B               	addwfc	(??_main+1)& (0+255),f,b
  1989  000E10  0E5E               	movlw	low main@Pole
  1990  000E12  255A               	addwf	??_main& (0+255),w,b
  1991  000E14  6ED9               	movwf	fsr2l,c
  1992  000E16  0E01               	movlw	high main@Pole
  1993  000E18  215B               	addwfc	(??_main+1)& (0+255),w,b
  1994  000E1A  6EDA               	movwf	fsr2h,c
  1995  000E1C  0E01               	movlw	1
  1996  000E1E  BEDB               	btfsc	plusw2,7,c
  1997  000E20  D092               	goto	l8240
  1998  000E22  0EA0               	movlw	160
  1999  000E24  5CDE               	subwf	postinc2,w,c
  2000  000E26  0E0F               	movlw	15
  2001  000E28  58DE               	subwfb	postinc2,w,c
  2002  000E2A  A0D8               	btfss	status,0,c
  2003  000E2C  D08C               	goto	l8240
  2004  000E2E  D1DF               	goto	l8324
  2005  000E30                     l8196:
  2006                           
  2007                           ;main.c: 765:                 t_count = 5;
  2008  000E30  0E00               	movlw	0
  2009  000E32  0101               	movlb	1	; () banked
  2010  000E34  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2011  000E36  0E05               	movlw	5
  2012  000E38  6FBE               	movwf	main@t_count& (0+255),b
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;main.c: 766:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2016  000E3A  0E01               	movlw	1
  2017  000E3C  EC73  F01E         	call	_lcdInst
  2018  000E40  0E11               	movlw	17
  2019  000E42  0101               	movlb	1	; () banked
  2020  000E44  6F5A               	movwf	??_main& (0+255),b
  2021  000E46  0E3A               	movlw	58
  2022  000E48                     u9027:
  2023  000E48  2EE8               	decfsz	wreg,f,c
  2024  000E4A  D7FE               	bra	u9027
  2025  000E4C  2F5A               	decfsz	??_main& (0+255),f,b
  2026  000E4E  D7FC               	bra	u9027
  2027  000E50  F000               	nop	
  2028                           
  2029                           ;main.c: 767:                     printf("waiting");
  2030  000E52  0E01               	movlw	low (STR_54+5)
  2031  000E54  0100               	movlb	0	; () banked
  2032  000E56  6FED               	movwf	printf@fmt& (0+255),b
  2033  000E58  0EFF               	movlw	high (STR_54+5)
  2034  000E5A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2035  000E5C  EC0D  F01E         	call	_printf	;wreg free
  2036                           
  2037                           ;main.c: 769:                     if (!PORTAbits.RA4){
  2038  000E60  B880               	btfsc	3968,4,c	;volatile
  2039  000E62  D013               	goto	l8212
  2040                           
  2041                           ;main.c: 770:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2042  000E64  0E01               	movlw	1
  2043  000E66  EC73  F01E         	call	_lcdInst
  2044  000E6A  0E11               	movlw	17
  2045  000E6C  0101               	movlb	1	; () banked
  2046  000E6E  6F5A               	movwf	??_main& (0+255),b
  2047  000E70  0E3A               	movlw	58
  2048  000E72                     u9037:
  2049  000E72  2EE8               	decfsz	wreg,f,c
  2050  000E74  D7FE               	bra	u9037
  2051  000E76  2F5A               	decfsz	??_main& (0+255),f,b
  2052  000E78  D7FC               	bra	u9037
  2053  000E7A  F000               	nop	
  2054                           
  2055                           ;main.c: 771:                         printf("more waiting");
  2056  000E7C  0EFC               	movlw	low STR_54
  2057  000E7E  0100               	movlb	0	; () banked
  2058  000E80  6FED               	movwf	printf@fmt& (0+255),b
  2059  000E82  0EFE               	movlw	high STR_54
  2060  000E84  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2061  000E86  EC0D  F01E         	call	_printf	;wreg free
  2062  000E8A                     l8212:
  2063                           
  2064                           ;main.c: 773:                     if (PORTAbits.RA4){
  2065  000E8A  A880               	btfss	3968,4,c	;volatile
  2066  000E8C  D016               	goto	l8222
  2067                           
  2068                           ;main.c: 775:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2069  000E8E  0E01               	movlw	1
  2070  000E90  EC73  F01E         	call	_lcdInst
  2071  000E94  0E11               	movlw	17
  2072  000E96  0101               	movlb	1	; () banked
  2073  000E98  6F5A               	movwf	??_main& (0+255),b
  2074  000E9A  0E3A               	movlw	58
  2075  000E9C                     u9047:
  2076  000E9C  2EE8               	decfsz	wreg,f,c
  2077  000E9E  D7FE               	bra	u9047
  2078  000EA0  2F5A               	decfsz	??_main& (0+255),f,b
  2079  000EA2  D7FC               	bra	u9047
  2080  000EA4  F000               	nop	
  2081                           
  2082                           ;main.c: 776:                         printf("done wait");
  2083  000EA6  0EBA               	movlw	low STR_55
  2084  000EA8  0100               	movlb	0	; () banked
  2085  000EAA  6FED               	movwf	printf@fmt& (0+255),b
  2086  000EAC  0EFF               	movlw	high STR_55
  2087  000EAE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2088  000EB0  EC0D  F01E         	call	_printf	;wreg free
  2089                           
  2090                           ;main.c: 777:                         arduino_stopped = 1;
  2091  000EB4  0E01               	movlw	1
  2092  000EB6  0101               	movlb	1	; () banked
  2093  000EB8  6FB9               	movwf	main@arduino_stopped& (0+255),b
  2094  000EBA                     l8222:
  2095                           
  2096                           ;main.c: 779:                     if (arduino_stopped){
  2097  000EBA  0101               	movlb	1	; () banked
  2098  000EBC  51B9               	movf	main@arduino_stopped& (0+255),w,b
  2099  000EBE  B4D8               	btfsc	status,2,c
  2100  000EC0  D042               	goto	l8240
  2101                           
  2102                           ; BSR set to: 1
  2103                           ;main.c: 780:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2104  000EC2  0E01               	movlw	1
  2105  000EC4  EC73  F01E         	call	_lcdInst
  2106  000EC8  0E11               	movlw	17
  2107  000ECA  0101               	movlb	1	; () banked
  2108  000ECC  6F5A               	movwf	??_main& (0+255),b
  2109  000ECE  0E3A               	movlw	58
  2110  000ED0                     u9057:
  2111  000ED0  2EE8               	decfsz	wreg,f,c
  2112  000ED2  D7FE               	bra	u9057
  2113  000ED4  2F5A               	decfsz	??_main& (0+255),f,b
  2114  000ED6  D7FC               	bra	u9057
  2115  000ED8  F000               	nop	
  2116                           
  2117                           ;main.c: 781:                         printf("dun break");
  2118  000EDA  0EA6               	movlw	low STR_56
  2119  000EDC  0100               	movlb	0	; () banked
  2120  000EDE  6FED               	movwf	printf@fmt& (0+255),b
  2121  000EE0  0EFF               	movlw	high STR_56
  2122  000EE2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2123  000EE4  EC0D  F01E         	call	_printf	;wreg free
  2124                           
  2125                           ;main.c: 782:                         steps2_adj=ultrasonic_main();
  2126  000EE8  EC43  F012         	call	_ultrasonic_main	;wreg free
  2127  000EEC  C0FA  F1B2         	movff	?_ultrasonic_main,main@steps2_adj
  2128  000EF0  C0FB  F1B3         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2129                           
  2130                           ;main.c: 783:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2131  000EF4  0E01               	movlw	1
  2132  000EF6  EC73  F01E         	call	_lcdInst
  2133  000EFA  0E11               	movlw	17
  2134  000EFC  0101               	movlb	1	; () banked
  2135  000EFE  6F5A               	movwf	??_main& (0+255),b
  2136  000F00  0E3A               	movlw	58
  2137  000F02                     u9067:
  2138  000F02  2EE8               	decfsz	wreg,f,c
  2139  000F04  D7FE               	bra	u9067
  2140  000F06  2F5A               	decfsz	??_main& (0+255),f,b
  2141  000F08  D7FC               	bra	u9067
  2142  000F0A  F000               	nop	
  2143                           
  2144                           ;main.c: 784:                         printf("stepsadj %d", steps2_adj);
  2145  000F0C  0E22               	movlw	low STR_21
  2146  000F0E  0100               	movlb	0	; () banked
  2147  000F10  6FED               	movwf	printf@fmt& (0+255),b
  2148  000F12  0EFF               	movlw	high STR_21
  2149  000F14  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2150  000F16  C1B2  F0EF         	movff	main@steps2_adj,?_printf+2
  2151  000F1A  C1B3  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2152  000F1E  EC0D  F01E         	call	_printf	;wreg free
  2153                           
  2154                           ;main.c: 785:                         t_count = number_deploy(avg_dist, poles_detected);
  2155  000F22  C044  F0F9         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2156  000F26  C045  F0FA         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2157  000F2A  C1C4  F0FB         	movff	main@poles_detected,number_deploy@poles_detected
  2158  000F2E  C1C5  F0FC         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2159  000F32  EC3B  F010         	call	_number_deploy	;wreg free
  2160  000F36  C0F9  F1BE         	movff	?_number_deploy,main@t_count
  2161  000F3A  C0FA  F1BF         	movff	?_number_deploy+1,main@t_count+1
  2162                           
  2163                           ;main.c: 786:                         sens = 0;
  2164  000F3E  0E00               	movlw	0
  2165  000F40  6E59               	movwf	_sens+1,c	;volatile
  2166  000F42  0E00               	movlw	0
  2167  000F44  6E58               	movwf	_sens,c	;volatile
  2168  000F46                     l8240:
  2169                           
  2170                           ;main.c: 762:             while (sens){
  2171  000F46  5058               	movf	_sens,w,c	;volatile
  2172  000F48  1059               	iorwf	_sens+1,w,c	;volatile
  2173  000F4A  A4D8               	btfss	status,2,c
  2174  000F4C  D771               	goto	l8196
  2175                           
  2176                           ;main.c: 795:             act_done = 0;
  2177  000F4E  0E00               	movlw	0
  2178  000F50  0101               	movlb	1	; () banked
  2179  000F52  6FB8               	movwf	main@act_done& (0+255),b
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;main.c: 796:             if (t_count<=2){
  2183  000F54  BFBF               	btfsc	(main@t_count+1)& (0+255),7,b
  2184  000F56  D006               	goto	u8940
  2185  000F58  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2186  000F5A  E15D               	bnz	l544
  2187  000F5C  0E03               	movlw	3
  2188  000F5E  5DBE               	subwf	main@t_count& (0+255),w,b
  2189  000F60  B0D8               	btfsc	status,0,c
  2190  000F62  D059               	goto	l544
  2191  000F64                     u8940:
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;main.c: 797:                 if (t_dep <8){
  2195  000F64  BFC1               	btfsc	(main@t_dep+1)& (0+255),7,b
  2196  000F66  D006               	goto	u8950
  2197  000F68  51C1               	movf	(main@t_dep+1)& (0+255),w,b
  2198  000F6A  E129               	bnz	l8264
  2199  000F6C  0E08               	movlw	8
  2200  000F6E  5DC0               	subwf	main@t_dep& (0+255),w,b
  2201  000F70  B0D8               	btfsc	status,0,c
  2202  000F72  D025               	goto	u8960
  2203  000F74                     u8950:
  2204                           
  2205                           ; BSR set to: 1
  2206                           ;main.c: 800:                     stack = 1;
  2207  000F74  0E00               	movlw	0
  2208  000F76  6FBB               	movwf	(main@stack+1)& (0+255),b
  2209  000F78  0E01               	movlw	1
  2210  000F7A  6FBA               	movwf	main@stack& (0+255),b
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;main.c: 801:                                     brake();
  2214  000F7C  EC5B  F019         	call	_brake	;wreg free
  2215                           
  2216                           ;main.c: 803:                     for(int i=0; i<(t_count); i++){
  2217  000F80  0E00               	movlw	0
  2218  000F82  0101               	movlb	1	; () banked
  2219  000F84  6FB5               	movwf	(main@i+1)& (0+255),b
  2220  000F86  0E00               	movlw	0
  2221  000F88  6FB4               	movwf	main@i& (0+255),b
  2222  000F8A  D00F               	goto	l8262
  2223  000F8C                     l8256:
  2224                           
  2225                           ; BSR set to: 1
  2226                           ;main.c: 805:                         actuators_main(stack, 110);
  2227  000F8C  C1BA  F10C         	movff	main@stack,actuators_main@stack
  2228  000F90  C1BB  F10D         	movff	main@stack+1,actuators_main@stack+1
  2229  000F94  0E00               	movlw	0
  2230  000F96  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2231  000F98  0E6E               	movlw	110
  2232  000F9A  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2233  000F9C  EC00  F015         	call	_actuators_main	;wreg free
  2234                           
  2235                           ;main.c: 806:                         t_dep++;
  2236  000FA0  0101               	movlb	1	; () banked
  2237  000FA2  4BC0               	infsnz	main@t_dep& (0+255),f,b
  2238  000FA4  2BC1               	incf	(main@t_dep+1)& (0+255),f,b
  2239                           
  2240                           ; BSR set to: 1
  2241                           ;main.c: 807:                     }
  2242  000FA6  4BB4               	infsnz	main@i& (0+255),f,b
  2243  000FA8  2BB5               	incf	(main@i+1)& (0+255),f,b
  2244  000FAA                     l8262:
  2245                           
  2246                           ; BSR set to: 1
  2247  000FAA  51BE               	movf	main@t_count& (0+255),w,b
  2248  000FAC  5DB4               	subwf	main@i& (0+255),w,b
  2249  000FAE  51B5               	movf	(main@i+1)& (0+255),w,b
  2250  000FB0  0A80               	xorlw	128
  2251  000FB2  6F5A               	movwf	??_main& (0+255),b
  2252  000FB4  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2253  000FB6  0A80               	xorlw	128
  2254  000FB8  595A               	subwfb	??_main& (0+255),w,b
  2255  000FBA  A0D8               	btfss	status,0,c
  2256  000FBC  D7E7               	goto	l8256
  2257  000FBE                     u8960:
  2258  000FBE                     l8264:
  2259                           
  2260                           ; BSR set to: 1
  2261                           ;main.c: 809:                 if (t_dep >= 8){
  2262  000FBE  BFC1               	btfsc	(main@t_dep+1)& (0+255),7,b
  2263  000FC0  D028               	goto	u8980
  2264  000FC2  51C1               	movf	(main@t_dep+1)& (0+255),w,b
  2265  000FC4  E104               	bnz	u8970
  2266  000FC6  0E08               	movlw	8
  2267  000FC8  5DC0               	subwf	main@t_dep& (0+255),w,b
  2268  000FCA  A0D8               	btfss	status,0,c
  2269  000FCC  D022               	goto	u8980
  2270  000FCE                     u8970:
  2271                           
  2272                           ; BSR set to: 1
  2273                           ;main.c: 810:                     stack = 2;
  2274  000FCE  0E00               	movlw	0
  2275  000FD0  6FBB               	movwf	(main@stack+1)& (0+255),b
  2276  000FD2  0E02               	movlw	2
  2277  000FD4  6FBA               	movwf	main@stack& (0+255),b
  2278                           
  2279                           ;main.c: 811:                     for(int i=0; i<(t_count); i++){
  2280  000FD6  0E00               	movlw	0
  2281  000FD8  6FB7               	movwf	(main@i_1026+1)& (0+255),b
  2282  000FDA  0E00               	movlw	0
  2283  000FDC  6FB6               	movwf	main@i_1026& (0+255),b
  2284  000FDE  D00F               	goto	l8274
  2285  000FE0                     l8268:
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;main.c: 813:                         actuators_main(stack, 110);
  2289  000FE0  C1BA  F10C         	movff	main@stack,actuators_main@stack
  2290  000FE4  C1BB  F10D         	movff	main@stack+1,actuators_main@stack+1
  2291  000FE8  0E00               	movlw	0
  2292  000FEA  6F0F               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  2293  000FEC  0E6E               	movlw	110
  2294  000FEE  6F0E               	movwf	actuators_main@steps2_adj& (0+255),b
  2295  000FF0  EC00  F015         	call	_actuators_main	;wreg free
  2296                           
  2297                           ;main.c: 814:                         t_dep++;
  2298  000FF4  0101               	movlb	1	; () banked
  2299  000FF6  4BC0               	infsnz	main@t_dep& (0+255),f,b
  2300  000FF8  2BC1               	incf	(main@t_dep+1)& (0+255),f,b
  2301                           
  2302                           ; BSR set to: 1
  2303                           ;main.c: 815:                     }
  2304  000FFA  4BB6               	infsnz	main@i_1026& (0+255),f,b
  2305  000FFC  2BB7               	incf	(main@i_1026+1)& (0+255),f,b
  2306  000FFE                     l8274:
  2307                           
  2308                           ; BSR set to: 1
  2309  000FFE  51BE               	movf	main@t_count& (0+255),w,b
  2310  001000  5DB6               	subwf	main@i_1026& (0+255),w,b
  2311  001002  51B7               	movf	(main@i_1026+1)& (0+255),w,b
  2312  001004  0A80               	xorlw	128
  2313  001006  6F5A               	movwf	??_main& (0+255),b
  2314  001008  51BF               	movf	(main@t_count+1)& (0+255),w,b
  2315  00100A  0A80               	xorlw	128
  2316  00100C  595A               	subwfb	??_main& (0+255),w,b
  2317  00100E  A0D8               	btfss	status,0,c
  2318  001010  D7E7               	goto	l8268
  2319  001012                     u8980:
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;main.c: 817:                 act_done = 1;
  2323  001012  0E01               	movlw	1
  2324  001014  6FB8               	movwf	main@act_done& (0+255),b
  2325  001016                     l544:
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;main.c: 819:             if (act_done){
  2329  001016  51B8               	movf	main@act_done& (0+255),w,b
  2330  001018  B4D8               	btfsc	status,2,c
  2331  00101A  D137               	goto	l8346
  2332                           
  2333                           ; BSR set to: 1
  2334                           ;main.c: 821:             Pole[poles_detected].dist_from_cl = avg_dist;
  2335  00101C  C1C4  F15A         	movff	main@poles_detected,??_main
  2336  001020  C1C5  F15B         	movff	main@poles_detected+1,??_main+1
  2337  001024  90D8               	bcf	status,0,c
  2338  001026  375A               	rlcf	??_main& (0+255),f,b
  2339  001028  375B               	rlcf	(??_main+1)& (0+255),f,b
  2340  00102A  90D8               	bcf	status,0,c
  2341  00102C  375A               	rlcf	??_main& (0+255),f,b
  2342  00102E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2343  001030  90D8               	bcf	status,0,c
  2344  001032  375A               	rlcf	??_main& (0+255),f,b
  2345  001034  375B               	rlcf	(??_main+1)& (0+255),f,b
  2346  001036  0E06               	movlw	6
  2347  001038  275A               	addwf	??_main& (0+255),f,b
  2348  00103A  0E00               	movlw	0
  2349  00103C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2350  00103E  0E5E               	movlw	low main@Pole
  2351  001040  255A               	addwf	??_main& (0+255),w,b
  2352  001042  6ED9               	movwf	fsr2l,c
  2353  001044  0E01               	movlw	high main@Pole
  2354  001046  215B               	addwfc	(??_main+1)& (0+255),w,b
  2355  001048  6EDA               	movwf	fsr2h,c
  2356  00104A  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2357  00104E  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2358                           
  2359                           ;main.c: 822:             Pole[poles_detected].dist_from_start = avg_dist+prev_avg_dist;
  2360  001052  51C6               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2361  001054  2444               	addwf	_avg_dist,w,c	;volatile
  2362  001056  6F5A               	movwf	??_main& (0+255),b
  2363  001058  51C7               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2364  00105A  2045               	addwfc	_avg_dist+1,w,c	;volatile
  2365  00105C  6F5B               	movwf	(??_main+1)& (0+255),b
  2366  00105E  C1C4  F15C         	movff	main@poles_detected,??_main+2
  2367  001062  C1C5  F15D         	movff	main@poles_detected+1,??_main+3
  2368  001066  90D8               	bcf	status,0,c
  2369  001068  375C               	rlcf	(??_main+2)& (0+255),f,b
  2370  00106A  375D               	rlcf	(??_main+3)& (0+255),f,b
  2371  00106C  90D8               	bcf	status,0,c
  2372  00106E  375C               	rlcf	(??_main+2)& (0+255),f,b
  2373  001070  375D               	rlcf	(??_main+3)& (0+255),f,b
  2374  001072  90D8               	bcf	status,0,c
  2375  001074  375C               	rlcf	(??_main+2)& (0+255),f,b
  2376  001076  375D               	rlcf	(??_main+3)& (0+255),f,b
  2377  001078  0E04               	movlw	4
  2378  00107A  275C               	addwf	(??_main+2)& (0+255),f,b
  2379  00107C  0E00               	movlw	0
  2380  00107E  235D               	addwfc	(??_main+3)& (0+255),f,b
  2381  001080  0E5E               	movlw	low main@Pole
  2382  001082  255C               	addwf	(??_main+2)& (0+255),w,b
  2383  001084  6ED9               	movwf	fsr2l,c
  2384  001086  0E01               	movlw	high main@Pole
  2385  001088  215D               	addwfc	(??_main+3)& (0+255),w,b
  2386  00108A  6EDA               	movwf	fsr2h,c
  2387  00108C  C15A  FFDE         	movff	??_main,postinc2
  2388  001090  C15B  FFDD         	movff	??_main+1,postdec2
  2389                           
  2390                           ; BSR set to: 1
  2391                           ;main.c: 824:             prev_avg_dist = avg_dist ;
  2392  001094  C044  F1C6         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2393  001098  C045  F1C7         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2394  00109C  C046  F1C8         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2395  0010A0  C047  F1C9         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;main.c: 825:             poles_detected++;
  2399  0010A4  4BC4               	infsnz	main@poles_detected& (0+255),f,b
  2400  0010A6  2BC5               	incf	(main@poles_detected+1)& (0+255),f,b
  2401                           
  2402                           ; BSR set to: 1
  2403                           ;main.c: 827:             start();
  2404  0010A8  EC85  F01C         	call	_start	;wreg free
  2405                           
  2406                           ;main.c: 828:             arduino_stopped = 0;
  2407  0010AC  0E00               	movlw	0
  2408  0010AE  0101               	movlb	1	; () banked
  2409  0010B0  6FB9               	movwf	main@arduino_stopped& (0+255),b
  2410                           
  2411                           ; BSR set to: 1
  2412                           ;main.c: 834:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2413  0010B2  0E01               	movlw	1
  2414  0010B4  EC73  F01E         	call	_lcdInst
  2415  0010B8  0E11               	movlw	17
  2416  0010BA  0101               	movlb	1	; () banked
  2417  0010BC  6F5A               	movwf	??_main& (0+255),b
  2418  0010BE  0E3A               	movlw	58
  2419  0010C0                     u9077:
  2420  0010C0  2EE8               	decfsz	wreg,f,c
  2421  0010C2  D7FE               	bra	u9077
  2422  0010C4  2F5A               	decfsz	??_main& (0+255),f,b
  2423  0010C6  D7FC               	bra	u9077
  2424  0010C8  F000               	nop	
  2425                           
  2426                           ;main.c: 835:             printf("avg dist %d", avg_dist);
  2427  0010CA  0E2E               	movlw	low STR_58
  2428  0010CC  0100               	movlb	0	; () banked
  2429  0010CE  6FED               	movwf	printf@fmt& (0+255),b
  2430  0010D0  0EFF               	movlw	high STR_58
  2431  0010D2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2432  0010D4  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2433  0010D8  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2434  0010DC  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2435  0010E0  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2436  0010E4  EC0D  F01E         	call	_printf	;wreg free
  2437                           
  2438                           ;main.c: 836:             printf("poles d %d", poles_detected);
  2439  0010E8  0E52               	movlw	low STR_59
  2440  0010EA  0100               	movlb	0	; () banked
  2441  0010EC  6FED               	movwf	printf@fmt& (0+255),b
  2442  0010EE  0EFF               	movlw	high STR_59
  2443  0010F0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2444  0010F2  C1C4  F0EF         	movff	main@poles_detected,?_printf+2
  2445  0010F6  C1C5  F0F0         	movff	main@poles_detected+1,?_printf+3
  2446  0010FA  EC0D  F01E         	call	_printf	;wreg free
  2447                           
  2448                           ;main.c: 837:                                 for (int i=0;i<4;i++){
  2449  0010FE  0E00               	movlw	0
  2450  001100  0101               	movlb	1	; () banked
  2451  001102  6FC3               	movwf	(main@i_1030+1)& (0+255),b
  2452  001104  0E00               	movlw	0
  2453  001106  6FC2               	movwf	main@i_1030& (0+255),b
  2454  001108                     l8298:
  2455                           
  2456                           ; BSR set to: 1
  2457  001108  BFC3               	btfsc	(main@i_1030+1)& (0+255),7,b
  2458  00110A  D006               	goto	l8302
  2459  00110C  51C3               	movf	(main@i_1030+1)& (0+255),w,b
  2460  00110E  E15D               	bnz	l8320
  2461  001110  0E04               	movlw	4
  2462  001112  5DC2               	subwf	main@i_1030& (0+255),w,b
  2463  001114  B0D8               	btfsc	status,0,c
  2464  001116  D059               	goto	l8320
  2465  001118                     l8302:
  2466                           
  2467                           ; BSR set to: 1
  2468                           ;main.c: 838:                         sum[i] = 0 ;
  2469  001118  90D8               	bcf	status,0,c
  2470  00111A  35C2               	rlcf	main@i_1030& (0+255),w,b
  2471  00111C  6ED9               	movwf	fsr2l,c
  2472  00111E  35C3               	rlcf	(main@i_1030+1)& (0+255),w,b
  2473  001120  6EDA               	movwf	fsr2h,c
  2474  001122  0E38               	movlw	low _sum
  2475  001124  26D9               	addwf	fsr2l,f,c
  2476  001126  0E00               	movlw	high _sum
  2477  001128  22DA               	addwfc	fsr2h,f,c
  2478  00112A  0E00               	movlw	0
  2479  00112C  6EDE               	movwf	postinc2,c
  2480  00112E  0E00               	movlw	0
  2481  001130  6EDD               	movwf	postdec2,c
  2482                           
  2483                           ;main.c: 839:                         a[i] =0 ;
  2484  001132  90D8               	bcf	status,0,c
  2485  001134  35C2               	rlcf	main@i_1030& (0+255),w,b
  2486  001136  6ED9               	movwf	fsr2l,c
  2487  001138  35C3               	rlcf	(main@i_1030+1)& (0+255),w,b
  2488  00113A  6EDA               	movwf	fsr2h,c
  2489  00113C  0E61               	movlw	low _a
  2490  00113E  26D9               	addwf	fsr2l,f,c
  2491  001140  0E00               	movlw	high _a
  2492  001142  22DA               	addwfc	fsr2h,f,c
  2493  001144  0E00               	movlw	0
  2494  001146  6EDE               	movwf	postinc2,c
  2495  001148  0E00               	movlw	0
  2496  00114A  6EDD               	movwf	postdec2,c
  2497                           
  2498                           ;main.c: 840:                         sumf[i] = 0 ;
  2499  00114C  0E40               	movlw	low _sumf
  2500  00114E  25C2               	addwf	main@i_1030& (0+255),w,b
  2501  001150  6ED9               	movwf	fsr2l,c
  2502  001152  0E00               	movlw	high _sumf
  2503  001154  21C3               	addwfc	(main@i_1030+1)& (0+255),w,b
  2504  001156  6EDA               	movwf	fsr2h,c
  2505  001158  0E00               	movlw	0
  2506  00115A  6EDF               	movwf	indf2,c
  2507                           
  2508                           ; BSR set to: 1
  2509                           ;main.c: 842:                         for (int k=0;k<6;k++){
  2510  00115C  0E00               	movlw	0
  2511  00115E  6FBD               	movwf	(main@k+1)& (0+255),b
  2512  001160  0E00               	movlw	0
  2513  001162  6FBC               	movwf	main@k& (0+255),b
  2514  001164                     l8306:
  2515                           
  2516                           ; BSR set to: 1
  2517  001164  BFBD               	btfsc	(main@k+1)& (0+255),7,b
  2518  001166  D006               	goto	l8310
  2519  001168  51BD               	movf	(main@k+1)& (0+255),w,b
  2520  00116A  E12C               	bnz	l8316
  2521  00116C  0E06               	movlw	6
  2522  00116E  5DBC               	subwf	main@k& (0+255),w,b
  2523  001170  B0D8               	btfsc	status,0,c
  2524  001172  D028               	goto	l8316
  2525  001174                     l8310:
  2526                           
  2527                           ; BSR set to: 1
  2528                           ;main.c: 843:                             dist_final[i][k] = 0;
  2529  001174  C1C2  F080         	movff	main@i_1030,___wmul@multiplier
  2530  001178  C1C3  F081         	movff	main@i_1030+1,___wmul@multiplier+1
  2531  00117C  0E00               	movlw	0
  2532  00117E  0100               	movlb	0	; () banked
  2533  001180  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2534  001182  0E0C               	movlw	12
  2535  001184  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2536  001186  EC21  F01E         	call	___wmul	;wreg free
  2537  00118A  0E50               	movlw	low _dist_final
  2538  00118C  0101               	movlb	1	; () banked
  2539  00118E  6F5A               	movwf	??_main& (0+255),b
  2540  001190  0E02               	movlw	high _dist_final
  2541  001192  6F5B               	movwf	(??_main+1)& (0+255),b
  2542  001194  0100               	movlb	0	; () banked
  2543  001196  5180               	movf	?___wmul& (0+255),w,b
  2544  001198  0101               	movlb	1	; () banked
  2545  00119A  275A               	addwf	??_main& (0+255),f,b
  2546  00119C  0100               	movlb	0	; () banked
  2547  00119E  5181               	movf	(?___wmul+1)& (0+255),w,b
  2548  0011A0  0101               	movlb	1	; () banked
  2549  0011A2  235B               	addwfc	(??_main+1)& (0+255),f,b
  2550  0011A4  90D8               	bcf	status,0,c
  2551  0011A6  35BC               	rlcf	main@k& (0+255),w,b
  2552  0011A8  6ED9               	movwf	fsr2l,c
  2553  0011AA  35BD               	rlcf	(main@k+1)& (0+255),w,b
  2554  0011AC  6EDA               	movwf	fsr2h,c
  2555  0011AE  515A               	movf	??_main& (0+255),w,b
  2556  0011B0  26D9               	addwf	fsr2l,f,c
  2557  0011B2  515B               	movf	(??_main+1)& (0+255),w,b
  2558  0011B4  22DA               	addwfc	fsr2h,f,c
  2559  0011B6  0E00               	movlw	0
  2560  0011B8  6EDE               	movwf	postinc2,c
  2561  0011BA  0E00               	movlw	0
  2562  0011BC  6EDD               	movwf	postdec2,c
  2563                           
  2564                           ; BSR set to: 1
  2565                           ;main.c: 844:                         }
  2566  0011BE  4BBC               	infsnz	main@k& (0+255),f,b
  2567  0011C0  2BBD               	incf	(main@k+1)& (0+255),f,b
  2568  0011C2  D7D0               	goto	l8306
  2569  0011C4                     l8316:
  2570                           
  2571                           ; BSR set to: 1
  2572                           ;main.c: 845:                     }
  2573  0011C4  4BC2               	infsnz	main@i_1030& (0+255),f,b
  2574  0011C6  2BC3               	incf	(main@i_1030+1)& (0+255),f,b
  2575  0011C8  D79F               	goto	l8298
  2576  0011CA                     l8320:
  2577                           
  2578                           ; BSR set to: 1
  2579                           ;main.c: 846:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2580  0011CA  0E0D               	movlw	13
  2581  0011CC  0101               	movlb	1	; () banked
  2582  0011CE  6F5B               	movwf	(??_main+1)& (0+255),b
  2583  0011D0  0EAF               	movlw	175
  2584  0011D2  6F5A               	movwf	??_main& (0+255),b
  2585  0011D4  0EB6               	movlw	182
  2586  0011D6                     u9087:
  2587  0011D6  2EE8               	decfsz	wreg,f,c
  2588  0011D8  D7FE               	bra	u9087
  2589  0011DA  2F5A               	decfsz	??_main& (0+255),f,b
  2590  0011DC  D7FC               	bra	u9087
  2591  0011DE  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2592  0011E0  D7FA               	bra	u9087
  2593  0011E2  F000               	nop	
  2594                           
  2595                           ;main.c: 847:             sens = 1;
  2596  0011E4  0E00               	movlw	0
  2597  0011E6  6E59               	movwf	_sens+1,c	;volatile
  2598  0011E8  0E01               	movlw	1
  2599  0011EA  6E58               	movwf	_sens,c	;volatile
  2600  0011EC  D04E               	goto	l8346
  2601  0011EE                     l8324:
  2602                           
  2603                           ; BSR set to: 1
  2604                           ;main.c: 851:             brake();
  2605  0011EE  EC5B  F019         	call	_brake	;wreg free
  2606                           
  2607                           ;main.c: 852:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2608  0011F2  0E01               	movlw	1
  2609  0011F4  EC73  F01E         	call	_lcdInst
  2610  0011F8  0E11               	movlw	17
  2611  0011FA  0101               	movlb	1	; () banked
  2612  0011FC  6F5A               	movwf	??_main& (0+255),b
  2613  0011FE  0E3A               	movlw	58
  2614  001200                     u9097:
  2615  001200  2EE8               	decfsz	wreg,f,c
  2616  001202  D7FE               	bra	u9097
  2617  001204  2F5A               	decfsz	??_main& (0+255),f,b
  2618  001206  D7FC               	bra	u9097
  2619  001208  F000               	nop	
  2620                           
  2621                           ;main.c: 853:             printf("poles done");
  2622  00120A  0E68               	movlw	low STR_60
  2623  00120C  0100               	movlb	0	; () banked
  2624  00120E  6FED               	movwf	printf@fmt& (0+255),b
  2625  001210  0EFF               	movlw	high STR_60
  2626  001212  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2627  001214  EC0D  F01E         	call	_printf	;wreg free
  2628                           
  2629                           ;main.c: 854:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2630  001218  0E0D               	movlw	13
  2631  00121A  0101               	movlb	1	; () banked
  2632  00121C  6F5B               	movwf	(??_main+1)& (0+255),b
  2633  00121E  0EAF               	movlw	175
  2634  001220  6F5A               	movwf	??_main& (0+255),b
  2635  001222  0EB6               	movlw	182
  2636  001224                     u9107:
  2637  001224  2EE8               	decfsz	wreg,f,c
  2638  001226  D7FE               	bra	u9107
  2639  001228  2F5A               	decfsz	??_main& (0+255),f,b
  2640  00122A  D7FC               	bra	u9107
  2641  00122C  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2642  00122E  D7FA               	bra	u9107
  2643  001230  F000               	nop	
  2644                           
  2645                           ;main.c: 855:             UI_main(t_dep, poles_detected);
  2646  001232  C1C0  F0F9         	movff	main@t_dep,UI_main@t_dep
  2647  001236  C1C1  F0FA         	movff	main@t_dep+1,UI_main@t_dep+1
  2648  00123A  C1C4  F0FB         	movff	main@poles_detected,UI_main@poles_detected
  2649  00123E  C1C5  F0FC         	movff	main@poles_detected+1,UI_main@poles_detected+1
  2650  001242  EC09  F000         	call	_UI_main	;wreg free
  2651                           
  2652                           ;main.c: 856:             backwards();
  2653  001246  EC35  F01E         	call	_backwards	;wreg free
  2654                           
  2655                           ;main.c: 857:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2656  00124A  0E01               	movlw	1
  2657  00124C  EC73  F01E         	call	_lcdInst
  2658  001250  0E11               	movlw	17
  2659  001252  0101               	movlb	1	; () banked
  2660  001254  6F5A               	movwf	??_main& (0+255),b
  2661  001256  0E3A               	movlw	58
  2662  001258                     u9117:
  2663  001258  2EE8               	decfsz	wreg,f,c
  2664  00125A  D7FE               	bra	u9117
  2665  00125C  2F5A               	decfsz	??_main& (0+255),f,b
  2666  00125E  D7FC               	bra	u9117
  2667  001260  F000               	nop	
  2668                           
  2669                           ;main.c: 858:             printf("backwards");
  2670  001262  0EB0               	movlw	low STR_61
  2671  001264  0100               	movlb	0	; () banked
  2672  001266  6FED               	movwf	printf@fmt& (0+255),b
  2673  001268  0EFF               	movlw	high STR_61
  2674  00126A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2675  00126C  EC0D  F01E         	call	_printf	;wreg free
  2676                           
  2677                           ;main.c: 859:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  2678  001270  0E0D               	movlw	13
  2679  001272  0101               	movlb	1	; () banked
  2680  001274  6F5B               	movwf	(??_main+1)& (0+255),b
  2681  001276  0EAF               	movlw	175
  2682  001278  6F5A               	movwf	??_main& (0+255),b
  2683  00127A  0EB6               	movlw	182
  2684  00127C                     u9127:
  2685  00127C  2EE8               	decfsz	wreg,f,c
  2686  00127E  D7FE               	bra	u9127
  2687  001280  2F5A               	decfsz	??_main& (0+255),f,b
  2688  001282  D7FC               	bra	u9127
  2689  001284  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2690  001286  D7FA               	bra	u9127
  2691  001288  F000               	nop	
  2692  00128A                     l8346:
  2693                           
  2694                           ;main.c: 861:         t_count = 5;
  2695  00128A  0E00               	movlw	0
  2696  00128C  0101               	movlb	1	; () banked
  2697  00128E  6FBF               	movwf	(main@t_count+1)& (0+255),b
  2698  001290  0E05               	movlw	5
  2699  001292  6FBE               	movwf	main@t_count& (0+255),b
  2700  001294  D59E               	goto	l8188
  2701  001296                     __end_of_main:
  2702                           	opt callstack 0
  2703                           
  2704 ;; *************** function _ultrasonic_main *****************
  2705 ;; Defined at:
  2706 ;;		line 291 in file "main.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  min_us_dist     2    8[BANK1 ] int 
  2711 ;;  steps2_adj      2    6[BANK1 ] int 
  2712 ;;  step2_offset    2    4[BANK1 ] int 
  2713 ;;  sensed          2    2[BANK1 ] int 
  2714 ;;  min_us_dist     2    0        int 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2  122[BANK0 ] int 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2724 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;Total ram usage:       14 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:   15
  2731 ;; This function calls:
  2732 ;;		_abs
  2733 ;;		_lcdInst
  2734 ;;		_min
  2735 ;;		_print_echo
  2736 ;;		_printf
  2737 ;;		_trig
  2738 ;; This function is called by:
  2739 ;;		_main
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text1
  2744  002486                     __ptext1:
  2745                           	opt callstack 0
  2746  002486                     _ultrasonic_main:
  2747                           	opt callstack 15
  2748                           
  2749                           ;main.c: 292:     TRISBbits.RB0 = 0;
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;incstack = 0
  2753  002486  9093               	bcf	3987,0,c	;volatile
  2754                           
  2755                           ;main.c: 293:     LATBbits.LATB0 = 1;
  2756  002488  808A               	bsf	3978,0,c	;volatile
  2757                           
  2758                           ;main.c: 295:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2759  00248A  0E01               	movlw	1
  2760  00248C  EC73  F01E         	call	_lcdInst
  2761  002490  0E11               	movlw	17
  2762  002492  0100               	movlb	0	; () banked
  2763  002494  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2764  002496  0E3A               	movlw	58
  2765  002498                     u9137:
  2766  002498  2EE8               	decfsz	wreg,f,c
  2767  00249A  D7FE               	bra	u9137
  2768  00249C  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2769  00249E  D7FC               	bra	u9137
  2770  0024A0  F000               	nop	
  2771                           
  2772                           ;main.c: 296:     printf("or here");
  2773  0024A2  0EEB               	movlw	low STR_18
  2774  0024A4  0100               	movlb	0	; () banked
  2775  0024A6  6FED               	movwf	printf@fmt& (0+255),b
  2776  0024A8  0EFF               	movlw	high STR_18
  2777  0024AA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2778  0024AC  EC0D  F01E         	call	_printf	;wreg free
  2779                           
  2780                           ;main.c: 297:  TRISB = 0b11110000;
  2781  0024B0  0EF0               	movlw	240
  2782  0024B2  6E93               	movwf	3987,c	;volatile
  2783                           
  2784                           ;main.c: 298:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2785  0024B4  0E01               	movlw	1
  2786  0024B6  EC73  F01E         	call	_lcdInst
  2787  0024BA  0E11               	movlw	17
  2788  0024BC  0100               	movlb	0	; () banked
  2789  0024BE  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2790  0024C0  0E3A               	movlw	58
  2791  0024C2                     u9147:
  2792  0024C2  2EE8               	decfsz	wreg,f,c
  2793  0024C4  D7FE               	bra	u9147
  2794  0024C6  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2795  0024C8  D7FC               	bra	u9147
  2796  0024CA  F000               	nop	
  2797                           
  2798                           ;main.c: 299:     printf("break heree?");
  2799  0024CC  0EEF               	movlw	low STR_19
  2800  0024CE  0100               	movlb	0	; () banked
  2801  0024D0  6FED               	movwf	printf@fmt& (0+255),b
  2802  0024D2  0EFE               	movlw	high STR_19
  2803  0024D4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2804  0024D6  EC0D  F01E         	call	_printf	;wreg free
  2805                           
  2806                           ;main.c: 300:     RBIF = 0;
  2807  0024DA  90F2               	bcf	4082,0,c	;volatile
  2808                           
  2809                           ;main.c: 301:  RBIE = 1;
  2810  0024DC  86F2               	bsf	4082,3,c	;volatile
  2811                           
  2812                           ;main.c: 303:     int sensed = 0;
  2813  0024DE  0E00               	movlw	0
  2814  0024E0  0101               	movlb	1	; () banked
  2815  0024E2  6F03               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  2816  0024E4  0E00               	movlw	0
  2817  0024E6  6F02               	movwf	ultrasonic_main@sensed& (0+255),b
  2818                           
  2819                           ;main.c: 305:     int steps2_adj=0;
  2820  0024E8  0E00               	movlw	0
  2821  0024EA  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2822  0024EC  0E00               	movlw	0
  2823  0024EE  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2824                           
  2825                           ;main.c: 306:     int step2_offset=0;
  2826  0024F0  0E00               	movlw	0
  2827  0024F2  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2828  0024F4  0E00               	movlw	0
  2829  0024F6  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2830                           
  2831                           ;main.c: 307:     while(send){
  2832  0024F8  D070               	goto	l451
  2833  0024FA                     l7720:
  2834                           
  2835                           ; BSR set to: 1
  2836                           ;main.c: 308:         for (meas=0; meas<3;meas++){
  2837  0024FA  0E00               	movlw	0
  2838  0024FC  6E51               	movwf	_meas+1,c	;volatile
  2839  0024FE  0E00               	movlw	0
  2840  002500  6E50               	movwf	_meas,c	;volatile
  2841  002502                     l7722:
  2842                           
  2843                           ; BSR set to: 1
  2844  002502  BE51               	btfsc	_meas+1,7,c	;volatile
  2845  002504  D006               	goto	l7726
  2846  002506  5051               	movf	_meas+1,w,c	;volatile
  2847  002508  E160               	bnz	l7758
  2848  00250A  0E03               	movlw	3
  2849  00250C  5C50               	subwf	_meas,w,c	;volatile
  2850  00250E  B0D8               	btfsc	status,0,c
  2851  002510  D05C               	goto	l7758
  2852  002512                     l7726:
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;main.c: 309:         trig();
  2856  002512  ECB6  F016         	call	_trig	;wreg free
  2857                           
  2858                           ;main.c: 310:         RBIE = 0;
  2859  002516  96F2               	bcf	4082,3,c	;volatile
  2860                           
  2861                           ;main.c: 311:         print_echo();
  2862  002518  EC4C  F011         	call	_print_echo	;wreg free
  2863                           
  2864                           ;main.c: 312:         RBIE = 1;
  2865  00251C  86F2               	bsf	4082,3,c	;volatile
  2866                           
  2867                           ;main.c: 313:         int min_us_dist = min(a, 4);
  2868  00251E  0E61               	movlw	low _a
  2869  002520  0100               	movlb	0	; () banked
  2870  002522  6F80               	movwf	min@array& (0+255),b
  2871  002524  0E00               	movlw	high _a
  2872  002526  6F81               	movwf	(min@array+1)& (0+255),b
  2873  002528  0E00               	movlw	0
  2874  00252A  6F83               	movwf	(min@size+1)& (0+255),b
  2875  00252C  0E04               	movlw	4
  2876  00252E  6F82               	movwf	min@size& (0+255),b
  2877  002530  EC2E  F016         	call	_min	;wreg free
  2878  002534  C080  F108         	movff	?_min,ultrasonic_main@min_us_dist_918
  2879  002538  C081  F109         	movff	?_min+1,ultrasonic_main@min_us_dist_918+1
  2880                           
  2881                           ;main.c: 314:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2882  00253C  0E01               	movlw	1
  2883  00253E  EC73  F01E         	call	_lcdInst
  2884  002542  0E11               	movlw	17
  2885  002544  0100               	movlb	0	; () banked
  2886  002546  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  2887  002548  0E3A               	movlw	58
  2888  00254A                     u9157:
  2889  00254A  2EE8               	decfsz	wreg,f,c
  2890  00254C  D7FE               	bra	u9157
  2891  00254E  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  2892  002550  D7FC               	bra	u9157
  2893  002552  F000               	nop	
  2894                           
  2895                           ;main.c: 315:         printf("minimum %d", min_us_dist);
  2896  002554  0E5D               	movlw	low STR_20
  2897  002556  0100               	movlb	0	; () banked
  2898  002558  6FED               	movwf	printf@fmt& (0+255),b
  2899  00255A  0EFF               	movlw	high STR_20
  2900  00255C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2901  00255E  C108  F0EF         	movff	ultrasonic_main@min_us_dist_918,?_printf+2
  2902  002562  C109  F0F0         	movff	ultrasonic_main@min_us_dist_918+1,?_printf+3
  2903  002566  EC0D  F01E         	call	_printf	;wreg free
  2904                           
  2905                           ;main.c: 317:         if (min_us_dist<14){
  2906  00256A  0101               	movlb	1	; () banked
  2907  00256C  BF09               	btfsc	(ultrasonic_main@min_us_dist_918+1)& (0+255),7,b
  2908  00256E  D006               	goto	u8300
  2909  002570  5109               	movf	(ultrasonic_main@min_us_dist_918+1)& (0+255),w,b
  2910  002572  E108               	bnz	l7746
  2911  002574  0E0E               	movlw	14
  2912  002576  5D08               	subwf	ultrasonic_main@min_us_dist_918& (0+255),w,b
  2913  002578  B0D8               	btfsc	status,0,c
  2914  00257A  D004               	goto	l7746
  2915  00257C                     u8300:
  2916                           
  2917                           ; BSR set to: 1
  2918                           ;main.c: 318:             step2_offset = 0;
  2919  00257C  0E00               	movlw	0
  2920  00257E  6F05               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  2921  002580  0E00               	movlw	0
  2922  002582  6F04               	movwf	ultrasonic_main@step2_offset& (0+255),b
  2923  002584                     l7746:
  2924                           
  2925                           ; BSR set to: 1
  2926                           ;main.c: 320:         if (min_us_dist>=14){
  2927  002584  BF09               	btfsc	(ultrasonic_main@min_us_dist_918+1)& (0+255),7,b
  2928  002586  D015               	goto	l7750
  2929  002588  5109               	movf	(ultrasonic_main@min_us_dist_918+1)& (0+255),w,b
  2930  00258A  E104               	bnz	u8310
  2931  00258C  0E0E               	movlw	14
  2932  00258E  5D08               	subwf	ultrasonic_main@min_us_dist_918& (0+255),w,b
  2933  002590  A0D8               	btfss	status,0,c
  2934  002592  D00F               	goto	l7750
  2935  002594                     u8310:
  2936                           
  2937                           ; BSR set to: 1
  2938                           ;main.c: 321:         step2_offset = abs(min_us_dist - 14);
  2939  002594  0EF2               	movlw	242
  2940  002596  2508               	addwf	ultrasonic_main@min_us_dist_918& (0+255),w,b
  2941  002598  0100               	movlb	0	; () banked
  2942  00259A  6F92               	movwf	abs@a& (0+255),b
  2943  00259C  0EFF               	movlw	255
  2944  00259E  0101               	movlb	1	; () banked
  2945  0025A0  2109               	addwfc	(ultrasonic_main@min_us_dist_918+1)& (0+255),w,b
  2946  0025A2  0100               	movlb	0	; () banked
  2947  0025A4  6F93               	movwf	(abs@a+1)& (0+255),b
  2948  0025A6  EC4C  F01D         	call	_abs	;wreg free
  2949  0025AA  C092  F104         	movff	?_abs,ultrasonic_main@step2_offset
  2950  0025AE  C093  F105         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  2951  0025B2                     l7750:
  2952                           
  2953                           ;main.c: 323:         steps2_adj = 110 + step2_offset;
  2954  0025B2  0E6E               	movlw	110
  2955  0025B4  0101               	movlb	1	; () banked
  2956  0025B6  2504               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  2957  0025B8  6F06               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  2958  0025BA  0E00               	movlw	0
  2959  0025BC  2105               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  2960  0025BE  6F07               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;main.c: 324:         sensed++;
  2964  0025C0  4B02               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  2965  0025C2  2B03               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  2966                           
  2967                           ; BSR set to: 1
  2968                           ;main.c: 327:         }
  2969  0025C4  4A50               	infsnz	_meas,f,c	;volatile
  2970  0025C6  2A51               	incf	_meas+1,f,c	;volatile
  2971  0025C8  D79C               	goto	l7722
  2972  0025CA                     l7758:
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;main.c: 328:         if (sensed>2){
  2976  0025CA  BF03               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  2977  0025CC  D006               	goto	l451
  2978  0025CE  5103               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  2979  0025D0  E107               	bnz	l7764
  2980  0025D2  0E03               	movlw	3
  2981  0025D4  5D02               	subwf	ultrasonic_main@sensed& (0+255),w,b
  2982  0025D6  B0D8               	btfsc	status,0,c
  2983  0025D8  D003               	goto	u8330
  2984  0025DA                     l451:
  2985                           
  2986                           ; BSR set to: 1
  2987                           ;main.c: 307:     while(send){
  2988  0025DA  506D               	movf	_send,w,c
  2989  0025DC  A4D8               	btfss	status,2,c
  2990  0025DE  D78D               	goto	l7720
  2991  0025E0                     u8330:
  2992  0025E0                     l7764:
  2993                           
  2994                           ; BSR set to: 1
  2995                           ;main.c: 375:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  2996  0025E0  0E01               	movlw	1
  2997  0025E2  EC73  F01E         	call	_lcdInst
  2998  0025E6  0E11               	movlw	17
  2999  0025E8  0100               	movlb	0	; () banked
  3000  0025EA  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3001  0025EC  0E3A               	movlw	58
  3002  0025EE                     u9167:
  3003  0025EE  2EE8               	decfsz	wreg,f,c
  3004  0025F0  D7FE               	bra	u9167
  3005  0025F2  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3006  0025F4  D7FC               	bra	u9167
  3007  0025F6  F000               	nop	
  3008                           
  3009                           ;main.c: 376:     printf("stepsadj %d", steps2_adj);
  3010  0025F8  0E22               	movlw	low STR_21
  3011  0025FA  0100               	movlb	0	; () banked
  3012  0025FC  6FED               	movwf	printf@fmt& (0+255),b
  3013  0025FE  0EFF               	movlw	high STR_21
  3014  002600  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3015  002602  C106  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3016  002606  C107  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3017  00260A  EC0D  F01E         	call	_printf	;wreg free
  3018                           
  3019                           ;main.c: 377:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3020  00260E  0E0D               	movlw	13
  3021  002610  0100               	movlb	0	; () banked
  3022  002612  6FFD               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3023  002614  0EAF               	movlw	175
  3024  002616  6FFC               	movwf	??_ultrasonic_main& (0+255),b
  3025  002618  0EB6               	movlw	182
  3026  00261A                     u9177:
  3027  00261A  2EE8               	decfsz	wreg,f,c
  3028  00261C  D7FE               	bra	u9177
  3029  00261E  2FFC               	decfsz	??_ultrasonic_main& (0+255),f,b
  3030  002620  D7FC               	bra	u9177
  3031  002622  2FFD               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3032  002624  D7FA               	bra	u9177
  3033  002626  F000               	nop	
  3034                           
  3035                           ;main.c: 378:     return steps2_adj;
  3036  002628  C106  F0FA         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3037  00262C  C107  F0FB         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3038  002630  0012               	return		;funcret
  3039  002632                     __end_of_ultrasonic_main:
  3040                           	opt callstack 0
  3041                           
  3042 ;; *************** function _trig *****************
  3043 ;; Defined at:
  3044 ;;		line 190 in file "main.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;Total ram usage:        2 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    3
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_ultrasonic_main
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text2
  3073  002D6C                     __ptext2:
  3074                           	opt callstack 0
  3075  002D6C                     _trig:
  3076                           	opt callstack 26
  3077                           
  3078                           ;main.c: 191:     for(b=1; b<5; b++){
  3079                           
  3080                           ;incstack = 0
  3081  002D6C  0E00               	movlw	0
  3082  002D6E  6E5B               	movwf	_b+1,c
  3083  002D70  0E01               	movlw	1
  3084  002D72  6E5A               	movwf	_b,c
  3085  002D74  BE5B               	btfsc	_b+1,7,c
  3086  002D76  D004               	goto	l7414
  3087  002D78  505B               	movf	_b+1,w,c
  3088  002D7A  E101               	bnz	u7890
  3089  002D7C  D072               	goto	L1
  3090  002D7E                     u7890:
  3091  002D7E  0012               	return	
  3092  002D80                     l7414:
  3093                           
  3094                           ;main.c: 192:         TMR1H = 0;
  3095  002D80  0E00               	movlw	0
  3096  002D82  6ECF               	movwf	4047,c	;volatile
  3097                           
  3098                           ;main.c: 193:         TMR1L = 0;
  3099  002D84  0E00               	movlw	0
  3100  002D86  6ECE               	movwf	4046,c	;volatile
  3101                           
  3102                           ;main.c: 194:         if(b==1){
  3103  002D88  045A               	decf	_b,w,c
  3104  002D8A  105B               	iorwf	_b+1,w,c
  3105  002D8C  A4D8               	btfss	status,2,c
  3106  002D8E  D015               	goto	l7426
  3107                           
  3108                           ;main.c: 195:             RBIE = 0;
  3109  002D90  96F2               	bcf	4082,3,c	;volatile
  3110                           
  3111                           ;main.c: 196:             RD1 = 1;
  3112  002D92  8283               	bsf	3971,1,c	;volatile
  3113                           
  3114                           ;main.c: 197:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3115  002D94  0E08               	movlw	8
  3116  002D96                     u9187:
  3117  002D96  2EE8               	decfsz	wreg,f,c
  3118  002D98  D7FE               	bra	u9187
  3119  002D9A  F000               	nop	
  3120                           
  3121                           ;main.c: 198:             RD1 = 0;
  3122  002D9C  9283               	bcf	3971,1,c	;volatile
  3123                           
  3124                           ;main.c: 200:             RBIE = 1;
  3125  002D9E  86F2               	bsf	4082,3,c	;volatile
  3126                           
  3127                           ;main.c: 201:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3128  002DA0  0E02               	movlw	2
  3129  002DA2  0100               	movlb	0	; () banked
  3130  002DA4  6F81               	movwf	(??_trig+1)& (0+255),b
  3131  002DA6  0EB7               	movlw	183
  3132  002DA8  6F80               	movwf	??_trig& (0+255),b
  3133  002DAA  0E4C               	movlw	76
  3134  002DAC                     u9197:
  3135  002DAC  2EE8               	decfsz	wreg,f,c
  3136  002DAE  D7FE               	bra	u9197
  3137  002DB0  2F80               	decfsz	??_trig& (0+255),f,b
  3138  002DB2  D7FC               	bra	u9197
  3139  002DB4  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3140  002DB6  D7FA               	bra	u9197
  3141  002DB8  F000               	nop	
  3142  002DBA                     l7426:
  3143                           
  3144                           ;main.c: 203:         if(b==2){
  3145  002DBA  0E02               	movlw	2
  3146  002DBC  185A               	xorwf	_b,w,c
  3147  002DBE  105B               	iorwf	_b+1,w,c
  3148  002DC0  A4D8               	btfss	status,2,c
  3149  002DC2  D015               	goto	l7436
  3150                           
  3151                           ;main.c: 204:             RBIE = 0;
  3152  002DC4  96F2               	bcf	4082,3,c	;volatile
  3153                           
  3154                           ;main.c: 205:             RD0 = 1;
  3155  002DC6  8083               	bsf	3971,0,c	;volatile
  3156                           
  3157                           ;main.c: 206:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3158  002DC8  0E08               	movlw	8
  3159  002DCA                     u9207:
  3160  002DCA  2EE8               	decfsz	wreg,f,c
  3161  002DCC  D7FE               	bra	u9207
  3162  002DCE  F000               	nop	
  3163                           
  3164                           ;main.c: 207:             RD0 = 0;
  3165  002DD0  9083               	bcf	3971,0,c	;volatile
  3166                           
  3167                           ;main.c: 209:             RBIE = 1;
  3168  002DD2  86F2               	bsf	4082,3,c	;volatile
  3169                           
  3170                           ;main.c: 210:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3171  002DD4  0E02               	movlw	2
  3172  002DD6  0100               	movlb	0	; () banked
  3173  002DD8  6F81               	movwf	(??_trig+1)& (0+255),b
  3174  002DDA  0EB7               	movlw	183
  3175  002DDC  6F80               	movwf	??_trig& (0+255),b
  3176  002DDE  0E4C               	movlw	76
  3177  002DE0                     u9217:
  3178  002DE0  2EE8               	decfsz	wreg,f,c
  3179  002DE2  D7FE               	bra	u9217
  3180  002DE4  2F80               	decfsz	??_trig& (0+255),f,b
  3181  002DE6  D7FC               	bra	u9217
  3182  002DE8  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3183  002DEA  D7FA               	bra	u9217
  3184  002DEC  F000               	nop	
  3185  002DEE                     l7436:
  3186                           
  3187                           ;main.c: 212:         if(b==3){
  3188  002DEE  0E03               	movlw	3
  3189  002DF0  185A               	xorwf	_b,w,c
  3190  002DF2  105B               	iorwf	_b+1,w,c
  3191  002DF4  A4D8               	btfss	status,2,c
  3192  002DF6  D015               	goto	l7446
  3193                           
  3194                           ;main.c: 213:             RBIE = 0;
  3195  002DF8  96F2               	bcf	4082,3,c	;volatile
  3196                           
  3197                           ;main.c: 214:             RB3 = 1;
  3198  002DFA  8681               	bsf	3969,3,c	;volatile
  3199                           
  3200                           ;main.c: 215:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3201  002DFC  0E08               	movlw	8
  3202  002DFE                     u9227:
  3203  002DFE  2EE8               	decfsz	wreg,f,c
  3204  002E00  D7FE               	bra	u9227
  3205  002E02  F000               	nop	
  3206                           
  3207                           ;main.c: 216:             RB3 = 0;
  3208  002E04  9681               	bcf	3969,3,c	;volatile
  3209                           
  3210                           ;main.c: 218:             RBIE = 1;
  3211  002E06  86F2               	bsf	4082,3,c	;volatile
  3212                           
  3213                           ;main.c: 219:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3214  002E08  0E02               	movlw	2
  3215  002E0A  0100               	movlb	0	; () banked
  3216  002E0C  6F81               	movwf	(??_trig+1)& (0+255),b
  3217  002E0E  0EB7               	movlw	183
  3218  002E10  6F80               	movwf	??_trig& (0+255),b
  3219  002E12  0E4C               	movlw	76
  3220  002E14                     u9237:
  3221  002E14  2EE8               	decfsz	wreg,f,c
  3222  002E16  D7FE               	bra	u9237
  3223  002E18  2F80               	decfsz	??_trig& (0+255),f,b
  3224  002E1A  D7FC               	bra	u9237
  3225  002E1C  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3226  002E1E  D7FA               	bra	u9237
  3227  002E20  F000               	nop	
  3228  002E22                     l7446:
  3229                           
  3230                           ;main.c: 221:         if(b==4){
  3231  002E22  0E04               	movlw	4
  3232  002E24  185A               	xorwf	_b,w,c
  3233  002E26  105B               	iorwf	_b+1,w,c
  3234  002E28  A4D8               	btfss	status,2,c
  3235  002E2A  D015               	goto	l7456
  3236                           
  3237                           ;main.c: 222:             RBIE = 0;
  3238  002E2C  96F2               	bcf	4082,3,c	;volatile
  3239                           
  3240                           ;main.c: 223:             RB2 = 1;
  3241  002E2E  8481               	bsf	3969,2,c	;volatile
  3242                           
  3243                           ;main.c: 224:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3244  002E30  0E08               	movlw	8
  3245  002E32                     u9247:
  3246  002E32  2EE8               	decfsz	wreg,f,c
  3247  002E34  D7FE               	bra	u9247
  3248  002E36  F000               	nop	
  3249                           
  3250                           ;main.c: 225:             RB2 = 0;
  3251  002E38  9481               	bcf	3969,2,c	;volatile
  3252                           
  3253                           ;main.c: 227:             RBIE = 1;
  3254  002E3A  86F2               	bsf	4082,3,c	;volatile
  3255                           
  3256                           ;main.c: 228:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3257  002E3C  0E02               	movlw	2
  3258  002E3E  0100               	movlb	0	; () banked
  3259  002E40  6F81               	movwf	(??_trig+1)& (0+255),b
  3260  002E42  0EB7               	movlw	183
  3261  002E44  6F80               	movwf	??_trig& (0+255),b
  3262  002E46  0E4C               	movlw	76
  3263  002E48                     u9257:
  3264  002E48  2EE8               	decfsz	wreg,f,c
  3265  002E4A  D7FE               	bra	u9257
  3266  002E4C  2F80               	decfsz	??_trig& (0+255),f,b
  3267  002E4E  D7FC               	bra	u9257
  3268  002E50  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3269  002E52  D7FA               	bra	u9257
  3270  002E54  F000               	nop	
  3271  002E56                     l7456:
  3272                           
  3273                           ;main.c: 230:     }
  3274  002E56  4A5A               	infsnz	_b,f,c
  3275  002E58  2A5B               	incf	_b+1,f,c
  3276  002E5A  BE5B               	btfsc	_b+1,7,c
  3277  002E5C  D791               	goto	l7414
  3278  002E5E  505B               	movf	_b+1,w,c
  3279  002E60  E105               	bnz	u7940
  3280  002E62                     L1:
  3281  002E62  0E05               	movlw	5
  3282  002E64  5C5A               	subwf	_b,w,c
  3283  002E66  B0D8               	btfsc	status,0,c
  3284  002E68  0012               	return	
  3285  002E6A  D78A               	goto	l7414
  3286  002E6C                     u7940:
  3287  002E6C  0012               	return		;funcret
  3288  002E6E                     __end_of_trig:
  3289                           	opt callstack 0
  3290                           
  3291 ;; *************** function _print_echo *****************
  3292 ;; Defined at:
  3293 ;;		line 233 in file "main.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;Total ram usage:        1 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:   14
  3314 ;; This function calls:
  3315 ;;		_lcdInst
  3316 ;;		_printf
  3317 ;; This function is called by:
  3318 ;;		_ultrasonic_main
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text3
  3323  002298                     __ptext3:
  3324                           	opt callstack 0
  3325  002298                     _print_echo:
  3326                           	opt callstack 15
  3327                           
  3328                           ;main.c: 234:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3329                           
  3330                           ;incstack = 0
  3331  002298  0E01               	movlw	1
  3332  00229A  EC73  F01E         	call	_lcdInst
  3333  00229E  0E11               	movlw	17
  3334  0022A0  0100               	movlb	0	; () banked
  3335  0022A2  6FF9               	movwf	??_print_echo& (0+255),b
  3336  0022A4  0E3A               	movlw	58
  3337  0022A6                     u9267:
  3338  0022A6  2EE8               	decfsz	wreg,f,c
  3339  0022A8  D7FE               	bra	u9267
  3340  0022AA  2FF9               	decfsz	??_print_echo& (0+255),f,b
  3341  0022AC  D7FC               	bra	u9267
  3342  0022AE  F000               	nop	
  3343                           
  3344                           ;main.c: 235:     if(a[0]>=2 && a[0]<=400){
  3345  0022B0  BE62               	btfsc	_a+1,7,c
  3346  0022B2  D01D               	goto	l7468
  3347  0022B4  5062               	movf	_a+1,w,c
  3348  0022B6  E104               	bnz	u7950
  3349  0022B8  0E02               	movlw	2
  3350  0022BA  5C61               	subwf	_a,w,c
  3351  0022BC  A0D8               	btfss	status,0,c
  3352  0022BE  D017               	goto	l7468
  3353  0022C0                     u7950:
  3354  0022C0  BE62               	btfsc	_a+1,7,c
  3355  0022C2  D006               	goto	u7960
  3356  0022C4  0E91               	movlw	145
  3357  0022C6  5C61               	subwf	_a,w,c
  3358  0022C8  0E01               	movlw	1
  3359  0022CA  5862               	subwfb	_a+1,w,c
  3360  0022CC  B0D8               	btfsc	status,0,c
  3361  0022CE  D00F               	goto	l7468
  3362  0022D0                     u7960:
  3363                           
  3364                           ;main.c: 236:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3365  0022D0  0E06               	movlw	low STR_10
  3366  0022D2  0100               	movlb	0	; () banked
  3367  0022D4  6FED               	movwf	printf@fmt& (0+255),b
  3368  0022D6  0EFE               	movlw	high STR_10
  3369  0022D8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3370  0022DA  C061  F0EF         	movff	_a,?_printf+2
  3371  0022DE  C062  F0F0         	movff	_a+1,?_printf+3
  3372  0022E2  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3373  0022E6  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3374  0022EA  EC0D  F01E         	call	_printf	;wreg free
  3375  0022EE                     l7468:
  3376                           
  3377                           ;main.c: 238:     if(!(a[0]>=2 && a[0]<=400)){
  3378  0022EE  BE62               	btfsc	_a+1,7,c
  3379  0022F0  D00E               	goto	u7980
  3380  0022F2  5062               	movf	_a+1,w,c
  3381  0022F4  E104               	bnz	u7970
  3382  0022F6  0E02               	movlw	2
  3383  0022F8  5C61               	subwf	_a,w,c
  3384  0022FA  A0D8               	btfss	status,0,c
  3385  0022FC  D008               	goto	u7980
  3386  0022FE                     u7970:
  3387  0022FE  BE62               	btfsc	_a+1,7,c
  3388  002300  D00D               	goto	l7474
  3389  002302  0E91               	movlw	145
  3390  002304  5C61               	subwf	_a,w,c
  3391  002306  0E01               	movlw	1
  3392  002308  5862               	subwfb	_a+1,w,c
  3393  00230A  A0D8               	btfss	status,0,c
  3394  00230C  D007               	goto	l7474
  3395  00230E                     u7980:
  3396                           
  3397                           ;main.c: 239:         printf("Dist1 = X");
  3398  00230E  0E7E               	movlw	low STR_11
  3399  002310  0100               	movlb	0	; () banked
  3400  002312  6FED               	movwf	printf@fmt& (0+255),b
  3401  002314  0EFF               	movlw	high STR_11
  3402  002316  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3403  002318  EC0D  F01E         	call	_printf	;wreg free
  3404  00231C                     l7474:
  3405                           
  3406                           ;main.c: 241:     if(a[1]>=2 && a[1]<=400){
  3407  00231C  BE64               	btfsc	_a+3,7,c
  3408  00231E  D020               	goto	l7482
  3409  002320  5064               	movf	_a+3,w,c
  3410  002322  E104               	bnz	u7990
  3411  002324  0E02               	movlw	2
  3412  002326  5C63               	subwf	_a+2,w,c
  3413  002328  A0D8               	btfss	status,0,c
  3414  00232A  D01A               	goto	l7482
  3415  00232C                     u7990:
  3416  00232C  BE64               	btfsc	_a+3,7,c
  3417  00232E  D006               	goto	u8000
  3418  002330  0E91               	movlw	145
  3419  002332  5C63               	subwf	_a+2,w,c
  3420  002334  0E01               	movlw	1
  3421  002336  5864               	subwfb	_a+3,w,c
  3422  002338  B0D8               	btfsc	status,0,c
  3423  00233A  D012               	goto	l7482
  3424  00233C                     u8000:
  3425  00233C  0EC0               	movlw	192
  3426  00233E  EC73  F01E         	call	_lcdInst
  3427                           
  3428                           ;main.c: 243:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3429  002342  0E5A               	movlw	low STR_12
  3430  002344  0100               	movlb	0	; () banked
  3431  002346  6FED               	movwf	printf@fmt& (0+255),b
  3432  002348  0EFE               	movlw	high STR_12
  3433  00234A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3434  00234C  C063  F0EF         	movff	_a+2,?_printf+2
  3435  002350  C064  F0F0         	movff	_a+3,?_printf+3
  3436  002354  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3437  002358  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3438  00235C  EC0D  F01E         	call	_printf	;wreg free
  3439  002360                     l7482:
  3440                           
  3441                           ;main.c: 245:     if(!(a[1]>=2 && a[1]<=400)){
  3442  002360  BE64               	btfsc	_a+3,7,c
  3443  002362  D00E               	goto	u8020
  3444  002364  5064               	movf	_a+3,w,c
  3445  002366  E104               	bnz	u8010
  3446  002368  0E02               	movlw	2
  3447  00236A  5C63               	subwf	_a+2,w,c
  3448  00236C  A0D8               	btfss	status,0,c
  3449  00236E  D008               	goto	u8020
  3450  002370                     u8010:
  3451  002370  BE64               	btfsc	_a+3,7,c
  3452  002372  D010               	goto	l7490
  3453  002374  0E91               	movlw	145
  3454  002376  5C63               	subwf	_a+2,w,c
  3455  002378  0E01               	movlw	1
  3456  00237A  5864               	subwfb	_a+3,w,c
  3457  00237C  A0D8               	btfss	status,0,c
  3458  00237E  D00A               	goto	l7490
  3459  002380                     u8020:
  3460  002380  0EC0               	movlw	192
  3461  002382  EC73  F01E         	call	_lcdInst
  3462                           
  3463                           ;main.c: 247:         printf("Dist2 = X");
  3464  002386  0E88               	movlw	low STR_13
  3465  002388  0100               	movlb	0	; () banked
  3466  00238A  6FED               	movwf	printf@fmt& (0+255),b
  3467  00238C  0EFF               	movlw	high STR_13
  3468  00238E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3469  002390  EC0D  F01E         	call	_printf	;wreg free
  3470  002394                     l7490:
  3471                           
  3472                           ;main.c: 249:     if(a[2]>=2 && a[2]<=400){
  3473  002394  BE66               	btfsc	_a+5,7,c
  3474  002396  D020               	goto	l7498
  3475  002398  5066               	movf	_a+5,w,c
  3476  00239A  E104               	bnz	u8030
  3477  00239C  0E02               	movlw	2
  3478  00239E  5C65               	subwf	_a+4,w,c
  3479  0023A0  A0D8               	btfss	status,0,c
  3480  0023A2  D01A               	goto	l7498
  3481  0023A4                     u8030:
  3482  0023A4  BE66               	btfsc	_a+5,7,c
  3483  0023A6  D006               	goto	u8040
  3484  0023A8  0E91               	movlw	145
  3485  0023AA  5C65               	subwf	_a+4,w,c
  3486  0023AC  0E01               	movlw	1
  3487  0023AE  5866               	subwfb	_a+5,w,c
  3488  0023B0  B0D8               	btfsc	status,0,c
  3489  0023B2  D012               	goto	l7498
  3490  0023B4                     u8040:
  3491  0023B4  0E90               	movlw	144
  3492  0023B6  EC73  F01E         	call	_lcdInst
  3493                           
  3494                           ;main.c: 251:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  3495  0023BA  0E6A               	movlw	low STR_14
  3496  0023BC  0100               	movlb	0	; () banked
  3497  0023BE  6FED               	movwf	printf@fmt& (0+255),b
  3498  0023C0  0EFE               	movlw	high STR_14
  3499  0023C2  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3500  0023C4  C065  F0EF         	movff	_a+4,?_printf+2
  3501  0023C8  C066  F0F0         	movff	_a+5,?_printf+3
  3502  0023CC  C272  F0F1         	movff	_dist_final+34,?_printf+4
  3503  0023D0  C273  F0F2         	movff	_dist_final+35,?_printf+5
  3504  0023D4  EC0D  F01E         	call	_printf	;wreg free
  3505  0023D8                     l7498:
  3506                           
  3507                           ;main.c: 253:     if(!(a[2]>=2 && a[2]<=400)){
  3508  0023D8  BE66               	btfsc	_a+5,7,c
  3509  0023DA  D00E               	goto	u8060
  3510  0023DC  5066               	movf	_a+5,w,c
  3511  0023DE  E104               	bnz	u8050
  3512  0023E0  0E02               	movlw	2
  3513  0023E2  5C65               	subwf	_a+4,w,c
  3514  0023E4  A0D8               	btfss	status,0,c
  3515  0023E6  D008               	goto	u8060
  3516  0023E8                     u8050:
  3517  0023E8  BE66               	btfsc	_a+5,7,c
  3518  0023EA  D010               	goto	l7506
  3519  0023EC  0E91               	movlw	145
  3520  0023EE  5C65               	subwf	_a+4,w,c
  3521  0023F0  0E01               	movlw	1
  3522  0023F2  5866               	subwfb	_a+5,w,c
  3523  0023F4  A0D8               	btfss	status,0,c
  3524  0023F6  D00A               	goto	l7506
  3525  0023F8                     u8060:
  3526  0023F8  0E90               	movlw	144
  3527  0023FA  EC73  F01E         	call	_lcdInst
  3528                           
  3529                           ;main.c: 255:         printf("Dist3 = X");
  3530  0023FE  0E92               	movlw	low STR_15
  3531  002400  0100               	movlb	0	; () banked
  3532  002402  6FED               	movwf	printf@fmt& (0+255),b
  3533  002404  0EFF               	movlw	high STR_15
  3534  002406  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3535  002408  EC0D  F01E         	call	_printf	;wreg free
  3536  00240C                     l7506:
  3537                           
  3538                           ;main.c: 257:     if(a[3]>=2 && a[3]<=400){
  3539  00240C  BE68               	btfsc	_a+7,7,c
  3540  00240E  D020               	goto	l7514
  3541  002410  5068               	movf	_a+7,w,c
  3542  002412  E104               	bnz	u8070
  3543  002414  0E02               	movlw	2
  3544  002416  5C67               	subwf	_a+6,w,c
  3545  002418  A0D8               	btfss	status,0,c
  3546  00241A  D01A               	goto	l7514
  3547  00241C                     u8070:
  3548  00241C  BE68               	btfsc	_a+7,7,c
  3549  00241E  D006               	goto	u8080
  3550  002420  0E91               	movlw	145
  3551  002422  5C67               	subwf	_a+6,w,c
  3552  002424  0E01               	movlw	1
  3553  002426  5868               	subwfb	_a+7,w,c
  3554  002428  B0D8               	btfsc	status,0,c
  3555  00242A  D012               	goto	l7514
  3556  00242C                     u8080:
  3557  00242C  0ED0               	movlw	208
  3558  00242E  EC73  F01E         	call	_lcdInst
  3559                           
  3560                           ;main.c: 259:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  3561  002432  0E17               	movlw	low STR_16
  3562  002434  0100               	movlb	0	; () banked
  3563  002436  6FED               	movwf	printf@fmt& (0+255),b
  3564  002438  0EFE               	movlw	high STR_16
  3565  00243A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3566  00243C  C067  F0EF         	movff	_a+6,?_printf+2
  3567  002440  C068  F0F0         	movff	_a+7,?_printf+3
  3568  002444  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  3569  002448  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  3570  00244C  EC0D  F01E         	call	_printf	;wreg free
  3571  002450                     l7514:
  3572                           
  3573                           ;main.c: 262:     if(!(a[3]>=2 && a[3]<=400)){
  3574  002450  BE68               	btfsc	_a+7,7,c
  3575  002452  D00E               	goto	u8100
  3576  002454  5068               	movf	_a+7,w,c
  3577  002456  E104               	bnz	u8090
  3578  002458  0E02               	movlw	2
  3579  00245A  5C67               	subwf	_a+6,w,c
  3580  00245C  A0D8               	btfss	status,0,c
  3581  00245E  D008               	goto	u8100
  3582  002460                     u8090:
  3583  002460  BE68               	btfsc	_a+7,7,c
  3584  002462  0012               	return	
  3585  002464  0E91               	movlw	145
  3586  002466  5C67               	subwf	_a+6,w,c
  3587  002468  0E01               	movlw	1
  3588  00246A  5868               	subwfb	_a+7,w,c
  3589  00246C  A0D8               	btfss	status,0,c
  3590  00246E  0012               	return	
  3591  002470                     u8100:
  3592  002470  0ED0               	movlw	208
  3593  002472  EC73  F01E         	call	_lcdInst
  3594                           
  3595                           ;main.c: 264:         printf("Dist4 = X");
  3596  002476  0E9C               	movlw	low STR_17
  3597  002478  0100               	movlb	0	; () banked
  3598  00247A  6FED               	movwf	printf@fmt& (0+255),b
  3599  00247C  0EFF               	movlw	high STR_17
  3600  00247E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3601  002480  EC0D  F01E         	call	_printf	;wreg free
  3602  002484  0012               	return		;funcret
  3603  002486                     __end_of_print_echo:
  3604                           	opt callstack 0
  3605                           
  3606 ;; *************** function _min *****************
  3607 ;; Defined at:
  3608 ;;		line 267 in file "main.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  array           2    0[BANK0 ] PTR int 
  3611 ;;		 -> a(8), 
  3612 ;;  size            2    2[BANK0 ] int 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  i               2    9[BANK0 ] int 
  3615 ;;  minimum         2    7[BANK0 ] int 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  2    0[BANK0 ] int 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3625 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;Total ram usage:       11 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    3
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_ultrasonic_main
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text4
  3640  002C5C                     __ptext4:
  3641                           	opt callstack 0
  3642  002C5C                     _min:
  3643                           	opt callstack 26
  3644                           
  3645                           ;main.c: 268:     int minimum =0 ;
  3646                           
  3647                           ;incstack = 0
  3648  002C5C  0E00               	movlw	0
  3649  002C5E  0100               	movlb	0	; () banked
  3650  002C60  6F88               	movwf	(min@minimum+1)& (0+255),b
  3651  002C62  0E00               	movlw	0
  3652  002C64  6F87               	movwf	min@minimum& (0+255),b
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;main.c: 269:     if (array[0]<=23){
  3656  002C66  C080  FFD9         	movff	min@array,fsr2l
  3657  002C6A  C081  FFDA         	movff	min@array+1,fsr2h
  3658  002C6E  0E01               	movlw	1
  3659  002C70  BEDB               	btfsc	plusw2,7,c
  3660  002C72  D007               	goto	u8110
  3661  002C74  0E01               	movlw	1
  3662  002C76  50DB               	movf	plusw2,w,c
  3663  002C78  E10C               	bnz	l7528
  3664  002C7A  0E18               	movlw	24
  3665  002C7C  5CDE               	subwf	postinc2,w,c
  3666  002C7E  B0D8               	btfsc	status,0,c
  3667  002C80  D008               	goto	l7528
  3668  002C82                     u8110:
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;main.c: 270:          minimum = array[0];}
  3672  002C82  C080  FFD9         	movff	min@array,fsr2l
  3673  002C86  C081  FFDA         	movff	min@array+1,fsr2h
  3674  002C8A  CFDE F087          	movff	postinc2,min@minimum
  3675  002C8E  CFDD F088          	movff	postdec2,min@minimum+1
  3676  002C92                     l7528:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 274:     for (int i = 0; i<size; i++){
  3680  002C92  0E00               	movlw	0
  3681  002C94  6F8A               	movwf	(min@i+1)& (0+255),b
  3682  002C96  0E00               	movlw	0
  3683  002C98  6F89               	movwf	min@i& (0+255),b
  3684  002C9A  D059               	goto	l7544
  3685  002C9C                     l7530:
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;main.c: 278:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  3689  002C9C  5187               	movf	min@minimum& (0+255),w,b
  3690  002C9E  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  3691  002CA0  B4D8               	btfsc	status,2,c
  3692  002CA2  D046               	goto	u8160
  3693                           
  3694                           ; BSR set to: 0
  3695  002CA4  90D8               	bcf	status,0,c
  3696  002CA6  3589               	rlcf	min@i& (0+255),w,b
  3697  002CA8  6ED9               	movwf	fsr2l,c
  3698  002CAA  358A               	rlcf	(min@i+1)& (0+255),w,b
  3699  002CAC  6EDA               	movwf	fsr2h,c
  3700  002CAE  5180               	movf	min@array& (0+255),w,b
  3701  002CB0  26D9               	addwf	fsr2l,f,c
  3702  002CB2  5181               	movf	(min@array+1)& (0+255),w,b
  3703  002CB4  22DA               	addwfc	fsr2h,f,c
  3704  002CB6  50DE               	movf	postinc2,w,c
  3705  002CB8  5D87               	subwf	min@minimum& (0+255),w,b
  3706  002CBA  5188               	movf	(min@minimum+1)& (0+255),w,b
  3707  002CBC  0A80               	xorlw	128
  3708  002CBE  6F86               	movwf	(??_min+2)& (0+255),b
  3709  002CC0  50DE               	movf	postinc2,w,c
  3710  002CC2  0A80               	xorlw	128
  3711  002CC4  5986               	subwfb	(??_min+2)& (0+255),w,b
  3712  002CC6  A0D8               	btfss	status,0,c
  3713  002CC8  D040               	goto	l7542
  3714                           
  3715                           ; BSR set to: 0
  3716  002CCA  90D8               	bcf	status,0,c
  3717  002CCC  3589               	rlcf	min@i& (0+255),w,b
  3718  002CCE  6ED9               	movwf	fsr2l,c
  3719  002CD0  358A               	rlcf	(min@i+1)& (0+255),w,b
  3720  002CD2  6EDA               	movwf	fsr2h,c
  3721  002CD4  5180               	movf	min@array& (0+255),w,b
  3722  002CD6  26D9               	addwf	fsr2l,f,c
  3723  002CD8  5181               	movf	(min@array+1)& (0+255),w,b
  3724  002CDA  22DA               	addwfc	fsr2h,f,c
  3725  002CDC  50DE               	movf	postinc2,w,c
  3726  002CDE  10DE               	iorwf	postinc2,w,c
  3727  002CE0  B4D8               	btfsc	status,2,c
  3728  002CE2  D033               	goto	l7542
  3729                           
  3730                           ; BSR set to: 0
  3731  002CE4  90D8               	bcf	status,0,c
  3732  002CE6  3589               	rlcf	min@i& (0+255),w,b
  3733  002CE8  6ED9               	movwf	fsr2l,c
  3734  002CEA  358A               	rlcf	(min@i+1)& (0+255),w,b
  3735  002CEC  6EDA               	movwf	fsr2h,c
  3736  002CEE  5180               	movf	min@array& (0+255),w,b
  3737  002CF0  26D9               	addwf	fsr2l,f,c
  3738  002CF2  5181               	movf	(min@array+1)& (0+255),w,b
  3739  002CF4  22DA               	addwfc	fsr2h,f,c
  3740  002CF6  0E01               	movlw	1
  3741  002CF8  BEDB               	btfsc	plusw2,7,c
  3742  002CFA  D027               	goto	l7542
  3743  002CFC  0E01               	movlw	1
  3744  002CFE  50DB               	movf	plusw2,w,c
  3745  002D00  E104               	bnz	u8150
  3746  002D02  0E0E               	movlw	14
  3747  002D04  5CDE               	subwf	postinc2,w,c
  3748  002D06  A0D8               	btfss	status,0,c
  3749  002D08  D020               	goto	l7542
  3750  002D0A                     u8150:
  3751                           
  3752                           ; BSR set to: 0
  3753  002D0A  90D8               	bcf	status,0,c
  3754  002D0C  3589               	rlcf	min@i& (0+255),w,b
  3755  002D0E  6ED9               	movwf	fsr2l,c
  3756  002D10  358A               	rlcf	(min@i+1)& (0+255),w,b
  3757  002D12  6EDA               	movwf	fsr2h,c
  3758  002D14  5180               	movf	min@array& (0+255),w,b
  3759  002D16  26D9               	addwf	fsr2l,f,c
  3760  002D18  5181               	movf	(min@array+1)& (0+255),w,b
  3761  002D1A  22DA               	addwfc	fsr2h,f,c
  3762  002D1C  0E01               	movlw	1
  3763  002D1E  BEDB               	btfsc	plusw2,7,c
  3764  002D20  D007               	goto	u8160
  3765  002D22  0E01               	movlw	1
  3766  002D24  50DB               	movf	plusw2,w,c
  3767  002D26  E111               	bnz	l7542
  3768  002D28  0E18               	movlw	24
  3769  002D2A  5CDE               	subwf	postinc2,w,c
  3770  002D2C  B0D8               	btfsc	status,0,c
  3771  002D2E  D00D               	goto	l7542
  3772  002D30                     u8160:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;main.c: 282:             minimum = array[i];
  3776  002D30  90D8               	bcf	status,0,c
  3777  002D32  3589               	rlcf	min@i& (0+255),w,b
  3778  002D34  6ED9               	movwf	fsr2l,c
  3779  002D36  358A               	rlcf	(min@i+1)& (0+255),w,b
  3780  002D38  6EDA               	movwf	fsr2h,c
  3781  002D3A  5180               	movf	min@array& (0+255),w,b
  3782  002D3C  26D9               	addwf	fsr2l,f,c
  3783  002D3E  5181               	movf	(min@array+1)& (0+255),w,b
  3784  002D40  22DA               	addwfc	fsr2h,f,c
  3785  002D42  CFDE F087          	movff	postinc2,min@minimum
  3786  002D46  CFDD F088          	movff	postdec2,min@minimum+1
  3787  002D4A                     l7542:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;main.c: 287:     }
  3791  002D4A  4B89               	infsnz	min@i& (0+255),f,b
  3792  002D4C  2B8A               	incf	(min@i+1)& (0+255),f,b
  3793  002D4E                     l7544:
  3794                           
  3795                           ; BSR set to: 0
  3796  002D4E  5182               	movf	min@size& (0+255),w,b
  3797  002D50  5D89               	subwf	min@i& (0+255),w,b
  3798  002D52  518A               	movf	(min@i+1)& (0+255),w,b
  3799  002D54  0A80               	xorlw	128
  3800  002D56  6F84               	movwf	??_min& (0+255),b
  3801  002D58  5183               	movf	(min@size+1)& (0+255),w,b
  3802  002D5A  0A80               	xorlw	128
  3803  002D5C  5984               	subwfb	??_min& (0+255),w,b
  3804  002D5E  A0D8               	btfss	status,0,c
  3805  002D60  D79D               	goto	l7530
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;main.c: 288:     return minimum;
  3809  002D62  C087  F080         	movff	min@minimum,?_min
  3810  002D66  C088  F081         	movff	min@minimum+1,?_min+1
  3811                           
  3812                           ; BSR set to: 0
  3813  002D6A  0012               	return		;funcret
  3814  002D6C                     __end_of_min:
  3815                           	opt callstack 0
  3816                           
  3817 ;; *************** function _start *****************
  3818 ;; Defined at:
  3819 ;;		line 697 in file "main.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    5
  3840 ;; This function calls:
  3841 ;;		_I2C_Master_Init
  3842 ;;		_I2C_Master_Start
  3843 ;;		_I2C_Master_Stop
  3844 ;;		_I2C_Master_Write
  3845 ;; This function is called by:
  3846 ;;		_main
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text5
  3851  00390A                     __ptext5:
  3852                           	opt callstack 0
  3853  00390A                     _start:
  3854                           	opt callstack 25
  3855                           
  3856                           ;main.c: 698:     I2C_Master_Init(100000);
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;incstack = 0
  3860  00390A  0EA0               	movlw	160
  3861  00390C  0100               	movlb	0	; () banked
  3862  00390E  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  3863  003910  0E86               	movlw	134
  3864  003912  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  3865  003914  0E01               	movlw	1
  3866  003916  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  3867  003918  0E00               	movlw	0
  3868  00391A  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  3869  00391C  ECFF  F01B         	call	_I2C_Master_Init	;wreg free
  3870                           
  3871                           ;main.c: 699:     I2C_Master_Start();
  3872  003920  EC84  F01E         	call	_I2C_Master_Start	;wreg free
  3873                           
  3874                           ;main.c: 700:     I2C_Master_Write(0b00010000);
  3875  003924  0E00               	movlw	0
  3876  003926  0100               	movlb	0	; () banked
  3877  003928  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3878  00392A  0E10               	movlw	16
  3879  00392C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3880  00392E  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  3881                           
  3882                           ;main.c: 701:     I2C_Master_Stop();
  3883  003932  EC80  F01E         	call	_I2C_Master_Stop	;wreg free
  3884                           
  3885                           ;main.c: 703:     I2C_Master_Start();
  3886  003936  EC84  F01E         	call	_I2C_Master_Start	;wreg free
  3887                           
  3888                           ;main.c: 704:     I2C_Master_Write(0b00010000);
  3889  00393A  0E00               	movlw	0
  3890  00393C  0100               	movlb	0	; () banked
  3891  00393E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3892  003940  0E10               	movlw	16
  3893  003942  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3894  003944  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  3895                           
  3896                           ;main.c: 705:     I2C_Master_Write('2');
  3897  003948  0E00               	movlw	0
  3898  00394A  0100               	movlb	0	; () banked
  3899  00394C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  3900  00394E  0E32               	movlw	50
  3901  003950  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  3902  003952  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  3903                           
  3904                           ;main.c: 706:     I2C_Master_Stop();
  3905  003956  EC80  F01E         	call	_I2C_Master_Stop	;wreg free
  3906  00395A  0012               	return		;funcret
  3907  00395C                     __end_of_start:
  3908                           	opt callstack 0
  3909                           
  3910 ;; *************** function _number_deploy *****************
  3911 ;; Defined at:
  3912 ;;		line 416 in file "main.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  avg_dist        2  121[BANK0 ] int 
  3915 ;;  poles_detect    2  123[BANK0 ] int 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  t_count         2    4[BANK1 ] int 
  3918 ;;  tires_detect    2    2[BANK1 ] int 
  3919 ;;  tires_t         2    0[BANK1 ] int 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2  121[BANK0 ] int 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3929 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;Total ram usage:       12 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:   14
  3936 ;; This function calls:
  3937 ;;		___awdiv
  3938 ;;		_lcdInst
  3939 ;;		_printf
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text6
  3946  002076                     __ptext6:
  3947                           	opt callstack 0
  3948  002076                     _number_deploy:
  3949                           	opt callstack 16
  3950                           
  3951                           ;main.c: 417:     int tires_t=0;
  3952                           
  3953                           ;incstack = 0
  3954  002076  0E00               	movlw	0
  3955  002078  0101               	movlb	1	; () banked
  3956  00207A  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  3957  00207C  0E00               	movlw	0
  3958  00207E  6F00               	movwf	number_deploy@tires_t& (0+255),b
  3959                           
  3960                           ;main.c: 418:     int tires_detected=0;
  3961  002080  0E00               	movlw	0
  3962  002082  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  3963  002084  0E00               	movlw	0
  3964  002086  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  3965                           
  3966                           ;main.c: 419:     int t_count = 0;
  3967  002088  0E00               	movlw	0
  3968  00208A  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  3969  00208C  0E00               	movlw	0
  3970  00208E  6F04               	movwf	number_deploy@t_count& (0+255),b
  3971                           
  3972                           ;main.c: 422:     while (t_count<3){
  3973  002090  D0F6               	goto	l7848
  3974  002092                     l7792:
  3975                           
  3976                           ; BSR set to: 1
  3977                           ;main.c: 423:   if (poles_detected != 0){
  3978  002092  0100               	movlb	0	; () banked
  3979  002094  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  3980  002096  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  3981  002098  B4D8               	btfsc	status,2,c
  3982  00209A  D031               	goto	l7802
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;main.c: 424:    if ((avg_dist/1000)<30){
  3986  00209C  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  3987  0020A0  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  3988  0020A4  0E03               	movlw	3
  3989  0020A6  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3990  0020A8  0EE8               	movlw	232
  3991  0020AA  6F82               	movwf	___awdiv@divisor& (0+255),b
  3992  0020AC  EC95  F01A         	call	___awdiv	;wreg free
  3993  0020B0  0100               	movlb	0	; () banked
  3994  0020B2  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  3995  0020B4  D006               	goto	u8360
  3996  0020B6  5181               	movf	(?___awdiv+1)& (0+255),w,b
  3997  0020B8  E109               	bnz	l7798
  3998  0020BA  0E1E               	movlw	30
  3999  0020BC  5D80               	subwf	?___awdiv& (0+255),w,b
  4000  0020BE  B0D8               	btfsc	status,0,c
  4001  0020C0  D005               	goto	l7798
  4002  0020C2                     u8360:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;main.c: 426:     tires_t = 1;
  4006  0020C2  0E00               	movlw	0
  4007  0020C4  0101               	movlb	1	; () banked
  4008  0020C6  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4009  0020C8  0E01               	movlw	1
  4010  0020CA  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4011  0020CC                     l7798:
  4012                           
  4013                           ;main.c: 428:    if ((avg_dist/1000)>30){
  4014  0020CC  C0F9  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4015  0020D0  C0FA  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4016  0020D4  0E03               	movlw	3
  4017  0020D6  0100               	movlb	0	; () banked
  4018  0020D8  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4019  0020DA  0EE8               	movlw	232
  4020  0020DC  6F82               	movwf	___awdiv@divisor& (0+255),b
  4021  0020DE  EC95  F01A         	call	___awdiv	;wreg free
  4022  0020E2  0100               	movlb	0	; () banked
  4023  0020E4  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4024  0020E6  D00B               	goto	l7802
  4025  0020E8  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4026  0020EA  E104               	bnz	u8370
  4027  0020EC  0E1F               	movlw	31
  4028  0020EE  5D80               	subwf	?___awdiv& (0+255),w,b
  4029  0020F0  A0D8               	btfss	status,0,c
  4030  0020F2  D005               	goto	l7802
  4031  0020F4                     u8370:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;main.c: 429:     tires_t = 2;
  4035  0020F4  0E00               	movlw	0
  4036  0020F6  0101               	movlb	1	; () banked
  4037  0020F8  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4038  0020FA  0E02               	movlw	2
  4039  0020FC  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4040  0020FE                     l7802:
  4041                           
  4042                           ;main.c: 433:   if (poles_detected == 0){
  4043  0020FE  0100               	movlb	0	; () banked
  4044  002100  51FB               	movf	number_deploy@poles_detected& (0+255),w,b
  4045  002102  11FC               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4046  002104  A4D8               	btfss	status,2,c
  4047  002106  D005               	goto	l7806
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;main.c: 434:    tires_t = 2;
  4051  002108  0E00               	movlw	0
  4052  00210A  0101               	movlb	1	; () banked
  4053  00210C  6F01               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4054  00210E  0E02               	movlw	2
  4055  002110  6F00               	movwf	number_deploy@tires_t& (0+255),b
  4056  002112                     l7806:
  4057                           
  4058                           ;main.c: 437:   if ((a[0]>=2 && a[0] <= 15)){
  4059  002112  BE62               	btfsc	_a+1,7,c
  4060  002114  D028               	goto	l7818
  4061  002116  5062               	movf	_a+1,w,c
  4062  002118  E104               	bnz	u8390
  4063  00211A  0E02               	movlw	2
  4064  00211C  5C61               	subwf	_a,w,c
  4065  00211E  A0D8               	btfss	status,0,c
  4066  002120  D022               	goto	l7818
  4067  002122                     u8390:
  4068  002122  BE62               	btfsc	_a+1,7,c
  4069  002124  D006               	goto	u8400
  4070  002126  5062               	movf	_a+1,w,c
  4071  002128  E11E               	bnz	l7818
  4072  00212A  0E10               	movlw	16
  4073  00212C  5C61               	subwf	_a,w,c
  4074  00212E  B0D8               	btfsc	status,0,c
  4075  002130  D01A               	goto	l7818
  4076  002132                     u8400:
  4077                           
  4078                           ;main.c: 439:             if ((a[1]>=2 && a[1] <= 15)){
  4079  002132  BE64               	btfsc	_a+3,7,c
  4080  002134  D013               	goto	l7816
  4081  002136  5064               	movf	_a+3,w,c
  4082  002138  E104               	bnz	u8410
  4083  00213A  0E02               	movlw	2
  4084  00213C  5C63               	subwf	_a+2,w,c
  4085  00213E  A0D8               	btfss	status,0,c
  4086  002140  D00D               	goto	l7816
  4087  002142                     u8410:
  4088  002142  BE64               	btfsc	_a+3,7,c
  4089  002144  D006               	goto	u8420
  4090  002146  5064               	movf	_a+3,w,c
  4091  002148  E109               	bnz	l7816
  4092  00214A  0E10               	movlw	16
  4093  00214C  5C63               	subwf	_a+2,w,c
  4094  00214E  B0D8               	btfsc	status,0,c
  4095  002150  D005               	goto	l7816
  4096  002152                     u8420:
  4097                           
  4098                           ;main.c: 441:                 tires_detected = 1;
  4099  002152  0E00               	movlw	0
  4100  002154  0101               	movlb	1	; () banked
  4101  002156  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4102  002158  0E01               	movlw	1
  4103  00215A  D004               	goto	L2
  4104  00215C                     l7816:
  4105                           
  4106                           ;main.c: 444:                 tires_detected = 0;
  4107  00215C  0E00               	movlw	0
  4108  00215E  0101               	movlb	1	; () banked
  4109  002160  6F03               	movwf	(number_deploy@tires_detected+1)& (0+255),b
  4110  002162  0E00               	movlw	0
  4111  002164                     L2:
  4112  002164  6F02               	movwf	number_deploy@tires_detected& (0+255),b
  4113  002166                     l7818:
  4114                           
  4115                           ;main.c: 447:         if ((tires_detected==1)){
  4116  002166  0101               	movlb	1	; () banked
  4117  002168  0502               	decf	number_deploy@tires_detected& (0+255),w,b
  4118  00216A  1103               	iorwf	(number_deploy@tires_detected+1)& (0+255),w,b
  4119  00216C  B4D8               	btfsc	status,2,c
  4120                           
  4121                           ; BSR set to: 1
  4122                           ;main.c: 448:             if((a[2]>=2 && a[2] <= 15)&&(a[3] >=2 && a[3]<= 15)){
  4123  00216E  BE66               	btfsc	_a+5,7,c
  4124  002170  D020               	goto	l7830
  4125  002172  5066               	movf	_a+5,w,c
  4126  002174  E104               	bnz	u8440
  4127  002176  0E02               	movlw	2
  4128  002178  5C65               	subwf	_a+4,w,c
  4129  00217A  A0D8               	btfss	status,0,c
  4130  00217C  D01A               	goto	l7830
  4131  00217E                     u8440:
  4132                           
  4133                           ; BSR set to: 1
  4134  00217E  BE66               	btfsc	_a+5,7,c
  4135  002180  D006               	goto	u8450
  4136  002182  5066               	movf	_a+5,w,c
  4137  002184  E116               	bnz	l7830
  4138  002186  0E10               	movlw	16
  4139  002188  5C65               	subwf	_a+4,w,c
  4140  00218A  B0D8               	btfsc	status,0,c
  4141  00218C  D012               	goto	l7830
  4142  00218E                     u8450:
  4143                           
  4144                           ; BSR set to: 1
  4145  00218E  BE68               	btfsc	_a+7,7,c
  4146  002190  D010               	goto	l7830
  4147  002192  5068               	movf	_a+7,w,c
  4148  002194  E104               	bnz	u8460
  4149  002196  0E02               	movlw	2
  4150  002198  5C67               	subwf	_a+6,w,c
  4151  00219A  A0D8               	btfss	status,0,c
  4152  00219C  D00A               	goto	l7830
  4153  00219E                     u8460:
  4154                           
  4155                           ; BSR set to: 1
  4156  00219E  BE68               	btfsc	_a+7,7,c
  4157  0021A0  D006               	goto	u8470
  4158  0021A2  5068               	movf	_a+7,w,c
  4159  0021A4  E106               	bnz	l7830
  4160  0021A6  0E10               	movlw	16
  4161  0021A8  5C67               	subwf	_a+6,w,c
  4162  0021AA  B0D8               	btfsc	status,0,c
  4163  0021AC  D002               	goto	l7830
  4164  0021AE                     u8470:
  4165                           
  4166                           ; BSR set to: 1
  4167                           ;main.c: 449:                 tires_detected++;
  4168  0021AE  4B02               	infsnz	number_deploy@tires_detected& (0+255),f,b
  4169  0021B0  2B03               	incf	(number_deploy@tires_detected+1)& (0+255),f,b
  4170  0021B2                     l7830:
  4171                           
  4172                           ; BSR set to: 1
  4173                           ;main.c: 453:         t_count = tires_t - tires_detected;
  4174  0021B2  5102               	movf	number_deploy@tires_detected& (0+255),w,b
  4175  0021B4  5D00               	subwf	number_deploy@tires_t& (0+255),w,b
  4176  0021B6  6F04               	movwf	number_deploy@t_count& (0+255),b
  4177  0021B8  5103               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4178  0021BA  5901               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4179  0021BC  6F05               	movwf	(number_deploy@t_count+1)& (0+255),b
  4180                           
  4181                           ; BSR set to: 1
  4182                           ;main.c: 454:         Pole[poles_detected].tires_deployed = t_count;
  4183  0021BE  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4184  0021C2  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4185  0021C6  0100               	movlb	0	; () banked
  4186  0021C8  90D8               	bcf	status,0,c
  4187  0021CA  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4188  0021CC  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4189  0021CE  90D8               	bcf	status,0,c
  4190  0021D0  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4191  0021D2  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4192  0021D4  90D8               	bcf	status,0,c
  4193  0021D6  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4194  0021D8  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4195  0021DA  0E00               	movlw	low _Pole
  4196  0021DC  25FD               	addwf	??_number_deploy& (0+255),w,b
  4197  0021DE  6ED9               	movwf	fsr2l,c
  4198  0021E0  0E02               	movlw	high _Pole
  4199  0021E2  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4200  0021E4  6EDA               	movwf	fsr2h,c
  4201  0021E6  C104  FFDE         	movff	number_deploy@t_count,postinc2
  4202  0021EA  C105  FFDD         	movff	number_deploy@t_count+1,postdec2
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;main.c: 455:         Pole[poles_detected].tires_final = tires_t;
  4206  0021EE  C0FB  F0FD         	movff	number_deploy@poles_detected,??_number_deploy
  4207  0021F2  C0FC  F0FE         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4208  0021F6  90D8               	bcf	status,0,c
  4209  0021F8  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4210  0021FA  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4211  0021FC  90D8               	bcf	status,0,c
  4212  0021FE  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4213  002200  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4214  002202  90D8               	bcf	status,0,c
  4215  002204  37FD               	rlcf	??_number_deploy& (0+255),f,b
  4216  002206  37FE               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4217  002208  0E02               	movlw	low (_Pole+2)
  4218  00220A  25FD               	addwf	??_number_deploy& (0+255),w,b
  4219  00220C  6ED9               	movwf	fsr2l,c
  4220  00220E  0E02               	movlw	high (_Pole+2)
  4221  002210  21FE               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4222  002212  6EDA               	movwf	fsr2h,c
  4223  002214  C100  FFDE         	movff	number_deploy@tires_t,postinc2
  4224  002218  C101  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;main.c: 456:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4228  00221C  0E01               	movlw	1
  4229  00221E  EC73  F01E         	call	_lcdInst
  4230  002222  0E11               	movlw	17
  4231  002224  0100               	movlb	0	; () banked
  4232  002226  6FFD               	movwf	??_number_deploy& (0+255),b
  4233  002228  0E3A               	movlw	58
  4234  00222A                     u9277:
  4235  00222A  2EE8               	decfsz	wreg,f,c
  4236  00222C  D7FE               	bra	u9277
  4237  00222E  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4238  002230  D7FC               	bra	u9277
  4239  002232  F000               	nop	
  4240                           
  4241                           ;main.c: 457:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4242  002234  0E4A               	movlw	low STR_22
  4243  002236  0100               	movlb	0	; () banked
  4244  002238  6FED               	movwf	printf@fmt& (0+255),b
  4245  00223A  0EFE               	movlw	high STR_22
  4246  00223C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4247  00223E  C102  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4248  002242  C103  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4249  002246  C104  F0F1         	movff	number_deploy@t_count,?_printf+4
  4250  00224A  C105  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4251  00224E  EC0D  F01E         	call	_printf	;wreg free
  4252                           
  4253                           ;main.c: 458:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4254  002252  0E0D               	movlw	13
  4255  002254  0100               	movlb	0	; () banked
  4256  002256  6FFE               	movwf	(??_number_deploy+1)& (0+255),b
  4257  002258  0EAF               	movlw	175
  4258  00225A  6FFD               	movwf	??_number_deploy& (0+255),b
  4259  00225C  0EB6               	movlw	182
  4260  00225E                     u9287:
  4261  00225E  2EE8               	decfsz	wreg,f,c
  4262  002260  D7FE               	bra	u9287
  4263  002262  2FFD               	decfsz	??_number_deploy& (0+255),f,b
  4264  002264  D7FC               	bra	u9287
  4265  002266  2FFE               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4266  002268  D7FA               	bra	u9287
  4267  00226A  F000               	nop	
  4268                           
  4269                           ;main.c: 460:         if (t_count<=2){
  4270  00226C  0101               	movlb	1	; () banked
  4271  00226E  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4272  002270  D00E               	goto	u8490
  4273  002272  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4274  002274  E104               	bnz	l7848
  4275  002276  0E03               	movlw	3
  4276  002278  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4277  00227A  A0D8               	btfss	status,0,c
  4278  00227C  D008               	goto	u8490
  4279  00227E                     l7848:
  4280                           
  4281                           ; BSR set to: 1
  4282                           ;main.c: 422:     while (t_count<3){
  4283  00227E  BF05               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4284  002280  D708               	goto	l7792
  4285  002282  5105               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4286  002284  E104               	bnz	u8490
  4287  002286  0E03               	movlw	3
  4288  002288  5D04               	subwf	number_deploy@t_count& (0+255),w,b
  4289  00228A  A0D8               	btfss	status,0,c
  4290  00228C  D702               	goto	l7792
  4291  00228E                     u8490:
  4292                           
  4293                           ; BSR set to: 1
  4294                           ;main.c: 468:     return (int) t_count;
  4295  00228E  C104  F0F9         	movff	number_deploy@t_count,?_number_deploy
  4296  002292  C105  F0FA         	movff	number_deploy@t_count+1,?_number_deploy+1
  4297                           
  4298                           ; BSR set to: 1
  4299  002296  0012               	return		;funcret
  4300  002298                     __end_of_number_deploy:
  4301                           	opt callstack 0
  4302                           
  4303 ;; *************** function ___awdiv *****************
  4304 ;; Defined at:
  4305 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  dividend        2    0[BANK0 ] int 
  4308 ;;  divisor         2    2[BANK0 ] int 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  quotient        2    6[BANK0 ] int 
  4311 ;;  sign            1    5[BANK0 ] unsigned char 
  4312 ;;  counter         1    4[BANK0 ] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  2    0[BANK0 ] int 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;Total ram usage:        8 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    3
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_number_deploy
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text7
  4337  00352A                     __ptext7:
  4338                           	opt callstack 0
  4339  00352A                     ___awdiv:
  4340                           	opt callstack 26
  4341                           
  4342                           ; BSR set to: 1
  4343                           ;incstack = 0
  4344  00352A  0E00               	movlw	0
  4345  00352C  0100               	movlb	0	; () banked
  4346  00352E  6F85               	movwf	___awdiv@sign& (0+255),b
  4347                           
  4348                           ; BSR set to: 0
  4349  003530  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4350  003532  D006               	goto	l7554
  4351                           
  4352                           ; BSR set to: 0
  4353  003534  6D82               	negf	___awdiv@divisor& (0+255),b
  4354  003536  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4355  003538  B0D8               	btfsc	status,0,c
  4356  00353A  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4357                           
  4358                           ; BSR set to: 0
  4359  00353C  0E01               	movlw	1
  4360  00353E  6F85               	movwf	___awdiv@sign& (0+255),b
  4361  003540                     l7554:
  4362                           
  4363                           ; BSR set to: 0
  4364  003540  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4365  003542  D006               	goto	l7560
  4366                           
  4367                           ; BSR set to: 0
  4368  003544  6D80               	negf	___awdiv@dividend& (0+255),b
  4369  003546  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4370  003548  B0D8               	btfsc	status,0,c
  4371  00354A  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4372                           
  4373                           ; BSR set to: 0
  4374  00354C  0E01               	movlw	1
  4375  00354E  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4376  003550                     l7560:
  4377                           
  4378                           ; BSR set to: 0
  4379  003550  0E00               	movlw	0
  4380  003552  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4381  003554  0E00               	movlw	0
  4382  003556  6F86               	movwf	___awdiv@quotient& (0+255),b
  4383                           
  4384                           ; BSR set to: 0
  4385  003558  5182               	movf	___awdiv@divisor& (0+255),w,b
  4386  00355A  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4387  00355C  B4D8               	btfsc	status,2,c
  4388  00355E  D01C               	goto	l7582
  4389                           
  4390                           ; BSR set to: 0
  4391  003560  0E01               	movlw	1
  4392  003562  6F84               	movwf	___awdiv@counter& (0+255),b
  4393  003564  D004               	goto	l7568
  4394  003566                     l7566:
  4395                           
  4396                           ; BSR set to: 0
  4397  003566  90D8               	bcf	status,0,c
  4398  003568  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4399  00356A  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4400  00356C  2B84               	incf	___awdiv@counter& (0+255),f,b
  4401  00356E                     l7568:
  4402                           
  4403                           ; BSR set to: 0
  4404  00356E  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4405  003570  D7FA               	goto	l7566
  4406  003572                     u8210:
  4407                           
  4408                           ; BSR set to: 0
  4409  003572  90D8               	bcf	status,0,c
  4410  003574  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4411  003576  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4412                           
  4413                           ; BSR set to: 0
  4414  003578  5182               	movf	___awdiv@divisor& (0+255),w,b
  4415  00357A  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4416  00357C  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4417  00357E  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4418  003580  A0D8               	btfss	status,0,c
  4419  003582  D005               	goto	l7578
  4420                           
  4421                           ; BSR set to: 0
  4422  003584  5182               	movf	___awdiv@divisor& (0+255),w,b
  4423  003586  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4424  003588  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4425  00358A  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4426                           
  4427                           ; BSR set to: 0
  4428  00358C  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4429  00358E                     l7578:
  4430                           
  4431                           ; BSR set to: 0
  4432  00358E  90D8               	bcf	status,0,c
  4433  003590  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4434  003592  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4435                           
  4436                           ; BSR set to: 0
  4437  003594  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4438  003596  D7ED               	goto	u8210
  4439  003598                     l7582:
  4440                           
  4441                           ; BSR set to: 0
  4442  003598  5185               	movf	___awdiv@sign& (0+255),w,b
  4443  00359A  B4D8               	btfsc	status,2,c
  4444  00359C  D004               	goto	l7586
  4445                           
  4446                           ; BSR set to: 0
  4447  00359E  6D86               	negf	___awdiv@quotient& (0+255),b
  4448  0035A0  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4449  0035A2  B0D8               	btfsc	status,0,c
  4450  0035A4  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4451  0035A6                     l7586:
  4452                           
  4453                           ; BSR set to: 0
  4454  0035A6  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4455  0035AA  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4456                           
  4457                           ; BSR set to: 0
  4458  0035AE  0012               	return		;funcret
  4459  0035B0                     __end_of___awdiv:
  4460                           	opt callstack 0
  4461                           
  4462 ;; *************** function _brake *****************
  4463 ;; Defined at:
  4464 ;;		line 666 in file "main.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;Total ram usage:        2 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:   14
  4485 ;; This function calls:
  4486 ;;		_I2C_Master_Read
  4487 ;;		_I2C_Master_Start
  4488 ;;		_I2C_Master_Stop
  4489 ;;		_I2C_Master_Write
  4490 ;;		_lcdInst
  4491 ;;		_printf
  4492 ;; This function is called by:
  4493 ;;		_main
  4494 ;;		_sense_tires
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text8
  4499  0032B6                     __ptext8:
  4500                           	opt callstack 0
  4501  0032B6                     _brake:
  4502                           	opt callstack 16
  4503                           
  4504                           ;main.c: 667:     I2C_Master_Start();
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;incstack = 0
  4508  0032B6  EC84  F01E         	call	_I2C_Master_Start	;wreg free
  4509                           
  4510                           ;main.c: 668:     I2C_Master_Write(0b00010000);
  4511  0032BA  0E00               	movlw	0
  4512  0032BC  0100               	movlb	0	; () banked
  4513  0032BE  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4514  0032C0  0E10               	movlw	16
  4515  0032C2  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4516  0032C4  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  4517                           
  4518                           ;main.c: 669:     I2C_Master_Write('9');
  4519  0032C8  0E00               	movlw	0
  4520  0032CA  0100               	movlb	0	; () banked
  4521  0032CC  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4522  0032CE  0E39               	movlw	57
  4523  0032D0  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4524  0032D2  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  4525                           
  4526                           ;main.c: 670:     I2C_Master_Stop();
  4527  0032D6  EC80  F01E         	call	_I2C_Master_Stop	;wreg free
  4528                           
  4529                           ;main.c: 671:     I2C_Master_Start();
  4530  0032DA  EC84  F01E         	call	_I2C_Master_Start	;wreg free
  4531                           
  4532                           ;main.c: 672:     I2C_Master_Write(0b00010001);
  4533  0032DE  0E00               	movlw	0
  4534  0032E0  0100               	movlb	0	; () banked
  4535  0032E2  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4536  0032E4  0E11               	movlw	17
  4537  0032E6  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4538  0032E8  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  4539                           
  4540                           ;main.c: 673:     avg_dist = I2C_Master_Read(1);
  4541  0032EC  0E01               	movlw	1
  4542  0032EE  ECF8  F01D         	call	_I2C_Master_Read
  4543  0032F2  0100               	movlb	0	; () banked
  4544  0032F4  6FF9               	movwf	??_brake& (0+255),b
  4545  0032F6  51F9               	movf	??_brake& (0+255),w,b
  4546  0032F8  6E44               	movwf	_avg_dist,c	;volatile
  4547  0032FA  6A45               	clrf	_avg_dist+1,c	;volatile
  4548  0032FC  6A46               	clrf	_avg_dist+2,c	;volatile
  4549  0032FE  6A47               	clrf	_avg_dist+3,c	;volatile
  4550                           
  4551                           ;main.c: 674:     I2C_Master_Stop();
  4552  003300  EC80  F01E         	call	_I2C_Master_Stop	;wreg free
  4553                           
  4554                           ;main.c: 675:     if(avg_dist){
  4555  003304  5044               	movf	_avg_dist,w,c	;volatile
  4556  003306  1045               	iorwf	_avg_dist+1,w,c	;volatile
  4557  003308  1046               	iorwf	_avg_dist+2,w,c	;volatile
  4558  00330A  1047               	iorwf	_avg_dist+3,w,c	;volatile
  4559  00330C  B4D8               	btfsc	status,2,c
  4560  00330E  0012               	return	
  4561                           
  4562                           ;main.c: 678:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4563  003310  0E01               	movlw	1
  4564  003312  EC73  F01E         	call	_lcdInst
  4565  003316  0E11               	movlw	17
  4566  003318  0100               	movlb	0	; () banked
  4567  00331A  6FF9               	movwf	??_brake& (0+255),b
  4568  00331C  0E3A               	movlw	58
  4569  00331E                     u9297:
  4570  00331E  2EE8               	decfsz	wreg,f,c
  4571  003320  D7FE               	bra	u9297
  4572  003322  2FF9               	decfsz	??_brake& (0+255),f,b
  4573  003324  D7FC               	bra	u9297
  4574  003326  F000               	nop	
  4575                           
  4576                           ;main.c: 686:         printf("%d",avg_dist);
  4577  003328  0ED0               	movlw	low (STR_38+11)
  4578  00332A  0100               	movlb	0	; () banked
  4579  00332C  6FED               	movwf	printf@fmt& (0+255),b
  4580  00332E  0EFE               	movlw	high (STR_38+11)
  4581  003330  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4582  003332  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  4583  003336  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  4584  00333A  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  4585  00333E  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  4586  003342  EC0D  F01E         	call	_printf	;wreg free
  4587                           
  4588                           ;main.c: 691:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4589  003346  0E0D               	movlw	13
  4590  003348  0100               	movlb	0	; () banked
  4591  00334A  6FFA               	movwf	(??_brake+1)& (0+255),b
  4592  00334C  0EAF               	movlw	175
  4593  00334E  6FF9               	movwf	??_brake& (0+255),b
  4594  003350  0EB6               	movlw	182
  4595  003352                     u9307:
  4596  003352  2EE8               	decfsz	wreg,f,c
  4597  003354  D7FE               	bra	u9307
  4598  003356  2FF9               	decfsz	??_brake& (0+255),f,b
  4599  003358  D7FC               	bra	u9307
  4600  00335A  2FFA               	decfsz	(??_brake+1)& (0+255),f,b
  4601  00335C  D7FA               	bra	u9307
  4602  00335E  F000               	nop	
  4603                           
  4604                           ;main.c: 693:     send = 1;
  4605  003360  0E01               	movlw	1
  4606  003362  6E6D               	movwf	_send,c
  4607  003364  0012               	return		;funcret
  4608  003366                     __end_of_brake:
  4609                           	opt callstack 0
  4610                           
  4611 ;; *************** function _backwards *****************
  4612 ;; Defined at:
  4613 ;;		line 708 in file "main.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    5
  4634 ;; This function calls:
  4635 ;;		_I2C_Master_Start
  4636 ;;		_I2C_Master_Stop
  4637 ;;		_I2C_Master_Write
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text9
  4644  003C6A                     __ptext9:
  4645                           	opt callstack 0
  4646  003C6A                     _backwards:
  4647                           	opt callstack 25
  4648                           
  4649                           ;main.c: 709:     I2C_Master_Start();
  4650                           
  4651                           ;incstack = 0
  4652  003C6A  EC84  F01E         	call	_I2C_Master_Start	;wreg free
  4653                           
  4654                           ;main.c: 710:     I2C_Master_Write(0b00010000);
  4655  003C6E  0E00               	movlw	0
  4656  003C70  0100               	movlb	0	; () banked
  4657  003C72  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4658  003C74  0E10               	movlw	16
  4659  003C76  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4660  003C78  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  4661                           
  4662                           ;main.c: 711:     I2C_Master_Write('5');
  4663  003C7C  0E00               	movlw	0
  4664  003C7E  0100               	movlb	0	; () banked
  4665  003C80  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4666  003C82  0E35               	movlw	53
  4667  003C84  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4668  003C86  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  4669                           
  4670                           ;main.c: 712:     I2C_Master_Stop();
  4671  003C8A  EC80  F01E         	call	_I2C_Master_Stop	;wreg free
  4672  003C8E  0012               	return		;funcret
  4673  003C90                     __end_of_backwards:
  4674                           	opt callstack 0
  4675                           
  4676 ;; *************** function _actuators_main *****************
  4677 ;; Defined at:
  4678 ;;		line 3 in file "actuators_main.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  stack           2   12[BANK1 ] int 
  4681 ;;  steps2_adj      2   14[BANK1 ] int 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  act_cnt         2   18[BANK1 ] int 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4693 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4695 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4696 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4697 ;;Total ram usage:        8 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:   16
  4700 ;; This function calls:
  4701 ;;		_initLCD
  4702 ;;		_lcdInst
  4703 ;;		_printf
  4704 ;;		_servo
  4705 ;;		_stepper
  4706 ;;		_stepper2
  4707 ;;		_stepper2_back
  4708 ;;		_system_init
  4709 ;; This function is called by:
  4710 ;;		_main
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text10
  4715  002A00                     __ptext10:
  4716                           	opt callstack 0
  4717  002A00                     _actuators_main:
  4718                           	opt callstack 14
  4719                           
  4720                           ;actuators_main.c: 4:     int act_cnt = 0;
  4721                           
  4722                           ;incstack = 0
  4723  002A00  0E00               	movlw	0
  4724  002A02  0101               	movlb	1	; () banked
  4725  002A04  6F13               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  4726  002A06  0E00               	movlw	0
  4727  002A08  6F12               	movwf	actuators_main@act_cnt& (0+255),b
  4728                           
  4729                           ; BSR set to: 1
  4730                           ;actuators_main.c: 5:     system_init();
  4731  002A0A  EC66  F01D         	call	_system_init	;wreg free
  4732                           
  4733                           ;actuators_main.c: 6:     initLCD();
  4734  002A0E  EC5C  F01B         	call	_initLCD	;wreg free
  4735                           
  4736                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4737  002A12  0E01               	movlw	1
  4738  002A14  EC73  F01E         	call	_lcdInst
  4739  002A18  0E11               	movlw	17
  4740  002A1A  0101               	movlb	1	; () banked
  4741  002A1C  6F10               	movwf	??_actuators_main& (0+255),b
  4742  002A1E  0E3A               	movlw	58
  4743  002A20                     u9317:
  4744  002A20  2EE8               	decfsz	wreg,f,c
  4745  002A22  D7FE               	bra	u9317
  4746  002A24  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4747  002A26  D7FC               	bra	u9317
  4748  002A28  F000               	nop	
  4749                           
  4750                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  4751  002A2A  0ED8               	movlw	low STR_1
  4752  002A2C  0100               	movlb	0	; () banked
  4753  002A2E  6FED               	movwf	printf@fmt& (0+255),b
  4754  002A30  0EFF               	movlw	high STR_1
  4755  002A32  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4756  002A34  0E00               	movlw	0
  4757  002A36  6FF0               	movwf	(?_printf+3)& (0+255),b
  4758  002A38  0E00               	movlw	0
  4759  002A3A  6FEF               	movwf	(?_printf+2)& (0+255),b
  4760  002A3C  EC0D  F01E         	call	_printf	;wreg free
  4761                           
  4762                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  4763  002A40  0E03               	movlw	3
  4764  002A42  0101               	movlb	1	; () banked
  4765  002A44  6F11               	movwf	(??_actuators_main+1)& (0+255),b
  4766  002A46  0E8A               	movlw	138
  4767  002A48  6F10               	movwf	??_actuators_main& (0+255),b
  4768  002A4A  0E55               	movlw	85
  4769  002A4C                     u9327:
  4770  002A4C  2EE8               	decfsz	wreg,f,c
  4771  002A4E  D7FE               	bra	u9327
  4772  002A50  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4773  002A52  D7FC               	bra	u9327
  4774  002A54  2F11               	decfsz	(??_actuators_main+1)& (0+255),f,b
  4775  002A56  D7FA               	bra	u9327
  4776  002A58  D000               	nop2	
  4777  002A5A                     l7620:
  4778                           
  4779                           ;actuators_main.c: 11:     if (act_cnt==0){
  4780  002A5A  0101               	movlb	1	; () banked
  4781  002A5C  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4782  002A5E  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4783  002A60  A4D8               	btfss	status,2,c
  4784  002A62  D064               	goto	l7696
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;actuators_main.c: 15:         stepper(stack);
  4788  002A64  C10C  F0FD         	movff	actuators_main@stack,stepper@stack
  4789  002A68  C10D  F0FE         	movff	actuators_main@stack+1,stepper@stack+1
  4790  002A6C  EC51  F01A         	call	_stepper	;wreg free
  4791                           
  4792                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  4793  002A70  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4794  002A74  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4795  002A78  0E00               	movlw	0
  4796  002A7A  EC37  F017         	call	_stepper2
  4797                           
  4798                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  4799  002A7E  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  4800  002A82  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  4801  002A86  0E01               	movlw	1
  4802  002A88  ECB3  F019         	call	_stepper2_back
  4803                           
  4804                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  4805  002A8C  0E00               	movlw	0
  4806  002A8E  6E89               	movwf	3977,c	;volatile
  4807                           
  4808                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  4809  002A90  908B               	bcf	3979,0,c	;volatile
  4810                           
  4811                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  4812  002A92  908D               	bcf	3981,0,c	;volatile
  4813                           
  4814                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  4815  002A94  928D               	bcf	3981,1,c	;volatile
  4816                           
  4817                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  4818  002A96  948D               	bcf	3981,2,c	;volatile
  4819                           
  4820                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  4821  002A98  9A8B               	bcf	3979,5,c	;volatile
  4822                           
  4823                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  4824  002A9A  9C8B               	bcf	3979,6,c	;volatile
  4825                           
  4826                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  4827  002A9C  9E8B               	bcf	3979,7,c	;volatile
  4828                           
  4829                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  4830  002A9E  9A89               	bcf	3977,5,c	;volatile
  4831                           
  4832                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4833  002AA0  0E01               	movlw	1
  4834  002AA2  EC73  F01E         	call	_lcdInst
  4835  002AA6  0E11               	movlw	17
  4836  002AA8  0101               	movlb	1	; () banked
  4837  002AAA  6F10               	movwf	??_actuators_main& (0+255),b
  4838  002AAC  0E3A               	movlw	58
  4839  002AAE                     u9337:
  4840  002AAE  2EE8               	decfsz	wreg,f,c
  4841  002AB0  D7FE               	bra	u9337
  4842  002AB2  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4843  002AB4  D7FC               	bra	u9337
  4844  002AB6  F000               	nop	
  4845                           
  4846                           ;actuators_main.c: 31:         printf("Stepper done");
  4847  002AB8  0E09               	movlw	low STR_2
  4848  002ABA  0100               	movlb	0	; () banked
  4849  002ABC  6FED               	movwf	printf@fmt& (0+255),b
  4850  002ABE  0EFF               	movlw	high STR_2
  4851  002AC0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4852  002AC2  EC0D  F01E         	call	_printf	;wreg free
  4853                           
  4854                           ;actuators_main.c: 33:         servo();
  4855  002AC6  ECFF  F018         	call	_servo	;wreg free
  4856                           
  4857                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  4858  002ACA  0E01               	movlw	1
  4859  002ACC  EC73  F01E         	call	_lcdInst
  4860  002AD0  0E11               	movlw	17
  4861  002AD2  0101               	movlb	1	; () banked
  4862  002AD4  6F10               	movwf	??_actuators_main& (0+255),b
  4863  002AD6  0E3A               	movlw	58
  4864  002AD8                     u9347:
  4865  002AD8  2EE8               	decfsz	wreg,f,c
  4866  002ADA  D7FE               	bra	u9347
  4867  002ADC  2F10               	decfsz	??_actuators_main& (0+255),f,b
  4868  002ADE  D7FC               	bra	u9347
  4869  002AE0  F000               	nop	
  4870                           
  4871                           ;actuators_main.c: 35:         printf("Servo done");
  4872  002AE2  0E73               	movlw	low STR_3
  4873  002AE4  0100               	movlb	0	; () banked
  4874  002AE6  6FED               	movwf	printf@fmt& (0+255),b
  4875  002AE8  0EFF               	movlw	high STR_3
  4876  002AEA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4877  002AEC  EC0D  F01E         	call	_printf	;wreg free
  4878                           
  4879                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  4880  002AF0  0E00               	movlw	0
  4881  002AF2  6E89               	movwf	3977,c	;volatile
  4882                           
  4883                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  4884  002AF4  908B               	bcf	3979,0,c	;volatile
  4885                           
  4886                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  4887  002AF6  908D               	bcf	3981,0,c	;volatile
  4888                           
  4889                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  4890  002AF8  928D               	bcf	3981,1,c	;volatile
  4891                           
  4892                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  4893  002AFA  948D               	bcf	3981,2,c	;volatile
  4894                           
  4895                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  4896  002AFC  9A8B               	bcf	3979,5,c	;volatile
  4897                           
  4898                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  4899  002AFE  9C8B               	bcf	3979,6,c	;volatile
  4900                           
  4901                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  4902  002B00  9E8B               	bcf	3979,7,c	;volatile
  4903                           
  4904                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  4905  002B02  9A89               	bcf	3977,5,c	;volatile
  4906                           
  4907                           ;actuators_main.c: 49:         stepper2(1, steps2_adj);
  4908  002B04  C10E  F0FD         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  4909  002B08  C10F  F0FE         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  4910  002B0C  0E01               	movlw	1
  4911  002B0E  EC37  F017         	call	_stepper2
  4912                           
  4913                           ;actuators_main.c: 50:                         LATA = 0b00000000;
  4914  002B12  0E00               	movlw	0
  4915  002B14  6E89               	movwf	3977,c	;volatile
  4916                           
  4917                           ;actuators_main.c: 51:         LATCbits.LATC0 = 0;
  4918  002B16  908B               	bcf	3979,0,c	;volatile
  4919                           
  4920                           ;actuators_main.c: 52:         LATEbits.LATE0 = 0;
  4921  002B18  908D               	bcf	3981,0,c	;volatile
  4922                           
  4923                           ;actuators_main.c: 53:         LATEbits.LATE1 = 0;
  4924  002B1A  928D               	bcf	3981,1,c	;volatile
  4925                           
  4926                           ;actuators_main.c: 54:         LATEbits.LATE2 = 0;
  4927  002B1C  948D               	bcf	3981,2,c	;volatile
  4928                           
  4929                           ;actuators_main.c: 55:         LATCbits.LATC5 = 0;
  4930  002B1E  9A8B               	bcf	3979,5,c	;volatile
  4931                           
  4932                           ;actuators_main.c: 56:         LATCbits.LATC6 = 0;
  4933  002B20  9C8B               	bcf	3979,6,c	;volatile
  4934                           
  4935                           ;actuators_main.c: 57:         LATCbits.LATC7 = 0;
  4936  002B22  9E8B               	bcf	3979,7,c	;volatile
  4937                           
  4938                           ;actuators_main.c: 58:         LATAbits.LATA5 = 0;
  4939  002B24  9A89               	bcf	3977,5,c	;volatile
  4940                           
  4941                           ;actuators_main.c: 59:         act_cnt++;
  4942  002B26  0101               	movlb	1	; () banked
  4943  002B28  4B12               	infsnz	actuators_main@act_cnt& (0+255),f,b
  4944  002B2A  2B13               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  4945  002B2C                     l7696:
  4946                           
  4947                           ; BSR set to: 1
  4948                           ;actuators_main.c: 62:     if(act_cnt){
  4949  002B2C  5112               	movf	actuators_main@act_cnt& (0+255),w,b
  4950  002B2E  1113               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  4951  002B30  A4D8               	btfss	status,2,c
  4952  002B32  0012               	return	
  4953  002B34  D792               	goto	l7620
  4954  002B36                     __end_of_actuators_main:
  4955                           	opt callstack 0
  4956                           
  4957 ;; *************** function _system_init *****************
  4958 ;; Defined at:
  4959 ;;		line 72 in file "actuators_main.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;Total ram usage:        0 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    3
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_actuators_main
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text11
  4988  003ACC                     __ptext11:
  4989                           	opt callstack 0
  4990  003ACC                     _system_init:
  4991                           	opt callstack 26
  4992                           
  4993                           ;actuators_main.c: 73:     TRISB = 0x00;
  4994                           
  4995                           ; BSR set to: 1
  4996                           ;incstack = 0
  4997  003ACC  0E00               	movlw	0
  4998  003ACE  6E93               	movwf	3987,c	;volatile
  4999                           
  5000                           ;actuators_main.c: 75:     LATB = 0x0F;
  5001  003AD0  0E0F               	movlw	15
  5002  003AD2  6E8A               	movwf	3978,c	;volatile
  5003                           
  5004                           ;actuators_main.c: 76:     TRISA = 0x00;
  5005  003AD4  0E00               	movlw	0
  5006  003AD6  6E92               	movwf	3986,c	;volatile
  5007                           
  5008                           ;actuators_main.c: 77:     LATA = 0x0F;
  5009  003AD8  0E0F               	movlw	15
  5010  003ADA  6E89               	movwf	3977,c	;volatile
  5011                           
  5012                           ;actuators_main.c: 79:     TRISCbits.TRISC1 = 0;
  5013  003ADC  9294               	bcf	3988,1,c	;volatile
  5014                           
  5015                           ;actuators_main.c: 82:     TRISCbits.TRISC2 = 0;
  5016  003ADE  9494               	bcf	3988,2,c	;volatile
  5017                           
  5018                           ;actuators_main.c: 85:     LATD = 0x00;
  5019  003AE0  0E00               	movlw	0
  5020  003AE2  6E8C               	movwf	3980,c	;volatile
  5021                           
  5022                           ;actuators_main.c: 86:     TRISD = 0x00;
  5023  003AE4  0E00               	movlw	0
  5024  003AE6  6E95               	movwf	3989,c	;volatile
  5025                           
  5026                           ;actuators_main.c: 88:     ADCON1 = 0b00001111;
  5027  003AE8  0E0F               	movlw	15
  5028  003AEA  6EC1               	movwf	4033,c	;volatile
  5029                           
  5030                           ;actuators_main.c: 90:     TRISC = 0x00;
  5031  003AEC  0E00               	movlw	0
  5032  003AEE  6E94               	movwf	3988,c	;volatile
  5033                           
  5034                           ;actuators_main.c: 91:     LATC = 0x00;
  5035  003AF0  0E00               	movlw	0
  5036  003AF2  6E8B               	movwf	3979,c	;volatile
  5037                           
  5038                           ;actuators_main.c: 92:     TRISE = 0x00;
  5039  003AF4  0E00               	movlw	0
  5040  003AF6  6E96               	movwf	3990,c	;volatile
  5041                           
  5042                           ;actuators_main.c: 93:     LATE = 0x00;
  5043  003AF8  0E00               	movlw	0
  5044  003AFA  6E8D               	movwf	3981,c	;volatile
  5045  003AFC  0012               	return		;funcret
  5046  003AFE                     __end_of_system_init:
  5047                           	opt callstack 0
  5048                           
  5049 ;; *************** function _stepper2_back *****************
  5050 ;; Defined at:
  5051 ;;		line 428 in file "actuators_main.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  direction       1    wreg     unsigned char 
  5054 ;;  steps2_adj      2  125[BANK0 ] int 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  direction       1    1[BANK1 ] unsigned char 
  5057 ;;  i               2    4[BANK1 ] int 
  5058 ;;  count_steppe    2    2[BANK1 ] int 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;Total ram usage:        8 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:   15
  5075 ;; This function calls:
  5076 ;;		_full_drive
  5077 ;;		_lcdInst
  5078 ;;		_printf
  5079 ;; This function is called by:
  5080 ;;		_actuators_main
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text12
  5085  003366                     __ptext12:
  5086                           	opt callstack 0
  5087  003366                     _stepper2_back:
  5088                           	opt callstack 14
  5089                           
  5090                           ;incstack = 0
  5091                           ;stepper2_back@direction stored from wreg
  5092  003366  0101               	movlb	1	; () banked
  5093  003368  6F01               	movwf	stepper2_back@direction& (0+255),b
  5094                           
  5095                           ;actuators_main.c: 446:     int count_stepper = 0;
  5096  00336A  0E00               	movlw	0
  5097  00336C  0101               	movlb	1	; () banked
  5098  00336E  6F03               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5099  003370  0E00               	movlw	0
  5100  003372  6F02               	movwf	stepper2_back@count_stepper& (0+255),b
  5101                           
  5102                           ; BSR set to: 1
  5103                           ;actuators_main.c: 449:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5104                           
  5105                           ; BSR set to: 1
  5106                           ;actuators_main.c: 448:         if (count_stepper<1){
  5107  003374  0E01               	movlw	1
  5108  003376  EC73  F01E         	call	_lcdInst
  5109  00337A  0E11               	movlw	17
  5110  00337C  0101               	movlb	1	; () banked
  5111  00337E  6F00               	movwf	??_stepper2_back& (0+255),b
  5112  003380  0E3A               	movlw	58
  5113  003382                     u9357:
  5114  003382  2EE8               	decfsz	wreg,f,c
  5115  003384  D7FE               	bra	u9357
  5116  003386  2F00               	decfsz	??_stepper2_back& (0+255),f,b
  5117  003388  D7FC               	bra	u9357
  5118  00338A  F000               	nop	
  5119                           
  5120                           ;actuators_main.c: 450:             printf("step1");
  5121  00338C  0EF3               	movlw	low STR_6
  5122  00338E  0100               	movlb	0	; () banked
  5123  003390  6FED               	movwf	printf@fmt& (0+255),b
  5124  003392  0EFF               	movlw	high STR_6
  5125  003394  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5126  003396  EC0D  F01E         	call	_printf	;wreg free
  5127  00339A  0EC0               	movlw	192
  5128  00339C  EC73  F01E         	call	_lcdInst
  5129                           
  5130                           ;actuators_main.c: 452:             printf("Step speed %d",4);
  5131  0033A0  0EE1               	movlw	low STR_7
  5132  0033A2  0100               	movlb	0	; () banked
  5133  0033A4  6FED               	movwf	printf@fmt& (0+255),b
  5134  0033A6  0EFE               	movlw	high STR_7
  5135  0033A8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5136  0033AA  0E00               	movlw	0
  5137  0033AC  6FF0               	movwf	(?_printf+3)& (0+255),b
  5138  0033AE  0E04               	movlw	4
  5139  0033B0  6FEF               	movwf	(?_printf+2)& (0+255),b
  5140  0033B2  EC0D  F01E         	call	_printf	;wreg free
  5141                           
  5142                           ;actuators_main.c: 453:             for(int i=0;i<5;i++){
  5143  0033B6  0E00               	movlw	0
  5144  0033B8  0101               	movlb	1	; () banked
  5145  0033BA  6F05               	movwf	(stepper2_back@i+1)& (0+255),b
  5146  0033BC  0E00               	movlw	0
  5147  0033BE  6F04               	movwf	stepper2_back@i& (0+255),b
  5148  0033C0                     l7374:
  5149                           
  5150                           ; BSR set to: 1
  5151                           ;actuators_main.c: 455:                 full_drive(direction, 2);
  5152  0033C0  0E00               	movlw	0
  5153  0033C2  0100               	movlb	0	; () banked
  5154  0033C4  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5155  0033C6  0E02               	movlw	2
  5156  0033C8  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5157  0033CA  0101               	movlb	1	; () banked
  5158  0033CC  5101               	movf	stepper2_back@direction& (0+255),w,b
  5159  0033CE  EC20  F00B         	call	_full_drive
  5160                           
  5161                           ;actuators_main.c: 457:             }
  5162  0033D2  0101               	movlb	1	; () banked
  5163  0033D4  4B04               	infsnz	stepper2_back@i& (0+255),f,b
  5164  0033D6  2B05               	incf	(stepper2_back@i+1)& (0+255),f,b
  5165                           
  5166                           ; BSR set to: 1
  5167  0033D8  BF05               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5168  0033DA  D7F2               	goto	l7374
  5169  0033DC  5105               	movf	(stepper2_back@i+1)& (0+255),w,b
  5170  0033DE  E104               	bnz	u7880
  5171  0033E0  0E05               	movlw	5
  5172  0033E2  5D04               	subwf	stepper2_back@i& (0+255),w,b
  5173  0033E4  A0D8               	btfss	status,0,c
  5174  0033E6  D7EC               	goto	l7374
  5175  0033E8                     u7880:
  5176                           
  5177                           ; BSR set to: 1
  5178                           ;actuators_main.c: 458:             printf("cnt is %d", count_stepper);
  5179  0033E8  0ED8               	movlw	low STR_1
  5180  0033EA  0100               	movlb	0	; () banked
  5181  0033EC  6FED               	movwf	printf@fmt& (0+255),b
  5182  0033EE  0EFF               	movlw	high STR_1
  5183  0033F0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5184  0033F2  C102  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5185  0033F6  C103  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5186  0033FA  EC0D  F01E         	call	_printf	;wreg free
  5187                           
  5188                           ;actuators_main.c: 459:             count_stepper++;
  5189  0033FE  0101               	movlb	1	; () banked
  5190  003400  4B02               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5191  003402  2B03               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5192                           
  5193                           ; BSR set to: 1
  5194  003404  0012               	return		;funcret
  5195  003406                     __end_of_stepper2_back:
  5196                           	opt callstack 0
  5197                           
  5198 ;; *************** function _stepper2 *****************
  5199 ;; Defined at:
  5200 ;;		line 343 in file "actuators_main.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  direction       1    wreg     unsigned char 
  5203 ;;  steps2_adj      2  125[BANK0 ] int 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  direction       1   11[BANK1 ] unsigned char 
  5206 ;;  i               2    7[BANK1 ] int 
  5207 ;;  i               2    5[BANK1 ] int 
  5208 ;;  count_steppe    2    9[BANK1 ] int 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;Total ram usage:       14 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:   15
  5225 ;; This function calls:
  5226 ;;		_full_drive
  5227 ;;		_lcdInst
  5228 ;;		_printf
  5229 ;; This function is called by:
  5230 ;;		_actuators_main
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text13
  5235  002E6E                     __ptext13:
  5236                           	opt callstack 0
  5237  002E6E                     _stepper2:
  5238                           	opt callstack 14
  5239                           
  5240                           ; BSR set to: 1
  5241                           ;incstack = 0
  5242                           ;stepper2@direction stored from wreg
  5243  002E6E  0101               	movlb	1	; () banked
  5244  002E70  6F0B               	movwf	stepper2@direction& (0+255),b
  5245                           
  5246                           ;actuators_main.c: 361:     int count_stepper = 0;
  5247  002E72  0E00               	movlw	0
  5248  002E74  0101               	movlb	1	; () banked
  5249  002E76  6F0A               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5250  002E78  0E00               	movlw	0
  5251  002E7A  6F09               	movwf	stepper2@count_stepper& (0+255),b
  5252                           
  5253                           ; BSR set to: 1
  5254                           ;actuators_main.c: 364:     if (direction == 0){
  5255                           
  5256                           ; BSR set to: 1
  5257                           ;actuators_main.c: 363:         if (count_stepper<1){
  5258  002E7C  510B               	movf	stepper2@direction& (0+255),w,b
  5259  002E7E  A4D8               	btfss	status,2,c
  5260  002E80  D02D               	goto	l7336
  5261                           
  5262                           ; BSR set to: 1
  5263                           ;actuators_main.c: 369:             for(int i=0;i<steps2_adj;i++){
  5264  002E82  0E00               	movlw	0
  5265  002E84  6F06               	movwf	(stepper2@i+1)& (0+255),b
  5266  002E86  0E00               	movlw	0
  5267  002E88  6F05               	movwf	stepper2@i& (0+255),b
  5268  002E8A  D00C               	goto	l7330
  5269  002E8C                     l7326:
  5270                           
  5271                           ; BSR set to: 1
  5272                           ;actuators_main.c: 371:                 full_drive(direction, 2);
  5273  002E8C  0E00               	movlw	0
  5274  002E8E  0100               	movlb	0	; () banked
  5275  002E90  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5276  002E92  0E02               	movlw	2
  5277  002E94  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5278  002E96  0101               	movlb	1	; () banked
  5279  002E98  510B               	movf	stepper2@direction& (0+255),w,b
  5280  002E9A  EC20  F00B         	call	_full_drive
  5281                           
  5282                           ;actuators_main.c: 373:             }
  5283  002E9E  0101               	movlb	1	; () banked
  5284  002EA0  4B05               	infsnz	stepper2@i& (0+255),f,b
  5285  002EA2  2B06               	incf	(stepper2@i+1)& (0+255),f,b
  5286  002EA4                     l7330:
  5287                           
  5288                           ; BSR set to: 1
  5289  002EA4  0100               	movlb	0	; () banked
  5290  002EA6  51FD               	movf	stepper2@steps2_adj& (0+255),w,b
  5291  002EA8  0101               	movlb	1	; () banked
  5292  002EAA  5D05               	subwf	stepper2@i& (0+255),w,b
  5293  002EAC  5106               	movf	(stepper2@i+1)& (0+255),w,b
  5294  002EAE  0A80               	xorlw	128
  5295  002EB0  6F00               	movwf	??_stepper2& (0+255),b
  5296  002EB2  0100               	movlb	0	; () banked
  5297  002EB4  51FE               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5298  002EB6  0A80               	xorlw	128
  5299  002EB8  0101               	movlb	1	; () banked
  5300  002EBA  5900               	subwfb	??_stepper2& (0+255),w,b
  5301  002EBC  A0D8               	btfss	status,0,c
  5302  002EBE  D7E6               	goto	l7326
  5303                           
  5304                           ; BSR set to: 1
  5305                           ;actuators_main.c: 374:             printf("cnt is %d", count_stepper);
  5306  002EC0  0ED8               	movlw	low STR_1
  5307  002EC2  0100               	movlb	0	; () banked
  5308  002EC4  6FED               	movwf	printf@fmt& (0+255),b
  5309  002EC6  0EFF               	movlw	high STR_1
  5310  002EC8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5311  002ECA  C109  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5312  002ECE  C10A  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5313  002ED2  EC0D  F01E         	call	_printf	;wreg free
  5314                           
  5315                           ;actuators_main.c: 375:             count_stepper++;
  5316  002ED6  0101               	movlb	1	; () banked
  5317  002ED8  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5318  002EDA  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5319  002EDC                     l7336:
  5320                           
  5321                           ; BSR set to: 1
  5322                           ;actuators_main.c: 377:     if (direction == 1){
  5323  002EDC  050B               	decf	stepper2@direction& (0+255),w,b
  5324  002EDE  A4D8               	btfss	status,2,c
  5325  002EE0  0012               	return	
  5326                           
  5327                           ; BSR set to: 1
  5328                           ;actuators_main.c: 378:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5329  002EE2  0E01               	movlw	1
  5330  002EE4  EC73  F01E         	call	_lcdInst
  5331  002EE8  0E11               	movlw	17
  5332  002EEA  0101               	movlb	1	; () banked
  5333  002EEC  6F00               	movwf	??_stepper2& (0+255),b
  5334  002EEE  0E3A               	movlw	58
  5335  002EF0                     u9367:
  5336  002EF0  2EE8               	decfsz	wreg,f,c
  5337  002EF2  D7FE               	bra	u9367
  5338  002EF4  2F00               	decfsz	??_stepper2& (0+255),f,b
  5339  002EF6  D7FC               	bra	u9367
  5340  002EF8  F000               	nop	
  5341                           
  5342                           ;actuators_main.c: 379:                         printf("steppp %d", steps2_adj-(5));
  5343  002EFA  0ECE               	movlw	low STR_5
  5344  002EFC  0100               	movlb	0	; () banked
  5345  002EFE  6FED               	movwf	printf@fmt& (0+255),b
  5346  002F00  0EFF               	movlw	high STR_5
  5347  002F02  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5348  002F04  0EFB               	movlw	251
  5349  002F06  25FD               	addwf	stepper2@steps2_adj& (0+255),w,b
  5350  002F08  6FEF               	movwf	(?_printf+2)& (0+255),b
  5351  002F0A  0EFF               	movlw	255
  5352  002F0C  21FE               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5353  002F0E  6FF0               	movwf	(?_printf+3)& (0+255),b
  5354  002F10  EC0D  F01E         	call	_printf	;wreg free
  5355                           
  5356                           ;actuators_main.c: 381:                 for(int i=0;i<(steps2_adj-(5));i++){
  5357  002F14  0E00               	movlw	0
  5358  002F16  0101               	movlb	1	; () banked
  5359  002F18  6F08               	movwf	(stepper2@i_388+1)& (0+255),b
  5360  002F1A  0E00               	movlw	0
  5361  002F1C  6F07               	movwf	stepper2@i_388& (0+255),b
  5362  002F1E  D00C               	goto	l7350
  5363  002F20                     l7346:
  5364                           
  5365                           ; BSR set to: 1
  5366                           ;actuators_main.c: 383:                     full_drive(direction, 2);
  5367  002F20  0E00               	movlw	0
  5368  002F22  0100               	movlb	0	; () banked
  5369  002F24  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5370  002F26  0E02               	movlw	2
  5371  002F28  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5372  002F2A  0101               	movlb	1	; () banked
  5373  002F2C  510B               	movf	stepper2@direction& (0+255),w,b
  5374  002F2E  EC20  F00B         	call	_full_drive
  5375                           
  5376                           ;actuators_main.c: 385:                 }
  5377  002F32  0101               	movlb	1	; () banked
  5378  002F34  4B07               	infsnz	stepper2@i_388& (0+255),f,b
  5379  002F36  2B08               	incf	(stepper2@i_388+1)& (0+255),f,b
  5380  002F38                     l7350:
  5381                           
  5382                           ; BSR set to: 1
  5383  002F38  0EFB               	movlw	251
  5384  002F3A  6F00               	movwf	??_stepper2& (0+255),b
  5385  002F3C  0EFF               	movlw	255
  5386  002F3E  6F01               	movwf	(??_stepper2+1)& (0+255),b
  5387  002F40  C0FD  F102         	movff	stepper2@steps2_adj,??_stepper2+2
  5388  002F44  C0FE  F103         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5389  002F48  5100               	movf	??_stepper2& (0+255),w,b
  5390  002F4A  2702               	addwf	(??_stepper2+2)& (0+255),f,b
  5391  002F4C  5101               	movf	(??_stepper2+1)& (0+255),w,b
  5392  002F4E  2303               	addwfc	(??_stepper2+3)& (0+255),f,b
  5393  002F50  5102               	movf	(??_stepper2+2)& (0+255),w,b
  5394  002F52  5D07               	subwf	stepper2@i_388& (0+255),w,b
  5395  002F54  5108               	movf	(stepper2@i_388+1)& (0+255),w,b
  5396  002F56  0A80               	xorlw	128
  5397  002F58  6F04               	movwf	(??_stepper2+4)& (0+255),b
  5398  002F5A  5103               	movf	(??_stepper2+3)& (0+255),w,b
  5399  002F5C  0A80               	xorlw	128
  5400  002F5E  5904               	subwfb	(??_stepper2+4)& (0+255),w,b
  5401  002F60  A0D8               	btfss	status,0,c
  5402  002F62  D7DE               	goto	l7346
  5403                           
  5404                           ; BSR set to: 1
  5405                           ;actuators_main.c: 386:                 count_stepper++;
  5406  002F64  4B09               	infsnz	stepper2@count_stepper& (0+255),f,b
  5407  002F66  2B0A               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5408                           
  5409                           ; BSR set to: 1
  5410  002F68  0012               	return		;funcret
  5411  002F6A                     __end_of_stepper2:
  5412                           	opt callstack 0
  5413                           
  5414 ;; *************** function _stepper *****************
  5415 ;; Defined at:
  5416 ;;		line 296 in file "actuators_main.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  stack           2  125[BANK0 ] int 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  i               2    4[BANK1 ] int 
  5421 ;;  i               2    2[BANK1 ] int 
  5422 ;;  count_steppe    2    0[BANK1 ] int 
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5432 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;Total ram usage:        8 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:   15
  5439 ;; This function calls:
  5440 ;;		_full_drive
  5441 ;; This function is called by:
  5442 ;;		_actuators_main
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text14
  5447  0034A2                     __ptext14:
  5448                           	opt callstack 0
  5449  0034A2                     _stepper:
  5450                           	opt callstack 14
  5451                           
  5452                           ;actuators_main.c: 297:     int count_stepper = 0;
  5453                           
  5454                           ; BSR set to: 1
  5455                           ;incstack = 0
  5456  0034A2  0E00               	movlw	0
  5457  0034A4  0101               	movlb	1	; () banked
  5458  0034A6  6F01               	movwf	(stepper@count_stepper+1)& (0+255),b
  5459  0034A8  0E00               	movlw	0
  5460  0034AA  6F00               	movwf	stepper@count_stepper& (0+255),b
  5461                           
  5462                           ; BSR set to: 1
  5463                           ;actuators_main.c: 306:             if (stack == 1){
  5464                           
  5465                           ; BSR set to: 1
  5466                           ;actuators_main.c: 300:         if (count_stepper<1){
  5467  0034AC  0100               	movlb	0	; () banked
  5468  0034AE  05FD               	decf	stepper@stack& (0+255),w,b
  5469  0034B0  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5470  0034B2  A4D8               	btfss	status,2,c
  5471  0034B4  D018               	goto	u7810
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;actuators_main.c: 307:                 for(int i=0;i<14;i++){
  5475  0034B6  0E00               	movlw	0
  5476  0034B8  0101               	movlb	1	; () banked
  5477  0034BA  6F03               	movwf	(stepper@i+1)& (0+255),b
  5478  0034BC  0E00               	movlw	0
  5479  0034BE  6F02               	movwf	stepper@i& (0+255),b
  5480  0034C0                     l7296:
  5481                           
  5482                           ; BSR set to: 1
  5483                           ;actuators_main.c: 309:                     full_drive(0, 1);
  5484  0034C0  0E00               	movlw	0
  5485  0034C2  0100               	movlb	0	; () banked
  5486  0034C4  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5487  0034C6  0E01               	movlw	1
  5488  0034C8  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5489  0034CA  0E00               	movlw	0
  5490  0034CC  EC20  F00B         	call	_full_drive
  5491                           
  5492                           ;actuators_main.c: 311:                 }
  5493  0034D0  0101               	movlb	1	; () banked
  5494  0034D2  4B02               	infsnz	stepper@i& (0+255),f,b
  5495  0034D4  2B03               	incf	(stepper@i+1)& (0+255),f,b
  5496                           
  5497                           ; BSR set to: 1
  5498  0034D6  BF03               	btfsc	(stepper@i+1)& (0+255),7,b
  5499  0034D8  D7F3               	goto	l7296
  5500  0034DA  5103               	movf	(stepper@i+1)& (0+255),w,b
  5501  0034DC  E104               	bnz	u7810
  5502  0034DE  0E0E               	movlw	14
  5503  0034E0  5D02               	subwf	stepper@i& (0+255),w,b
  5504  0034E2  A0D8               	btfss	status,0,c
  5505  0034E4  D7ED               	goto	l7296
  5506  0034E6                     u7810:
  5507                           
  5508                           ;actuators_main.c: 313:             if (stack == 2){
  5509  0034E6  0E02               	movlw	2
  5510  0034E8  0100               	movlb	0	; () banked
  5511  0034EA  19FD               	xorwf	stepper@stack& (0+255),w,b
  5512  0034EC  11FE               	iorwf	(stepper@stack+1)& (0+255),w,b
  5513  0034EE  A4D8               	btfss	status,2,c
  5514  0034F0  D018               	goto	u7830
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;actuators_main.c: 314:                 for(int i=0;i<14;i++){
  5518  0034F2  0E00               	movlw	0
  5519  0034F4  0101               	movlb	1	; () banked
  5520  0034F6  6F05               	movwf	(stepper@i_380+1)& (0+255),b
  5521  0034F8  0E00               	movlw	0
  5522  0034FA  6F04               	movwf	stepper@i_380& (0+255),b
  5523  0034FC                     l7310:
  5524                           
  5525                           ; BSR set to: 1
  5526                           ;actuators_main.c: 315:                     full_drive(0, 3);
  5527  0034FC  0E00               	movlw	0
  5528  0034FE  0100               	movlb	0	; () banked
  5529  003500  6FFA               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5530  003502  0E03               	movlw	3
  5531  003504  6FF9               	movwf	full_drive@stepper_no& (0+255),b
  5532  003506  0E00               	movlw	0
  5533  003508  EC20  F00B         	call	_full_drive
  5534                           
  5535                           ;actuators_main.c: 318:                 }
  5536  00350C  0101               	movlb	1	; () banked
  5537  00350E  4B04               	infsnz	stepper@i_380& (0+255),f,b
  5538  003510  2B05               	incf	(stepper@i_380+1)& (0+255),f,b
  5539                           
  5540                           ; BSR set to: 1
  5541  003512  BF05               	btfsc	(stepper@i_380+1)& (0+255),7,b
  5542  003514  D7F3               	goto	l7310
  5543  003516  5105               	movf	(stepper@i_380+1)& (0+255),w,b
  5544  003518  E104               	bnz	u7830
  5545  00351A  0E0E               	movlw	14
  5546  00351C  5D04               	subwf	stepper@i_380& (0+255),w,b
  5547  00351E  A0D8               	btfss	status,0,c
  5548  003520  D7ED               	goto	l7310
  5549  003522                     u7830:
  5550                           
  5551                           ;actuators_main.c: 321:             count_stepper++;
  5552  003522  0101               	movlb	1	; () banked
  5553  003524  4B00               	infsnz	stepper@count_stepper& (0+255),f,b
  5554  003526  2B01               	incf	(stepper@count_stepper+1)& (0+255),f,b
  5555                           
  5556                           ; BSR set to: 1
  5557                           
  5558                           ;actuators_main.c: 322:         }
  5559  003528  0012               	return		;funcret
  5560  00352A                     __end_of_stepper:
  5561                           	opt callstack 0
  5562                           
  5563 ;; *************** function _full_drive *****************
  5564 ;; Defined at:
  5565 ;;		line 477 in file "actuators_main.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  direction       1    wreg     unsigned char 
  5568 ;;  stepper_no      2  121[BANK0 ] int 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  direction       1  124[BANK0 ] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5580 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;Total ram usage:        4 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:   14
  5587 ;; This function calls:
  5588 ;;		_printf
  5589 ;; This function is called by:
  5590 ;;		_stepper
  5591 ;;		_stepper2
  5592 ;;		_stepper2_back
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text15
  5597  001640                     __ptext15:
  5598                           	opt callstack 0
  5599  001640                     _full_drive:
  5600                           	opt callstack 14
  5601                           
  5602                           ; BSR set to: 1
  5603                           ;incstack = 0
  5604                           ;full_drive@direction stored from wreg
  5605  001640  0100               	movlb	0	; () banked
  5606  001642  6FFC               	movwf	full_drive@direction& (0+255),b
  5607                           
  5608                           ;actuators_main.c: 478:     if (stepper_no == 1){
  5609  001644  0100               	movlb	0	; () banked
  5610  001646  05F9               	decf	full_drive@stepper_no& (0+255),w,b
  5611  001648  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5612  00164A  A4D8               	btfss	status,2,c
  5613  00164C  D06B               	goto	l7024
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;actuators_main.c: 479:         if (direction == 1){
  5617  00164E  05FC               	decf	full_drive@direction& (0+255),w,b
  5618  001650  A4D8               	btfss	status,2,c
  5619  001652  D032               	goto	l7008
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;actuators_main.c: 480:             LATA = 0b00000011;
  5623  001654  0E03               	movlw	3
  5624  001656  6E89               	movwf	3977,c	;volatile
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;actuators_main.c: 481:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5628  001658  0E1E               	movlw	30
  5629  00165A  0100               	movlb	0	; () banked
  5630  00165C  6FFB               	movwf	??_full_drive& (0+255),b
  5631  00165E  0E37               	movlw	55
  5632  001660                     u9377:
  5633  001660  2EE8               	decfsz	wreg,f,c
  5634  001662  D7FE               	bra	u9377
  5635  001664  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5636  001666  D7FC               	bra	u9377
  5637                           
  5638                           ;actuators_main.c: 482:             LATA = 0b00000110;
  5639  001668  0E06               	movlw	6
  5640  00166A  6E89               	movwf	3977,c	;volatile
  5641                           
  5642                           ;actuators_main.c: 483:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5643  00166C  0E1E               	movlw	30
  5644  00166E  0100               	movlb	0	; () banked
  5645  001670  6FFB               	movwf	??_full_drive& (0+255),b
  5646  001672  0E37               	movlw	55
  5647  001674                     u9387:
  5648  001674  2EE8               	decfsz	wreg,f,c
  5649  001676  D7FE               	bra	u9387
  5650  001678  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5651  00167A  D7FC               	bra	u9387
  5652                           
  5653                           ;actuators_main.c: 484:             LATA = 0b00001100;
  5654  00167C  0E0C               	movlw	12
  5655  00167E  6E89               	movwf	3977,c	;volatile
  5656                           
  5657                           ;actuators_main.c: 485:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5658  001680  0E1E               	movlw	30
  5659  001682  0100               	movlb	0	; () banked
  5660  001684  6FFB               	movwf	??_full_drive& (0+255),b
  5661  001686  0E37               	movlw	55
  5662  001688                     u9397:
  5663  001688  2EE8               	decfsz	wreg,f,c
  5664  00168A  D7FE               	bra	u9397
  5665  00168C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5666  00168E  D7FC               	bra	u9397
  5667                           
  5668                           ;actuators_main.c: 486:             LATA = 0b00001001;
  5669  001690  0E09               	movlw	9
  5670  001692  6E89               	movwf	3977,c	;volatile
  5671                           
  5672                           ;actuators_main.c: 487:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5673  001694  0E1E               	movlw	30
  5674  001696  0100               	movlb	0	; () banked
  5675  001698  6FFB               	movwf	??_full_drive& (0+255),b
  5676  00169A  0E37               	movlw	55
  5677  00169C                     u9407:
  5678  00169C  2EE8               	decfsz	wreg,f,c
  5679  00169E  D7FE               	bra	u9407
  5680  0016A0  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5681  0016A2  D7FC               	bra	u9407
  5682                           
  5683                           ;actuators_main.c: 488:             LATA = 0b00000011;
  5684  0016A4  0E03               	movlw	3
  5685  0016A6  6E89               	movwf	3977,c	;volatile
  5686                           
  5687                           ;actuators_main.c: 489:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5688  0016A8  0E1E               	movlw	30
  5689  0016AA  0100               	movlb	0	; () banked
  5690  0016AC  6FFB               	movwf	??_full_drive& (0+255),b
  5691  0016AE  0E37               	movlw	55
  5692  0016B0                     u9417:
  5693  0016B0  2EE8               	decfsz	wreg,f,c
  5694  0016B2  D7FE               	bra	u9417
  5695  0016B4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5696  0016B6  D7FC               	bra	u9417
  5697  0016B8                     l7008:
  5698                           
  5699                           ;actuators_main.c: 491:         if (direction == 0){
  5700  0016B8  0100               	movlb	0	; () banked
  5701  0016BA  51FC               	movf	full_drive@direction& (0+255),w,b
  5702  0016BC  A4D8               	btfss	status,2,c
  5703  0016BE  D032               	goto	l7024
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;actuators_main.c: 492:             LATA = 0b00001001;
  5707  0016C0  0E09               	movlw	9
  5708  0016C2  6E89               	movwf	3977,c	;volatile
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;actuators_main.c: 493:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5712  0016C4  0E1E               	movlw	30
  5713  0016C6  0100               	movlb	0	; () banked
  5714  0016C8  6FFB               	movwf	??_full_drive& (0+255),b
  5715  0016CA  0E37               	movlw	55
  5716  0016CC                     u9427:
  5717  0016CC  2EE8               	decfsz	wreg,f,c
  5718  0016CE  D7FE               	bra	u9427
  5719  0016D0  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5720  0016D2  D7FC               	bra	u9427
  5721                           
  5722                           ;actuators_main.c: 494:             LATA = 0b00001100;
  5723  0016D4  0E0C               	movlw	12
  5724  0016D6  6E89               	movwf	3977,c	;volatile
  5725                           
  5726                           ;actuators_main.c: 495:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5727  0016D8  0E1E               	movlw	30
  5728  0016DA  0100               	movlb	0	; () banked
  5729  0016DC  6FFB               	movwf	??_full_drive& (0+255),b
  5730  0016DE  0E37               	movlw	55
  5731  0016E0                     u9437:
  5732  0016E0  2EE8               	decfsz	wreg,f,c
  5733  0016E2  D7FE               	bra	u9437
  5734  0016E4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5735  0016E6  D7FC               	bra	u9437
  5736                           
  5737                           ;actuators_main.c: 496:             LATA = 0b00000110;
  5738  0016E8  0E06               	movlw	6
  5739  0016EA  6E89               	movwf	3977,c	;volatile
  5740                           
  5741                           ;actuators_main.c: 497:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5742  0016EC  0E1E               	movlw	30
  5743  0016EE  0100               	movlb	0	; () banked
  5744  0016F0  6FFB               	movwf	??_full_drive& (0+255),b
  5745  0016F2  0E37               	movlw	55
  5746  0016F4                     u9447:
  5747  0016F4  2EE8               	decfsz	wreg,f,c
  5748  0016F6  D7FE               	bra	u9447
  5749  0016F8  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5750  0016FA  D7FC               	bra	u9447
  5751                           
  5752                           ;actuators_main.c: 498:             LATA = 0b00000011;
  5753  0016FC  0E03               	movlw	3
  5754  0016FE  6E89               	movwf	3977,c	;volatile
  5755                           
  5756                           ;actuators_main.c: 499:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5757  001700  0E1E               	movlw	30
  5758  001702  0100               	movlb	0	; () banked
  5759  001704  6FFB               	movwf	??_full_drive& (0+255),b
  5760  001706  0E37               	movlw	55
  5761  001708                     u9457:
  5762  001708  2EE8               	decfsz	wreg,f,c
  5763  00170A  D7FE               	bra	u9457
  5764  00170C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5765  00170E  D7FC               	bra	u9457
  5766                           
  5767                           ;actuators_main.c: 500:             LATA = 0b00001001;
  5768  001710  0E09               	movlw	9
  5769  001712  6E89               	movwf	3977,c	;volatile
  5770                           
  5771                           ;actuators_main.c: 501:             _delay((unsigned long)((9)*(10000000/4000.0)));
  5772  001714  0E1E               	movlw	30
  5773  001716  0100               	movlb	0	; () banked
  5774  001718  6FFB               	movwf	??_full_drive& (0+255),b
  5775  00171A  0E37               	movlw	55
  5776  00171C                     u9467:
  5777  00171C  2EE8               	decfsz	wreg,f,c
  5778  00171E  D7FE               	bra	u9467
  5779  001720  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5780  001722  D7FC               	bra	u9467
  5781  001724                     l7024:
  5782                           
  5783                           ;actuators_main.c: 504:     if (stepper_no == 2){
  5784  001724  0E02               	movlw	2
  5785  001726  0100               	movlb	0	; () banked
  5786  001728  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  5787  00172A  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  5788  00172C  A4D8               	btfss	status,2,c
  5789  00172E  D089               	goto	l7102
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;actuators_main.c: 505:         if (direction == 1){
  5793  001730  05FC               	decf	full_drive@direction& (0+255),w,b
  5794  001732  A4D8               	btfss	status,2,c
  5795  001734  D041               	goto	l7064
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;actuators_main.c: 506:             LATCbits.LATC0 = 1;
  5799  001736  808B               	bsf	3979,0,c	;volatile
  5800                           
  5801                           ;actuators_main.c: 507:             LATEbits.LATE0 = 1;
  5802  001738  808D               	bsf	3981,0,c	;volatile
  5803                           
  5804                           ;actuators_main.c: 508:             LATEbits.LATE1 = 0;
  5805  00173A  928D               	bcf	3981,1,c	;volatile
  5806                           
  5807                           ;actuators_main.c: 509:             LATEbits.LATE2 = 0;
  5808  00173C  948D               	bcf	3981,2,c	;volatile
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;actuators_main.c: 510:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5812  00173E  0E0D               	movlw	13
  5813  001740  0100               	movlb	0	; () banked
  5814  001742  6FFB               	movwf	??_full_drive& (0+255),b
  5815  001744  0EFB               	movlw	251
  5816  001746                     u9477:
  5817  001746  2EE8               	decfsz	wreg,f,c
  5818  001748  D7FE               	bra	u9477
  5819  00174A  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5820  00174C  D7FC               	bra	u9477
  5821  00174E  D000               	nop2	
  5822                           
  5823                           ;actuators_main.c: 511:             LATCbits.LATC0 = 0;
  5824  001750  908B               	bcf	3979,0,c	;volatile
  5825                           
  5826                           ;actuators_main.c: 512:             LATEbits.LATE0 = 1;
  5827  001752  808D               	bsf	3981,0,c	;volatile
  5828                           
  5829                           ;actuators_main.c: 513:             LATEbits.LATE1 = 1;
  5830  001754  828D               	bsf	3981,1,c	;volatile
  5831                           
  5832                           ;actuators_main.c: 514:             LATEbits.LATE2 = 0;
  5833  001756  948D               	bcf	3981,2,c	;volatile
  5834                           
  5835                           ;actuators_main.c: 515:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5836  001758  0E0D               	movlw	13
  5837  00175A  0100               	movlb	0	; () banked
  5838  00175C  6FFB               	movwf	??_full_drive& (0+255),b
  5839  00175E  0EFB               	movlw	251
  5840  001760                     u9487:
  5841  001760  2EE8               	decfsz	wreg,f,c
  5842  001762  D7FE               	bra	u9487
  5843  001764  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5844  001766  D7FC               	bra	u9487
  5845  001768  D000               	nop2	
  5846                           
  5847                           ;actuators_main.c: 516:             LATCbits.LATC0 = 0;
  5848  00176A  908B               	bcf	3979,0,c	;volatile
  5849                           
  5850                           ;actuators_main.c: 517:             LATEbits.LATE0 = 0;
  5851  00176C  908D               	bcf	3981,0,c	;volatile
  5852                           
  5853                           ;actuators_main.c: 518:             LATEbits.LATE1 = 1;
  5854  00176E  828D               	bsf	3981,1,c	;volatile
  5855                           
  5856                           ;actuators_main.c: 519:             LATEbits.LATE2 = 1;
  5857  001770  848D               	bsf	3981,2,c	;volatile
  5858                           
  5859                           ;actuators_main.c: 520:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5860  001772  0E0D               	movlw	13
  5861  001774  0100               	movlb	0	; () banked
  5862  001776  6FFB               	movwf	??_full_drive& (0+255),b
  5863  001778  0EFB               	movlw	251
  5864  00177A                     u9497:
  5865  00177A  2EE8               	decfsz	wreg,f,c
  5866  00177C  D7FE               	bra	u9497
  5867  00177E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5868  001780  D7FC               	bra	u9497
  5869  001782  D000               	nop2	
  5870                           
  5871                           ;actuators_main.c: 521:             LATCbits.LATC0 = 1;
  5872  001784  808B               	bsf	3979,0,c	;volatile
  5873                           
  5874                           ;actuators_main.c: 522:             LATEbits.LATE0 = 0;
  5875  001786  908D               	bcf	3981,0,c	;volatile
  5876                           
  5877                           ;actuators_main.c: 523:             LATEbits.LATE1 = 0;
  5878  001788  928D               	bcf	3981,1,c	;volatile
  5879                           
  5880                           ;actuators_main.c: 524:             LATEbits.LATE2 = 1;
  5881  00178A  848D               	bsf	3981,2,c	;volatile
  5882                           
  5883                           ;actuators_main.c: 525:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5884  00178C  0E0D               	movlw	13
  5885  00178E  0100               	movlb	0	; () banked
  5886  001790  6FFB               	movwf	??_full_drive& (0+255),b
  5887  001792  0EFB               	movlw	251
  5888  001794                     u9507:
  5889  001794  2EE8               	decfsz	wreg,f,c
  5890  001796  D7FE               	bra	u9507
  5891  001798  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5892  00179A  D7FC               	bra	u9507
  5893  00179C  D000               	nop2	
  5894                           
  5895                           ;actuators_main.c: 526:             LATCbits.LATC0 = 1;
  5896  00179E  808B               	bsf	3979,0,c	;volatile
  5897                           
  5898                           ;actuators_main.c: 527:             LATEbits.LATE0 = 1;
  5899  0017A0  808D               	bsf	3981,0,c	;volatile
  5900                           
  5901                           ;actuators_main.c: 528:             LATEbits.LATE1 = 0;
  5902  0017A2  928D               	bcf	3981,1,c	;volatile
  5903                           
  5904                           ;actuators_main.c: 529:             LATEbits.LATE2 = 0;
  5905  0017A4  948D               	bcf	3981,2,c	;volatile
  5906                           
  5907                           ;actuators_main.c: 530:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5908  0017A6  0E0D               	movlw	13
  5909  0017A8  0100               	movlb	0	; () banked
  5910  0017AA  6FFB               	movwf	??_full_drive& (0+255),b
  5911  0017AC  0EFB               	movlw	251
  5912  0017AE                     u9517:
  5913  0017AE  2EE8               	decfsz	wreg,f,c
  5914  0017B0  D7FE               	bra	u9517
  5915  0017B2  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5916  0017B4  D7FC               	bra	u9517
  5917  0017B6  D000               	nop2	
  5918  0017B8                     l7064:
  5919                           
  5920                           ;actuators_main.c: 532:         if (direction == 0){
  5921  0017B8  0100               	movlb	0	; () banked
  5922  0017BA  51FC               	movf	full_drive@direction& (0+255),w,b
  5923  0017BC  A4D8               	btfss	status,2,c
  5924  0017BE  D041               	goto	l7102
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;actuators_main.c: 533:             LATCbits.LATC0 = 1;
  5928  0017C0  808B               	bsf	3979,0,c	;volatile
  5929                           
  5930                           ;actuators_main.c: 534:             LATEbits.LATE0 = 0;
  5931  0017C2  908D               	bcf	3981,0,c	;volatile
  5932                           
  5933                           ;actuators_main.c: 535:             LATEbits.LATE1 = 0;
  5934  0017C4  928D               	bcf	3981,1,c	;volatile
  5935                           
  5936                           ;actuators_main.c: 536:             LATEbits.LATE2 = 1;
  5937  0017C6  848D               	bsf	3981,2,c	;volatile
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;actuators_main.c: 537:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5941  0017C8  0E0D               	movlw	13
  5942  0017CA  0100               	movlb	0	; () banked
  5943  0017CC  6FFB               	movwf	??_full_drive& (0+255),b
  5944  0017CE  0EFB               	movlw	251
  5945  0017D0                     u9527:
  5946  0017D0  2EE8               	decfsz	wreg,f,c
  5947  0017D2  D7FE               	bra	u9527
  5948  0017D4  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5949  0017D6  D7FC               	bra	u9527
  5950  0017D8  D000               	nop2	
  5951                           
  5952                           ;actuators_main.c: 538:             LATCbits.LATC0 = 0;
  5953  0017DA  908B               	bcf	3979,0,c	;volatile
  5954                           
  5955                           ;actuators_main.c: 539:             LATEbits.LATE0 = 0;
  5956  0017DC  908D               	bcf	3981,0,c	;volatile
  5957                           
  5958                           ;actuators_main.c: 540:             LATEbits.LATE1 = 1;
  5959  0017DE  828D               	bsf	3981,1,c	;volatile
  5960                           
  5961                           ;actuators_main.c: 541:             LATEbits.LATE2 = 1;
  5962  0017E0  848D               	bsf	3981,2,c	;volatile
  5963                           
  5964                           ;actuators_main.c: 542:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5965  0017E2  0E0D               	movlw	13
  5966  0017E4  0100               	movlb	0	; () banked
  5967  0017E6  6FFB               	movwf	??_full_drive& (0+255),b
  5968  0017E8  0EFB               	movlw	251
  5969  0017EA                     u9537:
  5970  0017EA  2EE8               	decfsz	wreg,f,c
  5971  0017EC  D7FE               	bra	u9537
  5972  0017EE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5973  0017F0  D7FC               	bra	u9537
  5974  0017F2  D000               	nop2	
  5975                           
  5976                           ;actuators_main.c: 543:             LATCbits.LATC0 = 0;
  5977  0017F4  908B               	bcf	3979,0,c	;volatile
  5978                           
  5979                           ;actuators_main.c: 544:             LATEbits.LATE0 = 1;
  5980  0017F6  808D               	bsf	3981,0,c	;volatile
  5981                           
  5982                           ;actuators_main.c: 545:             LATEbits.LATE1 = 1;
  5983  0017F8  828D               	bsf	3981,1,c	;volatile
  5984                           
  5985                           ;actuators_main.c: 546:             LATEbits.LATE2 = 0;
  5986  0017FA  948D               	bcf	3981,2,c	;volatile
  5987                           
  5988                           ;actuators_main.c: 547:             _delay((unsigned long)((4)*(10000000/4000.0)));
  5989  0017FC  0E0D               	movlw	13
  5990  0017FE  0100               	movlb	0	; () banked
  5991  001800  6FFB               	movwf	??_full_drive& (0+255),b
  5992  001802  0EFB               	movlw	251
  5993  001804                     u9547:
  5994  001804  2EE8               	decfsz	wreg,f,c
  5995  001806  D7FE               	bra	u9547
  5996  001808  2FFB               	decfsz	??_full_drive& (0+255),f,b
  5997  00180A  D7FC               	bra	u9547
  5998  00180C  D000               	nop2	
  5999                           
  6000                           ;actuators_main.c: 548:             LATCbits.LATC0 = 1;
  6001  00180E  808B               	bsf	3979,0,c	;volatile
  6002                           
  6003                           ;actuators_main.c: 549:             LATEbits.LATE0 = 1;
  6004  001810  808D               	bsf	3981,0,c	;volatile
  6005                           
  6006                           ;actuators_main.c: 550:             LATEbits.LATE1 = 0;
  6007  001812  928D               	bcf	3981,1,c	;volatile
  6008                           
  6009                           ;actuators_main.c: 551:             LATEbits.LATE2 = 0;
  6010  001814  948D               	bcf	3981,2,c	;volatile
  6011                           
  6012                           ;actuators_main.c: 552:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6013  001816  0E0D               	movlw	13
  6014  001818  0100               	movlb	0	; () banked
  6015  00181A  6FFB               	movwf	??_full_drive& (0+255),b
  6016  00181C  0EFB               	movlw	251
  6017  00181E                     u9557:
  6018  00181E  2EE8               	decfsz	wreg,f,c
  6019  001820  D7FE               	bra	u9557
  6020  001822  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6021  001824  D7FC               	bra	u9557
  6022  001826  D000               	nop2	
  6023                           
  6024                           ;actuators_main.c: 553:             LATCbits.LATC0 = 1;
  6025  001828  808B               	bsf	3979,0,c	;volatile
  6026                           
  6027                           ;actuators_main.c: 554:             LATEbits.LATE0 = 0;
  6028  00182A  908D               	bcf	3981,0,c	;volatile
  6029                           
  6030                           ;actuators_main.c: 555:             LATEbits.LATE1 = 0;
  6031  00182C  928D               	bcf	3981,1,c	;volatile
  6032                           
  6033                           ;actuators_main.c: 556:             LATEbits.LATE2 = 1;
  6034  00182E  848D               	bsf	3981,2,c	;volatile
  6035                           
  6036                           ;actuators_main.c: 557:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6037  001830  0E0D               	movlw	13
  6038  001832  0100               	movlb	0	; () banked
  6039  001834  6FFB               	movwf	??_full_drive& (0+255),b
  6040  001836  0EFB               	movlw	251
  6041  001838                     u9567:
  6042  001838  2EE8               	decfsz	wreg,f,c
  6043  00183A  D7FE               	bra	u9567
  6044  00183C  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6045  00183E  D7FC               	bra	u9567
  6046  001840  D000               	nop2	
  6047  001842                     l7102:
  6048                           
  6049                           ;actuators_main.c: 560:     if (stepper_no == 3){
  6050  001842  0E03               	movlw	3
  6051  001844  0100               	movlb	0	; () banked
  6052  001846  19F9               	xorwf	full_drive@stepper_no& (0+255),w,b
  6053  001848  11FA               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6054  00184A  A4D8               	btfss	status,2,c
  6055  00184C  D086               	goto	l7182
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;actuators_main.c: 561:         printf("what");
  6059  00184E  0EF9               	movlw	low STR_9
  6060  001850  6FED               	movwf	printf@fmt& (0+255),b
  6061  001852  0EFF               	movlw	high STR_9
  6062  001854  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6063  001856  EC0D  F01E         	call	_printf	;wreg free
  6064                           
  6065                           ;actuators_main.c: 562:         if (direction == 0){
  6066  00185A  0100               	movlb	0	; () banked
  6067  00185C  51FC               	movf	full_drive@direction& (0+255),w,b
  6068  00185E  A4D8               	btfss	status,2,c
  6069  001860  D03C               	goto	l7144
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;actuators_main.c: 563:             LATCbits.LATC5 = 1;
  6073  001862  8A8B               	bsf	3979,5,c	;volatile
  6074                           
  6075                           ;actuators_main.c: 564:             LATCbits.LATC6 = 0;
  6076  001864  9C8B               	bcf	3979,6,c	;volatile
  6077                           
  6078                           ;actuators_main.c: 565:             LATCbits.LATC7 = 0;
  6079  001866  9E8B               	bcf	3979,7,c	;volatile
  6080                           
  6081                           ;actuators_main.c: 566:             LATAbits.LATA5 = 1;
  6082  001868  8A89               	bsf	3977,5,c	;volatile
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;actuators_main.c: 567:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6086  00186A  0E1E               	movlw	30
  6087  00186C  0100               	movlb	0	; () banked
  6088  00186E  6FFB               	movwf	??_full_drive& (0+255),b
  6089  001870  0E37               	movlw	55
  6090  001872                     u9577:
  6091  001872  2EE8               	decfsz	wreg,f,c
  6092  001874  D7FE               	bra	u9577
  6093  001876  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6094  001878  D7FC               	bra	u9577
  6095                           
  6096                           ;actuators_main.c: 568:             LATCbits.LATC5 = 1;
  6097  00187A  8A8B               	bsf	3979,5,c	;volatile
  6098                           
  6099                           ;actuators_main.c: 569:             LATCbits.LATC6 = 1;
  6100  00187C  8C8B               	bsf	3979,6,c	;volatile
  6101                           
  6102                           ;actuators_main.c: 570:             LATCbits.LATC7 = 0;
  6103  00187E  9E8B               	bcf	3979,7,c	;volatile
  6104                           
  6105                           ;actuators_main.c: 571:             LATAbits.LATA5 = 0;
  6106  001880  9A89               	bcf	3977,5,c	;volatile
  6107                           
  6108                           ;actuators_main.c: 572:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6109  001882  0E1E               	movlw	30
  6110  001884  0100               	movlb	0	; () banked
  6111  001886  6FFB               	movwf	??_full_drive& (0+255),b
  6112  001888  0E37               	movlw	55
  6113  00188A                     u9587:
  6114  00188A  2EE8               	decfsz	wreg,f,c
  6115  00188C  D7FE               	bra	u9587
  6116  00188E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6117  001890  D7FC               	bra	u9587
  6118                           
  6119                           ;actuators_main.c: 573:             LATCbits.LATC5 = 0;
  6120  001892  9A8B               	bcf	3979,5,c	;volatile
  6121                           
  6122                           ;actuators_main.c: 574:             LATCbits.LATC6 = 1;
  6123  001894  8C8B               	bsf	3979,6,c	;volatile
  6124                           
  6125                           ;actuators_main.c: 575:             LATCbits.LATC7 = 1;
  6126  001896  8E8B               	bsf	3979,7,c	;volatile
  6127                           
  6128                           ;actuators_main.c: 576:             LATAbits.LATA5 = 0;
  6129  001898  9A89               	bcf	3977,5,c	;volatile
  6130                           
  6131                           ;actuators_main.c: 577:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6132  00189A  0E1E               	movlw	30
  6133  00189C  0100               	movlb	0	; () banked
  6134  00189E  6FFB               	movwf	??_full_drive& (0+255),b
  6135  0018A0  0E37               	movlw	55
  6136  0018A2                     u9597:
  6137  0018A2  2EE8               	decfsz	wreg,f,c
  6138  0018A4  D7FE               	bra	u9597
  6139  0018A6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6140  0018A8  D7FC               	bra	u9597
  6141                           
  6142                           ;actuators_main.c: 578:             LATCbits.LATC5 = 0;
  6143  0018AA  9A8B               	bcf	3979,5,c	;volatile
  6144                           
  6145                           ;actuators_main.c: 579:             LATCbits.LATC6 = 0;
  6146  0018AC  9C8B               	bcf	3979,6,c	;volatile
  6147                           
  6148                           ;actuators_main.c: 580:             LATCbits.LATC7 = 1;
  6149  0018AE  8E8B               	bsf	3979,7,c	;volatile
  6150                           
  6151                           ;actuators_main.c: 581:             LATAbits.LATA5 = 1;
  6152  0018B0  8A89               	bsf	3977,5,c	;volatile
  6153                           
  6154                           ;actuators_main.c: 582:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6155  0018B2  0E1E               	movlw	30
  6156  0018B4  0100               	movlb	0	; () banked
  6157  0018B6  6FFB               	movwf	??_full_drive& (0+255),b
  6158  0018B8  0E37               	movlw	55
  6159  0018BA                     u9607:
  6160  0018BA  2EE8               	decfsz	wreg,f,c
  6161  0018BC  D7FE               	bra	u9607
  6162  0018BE  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6163  0018C0  D7FC               	bra	u9607
  6164                           
  6165                           ;actuators_main.c: 583:             LATCbits.LATC5 = 1;
  6166  0018C2  8A8B               	bsf	3979,5,c	;volatile
  6167                           
  6168                           ;actuators_main.c: 584:             LATCbits.LATC6 = 0;
  6169  0018C4  9C8B               	bcf	3979,6,c	;volatile
  6170                           
  6171                           ;actuators_main.c: 585:             LATCbits.LATC7 = 0;
  6172  0018C6  9E8B               	bcf	3979,7,c	;volatile
  6173                           
  6174                           ;actuators_main.c: 586:             LATAbits.LATA5 = 1;
  6175  0018C8  8A89               	bsf	3977,5,c	;volatile
  6176                           
  6177                           ;actuators_main.c: 587:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6178  0018CA  0E1E               	movlw	30
  6179  0018CC  0100               	movlb	0	; () banked
  6180  0018CE  6FFB               	movwf	??_full_drive& (0+255),b
  6181  0018D0  0E37               	movlw	55
  6182  0018D2                     u9617:
  6183  0018D2  2EE8               	decfsz	wreg,f,c
  6184  0018D4  D7FE               	bra	u9617
  6185  0018D6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6186  0018D8  D7FC               	bra	u9617
  6187  0018DA                     l7144:
  6188                           
  6189                           ;actuators_main.c: 589:         if (direction == 1){
  6190  0018DA  0100               	movlb	0	; () banked
  6191  0018DC  05FC               	decf	full_drive@direction& (0+255),w,b
  6192  0018DE  A4D8               	btfss	status,2,c
  6193  0018E0  D03C               	goto	l7182
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;actuators_main.c: 590:             LATCbits.LATC5 = 1;
  6197  0018E2  8A8B               	bsf	3979,5,c	;volatile
  6198                           
  6199                           ;actuators_main.c: 591:             LATCbits.LATC6 = 1;
  6200  0018E4  8C8B               	bsf	3979,6,c	;volatile
  6201                           
  6202                           ;actuators_main.c: 592:             LATCbits.LATC7 = 0;
  6203  0018E6  9E8B               	bcf	3979,7,c	;volatile
  6204                           
  6205                           ;actuators_main.c: 593:             LATAbits.LATA5 = 0;
  6206  0018E8  9A89               	bcf	3977,5,c	;volatile
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;actuators_main.c: 594:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6210  0018EA  0E1E               	movlw	30
  6211  0018EC  0100               	movlb	0	; () banked
  6212  0018EE  6FFB               	movwf	??_full_drive& (0+255),b
  6213  0018F0  0E37               	movlw	55
  6214  0018F2                     u9627:
  6215  0018F2  2EE8               	decfsz	wreg,f,c
  6216  0018F4  D7FE               	bra	u9627
  6217  0018F6  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6218  0018F8  D7FC               	bra	u9627
  6219                           
  6220                           ;actuators_main.c: 595:             LATCbits.LATC5 = 0;
  6221  0018FA  9A8B               	bcf	3979,5,c	;volatile
  6222                           
  6223                           ;actuators_main.c: 596:             LATCbits.LATC6 = 1;
  6224  0018FC  8C8B               	bsf	3979,6,c	;volatile
  6225                           
  6226                           ;actuators_main.c: 597:             LATCbits.LATC7 = 1;
  6227  0018FE  8E8B               	bsf	3979,7,c	;volatile
  6228                           
  6229                           ;actuators_main.c: 598:             LATAbits.LATA5 = 0;
  6230  001900  9A89               	bcf	3977,5,c	;volatile
  6231                           
  6232                           ;actuators_main.c: 599:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6233  001902  0E1E               	movlw	30
  6234  001904  0100               	movlb	0	; () banked
  6235  001906  6FFB               	movwf	??_full_drive& (0+255),b
  6236  001908  0E37               	movlw	55
  6237  00190A                     u9637:
  6238  00190A  2EE8               	decfsz	wreg,f,c
  6239  00190C  D7FE               	bra	u9637
  6240  00190E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6241  001910  D7FC               	bra	u9637
  6242                           
  6243                           ;actuators_main.c: 600:             LATCbits.LATC5 = 0;
  6244  001912  9A8B               	bcf	3979,5,c	;volatile
  6245                           
  6246                           ;actuators_main.c: 601:             LATCbits.LATC6 = 0;
  6247  001914  9C8B               	bcf	3979,6,c	;volatile
  6248                           
  6249                           ;actuators_main.c: 602:             LATCbits.LATC7 = 1;
  6250  001916  8E8B               	bsf	3979,7,c	;volatile
  6251                           
  6252                           ;actuators_main.c: 603:             LATAbits.LATA5 = 1;
  6253  001918  8A89               	bsf	3977,5,c	;volatile
  6254                           
  6255                           ;actuators_main.c: 604:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6256  00191A  0E1E               	movlw	30
  6257  00191C  0100               	movlb	0	; () banked
  6258  00191E  6FFB               	movwf	??_full_drive& (0+255),b
  6259  001920  0E37               	movlw	55
  6260  001922                     u9647:
  6261  001922  2EE8               	decfsz	wreg,f,c
  6262  001924  D7FE               	bra	u9647
  6263  001926  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6264  001928  D7FC               	bra	u9647
  6265                           
  6266                           ;actuators_main.c: 605:             LATCbits.LATC5 = 1;
  6267  00192A  8A8B               	bsf	3979,5,c	;volatile
  6268                           
  6269                           ;actuators_main.c: 606:             LATCbits.LATC6 = 0;
  6270  00192C  9C8B               	bcf	3979,6,c	;volatile
  6271                           
  6272                           ;actuators_main.c: 607:             LATCbits.LATC7 = 0;
  6273  00192E  9E8B               	bcf	3979,7,c	;volatile
  6274                           
  6275                           ;actuators_main.c: 608:             LATAbits.LATA5 = 1;
  6276  001930  8A89               	bsf	3977,5,c	;volatile
  6277                           
  6278                           ;actuators_main.c: 609:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6279  001932  0E1E               	movlw	30
  6280  001934  0100               	movlb	0	; () banked
  6281  001936  6FFB               	movwf	??_full_drive& (0+255),b
  6282  001938  0E37               	movlw	55
  6283  00193A                     u9657:
  6284  00193A  2EE8               	decfsz	wreg,f,c
  6285  00193C  D7FE               	bra	u9657
  6286  00193E  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6287  001940  D7FC               	bra	u9657
  6288                           
  6289                           ;actuators_main.c: 610:             LATCbits.LATC5 = 1;
  6290  001942  8A8B               	bsf	3979,5,c	;volatile
  6291                           
  6292                           ;actuators_main.c: 611:             LATCbits.LATC6 = 1;
  6293  001944  8C8B               	bsf	3979,6,c	;volatile
  6294                           
  6295                           ;actuators_main.c: 612:             LATCbits.LATC7 = 0;
  6296  001946  9E8B               	bcf	3979,7,c	;volatile
  6297                           
  6298                           ;actuators_main.c: 613:             LATAbits.LATA5 = 0;
  6299  001948  9A89               	bcf	3977,5,c	;volatile
  6300                           
  6301                           ;actuators_main.c: 614:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6302  00194A  0E1E               	movlw	30
  6303  00194C  0100               	movlb	0	; () banked
  6304  00194E  6FFB               	movwf	??_full_drive& (0+255),b
  6305  001950  0E37               	movlw	55
  6306  001952                     u9667:
  6307  001952  2EE8               	decfsz	wreg,f,c
  6308  001954  D7FE               	bra	u9667
  6309  001956  2FFB               	decfsz	??_full_drive& (0+255),f,b
  6310  001958  D7FC               	bra	u9667
  6311  00195A                     l7182:
  6312                           
  6313                           ;actuators_main.c: 617:                     LATA = 0b00000000;
  6314  00195A  0E00               	movlw	0
  6315  00195C  6E89               	movwf	3977,c	;volatile
  6316                           
  6317                           ;actuators_main.c: 618:         LATCbits.LATC0 = 0;
  6318  00195E  908B               	bcf	3979,0,c	;volatile
  6319                           
  6320                           ;actuators_main.c: 619:         LATEbits.LATE0 = 0;
  6321  001960  908D               	bcf	3981,0,c	;volatile
  6322                           
  6323                           ;actuators_main.c: 620:         LATEbits.LATE1 = 0;
  6324  001962  928D               	bcf	3981,1,c	;volatile
  6325                           
  6326                           ;actuators_main.c: 621:         LATEbits.LATE2 = 0;
  6327  001964  948D               	bcf	3981,2,c	;volatile
  6328                           
  6329                           ;actuators_main.c: 622:         LATCbits.LATC5 = 0;
  6330  001966  9A8B               	bcf	3979,5,c	;volatile
  6331                           
  6332                           ;actuators_main.c: 623:         LATCbits.LATC6 = 0;
  6333  001968  9C8B               	bcf	3979,6,c	;volatile
  6334                           
  6335                           ;actuators_main.c: 624:         LATCbits.LATC7 = 0;
  6336  00196A  9E8B               	bcf	3979,7,c	;volatile
  6337                           
  6338                           ;actuators_main.c: 625:         LATAbits.LATA5 = 0;
  6339  00196C  9A89               	bcf	3977,5,c	;volatile
  6340  00196E  0012               	return		;funcret
  6341  001970                     __end_of_full_drive:
  6342                           	opt callstack 0
  6343                           
  6344 ;; *************** function _servo *****************
  6345 ;; Defined at:
  6346 ;;		line 186 in file "actuators_main.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;Total ram usage:        2 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    4
  6367 ;; This function calls:
  6368 ;;		_servoRotate0
  6369 ;;		_servoRotate180
  6370 ;; This function is called by:
  6371 ;;		_actuators_main
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text16
  6376  0031FE                     __ptext16:
  6377                           	opt callstack 0
  6378  0031FE                     _servo:
  6379                           	opt callstack 25
  6380                           
  6381                           ;actuators_main.c: 188:   TRISC = 0;
  6382                           
  6383                           ;incstack = 0
  6384  0031FE  0E00               	movlw	0
  6385  003200  6E94               	movwf	3988,c	;volatile
  6386                           
  6387                           ;actuators_main.c: 189:   {;actuators_main.c: 191:     servoRotate0(1);
  6388  003202  0E00               	movlw	0
  6389  003204  0100               	movlb	0	; () banked
  6390  003206  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6391  003208  0E01               	movlw	1
  6392  00320A  6F80               	movwf	servoRotate0@servo& (0+255),b
  6393  00320C  EC2C  F018         	call	_servoRotate0	;wreg free
  6394                           
  6395                           ;actuators_main.c: 195:     servoRotate180(1);
  6396  003210  0E00               	movlw	0
  6397  003212  0100               	movlb	0	; () banked
  6398  003214  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6399  003216  0E01               	movlw	1
  6400  003218  6F80               	movwf	servoRotate180@servo& (0+255),b
  6401  00321A  ECB5  F017         	call	_servoRotate180	;wreg free
  6402                           
  6403                           ;actuators_main.c: 196:     _delay((unsigned long)((450)*(10000000/4000.0)));
  6404  00321E  0E06               	movlw	6
  6405  003220  0100               	movlb	0	; () banked
  6406  003222  6F86               	movwf	(??_servo+1)& (0+255),b
  6407  003224  0EB6               	movlw	182
  6408  003226  6F85               	movwf	??_servo& (0+255),b
  6409  003228  0E03               	movlw	3
  6410  00322A                     u9677:
  6411  00322A  2EE8               	decfsz	wreg,f,c
  6412  00322C  D7FE               	bra	u9677
  6413  00322E  2F85               	decfsz	??_servo& (0+255),f,b
  6414  003230  D7FC               	bra	u9677
  6415  003232  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  6416  003234  D7FA               	bra	u9677
  6417  003236  D000               	nop2	
  6418                           
  6419                           ;actuators_main.c: 197:     servoRotate0(1);
  6420  003238  0E00               	movlw	0
  6421  00323A  0100               	movlb	0	; () banked
  6422  00323C  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6423  00323E  0E01               	movlw	1
  6424  003240  6F80               	movwf	servoRotate0@servo& (0+255),b
  6425  003242  EC2C  F018         	call	_servoRotate0	;wreg free
  6426                           
  6427                           ;actuators_main.c: 199:     servoRotate180(2);
  6428  003246  0E00               	movlw	0
  6429  003248  0100               	movlb	0	; () banked
  6430  00324A  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6431  00324C  0E02               	movlw	2
  6432  00324E  6F80               	movwf	servoRotate180@servo& (0+255),b
  6433  003250  ECB5  F017         	call	_servoRotate180	;wreg free
  6434                           
  6435                           ;actuators_main.c: 200:     servoRotate0(2);
  6436  003254  0E00               	movlw	0
  6437  003256  0100               	movlb	0	; () banked
  6438  003258  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6439  00325A  0E02               	movlw	2
  6440  00325C  6F80               	movwf	servoRotate0@servo& (0+255),b
  6441  00325E  EC2C  F018         	call	_servoRotate0	;wreg free
  6442                           
  6443                           ;actuators_main.c: 201:     servoRotate180(2);
  6444  003262  0E00               	movlw	0
  6445  003264  0100               	movlb	0	; () banked
  6446  003266  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6447  003268  0E02               	movlw	2
  6448  00326A  6F80               	movwf	servoRotate180@servo& (0+255),b
  6449  00326C  ECB5  F017         	call	_servoRotate180	;wreg free
  6450                           
  6451                           ;actuators_main.c: 203:     _delay((unsigned long)((100)*(10000000/4000.0)));
  6452  003270  0E02               	movlw	2
  6453  003272  0100               	movlb	0	; () banked
  6454  003274  6F86               	movwf	(??_servo+1)& (0+255),b
  6455  003276  0E45               	movlw	69
  6456  003278  6F85               	movwf	??_servo& (0+255),b
  6457  00327A  0EA9               	movlw	169
  6458  00327C                     u9687:
  6459  00327C  2EE8               	decfsz	wreg,f,c
  6460  00327E  D7FE               	bra	u9687
  6461  003280  2F85               	decfsz	??_servo& (0+255),f,b
  6462  003282  D7FC               	bra	u9687
  6463  003284  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  6464  003286  D7FA               	bra	u9687
  6465  003288  D000               	nop2	
  6466                           
  6467                           ;actuators_main.c: 204:         servoRotate0(3);
  6468  00328A  0E00               	movlw	0
  6469  00328C  0100               	movlb	0	; () banked
  6470  00328E  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6471  003290  0E03               	movlw	3
  6472  003292  6F80               	movwf	servoRotate0@servo& (0+255),b
  6473  003294  EC2C  F018         	call	_servoRotate0	;wreg free
  6474                           
  6475                           ;actuators_main.c: 205:     servoRotate0(3);
  6476  003298  0E00               	movlw	0
  6477  00329A  0100               	movlb	0	; () banked
  6478  00329C  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6479  00329E  0E03               	movlw	3
  6480  0032A0  6F80               	movwf	servoRotate0@servo& (0+255),b
  6481  0032A2  EC2C  F018         	call	_servoRotate0	;wreg free
  6482                           
  6483                           ;actuators_main.c: 206:     servoRotate180(3);
  6484  0032A6  0E00               	movlw	0
  6485  0032A8  0100               	movlb	0	; () banked
  6486  0032AA  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6487  0032AC  0E03               	movlw	3
  6488  0032AE  6F80               	movwf	servoRotate180@servo& (0+255),b
  6489  0032B0  ECB5  F017         	call	_servoRotate180	;wreg free
  6490  0032B4  0012               	return		;funcret
  6491  0032B6                     __end_of_servo:
  6492                           	opt callstack 0
  6493                           
  6494 ;; *************** function _servoRotate180 *****************
  6495 ;; Defined at:
  6496 ;;		line 140 in file "actuators_main.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  servo           2    0[BANK0 ] int 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  i               2    3[BANK0 ] unsigned int 
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1    wreg      void 
  6503 ;; Registers used:
  6504 ;;		wreg, status,2, status,0
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6514 ;;Total ram usage:        5 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    3
  6517 ;; This function calls:
  6518 ;;		Nothing
  6519 ;; This function is called by:
  6520 ;;		_servo
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           	psect	text17
  6525  002F6A                     __ptext17:
  6526                           	opt callstack 0
  6527  002F6A                     _servoRotate180:
  6528                           	opt callstack 25
  6529                           
  6530                           ;actuators_main.c: 140: void servoRotate180(int servo);actuators_main.c: 141: {;actuator
      +                          s_main.c: 142:   unsigned int i;;actuators_main.c: 143:     if (servo==1){
  6531                           
  6532                           ;incstack = 0
  6533  002F6A  0100               	movlb	0	; () banked
  6534  002F6C  0580               	decf	servoRotate180@servo& (0+255),w,b
  6535  002F6E  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6536  002F70  A4D8               	btfss	status,2,c
  6537  002F72  D027               	goto	u7610
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;actuators_main.c: 144:     for(i=0;i<40;i++)
  6541  002F74  0E00               	movlw	0
  6542  002F76  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6543  002F78  0E00               	movlw	0
  6544  002F7A  6F83               	movwf	servoRotate180@i& (0+255),b
  6545  002F7C                     l129:
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;actuators_main.c: 145:         {;actuators_main.c: 146:           RC1 = 1;
  6549  002F7C  8282               	bsf	3970,1,c	;volatile
  6550                           
  6551                           ;actuators_main.c: 147:             RC2 = 1;
  6552  002F7E  8482               	bsf	3970,2,c	;volatile
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;actuators_main.c: 148:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  6556  002F80  0EE1               	movlw	225
  6557  002F82                     u9697:
  6558  002F82  D000               	nop2	
  6559  002F84  2EE8               	decfsz	wreg,f,c
  6560  002F86  D7FD               	bra	u9697
  6561                           
  6562                           ;actuators_main.c: 150:           RC2 =0;
  6563  002F88  9482               	bcf	3970,2,c	;volatile
  6564                           
  6565                           ;actuators_main.c: 151:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  6566  002F8A  0E07               	movlw	7
  6567  002F8C  0100               	movlb	0	; () banked
  6568  002F8E  6F82               	movwf	??_servoRotate180& (0+255),b
  6569  002F90  0ED0               	movlw	208
  6570  002F92                     u9707:
  6571  002F92  2EE8               	decfsz	wreg,f,c
  6572  002F94  D7FE               	bra	u9707
  6573  002F96  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6574  002F98  D7FC               	bra	u9707
  6575  002F9A  F000               	nop	
  6576                           
  6577                           ;actuators_main.c: 153:           RC1 = 0;
  6578  002F9C  9282               	bcf	3970,1,c	;volatile
  6579                           
  6580                           ;actuators_main.c: 154:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  6581  002F9E  0E2C               	movlw	44
  6582  002FA0  0100               	movlb	0	; () banked
  6583  002FA2  6F82               	movwf	??_servoRotate180& (0+255),b
  6584  002FA4  0EFD               	movlw	253
  6585  002FA6                     u9717:
  6586  002FA6  2EE8               	decfsz	wreg,f,c
  6587  002FA8  D7FE               	bra	u9717
  6588  002FAA  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6589  002FAC  D7FC               	bra	u9717
  6590  002FAE  F000               	nop	
  6591                           
  6592                           ;actuators_main.c: 155:         }
  6593  002FB0  0100               	movlb	0	; () banked
  6594  002FB2  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6595  002FB4  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6596  002FB6  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6597  002FB8  E104               	bnz	u7610
  6598  002FBA  0E28               	movlw	40
  6599  002FBC  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6600  002FBE  A0D8               	btfss	status,0,c
  6601  002FC0  D7DD               	goto	l129
  6602  002FC2                     u7610:
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;actuators_main.c: 157:   if (servo==2){
  6606  002FC2  0E02               	movlw	2
  6607  002FC4  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  6608  002FC6  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6609  002FC8  A4D8               	btfss	status,2,c
  6610  002FCA  D01E               	goto	u7630
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;actuators_main.c: 158:     for(i=0;i<40;i++)
  6614  002FCC  0E00               	movlw	0
  6615  002FCE  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6616  002FD0  0E00               	movlw	0
  6617  002FD2  6F83               	movwf	servoRotate180@i& (0+255),b
  6618  002FD4                     l132:
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;actuators_main.c: 159:           {;actuators_main.c: 161:     RD1 = 1;
  6622  002FD4  8283               	bsf	3971,1,c	;volatile
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;actuators_main.c: 164:     _delay((unsigned long)((550)*(10000000/4000000.0)));
  6626  002FD6  0EC4               	movlw	196
  6627  002FD8                     u9727:
  6628  002FD8  D000               	nop2	
  6629  002FDA  D000               	nop2	
  6630  002FDC  2EE8               	decfsz	wreg,f,c
  6631  002FDE  D7FC               	bra	u9727
  6632  002FE0  D000               	nop2	
  6633  002FE2  F000               	nop	
  6634                           
  6635                           ;actuators_main.c: 166:     RD1 = 0;
  6636  002FE4  9283               	bcf	3971,1,c	;volatile
  6637                           
  6638                           ;actuators_main.c: 169:     _delay((unsigned long)((27050)*(10000000/4000000.0)));
  6639  002FE6  0E58               	movlw	88
  6640  002FE8  0100               	movlb	0	; () banked
  6641  002FEA  6F82               	movwf	??_servoRotate180& (0+255),b
  6642  002FEC  0ED2               	movlw	210
  6643  002FEE                     u9737:
  6644  002FEE  2EE8               	decfsz	wreg,f,c
  6645  002FF0  D7FE               	bra	u9737
  6646  002FF2  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6647  002FF4  D7FC               	bra	u9737
  6648                           
  6649                           ;actuators_main.c: 170:           }
  6650  002FF6  0100               	movlb	0	; () banked
  6651  002FF8  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6652  002FFA  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6653  002FFC  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6654  002FFE  E104               	bnz	u7630
  6655  003000  0E28               	movlw	40
  6656  003002  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6657  003004  A0D8               	btfss	status,0,c
  6658  003006  D7E6               	goto	l132
  6659  003008                     u7630:
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;actuators_main.c: 172:     if (servo==3){
  6663  003008  0E03               	movlw	3
  6664  00300A  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  6665  00300C  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  6666  00300E  A4D8               	btfss	status,2,c
  6667  003010  0012               	return	
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;actuators_main.c: 173:       for(i=0;i<40;i++)
  6671  003012  0E00               	movlw	0
  6672  003014  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  6673  003016  0E00               	movlw	0
  6674  003018  6F83               	movwf	servoRotate180@i& (0+255),b
  6675  00301A                     l135:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;actuators_main.c: 174:         {;actuators_main.c: 175:         RD0 = 1;
  6679  00301A  8083               	bsf	3971,0,c	;volatile
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;actuators_main.c: 177:         _delay((unsigned long)((2500)*(10000000/4000000.0)));
  6683  00301C  0E09               	movlw	9
  6684  00301E  0100               	movlb	0	; () banked
  6685  003020  6F82               	movwf	??_servoRotate180& (0+255),b
  6686  003022  0E1C               	movlw	28
  6687  003024                     u9747:
  6688  003024  2EE8               	decfsz	wreg,f,c
  6689  003026  D7FE               	bra	u9747
  6690  003028  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6691  00302A  D7FC               	bra	u9747
  6692  00302C  F000               	nop	
  6693                           
  6694                           ;actuators_main.c: 180:             RD0 = 0;
  6695  00302E  9083               	bcf	3971,0,c	;volatile
  6696                           
  6697                           ;actuators_main.c: 182:         _delay((unsigned long)((10500)*(10000000/4000000.0)));
  6698  003030  0E23               	movlw	35
  6699  003032  0100               	movlb	0	; () banked
  6700  003034  6F82               	movwf	??_servoRotate180& (0+255),b
  6701  003036  0E15               	movlw	21
  6702  003038                     u9757:
  6703  003038  2EE8               	decfsz	wreg,f,c
  6704  00303A  D7FE               	bra	u9757
  6705  00303C  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  6706  00303E  D7FC               	bra	u9757
  6707  003040  D000               	nop2	
  6708                           
  6709                           ;actuators_main.c: 183:         }
  6710  003042  0100               	movlb	0	; () banked
  6711  003044  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  6712  003046  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  6713  003048  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  6714  00304A  E105               	bnz	u7650
  6715  00304C  0E28               	movlw	40
  6716  00304E  5D83               	subwf	servoRotate180@i& (0+255),w,b
  6717  003050  B0D8               	btfsc	status,0,c
  6718  003052  0012               	return	
  6719  003054  D7E2               	goto	l135
  6720  003056                     u7650:
  6721                           
  6722                           ; BSR set to: 0
  6723  003056  0012               	return		;funcret
  6724  003058                     __end_of_servoRotate180:
  6725                           	opt callstack 0
  6726                           
  6727 ;; *************** function _servoRotate0 *****************
  6728 ;; Defined at:
  6729 ;;		line 96 in file "actuators_main.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  servo           2    0[BANK0 ] int 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  i               2    3[BANK0 ] unsigned int 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;Total ram usage:        5 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    3
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_servo
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text18
  6758  003058                     __ptext18:
  6759                           	opt callstack 0
  6760  003058                     _servoRotate0:
  6761                           	opt callstack 25
  6762                           
  6763                           ;actuators_main.c: 97:     unsigned int i;;actuators_main.c: 98:     if (servo==1){
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;incstack = 0
  6767  003058  0100               	movlb	0	; () banked
  6768  00305A  0580               	decf	servoRotate0@servo& (0+255),w,b
  6769  00305C  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  6770  00305E  A4D8               	btfss	status,2,c
  6771  003060  D025               	goto	u7550
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;actuators_main.c: 99:       for(i=0;i<40;i++)
  6775  003062  0E00               	movlw	0
  6776  003064  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  6777  003066  0E00               	movlw	0
  6778  003068  6F83               	movwf	servoRotate0@i& (0+255),b
  6779  00306A                     l117:
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;actuators_main.c: 100:           {;actuators_main.c: 101:             RC1 = 1;
  6783  00306A  8282               	bsf	3970,1,c	;volatile
  6784                           
  6785                           ;actuators_main.c: 102:             RC2 = 1;
  6786  00306C  8482               	bsf	3970,2,c	;volatile
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;actuators_main.c: 103:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  6790  00306E  0E04               	movlw	4
  6791  003070  0100               	movlb	0	; () banked
  6792  003072  6F82               	movwf	??_servoRotate0& (0+255),b
  6793  003074  0E91               	movlw	145
  6794  003076                     u9767:
  6795  003076  2EE8               	decfsz	wreg,f,c
  6796  003078  D7FE               	bra	u9767
  6797  00307A  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  6798  00307C  D7FC               	bra	u9767
  6799                           
  6800                           ;actuators_main.c: 104:             RC2 = 0;
  6801  00307E  9482               	bcf	3970,2,c	;volatile
  6802                           
  6803                           ;actuators_main.c: 105:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  6804  003080  0EFA               	movlw	250
  6805  003082                     u9777:
  6806  003082  2EE8               	decfsz	wreg,f,c
  6807  003084  D7FE               	bra	u9777
  6808                           
  6809                           ;actuators_main.c: 106:             RC1 = 0;
  6810  003086  9282               	bcf	3970,1,c	;volatile
  6811                           
  6812                           ;actuators_main.c: 110:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  6813  003088  0E3D               	movlw	61
  6814  00308A  0100               	movlb	0	; () banked
  6815  00308C  6F82               	movwf	??_servoRotate0& (0+255),b
  6816  00308E  0E62               	movlw	98
  6817  003090                     u9787:
  6818  003090  2EE8               	decfsz	wreg,f,c
  6819  003092  D7FE               	bra	u9787
  6820  003094  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  6821  003096  D7FC               	bra	u9787
  6822  003098  F000               	nop	
  6823                           
  6824                           ;actuators_main.c: 111:           }
  6825  00309A  0100               	movlb	0	; () banked
  6826  00309C  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  6827  00309E  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  6828  0030A0  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  6829  0030A2  E104               	bnz	u7550
  6830  0030A4  0E28               	movlw	40
  6831  0030A6  5D83               	subwf	servoRotate0@i& (0+255),w,b
  6832  0030A8  A0D8               	btfss	status,0,c
  6833  0030AA  D7DF               	goto	l117
  6834  0030AC                     u7550:
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;actuators_main.c: 113:     if (servo==2){
  6838  0030AC  0E02               	movlw	2
  6839  0030AE  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  6840  0030B0  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  6841  0030B2  A4D8               	btfss	status,2,c
  6842  0030B4  D020               	goto	u7570
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;actuators_main.c: 114:       for(i=0;i<40;i++)
  6846  0030B6  0E00               	movlw	0
  6847  0030B8  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  6848  0030BA  0E00               	movlw	0
  6849  0030BC  6F83               	movwf	servoRotate0@i& (0+255),b
  6850  0030BE                     l120:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;actuators_main.c: 115:         {;actuators_main.c: 117:         RD1 = 1;
  6854  0030BE  8283               	bsf	3971,1,c	;volatile
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;actuators_main.c: 120:           _delay((unsigned long)((1000)*(10000000/4000000.0)));
  6858  0030C0  0E04               	movlw	4
  6859  0030C2  0100               	movlb	0	; () banked
  6860  0030C4  6F82               	movwf	??_servoRotate0& (0+255),b
  6861  0030C6  0E3D               	movlw	61
  6862  0030C8                     u9797:
  6863  0030C8  2EE8               	decfsz	wreg,f,c
  6864  0030CA  D7FE               	bra	u9797
  6865  0030CC  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  6866  0030CE  D7FC               	bra	u9797
  6867  0030D0  D000               	nop2	
  6868                           
  6869                           ;actuators_main.c: 122:         RD1 = 0;
  6870  0030D2  9283               	bcf	3971,1,c	;volatile
  6871                           
  6872                           ;actuators_main.c: 125:           _delay((unsigned long)((19000)*(10000000/4000000.0)));
  6873  0030D4  0E3E               	movlw	62
  6874  0030D6  0100               	movlb	0	; () banked
  6875  0030D8  6F82               	movwf	??_servoRotate0& (0+255),b
  6876  0030DA  0EAF               	movlw	175
  6877  0030DC                     u9807:
  6878  0030DC  2EE8               	decfsz	wreg,f,c
  6879  0030DE  D7FE               	bra	u9807
  6880  0030E0  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  6881  0030E2  D7FC               	bra	u9807
  6882                           
  6883                           ;actuators_main.c: 126:         }
  6884  0030E4  0100               	movlb	0	; () banked
  6885  0030E6  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  6886  0030E8  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  6887  0030EA  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  6888  0030EC  E104               	bnz	u7570
  6889  0030EE  0E28               	movlw	40
  6890  0030F0  5D83               	subwf	servoRotate0@i& (0+255),w,b
  6891  0030F2  A0D8               	btfss	status,0,c
  6892  0030F4  D7E4               	goto	l120
  6893  0030F6                     u7570:
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;actuators_main.c: 128:     if (servo==3){
  6897  0030F6  0E03               	movlw	3
  6898  0030F8  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  6899  0030FA  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  6900  0030FC  A4D8               	btfss	status,2,c
  6901  0030FE  0012               	return	
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;actuators_main.c: 129:       for(i=0;i<40;i++)
  6905  003100  0E00               	movlw	0
  6906  003102  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  6907  003104  0E00               	movlw	0
  6908  003106  6F83               	movwf	servoRotate0@i& (0+255),b
  6909  003108                     l123:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;actuators_main.c: 130:         {;actuators_main.c: 131:         RD0 = 1;
  6913  003108  8083               	bsf	3971,0,c	;volatile
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;actuators_main.c: 132:         _delay((unsigned long)((2000)*(10000000/4000000.0)));
  6917  00310A  0E07               	movlw	7
  6918  00310C  0100               	movlb	0	; () banked
  6919  00310E  6F82               	movwf	??_servoRotate0& (0+255),b
  6920  003110  0E7D               	movlw	125
  6921  003112                     u9817:
  6922  003112  2EE8               	decfsz	wreg,f,c
  6923  003114  D7FE               	bra	u9817
  6924  003116  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  6925  003118  D7FC               	bra	u9817
  6926                           
  6927                           ;actuators_main.c: 135:         RD0 = 0;
  6928  00311A  9083               	bcf	3971,0,c	;volatile
  6929                           
  6930                           ;actuators_main.c: 136:         _delay((unsigned long)((11000)*(10000000/4000000.0)));
  6931  00311C  0E24               	movlw	36
  6932  00311E  0100               	movlb	0	; () banked
  6933  003120  6F82               	movwf	??_servoRotate0& (0+255),b
  6934  003122  0EB5               	movlw	181
  6935  003124                     u9827:
  6936  003124  2EE8               	decfsz	wreg,f,c
  6937  003126  D7FE               	bra	u9827
  6938  003128  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  6939  00312A  D7FC               	bra	u9827
  6940  00312C  D000               	nop2	
  6941                           
  6942                           ;actuators_main.c: 137:         }
  6943  00312E  0100               	movlb	0	; () banked
  6944  003130  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  6945  003132  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  6946  003134  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  6947  003136  E105               	bnz	u7590
  6948  003138  0E28               	movlw	40
  6949  00313A  5D83               	subwf	servoRotate0@i& (0+255),w,b
  6950  00313C  B0D8               	btfsc	status,0,c
  6951  00313E  0012               	return	
  6952  003140  D7E3               	goto	l123
  6953  003142                     u7590:
  6954                           
  6955                           ; BSR set to: 0
  6956  003142  0012               	return		;funcret
  6957  003144                     __end_of_servoRotate0:
  6958                           	opt callstack 0
  6959                           
  6960 ;; *************** function _UI_main *****************
  6961 ;; Defined at:
  6962 ;;		line 482 in file "main.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  t_dep           2  121[BANK0 ] int 
  6965 ;;  poles_detect    2  123[BANK0 ] int 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  i               1   89[BANK1 ] unsigned char 
  6968 ;;  keypress        1   84[BANK1 ] unsigned char 
  6969 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  6970 ;;  tick            4   85[BANK1 ] unsigned long 
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  1    wreg      void 
  6973 ;; Registers used:
  6974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6980 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;Total ram usage:       94 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:   14
  6987 ;; This function calls:
  6988 ;;		_I2C_Master_Init
  6989 ;;		_I2C_Master_Read
  6990 ;;		_I2C_Master_Start
  6991 ;;		_I2C_Master_Stop
  6992 ;;		_I2C_Master_Write
  6993 ;;		___llmod
  6994 ;;		_initLCD
  6995 ;;		_lcdInst
  6996 ;;		_printf
  6997 ;; This function is called by:
  6998 ;;		_main
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text19
  7003  000012                     __ptext19:
  7004                           	opt callstack 0
  7005  000012                     _UI_main:
  7006                           	opt callstack 16
  7007                           
  7008                           ;main.c: 483:     sens = 0;
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;incstack = 0
  7012  000012  0E00               	movlw	0
  7013  000014  6E59               	movwf	_sens+1,c	;volatile
  7014  000016  0E00               	movlw	0
  7015  000018  6E58               	movwf	_sens,c	;volatile
  7016                           
  7017                           ;main.c: 488:     LATD = 0x00;
  7018  00001A  0E00               	movlw	0
  7019  00001C  6E8C               	movwf	3980,c	;volatile
  7020                           
  7021                           ;main.c: 489:     TRISD = 0x00;
  7022  00001E  0E00               	movlw	0
  7023  000020  6E95               	movwf	3989,c	;volatile
  7024                           
  7025                           ;main.c: 492:     TRISD = 0x00;
  7026  000022  0E00               	movlw	0
  7027  000024  6E95               	movwf	3989,c	;volatile
  7028                           
  7029                           ;main.c: 495:     INT1IE = 1;
  7030  000026  86F0               	bsf	4080,3,c	;volatile
  7031                           
  7032                           ;main.c: 498:     initLCD();
  7033  000028  EC5C  F01B         	call	_initLCD	;wreg free
  7034                           
  7035                           ;main.c: 501:     (INTCONbits.GIE = 1);
  7036  00002C  8EF2               	bsf	4082,7,c	;volatile
  7037                           
  7038                           ;main.c: 503:     I2C_Master_Init(100000);
  7039  00002E  0EA0               	movlw	160
  7040  000030  0100               	movlb	0	; () banked
  7041  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7042  000034  0E86               	movlw	134
  7043  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7044  000038  0E01               	movlw	1
  7045  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7046  00003C  0E00               	movlw	0
  7047  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7048  000040  ECFF  F01B         	call	_I2C_Master_Init	;wreg free
  7049                           
  7050                           ;main.c: 504:     I2C_Master_Start();
  7051  000044  EC84  F01E         	call	_I2C_Master_Start	;wreg free
  7052                           
  7053                           ;main.c: 505:     I2C_Master_Write(0b00010000);
  7054  000048  0E00               	movlw	0
  7055  00004A  0100               	movlb	0	; () banked
  7056  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7057  00004E  0E10               	movlw	16
  7058  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7059  000052  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  7060                           
  7061                           ;main.c: 506:     I2C_Master_Stop();
  7062  000056  EC80  F01E         	call	_I2C_Master_Stop	;wreg free
  7063                           
  7064                           ;main.c: 516:     if((pressed == 0)&&(sens==0)){
  7065  00005A  0101               	movlb	1	; () banked
  7066  00005C  51D9               	movf	_pressed& (0+255),w,b
  7067  00005E  11DA               	iorwf	(_pressed+1)& (0+255),w,b
  7068  000060  A4D8               	btfss	status,2,c
  7069  000062  D3DC               	goto	u8730
  7070                           
  7071                           ; BSR set to: 1
  7072  000064  5058               	movf	_sens,w,c	;volatile
  7073  000066  1059               	iorwf	_sens+1,w,c	;volatile
  7074  000068  A4D8               	btfss	status,2,c
  7075  00006A  D3D8               	goto	u8730
  7076                           
  7077                           ; BSR set to: 1
  7078                           ;main.c: 517:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7079  00006C  0E01               	movlw	1
  7080  00006E  EC73  F01E         	call	_lcdInst
  7081  000072  0E11               	movlw	17
  7082  000074  0101               	movlb	1	; () banked
  7083  000076  6F00               	movwf	??_UI_main& (0+255),b
  7084  000078  0E3A               	movlw	58
  7085  00007A                     u9837:
  7086  00007A  2EE8               	decfsz	wreg,f,c
  7087  00007C  D7FE               	bra	u9837
  7088  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  7089  000080  D7FC               	bra	u9837
  7090  000082  F000               	nop	
  7091                           
  7092                           ;main.c: 518:         printf("1 - Start");
  7093  000084  0EC4               	movlw	low STR_23
  7094  000086  0100               	movlb	0	; () banked
  7095  000088  6FED               	movwf	printf@fmt& (0+255),b
  7096  00008A  0EFF               	movlw	high STR_23
  7097  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7098  00008E  EC0D  F01E         	call	_printf	;wreg free
  7099  000092  0EC0               	movlw	192
  7100  000094  EC73  F01E         	call	_lcdInst
  7101                           
  7102                           ;main.c: 520:         printf("2 - Summary");
  7103  000098  0E46               	movlw	low STR_24
  7104  00009A  0100               	movlb	0	; () banked
  7105  00009C  6FED               	movwf	printf@fmt& (0+255),b
  7106  00009E  0EFF               	movlw	high STR_24
  7107  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7108  0000A2  EC0D  F01E         	call	_printf	;wreg free
  7109  0000A6  0E90               	movlw	144
  7110  0000A8  EC73  F01E         	call	_lcdInst
  7111                           
  7112                           ;main.c: 522:         printf("3 - Date&Time ");
  7113  0000AC  0E7A               	movlw	low STR_25
  7114  0000AE  0100               	movlb	0	; () banked
  7115  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  7116  0000B2  0EFE               	movlw	high STR_25
  7117  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7118  0000B6  EC0D  F01E         	call	_printf	;wreg free
  7119  0000BA  D3B0               	goto	u8730
  7120  0000BC                     l7886:
  7121                           
  7122                           ;main.c: 533:         if (send){
  7123  0000BC  506D               	movf	_send,w,c
  7124  0000BE  B4D8               	btfsc	status,2,c
  7125  0000C0  D3AD               	goto	u8730
  7126                           
  7127                           ;main.c: 534:         if(key_was_pressed){
  7128  0000C2  0101               	movlb	1	; () banked
  7129  0000C4  51E5               	movf	_key_was_pressed& (0+255),w,b	;volatile
  7130  0000C6  B4D8               	btfsc	status,2,c
  7131  0000C8  D3A9               	goto	u8730
  7132                           
  7133                           ; BSR set to: 1
  7134                           ;main.c: 535:             pressed = 1;
  7135  0000CA  0E00               	movlw	0
  7136  0000CC  6FDA               	movwf	(_pressed+1)& (0+255),b
  7137  0000CE  0E01               	movlw	1
  7138  0000D0  6FD9               	movwf	_pressed& (0+255),b
  7139                           
  7140                           ;main.c: 536:             key_was_pressed = 0;
  7141  0000D2  0E00               	movlw	0
  7142  0000D4  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
  7143                           
  7144                           ; BSR set to: 1
  7145                           ;main.c: 537:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  7146  0000D6  3881               	swapf	3969,w,c	;volatile
  7147  0000D8  0B0F               	andlw	15
  7148  0000DA  0B0F               	andlw	15
  7149  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  7150                           
  7151                           ; BSR set to: 1
  7152                           ;main.c: 538:             temp = keys[keypress];
  7153  0000DE  0EBB               	movlw	low _keys
  7154  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  7155  0000E2  6EF6               	movwf	tblptrl,c
  7156  0000E4  6AF7               	clrf	tblptrh,c
  7157  0000E6  0EFD               	movlw	high _keys
  7158  0000E8  22F7               	addwfc	tblptrh,f,c
  7159  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  7160  0000EA                     	endif
  7161  0000EA  0008               	tblrd		*
  7162  0000EC  CFF5 F0FF          	movff	tablat,_temp
  7163                           
  7164                           ; BSR set to: 1
  7165                           ;main.c: 539:             temp_int = (temp-'0');
  7166  0000F0  0ED0               	movlw	208
  7167  0000F2  0100               	movlb	0	; () banked
  7168  0000F4  25FF               	addwf	_temp& (0+255),w,b
  7169  0000F6  0101               	movlb	1	; () banked
  7170  0000F8  6FE1               	movwf	_temp_int& (0+255),b
  7171  0000FA  6BE2               	clrf	(_temp_int+1)& (0+255),b
  7172  0000FC  0EFF               	movlw	255
  7173  0000FE  23E2               	addwfc	(_temp_int+1)& (0+255),f,b
  7174                           
  7175                           ; BSR set to: 1
  7176                           ;main.c: 541:             if (temp_int == 0){
  7177  000100  51E1               	movf	_temp_int& (0+255),w,b
  7178  000102  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7179  000104  A4D8               	btfss	status,2,c
  7180  000106  D02B               	goto	l7916
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;main.c: 542:                 state = 0;
  7184  000108  0E00               	movlw	0
  7185  00010A  6FE0               	movwf	(_state+1)& (0+255),b
  7186  00010C  0E00               	movlw	0
  7187  00010E  6FDF               	movwf	_state& (0+255),b
  7188                           
  7189                           ; BSR set to: 1
  7190                           ;main.c: 543:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7191  000110  0E01               	movlw	1
  7192  000112  EC73  F01E         	call	_lcdInst
  7193  000116  0E11               	movlw	17
  7194  000118  0101               	movlb	1	; () banked
  7195  00011A  6F00               	movwf	??_UI_main& (0+255),b
  7196  00011C  0E3A               	movlw	58
  7197  00011E                     u9847:
  7198  00011E  2EE8               	decfsz	wreg,f,c
  7199  000120  D7FE               	bra	u9847
  7200  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  7201  000124  D7FC               	bra	u9847
  7202  000126  F000               	nop	
  7203                           
  7204                           ;main.c: 544:                 printf("1 - Start");
  7205  000128  0EC4               	movlw	low STR_23
  7206  00012A  0100               	movlb	0	; () banked
  7207  00012C  6FED               	movwf	printf@fmt& (0+255),b
  7208  00012E  0EFF               	movlw	high STR_23
  7209  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7210  000132  EC0D  F01E         	call	_printf	;wreg free
  7211  000136  0EC0               	movlw	192
  7212  000138  EC73  F01E         	call	_lcdInst
  7213                           
  7214                           ;main.c: 546:                 printf("2 - Summary");
  7215  00013C  0E46               	movlw	low STR_24
  7216  00013E  0100               	movlb	0	; () banked
  7217  000140  6FED               	movwf	printf@fmt& (0+255),b
  7218  000142  0EFF               	movlw	high STR_24
  7219  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7220  000146  EC0D  F01E         	call	_printf	;wreg free
  7221  00014A  0E90               	movlw	144
  7222  00014C  EC73  F01E         	call	_lcdInst
  7223                           
  7224                           ;main.c: 548:                 printf("3 - Date&Time ");
  7225  000150  0E7A               	movlw	low STR_25
  7226  000152  0100               	movlb	0	; () banked
  7227  000154  6FED               	movwf	printf@fmt& (0+255),b
  7228  000156  0EFE               	movlw	high STR_25
  7229  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7230  00015A  EC0D  F01E         	call	_printf	;wreg free
  7231  00015E                     l7916:
  7232                           
  7233                           ;main.c: 551:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  7234  00015E  0101               	movlb	1	; () banked
  7235  000160  05E1               	decf	_temp_int& (0+255),w,b
  7236  000162  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7237  000164  A4D8               	btfss	status,2,c
  7238  000166  D041               	goto	l7944
  7239                           
  7240                           ; BSR set to: 1
  7241  000168  0E2A               	movlw	42
  7242  00016A  0100               	movlb	0	; () banked
  7243  00016C  19FF               	xorwf	_temp& (0+255),w,b
  7244  00016E  B4D8               	btfsc	status,2,c
  7245  000170  D03C               	goto	l7944
  7246                           
  7247                           ; BSR set to: 0
  7248  000172  0E23               	movlw	35
  7249  000174  19FF               	xorwf	_temp& (0+255),w,b
  7250  000176  B4D8               	btfsc	status,2,c
  7251  000178  D038               	goto	l7944
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;main.c: 552:                 state = 0;
  7255  00017A  0E00               	movlw	0
  7256  00017C  0101               	movlb	1	; () banked
  7257  00017E  6FE0               	movwf	(_state+1)& (0+255),b
  7258  000180  0E00               	movlw	0
  7259  000182  6FDF               	movwf	_state& (0+255),b
  7260                           
  7261                           ; BSR set to: 1
  7262                           ;main.c: 553:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7263  000184  0E01               	movlw	1
  7264  000186  EC73  F01E         	call	_lcdInst
  7265  00018A  0E11               	movlw	17
  7266  00018C  0101               	movlb	1	; () banked
  7267  00018E  6F00               	movwf	??_UI_main& (0+255),b
  7268  000190  0E3A               	movlw	58
  7269  000192                     u9857:
  7270  000192  2EE8               	decfsz	wreg,f,c
  7271  000194  D7FE               	bra	u9857
  7272  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  7273  000198  D7FC               	bra	u9857
  7274  00019A  F000               	nop	
  7275                           
  7276                           ;main.c: 554:                 printf("Machine In Use");
  7277  00019C  0E98               	movlw	low STR_29
  7278  00019E  0100               	movlb	0	; () banked
  7279  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  7280  0001A2  0EFE               	movlw	high STR_29
  7281  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7282  0001A6  EC0D  F01E         	call	_printf	;wreg free
  7283  0001AA  0ED0               	movlw	208
  7284  0001AC  EC73  F01E         	call	_lcdInst
  7285                           
  7286                           ;main.c: 556:                 printf("     0-Menu     ");
  7287  0001B0  0EE4               	movlw	low STR_30
  7288  0001B2  0100               	movlb	0	; () banked
  7289  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  7290  0001B6  0EFD               	movlw	high STR_30
  7291  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7292  0001BA  EC0D  F01E         	call	_printf	;wreg free
  7293                           
  7294                           ;main.c: 560:                 I2C_Master_Start();
  7295  0001BE  EC84  F01E         	call	_I2C_Master_Start	;wreg free
  7296                           
  7297                           ;main.c: 561:                 I2C_Master_Write(0b00010000);
  7298  0001C2  0E00               	movlw	0
  7299  0001C4  0100               	movlb	0	; () banked
  7300  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7301  0001C8  0E10               	movlw	16
  7302  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7303  0001CC  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  7304                           
  7305                           ;main.c: 562:                 I2C_Master_Write('1');
  7306  0001D0  0E00               	movlw	0
  7307  0001D2  0100               	movlb	0	; () banked
  7308  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7309  0001D6  0E31               	movlw	49
  7310  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7311  0001DA  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  7312                           
  7313                           ;main.c: 563:                 I2C_Master_Stop();
  7314  0001DE  EC80  F01E         	call	_I2C_Master_Stop	;wreg free
  7315                           
  7316                           ;main.c: 565:                 sens = 1;
  7317  0001E2  0E00               	movlw	0
  7318  0001E4  6E59               	movwf	_sens+1,c	;volatile
  7319  0001E6  0E01               	movlw	1
  7320  0001E8  6E58               	movwf	_sens,c	;volatile
  7321  0001EA                     l7944:
  7322                           
  7323                           ;main.c: 568:                 if ((temp_int == 2)||(state == 2)){
  7324  0001EA  0E02               	movlw	2
  7325  0001EC  0101               	movlb	1	; () banked
  7326  0001EE  19E1               	xorwf	_temp_int& (0+255),w,b
  7327  0001F0  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7328  0001F2  B4D8               	btfsc	status,2,c
  7329  0001F4  D005               	goto	u8590
  7330                           
  7331                           ; BSR set to: 1
  7332  0001F6  0E02               	movlw	2
  7333  0001F8  19DF               	xorwf	_state& (0+255),w,b
  7334  0001FA  11E0               	iorwf	(_state+1)& (0+255),w,b
  7335  0001FC  A4D8               	btfss	status,2,c
  7336  0001FE  D253               	goto	l8054
  7337  000200                     u8590:
  7338                           
  7339                           ; BSR set to: 1
  7340                           ;main.c: 569:                     if ((temp_int == 2)){
  7341  000200  0E02               	movlw	2
  7342  000202  19E1               	xorwf	_temp_int& (0+255),w,b
  7343  000204  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7344  000206  A4D8               	btfss	status,2,c
  7345  000208  D033               	goto	l7966
  7346                           
  7347                           ; BSR set to: 1
  7348                           ;main.c: 570:                         state = 2;
  7349  00020A  0E00               	movlw	0
  7350  00020C  6FE0               	movwf	(_state+1)& (0+255),b
  7351  00020E  0E02               	movlw	2
  7352  000210  6FDF               	movwf	_state& (0+255),b
  7353                           
  7354                           ;main.c: 571:                         disp = 0;
  7355  000212  0E00               	movlw	0
  7356  000214  6FDE               	movwf	(_disp+1)& (0+255),b
  7357  000216  0E00               	movlw	0
  7358  000218  6FDD               	movwf	_disp& (0+255),b
  7359                           
  7360                           ; BSR set to: 1
  7361                           ;main.c: 572:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7362  00021A  0E01               	movlw	1
  7363  00021C  EC73  F01E         	call	_lcdInst
  7364  000220  0E11               	movlw	17
  7365  000222  0101               	movlb	1	; () banked
  7366  000224  6F00               	movwf	??_UI_main& (0+255),b
  7367  000226  0E3A               	movlw	58
  7368  000228                     u9867:
  7369  000228  2EE8               	decfsz	wreg,f,c
  7370  00022A  D7FE               	bra	u9867
  7371  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7372  00022E  D7FC               	bra	u9867
  7373  000230  F000               	nop	
  7374                           
  7375                           ;main.c: 573:                         printf("Op Time:");
  7376  000232  0EE2               	movlw	low STR_31
  7377  000234  0100               	movlb	0	; () banked
  7378  000236  6FED               	movwf	printf@fmt& (0+255),b
  7379  000238  0EFF               	movlw	high STR_31
  7380  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7381  00023C  EC0D  F01E         	call	_printf	;wreg free
  7382  000240  0EC0               	movlw	192
  7383  000242  EC73  F01E         	call	_lcdInst
  7384                           
  7385                           ;main.c: 575:                         printf("%d", cnt);
  7386  000246  0ED0               	movlw	low (STR_38+11)
  7387  000248  0100               	movlb	0	; () banked
  7388  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7389  00024C  0EFE               	movlw	high (STR_38+11)
  7390  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7391  000250  0E00               	movlw	0
  7392  000252  6FF0               	movwf	(?_printf+3)& (0+255),b
  7393  000254  0E00               	movlw	0
  7394  000256  6FEF               	movwf	(?_printf+2)& (0+255),b
  7395  000258  EC0D  F01E         	call	_printf	;wreg free
  7396  00025C  0ED0               	movlw	208
  7397  00025E  EC73  F01E         	call	_lcdInst
  7398                           
  7399                           ;main.c: 577:                         printf("    0-Menu   #>");
  7400  000262  0E29               	movlw	low (STR_36+1)
  7401  000264  0100               	movlb	0	; () banked
  7402  000266  6FED               	movwf	printf@fmt& (0+255),b
  7403  000268  0EFE               	movlw	high (STR_36+1)
  7404  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7405  00026C  EC0D  F01E         	call	_printf	;wreg free
  7406  000270                     l7966:
  7407                           
  7408                           ;main.c: 579:                     if ((temp == '*') && (disp != 0)){
  7409  000270  0E2A               	movlw	42
  7410  000272  0100               	movlb	0	; () banked
  7411  000274  19FF               	xorwf	_temp& (0+255),w,b
  7412  000276  A4D8               	btfss	status,2,c
  7413  000278  D00B               	goto	l506
  7414                           
  7415                           ; BSR set to: 0
  7416  00027A  0101               	movlb	1	; () banked
  7417  00027C  51DD               	movf	_disp& (0+255),w,b
  7418  00027E  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7419  000280  B4D8               	btfsc	status,2,c
  7420  000282  D006               	goto	l506
  7421                           
  7422                           ; BSR set to: 1
  7423                           ;main.c: 580:                         disp = disp - 1;
  7424  000284  0EFF               	movlw	255
  7425  000286  25DD               	addwf	_disp& (0+255),w,b
  7426  000288  6FDD               	movwf	_disp& (0+255),b
  7427  00028A  0EFF               	movlw	255
  7428  00028C  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7429  00028E  6FDE               	movwf	(_disp+1)& (0+255),b
  7430  000290                     l506:
  7431                           
  7432                           ;main.c: 582:                     if ((temp == '#')&& (disp <12)){
  7433  000290  0E23               	movlw	35
  7434  000292  0100               	movlb	0	; () banked
  7435  000294  19FF               	xorwf	_temp& (0+255),w,b
  7436  000296  A4D8               	btfss	status,2,c
  7437  000298  D00B               	goto	l7976
  7438                           
  7439                           ; BSR set to: 0
  7440  00029A  0101               	movlb	1	; () banked
  7441  00029C  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7442  00029E  D006               	goto	u8640
  7443  0002A0  51DE               	movf	(_disp+1)& (0+255),w,b
  7444  0002A2  E106               	bnz	l7976
  7445  0002A4  0E0C               	movlw	12
  7446  0002A6  5DDD               	subwf	_disp& (0+255),w,b
  7447  0002A8  B0D8               	btfsc	status,0,c
  7448  0002AA  D002               	goto	l7976
  7449  0002AC                     u8640:
  7450                           
  7451                           ; BSR set to: 1
  7452                           ;main.c: 583:                         disp++;
  7453  0002AC  4BDD               	infsnz	_disp& (0+255),f,b
  7454  0002AE  2BDE               	incf	(_disp+1)& (0+255),f,b
  7455  0002B0                     l7976:
  7456                           
  7457                           ;main.c: 585:                     if (disp == 0){
  7458  0002B0  0101               	movlb	1	; () banked
  7459  0002B2  51DD               	movf	_disp& (0+255),w,b
  7460  0002B4  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7461  0002B6  A4D8               	btfss	status,2,c
  7462  0002B8  D02B               	goto	l7992
  7463                           
  7464                           ; BSR set to: 1
  7465                           ;main.c: 586:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7466  0002BA  0E01               	movlw	1
  7467  0002BC  EC73  F01E         	call	_lcdInst
  7468  0002C0  0E11               	movlw	17
  7469  0002C2  0101               	movlb	1	; () banked
  7470  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  7471  0002C6  0E3A               	movlw	58
  7472  0002C8                     u9877:
  7473  0002C8  2EE8               	decfsz	wreg,f,c
  7474  0002CA  D7FE               	bra	u9877
  7475  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  7476  0002CE  D7FC               	bra	u9877
  7477  0002D0  F000               	nop	
  7478                           
  7479                           ;main.c: 587:                         printf("Op Time:");
  7480  0002D2  0EE2               	movlw	low STR_31
  7481  0002D4  0100               	movlb	0	; () banked
  7482  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  7483  0002D8  0EFF               	movlw	high STR_31
  7484  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7485  0002DC  EC0D  F01E         	call	_printf	;wreg free
  7486  0002E0  0EC0               	movlw	192
  7487  0002E2  EC73  F01E         	call	_lcdInst
  7488                           
  7489                           ;main.c: 589:                         printf("%d", cnt);
  7490  0002E6  0ED0               	movlw	low (STR_38+11)
  7491  0002E8  0100               	movlb	0	; () banked
  7492  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  7493  0002EC  0EFE               	movlw	high (STR_38+11)
  7494  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7495  0002F0  0E00               	movlw	0
  7496  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  7497  0002F4  0E00               	movlw	0
  7498  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  7499  0002F8  EC0D  F01E         	call	_printf	;wreg free
  7500  0002FC  0ED0               	movlw	208
  7501  0002FE  EC73  F01E         	call	_lcdInst
  7502                           
  7503                           ;main.c: 591:                         printf("     0-Menu   #>");
  7504  000302  0E28               	movlw	low STR_36
  7505  000304  0100               	movlb	0	; () banked
  7506  000306  6FED               	movwf	printf@fmt& (0+255),b
  7507  000308  0EFE               	movlw	high STR_36
  7508  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7509  00030C  EC0D  F01E         	call	_printf	;wreg free
  7510  000310                     l7992:
  7511                           
  7512                           ;main.c: 594:                     if (disp == 1){
  7513  000310  0101               	movlb	1	; () banked
  7514  000312  05DD               	decf	_disp& (0+255),w,b
  7515  000314  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7516  000316  A4D8               	btfss	status,2,c
  7517  000318  D02F               	goto	l8008
  7518                           
  7519                           ; BSR set to: 1
  7520                           ;main.c: 595:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7521  00031A  0E01               	movlw	1
  7522  00031C  EC73  F01E         	call	_lcdInst
  7523  000320  0E11               	movlw	17
  7524  000322  0101               	movlb	1	; () banked
  7525  000324  6F00               	movwf	??_UI_main& (0+255),b
  7526  000326  0E3A               	movlw	58
  7527  000328                     u9887:
  7528  000328  2EE8               	decfsz	wreg,f,c
  7529  00032A  D7FE               	bra	u9887
  7530  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7531  00032E  D7FC               	bra	u9887
  7532  000330  F000               	nop	
  7533                           
  7534                           ;main.c: 596:                         printf("No. Tires: %d",t_dep);
  7535  000332  0ED3               	movlw	low STR_37
  7536  000334  0100               	movlb	0	; () banked
  7537  000336  6FED               	movwf	printf@fmt& (0+255),b
  7538  000338  0EFE               	movlw	high STR_37
  7539  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7540  00033C  C0F9  F0EF         	movff	UI_main@t_dep,?_printf+2
  7541  000340  C0FA  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  7542  000344  EC0D  F01E         	call	_printf	;wreg free
  7543  000348  0EC0               	movlw	192
  7544  00034A  EC73  F01E         	call	_lcdInst
  7545                           
  7546                           ;main.c: 598:                         printf("No. Poles: %d", poles_detected);
  7547  00034E  0EC5               	movlw	low STR_38
  7548  000350  0100               	movlb	0	; () banked
  7549  000352  6FED               	movwf	printf@fmt& (0+255),b
  7550  000354  0EFE               	movlw	high STR_38
  7551  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7552  000358  C0FB  F0EF         	movff	UI_main@poles_detected,?_printf+2
  7553  00035C  C0FC  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  7554  000360  EC0D  F01E         	call	_printf	;wreg free
  7555  000364  0ED0               	movlw	208
  7556  000366  EC73  F01E         	call	_lcdInst
  7557                           
  7558                           ;main.c: 600:                         printf("<*   0-Menu   #>");
  7559  00036A  0E39               	movlw	low STR_39
  7560  00036C  0100               	movlb	0	; () banked
  7561  00036E  6FED               	movwf	printf@fmt& (0+255),b
  7562  000370  0EFE               	movlw	high STR_39
  7563  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7564  000374  EC0D  F01E         	call	_printf	;wreg free
  7565  000378                     l8008:
  7566                           
  7567                           ;main.c: 603:                     if (disp > 1 && disp <11){
  7568  000378  0101               	movlb	1	; () banked
  7569  00037A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7570  00037C  D0CE               	goto	l8032
  7571  00037E  51DE               	movf	(_disp+1)& (0+255),w,b
  7572  000380  E104               	bnz	u8670
  7573  000382  0E02               	movlw	2
  7574  000384  5DDD               	subwf	_disp& (0+255),w,b
  7575  000386  A0D8               	btfss	status,0,c
  7576  000388  D0C8               	goto	l8032
  7577  00038A                     u8670:
  7578                           
  7579                           ; BSR set to: 1
  7580  00038A  BFDE               	btfsc	(_disp+1)& (0+255),7,b
  7581  00038C  D006               	goto	u8680
  7582  00038E  51DE               	movf	(_disp+1)& (0+255),w,b
  7583  000390  E103               	bnz	u8681
  7584  000392  0E0B               	movlw	11
  7585  000394  5DDD               	subwf	_disp& (0+255),w,b
  7586  000396  B0D8               	btfsc	status,0,c
  7587  000398                     u8681:
  7588  000398  D0C0               	goto	l8032
  7589  00039A                     u8680:
  7590                           
  7591                           ; BSR set to: 1
  7592                           ;main.c: 604:                         i = disp - 2;
  7593  00039A  0EFE               	movlw	254
  7594  00039C  25DD               	addwf	_disp& (0+255),w,b
  7595  00039E  6FDB               	movwf	_i& (0+255),b
  7596  0003A0  0EFF               	movlw	255
  7597  0003A2  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7598  0003A4  6FDC               	movwf	(_i+1)& (0+255),b
  7599                           
  7600                           ; BSR set to: 1
  7601                           ;main.c: 605:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7602  0003A6  0E01               	movlw	1
  7603  0003A8  EC73  F01E         	call	_lcdInst
  7604  0003AC  0E11               	movlw	17
  7605  0003AE  0101               	movlb	1	; () banked
  7606  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  7607  0003B2  0E3A               	movlw	58
  7608  0003B4                     u9897:
  7609  0003B4  2EE8               	decfsz	wreg,f,c
  7610  0003B6  D7FE               	bra	u9897
  7611  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  7612  0003BA  D7FC               	bra	u9897
  7613  0003BC  F000               	nop	
  7614                           
  7615                           ;main.c: 606:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7616  0003BE  0ED2               	movlw	low STR_40
  7617  0003C0  0100               	movlb	0	; () banked
  7618  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  7619  0003C4  0EFD               	movlw	high STR_40
  7620  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7621  0003C8  0E01               	movlw	1
  7622  0003CA  0101               	movlb	1	; () banked
  7623  0003CC  25DB               	addwf	_i& (0+255),w,b
  7624  0003CE  0100               	movlb	0	; () banked
  7625  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  7626  0003D2  0E00               	movlw	0
  7627  0003D4  0101               	movlb	1	; () banked
  7628  0003D6  21DC               	addwfc	(_i+1)& (0+255),w,b
  7629  0003D8  0100               	movlb	0	; () banked
  7630  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  7631  0003DC  C1DB  F100         	movff	_i,??_UI_main
  7632  0003E0  C1DC  F101         	movff	_i+1,??_UI_main+1
  7633  0003E4  0101               	movlb	1	; () banked
  7634  0003E6  90D8               	bcf	status,0,c
  7635  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  7636  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7637  0003EC  90D8               	bcf	status,0,c
  7638  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  7639  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7640  0003F2  90D8               	bcf	status,0,c
  7641  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  7642  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7643  0003F8  0E04               	movlw	low UI_main@Pole
  7644  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  7645  0003FC  6ED9               	movwf	fsr2l,c
  7646  0003FE  0E01               	movlw	high UI_main@Pole
  7647  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7648  000402  6EDA               	movwf	fsr2h,c
  7649  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  7650  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  7651  00040C  C1DB  F102         	movff	_i,??_UI_main+2
  7652  000410  C1DC  F103         	movff	_i+1,??_UI_main+3
  7653  000414  90D8               	bcf	status,0,c
  7654  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7655  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7656  00041A  90D8               	bcf	status,0,c
  7657  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7658  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7659  000420  90D8               	bcf	status,0,c
  7660  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7661  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7662  000426  0E02               	movlw	2
  7663  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7664  00042A  0E00               	movlw	0
  7665  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7666  00042E  0E04               	movlw	low UI_main@Pole
  7667  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7668  000432  6ED9               	movwf	fsr2l,c
  7669  000434  0E01               	movlw	high UI_main@Pole
  7670  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7671  000438  6EDA               	movwf	fsr2h,c
  7672  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  7673  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  7674  000442  EC0D  F01E         	call	_printf	;wreg free
  7675  000446  0EC0               	movlw	192
  7676  000448  EC73  F01E         	call	_lcdInst
  7677                           
  7678                           ;main.c: 608:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7679  00044C  0E89               	movlw	low STR_41
  7680  00044E  0100               	movlb	0	; () banked
  7681  000450  6FED               	movwf	printf@fmt& (0+255),b
  7682  000452  0EFE               	movlw	high STR_41
  7683  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7684  000456  0E01               	movlw	1
  7685  000458  0101               	movlb	1	; () banked
  7686  00045A  25DB               	addwf	_i& (0+255),w,b
  7687  00045C  0100               	movlb	0	; () banked
  7688  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  7689  000460  0E00               	movlw	0
  7690  000462  0101               	movlb	1	; () banked
  7691  000464  21DC               	addwfc	(_i+1)& (0+255),w,b
  7692  000466  0100               	movlb	0	; () banked
  7693  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  7694  00046A  C1DB  F100         	movff	_i,??_UI_main
  7695  00046E  C1DC  F101         	movff	_i+1,??_UI_main+1
  7696  000472  0101               	movlb	1	; () banked
  7697  000474  90D8               	bcf	status,0,c
  7698  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  7699  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7700  00047A  90D8               	bcf	status,0,c
  7701  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  7702  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7703  000480  90D8               	bcf	status,0,c
  7704  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  7705  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7706  000486  0E04               	movlw	4
  7707  000488  2700               	addwf	??_UI_main& (0+255),f,b
  7708  00048A  0E00               	movlw	0
  7709  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7710  00048E  0E04               	movlw	low UI_main@Pole
  7711  000490  2500               	addwf	??_UI_main& (0+255),w,b
  7712  000492  6ED9               	movwf	fsr2l,c
  7713  000494  0E01               	movlw	high UI_main@Pole
  7714  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7715  000498  6EDA               	movwf	fsr2h,c
  7716  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  7717  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  7718  0004A2  EC0D  F01E         	call	_printf	;wreg free
  7719  0004A6  0E90               	movlw	144
  7720  0004A8  EC73  F01E         	call	_lcdInst
  7721                           
  7722                           ;main.c: 610:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7723  0004AC  0E3A               	movlw	low STR_42
  7724  0004AE  0100               	movlb	0	; () banked
  7725  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  7726  0004B2  0EFF               	movlw	high STR_42
  7727  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7728  0004B6  0E01               	movlw	1
  7729  0004B8  0101               	movlb	1	; () banked
  7730  0004BA  25DB               	addwf	_i& (0+255),w,b
  7731  0004BC  0100               	movlb	0	; () banked
  7732  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  7733  0004C0  0E00               	movlw	0
  7734  0004C2  0101               	movlb	1	; () banked
  7735  0004C4  21DC               	addwfc	(_i+1)& (0+255),w,b
  7736  0004C6  0100               	movlb	0	; () banked
  7737  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  7738  0004CA  C1DB  F100         	movff	_i,??_UI_main
  7739  0004CE  C1DC  F101         	movff	_i+1,??_UI_main+1
  7740  0004D2  0101               	movlb	1	; () banked
  7741  0004D4  90D8               	bcf	status,0,c
  7742  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  7743  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7744  0004DA  90D8               	bcf	status,0,c
  7745  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  7746  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7747  0004E0  90D8               	bcf	status,0,c
  7748  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  7749  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7750  0004E6  0E06               	movlw	6
  7751  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  7752  0004EA  0E00               	movlw	0
  7753  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7754  0004EE  0E04               	movlw	low UI_main@Pole
  7755  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  7756  0004F2  6ED9               	movwf	fsr2l,c
  7757  0004F4  0E01               	movlw	high UI_main@Pole
  7758  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7759  0004F8  6EDA               	movwf	fsr2h,c
  7760  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  7761  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  7762  000502  EC0D  F01E         	call	_printf	;wreg free
  7763  000506  0ED0               	movlw	208
  7764  000508  EC73  F01E         	call	_lcdInst
  7765                           
  7766                           ;main.c: 612:                         printf("<*   0-Menu   #>");
  7767  00050C  0E39               	movlw	low STR_39
  7768  00050E  0100               	movlb	0	; () banked
  7769  000510  6FED               	movwf	printf@fmt& (0+255),b
  7770  000512  0EFE               	movlw	high STR_39
  7771  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7772  000516  EC0D  F01E         	call	_printf	;wreg free
  7773  00051A                     l8032:
  7774                           
  7775                           ;main.c: 614:                     if (disp == 11){
  7776  00051A  0E0B               	movlw	11
  7777  00051C  0101               	movlb	1	; () banked
  7778  00051E  19DD               	xorwf	_disp& (0+255),w,b
  7779  000520  11DE               	iorwf	(_disp+1)& (0+255),w,b
  7780  000522  A4D8               	btfss	status,2,c
  7781  000524  D0C0               	goto	l8054
  7782                           
  7783                           ; BSR set to: 1
  7784                           ;main.c: 615:                         i = disp - 2;
  7785  000526  0EFE               	movlw	254
  7786  000528  25DD               	addwf	_disp& (0+255),w,b
  7787  00052A  6FDB               	movwf	_i& (0+255),b
  7788  00052C  0EFF               	movlw	255
  7789  00052E  21DE               	addwfc	(_disp+1)& (0+255),w,b
  7790  000530  6FDC               	movwf	(_i+1)& (0+255),b
  7791                           
  7792                           ; BSR set to: 1
  7793                           ;main.c: 616:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7794  000532  0E01               	movlw	1
  7795  000534  EC73  F01E         	call	_lcdInst
  7796  000538  0E11               	movlw	17
  7797  00053A  0101               	movlb	1	; () banked
  7798  00053C  6F00               	movwf	??_UI_main& (0+255),b
  7799  00053E  0E3A               	movlw	58
  7800  000540                     u9907:
  7801  000540  2EE8               	decfsz	wreg,f,c
  7802  000542  D7FE               	bra	u9907
  7803  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  7804  000546  D7FC               	bra	u9907
  7805  000548  F000               	nop	
  7806                           
  7807                           ;main.c: 617:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  7808  00054A  0ED2               	movlw	low STR_40
  7809  00054C  0100               	movlb	0	; () banked
  7810  00054E  6FED               	movwf	printf@fmt& (0+255),b
  7811  000550  0EFD               	movlw	high STR_40
  7812  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7813  000554  0E01               	movlw	1
  7814  000556  0101               	movlb	1	; () banked
  7815  000558  25DB               	addwf	_i& (0+255),w,b
  7816  00055A  0100               	movlb	0	; () banked
  7817  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  7818  00055E  0E00               	movlw	0
  7819  000560  0101               	movlb	1	; () banked
  7820  000562  21DC               	addwfc	(_i+1)& (0+255),w,b
  7821  000564  0100               	movlb	0	; () banked
  7822  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  7823  000568  C1DB  F100         	movff	_i,??_UI_main
  7824  00056C  C1DC  F101         	movff	_i+1,??_UI_main+1
  7825  000570  0101               	movlb	1	; () banked
  7826  000572  90D8               	bcf	status,0,c
  7827  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  7828  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7829  000578  90D8               	bcf	status,0,c
  7830  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  7831  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7832  00057E  90D8               	bcf	status,0,c
  7833  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  7834  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7835  000584  0E04               	movlw	low UI_main@Pole
  7836  000586  2500               	addwf	??_UI_main& (0+255),w,b
  7837  000588  6ED9               	movwf	fsr2l,c
  7838  00058A  0E01               	movlw	high UI_main@Pole
  7839  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7840  00058E  6EDA               	movwf	fsr2h,c
  7841  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  7842  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  7843  000598  C1DB  F102         	movff	_i,??_UI_main+2
  7844  00059C  C1DC  F103         	movff	_i+1,??_UI_main+3
  7845  0005A0  90D8               	bcf	status,0,c
  7846  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7847  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7848  0005A6  90D8               	bcf	status,0,c
  7849  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7850  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7851  0005AC  90D8               	bcf	status,0,c
  7852  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  7853  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  7854  0005B2  0E02               	movlw	2
  7855  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  7856  0005B6  0E00               	movlw	0
  7857  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  7858  0005BA  0E04               	movlw	low UI_main@Pole
  7859  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  7860  0005BE  6ED9               	movwf	fsr2l,c
  7861  0005C0  0E01               	movlw	high UI_main@Pole
  7862  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  7863  0005C4  6EDA               	movwf	fsr2h,c
  7864  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  7865  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  7866  0005CE  EC0D  F01E         	call	_printf	;wreg free
  7867  0005D2  0EC0               	movlw	192
  7868  0005D4  EC73  F01E         	call	_lcdInst
  7869                           
  7870                           ;main.c: 619:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  7871  0005D8  0E89               	movlw	low STR_41
  7872  0005DA  0100               	movlb	0	; () banked
  7873  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  7874  0005DE  0EFE               	movlw	high STR_41
  7875  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7876  0005E2  0E01               	movlw	1
  7877  0005E4  0101               	movlb	1	; () banked
  7878  0005E6  25DB               	addwf	_i& (0+255),w,b
  7879  0005E8  0100               	movlb	0	; () banked
  7880  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  7881  0005EC  0E00               	movlw	0
  7882  0005EE  0101               	movlb	1	; () banked
  7883  0005F0  21DC               	addwfc	(_i+1)& (0+255),w,b
  7884  0005F2  0100               	movlb	0	; () banked
  7885  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  7886  0005F6  C1DB  F100         	movff	_i,??_UI_main
  7887  0005FA  C1DC  F101         	movff	_i+1,??_UI_main+1
  7888  0005FE  0101               	movlb	1	; () banked
  7889  000600  90D8               	bcf	status,0,c
  7890  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  7891  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7892  000606  90D8               	bcf	status,0,c
  7893  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  7894  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7895  00060C  90D8               	bcf	status,0,c
  7896  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  7897  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7898  000612  0E04               	movlw	4
  7899  000614  2700               	addwf	??_UI_main& (0+255),f,b
  7900  000616  0E00               	movlw	0
  7901  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7902  00061A  0E04               	movlw	low UI_main@Pole
  7903  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  7904  00061E  6ED9               	movwf	fsr2l,c
  7905  000620  0E01               	movlw	high UI_main@Pole
  7906  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7907  000624  6EDA               	movwf	fsr2h,c
  7908  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  7909  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  7910  00062E  EC0D  F01E         	call	_printf	;wreg free
  7911  000632  0E90               	movlw	144
  7912  000634  EC73  F01E         	call	_lcdInst
  7913                           
  7914                           ;main.c: 621:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  7915  000638  0E3A               	movlw	low STR_42
  7916  00063A  0100               	movlb	0	; () banked
  7917  00063C  6FED               	movwf	printf@fmt& (0+255),b
  7918  00063E  0EFF               	movlw	high STR_42
  7919  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7920  000642  0E01               	movlw	1
  7921  000644  0101               	movlb	1	; () banked
  7922  000646  25DB               	addwf	_i& (0+255),w,b
  7923  000648  0100               	movlb	0	; () banked
  7924  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  7925  00064C  0E00               	movlw	0
  7926  00064E  0101               	movlb	1	; () banked
  7927  000650  21DC               	addwfc	(_i+1)& (0+255),w,b
  7928  000652  0100               	movlb	0	; () banked
  7929  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  7930  000656  C1DB  F100         	movff	_i,??_UI_main
  7931  00065A  C1DC  F101         	movff	_i+1,??_UI_main+1
  7932  00065E  0101               	movlb	1	; () banked
  7933  000660  90D8               	bcf	status,0,c
  7934  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  7935  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7936  000666  90D8               	bcf	status,0,c
  7937  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  7938  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7939  00066C  90D8               	bcf	status,0,c
  7940  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  7941  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  7942  000672  0E06               	movlw	6
  7943  000674  2700               	addwf	??_UI_main& (0+255),f,b
  7944  000676  0E00               	movlw	0
  7945  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  7946  00067A  0E04               	movlw	low UI_main@Pole
  7947  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  7948  00067E  6ED9               	movwf	fsr2l,c
  7949  000680  0E01               	movlw	high UI_main@Pole
  7950  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  7951  000684  6EDA               	movwf	fsr2h,c
  7952  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  7953  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  7954  00068E  EC0D  F01E         	call	_printf	;wreg free
  7955  000692  0ED0               	movlw	208
  7956  000694  EC73  F01E         	call	_lcdInst
  7957                           
  7958                           ;main.c: 623:                         printf("<*   0-Menu     ");
  7959  000698  0EF5               	movlw	low STR_47
  7960  00069A  0100               	movlb	0	; () banked
  7961  00069C  6FED               	movwf	printf@fmt& (0+255),b
  7962  00069E  0EFD               	movlw	high STR_47
  7963  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7964  0006A2  EC0D  F01E         	call	_printf	;wreg free
  7965  0006A6                     l8054:
  7966                           
  7967                           ;main.c: 626:             if (temp_int == 3){
  7968  0006A6  0E03               	movlw	3
  7969  0006A8  0101               	movlb	1	; () banked
  7970  0006AA  19E1               	xorwf	_temp_int& (0+255),w,b
  7971  0006AC  11E2               	iorwf	(_temp_int+1)& (0+255),w,b
  7972  0006AE  A4D8               	btfss	status,2,c
  7973  0006B0  D0B5               	goto	u8730
  7974                           
  7975                           ; BSR set to: 1
  7976                           ;main.c: 627:                 state = 0;
  7977  0006B2  0E00               	movlw	0
  7978  0006B4  6FE0               	movwf	(_state+1)& (0+255),b
  7979  0006B6  0E00               	movlw	0
  7980  0006B8  6FDF               	movwf	_state& (0+255),b
  7981                           
  7982                           ;main.c: 628:                 tick = 0;
  7983  0006BA  0E00               	movlw	0
  7984  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  7985  0006BE  0E00               	movlw	0
  7986  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  7987  0006C2  0E00               	movlw	0
  7988  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  7989  0006C6  0E00               	movlw	0
  7990  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  7991                           
  7992                           ;main.c: 629:                 while(~key_was_pressed){
  7993  0006CA  D0A5               	goto	l8104
  7994  0006CC                     l8058:
  7995                           
  7996                           ; BSR set to: 1
  7997                           ;main.c: 630:                     if(tick % 1000 == 0){
  7998  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  7999  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  8000  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  8001  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  8002  0006DC  0EE8               	movlw	232
  8003  0006DE  0100               	movlb	0	; () banked
  8004  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  8005  0006E2  0E03               	movlw	3
  8006  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  8007  0006E6  0E00               	movlw	0
  8008  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  8009  0006EA  0E00               	movlw	0
  8010  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  8011  0006EE  ECCB  F01B         	call	___llmod	;wreg free
  8012  0006F2  0100               	movlb	0	; () banked
  8013  0006F4  5180               	movf	?___llmod& (0+255),w,b
  8014  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  8015  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  8016  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  8017  0006FC  A4D8               	btfss	status,2,c
  8018  0006FE  D084               	goto	l8102
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;main.c: 631:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8022  000700  0E01               	movlw	1
  8023  000702  EC73  F01E         	call	_lcdInst
  8024  000706  0E11               	movlw	17
  8025  000708  0101               	movlb	1	; () banked
  8026  00070A  6F00               	movwf	??_UI_main& (0+255),b
  8027  00070C  0E3A               	movlw	58
  8028  00070E                     u9917:
  8029  00070E  2EE8               	decfsz	wreg,f,c
  8030  000710  D7FE               	bra	u9917
  8031  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  8032  000714  D7FC               	bra	u9917
  8033  000716  F000               	nop	
  8034                           
  8035                           ;main.c: 632:                         printf("DATE & TIME");
  8036  000718  0E16               	movlw	low STR_48
  8037  00071A  0100               	movlb	0	; () banked
  8038  00071C  6FED               	movwf	printf@fmt& (0+255),b
  8039  00071E  0EFF               	movlw	high STR_48
  8040  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8041  000722  EC0D  F01E         	call	_printf	;wreg free
  8042                           
  8043                           ;main.c: 633:                         I2C_Master_Init(100000);
  8044  000726  0EA0               	movlw	160
  8045  000728  0100               	movlb	0	; () banked
  8046  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  8047  00072C  0E86               	movlw	134
  8048  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  8049  000730  0E01               	movlw	1
  8050  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  8051  000734  0E00               	movlw	0
  8052  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  8053  000738  ECFF  F01B         	call	_I2C_Master_Init	;wreg free
  8054                           
  8055                           ;main.c: 634:                         I2C_Master_Start();
  8056  00073C  EC84  F01E         	call	_I2C_Master_Start	;wreg free
  8057                           
  8058                           ;main.c: 635:                         I2C_Master_Write(0b11010000);
  8059  000740  0E00               	movlw	0
  8060  000742  0100               	movlb	0	; () banked
  8061  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8062  000746  0ED0               	movlw	208
  8063  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8064  00074A  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  8065                           
  8066                           ;main.c: 636:                         I2C_Master_Write(0x00);
  8067  00074E  0E00               	movlw	0
  8068  000750  0100               	movlb	0	; () banked
  8069  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8070  000754  0E00               	movlw	0
  8071  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8072  000758  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  8073                           
  8074                           ;main.c: 637:                         I2C_Master_Stop();
  8075  00075C  EC80  F01E         	call	_I2C_Master_Stop	;wreg free
  8076                           
  8077                           ;main.c: 639:                         I2C_Master_Start();
  8078  000760  EC84  F01E         	call	_I2C_Master_Start	;wreg free
  8079                           
  8080                           ;main.c: 640:                         I2C_Master_Write(0b11010001);
  8081  000764  0E00               	movlw	0
  8082  000766  0100               	movlb	0	; () banked
  8083  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8084  00076A  0ED1               	movlw	209
  8085  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8086  00076E  EC7B  F01E         	call	_I2C_Master_Write	;wreg free
  8087                           
  8088                           ;main.c: 641:                         for(unsigned char i = 0; i < 6; i++){
  8089  000772  0E00               	movlw	0
  8090  000774  0101               	movlb	1	; () banked
  8091  000776  6F59               	movwf	UI_main@i& (0+255),b
  8092  000778                     l8082:
  8093                           
  8094                           ; BSR set to: 1
  8095  000778  0E05               	movlw	5
  8096  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  8097  00077C  D001               	goto	l8086
  8098  00077E  D00D               	goto	l8092
  8099  000780                     l8086:
  8100                           
  8101                           ; BSR set to: 1
  8102                           ;main.c: 642:                             time[i] = I2C_Master_Read(0);
  8103  000780  0ED2               	movlw	low _time
  8104  000782  2559               	addwf	UI_main@i& (0+255),w,b
  8105  000784  6ED9               	movwf	fsr2l,c
  8106  000786  6ADA               	clrf	fsr2h,c
  8107  000788  0E01               	movlw	high _time
  8108  00078A  22DA               	addwfc	fsr2h,f,c
  8109  00078C  0E00               	movlw	0
  8110  00078E  ECF8  F01D         	call	_I2C_Master_Read
  8111  000792  6EDF               	movwf	indf2,c
  8112                           
  8113                           ;main.c: 643:                         }
  8114  000794  0101               	movlb	1	; () banked
  8115  000796  2B59               	incf	UI_main@i& (0+255),f,b
  8116  000798  D7EF               	goto	l8082
  8117  00079A                     l8092:
  8118                           
  8119                           ; BSR set to: 1
  8120                           ;main.c: 644:                         time[6] = I2C_Master_Read(1);
  8121  00079A  0E01               	movlw	1
  8122  00079C  ECF8  F01D         	call	_I2C_Master_Read
  8123  0007A0  0101               	movlb	1	; () banked
  8124  0007A2  6FD8               	movwf	(_time+6)& (0+255),b
  8125                           
  8126                           ;main.c: 645:                         I2C_Master_Stop();
  8127  0007A4  EC80  F01E         	call	_I2C_Master_Stop	;wreg free
  8128  0007A8  0EC0               	movlw	192
  8129  0007AA  EC73  F01E         	call	_lcdInst
  8130                           
  8131                           ;main.c: 649:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  8132  0007AE  0EA7               	movlw	low STR_49
  8133  0007B0  0100               	movlb	0	; () banked
  8134  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  8135  0007B4  0EFE               	movlw	high STR_49
  8136  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8137  0007B8  C1D8  F0EF         	movff	_time+6,?_printf+2
  8138  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  8139  0007BE  C1D7  F0F1         	movff	_time+5,?_printf+4
  8140  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  8141  0007C4  C1D6  F0F3         	movff	_time+4,?_printf+6
  8142  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  8143  0007CA  EC0D  F01E         	call	_printf	;wreg free
  8144  0007CE  0E90               	movlw	144
  8145  0007D0  EC73  F01E         	call	_lcdInst
  8146                           
  8147                           ;main.c: 651:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  8148  0007D4  0EB6               	movlw	low STR_50
  8149  0007D6  0100               	movlb	0	; () banked
  8150  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  8151  0007DA  0EFE               	movlw	high STR_50
  8152  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8153  0007DE  C1D4  F0EF         	movff	_time+2,?_printf+2
  8154  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  8155  0007E4  C1D3  F0F1         	movff	_time+1,?_printf+4
  8156  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  8157  0007EA  C1D2  F0F3         	movff	_time,?_printf+6
  8158  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  8159  0007F0  EC0D  F01E         	call	_printf	;wreg free
  8160  0007F4  0ED0               	movlw	208
  8161  0007F6  EC73  F01E         	call	_lcdInst
  8162                           
  8163                           ;main.c: 653:                         printf("     0-Menu     ");
  8164  0007FA  0EE4               	movlw	low STR_30
  8165  0007FC  0100               	movlb	0	; () banked
  8166  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  8167  000800  0EFD               	movlw	high STR_30
  8168  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8169  000804  EC0D  F01E         	call	_printf	;wreg free
  8170  000808                     l8102:
  8171                           
  8172                           ;main.c: 656:                     tick++;
  8173  000808  0E01               	movlw	1
  8174  00080A  0101               	movlb	1	; () banked
  8175  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  8176  00080E  0E00               	movlw	0
  8177  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  8178  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  8179  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  8180  000816                     l8104:
  8181                           
  8182                           ; BSR set to: 1
  8183                           ;main.c: 629:                 while(~key_was_pressed){
  8184  000816  05E5               	decf	_key_was_pressed& (0+255),w,b	;volatile
  8185  000818  A4D8               	btfss	status,2,c
  8186  00081A  D758               	goto	l8058
  8187  00081C                     u8730:
  8188                           
  8189                           ;main.c: 524:     while(sens==0){
  8190  00081C  5058               	movf	_sens,w,c	;volatile
  8191  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  8192  000820  A4D8               	btfss	status,2,c
  8193  000822  0012               	return	
  8194  000824  D44B               	goto	l7886
  8195  000826                     __end_of_UI_main:
  8196                           	opt callstack 0
  8197                           
  8198 ;; *************** function _printf *****************
  8199 ;; Defined at:
  8200 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  8203 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  8204 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  8205 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
  8206 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
  8207 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
  8208 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
  8209 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
  8210 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
  8211 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
  8212 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  8213 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  8214 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  8215 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  8216 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  8217 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  8218 ;;		 -> STR_1(10), 
  8219 ;; Auto vars:     Size  Location     Type
  8220 ;;  ap              2  119[BANK0 ] PTR void [1]
  8221 ;;		 -> ?_printf(2), 
  8222 ;;  ret             2    0        int 
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  2  109[BANK0 ] int 
  8225 ;; Registers used:
  8226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8232 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8233 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8235 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8236 ;;Total ram usage:       12 bytes
  8237 ;; Hardware stack levels used:    1
  8238 ;; Hardware stack levels required when called:   13
  8239 ;; This function calls:
  8240 ;;		_vfprintf
  8241 ;; This function is called by:
  8242 ;;		_actuators_main
  8243 ;;		_stepper2
  8244 ;;		_stepper2_back
  8245 ;;		_full_drive
  8246 ;;		_print_echo
  8247 ;;		_ultrasonic_main
  8248 ;;		_number_deploy
  8249 ;;		_UI_main
  8250 ;;		_brake
  8251 ;;		_main
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text20
  8256  003C1A                     __ptext20:
  8257                           	opt callstack 0
  8258  003C1A                     _printf:
  8259                           	opt callstack 16
  8260                           
  8261                           ;incstack = 0
  8262  003C1A  0EEF               	movlw	low (?_printf+2)
  8263  003C1C  0100               	movlb	0	; () banked
  8264  003C1E  6FF7               	movwf	printf@ap& (0+255),b
  8265  003C20  0E00               	movlw	high (?_printf+2)
  8266  003C22  6FF8               	movwf	(printf@ap+1)& (0+255),b
  8267                           
  8268                           ; BSR set to: 0
  8269  003C24  0E00               	movlw	0
  8270  003C26  6FE5               	movwf	vfprintf@fp& (0+255),b
  8271  003C28  0E00               	movlw	0
  8272  003C2A  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  8273  003C2C  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  8274  003C30  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  8275  003C34  0EF7               	movlw	low printf@ap
  8276  003C36  6FE9               	movwf	vfprintf@ap& (0+255),b
  8277  003C38  0E00               	movlw	high printf@ap
  8278  003C3A  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  8279  003C3C  EC5A  F01C         	call	_vfprintf	;wreg free
  8280  003C40  0012               	return		;funcret
  8281  003C42                     __end_of_printf:
  8282                           	opt callstack 0
  8283                           
  8284 ;; *************** function _vfprintf *****************
  8285 ;; Defined at:
  8286 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  8289 ;;		 -> NULL(0), 
  8290 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  8291 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  8292 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  8293 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
  8294 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
  8295 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
  8296 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
  8297 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
  8298 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
  8299 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
  8300 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  8301 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  8302 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  8303 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  8304 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  8305 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  8306 ;;		 -> STR_1(10), 
  8307 ;;  ap              2  105[BANK0 ] PTR PTR void 
  8308 ;;		 -> printf@ap(2), 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  8311 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
  8312 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  8313 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
  8314 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
  8315 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
  8316 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
  8317 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
  8318 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
  8319 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
  8320 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  8321 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  8322 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  8323 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  8324 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  8325 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  8326 ;;		 -> STR_1(10), 
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  2  101[BANK0 ] int 
  8329 ;; Registers used:
  8330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8336 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;Total ram usage:        8 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; Hardware stack levels required when called:   12
  8343 ;; This function calls:
  8344 ;;		_vfpfcnvrt
  8345 ;; This function is called by:
  8346 ;;		_printf
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text21
  8351  0038B4                     __ptext21:
  8352                           	opt callstack 0
  8353  0038B4                     _vfprintf:
  8354                           	opt callstack 16
  8355                           
  8356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8357                           
  8358                           ;incstack = 0
  8359  0038B4  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8360  0038B8  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8361                           
  8362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8363  0038BC  0E00               	movlw	0
  8364  0038BE  6E49               	movwf	_nout+1,c
  8365  0038C0  0E00               	movlw	0
  8366  0038C2  6E48               	movwf	_nout,c
  8367                           
  8368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8369  0038C4  D014               	goto	l6886
  8370  0038C6                     l6884:
  8371                           
  8372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8373  0038C6  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8374  0038CA  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8375  0038CE  0EEB               	movlw	low vfprintf@cfmt
  8376  0038D0  0100               	movlb	0	; () banked
  8377  0038D2  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8378  0038D4  0E00               	movlw	high vfprintf@cfmt
  8379  0038D6  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8380  0038D8  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8381  0038DC  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8382  0038E0  EC4B  F009         	call	_vfpfcnvrt	;wreg free
  8383  0038E4  0100               	movlb	0	; () banked
  8384  0038E6  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8385  0038E8  2648               	addwf	_nout,f,c
  8386  0038EA  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8387  0038EC  2249               	addwfc	_nout+1,f,c
  8388  0038EE                     l6886:
  8389                           
  8390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8391  0038EE  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8392  0038F2  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8393  0038F6                     	if	0	;tblptru may be non-zero
  8394  0038F6                     	endif
  8395  0038F6                     	if	0	;tblptru may be non-zero
  8396  0038F6                     	endif
  8397  0038F6  0008               	tblrd		*
  8398  0038F8  50F5               	movf	tablat,w,c
  8399  0038FA  0900               	iorlw	0
  8400  0038FC  A4D8               	btfss	status,2,c
  8401  0038FE  D7E3               	goto	l6884
  8402                           
  8403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8404  003900  C048  F0E5         	movff	_nout,?_vfprintf
  8405  003904  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8406  003908  0012               	return		;funcret
  8407  00390A                     __end_of_vfprintf:
  8408                           	opt callstack 0
  8409                           
  8410 ;; *************** function _vfpfcnvrt *****************
  8411 ;; Defined at:
  8412 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8415 ;;		 -> NULL(0), 
  8416 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8417 ;;		 -> vfprintf@cfmt(2), 
  8418 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8419 ;;		 -> printf@ap(2), 
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;  llu             8   88[BANK0 ] unsigned long long 
  8422 ;;  ll              8   80[BANK0 ] long long 
  8423 ;;  f               4    0        long long 
  8424 ;;  vp              3    0        PTR void 
  8425 ;;  ct              3    0        unsigned char [3]
  8426 ;;  cp              3    0        PTR unsigned char 
  8427 ;;  done            2   97[BANK0 ] int 
  8428 ;;  i               2    0        int 
  8429 ;;  c               1   96[BANK0 ] unsigned char 
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  2   70[BANK0 ] int 
  8432 ;; Registers used:
  8433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8439 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;Total ram usage:       31 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:   11
  8446 ;; This function calls:
  8447 ;;		_atoi
  8448 ;;		_dtoa
  8449 ;;		_fputc
  8450 ;;		_isdigit
  8451 ;;		_xtoa
  8452 ;; This function is called by:
  8453 ;;		_vfprintf
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text22
  8458  001296                     __ptext22:
  8459                           	opt callstack 0
  8460  001296                     _vfpfcnvrt:
  8461                           	opt callstack 16
  8462                           
  8463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8464                           
  8465                           ;incstack = 0
  8466  001296  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8467  00129A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8468  00129E  CFDE FFF6          	movff	postinc2,tblptrl
  8469  0012A2  CFDD FFF7          	movff	postdec2,tblptrh
  8470  0012A6                     	if	0	;tblptru may be non-zero
  8471  0012A6                     	endif
  8472  0012A6                     	if	0	;tblptru may be non-zero
  8473  0012A6                     	endif
  8474  0012A6  0008               	tblrd		*
  8475  0012A8  50F5               	movf	tablat,w,c
  8476  0012AA  0A25               	xorlw	37
  8477  0012AC  A4D8               	btfss	status,2,c
  8478  0012AE  D1AD               	goto	l6864
  8479                           
  8480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8481  0012B0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8482  0012B4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8483  0012B8  2ADE               	incf	postinc2,f,c
  8484  0012BA  0E00               	movlw	0
  8485  0012BC  22DD               	addwfc	postdec2,f,c
  8486                           
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8488  0012BE  0E00               	movlw	0
  8489  0012C0  6E4B               	movwf	_width+1,c
  8490  0012C2  0E00               	movlw	0
  8491  0012C4  6E4A               	movwf	_width,c
  8492  0012C6  C04A  F04E         	movff	_width,_flags
  8493  0012CA  C04B  F04F         	movff	_width+1,_flags+1
  8494                           
  8495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8496  0012CE  684C               	setf	_prec,c
  8497  0012D0  684D               	setf	_prec+1,c
  8498                           
  8499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  8500  0012D2  0E00               	movlw	0
  8501  0012D4  0100               	movlb	0	; () banked
  8502  0012D6  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8503  0012D8  0E00               	movlw	0
  8504  0012DA  D014               	goto	L3
  8505  0012DC                     l6776:
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  8509  0012DC  804E               	bsf	_flags,0,c
  8510  0012DE                     l6778:
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  8514  0012DE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8515  0012E2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8516  0012E6  2ADE               	incf	postinc2,f,c
  8517  0012E8  0E00               	movlw	0
  8518  0012EA  22DD               	addwfc	postdec2,f,c
  8519                           
  8520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  8521  0012EC  D02E               	goto	l6802
  8522  0012EE                     l6780:
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  8526  0012EE  824E               	bsf	_flags,1,c
  8527  0012F0  D7F6               	goto	l6778
  8528  0012F2                     l6784:
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  8532  0012F2  844E               	bsf	_flags,2,c
  8533  0012F4  D7F4               	goto	l6778
  8534  0012F6                     l6788:
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  8538  0012F6  864E               	bsf	_flags,3,c
  8539  0012F8  D7F2               	goto	l6778
  8540  0012FA                     l6792:
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  8544  0012FA  884E               	bsf	_flags,4,c
  8545  0012FC  D7F0               	goto	l6778
  8546  0012FE                     l6796:
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  8550  0012FE  0E00               	movlw	0
  8551  001300  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  8552  001302  0E01               	movlw	1
  8553  001304                     L3:
  8554  001304  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  8555                           
  8556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  8557  001306  D021               	goto	l6802
  8558  001308                     l6800:
  8559                           
  8560                           ; BSR set to: 0
  8561  001308  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8562  00130C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8563  001310  CFDE FFF6          	movff	postinc2,tblptrl
  8564  001314  CFDD FFF7          	movff	postdec2,tblptrh
  8565  001318                     	if	0	;tblptru may be non-zero
  8566  001318                     	endif
  8567  001318                     	if	0	;tblptru may be non-zero
  8568  001318                     	endif
  8569  001318  0008               	tblrd		*
  8570  00131A  50F5               	movf	tablat,w,c
  8571  00131C  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8572  00131E  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8573                           
  8574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8575                           ; Switch size 1, requested type "simple"
  8576                           ; Number of cases is 1, Range of values is 0 to 0
  8577                           ; switch strategies available:
  8578                           ; Name         Instructions Cycles
  8579                           ; simple_byte            4     3 (average)
  8580                           ;	Chosen strategy is simple_byte
  8581  001320  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8582  001322  0A00               	xorlw	0	; case 0
  8583  001324  A4D8               	btfss	status,2,c
  8584  001326  D7EB               	goto	l6796
  8585                           
  8586                           ; BSR set to: 0
  8587                           ; Switch size 1, requested type "simple"
  8588                           ; Number of cases is 5, Range of values is 32 to 48
  8589                           ; switch strategies available:
  8590                           ; Name         Instructions Cycles
  8591                           ; simple_byte           16     9 (average)
  8592                           ;	Chosen strategy is simple_byte
  8593  001328  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8594  00132A  0A20               	xorlw	32	; case 32
  8595  00132C  B4D8               	btfsc	status,2,c
  8596  00132E  D7E3               	goto	l6788
  8597  001330  0A03               	xorlw	3	; case 35
  8598  001332  B4D8               	btfsc	status,2,c
  8599  001334  D7E2               	goto	l6792
  8600  001336  0A08               	xorlw	8	; case 43
  8601  001338  B4D8               	btfsc	status,2,c
  8602  00133A  D7DB               	goto	l6784
  8603  00133C  0A06               	xorlw	6	; case 45
  8604  00133E  B4D8               	btfsc	status,2,c
  8605  001340  D7CD               	goto	l6776
  8606  001342  0A1D               	xorlw	29	; case 48
  8607  001344  B4D8               	btfsc	status,2,c
  8608  001346  D7D3               	goto	l6780
  8609  001348  D7DA               	goto	l6796
  8610  00134A                     l6802:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  8614  00134A  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  8615  00134C  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  8616  00134E  B4D8               	btfsc	status,2,c
  8617  001350  D7DB               	goto	l6800
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  8621  001352  B04E               	btfsc	_flags,0,c
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  8625  001354  924E               	bcf	_flags,1,c
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  8629  001356  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8630  00135A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8631  00135E  CFDE FFF6          	movff	postinc2,tblptrl
  8632  001362  CFDD FFF7          	movff	postdec2,tblptrh
  8633  001366                     	if	0	;tblptru may be non-zero
  8634  001366                     	endif
  8635  001366                     	if	0	;tblptru may be non-zero
  8636  001366                     	endif
  8637  001366  0008               	tblrd		*
  8638  001368  50F5               	movf	tablat,w,c
  8639  00136A  0A2A               	xorlw	42
  8640  00136C  A4D8               	btfss	status,2,c
  8641  00136E  D023               	goto	l6814
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  8645  001370  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8646  001374  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8647  001378  2ADE               	incf	postinc2,f,c
  8648  00137A  0E00               	movlw	0
  8649  00137C  22DD               	addwfc	postdec2,f,c
  8650                           
  8651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8652  00137E  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8653  001382  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8654  001386  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8655  00138A  0E02               	movlw	2
  8656  00138C  26DE               	addwf	postinc2,f,c
  8657  00138E  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8658  001392  0E00               	movlw	0
  8659  001394  22DD               	addwfc	postdec2,f,c
  8660  001396  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8661  00139A  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8662  00139E  CFDE F04A          	movff	postinc2,_width
  8663  0013A2  CFDD F04B          	movff	postdec2,_width+1
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  8667  0013A6  AE4B               	btfss	_width+1,7,c
  8668  0013A8  D040               	goto	u7450
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  8672  0013AA  804E               	bsf	_flags,0,c
  8673                           
  8674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  8675  0013AC  6C4A               	negf	_width,c
  8676  0013AE  1E4B               	comf	_width+1,f,c
  8677  0013B0  B0D8               	btfsc	status,0,c
  8678  0013B2  2A4B               	incf	_width+1,f,c
  8679  0013B4  D03A               	goto	u7450
  8680  0013B6                     l6814:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  8684  0013B6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8685  0013BA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8686  0013BE  CFDE F087          	movff	postinc2,atoi@s
  8687  0013C2  CFDD F088          	movff	postdec2,atoi@s+1
  8688  0013C6  ECBE  F013         	call	_atoi	;wreg free
  8689  0013CA  C087  F04A         	movff	?_atoi,_width
  8690  0013CE  C088  F04B         	movff	?_atoi+1,_width+1
  8691                           
  8692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8693  0013D2  D007               	goto	l6818
  8694  0013D4                     l6816:
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  8698  0013D4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8699  0013D8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8700  0013DC  2ADE               	incf	postinc2,f,c
  8701  0013DE  0E00               	movlw	0
  8702  0013E0  22DD               	addwfc	postdec2,f,c
  8703  0013E2                     l6818:
  8704  0013E2  0ED0               	movlw	208
  8705  0013E4  0100               	movlb	0	; () banked
  8706  0013E6  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  8707  0013E8  0EFF               	movlw	255
  8708  0013EA  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8709  0013EC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8710  0013F0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8711  0013F4  CFDE FFF6          	movff	postinc2,tblptrl
  8712  0013F8  CFDD FFF7          	movff	postdec2,tblptrh
  8713  0013FC                     	if	0	;tblptru may be non-zero
  8714  0013FC                     	endif
  8715  0013FC                     	if	0	;tblptru may be non-zero
  8716  0013FC                     	endif
  8717  0013FC  0008               	tblrd		*
  8718  0013FE  50F5               	movf	tablat,w,c
  8719  001400  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8720  001402  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8721  001404  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  8722  001406  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8723  001408  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8724  00140A  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8725  00140C  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8726  00140E  E106               	bnz	u7430
  8727  001410  0E0A               	movlw	10
  8728  001412  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8729  001414  B0D8               	btfsc	status,0,c
  8730  001416  D002               	goto	u7430
  8731  001418  0E01               	movlw	1
  8732  00141A  D001               	goto	u7440
  8733  00141C                     u7430:
  8734  00141C  0E00               	movlw	0
  8735  00141E                     u7440:
  8736  00141E  6FE3               	movwf	_vfpfcnvrt$1129& (0+255),b
  8737  001420  6BE4               	clrf	(_vfpfcnvrt$1129+1)& (0+255),b
  8738                           
  8739                           ; BSR set to: 0
  8740  001422  51E3               	movf	_vfpfcnvrt$1129& (0+255),w,b
  8741  001424  11E4               	iorwf	(_vfpfcnvrt$1129+1)& (0+255),w,b
  8742  001426  A4D8               	btfss	status,2,c
  8743  001428  D7D5               	goto	l6816
  8744  00142A                     u7450:
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8748  00142A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8749  00142E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8750  001432  CFDE FFF6          	movff	postinc2,tblptrl
  8751  001436  CFDD FFF7          	movff	postdec2,tblptrh
  8752  00143A                     	if	0	;tblptru may be non-zero
  8753  00143A                     	endif
  8754  00143A                     	if	0	;tblptru may be non-zero
  8755  00143A                     	endif
  8756  00143A  0008               	tblrd		*
  8757  00143C  50F5               	movf	tablat,w,c
  8758  00143E  0A64               	xorlw	100
  8759  001440  B4D8               	btfsc	status,2,c
  8760  001442  D00D               	goto	u7470
  8761                           
  8762                           ; BSR set to: 0
  8763  001444  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8764  001448  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8765  00144C  CFDE FFF6          	movff	postinc2,tblptrl
  8766  001450  CFDD FFF7          	movff	postdec2,tblptrh
  8767  001454                     	if	0	;tblptru may be non-zero
  8768  001454                     	endif
  8769  001454                     	if	0	;tblptru may be non-zero
  8770  001454                     	endif
  8771  001454  0008               	tblrd		*
  8772  001456  50F5               	movf	tablat,w,c
  8773  001458  0A69               	xorlw	105
  8774  00145A  A4D8               	btfss	status,2,c
  8775  00145C  D03F               	goto	l6834
  8776  00145E                     u7470:
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8780  00145E  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8781  001462  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8782  001466  2ADE               	incf	postinc2,f,c
  8783  001468  0E00               	movlw	0
  8784  00146A  22DD               	addwfc	postdec2,f,c
  8785                           
  8786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8787  00146C  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8788  001470  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8789  001474  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8790  001478  0E02               	movlw	2
  8791  00147A  26DE               	addwf	postinc2,f,c
  8792  00147C  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8793  001480  0E00               	movlw	0
  8794  001482  22DD               	addwfc	postdec2,f,c
  8795  001484  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8796  001488  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8797  00148C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  8798  001490  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  8799  001494  0E00               	movlw	0
  8800  001496  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8801  001498  0EFF               	movlw	-1
  8802  00149A  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8803  00149C  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8804  00149E  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8805  0014A0  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8806  0014A2  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8807  0014A4  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8811  0014A6  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  8812  0014AA  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8813  0014AE  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  8814  0014B2  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8815  0014B6  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8816  0014BA  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8817  0014BE  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8818  0014C2  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8819  0014C6  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8820  0014CA  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8821  0014CE  ECFC  F00D         	call	_dtoa	;wreg free
  8822  0014D2  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  8823  0014D6  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8824  0014DA  0012               	return	
  8825  0014DC                     l6834:
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8829  0014DC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8830  0014E0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8831  0014E4  CFDE FFF6          	movff	postinc2,tblptrl
  8832  0014E8  CFDD FFF7          	movff	postdec2,tblptrh
  8833  0014EC                     	if	0	;tblptru may be non-zero
  8834  0014EC                     	endif
  8835  0014EC                     	if	0	;tblptru may be non-zero
  8836  0014EC                     	endif
  8837  0014EC  0008               	tblrd		*
  8838  0014EE  50F5               	movf	tablat,w,c
  8839  0014F0  0A78               	xorlw	120
  8840  0014F2  B4D8               	btfsc	status,2,c
  8841  0014F4  D00D               	goto	u7490
  8842                           
  8843                           ; BSR set to: 0
  8844  0014F6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8845  0014FA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8846  0014FE  CFDE FFF6          	movff	postinc2,tblptrl
  8847  001502  CFDD FFF7          	movff	postdec2,tblptrh
  8848  001506                     	if	0	;tblptru may be non-zero
  8849  001506                     	endif
  8850  001506                     	if	0	;tblptru may be non-zero
  8851  001506                     	endif
  8852  001506  0008               	tblrd		*
  8853  001508  50F5               	movf	tablat,w,c
  8854  00150A  0A58               	xorlw	88
  8855  00150C  A4D8               	btfss	status,2,c
  8856  00150E  D04D               	goto	l6848
  8857  001510                     u7490:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  8861  001510  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8862  001514  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8863  001518  CFDE FFF6          	movff	postinc2,tblptrl
  8864  00151C  CFDD FFF7          	movff	postdec2,tblptrh
  8865  001520                     	if	0	;tblptru may be non-zero
  8866  001520                     	endif
  8867  001520                     	if	0	;tblptru may be non-zero
  8868  001520                     	endif
  8869  001520  0008               	tblrd		*
  8870  001522  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  8871                           
  8872                           ; BSR set to: 0
  8873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  8874  001526  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8875  00152A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8876  00152E  2ADE               	incf	postinc2,f,c
  8877  001530  0E00               	movlw	0
  8878  001532  22DD               	addwfc	postdec2,f,c
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  8882  001534  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8883  001538  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8884  00153C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  8885  001540  0E02               	movlw	2
  8886  001542  26DE               	addwf	postinc2,f,c
  8887  001544  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  8888  001548  0E00               	movlw	0
  8889  00154A  22DD               	addwfc	postdec2,f,c
  8890  00154C  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8891  001550  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8892  001554  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  8893  001558  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  8894  00155C  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8895  001560  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8896  001564  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8897  001566  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8898  001568  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8899  00156A  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8900  00156C  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8901  00156E  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  8905  001570  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  8906  001574  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8907  001578  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  8908  00157C  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  8909  001580  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  8910  001584  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  8911  001588  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  8912  00158C  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  8913  001590  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  8914  001594  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  8915  001598  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  8916  00159C  EC20  F00F         	call	_xtoa	;wreg free
  8917  0015A0  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  8918  0015A4  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8919  0015A8  0012               	return	
  8920  0015AA                     l6848:
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8924  0015AA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8925  0015AE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8926  0015B2  CFDE FFF6          	movff	postinc2,tblptrl
  8927  0015B6  CFDD FFF7          	movff	postdec2,tblptrh
  8928  0015BA                     	if	0	;tblptru may be non-zero
  8929  0015BA                     	endif
  8930  0015BA                     	if	0	;tblptru may be non-zero
  8931  0015BA                     	endif
  8932  0015BA  0008               	tblrd		*
  8933  0015BC  50F5               	movf	tablat,w,c
  8934  0015BE  0A25               	xorlw	37
  8935  0015C0  A4D8               	btfss	status,2,c
  8936  0015C2  D017               	goto	l6858
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8940  0015C4  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8941  0015C8  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8942  0015CC  2ADE               	incf	postinc2,f,c
  8943  0015CE  0E00               	movlw	0
  8944  0015D0  22DD               	addwfc	postdec2,f,c
  8945                           
  8946                           ; BSR set to: 0
  8947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8948  0015D2  0E00               	movlw	0
  8949  0015D4  6F85               	movwf	(fputc@c+1)& (0+255),b
  8950  0015D6  0E25               	movlw	37
  8951  0015D8  6F84               	movwf	fputc@c& (0+255),b
  8952  0015DA  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8953  0015DE  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8954  0015E2  EC94  F01B         	call	_fputc	;wreg free
  8955  0015E6                     l6854:
  8956                           
  8957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8958  0015E6  0E00               	movlw	0
  8959  0015E8  0100               	movlb	0	; () banked
  8960  0015EA  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8961  0015EC  0E01               	movlw	1
  8962  0015EE  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8963  0015F0  0012               	return	
  8964  0015F2                     l6858:
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8968  0015F2  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8969  0015F6  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8970  0015FA  2ADE               	incf	postinc2,f,c
  8971  0015FC  0E00               	movlw	0
  8972  0015FE  22DD               	addwfc	postdec2,f,c
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8976  001600  0E00               	movlw	0
  8977  001602  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8978  001604  0E00               	movlw	0
  8979  001606  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  8980  001608  0012               	return	
  8981  00160A                     l6864:
  8982                           
  8983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8984  00160A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8985  00160E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8986  001612  CFDE FFF6          	movff	postinc2,tblptrl
  8987  001616  CFDD FFF7          	movff	postdec2,tblptrh
  8988  00161A                     	if	0	;tblptru may be non-zero
  8989  00161A                     	endif
  8990  00161A                     	if	0	;tblptru may be non-zero
  8991  00161A                     	endif
  8992  00161A  0008               	tblrd		*
  8993  00161C  50F5               	movf	tablat,w,c
  8994  00161E  0100               	movlb	0	; () banked
  8995  001620  6F84               	movwf	fputc@c& (0+255),b
  8996  001622  6B85               	clrf	(fputc@c+1)& (0+255),b
  8997  001624  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  8998  001628  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8999  00162C  EC94  F01B         	call	_fputc	;wreg free
  9000                           
  9001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9002  001630  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9003  001634  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9004  001638  2ADE               	incf	postinc2,f,c
  9005  00163A  0E00               	movlw	0
  9006  00163C  22DD               	addwfc	postdec2,f,c
  9007  00163E  D7D3               	goto	l6854
  9008  001640                     __end_of_vfpfcnvrt:
  9009                           	opt callstack 0
  9010                           
  9011 ;; *************** function _xtoa *****************
  9012 ;; Defined at:
  9013 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9016 ;;		 -> NULL(0), 
  9017 ;;  d               8   33[BANK0 ] unsigned long long 
  9018 ;;  x               1   41[BANK0 ] unsigned char 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  n               8   58[BANK0 ] unsigned long long 
  9021 ;;  c               2   68[BANK0 ] int 
  9022 ;;  i               2   66[BANK0 ] int 
  9023 ;;  w               2   56[BANK0 ] int 
  9024 ;;  p               2   54[BANK0 ] int 
  9025 ;; Return value:  Size  Location     Type
  9026 ;;                  2   31[BANK0 ] int 
  9027 ;; Registers used:
  9028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9034 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9036 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;Total ram usage:       39 bytes
  9039 ;; Hardware stack levels used:    1
  9040 ;; Hardware stack levels required when called:   10
  9041 ;; This function calls:
  9042 ;;		_isalpha
  9043 ;;		_isupper
  9044 ;;		_pad
  9045 ;;		_toupper
  9046 ;; This function is called by:
  9047 ;;		_vfpfcnvrt
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text23
  9052  001E40                     __ptext23:
  9053                           	opt callstack 0
  9054  001E40                     _xtoa:
  9055                           	opt callstack 16
  9056                           
  9057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9058                           
  9059                           ;incstack = 0
  9060  001E40  AE4D               	btfss	_prec+1,7,c
  9061                           
  9062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9063  001E42  924E               	bcf	_flags,1,c
  9064                           
  9065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9066  001E44  BE4D               	btfsc	_prec+1,7,c
  9067  001E46  D005               	goto	u7150
  9068  001E48  504D               	movf	_prec+1,w,c
  9069  001E4A  E109               	bnz	l634
  9070  001E4C  044C               	decf	_prec,w,c
  9071  001E4E  B0D8               	btfsc	status,0,c
  9072  001E50  D006               	goto	l634
  9073  001E52                     u7150:
  9074  001E52  0E00               	movlw	0
  9075  001E54  0100               	movlb	0	; () banked
  9076  001E56  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  9077  001E58  0E01               	movlw	1
  9078  001E5A  6FB6               	movwf	xtoa@p& (0+255),b
  9079  001E5C  D004               	goto	l636
  9080  001E5E                     l634:
  9081  001E5E  C04C  F0B6         	movff	_prec,xtoa@p
  9082  001E62  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  9083  001E66                     l636:
  9084                           
  9085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9086  001E66  C04A  F0B8         	movff	_width,xtoa@w
  9087  001E6A  C04B  F0B9         	movff	_width+1,xtoa@w+1
  9088                           
  9089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9090  001E6E  A84E               	btfss	_flags,4,c
  9091  001E70  D005               	goto	l6668
  9092                           
  9093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9094  001E72  0100               	movlb	0	; () banked
  9095  001E74  0EFE               	movlw	254
  9096  001E76  27B8               	addwf	xtoa@w& (0+255),f,b
  9097  001E78  0EFF               	movlw	255
  9098  001E7A  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  9099  001E7C                     l6668:
  9100                           
  9101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9102  001E7C  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  9103  001E80  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  9104  001E84  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  9105  001E88  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  9106  001E8C  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  9107  001E90  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  9108  001E94  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  9109  001E98  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  9110                           
  9111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9112  001E9C  0E00               	movlw	0
  9113  001E9E  0100               	movlb	0	; () banked
  9114  001EA0  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  9115  001EA2  0E1F               	movlw	31
  9116  001EA4  6FC2               	movwf	xtoa@i& (0+255),b
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9120  001EA6  0E00               	movlw	0
  9121  001EA8  0102               	movlb	2	; () banked
  9122  001EAA  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9123                           
  9124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9125  001EAC  D094               	goto	l6704
  9126  001EAE                     l6674:
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9130  001EAE  07C2               	decf	xtoa@i& (0+255),f,b
  9131  001EB0  A0D8               	btfss	status,0,c
  9132  001EB2  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9136  001EB4  0E0F               	movlw	15
  9137  001EB6  15BA               	andwf	xtoa@n& (0+255),w,b
  9138  001EB8  6FC4               	movwf	xtoa@c& (0+255),b
  9139  001EBA  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9143  001EBC  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  9144  001EBE  D008               	goto	l6682
  9145  001EC0  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  9146  001EC2  E104               	bnz	u7170
  9147  001EC4  0E0A               	movlw	10
  9148  001EC6  5DC4               	subwf	xtoa@c& (0+255),w,b
  9149  001EC8  A0D8               	btfss	status,0,c
  9150  001ECA  D002               	goto	l6682
  9151  001ECC                     u7170:
  9152                           
  9153                           ; BSR set to: 0
  9154  001ECC  0E57               	movlw	87
  9155  001ECE  D001               	goto	L4
  9156  001ED0                     l6682:
  9157                           
  9158                           ; BSR set to: 0
  9159  001ED0  0E30               	movlw	48
  9160  001ED2                     L4:
  9161  001ED2  25C4               	addwf	xtoa@c& (0+255),w,b
  9162  001ED4  6FC4               	movwf	xtoa@c& (0+255),b
  9163  001ED6  0E00               	movlw	0
  9164  001ED8  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  9165  001EDA  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  9166                           
  9167                           ; BSR set to: 0
  9168                           
  9169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9170  001EDC  0EBF               	movlw	191
  9171  001EDE  6FAA               	movwf	??_xtoa& (0+255),b
  9172  001EE0  0EFF               	movlw	255
  9173  001EE2  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9174  001EE4  51A9               	movf	xtoa@x& (0+255),w,b
  9175  001EE6  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9176  001EE8  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  9177  001EEA  51AA               	movf	??_xtoa& (0+255),w,b
  9178  001EEC  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9179  001EEE  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9180  001EF0  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9181  001EF2  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9182  001EF4  E106               	bnz	u7180
  9183  001EF6  0E1A               	movlw	26
  9184  001EF8  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9185  001EFA  B0D8               	btfsc	status,0,c
  9186  001EFC  D002               	goto	u7180
  9187  001EFE  0E01               	movlw	1
  9188  001F00  D001               	goto	u7190
  9189  001F02                     u7180:
  9190  001F02  0E00               	movlw	0
  9191  001F04                     u7190:
  9192  001F04  6FB2               	movwf	_xtoa$1114& (0+255),b
  9193  001F06  6BB3               	clrf	(_xtoa$1114+1)& (0+255),b
  9194                           
  9195                           ; BSR set to: 0
  9196  001F08  51B2               	movf	_xtoa$1114& (0+255),w,b
  9197  001F0A  11B3               	iorwf	(_xtoa$1114+1)& (0+255),w,b
  9198  001F0C  B4D8               	btfsc	status,2,c
  9199  001F0E  D027               	goto	l6696
  9200                           
  9201                           ; BSR set to: 0
  9202  001F10  0E9F               	movlw	159
  9203  001F12  6FAA               	movwf	??_xtoa& (0+255),b
  9204  001F14  0EFF               	movlw	255
  9205  001F16  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9206  001F18  0E20               	movlw	32
  9207  001F1A  11C4               	iorwf	xtoa@c& (0+255),w,b
  9208  001F1C  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9209  001F1E  0E00               	movlw	0
  9210  001F20  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  9211  001F22  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  9212  001F24  51AA               	movf	??_xtoa& (0+255),w,b
  9213  001F26  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9214  001F28  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9215  001F2A  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9216  001F2C  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9217  001F2E  E106               	bnz	u7210
  9218  001F30  0E1A               	movlw	26
  9219  001F32  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9220  001F34  B0D8               	btfsc	status,0,c
  9221  001F36  D002               	goto	u7210
  9222  001F38  0E01               	movlw	1
  9223  001F3A  D001               	goto	u7220
  9224  001F3C                     u7210:
  9225  001F3C  0E00               	movlw	0
  9226  001F3E                     u7220:
  9227  001F3E  6FB4               	movwf	_xtoa$1115& (0+255),b
  9228  001F40  6BB5               	clrf	(_xtoa$1115+1)& (0+255),b
  9229                           
  9230                           ; BSR set to: 0
  9231  001F42  51B4               	movf	_xtoa$1115& (0+255),w,b
  9232  001F44  11B5               	iorwf	(_xtoa$1115+1)& (0+255),w,b
  9233  001F46  B4D8               	btfsc	status,2,c
  9234  001F48  D00A               	goto	l6696
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9238  001F4A  C0C4  F086         	movff	xtoa@c,toupper@c
  9239  001F4E  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  9240  001F52  ECAE  F01C         	call	_toupper	;wreg free
  9241  001F56  C086  F0C4         	movff	?_toupper,xtoa@c
  9242  001F5A  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  9243  001F5E                     l6696:
  9244                           
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9246  001F5E  0E80               	movlw	low _dbuf
  9247  001F60  0100               	movlb	0	; () banked
  9248  001F62  25C2               	addwf	xtoa@i& (0+255),w,b
  9249  001F64  6ED9               	movwf	fsr2l,c
  9250  001F66  0E02               	movlw	high _dbuf
  9251  001F68  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9252  001F6A  6EDA               	movwf	fsr2h,c
  9253  001F6C  C0C4  FFDF         	movff	xtoa@c,indf2
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9257  001F70  07B6               	decf	xtoa@p& (0+255),f,b
  9258  001F72  A0D8               	btfss	status,0,c
  9259  001F74  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9263  001F76  07B8               	decf	xtoa@w& (0+255),f,b
  9264  001F78  A0D8               	btfss	status,0,c
  9265  001F7A  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9269  001F7C  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  9270  001F80  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  9271  001F84  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  9272  001F88  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  9273  001F8C  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  9274  001F90  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  9275  001F94  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  9276  001F98  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  9277  001F9C  0E05               	movlw	5
  9278  001F9E  D009               	goto	u7240
  9279  001FA0                     u7245:
  9280  001FA0  90D8               	bcf	status,0,c
  9281  001FA2  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  9282  001FA4  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  9283  001FA6  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  9284  001FA8  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  9285  001FAA  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  9286  001FAC  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  9287  001FAE  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  9288  001FB0  33AA               	rrcf	??_xtoa& (0+255),f,b
  9289  001FB2                     u7240:
  9290  001FB2  2EE8               	decfsz	wreg,f,c
  9291  001FB4  D7F5               	goto	u7245
  9292  001FB6  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  9293  001FBA  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  9294  001FBE  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  9295  001FC2  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  9296  001FC6  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  9297  001FCA  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  9298  001FCE  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  9299  001FD2  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  9300  001FD6                     l6704:
  9301                           
  9302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9303  001FD6  0100               	movlb	0	; () banked
  9304  001FD8  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  9305  001FDA  D020               	goto	u7290
  9306  001FDC  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  9307  001FDE  E104               	bnz	u7250
  9308  001FE0  0E02               	movlw	2
  9309  001FE2  5DC2               	subwf	xtoa@i& (0+255),w,b
  9310  001FE4  A0D8               	btfss	status,0,c
  9311  001FE6  D01A               	goto	u7290
  9312  001FE8                     u7250:
  9313                           
  9314                           ; BSR set to: 0
  9315  001FE8  51BA               	movf	xtoa@n& (0+255),w,b
  9316  001FEA  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  9317  001FEC  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  9318  001FEE  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  9319  001FF0  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  9320  001FF2  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  9321  001FF4  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  9322  001FF6  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  9323  001FF8  A4D8               	btfss	status,2,c
  9324  001FFA  D759               	goto	l6674
  9325                           
  9326                           ; BSR set to: 0
  9327  001FFC  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9328  001FFE  D005               	goto	u7270
  9329  002000  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9330  002002  E102               	bnz	u7271
  9331  002004  05B6               	decf	xtoa@p& (0+255),w,b
  9332  002006  B0D8               	btfsc	status,0,c
  9333  002008                     u7271:
  9334  002008  D752               	goto	l6674
  9335  00200A                     u7270:
  9336                           
  9337                           ; BSR set to: 0
  9338  00200A  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9339  00200C  D007               	goto	u7290
  9340  00200E  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9341  002010  E103               	bnz	u7280
  9342  002012  05B8               	decf	xtoa@w& (0+255),w,b
  9343  002014  A0D8               	btfss	status,0,c
  9344  002016  D002               	goto	u7290
  9345  002018                     u7280:
  9346                           
  9347                           ; BSR set to: 0
  9348  002018  B24E               	btfsc	_flags,1,c
  9349  00201A  D749               	goto	l6674
  9350  00201C                     u7290:
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9354  00201C  A84E               	btfss	_flags,4,c
  9355  00201E  D016               	goto	l6720
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9359  002020  07C2               	decf	xtoa@i& (0+255),f,b
  9360  002022  A0D8               	btfss	status,0,c
  9361  002024  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9365  002026  0E80               	movlw	low _dbuf
  9366  002028  25C2               	addwf	xtoa@i& (0+255),w,b
  9367  00202A  6ED9               	movwf	fsr2l,c
  9368  00202C  0E02               	movlw	high _dbuf
  9369  00202E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9370  002030  6EDA               	movwf	fsr2h,c
  9371  002032  C0A9  FFDF         	movff	xtoa@x,indf2
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9375  002036  07C2               	decf	xtoa@i& (0+255),f,b
  9376  002038  A0D8               	btfss	status,0,c
  9377  00203A  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9378                           
  9379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9380  00203C  0E80               	movlw	low _dbuf
  9381  00203E  25C2               	addwf	xtoa@i& (0+255),w,b
  9382  002040  6ED9               	movwf	fsr2l,c
  9383  002042  0E02               	movlw	high _dbuf
  9384  002044  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9385  002046  6EDA               	movwf	fsr2h,c
  9386  002048  0E30               	movlw	48
  9387  00204A  6EDF               	movwf	indf2,c
  9388  00204C                     l6720:
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9392  00204C  C09F  F094         	movff	xtoa@fp,pad@fp
  9393  002050  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9394  002054  0E80               	movlw	low _dbuf
  9395  002056  25C2               	addwf	xtoa@i& (0+255),w,b
  9396  002058  6F96               	movwf	pad@buf& (0+255),b
  9397  00205A  0E02               	movlw	high _dbuf
  9398  00205C  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9399  00205E  6F97               	movwf	(pad@buf+1)& (0+255),b
  9400  002060  C0B8  F098         	movff	xtoa@w,pad@p
  9401  002064  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9402  002068  EC03  F01A         	call	_pad	;wreg free
  9403  00206C  C094  F09F         	movff	?_pad,?_xtoa
  9404  002070  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9405  002074  0012               	return		;funcret
  9406  002076                     __end_of_xtoa:
  9407                           	opt callstack 0
  9408                           
  9409 ;; *************** function _toupper *****************
  9410 ;; Defined at:
  9411 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;  c               2    6[BANK0 ] int 
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;		None
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  2    6[BANK0 ] int 
  9418 ;; Registers used:
  9419 ;;		wreg, status,2, status,0
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9427 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9428 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9429 ;;Total ram usage:        8 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    4
  9432 ;; This function calls:
  9433 ;;		_islower
  9434 ;; This function is called by:
  9435 ;;		_xtoa
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text24
  9440  00395C                     __ptext24:
  9441                           	opt callstack 0
  9442  00395C                     _toupper:
  9443                           	opt callstack 21
  9444                           
  9445                           ;incstack = 0
  9446  00395C  0E9F               	movlw	159
  9447  00395E  0100               	movlb	0	; () banked
  9448  003960  6F88               	movwf	??_toupper& (0+255),b
  9449  003962  0EFF               	movlw	255
  9450  003964  6F89               	movwf	(??_toupper+1)& (0+255),b
  9451  003966  C086  F08A         	movff	toupper@c,??_toupper+2
  9452  00396A  C087  F08B         	movff	toupper@c+1,??_toupper+3
  9453  00396E  5188               	movf	??_toupper& (0+255),w,b
  9454  003970  278A               	addwf	(??_toupper+2)& (0+255),f,b
  9455  003972  5189               	movf	(??_toupper+1)& (0+255),w,b
  9456  003974  238B               	addwfc	(??_toupper+3)& (0+255),f,b
  9457  003976  518B               	movf	(??_toupper+3)& (0+255),w,b
  9458  003978  E106               	bnz	u6790
  9459  00397A  0E1A               	movlw	26
  9460  00397C  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
  9461  00397E  B0D8               	btfsc	status,0,c
  9462  003980  D002               	goto	u6790
  9463  003982  0E01               	movlw	1
  9464  003984  D001               	goto	u6800
  9465  003986                     u6790:
  9466  003986  0E00               	movlw	0
  9467  003988                     u6800:
  9468  003988  6F8C               	movwf	_toupper$1679& (0+255),b
  9469  00398A  6B8D               	clrf	(_toupper$1679+1)& (0+255),b
  9470                           
  9471                           ; BSR set to: 0
  9472  00398C  518C               	movf	_toupper$1679& (0+255),w,b
  9473  00398E  118D               	iorwf	(_toupper$1679+1)& (0+255),w,b
  9474  003990  B4D8               	btfsc	status,2,c
  9475  003992  D005               	goto	l1474
  9476                           
  9477                           ; BSR set to: 0
  9478  003994  0E5F               	movlw	95
  9479  003996  1586               	andwf	toupper@c& (0+255),w,b
  9480  003998  6F86               	movwf	?_toupper& (0+255),b
  9481  00399A  6B87               	clrf	(?_toupper+1)& (0+255),b
  9482  00399C  0012               	return	
  9483  00399E                     l1474:
  9484                           
  9485                           ; BSR set to: 0
  9486  00399E  C086  F086         	movff	toupper@c,?_toupper
  9487  0039A2  C087  F087         	movff	toupper@c+1,?_toupper+1
  9488                           
  9489                           ; BSR set to: 0
  9490  0039A6  0012               	return		;funcret
  9491  0039A8                     __end_of_toupper:
  9492                           	opt callstack 0
  9493                           
  9494 ;; *************** function _islower *****************
  9495 ;; Defined at:
  9496 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;  c               2    0[BANK0 ] int 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  2    0[BANK0 ] int 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9512 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9513 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9514 ;;Total ram usage:        6 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:    3
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_toupper
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           	psect	text25
  9525  003AFE                     __ptext25:
  9526                           	opt callstack 0
  9527  003AFE                     _islower:
  9528                           	opt callstack 21
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;incstack = 0
  9532  003AFE  0E9F               	movlw	159
  9533  003B00  0100               	movlb	0	; () banked
  9534  003B02  6F82               	movwf	??_islower& (0+255),b
  9535  003B04  0EFF               	movlw	255
  9536  003B06  6F83               	movwf	(??_islower+1)& (0+255),b
  9537  003B08  C080  F084         	movff	islower@c,??_islower+2
  9538  003B0C  C081  F085         	movff	islower@c+1,??_islower+3
  9539  003B10  5182               	movf	??_islower& (0+255),w,b
  9540  003B12  2784               	addwf	(??_islower+2)& (0+255),f,b
  9541  003B14  5183               	movf	(??_islower+1)& (0+255),w,b
  9542  003B16  2385               	addwfc	(??_islower+3)& (0+255),f,b
  9543  003B18  5185               	movf	(??_islower+3)& (0+255),w,b
  9544  003B1A  E106               	bnz	u6680
  9545  003B1C  0E1A               	movlw	26
  9546  003B1E  5D84               	subwf	(??_islower+2)& (0+255),w,b
  9547  003B20  B0D8               	btfsc	status,0,c
  9548  003B22  D002               	goto	u6680
  9549  003B24  0E01               	movlw	1
  9550  003B26  D001               	goto	u6690
  9551  003B28                     u6680:
  9552  003B28  0E00               	movlw	0
  9553  003B2A                     u6690:
  9554  003B2A  6F80               	movwf	?_islower& (0+255),b
  9555  003B2C  6B81               	clrf	(?_islower+1)& (0+255),b
  9556                           
  9557                           ; BSR set to: 0
  9558  003B2E  0012               	return		;funcret
  9559  003B30                     __end_of_islower:
  9560                           	opt callstack 0
  9561                           
  9562 ;; *************** function _isupper *****************
  9563 ;; Defined at:
  9564 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  c               2    0[BANK0 ] int 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;		None
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  2    0[BANK0 ] int 
  9571 ;; Registers used:
  9572 ;;		wreg, status,2, status,0
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9578 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9580 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9581 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9582 ;;Total ram usage:        6 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; Hardware stack levels required when called:    3
  9585 ;; This function calls:
  9586 ;;		Nothing
  9587 ;; This function is called by:
  9588 ;;		_xtoa
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text26
  9593  003B30                     __ptext26:
  9594                           	opt callstack 0
  9595  003B30                     _isupper:
  9596                           	opt callstack 22
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;incstack = 0
  9600  003B30  0EBF               	movlw	191
  9601  003B32  0100               	movlb	0	; () banked
  9602  003B34  6F82               	movwf	??_isupper& (0+255),b
  9603  003B36  0EFF               	movlw	255
  9604  003B38  6F83               	movwf	(??_isupper+1)& (0+255),b
  9605  003B3A  C080  F084         	movff	isupper@c,??_isupper+2
  9606  003B3E  C081  F085         	movff	isupper@c+1,??_isupper+3
  9607  003B42  5182               	movf	??_isupper& (0+255),w,b
  9608  003B44  2784               	addwf	(??_isupper+2)& (0+255),f,b
  9609  003B46  5183               	movf	(??_isupper+1)& (0+255),w,b
  9610  003B48  2385               	addwfc	(??_isupper+3)& (0+255),f,b
  9611  003B4A  5185               	movf	(??_isupper+3)& (0+255),w,b
  9612  003B4C  E106               	bnz	u6750
  9613  003B4E  0E1A               	movlw	26
  9614  003B50  5D84               	subwf	(??_isupper+2)& (0+255),w,b
  9615  003B52  B0D8               	btfsc	status,0,c
  9616  003B54  D002               	goto	u6750
  9617  003B56  0E01               	movlw	1
  9618  003B58  D001               	goto	u6760
  9619  003B5A                     u6750:
  9620  003B5A  0E00               	movlw	0
  9621  003B5C                     u6760:
  9622  003B5C  6F80               	movwf	?_isupper& (0+255),b
  9623  003B5E  6B81               	clrf	(?_isupper+1)& (0+255),b
  9624                           
  9625                           ; BSR set to: 0
  9626  003B60  0012               	return		;funcret
  9627  003B62                     __end_of_isupper:
  9628                           	opt callstack 0
  9629                           
  9630 ;; *************** function _isalpha *****************
  9631 ;; Defined at:
  9632 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;  c               2    0[BANK0 ] int 
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;		None
  9637 ;; Return value:  Size  Location     Type
  9638 ;;                  2    0[BANK0 ] int 
  9639 ;; Registers used:
  9640 ;;		wreg, status,2, status,0
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9648 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9649 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;Total ram usage:        6 bytes
  9651 ;; Hardware stack levels used:    1
  9652 ;; Hardware stack levels required when called:    3
  9653 ;; This function calls:
  9654 ;;		Nothing
  9655 ;; This function is called by:
  9656 ;;		_xtoa
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text27
  9661  003A62                     __ptext27:
  9662                           	opt callstack 0
  9663  003A62                     _isalpha:
  9664                           	opt callstack 22
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;incstack = 0
  9668  003A62  0E9F               	movlw	159
  9669  003A64  0100               	movlb	0	; () banked
  9670  003A66  6F82               	movwf	??_isalpha& (0+255),b
  9671  003A68  0EFF               	movlw	255
  9672  003A6A  6F83               	movwf	(??_isalpha+1)& (0+255),b
  9673  003A6C  0E20               	movlw	32
  9674  003A6E  1180               	iorwf	isalpha@c& (0+255),w,b
  9675  003A70  6F84               	movwf	(??_isalpha+2)& (0+255),b
  9676  003A72  0E00               	movlw	0
  9677  003A74  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
  9678  003A76  6F85               	movwf	(??_isalpha+3)& (0+255),b
  9679  003A78  5182               	movf	??_isalpha& (0+255),w,b
  9680  003A7A  2784               	addwf	(??_isalpha+2)& (0+255),f,b
  9681  003A7C  5183               	movf	(??_isalpha+1)& (0+255),w,b
  9682  003A7E  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
  9683  003A80  5185               	movf	(??_isalpha+3)& (0+255),w,b
  9684  003A82  E106               	bnz	u6770
  9685  003A84  0E1A               	movlw	26
  9686  003A86  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
  9687  003A88  B0D8               	btfsc	status,0,c
  9688  003A8A  D002               	goto	u6770
  9689  003A8C  0E01               	movlw	1
  9690  003A8E  D001               	goto	u6780
  9691  003A90                     u6770:
  9692  003A90  0E00               	movlw	0
  9693  003A92                     u6780:
  9694  003A92  6F80               	movwf	?_isalpha& (0+255),b
  9695  003A94  6B81               	clrf	(?_isalpha+1)& (0+255),b
  9696                           
  9697                           ; BSR set to: 0
  9698  003A96  0012               	return		;funcret
  9699  003A98                     __end_of_isalpha:
  9700                           	opt callstack 0
  9701                           
  9702 ;; *************** function _dtoa *****************
  9703 ;; Defined at:
  9704 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9707 ;;		 -> NULL(0), 
  9708 ;;  d               8   33[BANK0 ] long long 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  n               8   57[BANK0 ] long long 
  9711 ;;  i               2   65[BANK0 ] int 
  9712 ;;  s               2   55[BANK0 ] int 
  9713 ;;  w               2   53[BANK0 ] int 
  9714 ;;  p               2   51[BANK0 ] int 
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  2   31[BANK0 ] int 
  9717 ;; Registers used:
  9718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9724 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9725 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9726 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9727 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9728 ;;Total ram usage:       36 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:   10
  9731 ;; This function calls:
  9732 ;;		___aodiv
  9733 ;;		___aomod
  9734 ;;		_abs
  9735 ;;		_pad
  9736 ;; This function is called by:
  9737 ;;		_vfpfcnvrt
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text28
  9742  001BF8                     __ptext28:
  9743                           	opt callstack 0
  9744  001BF8                     _dtoa:
  9745                           	opt callstack 16
  9746                           
  9747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;incstack = 0
  9751  001BF8  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  9752  001BFC  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  9753  001C00  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  9754  001C04  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  9755  001C08  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  9756  001C0C  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  9757  001C10  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  9758  001C14  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  9759                           
  9760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9761  001C18  0100               	movlb	0	; () banked
  9762  001C1A  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  9763  001C1C  D002               	goto	u6990
  9764  001C1E  0E01               	movlw	1
  9765  001C20  D001               	goto	u7000
  9766  001C22                     u6990:
  9767  001C22  0E00               	movlw	0
  9768  001C24                     u7000:
  9769  001C24  6FB7               	movwf	dtoa@s& (0+255),b
  9770  001C26  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  9771                           
  9772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9773  001C28  51B7               	movf	dtoa@s& (0+255),w,b
  9774  001C2A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9775  001C2C  B4D8               	btfsc	status,2,c
  9776  001C2E  D010               	goto	l6602
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9780  001C30  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  9781  001C32  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  9782  001C34  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  9783  001C36  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  9784  001C38  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  9785  001C3A  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  9786  001C3C  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  9787  001C3E  6DB9               	negf	dtoa@n& (0+255),b
  9788  001C40  0E00               	movlw	0
  9789  001C42  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  9790  001C44  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  9791  001C46  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  9792  001C48  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  9793  001C4A  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  9794  001C4C  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  9795  001C4E  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  9796  001C50                     l6602:
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9800  001C50  AE4D               	btfss	_prec+1,7,c
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9804  001C52  924E               	bcf	_flags,1,c
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9808  001C54  BE4D               	btfsc	_prec+1,7,c
  9809  001C56  D005               	goto	u7030
  9810  001C58  504D               	movf	_prec+1,w,c
  9811  001C5A  E108               	bnz	l609
  9812  001C5C  044C               	decf	_prec,w,c
  9813  001C5E  B0D8               	btfsc	status,0,c
  9814  001C60  D005               	goto	l609
  9815  001C62                     u7030:
  9816                           
  9817                           ; BSR set to: 0
  9818  001C62  0E00               	movlw	0
  9819  001C64  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  9820  001C66  0E01               	movlw	1
  9821  001C68  6FB3               	movwf	dtoa@p& (0+255),b
  9822  001C6A  D004               	goto	l611
  9823  001C6C                     l609:
  9824                           
  9825                           ; BSR set to: 0
  9826  001C6C  C04C  F0B3         	movff	_prec,dtoa@p
  9827  001C70  C04D  F0B4         	movff	_prec+1,dtoa@p+1
  9828  001C74                     l611:
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9832  001C74  C04A  F0B5         	movff	_width,dtoa@w
  9833  001C78  C04B  F0B6         	movff	_width+1,dtoa@w+1
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9837  001C7C  51B7               	movf	dtoa@s& (0+255),w,b
  9838  001C7E  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  9839  001C80  A4D8               	btfss	status,2,c
  9840  001C82  D002               	goto	u7050
  9841                           
  9842                           ; BSR set to: 0
  9843  001C84  A44E               	btfss	_flags,2,c
  9844  001C86  D003               	goto	l6616
  9845  001C88                     u7050:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9849  001C88  07B5               	decf	dtoa@w& (0+255),f,b
  9850  001C8A  A0D8               	btfss	status,0,c
  9851  001C8C  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9852  001C8E                     l6616:
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9856  001C8E  0E00               	movlw	0
  9857  001C90  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  9858  001C92  0E1F               	movlw	31
  9859  001C94  6FC1               	movwf	dtoa@i& (0+255),b
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9863  001C96  0E00               	movlw	0
  9864  001C98  0102               	movlb	2	; () banked
  9865  001C9A  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9866                           
  9867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9868  001C9C  D07D               	goto	l6630
  9869  001C9E                     l6620:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9873  001C9E  07C1               	decf	dtoa@i& (0+255),f,b
  9874  001CA0  A0D8               	btfss	status,0,c
  9875  001CA2  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9879  001CA4  0E80               	movlw	low _dbuf
  9880  001CA6  25C1               	addwf	dtoa@i& (0+255),w,b
  9881  001CA8  6ED9               	movwf	fsr2l,c
  9882  001CAA  0E02               	movlw	high _dbuf
  9883  001CAC  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  9884  001CAE  6EDA               	movwf	fsr2h,c
  9885  001CB0  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  9886  001CB4  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  9887  001CB8  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  9888  001CBC  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  9889  001CC0  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  9890  001CC4  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  9891  001CC8  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  9892  001CCC  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  9893  001CD0  0E0A               	movlw	10
  9894  001CD2  6F88               	movwf	___aomod@divisor& (0+255),b
  9895  001CD4  0E00               	movlw	0
  9896  001CD6  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  9897  001CD8  0E00               	movlw	0
  9898  001CDA  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  9899  001CDC  0E00               	movlw	0
  9900  001CDE  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  9901  001CE0  0E00               	movlw	0
  9902  001CE2  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  9903  001CE4  0E00               	movlw	0
  9904  001CE6  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  9905  001CE8  0E00               	movlw	0
  9906  001CEA  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  9907  001CEC  0E00               	movlw	0
  9908  001CEE  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  9909  001CF0  EC9B  F015         	call	___aomod	;wreg free
  9910  001CF4  C080  F0A9         	movff	?___aomod,??_dtoa
  9911  001CF8  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  9912  001CFC  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  9913  001D00  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  9914  001D04  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  9915  001D08  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  9916  001D0C  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  9917  001D10  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  9918  001D14  C0A9  F092         	movff	??_dtoa,abs@a
  9919  001D18  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  9920  001D1C  EC4C  F01D         	call	_abs	;wreg free
  9921  001D20  0100               	movlb	0	; () banked
  9922  001D22  5192               	movf	?_abs& (0+255),w,b
  9923  001D24  0F30               	addlw	48
  9924  001D26  6EDF               	movwf	indf2,c
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9928  001D28  07B3               	decf	dtoa@p& (0+255),f,b
  9929  001D2A  A0D8               	btfss	status,0,c
  9930  001D2C  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9934  001D2E  07B5               	decf	dtoa@w& (0+255),f,b
  9935  001D30  A0D8               	btfss	status,0,c
  9936  001D32  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9940  001D34  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  9941  001D38  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  9942  001D3C  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  9943  001D40  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  9944  001D44  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  9945  001D48  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  9946  001D4C  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  9947  001D50  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  9948  001D54  0E0A               	movlw	10
  9949  001D56  6F88               	movwf	___aodiv@divisor& (0+255),b
  9950  001D58  0E00               	movlw	0
  9951  001D5A  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  9952  001D5C  0E00               	movlw	0
  9953  001D5E  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  9954  001D60  0E00               	movlw	0
  9955  001D62  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  9956  001D64  0E00               	movlw	0
  9957  001D66  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  9958  001D68  0E00               	movlw	0
  9959  001D6A  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  9960  001D6C  0E00               	movlw	0
  9961  001D6E  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  9962  001D70  0E00               	movlw	0
  9963  001D72  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  9964  001D74  EC19  F013         	call	___aodiv	;wreg free
  9965  001D78  C080  F0B9         	movff	?___aodiv,dtoa@n
  9966  001D7C  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  9967  001D80  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  9968  001D84  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  9969  001D88  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  9970  001D8C  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  9971  001D90  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  9972  001D94  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  9973  001D98                     l6630:
  9974                           
  9975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9976  001D98  0100               	movlb	0	; () banked
  9977  001D9A  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  9978  001D9C  D01F               	goto	u7100
  9979  001D9E  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  9980  001DA0  E103               	bnz	u7060
  9981  001DA2  05C1               	decf	dtoa@i& (0+255),w,b
  9982  001DA4  A0D8               	btfss	status,0,c
  9983  001DA6  D01A               	goto	u7100
  9984  001DA8                     u7060:
  9985                           
  9986                           ; BSR set to: 0
  9987  001DA8  51B9               	movf	dtoa@n& (0+255),w,b
  9988  001DAA  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  9989  001DAC  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  9990  001DAE  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  9991  001DB0  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  9992  001DB2  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  9993  001DB4  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  9994  001DB6  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  9995  001DB8  A4D8               	btfss	status,2,c
  9996  001DBA  D771               	goto	l6620
  9997                           
  9998                           ; BSR set to: 0
  9999  001DBC  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
 10000  001DBE  D005               	goto	u7080
 10001  001DC0  51B4               	movf	(dtoa@p+1)& (0+255),w,b
 10002  001DC2  E102               	bnz	u7081
 10003  001DC4  05B3               	decf	dtoa@p& (0+255),w,b
 10004  001DC6  B0D8               	btfsc	status,0,c
 10005  001DC8                     u7081:
 10006  001DC8  D76A               	goto	l6620
 10007  001DCA                     u7080:
 10008                           
 10009                           ; BSR set to: 0
 10010  001DCA  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
 10011  001DCC  D007               	goto	u7100
 10012  001DCE  51B6               	movf	(dtoa@w+1)& (0+255),w,b
 10013  001DD0  E103               	bnz	u7090
 10014  001DD2  05B5               	decf	dtoa@w& (0+255),w,b
 10015  001DD4  A0D8               	btfss	status,0,c
 10016  001DD6  D002               	goto	u7100
 10017  001DD8                     u7090:
 10018                           
 10019                           ; BSR set to: 0
 10020  001DD8  B24E               	btfsc	_flags,1,c
 10021  001DDA  D761               	goto	l6620
 10022  001DDC                     u7100:
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10026  001DDC  51B7               	movf	dtoa@s& (0+255),w,b
 10027  001DDE  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10028  001DE0  A4D8               	btfss	status,2,c
 10029  001DE2  D002               	goto	u7120
 10030                           
 10031                           ; BSR set to: 0
 10032  001DE4  A44E               	btfss	_flags,2,c
 10033  001DE6  D017               	goto	l6654
 10034  001DE8                     u7120:
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10038  001DE8  07C1               	decf	dtoa@i& (0+255),f,b
 10039  001DEA  A0D8               	btfss	status,0,c
 10040  001DEC  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10044  001DEE  51B7               	movf	dtoa@s& (0+255),w,b
 10045  001DF0  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10046  001DF2  A4D8               	btfss	status,2,c
 10047  001DF4  D004               	goto	l6650
 10048                           
 10049                           ; BSR set to: 0
 10050  001DF6  0E00               	movlw	0
 10051  001DF8  6FB2               	movwf	(_dtoa$1103+1)& (0+255),b
 10052  001DFA  0E2B               	movlw	43
 10053  001DFC  D003               	goto	L5
 10054  001DFE                     l6650:
 10055                           
 10056                           ; BSR set to: 0
 10057  001DFE  0E00               	movlw	0
 10058  001E00  6FB2               	movwf	(_dtoa$1103+1)& (0+255),b
 10059  001E02  0E2D               	movlw	45
 10060  001E04                     L5:
 10061  001E04  6FB1               	movwf	_dtoa$1103& (0+255),b
 10062                           
 10063                           ; BSR set to: 0
 10064  001E06  0E80               	movlw	low _dbuf
 10065  001E08  25C1               	addwf	dtoa@i& (0+255),w,b
 10066  001E0A  6ED9               	movwf	fsr2l,c
 10067  001E0C  0E02               	movlw	high _dbuf
 10068  001E0E  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10069  001E10  6EDA               	movwf	fsr2h,c
 10070  001E12  C0B1  FFDF         	movff	_dtoa$1103,indf2
 10071  001E16                     l6654:
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10075  001E16  C09F  F094         	movff	dtoa@fp,pad@fp
 10076  001E1A  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
 10077  001E1E  0E80               	movlw	low _dbuf
 10078  001E20  25C1               	addwf	dtoa@i& (0+255),w,b
 10079  001E22  6F96               	movwf	pad@buf& (0+255),b
 10080  001E24  0E02               	movlw	high _dbuf
 10081  001E26  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10082  001E28  6F97               	movwf	(pad@buf+1)& (0+255),b
 10083  001E2A  C0B5  F098         	movff	dtoa@w,pad@p
 10084  001E2E  C0B6  F099         	movff	dtoa@w+1,pad@p+1
 10085  001E32  EC03  F01A         	call	_pad	;wreg free
 10086  001E36  C094  F09F         	movff	?_pad,?_dtoa
 10087  001E3A  C095  F0A0         	movff	?_pad+1,?_dtoa+1
 10088  001E3E  0012               	return		;funcret
 10089  001E40                     __end_of_dtoa:
 10090                           	opt callstack 0
 10091                           
 10092 ;; *************** function _pad *****************
 10093 ;; Defined at:
 10094 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
 10097 ;;		 -> NULL(0), 
 10098 ;;  buf             2   22[BANK0 ] PTR unsigned char 
 10099 ;;		 -> dbuf(32), 
 10100 ;;  p               2   24[BANK0 ] int 
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;  w               2   29[BANK0 ] int 
 10103 ;;  i               2   27[BANK0 ] int 
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  2   20[BANK0 ] int 
 10106 ;; Registers used:
 10107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10113 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;Total ram usage:       11 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; Hardware stack levels required when called:    9
 10120 ;; This function calls:
 10121 ;;		_fputc
 10122 ;;		_fputs
 10123 ;;		_strlen
 10124 ;; This function is called by:
 10125 ;;		_dtoa
 10126 ;;		_xtoa
 10127 ;; This function uses a non-reentrant model
 10128 ;;
 10129                           
 10130                           	psect	text29
 10131  003406                     __ptext29:
 10132                           	opt callstack 0
 10133  003406                     _pad:
 10134                           	opt callstack 16
 10135                           
 10136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10137                           
 10138                           ;incstack = 0
 10139  003406  A04E               	btfss	_flags,0,c
 10140  003408  D00A               	goto	l6458
 10141                           
 10142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10143  00340A  C096  F08D         	movff	pad@buf,fputs@s
 10144  00340E  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10145  003412  C094  F08F         	movff	pad@fp,fputs@fp
 10146  003416  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10147  00341A  EC13  F01D         	call	_fputs	;wreg free
 10148  00341E                     l6458:
 10149                           
 10150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10151  00341E  0100               	movlb	0	; () banked
 10152  003420  BF99               	btfsc	(pad@p+1)& (0+255),7,b
 10153  003422  D005               	goto	l6462
 10154                           
 10155                           ; BSR set to: 0
 10156  003424  C098  F09D         	movff	pad@p,pad@w
 10157  003428  C099  F09E         	movff	pad@p+1,pad@w+1
 10158  00342C  D004               	goto	l598
 10159  00342E                     l6462:
 10160                           
 10161                           ; BSR set to: 0
 10162  00342E  0E00               	movlw	0
 10163  003430  6F9E               	movwf	(pad@w+1)& (0+255),b
 10164  003432  0E00               	movlw	0
 10165  003434  6F9D               	movwf	pad@w& (0+255),b
 10166  003436                     l598:
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10170  003436  0E00               	movlw	0
 10171  003438  6F9C               	movwf	(pad@i+1)& (0+255),b
 10172  00343A  0E00               	movlw	0
 10173  00343C  6F9B               	movwf	pad@i& (0+255),b
 10174                           
 10175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10176  00343E  D00D               	goto	l6468
 10177  003440                     l6464:
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10181  003440  0E00               	movlw	0
 10182  003442  6F85               	movwf	(fputc@c+1)& (0+255),b
 10183  003444  0E20               	movlw	32
 10184  003446  6F84               	movwf	fputc@c& (0+255),b
 10185  003448  C094  F086         	movff	pad@fp,fputc@fp
 10186  00344C  C095  F087         	movff	pad@fp+1,fputc@fp+1
 10187  003450  EC94  F01B         	call	_fputc	;wreg free
 10188                           
 10189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10190  003454  0100               	movlb	0	; () banked
 10191  003456  4B9B               	infsnz	pad@i& (0+255),f,b
 10192  003458  2B9C               	incf	(pad@i+1)& (0+255),f,b
 10193  00345A                     l6468:
 10194                           
 10195                           ; BSR set to: 0
 10196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10197  00345A  519D               	movf	pad@w& (0+255),w,b
 10198  00345C  5D9B               	subwf	pad@i& (0+255),w,b
 10199  00345E  519C               	movf	(pad@i+1)& (0+255),w,b
 10200  003460  0A80               	xorlw	128
 10201  003462  6F9A               	movwf	??_pad& (0+255),b
 10202  003464  519E               	movf	(pad@w+1)& (0+255),w,b
 10203  003466  0A80               	xorlw	128
 10204  003468  599A               	subwfb	??_pad& (0+255),w,b
 10205  00346A  A0D8               	btfss	status,0,c
 10206  00346C  D7E9               	goto	l6464
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10210  00346E  B04E               	btfsc	_flags,0,c
 10211  003470  D00A               	goto	l6472
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10215  003472  C096  F08D         	movff	pad@buf,fputs@s
 10216  003476  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10217  00347A  C094  F08F         	movff	pad@fp,fputs@fp
 10218  00347E  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10219  003482  EC13  F01D         	call	_fputs	;wreg free
 10220  003486                     l6472:
 10221                           
 10222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10223  003486  C096  F080         	movff	pad@buf,strlen@s
 10224  00348A  C097  F081         	movff	pad@buf+1,strlen@s+1
 10225  00348E  ECCA  F01D         	call	_strlen	;wreg free
 10226  003492  0100               	movlb	0	; () banked
 10227  003494  519D               	movf	pad@w& (0+255),w,b
 10228  003496  2580               	addwf	?_strlen& (0+255),w,b
 10229  003498  6F94               	movwf	?_pad& (0+255),b
 10230  00349A  519E               	movf	(pad@w+1)& (0+255),w,b
 10231  00349C  2181               	addwfc	(?_strlen+1)& (0+255),w,b
 10232  00349E  6F95               	movwf	(?_pad+1)& (0+255),b
 10233                           
 10234                           ; BSR set to: 0
 10235  0034A0  0012               	return		;funcret
 10236  0034A2                     __end_of_pad:
 10237                           	opt callstack 0
 10238                           
 10239 ;; *************** function _strlen *****************
 10240 ;; Defined at:
 10241 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 10244 ;;		 -> dbuf(32), 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 10247 ;;		 -> dbuf(32), 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  2    0[BANK0 ] unsigned int 
 10250 ;; Registers used:
 10251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10257 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;Total ram usage:        4 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    3
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		_pad
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text30
 10272  003B94                     __ptext30:
 10273                           	opt callstack 0
 10274  003B94                     _strlen:
 10275                           	opt callstack 21
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;incstack = 0
 10279  003B94  C080  F082         	movff	strlen@s,strlen@a
 10280  003B98  C081  F083         	movff	strlen@s+1,strlen@a+1
 10281  003B9C  D003               	goto	l6440
 10282  003B9E                     l6438:
 10283  003B9E  0100               	movlb	0	; () banked
 10284  003BA0  4B80               	infsnz	strlen@s& (0+255),f,b
 10285  003BA2  2B81               	incf	(strlen@s+1)& (0+255),f,b
 10286  003BA4                     l6440:
 10287  003BA4  C080  FFD9         	movff	strlen@s,fsr2l
 10288  003BA8  C081  FFDA         	movff	strlen@s+1,fsr2h
 10289  003BAC  50DF               	movf	indf2,w,c
 10290  003BAE  A4D8               	btfss	status,2,c
 10291  003BB0  D7F6               	goto	l6438
 10292  003BB2  0100               	movlb	0	; () banked
 10293  003BB4  5182               	movf	strlen@a& (0+255),w,b
 10294  003BB6  5D80               	subwf	strlen@s& (0+255),w,b
 10295  003BB8  6F80               	movwf	?_strlen& (0+255),b
 10296  003BBA  5183               	movf	(strlen@a+1)& (0+255),w,b
 10297  003BBC  5981               	subwfb	(strlen@s+1)& (0+255),w,b
 10298  003BBE  6F81               	movwf	(?_strlen+1)& (0+255),b
 10299                           
 10300                           ; BSR set to: 0
 10301  003BC0  0012               	return		;funcret
 10302  003BC2                     __end_of_strlen:
 10303                           	opt callstack 0
 10304                           
 10305 ;; *************** function _fputs *****************
 10306 ;; Defined at:
 10307 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 10310 ;;		 -> dbuf(32), 
 10311 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 10312 ;;		 -> NULL(0), 
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;  i               2   18[BANK0 ] int 
 10315 ;;  c               1   17[BANK0 ] unsigned char 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  2   13[BANK0 ] int 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10329 ;;Total ram usage:        7 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:    8
 10332 ;; This function calls:
 10333 ;;		_fputc
 10334 ;; This function is called by:
 10335 ;;		_pad
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text31
 10340  003A26                     __ptext31:
 10341                           	opt callstack 0
 10342  003A26                     _fputs:
 10343                           	opt callstack 16
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;incstack = 0
 10347  003A26  0E00               	movlw	0
 10348  003A28  0100               	movlb	0	; () banked
 10349  003A2A  6F93               	movwf	(fputs@i+1)& (0+255),b
 10350  003A2C  0E00               	movlw	0
 10351  003A2E  6F92               	movwf	fputs@i& (0+255),b
 10352  003A30  D00C               	goto	l6434
 10353  003A32                     l6430:
 10354                           
 10355                           ; BSR set to: 0
 10356  003A32  C091  F084         	movff	fputs@c,fputc@c
 10357  003A36  6B85               	clrf	(fputc@c+1)& (0+255),b
 10358  003A38  C08F  F086         	movff	fputs@fp,fputc@fp
 10359  003A3C  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10360  003A40  EC94  F01B         	call	_fputc	;wreg free
 10361  003A44  0100               	movlb	0	; () banked
 10362  003A46  4B92               	infsnz	fputs@i& (0+255),f,b
 10363  003A48  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10364  003A4A                     l6434:
 10365                           
 10366                           ; BSR set to: 0
 10367  003A4A  5192               	movf	fputs@i& (0+255),w,b
 10368  003A4C  258D               	addwf	fputs@s& (0+255),w,b
 10369  003A4E  6ED9               	movwf	fsr2l,c
 10370  003A50  5193               	movf	(fputs@i+1)& (0+255),w,b
 10371  003A52  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10372  003A54  6EDA               	movwf	fsr2h,c
 10373  003A56  50DF               	movf	indf2,w,c
 10374  003A58  6F91               	movwf	fputs@c& (0+255),b
 10375  003A5A  5191               	movf	fputs@c& (0+255),w,b
 10376  003A5C  B4D8               	btfsc	status,2,c
 10377  003A5E  0012               	return	
 10378  003A60  D7E8               	goto	l6430
 10379  003A62                     __end_of_fputs:
 10380                           	opt callstack 0
 10381                           
 10382 ;; *************** function _fputc *****************
 10383 ;; Defined at:
 10384 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  c               2    4[BANK0 ] int 
 10387 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10388 ;;		 -> NULL(0), 
 10389 ;; Auto vars:     Size  Location     Type
 10390 ;;		None
 10391 ;; Return value:  Size  Location     Type
 10392 ;;                  2    4[BANK0 ] int 
 10393 ;; Registers used:
 10394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10395 ;; Tracked objects:
 10396 ;;		On entry : 0/0
 10397 ;;		On exit  : 0/0
 10398 ;;		Unchanged: 0/0
 10399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10402 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10403 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10404 ;;Total ram usage:        9 bytes
 10405 ;; Hardware stack levels used:    1
 10406 ;; Hardware stack levels required when called:    7
 10407 ;; This function calls:
 10408 ;;		_putch
 10409 ;; This function is called by:
 10410 ;;		_pad
 10411 ;;		_vfpfcnvrt
 10412 ;;		_fputs
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text32
 10417  003728                     __ptext32:
 10418                           	opt callstack 0
 10419  003728                     _fputc:
 10420                           	opt callstack 16
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;incstack = 0
 10424  003728  0100               	movlb	0	; () banked
 10425  00372A  5186               	movf	fputc@fp& (0+255),w,b
 10426  00372C  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10427  00372E  B4D8               	btfsc	status,2,c
 10428  003730  D004               	goto	u6630
 10429                           
 10430                           ; BSR set to: 0
 10431  003732  5186               	movf	fputc@fp& (0+255),w,b
 10432  003734  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10433  003736  A4D8               	btfss	status,2,c
 10434  003738  D004               	goto	l6420
 10435  00373A                     u6630:
 10436                           
 10437                           ; BSR set to: 0
 10438  00373A  5184               	movf	fputc@c& (0+255),w,b
 10439  00373C  EC6B  F01E         	call	_putch
 10440  003740  0012               	return	
 10441  003742                     l6420:
 10442                           
 10443                           ; BSR set to: 0
 10444  003742  EE20 F004          	lfsr	2,4
 10445  003746  5186               	movf	fputc@fp& (0+255),w,b
 10446  003748  26D9               	addwf	fsr2l,f,c
 10447  00374A  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10448  00374C  22DA               	addwfc	fsr2h,f,c
 10449  00374E  50DE               	movf	postinc2,w,c
 10450  003750  10DE               	iorwf	postinc2,w,c
 10451  003752  B4D8               	btfsc	status,2,c
 10452  003754  D016               	goto	u6650
 10453                           
 10454                           ; BSR set to: 0
 10455  003756  EE20 F004          	lfsr	2,4
 10456  00375A  5186               	movf	fputc@fp& (0+255),w,b
 10457  00375C  26D9               	addwf	fsr2l,f,c
 10458  00375E  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10459  003760  22DA               	addwfc	fsr2h,f,c
 10460  003762  EE10 F002          	lfsr	1,2
 10461  003766  5186               	movf	fputc@fp& (0+255),w,b
 10462  003768  26E1               	addwf	fsr1l,f,c
 10463  00376A  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10464  00376C  22E2               	addwfc	fsr1h,f,c
 10465  00376E  50DE               	movf	postinc2,w,c
 10466  003770  5CE6               	subwf	postinc1,w,c
 10467  003772  50E6               	movf	postinc1,w,c
 10468  003774  0A80               	xorlw	128
 10469  003776  6F8C               	movwf	(??_fputc+4)& (0+255),b
 10470  003778  50DE               	movf	postinc2,w,c
 10471  00377A  0A80               	xorlw	128
 10472  00377C  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 10473  00377E  B0D8               	btfsc	status,0,c
 10474  003780  0012               	return	
 10475  003782                     u6650:
 10476                           
 10477                           ; BSR set to: 0
 10478  003782  EE20 F002          	lfsr	2,2
 10479  003786  5186               	movf	fputc@fp& (0+255),w,b
 10480  003788  26D9               	addwf	fsr2l,f,c
 10481  00378A  5187               	movf	(fputc@fp+1)& (0+255),w,b
 10482  00378C  22DA               	addwfc	fsr2h,f,c
 10483  00378E  2ADE               	incf	postinc2,f,c
 10484  003790  0E00               	movlw	0
 10485  003792  22DD               	addwfc	postdec2,f,c
 10486  003794  0012               	return		;funcret
 10487  003796                     __end_of_fputc:
 10488                           	opt callstack 0
 10489                           
 10490 ;; *************** function _putch *****************
 10491 ;; Defined at:
 10492 ;;		line 102 in file "lcd.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;  data            1    wreg     unsigned char 
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;  data            1    3[BANK0 ] unsigned char 
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  1    wreg      void 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2, status,0, cstack
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10509 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10510 ;;Total ram usage:        1 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; Hardware stack levels required when called:    6
 10513 ;; This function calls:
 10514 ;;		_send_byte
 10515 ;; This function is called by:
 10516 ;;		_fputc
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           	psect	text33
 10521  003CD6                     __ptext33:
 10522                           	opt callstack 0
 10523  003CD6                     _putch:
 10524                           	opt callstack 16
 10525                           
 10526                           ;incstack = 0
 10527                           ;putch@data stored from wreg
 10528  003CD6  0100               	movlb	0	; () banked
 10529  003CD8  6F83               	movwf	putch@data& (0+255),b
 10530                           
 10531                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 10532  003CDA  848C               	bsf	3980,2,c	;volatile
 10533                           
 10534                           ;lcd.c: 104:     send_byte((unsigned char)data);
 10535  003CDC  0100               	movlb	0	; () banked
 10536  003CDE  5183               	movf	putch@data& (0+255),w,b
 10537  003CE0  EC55  F01E         	call	_send_byte
 10538  003CE4  0012               	return		;funcret
 10539  003CE6                     __end_of_putch:
 10540                           	opt callstack 0
 10541                           
 10542 ;; *************** function _abs *****************
 10543 ;; Defined at:
 10544 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  a               2   18[BANK0 ] int 
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;		None
 10549 ;; Return value:  Size  Location     Type
 10550 ;;                  2   18[BANK0 ] int 
 10551 ;; Registers used:
 10552 ;;		wreg, status,2, status,0
 10553 ;; Tracked objects:
 10554 ;;		On entry : 0/0
 10555 ;;		On exit  : 0/0
 10556 ;;		Unchanged: 0/0
 10557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10561 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10562 ;;Total ram usage:        4 bytes
 10563 ;; Hardware stack levels used:    1
 10564 ;; Hardware stack levels required when called:    3
 10565 ;; This function calls:
 10566 ;;		Nothing
 10567 ;; This function is called by:
 10568 ;;		_ultrasonic_main
 10569 ;;		_dtoa
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text34
 10574  003A98                     __ptext34:
 10575                           	opt callstack 0
 10576  003A98                     _abs:
 10577                           	opt callstack 22
 10578                           
 10579                           ;incstack = 0
 10580  003A98  0100               	movlb	0	; () banked
 10581  003A9A  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 10582  003A9C  D005               	goto	u6700
 10583  003A9E  5193               	movf	(abs@a+1)& (0+255),w,b
 10584  003AA0  E110               	bnz	l1376
 10585  003AA2  0592               	decf	abs@a& (0+255),w,b
 10586  003AA4  B0D8               	btfsc	status,0,c
 10587  003AA6  D00D               	goto	l1376
 10588  003AA8                     u6700:
 10589                           
 10590                           ; BSR set to: 0
 10591  003AA8  C092  F094         	movff	abs@a,??_abs
 10592  003AAC  C093  F095         	movff	abs@a+1,??_abs+1
 10593  003AB0  1F94               	comf	??_abs& (0+255),f,b
 10594  003AB2  1F95               	comf	(??_abs+1)& (0+255),f,b
 10595  003AB4  4B94               	infsnz	??_abs& (0+255),f,b
 10596  003AB6  2B95               	incf	(??_abs+1)& (0+255),f,b
 10597  003AB8  C094  F092         	movff	??_abs,?_abs
 10598  003ABC  C095  F093         	movff	??_abs+1,?_abs+1
 10599  003AC0  0012               	return	
 10600  003AC2                     l1376:
 10601                           
 10602                           ; BSR set to: 0
 10603  003AC2  C092  F092         	movff	abs@a,?_abs
 10604  003AC6  C093  F093         	movff	abs@a+1,?_abs+1
 10605                           
 10606                           ; BSR set to: 0
 10607  003ACA  0012               	return		;funcret
 10608  003ACC                     __end_of_abs:
 10609                           	opt callstack 0
 10610                           
 10611 ;; *************** function ___aomod *****************
 10612 ;; Defined at:
 10613 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;  dividend        8    0[BANK0 ] long long 
 10616 ;;  divisor         8    8[BANK0 ] long long 
 10617 ;; Auto vars:     Size  Location     Type
 10618 ;;  sign            1   17[BANK0 ] unsigned char 
 10619 ;;  counter         1   16[BANK0 ] unsigned char 
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  8    0[BANK0 ] long long 
 10622 ;; Registers used:
 10623 ;;		wreg, status,2, status,0
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10629 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10630 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10632 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10633 ;;Total ram usage:       18 bytes
 10634 ;; Hardware stack levels used:    1
 10635 ;; Hardware stack levels required when called:    3
 10636 ;; This function calls:
 10637 ;;		Nothing
 10638 ;; This function is called by:
 10639 ;;		_dtoa
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           	psect	text35
 10644  002B36                     __ptext35:
 10645                           	opt callstack 0
 10646  002B36                     ___aomod:
 10647                           	opt callstack 22
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;incstack = 0
 10651  002B36  0E00               	movlw	0
 10652  002B38  0100               	movlb	0	; () banked
 10653  002B3A  6F91               	movwf	___aomod@sign& (0+255),b
 10654                           
 10655                           ; BSR set to: 0
 10656  002B3C  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10657  002B3E  D012               	goto	l6556
 10658                           
 10659                           ; BSR set to: 0
 10660  002B40  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10661  002B42  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10662  002B44  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10663  002B46  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10664  002B48  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10665  002B4A  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10666  002B4C  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10667  002B4E  6D80               	negf	___aomod@dividend& (0+255),b
 10668  002B50  0E00               	movlw	0
 10669  002B52  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10670  002B54  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10671  002B56  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10672  002B58  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10673  002B5A  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10674  002B5C  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10675  002B5E  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10676                           
 10677                           ; BSR set to: 0
 10678  002B60  0E01               	movlw	1
 10679  002B62  6F91               	movwf	___aomod@sign& (0+255),b
 10680  002B64                     l6556:
 10681                           
 10682                           ; BSR set to: 0
 10683  002B64  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10684  002B66  D010               	goto	l6560
 10685                           
 10686                           ; BSR set to: 0
 10687  002B68  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 10688  002B6A  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 10689  002B6C  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 10690  002B6E  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 10691  002B70  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 10692  002B72  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 10693  002B74  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 10694  002B76  6D88               	negf	___aomod@divisor& (0+255),b
 10695  002B78  0E00               	movlw	0
 10696  002B7A  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10697  002B7C  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10698  002B7E  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10699  002B80  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10700  002B82  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10701  002B84  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10702  002B86  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10703  002B88                     l6560:
 10704                           
 10705                           ; BSR set to: 0
 10706  002B88  5188               	movf	___aomod@divisor& (0+255),w,b
 10707  002B8A  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10708  002B8C  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10709  002B8E  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10710  002B90  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10711  002B92  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10712  002B94  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10713  002B96  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10714  002B98  B4D8               	btfsc	status,2,c
 10715  002B9A  D03C               	goto	l6576
 10716                           
 10717                           ; BSR set to: 0
 10718  002B9C  0E01               	movlw	1
 10719  002B9E  6F90               	movwf	___aomod@counter& (0+255),b
 10720  002BA0  D00A               	goto	l6566
 10721  002BA2                     l6564:
 10722                           
 10723                           ; BSR set to: 0
 10724  002BA2  90D8               	bcf	status,0,c
 10725  002BA4  3788               	rlcf	___aomod@divisor& (0+255),f,b
 10726  002BA6  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10727  002BA8  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10728  002BAA  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10729  002BAC  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10730  002BAE  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10731  002BB0  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10732  002BB2  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10733  002BB4  2B90               	incf	___aomod@counter& (0+255),f,b
 10734  002BB6                     l6566:
 10735                           
 10736                           ; BSR set to: 0
 10737  002BB6  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10738  002BB8  D7F4               	goto	l6564
 10739  002BBA                     u6940:
 10740                           
 10741                           ; BSR set to: 0
 10742  002BBA  5188               	movf	___aomod@divisor& (0+255),w,b
 10743  002BBC  5D80               	subwf	___aomod@dividend& (0+255),w,b
 10744  002BBE  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10745  002BC0  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10746  002BC2  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10747  002BC4  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10748  002BC6  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10749  002BC8  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10750  002BCA  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10751  002BCC  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10752  002BCE  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10753  002BD0  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10754  002BD2  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10755  002BD4  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10756  002BD6  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10757  002BD8  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10758  002BDA  A0D8               	btfss	status,0,c
 10759  002BDC  D010               	goto	l6572
 10760                           
 10761                           ; BSR set to: 0
 10762  002BDE  5188               	movf	___aomod@divisor& (0+255),w,b
 10763  002BE0  5F80               	subwf	___aomod@dividend& (0+255),f,b
 10764  002BE2  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 10765  002BE4  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10766  002BE6  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10767  002BE8  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10768  002BEA  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10769  002BEC  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10770  002BEE  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10771  002BF0  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10772  002BF2  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10773  002BF4  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10774  002BF6  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10775  002BF8  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10776  002BFA  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10777  002BFC  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10778  002BFE                     l6572:
 10779                           
 10780                           ; BSR set to: 0
 10781  002BFE  90D8               	bcf	status,0,c
 10782  002C00  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10783  002C02  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10784  002C04  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10785  002C06  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10786  002C08  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10787  002C0A  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10788  002C0C  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10789  002C0E  3388               	rrcf	___aomod@divisor& (0+255),f,b
 10790                           
 10791                           ; BSR set to: 0
 10792  002C10  2F90               	decfsz	___aomod@counter& (0+255),f,b
 10793  002C12  D7D3               	goto	u6940
 10794  002C14                     l6576:
 10795                           
 10796                           ; BSR set to: 0
 10797  002C14  5191               	movf	___aomod@sign& (0+255),w,b
 10798  002C16  B4D8               	btfsc	status,2,c
 10799  002C18  D010               	goto	l6580
 10800                           
 10801                           ; BSR set to: 0
 10802  002C1A  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 10803  002C1C  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 10804  002C1E  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 10805  002C20  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 10806  002C22  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 10807  002C24  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 10808  002C26  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 10809  002C28  6D80               	negf	___aomod@dividend& (0+255),b
 10810  002C2A  0E00               	movlw	0
 10811  002C2C  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10812  002C2E  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10813  002C30  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10814  002C32  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10815  002C34  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10816  002C36  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10817  002C38  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10818  002C3A                     l6580:
 10819                           
 10820                           ; BSR set to: 0
 10821  002C3A  C080  F080         	movff	___aomod@dividend,?___aomod
 10822  002C3E  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 10823  002C42  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 10824  002C46  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 10825  002C4A  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 10826  002C4E  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 10827  002C52  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 10828  002C56  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 10829                           
 10830                           ; BSR set to: 0
 10831  002C5A  0012               	return		;funcret
 10832  002C5C                     __end_of___aomod:
 10833                           	opt callstack 0
 10834                           
 10835 ;; *************** function ___aodiv *****************
 10836 ;; Defined at:
 10837 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;  dividend        8    0[BANK0 ] long long 
 10840 ;;  divisor         8    8[BANK0 ] long long 
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;  quotient        8   18[BANK0 ] long long 
 10843 ;;  sign            1   17[BANK0 ] unsigned char 
 10844 ;;  counter         1   16[BANK0 ] unsigned char 
 10845 ;; Return value:  Size  Location     Type
 10846 ;;                  8    0[BANK0 ] long long 
 10847 ;; Registers used:
 10848 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10849 ;; Tracked objects:
 10850 ;;		On entry : 0/0
 10851 ;;		On exit  : 0/0
 10852 ;;		Unchanged: 0/0
 10853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10854 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10857 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10858 ;;Total ram usage:       26 bytes
 10859 ;; Hardware stack levels used:    1
 10860 ;; Hardware stack levels required when called:    3
 10861 ;; This function calls:
 10862 ;;		Nothing
 10863 ;; This function is called by:
 10864 ;;		_dtoa
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	text36
 10869  002632                     __ptext36:
 10870                           	opt callstack 0
 10871  002632                     ___aodiv:
 10872                           	opt callstack 22
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;incstack = 0
 10876  002632  0E00               	movlw	0
 10877  002634  0100               	movlb	0	; () banked
 10878  002636  6F91               	movwf	___aodiv@sign& (0+255),b
 10879                           
 10880                           ; BSR set to: 0
 10881  002638  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10882  00263A  D012               	goto	l6512
 10883                           
 10884                           ; BSR set to: 0
 10885  00263C  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10886  00263E  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10887  002640  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10888  002642  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10889  002644  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10890  002646  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10891  002648  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10892  00264A  6D88               	negf	___aodiv@divisor& (0+255),b
 10893  00264C  0E00               	movlw	0
 10894  00264E  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10895  002650  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10896  002652  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10897  002654  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10898  002656  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10899  002658  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10900  00265A  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10901                           
 10902                           ; BSR set to: 0
 10903  00265C  0E01               	movlw	1
 10904  00265E  6F91               	movwf	___aodiv@sign& (0+255),b
 10905  002660                     l6512:
 10906                           
 10907                           ; BSR set to: 0
 10908  002660  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 10909  002662  D012               	goto	l6518
 10910                           
 10911                           ; BSR set to: 0
 10912  002664  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10913  002666  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10914  002668  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10915  00266A  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10916  00266C  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10917  00266E  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10918  002670  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10919  002672  6D80               	negf	___aodiv@dividend& (0+255),b
 10920  002674  0E00               	movlw	0
 10921  002676  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10922  002678  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10923  00267A  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10924  00267C  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10925  00267E  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10926  002680  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10927  002682  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10928                           
 10929                           ; BSR set to: 0
 10930  002684  0E01               	movlw	1
 10931  002686  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 10932  002688                     l6518:
 10933                           
 10934                           ; BSR set to: 0
 10935  002688  EE20  F092         	lfsr	2,___aodiv@quotient
 10936  00268C  0E07               	movlw	7
 10937  00268E                     u6861:
 10938  00268E  6ADE               	clrf	postinc2,c
 10939  002690  06E8               	decf	wreg,f,c
 10940  002692  E2FD               	bc	u6861
 10941                           
 10942                           ; BSR set to: 0
 10943  002694  5188               	movf	___aodiv@divisor& (0+255),w,b
 10944  002696  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10945  002698  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10946  00269A  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10947  00269C  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10948  00269E  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10949  0026A0  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10950  0026A2  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10951  0026A4  B4D8               	btfsc	status,2,c
 10952  0026A6  D046               	goto	l6540
 10953                           
 10954                           ; BSR set to: 0
 10955  0026A8  0E01               	movlw	1
 10956  0026AA  6F90               	movwf	___aodiv@counter& (0+255),b
 10957  0026AC  D00A               	goto	l6526
 10958  0026AE                     l6524:
 10959                           
 10960                           ; BSR set to: 0
 10961  0026AE  90D8               	bcf	status,0,c
 10962  0026B0  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 10963  0026B2  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10964  0026B4  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10965  0026B6  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10966  0026B8  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10967  0026BA  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10968  0026BC  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10969  0026BE  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10970  0026C0  2B90               	incf	___aodiv@counter& (0+255),f,b
 10971  0026C2                     l6526:
 10972                           
 10973                           ; BSR set to: 0
 10974  0026C2  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10975  0026C4  D7F4               	goto	l6524
 10976  0026C6                     u6880:
 10977                           
 10978                           ; BSR set to: 0
 10979  0026C6  90D8               	bcf	status,0,c
 10980  0026C8  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 10981  0026CA  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10982  0026CC  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10983  0026CE  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10984  0026D0  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10985  0026D2  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10986  0026D4  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10987  0026D6  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10988                           
 10989                           ; BSR set to: 0
 10990  0026D8  5188               	movf	___aodiv@divisor& (0+255),w,b
 10991  0026DA  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 10992  0026DC  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10993  0026DE  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10994  0026E0  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10995  0026E2  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10996  0026E4  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10997  0026E6  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10998  0026E8  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10999  0026EA  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 11000  0026EC  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11001  0026EE  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 11002  0026F0  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11003  0026F2  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 11004  0026F4  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11005  0026F6  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 11006  0026F8  A0D8               	btfss	status,0,c
 11007  0026FA  D011               	goto	l6536
 11008                           
 11009                           ; BSR set to: 0
 11010  0026FC  5188               	movf	___aodiv@divisor& (0+255),w,b
 11011  0026FE  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 11012  002700  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11013  002702  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 11014  002704  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11015  002706  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 11016  002708  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11017  00270A  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 11018  00270C  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11019  00270E  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 11020  002710  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11021  002712  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 11022  002714  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11023  002716  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 11024  002718  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11025  00271A  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 11026                           
 11027                           ; BSR set to: 0
 11028  00271C  8192               	bsf	___aodiv@quotient& (0+255),0,b
 11029  00271E                     l6536:
 11030                           
 11031                           ; BSR set to: 0
 11032  00271E  90D8               	bcf	status,0,c
 11033  002720  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 11034  002722  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 11035  002724  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 11036  002726  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 11037  002728  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 11038  00272A  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 11039  00272C  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 11040  00272E  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 11041                           
 11042                           ; BSR set to: 0
 11043  002730  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 11044  002732  D7C9               	goto	u6880
 11045  002734                     l6540:
 11046                           
 11047                           ; BSR set to: 0
 11048  002734  5191               	movf	___aodiv@sign& (0+255),w,b
 11049  002736  B4D8               	btfsc	status,2,c
 11050  002738  D010               	goto	l6544
 11051                           
 11052                           ; BSR set to: 0
 11053  00273A  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 11054  00273C  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 11055  00273E  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 11056  002740  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 11057  002742  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 11058  002744  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 11059  002746  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 11060  002748  6D92               	negf	___aodiv@quotient& (0+255),b
 11061  00274A  0E00               	movlw	0
 11062  00274C  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 11063  00274E  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 11064  002750  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 11065  002752  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 11066  002754  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 11067  002756  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 11068  002758  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 11069  00275A                     l6544:
 11070                           
 11071                           ; BSR set to: 0
 11072  00275A  C092  F080         	movff	___aodiv@quotient,?___aodiv
 11073  00275E  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 11074  002762  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 11075  002766  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 11076  00276A  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 11077  00276E  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 11078  002772  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 11079  002776  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 11080                           
 11081                           ; BSR set to: 0
 11082  00277A  0012               	return		;funcret
 11083  00277C                     __end_of___aodiv:
 11084                           	opt callstack 0
 11085                           
 11086 ;; *************** function _atoi *****************
 11087 ;; Defined at:
 11088 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11089 ;; Parameters:    Size  Location     Type
 11090 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 11091 ;;		 -> STR_61(10), STR_60(11), STR_59(11), STR_58(12), 
 11092 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
 11093 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
 11094 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
 11095 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
 11096 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
 11097 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
 11098 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
 11099 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
 11100 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
 11101 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
 11102 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
 11103 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
 11104 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
 11105 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
 11106 ;;		 -> STR_1(10), 
 11107 ;; Auto vars:     Size  Location     Type
 11108 ;;  n               2   20[BANK0 ] int 
 11109 ;;  neg             2   13[BANK0 ] int 
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  2    7[BANK0 ] int 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;Total ram usage:       15 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    4
 11126 ;; This function calls:
 11127 ;;		___wmul
 11128 ;;		_isdigit
 11129 ;;		_isspace
 11130 ;; This function is called by:
 11131 ;;		_vfpfcnvrt
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text37
 11136  00277C                     __ptext37:
 11137                           	opt callstack 0
 11138  00277C                     _atoi:
 11139                           	opt callstack 22
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;incstack = 0
 11143  00277C  0E00               	movlw	0
 11144  00277E  0100               	movlb	0	; () banked
 11145  002780  6F95               	movwf	(atoi@n+1)& (0+255),b
 11146  002782  0E00               	movlw	0
 11147  002784  6F94               	movwf	atoi@n& (0+255),b
 11148  002786  0E00               	movlw	0
 11149  002788  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11150  00278A  0E00               	movlw	0
 11151  00278C  6F8D               	movwf	atoi@neg& (0+255),b
 11152  00278E  D002               	goto	l6728
 11153  002790                     l6726:
 11154                           
 11155                           ; BSR set to: 0
 11156  002790  4B87               	infsnz	atoi@s& (0+255),f,b
 11157  002792  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11158  002794                     l6728:
 11159                           
 11160                           ; BSR set to: 0
 11161  002794  0E01               	movlw	1
 11162  002796  6F93               	movwf	_atoi$1588& (0+255),b
 11163                           
 11164                           ; BSR set to: 0
 11165  002798  C087  FFF6         	movff	atoi@s,tblptrl
 11166  00279C  C088  FFF7         	movff	atoi@s+1,tblptrh
 11167  0027A0                     	if	0	;tblptru may be non-zero
 11168  0027A0                     	endif
 11169  0027A0                     	if	0	;tblptru may be non-zero
 11170  0027A0                     	endif
 11171  0027A0  0008               	tblrd		*
 11172  0027A2  50F5               	movf	tablat,w,c
 11173  0027A4  0A20               	xorlw	32
 11174  0027A6  B4D8               	btfsc	status,2,c
 11175  0027A8  D018               	goto	l6736
 11176                           
 11177                           ; BSR set to: 0
 11178  0027AA  0EF7               	movlw	247
 11179  0027AC  6F89               	movwf	??_atoi& (0+255),b
 11180  0027AE  0EFF               	movlw	255
 11181  0027B0  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11182  0027B2  C087  FFF6         	movff	atoi@s,tblptrl
 11183  0027B6  C088  FFF7         	movff	atoi@s+1,tblptrh
 11184  0027BA                     	if	0	;tblptru may be non-zero
 11185  0027BA                     	endif
 11186  0027BA                     	if	0	;tblptru may be non-zero
 11187  0027BA                     	endif
 11188  0027BA  0008               	tblrd		*
 11189  0027BC  50F5               	movf	tablat,w,c
 11190  0027BE  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11191  0027C0  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11192  0027C2  5189               	movf	??_atoi& (0+255),w,b
 11193  0027C4  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11194  0027C6  518A               	movf	(??_atoi+1)& (0+255),w,b
 11195  0027C8  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11196  0027CA  518C               	movf	(??_atoi+3)& (0+255),w,b
 11197  0027CC  E104               	bnz	u7320
 11198  0027CE  0E05               	movlw	5
 11199  0027D0  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11200  0027D2  A0D8               	btfss	status,0,c
 11201  0027D4  D002               	goto	l6736
 11202  0027D6                     u7320:
 11203                           
 11204                           ; BSR set to: 0
 11205  0027D6  0E00               	movlw	0
 11206  0027D8  6F93               	movwf	_atoi$1588& (0+255),b
 11207  0027DA                     l6736:
 11208                           
 11209                           ; BSR set to: 0
 11210  0027DA  C093  F08F         	movff	_atoi$1588,_atoi$1587
 11211  0027DE  6B90               	clrf	(_atoi$1587+1)& (0+255),b
 11212                           
 11213                           ; BSR set to: 0
 11214  0027E0  518F               	movf	_atoi$1587& (0+255),w,b
 11215  0027E2  1190               	iorwf	(_atoi$1587+1)& (0+255),w,b
 11216  0027E4  B4D8               	btfsc	status,2,c
 11217  0027E6  D008               	goto	l6746
 11218  0027E8  D7D3               	goto	l6726
 11219  0027EA                     l6742:
 11220                           
 11221                           ; BSR set to: 0
 11222  0027EA  0E00               	movlw	0
 11223  0027EC  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11224  0027EE  0E01               	movlw	1
 11225  0027F0  6F8D               	movwf	atoi@neg& (0+255),b
 11226  0027F2                     l6744:
 11227                           
 11228                           ; BSR set to: 0
 11229  0027F2  4B87               	infsnz	atoi@s& (0+255),f,b
 11230  0027F4  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11231  0027F6  D02F               	goto	l6752
 11232  0027F8                     l6746:
 11233                           
 11234                           ; BSR set to: 0
 11235  0027F8  C087  FFF6         	movff	atoi@s,tblptrl
 11236  0027FC  C088  FFF7         	movff	atoi@s+1,tblptrh
 11237  002800                     	if	0	;tblptru may be non-zero
 11238  002800                     	endif
 11239  002800                     	if	0	;tblptru may be non-zero
 11240  002800                     	endif
 11241  002800  0008               	tblrd		*
 11242  002802  50F5               	movf	tablat,w,c
 11243  002804  6F89               	movwf	??_atoi& (0+255),b
 11244  002806  6B8A               	clrf	(??_atoi+1)& (0+255),b
 11245                           
 11246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11247                           ; Switch size 1, requested type "simple"
 11248                           ; Number of cases is 1, Range of values is 0 to 0
 11249                           ; switch strategies available:
 11250                           ; Name         Instructions Cycles
 11251                           ; simple_byte            4     3 (average)
 11252                           ;	Chosen strategy is simple_byte
 11253  002808  518A               	movf	(??_atoi+1)& (0+255),w,b
 11254  00280A  0A00               	xorlw	0	; case 0
 11255  00280C  A4D8               	btfss	status,2,c
 11256  00280E  D023               	goto	l6752
 11257                           
 11258                           ; BSR set to: 0
 11259                           ; Switch size 1, requested type "simple"
 11260                           ; Number of cases is 2, Range of values is 43 to 45
 11261                           ; switch strategies available:
 11262                           ; Name         Instructions Cycles
 11263                           ; simple_byte            7     4 (average)
 11264                           ;	Chosen strategy is simple_byte
 11265  002810  5189               	movf	??_atoi& (0+255),w,b
 11266  002812  0A2B               	xorlw	43	; case 43
 11267  002814  B4D8               	btfsc	status,2,c
 11268  002816  D7ED               	goto	l6744
 11269  002818  0A06               	xorlw	6	; case 45
 11270  00281A  B4D8               	btfsc	status,2,c
 11271  00281C  D7E6               	goto	l6742
 11272  00281E  D01B               	goto	l6752
 11273  002820                     l6748:
 11274                           
 11275                           ; BSR set to: 0
 11276  002820  C094  F080         	movff	atoi@n,___wmul@multiplier
 11277  002824  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 11278  002828  0E00               	movlw	0
 11279  00282A  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11280  00282C  0E0A               	movlw	10
 11281  00282E  6F82               	movwf	___wmul@multiplicand& (0+255),b
 11282  002830  EC21  F01E         	call	___wmul	;wreg free
 11283  002834  C087  FFF6         	movff	atoi@s,tblptrl
 11284  002838  C088  FFF7         	movff	atoi@s+1,tblptrh
 11285  00283C                     	if	0	;tblptru may be non-zero
 11286  00283C                     	endif
 11287  00283C                     	if	0	;tblptru may be non-zero
 11288  00283C                     	endif
 11289  00283C  0008               	tblrd		*
 11290  00283E  50F5               	movf	tablat,w,c
 11291  002840  0100               	movlb	0	; () banked
 11292  002842  5F80               	subwf	?___wmul& (0+255),f,b
 11293  002844  0E00               	movlw	0
 11294  002846  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 11295  002848  0E30               	movlw	48
 11296  00284A  2580               	addwf	?___wmul& (0+255),w,b
 11297  00284C  6F94               	movwf	atoi@n& (0+255),b
 11298  00284E  0E00               	movlw	0
 11299  002850  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 11300  002852  6F95               	movwf	(atoi@n+1)& (0+255),b
 11301  002854  D7CE               	goto	l6744
 11302  002856                     l6752:
 11303                           
 11304                           ; BSR set to: 0
 11305  002856  0ED0               	movlw	208
 11306  002858  6F89               	movwf	??_atoi& (0+255),b
 11307  00285A  0EFF               	movlw	255
 11308  00285C  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11309  00285E  C087  FFF6         	movff	atoi@s,tblptrl
 11310  002862  C088  FFF7         	movff	atoi@s+1,tblptrh
 11311  002866                     	if	0	;tblptru may be non-zero
 11312  002866                     	endif
 11313  002866                     	if	0	;tblptru may be non-zero
 11314  002866                     	endif
 11315  002866  0008               	tblrd		*
 11316  002868  50F5               	movf	tablat,w,c
 11317  00286A  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11318  00286C  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11319  00286E  5189               	movf	??_atoi& (0+255),w,b
 11320  002870  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11321  002872  518A               	movf	(??_atoi+1)& (0+255),w,b
 11322  002874  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11323  002876  518C               	movf	(??_atoi+3)& (0+255),w,b
 11324  002878  E106               	bnz	u7340
 11325  00287A  0E0A               	movlw	10
 11326  00287C  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11327  00287E  B0D8               	btfsc	status,0,c
 11328  002880  D002               	goto	u7340
 11329  002882  0E01               	movlw	1
 11330  002884  D001               	goto	u7350
 11331  002886                     u7340:
 11332  002886  0E00               	movlw	0
 11333  002888                     u7350:
 11334  002888  6F91               	movwf	_atoi$1589& (0+255),b
 11335  00288A  6B92               	clrf	(_atoi$1589+1)& (0+255),b
 11336                           
 11337                           ; BSR set to: 0
 11338  00288C  5191               	movf	_atoi$1589& (0+255),w,b
 11339  00288E  1192               	iorwf	(_atoi$1589+1)& (0+255),w,b
 11340  002890  A4D8               	btfss	status,2,c
 11341  002892  D7C6               	goto	l6748
 11342                           
 11343                           ; BSR set to: 0
 11344  002894  518D               	movf	atoi@neg& (0+255),w,b
 11345  002896  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11346  002898  A4D8               	btfss	status,2,c
 11347  00289A  D00D               	goto	l1407
 11348                           
 11349                           ; BSR set to: 0
 11350  00289C  C094  F089         	movff	atoi@n,??_atoi
 11351  0028A0  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11352  0028A4  1F89               	comf	??_atoi& (0+255),f,b
 11353  0028A6  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11354  0028A8  4B89               	infsnz	??_atoi& (0+255),f,b
 11355  0028AA  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11356  0028AC  C089  F087         	movff	??_atoi,?_atoi
 11357  0028B0  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11358  0028B4  0012               	return	
 11359  0028B6                     l1407:
 11360                           
 11361                           ; BSR set to: 0
 11362  0028B6  C094  F087         	movff	atoi@n,?_atoi
 11363  0028BA  C095  F088         	movff	atoi@n+1,?_atoi+1
 11364                           
 11365                           ; BSR set to: 0
 11366  0028BE  0012               	return		;funcret
 11367  0028C0                     __end_of_atoi:
 11368                           	opt callstack 0
 11369                           
 11370 ;; *************** function _isspace *****************
 11371 ;; Defined at:
 11372 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  c               2    0[BANK0 ] int 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;		None
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  2    0[BANK0 ] int 
 11379 ;; Registers used:
 11380 ;;		wreg, status,2, status,0
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11386 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;Total ram usage:        7 bytes
 11391 ;; Hardware stack levels used:    1
 11392 ;; Hardware stack levels required when called:    3
 11393 ;; This function calls:
 11394 ;;		Nothing
 11395 ;; This function is called by:
 11396 ;;		_atoi
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           	psect	text38
 11401  0039A8                     __ptext38:
 11402                           	opt callstack 0
 11403  0039A8                     _isspace:
 11404                           	opt callstack 22
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;incstack = 0
 11408  0039A8  0E01               	movlw	1
 11409  0039AA  0100               	movlb	0	; () banked
 11410  0039AC  6F86               	movwf	_isspace$1614& (0+255),b
 11411                           
 11412                           ; BSR set to: 0
 11413  0039AE  0E20               	movlw	32
 11414  0039B0  1980               	xorwf	isspace@c& (0+255),w,b
 11415  0039B2  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11416  0039B4  B4D8               	btfsc	status,2,c
 11417  0039B6  D014               	goto	l6592
 11418                           
 11419                           ; BSR set to: 0
 11420  0039B8  0EF7               	movlw	247
 11421  0039BA  6F82               	movwf	??_isspace& (0+255),b
 11422  0039BC  0EFF               	movlw	255
 11423  0039BE  6F83               	movwf	(??_isspace+1)& (0+255),b
 11424  0039C0  C080  F084         	movff	isspace@c,??_isspace+2
 11425  0039C4  C081  F085         	movff	isspace@c+1,??_isspace+3
 11426  0039C8  5182               	movf	??_isspace& (0+255),w,b
 11427  0039CA  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11428  0039CC  5183               	movf	(??_isspace+1)& (0+255),w,b
 11429  0039CE  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 11430  0039D0  5185               	movf	(??_isspace+3)& (0+255),w,b
 11431  0039D2  E104               	bnz	u6980
 11432  0039D4  0E05               	movlw	5
 11433  0039D6  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 11434  0039D8  A0D8               	btfss	status,0,c
 11435  0039DA  D002               	goto	l6592
 11436  0039DC                     u6980:
 11437                           
 11438                           ; BSR set to: 0
 11439  0039DC  0E00               	movlw	0
 11440  0039DE  6F86               	movwf	_isspace$1614& (0+255),b
 11441  0039E0                     l6592:
 11442                           
 11443                           ; BSR set to: 0
 11444  0039E0  C086  F080         	movff	_isspace$1614,?_isspace
 11445  0039E4  6B81               	clrf	(?_isspace+1)& (0+255),b
 11446                           
 11447                           ; BSR set to: 0
 11448  0039E6  0012               	return		;funcret
 11449  0039E8                     __end_of_isspace:
 11450                           	opt callstack 0
 11451                           
 11452 ;; *************** function _isdigit *****************
 11453 ;; Defined at:
 11454 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;  c               2    0[BANK0 ] int 
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;		None
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  2    0[BANK0 ] int 
 11461 ;; Registers used:
 11462 ;;		wreg, status,2, status,0
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11470 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;Total ram usage:        6 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    3
 11475 ;; This function calls:
 11476 ;;		Nothing
 11477 ;; This function is called by:
 11478 ;;		_vfpfcnvrt
 11479 ;;		_atoi
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           	psect	text39
 11484  003B62                     __ptext39:
 11485                           	opt callstack 0
 11486  003B62                     _isdigit:
 11487                           	opt callstack 23
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;incstack = 0
 11491  003B62  0ED0               	movlw	208
 11492  003B64  0100               	movlb	0	; () banked
 11493  003B66  6F82               	movwf	??_isdigit& (0+255),b
 11494  003B68  0EFF               	movlw	255
 11495  003B6A  6F83               	movwf	(??_isdigit+1)& (0+255),b
 11496  003B6C  C080  F084         	movff	isdigit@c,??_isdigit+2
 11497  003B70  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 11498  003B74  5182               	movf	??_isdigit& (0+255),w,b
 11499  003B76  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 11500  003B78  5183               	movf	(??_isdigit+1)& (0+255),w,b
 11501  003B7A  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 11502  003B7C  5185               	movf	(??_isdigit+3)& (0+255),w,b
 11503  003B7E  E106               	bnz	u6820
 11504  003B80  0E0A               	movlw	10
 11505  003B82  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 11506  003B84  B0D8               	btfsc	status,0,c
 11507  003B86  D002               	goto	u6820
 11508  003B88  0E01               	movlw	1
 11509  003B8A  D001               	goto	u6830
 11510  003B8C                     u6820:
 11511  003B8C  0E00               	movlw	0
 11512  003B8E                     u6830:
 11513  003B8E  6F80               	movwf	?_isdigit& (0+255),b
 11514  003B90  6B81               	clrf	(?_isdigit+1)& (0+255),b
 11515                           
 11516                           ; BSR set to: 0
 11517  003B92  0012               	return		;funcret
 11518  003B94                     __end_of_isdigit:
 11519                           	opt callstack 0
 11520                           
 11521 ;; *************** function ___wmul *****************
 11522 ;; Defined at:
 11523 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11526 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  product         2    4[BANK0 ] unsigned int 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  2    0[BANK0 ] unsigned int 
 11531 ;; Registers used:
 11532 ;;		wreg, status,2, status,0, prodl, prodh
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11538 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11539 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11541 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11542 ;;Total ram usage:        6 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; Hardware stack levels required when called:    3
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		_main
 11549 ;;		_atoi
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553                           	psect	text40
 11554  003C42                     __ptext40:
 11555                           	opt callstack 0
 11556  003C42                     ___wmul:
 11557                           	opt callstack 22
 11558                           
 11559                           ; BSR set to: 0
 11560                           ;incstack = 0
 11561  003C42  0100               	movlb	0	; () banked
 11562  003C44  5180               	movf	___wmul@multiplier& (0+255),w,b
 11563  003C46  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11564  003C48  CFF3 F084          	movff	prodl,___wmul@product
 11565  003C4C  CFF4 F085          	movff	prodh,___wmul@product+1
 11566  003C50  5180               	movf	___wmul@multiplier& (0+255),w,b
 11567  003C52  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11568  003C54  50F3               	movf	prodl,w,c
 11569  003C56  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11570  003C58  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11571  003C5A  0382               	mulwf	___wmul@multiplicand& (0+255),b
 11572  003C5C  50F3               	movf	prodl,w,c
 11573  003C5E  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 11574                           
 11575                           ; BSR set to: 0
 11576  003C60  C084  F080         	movff	___wmul@product,?___wmul
 11577  003C64  C085  F081         	movff	___wmul@product+1,?___wmul+1
 11578                           
 11579                           ; BSR set to: 0
 11580  003C68  0012               	return		;funcret
 11581  003C6A                     __end_of___wmul:
 11582                           	opt callstack 0
 11583                           
 11584 ;; *************** function _initLCD *****************
 11585 ;; Defined at:
 11586 ;;		line 69 in file "lcd.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;		None
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;		None
 11591 ;; Return value:  Size  Location     Type
 11592 ;;                  1    wreg      void 
 11593 ;; Registers used:
 11594 ;;		wreg, status,2, status,0, cstack
 11595 ;; Tracked objects:
 11596 ;;		On entry : 0/0
 11597 ;;		On exit  : 0/0
 11598 ;;		Unchanged: 0/0
 11599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;Total ram usage:        1 bytes
 11605 ;; Hardware stack levels used:    1
 11606 ;; Hardware stack levels required when called:    7
 11607 ;; This function calls:
 11608 ;;		_lcdInst
 11609 ;;		_send_byte
 11610 ;;		_send_nibble
 11611 ;; This function is called by:
 11612 ;;		_actuators_main
 11613 ;;		_UI_main
 11614 ;;		_main
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           	psect	text41
 11619  0036B8                     __ptext41:
 11620                           	opt callstack 0
 11621  0036B8                     _initLCD:
 11622                           	opt callstack 23
 11623                           
 11624                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 11625                           
 11626                           ; BSR set to: 0
 11627                           ;incstack = 0
 11628  0036B8  0E31               	movlw	49
 11629  0036BA  0100               	movlb	0	; () banked
 11630  0036BC  6F84               	movwf	??_initLCD& (0+255),b
 11631  0036BE  0EB2               	movlw	178
 11632  0036C0                     u9927:
 11633  0036C0  2EE8               	decfsz	wreg,f,c
 11634  0036C2  D7FE               	bra	u9927
 11635  0036C4  2F84               	decfsz	??_initLCD& (0+255),f,b
 11636  0036C6  D7FC               	bra	u9927
 11637  0036C8  F000               	nop	
 11638                           
 11639                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 11640  0036CA  948C               	bcf	3980,2,c	;volatile
 11641                           
 11642                           ;lcd.c: 74:     send_nibble(0b0011);
 11643  0036CC  0E03               	movlw	3
 11644  0036CE  EC48  F01E         	call	_send_nibble
 11645                           
 11646                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11647  0036D2  0E11               	movlw	17
 11648  0036D4  0100               	movlb	0	; () banked
 11649  0036D6  6F84               	movwf	??_initLCD& (0+255),b
 11650  0036D8  0E3A               	movlw	58
 11651  0036DA                     u9937:
 11652  0036DA  2EE8               	decfsz	wreg,f,c
 11653  0036DC  D7FE               	bra	u9937
 11654  0036DE  2F84               	decfsz	??_initLCD& (0+255),f,b
 11655  0036E0  D7FC               	bra	u9937
 11656  0036E2  F000               	nop	
 11657                           
 11658                           ;lcd.c: 76:     send_nibble(0b0011);
 11659  0036E4  0E03               	movlw	3
 11660  0036E6  EC48  F01E         	call	_send_nibble
 11661                           
 11662                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 11663  0036EA  0E7D               	movlw	125
 11664  0036EC                     u9947:
 11665  0036EC  2EE8               	decfsz	wreg,f,c
 11666  0036EE  D7FE               	bra	u9947
 11667                           
 11668                           ;lcd.c: 78:     send_byte(0b00110010);
 11669  0036F0  0E32               	movlw	50
 11670  0036F2  EC55  F01E         	call	_send_byte
 11671                           
 11672                           ;lcd.c: 80:     send_byte(0b00101000);
 11673  0036F6  0E28               	movlw	40
 11674  0036F8  EC55  F01E         	call	_send_byte
 11675                           
 11676                           ;lcd.c: 81:     send_byte(0b00001000);
 11677  0036FC  0E08               	movlw	8
 11678  0036FE  EC55  F01E         	call	_send_byte
 11679                           
 11680                           ;lcd.c: 82:     send_byte(0b00000001);
 11681  003702  0E01               	movlw	1
 11682  003704  EC55  F01E         	call	_send_byte
 11683                           
 11684                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 11685  003708  0E11               	movlw	17
 11686  00370A  0100               	movlb	0	; () banked
 11687  00370C  6F84               	movwf	??_initLCD& (0+255),b
 11688  00370E  0E3A               	movlw	58
 11689  003710                     u9957:
 11690  003710  2EE8               	decfsz	wreg,f,c
 11691  003712  D7FE               	bra	u9957
 11692  003714  2F84               	decfsz	??_initLCD& (0+255),f,b
 11693  003716  D7FC               	bra	u9957
 11694  003718  F000               	nop	
 11695                           
 11696                           ;lcd.c: 84:     send_byte(0b00000110);
 11697  00371A  0E06               	movlw	6
 11698  00371C  EC55  F01E         	call	_send_byte
 11699                           
 11700                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 11701  003720  0E0F               	movlw	15
 11702  003722  EC73  F01E         	call	_lcdInst
 11703  003726  0012               	return		;funcret
 11704  003728                     __end_of_initLCD:
 11705                           	opt callstack 0
 11706                           
 11707 ;; *************** function _lcdInst *****************
 11708 ;; Defined at:
 11709 ;;		line 64 in file "lcd.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;  data            1    wreg     unsigned char 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  data            1    3[BANK0 ] unsigned char 
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1    wreg      void 
 11716 ;; Registers used:
 11717 ;;		wreg, status,2, status,0, cstack
 11718 ;; Tracked objects:
 11719 ;;		On entry : 0/0
 11720 ;;		On exit  : 0/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;Total ram usage:        1 bytes
 11728 ;; Hardware stack levels used:    1
 11729 ;; Hardware stack levels required when called:    6
 11730 ;; This function calls:
 11731 ;;		_send_byte
 11732 ;; This function is called by:
 11733 ;;		_actuators_main
 11734 ;;		_stepper2
 11735 ;;		_stepper2_back
 11736 ;;		_initLCD
 11737 ;;		_print_echo
 11738 ;;		_ultrasonic_main
 11739 ;;		_number_deploy
 11740 ;;		_UI_main
 11741 ;;		_brake
 11742 ;;		_main
 11743 ;;		_lcd_shift_cursor
 11744 ;;		_lcd_shift_display
 11745 ;; This function uses a non-reentrant model
 11746 ;;
 11747                           
 11748                           	psect	text42
 11749  003CE6                     __ptext42:
 11750                           	opt callstack 0
 11751  003CE6                     _lcdInst:
 11752                           	opt callstack 22
 11753                           
 11754                           ;incstack = 0
 11755                           ;lcdInst@data stored from wreg
 11756  003CE6  0100               	movlb	0	; () banked
 11757  003CE8  6F83               	movwf	lcdInst@data& (0+255),b
 11758                           
 11759                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 11760  003CEA  948C               	bcf	3980,2,c	;volatile
 11761                           
 11762                           ;lcd.c: 66:     send_byte(data);
 11763  003CEC  0100               	movlb	0	; () banked
 11764  003CEE  5183               	movf	lcdInst@data& (0+255),w,b
 11765  003CF0  EC55  F01E         	call	_send_byte
 11766  003CF4  0012               	return		;funcret
 11767  003CF6                     __end_of_lcdInst:
 11768                           	opt callstack 0
 11769                           
 11770 ;; *************** function _send_byte *****************
 11771 ;; Defined at:
 11772 ;;		line 55 in file "lcd.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;  data            1    wreg     unsigned char 
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;  data            1    2[BANK0 ] unsigned char 
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  1    wreg      void 
 11779 ;; Registers used:
 11780 ;;		wreg, status,2, status,0, cstack
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;Total ram usage:        1 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:    5
 11793 ;; This function calls:
 11794 ;;		_send_nibble
 11795 ;; This function is called by:
 11796 ;;		_lcdInst
 11797 ;;		_initLCD
 11798 ;;		_putch
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802                           	psect	text43
 11803  003CAA                     __ptext43:
 11804                           	opt callstack 0
 11805  003CAA                     _send_byte:
 11806                           	opt callstack 16
 11807                           
 11808                           ;incstack = 0
 11809                           ;send_byte@data stored from wreg
 11810  003CAA  0100               	movlb	0	; () banked
 11811  003CAC  6F82               	movwf	send_byte@data& (0+255),b
 11812                           
 11813                           ;lcd.c: 57:     send_nibble(data >> 4);
 11814  003CAE  0100               	movlb	0	; () banked
 11815  003CB0  3982               	swapf	send_byte@data& (0+255),w,b
 11816  003CB2  0B0F               	andlw	15
 11817  003CB4  EC48  F01E         	call	_send_nibble
 11818                           
 11819                           ;lcd.c: 60:     send_nibble(data);
 11820  003CB8  0100               	movlb	0	; () banked
 11821  003CBA  5182               	movf	send_byte@data& (0+255),w,b
 11822  003CBC  EC48  F01E         	call	_send_nibble
 11823  003CC0  0012               	return		;funcret
 11824  003CC2                     __end_of_send_byte:
 11825                           	opt callstack 0
 11826                           
 11827 ;; *************** function _send_nibble *****************
 11828 ;; Defined at:
 11829 ;;		line 44 in file "lcd.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;  data            1    wreg     unsigned char 
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;  data            1    1[BANK0 ] unsigned char 
 11834 ;; Return value:  Size  Location     Type
 11835 ;;                  1    wreg      void 
 11836 ;; Registers used:
 11837 ;;		wreg, status,2, status,0, cstack
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 0/0
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11846 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11847 ;;Total ram usage:        1 bytes
 11848 ;; Hardware stack levels used:    1
 11849 ;; Hardware stack levels required when called:    4
 11850 ;; This function calls:
 11851 ;;		_pulse_e
 11852 ;; This function is called by:
 11853 ;;		_send_byte
 11854 ;;		_initLCD
 11855 ;; This function uses a non-reentrant model
 11856 ;;
 11857                           
 11858                           	psect	text44
 11859  003C90                     __ptext44:
 11860                           	opt callstack 0
 11861  003C90                     _send_nibble:
 11862                           	opt callstack 16
 11863                           
 11864                           ;incstack = 0
 11865                           ;send_nibble@data stored from wreg
 11866  003C90  0100               	movlb	0	; () banked
 11867  003C92  6F81               	movwf	send_nibble@data& (0+255),b
 11868                           
 11869                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 11870  003C94  508C               	movf	3980,w,c	;volatile
 11871  003C96  0B0F               	andlw	15
 11872  003C98  6E8C               	movwf	3980,c	;volatile
 11873                           
 11874                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 11875  003C9A  0100               	movlb	0	; () banked
 11876  003C9C  3981               	swapf	send_nibble@data& (0+255),w,b
 11877  003C9E  0BF0               	andlw	240
 11878  003CA0  108C               	iorwf	3980,w,c	;volatile
 11879  003CA2  6E8C               	movwf	3980,c	;volatile
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;lcd.c: 48:     pulse_e();
 11883  003CA4  ECE1  F01D         	call	_pulse_e	;wreg free
 11884  003CA8  0012               	return		;funcret
 11885  003CAA                     __end_of_send_nibble:
 11886                           	opt callstack 0
 11887                           
 11888 ;; *************** function _pulse_e *****************
 11889 ;; Defined at:
 11890 ;;		line 28 in file "lcd.c"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;		None
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  1    wreg      void 
 11897 ;; Registers used:
 11898 ;;		wreg
 11899 ;; Tracked objects:
 11900 ;;		On entry : 0/0
 11901 ;;		On exit  : 0/0
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11908 ;;Total ram usage:        1 bytes
 11909 ;; Hardware stack levels used:    1
 11910 ;; Hardware stack levels required when called:    3
 11911 ;; This function calls:
 11912 ;;		Nothing
 11913 ;; This function is called by:
 11914 ;;		_send_nibble
 11915 ;; This function uses a non-reentrant model
 11916 ;;
 11917                           
 11918                           	psect	text45
 11919  003BC2                     __ptext45:
 11920                           	opt callstack 0
 11921  003BC2                     _pulse_e:
 11922                           	opt callstack 16
 11923                           
 11924                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 11925                           
 11926                           ;incstack = 0
 11927  003BC2  0E00               	movlw	0
 11928  003BC4  BEF2               	btfsc	4082,7,c	;volatile
 11929  003BC6  0E01               	movlw	1
 11930  003BC8  0100               	movlb	0	; () banked
 11931  003BCA  6F80               	movwf	pulse_e@interruptState& (0+255),b
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 11935  003BCC  9EF2               	bcf	4082,7,c	;volatile
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 11939  003BCE  868C               	bsf	3980,3,c	;volatile
 11940                           
 11941                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 11942  003BD0  0E14               	movlw	20
 11943  003BD2                     u9967:
 11944  003BD2  2EE8               	decfsz	wreg,f,c
 11945  003BD4  D7FE               	bra	u9967
 11946  003BD6  D000               	nop2	
 11947                           
 11948                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 11949  003BD8  968C               	bcf	3980,3,c	;volatile
 11950                           
 11951                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 11952  003BDA  0E53               	movlw	83
 11953  003BDC                     u9977:
 11954  003BDC  2EE8               	decfsz	wreg,f,c
 11955  003BDE  D7FE               	bra	u9977
 11956  003BE0  F000               	nop	
 11957                           
 11958                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 11959  003BE2  0100               	movlb	0	; () banked
 11960  003BE4  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 11961  003BE6  D002               	bra	u6615
 11962  003BE8  9EF2               	bcf	4082,7,c	;volatile
 11963  003BEA  D001               	bra	u6616
 11964  003BEC                     u6615:
 11965  003BEC  8EF2               	bsf	4082,7,c	;volatile
 11966  003BEE                     u6616:
 11967  003BEE  0012               	return		;funcret
 11968  003BF0                     __end_of_pulse_e:
 11969                           	opt callstack 0
 11970                           
 11971 ;; *************** function ___llmod *****************
 11972 ;; Defined at:
 11973 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  dividend        4    0[BANK0 ] unsigned long 
 11976 ;;  divisor         4    4[BANK0 ] unsigned long 
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;  counter         1    8[BANK0 ] unsigned char 
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  4    0[BANK0 ] unsigned long 
 11981 ;; Registers used:
 11982 ;;		wreg, status,2, status,0
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11988 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11991 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11992 ;;Total ram usage:        9 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; Hardware stack levels required when called:    3
 11995 ;; This function calls:
 11996 ;;		Nothing
 11997 ;; This function is called by:
 11998 ;;		_UI_main
 11999 ;; This function uses a non-reentrant model
 12000 ;;
 12001                           
 12002                           	psect	text46
 12003  003796                     __ptext46:
 12004                           	opt callstack 0
 12005  003796                     ___llmod:
 12006                           	opt callstack 26
 12007                           
 12008                           ;incstack = 0
 12009  003796  0100               	movlb	0	; () banked
 12010  003798  5184               	movf	___llmod@divisor& (0+255),w,b
 12011  00379A  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12012  00379C  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12013  00379E  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12014  0037A0  B4D8               	btfsc	status,2,c
 12015  0037A2  D024               	goto	l1121
 12016                           
 12017                           ; BSR set to: 0
 12018  0037A4  0E01               	movlw	1
 12019  0037A6  6F88               	movwf	___llmod@counter& (0+255),b
 12020  0037A8  D006               	goto	l7596
 12021  0037AA                     l7594:
 12022                           
 12023                           ; BSR set to: 0
 12024  0037AA  90D8               	bcf	status,0,c
 12025  0037AC  3784               	rlcf	___llmod@divisor& (0+255),f,b
 12026  0037AE  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12027  0037B0  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12028  0037B2  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12029  0037B4  2B88               	incf	___llmod@counter& (0+255),f,b
 12030  0037B6                     l7596:
 12031                           
 12032                           ; BSR set to: 0
 12033  0037B6  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12034  0037B8  D7F8               	goto	l7594
 12035  0037BA                     u8250:
 12036                           
 12037                           ; BSR set to: 0
 12038  0037BA  5184               	movf	___llmod@divisor& (0+255),w,b
 12039  0037BC  5D80               	subwf	___llmod@dividend& (0+255),w,b
 12040  0037BE  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12041  0037C0  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12042  0037C2  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12043  0037C4  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12044  0037C6  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12045  0037C8  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12046  0037CA  A0D8               	btfss	status,0,c
 12047  0037CC  D008               	goto	l7602
 12048                           
 12049                           ; BSR set to: 0
 12050  0037CE  5184               	movf	___llmod@divisor& (0+255),w,b
 12051  0037D0  5F80               	subwf	___llmod@dividend& (0+255),f,b
 12052  0037D2  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12053  0037D4  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12054  0037D6  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12055  0037D8  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12056  0037DA  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12057  0037DC  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12058  0037DE                     l7602:
 12059                           
 12060                           ; BSR set to: 0
 12061  0037DE  90D8               	bcf	status,0,c
 12062  0037E0  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12063  0037E2  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12064  0037E4  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12065  0037E6  3384               	rrcf	___llmod@divisor& (0+255),f,b
 12066                           
 12067                           ; BSR set to: 0
 12068  0037E8  2F88               	decfsz	___llmod@counter& (0+255),f,b
 12069  0037EA  D7E7               	goto	u8250
 12070  0037EC                     l1121:
 12071                           
 12072                           ; BSR set to: 0
 12073  0037EC  C080  F080         	movff	___llmod@dividend,?___llmod
 12074  0037F0  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 12075  0037F4  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 12076  0037F8  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 12077                           
 12078                           ; BSR set to: 0
 12079  0037FC  0012               	return		;funcret
 12080  0037FE                     __end_of___llmod:
 12081                           	opt callstack 0
 12082                           
 12083 ;; *************** function _I2C_Master_Write *****************
 12084 ;; Defined at:
 12085 ;;		line 70 in file "I2C.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;		None
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  1    wreg      void 
 12092 ;; Registers used:
 12093 ;;		wreg, status,2, status,0, cstack
 12094 ;; Tracked objects:
 12095 ;;		On entry : 0/0
 12096 ;;		On exit  : 0/0
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12099 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12102 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12103 ;;Total ram usage:        2 bytes
 12104 ;; Hardware stack levels used:    1
 12105 ;; Hardware stack levels required when called:    4
 12106 ;; This function calls:
 12107 ;;		_I2C_Master_Wait
 12108 ;; This function is called by:
 12109 ;;		_UI_main
 12110 ;;		_brake
 12111 ;;		_start
 12112 ;;		_backwards
 12113 ;; This function uses a non-reentrant model
 12114 ;;
 12115                           
 12116                           	psect	text47
 12117  003CF6                     __ptext47:
 12118                           	opt callstack 0
 12119  003CF6                     _I2C_Master_Write:
 12120                           	opt callstack 25
 12121                           
 12122                           ;I2C.c: 71:     I2C_Master_Wait();
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;incstack = 0
 12126  003CF6  EC61  F01E         	call	_I2C_Master_Wait	;wreg free
 12127                           
 12128                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 12129  003CFA  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 12130  003CFE  0012               	return		;funcret
 12131  003D00                     __end_of_I2C_Master_Write:
 12132                           	opt callstack 0
 12133                           
 12134 ;; *************** function _I2C_Master_Stop *****************
 12135 ;; Defined at:
 12136 ;;		line 65 in file "I2C.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;		None
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;		None
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, status,2, status,0, cstack
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;Total ram usage:        0 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:    4
 12157 ;; This function calls:
 12158 ;;		_I2C_Master_Wait
 12159 ;; This function is called by:
 12160 ;;		_UI_main
 12161 ;;		_brake
 12162 ;;		_start
 12163 ;;		_backwards
 12164 ;; This function uses a non-reentrant model
 12165 ;;
 12166                           
 12167                           	psect	text48
 12168  003D00                     __ptext48:
 12169                           	opt callstack 0
 12170  003D00                     _I2C_Master_Stop:
 12171                           	opt callstack 25
 12172                           
 12173                           ;I2C.c: 66:     I2C_Master_Wait();
 12174                           
 12175                           ;incstack = 0
 12176  003D00  EC61  F01E         	call	_I2C_Master_Wait	;wreg free
 12177                           
 12178                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 12179  003D04  84C5               	bsf	4037,2,c	;volatile
 12180  003D06  0012               	return		;funcret
 12181  003D08                     __end_of_I2C_Master_Stop:
 12182                           	opt callstack 0
 12183                           
 12184 ;; *************** function _I2C_Master_Start *****************
 12185 ;; Defined at:
 12186 ;;		line 55 in file "I2C.c"
 12187 ;; Parameters:    Size  Location     Type
 12188 ;;		None
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;		None
 12191 ;; Return value:  Size  Location     Type
 12192 ;;                  1    wreg      void 
 12193 ;; Registers used:
 12194 ;;		wreg, status,2, status,0, cstack
 12195 ;; Tracked objects:
 12196 ;;		On entry : 0/0
 12197 ;;		On exit  : 0/0
 12198 ;;		Unchanged: 0/0
 12199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12204 ;;Total ram usage:        0 bytes
 12205 ;; Hardware stack levels used:    1
 12206 ;; Hardware stack levels required when called:    4
 12207 ;; This function calls:
 12208 ;;		_I2C_Master_Wait
 12209 ;; This function is called by:
 12210 ;;		_UI_main
 12211 ;;		_brake
 12212 ;;		_start
 12213 ;;		_backwards
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           
 12217                           	psect	text49
 12218  003D08                     __ptext49:
 12219                           	opt callstack 0
 12220  003D08                     _I2C_Master_Start:
 12221                           	opt callstack 25
 12222                           
 12223                           ;I2C.c: 56:     I2C_Master_Wait();
 12224                           
 12225                           ;incstack = 0
 12226  003D08  EC61  F01E         	call	_I2C_Master_Wait	;wreg free
 12227                           
 12228                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 12229  003D0C  80C5               	bsf	4037,0,c	;volatile
 12230  003D0E  0012               	return		;funcret
 12231  003D10                     __end_of_I2C_Master_Start:
 12232                           	opt callstack 0
 12233                           
 12234 ;; *************** function _I2C_Master_Read *****************
 12235 ;; Defined at:
 12236 ;;		line 77 in file "I2C.c"
 12237 ;; Parameters:    Size  Location     Type
 12238 ;;  ackBit          1    wreg     unsigned char 
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;  ackBit          1    1[BANK0 ] unsigned char 
 12241 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      unsigned char 
 12244 ;; Registers used:
 12245 ;;		wreg, status,2, status,0, cstack
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;Total ram usage:        2 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; Hardware stack levels required when called:    4
 12258 ;; This function calls:
 12259 ;;		_I2C_Master_Wait
 12260 ;; This function is called by:
 12261 ;;		_UI_main
 12262 ;;		_brake
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266                           	psect	text50
 12267  003BF0                     __ptext50:
 12268                           	opt callstack 0
 12269  003BF0                     _I2C_Master_Read:
 12270                           	opt callstack 25
 12271                           
 12272                           ;incstack = 0
 12273                           ;I2C_Master_Read@ackBit stored from wreg
 12274  003BF0  0100               	movlb	0	; () banked
 12275  003BF2  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 12276                           
 12277                           ;I2C.c: 78:     I2C_Master_Wait();
 12278  003BF4  EC61  F01E         	call	_I2C_Master_Wait	;wreg free
 12279                           
 12280                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 12281  003BF8  86C5               	bsf	4037,3,c	;volatile
 12282                           
 12283                           ;I2C.c: 81:     I2C_Master_Wait();
 12284  003BFA  EC61  F01E         	call	_I2C_Master_Wait	;wreg free
 12285                           
 12286                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 12287  003BFE  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 12288                           
 12289                           ;I2C.c: 86:     I2C_Master_Wait();
 12290  003C02  EC61  F01E         	call	_I2C_Master_Wait	;wreg free
 12291                           
 12292                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 12293  003C06  0100               	movlb	0	; () banked
 12294  003C08  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 12295  003C0A  D002               	bra	u7795
 12296  003C0C  9AC5               	bcf	4037,5,c	;volatile
 12297  003C0E  D001               	bra	u7796
 12298  003C10                     u7795:
 12299  003C10  8AC5               	bsf	4037,5,c	;volatile
 12300  003C12                     u7796:
 12301                           
 12302                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 12303  003C12  88C5               	bsf	4037,4,c	;volatile
 12304                           
 12305                           ;I2C.c: 90:     return receivedByte;
 12306  003C14  0100               	movlb	0	; () banked
 12307  003C16  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 12308                           
 12309                           ; BSR set to: 0
 12310  003C18  0012               	return		;funcret
 12311  003C1A                     __end_of_I2C_Master_Read:
 12312                           	opt callstack 0
 12313                           
 12314 ;; *************** function _I2C_Master_Wait *****************
 12315 ;; Defined at:
 12316 ;;		line 21 in file "I2C.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;		None
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;		None
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1    wreg      void 
 12323 ;; Registers used:
 12324 ;;		wreg, status,2, status,0
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/0
 12327 ;;		On exit  : 0/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12334 ;;Total ram usage:        1 bytes
 12335 ;; Hardware stack levels used:    1
 12336 ;; Hardware stack levels required when called:    3
 12337 ;; This function calls:
 12338 ;;		Nothing
 12339 ;; This function is called by:
 12340 ;;		_I2C_Master_Start
 12341 ;;		_I2C_Master_Stop
 12342 ;;		_I2C_Master_Write
 12343 ;;		_I2C_Master_Read
 12344 ;;		_I2C_Master_RepeatedStart
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           	psect	text51
 12349  003CC2                     __ptext51:
 12350                           	opt callstack 0
 12351  003CC2                     _I2C_Master_Wait:
 12352                           	opt callstack 25
 12353                           
 12354                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12355                           
 12356                           ;I2C.c: 28:     }
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;incstack = 0
 12360  003CC2  B4C7               	btfsc	4039,2,c	;volatile
 12361  003CC4  D7FE               	goto	_I2C_Master_Wait
 12362  003CC6  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12363  003CCA  0E1F               	movlw	31
 12364  003CCC  0100               	movlb	0	; () banked
 12365  003CCE  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12366  003CD0  B4D8               	btfsc	status,2,c
 12367  003CD2  0012               	return	
 12368  003CD4  D7F6               	goto	_I2C_Master_Wait
 12369  003CD6                     __end_of_I2C_Master_Wait:
 12370                           	opt callstack 0
 12371                           
 12372 ;; *************** function _I2C_Master_Init *****************
 12373 ;; Defined at:
 12374 ;;		line 32 in file "I2C.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  1    wreg      void 
 12381 ;; Registers used:
 12382 ;;		wreg, status,2, status,0, cstack
 12383 ;; Tracked objects:
 12384 ;;		On entry : 0/0
 12385 ;;		On exit  : 0/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12388 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12390 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12391 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12392 ;;Total ram usage:        8 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; Hardware stack levels required when called:    4
 12395 ;; This function calls:
 12396 ;;		___lldiv
 12397 ;; This function is called by:
 12398 ;;		_UI_main
 12399 ;;		_start
 12400 ;; This function uses a non-reentrant model
 12401 ;;
 12402                           
 12403                           	psect	text52
 12404  0037FE                     __ptext52:
 12405                           	opt callstack 0
 12406  0037FE                     _I2C_Master_Init:
 12407                           	opt callstack 25
 12408                           
 12409                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12410                           
 12411                           ; BSR set to: 0
 12412                           ;incstack = 0
 12413  0037FE  9AC6               	bcf	4038,5,c	;volatile
 12414                           
 12415                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12416  003800  8694               	bsf	3988,3,c	;volatile
 12417                           
 12418                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12419  003802  8894               	bsf	3988,4,c	;volatile
 12420                           
 12421                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12422  003804  0E80               	movlw	128
 12423  003806  0100               	movlb	0	; () banked
 12424  003808  6F80               	movwf	___lldiv@dividend& (0+255),b
 12425  00380A  0E96               	movlw	150
 12426  00380C  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12427  00380E  0E98               	movlw	152
 12428  003810  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12429  003812  0E00               	movlw	0
 12430  003814  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12431  003816  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12432  00381A  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12433  00381E  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12434  003822  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12435  003826  0E02               	movlw	2
 12436  003828                     u7785:
 12437  003828  90D8               	bcf	status,0,c
 12438  00382A  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12439  00382C  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12440  00382E  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12441  003830  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12442  003832  2EE8               	decfsz	wreg,f,c
 12443  003834  D7F9               	goto	u7785
 12444  003836  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12445  00383A  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12446  00383E  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12447  003842  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12448  003846  ECD8  F01A         	call	___lldiv	;wreg free
 12449  00384A  0100               	movlb	0	; () banked
 12450  00384C  0580               	decf	?___lldiv& (0+255),w,b
 12451  00384E  6EC8               	movwf	4040,c	;volatile
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12455  003850  0E80               	movlw	128
 12456  003852  6EC7               	movwf	4039,c	;volatile
 12457                           
 12458                           ; BSR set to: 0
 12459                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12460  003854  0E28               	movlw	40
 12461  003856  6EC6               	movwf	4038,c	;volatile
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12465  003858  0E00               	movlw	0
 12466  00385A  6EC5               	movwf	4037,c	;volatile
 12467                           
 12468                           ; BSR set to: 0
 12469  00385C  0012               	return		;funcret
 12470  00385E                     __end_of_I2C_Master_Init:
 12471                           	opt callstack 0
 12472                           
 12473 ;; *************** function ___lldiv *****************
 12474 ;; Defined at:
 12475 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12476 ;; Parameters:    Size  Location     Type
 12477 ;;  dividend        4    0[BANK0 ] unsigned long 
 12478 ;;  divisor         4    4[BANK0 ] unsigned long 
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;  quotient        4    8[BANK0 ] unsigned long 
 12481 ;;  counter         1   12[BANK0 ] unsigned char 
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  4    0[BANK0 ] unsigned long 
 12484 ;; Registers used:
 12485 ;;		wreg, status,2, status,0
 12486 ;; Tracked objects:
 12487 ;;		On entry : 0/0
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12491 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12492 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12494 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12495 ;;Total ram usage:       13 bytes
 12496 ;; Hardware stack levels used:    1
 12497 ;; Hardware stack levels required when called:    3
 12498 ;; This function calls:
 12499 ;;		Nothing
 12500 ;; This function is called by:
 12501 ;;		_I2C_Master_Init
 12502 ;; This function uses a non-reentrant model
 12503 ;;
 12504                           
 12505                           	psect	text53
 12506  0035B0                     __ptext53:
 12507                           	opt callstack 0
 12508  0035B0                     ___lldiv:
 12509                           	opt callstack 25
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;incstack = 0
 12513  0035B0  0E00               	movlw	0
 12514  0035B2  0100               	movlb	0	; () banked
 12515  0035B4  6F88               	movwf	___lldiv@quotient& (0+255),b
 12516  0035B6  0E00               	movlw	0
 12517  0035B8  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12518  0035BA  0E00               	movlw	0
 12519  0035BC  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12520  0035BE  0E00               	movlw	0
 12521  0035C0  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12522                           
 12523                           ; BSR set to: 0
 12524  0035C2  5184               	movf	___lldiv@divisor& (0+255),w,b
 12525  0035C4  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12526  0035C6  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12527  0035C8  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12528  0035CA  B4D8               	btfsc	status,2,c
 12529  0035CC  D02A               	goto	l728
 12530                           
 12531                           ; BSR set to: 0
 12532  0035CE  0E01               	movlw	1
 12533  0035D0  6F8C               	movwf	___lldiv@counter& (0+255),b
 12534  0035D2  D006               	goto	l7208
 12535  0035D4                     l7206:
 12536                           
 12537                           ; BSR set to: 0
 12538  0035D4  90D8               	bcf	status,0,c
 12539  0035D6  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12540  0035D8  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12541  0035DA  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12542  0035DC  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12543  0035DE  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12544  0035E0                     l7208:
 12545                           
 12546                           ; BSR set to: 0
 12547  0035E0  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12548  0035E2  D7F8               	goto	l7206
 12549  0035E4                     u7760:
 12550                           
 12551                           ; BSR set to: 0
 12552  0035E4  90D8               	bcf	status,0,c
 12553  0035E6  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12554  0035E8  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12555  0035EA  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12556  0035EC  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12557                           
 12558                           ; BSR set to: 0
 12559  0035EE  5184               	movf	___lldiv@divisor& (0+255),w,b
 12560  0035F0  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12561  0035F2  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12562  0035F4  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12563  0035F6  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12564  0035F8  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12565  0035FA  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12566  0035FC  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12567  0035FE  A0D8               	btfss	status,0,c
 12568  003600  D009               	goto	l7218
 12569                           
 12570                           ; BSR set to: 0
 12571  003602  5184               	movf	___lldiv@divisor& (0+255),w,b
 12572  003604  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12573  003606  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12574  003608  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12575  00360A  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12576  00360C  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12577  00360E  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12578  003610  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12579                           
 12580                           ; BSR set to: 0
 12581  003612  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12582  003614                     l7218:
 12583                           
 12584                           ; BSR set to: 0
 12585  003614  90D8               	bcf	status,0,c
 12586  003616  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12587  003618  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12588  00361A  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12589  00361C  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12590                           
 12591                           ; BSR set to: 0
 12592  00361E  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12593  003620  D7E1               	goto	u7760
 12594  003622                     l728:
 12595                           
 12596                           ; BSR set to: 0
 12597  003622  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12598  003626  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12599  00362A  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12600  00362E  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12601                           
 12602                           ; BSR set to: 0
 12603  003632  0012               	return		;funcret
 12604  003634                     __end_of___lldiv:
 12605                           	opt callstack 0
 12606                           
 12607 ;; *************** function _ISR *****************
 12608 ;; Defined at:
 12609 ;;		line 71 in file "main.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;		None
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;		None
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  1    wreg      void 
 12616 ;; Registers used:
 12617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;Total ram usage:        2 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:    2
 12630 ;; This function calls:
 12631 ;;		_echo
 12632 ;; This function is called by:
 12633 ;;		Interrupt level 2
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           	psect	intcode
 12638  000008                     __pintcode:
 12639                           	opt callstack 0
 12640  000008                     _ISR:
 12641                           	opt callstack 14
 12642                           
 12643                           ; BSR set to: 0
 12644                           ;incstack = 0
 12645  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12646  00000A  EDF4  F01C         	call	int_func,f	;refresh shadow registers
 12647                           
 12648                           	psect	intcode_body
 12649  0039E8                     __pintcode_body:
 12650                           	opt callstack 14
 12651  0039E8                     int_func:
 12652                           	opt callstack 14
 12653  0039E8  0006               	pop		; remove dummy address from shadow register refresh
 12654  0039EA  CFD9 F036          	movff	fsr2l,??_ISR
 12655  0039EE  CFDA F037          	movff	fsr2h,??_ISR+1
 12656                           
 12657                           ;main.c: 72:  if(RBIF == 1){
 12658  0039F2  A0F2               	btfss	4082,0,c	;volatile
 12659  0039F4  D012               	goto	i2l383
 12660                           
 12661                           ;main.c: 73:         if (sens){
 12662  0039F6  5058               	movf	_sens,w,c	;volatile
 12663  0039F8  1059               	iorwf	_sens+1,w,c	;volatile
 12664  0039FA  B4D8               	btfsc	status,2,c
 12665  0039FC  D005               	goto	i2l6110
 12666                           
 12667                           ;main.c: 74:             RBIE = 0;
 12668  0039FE  96F2               	bcf	4082,3,c	;volatile
 12669                           
 12670                           ;main.c: 75:             echo();
 12671  003A00  EC13  F004         	call	_echo	;wreg free
 12672                           
 12673                           ;main.c: 76:             RBIF = 0;
 12674  003A04  90F2               	bcf	4082,0,c	;volatile
 12675                           
 12676                           ;main.c: 77:             RBIE = 1;
 12677  003A06  86F2               	bsf	4082,3,c	;volatile
 12678  003A08                     i2l6110:
 12679                           
 12680                           ;main.c: 79:         if (~sens){
 12681  003A08  2858               	incf	_sens,w,c	;volatile
 12682  003A0A  E103               	bnz	i2u635_40
 12683  003A0C  2859               	incf	_sens+1,w,c	;volatile
 12684  003A0E  B4D8               	btfsc	status,2,c
 12685  003A10  D004               	goto	i2l383
 12686  003A12                     i2u635_40:
 12687                           
 12688                           ;main.c: 80:             key_was_pressed = 1;
 12689  003A12  0E01               	movlw	1
 12690  003A14  0101               	movlb	1	; () banked
 12691  003A16  6FE5               	movwf	_key_was_pressed& (0+255),b	;volatile
 12692                           
 12693                           ; BSR set to: 1
 12694                           ;main.c: 81:             INT1IF = 0;
 12695  003A18  90F0               	bcf	4080,0,c	;volatile
 12696  003A1A                     i2l383:
 12697  003A1A  C037  FFDA         	movff	??_ISR+1,fsr2h
 12698  003A1E  C036  FFD9         	movff	??_ISR,fsr2l
 12699  003A22  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12700  003A24  0011               	retfie		f
 12701  003A26                     __end_of_ISR:
 12702                           	opt callstack 0
 12703                           
 12704 ;; *************** function _echo *****************
 12705 ;; Defined at:
 12706 ;;		line 99 in file "main.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;		None
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;		None
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1    wreg      void 
 12713 ;; Registers used:
 12714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12715 ;; Tracked objects:
 12716 ;;		On entry : 0/0
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12722 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12724 ;;Total ram usage:        4 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:    1
 12727 ;; This function calls:
 12728 ;;		___fldiv
 12729 ;;		___fltol
 12730 ;;		___xxtofl
 12731 ;;		i2___awdiv
 12732 ;; This function is called by:
 12733 ;;		_ISR
 12734 ;; This function uses a non-reentrant model
 12735 ;;
 12736                           
 12737                           	psect	text55
 12738  000826                     __ptext55:
 12739                           	opt callstack 0
 12740  000826                     _echo:
 12741                           	opt callstack 14
 12742                           
 12743                           ;main.c: 100:     if (b==1){
 12744                           
 12745                           ;incstack = 0
 12746  000826  045A               	decf	_b,w,c
 12747  000828  105B               	iorwf	_b+1,w,c
 12748  00082A  A4D8               	btfss	status,2,c
 12749  00082C  D0A2               	goto	i2l5556
 12750                           
 12751                           ;main.c: 101:         if (RB7 == 1){
 12752  00082E  BE81               	btfsc	3969,7,c	;volatile
 12753                           
 12754                           ;main.c: 102:             TMR1ON = 1;
 12755  000830  80CD               	bsf	4045,0,c	;volatile
 12756                           
 12757                           ;main.c: 104:         if (RB7 == 0){
 12758                           
 12759                           ;main.c: 103:         }
 12760  000832  BE81               	btfsc	3969,7,c	;volatile
 12761  000834  D037               	goto	i2l5532
 12762                           
 12763                           ;main.c: 105:             TMR1ON = 0;
 12764  000836  90CD               	bcf	4045,0,c	;volatile
 12765                           
 12766                           ;main.c: 106:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 12767  000838  0EAE               	movlw	174
 12768  00083A  6E13               	movwf	___fldiv@a,c
 12769  00083C  0E47               	movlw	71
 12770  00083E  6E14               	movwf	___fldiv@a+1,c
 12771  000840  0E6B               	movlw	107
 12772  000842  6E15               	movwf	___fldiv@a+2,c
 12773  000844  0E42               	movlw	66
 12774  000846  6E16               	movwf	___fldiv@a+3,c
 12775  000848  50CF               	movf	4047,w,c	;volatile
 12776  00084A  6E33               	movwf	(??_echo+1)& (0+255),c
 12777  00084C  6A32               	clrf	??_echo& (0+255),c
 12778  00084E  50CE               	movf	4046,w,c	;volatile
 12779  000850  6E34               	movwf	(??_echo+2)& (0+255),c
 12780  000852  6A35               	clrf	(??_echo+3)& (0+255),c
 12781  000854  5032               	movf	??_echo,w,c
 12782  000856  1234               	iorwf	??_echo+2,f,c
 12783  000858  5033               	movf	??_echo+1,w,c
 12784  00085A  1235               	iorwf	??_echo+3,f,c
 12785  00085C  C034  F001         	movff	??_echo+2,___xxtofl@val
 12786  000860  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12787  000864  0E00               	movlw	0
 12788  000866  BE02               	btfsc	___xxtofl@val+1,7,c
 12789  000868  0EFF               	movlw	-1
 12790  00086A  6E03               	movwf	___xxtofl@val+2,c
 12791  00086C  6E04               	movwf	___xxtofl@val+3,c
 12792  00086E  0E01               	movlw	1
 12793  000870  EC60  F014         	call	___xxtofl
 12794  000874  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12795  000878  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12796  00087C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12797  000880  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12798  000884  ECB8  F00C         	call	___fldiv	;wreg free
 12799  000888  C00F  F028         	movff	?___fldiv,___fltol@f1
 12800  00088C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12801  000890  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12802  000894  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12803  000898  ECA2  F018         	call	___fltol	;wreg free
 12804  00089C  C028  F061         	movff	?___fltol,_a
 12805  0008A0  C029  F062         	movff	?___fltol+1,_a+1
 12806  0008A4                     i2l5532:
 12807                           
 12808                           ;main.c: 110:         if (a[0]>=2 && a[0]<=200){
 12809  0008A4  BE62               	btfsc	_a+1,7,c
 12810  0008A6  D065               	goto	i2l5556
 12811  0008A8  5062               	movf	_a+1,w,c
 12812  0008AA  E104               	bnz	i2u548_40
 12813  0008AC  0E02               	movlw	2
 12814  0008AE  5C61               	subwf	_a,w,c
 12815  0008B0  A0D8               	btfss	status,0,c
 12816  0008B2  D05F               	goto	i2l5556
 12817  0008B4                     i2u548_40:
 12818  0008B4  BE62               	btfsc	_a+1,7,c
 12819  0008B6  D006               	goto	i2u549_40
 12820  0008B8  5062               	movf	_a+1,w,c
 12821  0008BA  E15B               	bnz	i2l5556
 12822  0008BC  0EC9               	movlw	201
 12823  0008BE  5C61               	subwf	_a,w,c
 12824  0008C0  B0D8               	btfsc	status,0,c
 12825  0008C2  D057               	goto	i2l5556
 12826  0008C4                     i2u549_40:
 12827                           
 12828                           ;main.c: 111:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 12829  0008C4  0440               	decf	_sumf,w,c
 12830  0008C6  B4D8               	btfsc	status,2,c
 12831  0008C8  D01B               	goto	i2l5548
 12832  0008CA  0102               	movlb	2	; () banked
 12833  0008CC  5150               	movf	_dist_final& (0+255),w,b
 12834  0008CE  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 12835  0008D0  B4D8               	btfsc	status,2,c
 12836  0008D2  D016               	goto	i2l5548
 12837                           
 12838                           ; BSR set to: 2
 12839  0008D4  5152               	movf	(_dist_final+2)& (0+255),w,b
 12840  0008D6  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 12841  0008D8  B4D8               	btfsc	status,2,c
 12842  0008DA  D012               	goto	i2l5548
 12843                           
 12844                           ; BSR set to: 2
 12845  0008DC  5154               	movf	(_dist_final+4)& (0+255),w,b
 12846  0008DE  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 12847  0008E0  B4D8               	btfsc	status,2,c
 12848  0008E2  D00E               	goto	i2l5548
 12849                           
 12850                           ; BSR set to: 2
 12851                           ;main.c: 112:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 12852  0008E4  5154               	movf	(_dist_final+4)& (0+255),w,b
 12853  0008E6  2552               	addwf	(_dist_final+2)& (0+255),w,b
 12854  0008E8  6E32               	movwf	??_echo& (0+255),c
 12855  0008EA  5155               	movf	(_dist_final+5)& (0+255),w,b
 12856  0008EC  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 12857  0008EE  6E33               	movwf	(??_echo+1)& (0+255),c
 12858  0008F0  5150               	movf	_dist_final& (0+255),w,b
 12859  0008F2  2432               	addwf	??_echo,w,c
 12860  0008F4  6E38               	movwf	_sum,c
 12861  0008F6  5151               	movf	(_dist_final+1)& (0+255),w,b
 12862  0008F8  2033               	addwfc	??_echo+1,w,c
 12863  0008FA  6E39               	movwf	_sum+1,c
 12864                           
 12865                           ; BSR set to: 2
 12866                           ;main.c: 113:                 sumf[0] = 1;
 12867  0008FC  0E01               	movlw	1
 12868  0008FE  6E40               	movwf	_sumf,c
 12869  000900                     i2l5548:
 12870                           
 12871                           ;main.c: 115:             if (sumf[0]){
 12872  000900  5040               	movf	_sumf,w,c
 12873  000902  B4D8               	btfsc	status,2,c
 12874  000904  D029               	goto	i2l5554
 12875                           
 12876                           ;main.c: 116:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 12877  000906  90D8               	bcf	status,0,c
 12878  000908  3450               	rlcf	_meas,w,c	;volatile
 12879  00090A  6ED9               	movwf	fsr2l,c
 12880  00090C  3451               	rlcf	_meas+1,w,c	;volatile
 12881  00090E  6EDA               	movwf	fsr2h,c
 12882  000910  0E50               	movlw	low _dist_final
 12883  000912  26D9               	addwf	fsr2l,f,c
 12884  000914  0E02               	movlw	high _dist_final
 12885  000916  22DA               	addwfc	fsr2h,f,c
 12886  000918  CFDE F032          	movff	postinc2,??_echo
 12887  00091C  CFDD F033          	movff	postdec2,??_echo+1
 12888  000920  C038  F034         	movff	_sum,??_echo+2
 12889  000924  C039  F035         	movff	_sum+1,??_echo+3
 12890  000928  5032               	movf	??_echo,w,c
 12891  00092A  5E34               	subwf	??_echo+2,f,c
 12892  00092C  5033               	movf	??_echo+1,w,c
 12893  00092E  5A35               	subwfb	??_echo+3,f,c
 12894  000930  5061               	movf	_a,w,c
 12895  000932  2434               	addwf	??_echo+2,w,c
 12896  000934  6E38               	movwf	_sum,c
 12897  000936  5062               	movf	_a+1,w,c
 12898  000938  2035               	addwfc	??_echo+3,w,c
 12899  00093A  6E39               	movwf	_sum+1,c
 12900                           
 12901                           ;main.c: 117:                 dist_final[0][5] = (sum[0]/5);
 12902  00093C  C038  F001         	movff	_sum,i2___awdiv@dividend
 12903  000940  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 12904  000944  0E00               	movlw	0
 12905  000946  6E04               	movwf	i2___awdiv@divisor+1,c
 12906  000948  0E05               	movlw	5
 12907  00094A  6E03               	movwf	i2___awdiv@divisor,c
 12908  00094C  EC1A  F01B         	call	i2___awdiv	;wreg free
 12909  000950  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 12910  000954  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 12911  000958                     i2l5554:
 12912                           
 12913                           ;main.c: 119:             dist_final[0][meas] = a[0];
 12914  000958  90D8               	bcf	status,0,c
 12915  00095A  3450               	rlcf	_meas,w,c	;volatile
 12916  00095C  6ED9               	movwf	fsr2l,c
 12917  00095E  3451               	rlcf	_meas+1,w,c	;volatile
 12918  000960  6EDA               	movwf	fsr2h,c
 12919  000962  0E50               	movlw	low _dist_final
 12920  000964  26D9               	addwf	fsr2l,f,c
 12921  000966  0E02               	movlw	high _dist_final
 12922  000968  22DA               	addwfc	fsr2h,f,c
 12923  00096A  C061  FFDE         	movff	_a,postinc2
 12924  00096E  C062  FFDD         	movff	_a+1,postdec2
 12925  000972                     i2l5556:
 12926                           
 12927                           ;main.c: 122:     if (b==2){
 12928  000972  0E02               	movlw	2
 12929  000974  185A               	xorwf	_b,w,c
 12930  000976  105B               	iorwf	_b+1,w,c
 12931  000978  A4D8               	btfss	status,2,c
 12932  00097A  D0A4               	goto	i2l5590
 12933                           
 12934                           ;main.c: 123:         if (RB6 == 1){
 12935  00097C  BC81               	btfsc	3969,6,c	;volatile
 12936                           
 12937                           ;main.c: 124:             TMR1ON = 1;
 12938  00097E  80CD               	bsf	4045,0,c	;volatile
 12939                           
 12940                           ;main.c: 126:         if (RB6 == 0){
 12941                           
 12942                           ;main.c: 125:         }
 12943  000980  BC81               	btfsc	3969,6,c	;volatile
 12944  000982  D037               	goto	i2l5566
 12945                           
 12946                           ;main.c: 127:             TMR1ON = 0;
 12947  000984  90CD               	bcf	4045,0,c	;volatile
 12948                           
 12949                           ;main.c: 128:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 12950  000986  0EAE               	movlw	174
 12951  000988  6E13               	movwf	___fldiv@a,c
 12952  00098A  0E47               	movlw	71
 12953  00098C  6E14               	movwf	___fldiv@a+1,c
 12954  00098E  0E6B               	movlw	107
 12955  000990  6E15               	movwf	___fldiv@a+2,c
 12956  000992  0E42               	movlw	66
 12957  000994  6E16               	movwf	___fldiv@a+3,c
 12958  000996  50CF               	movf	4047,w,c	;volatile
 12959  000998  6E33               	movwf	(??_echo+1)& (0+255),c
 12960  00099A  6A32               	clrf	??_echo& (0+255),c
 12961  00099C  50CE               	movf	4046,w,c	;volatile
 12962  00099E  6E34               	movwf	(??_echo+2)& (0+255),c
 12963  0009A0  6A35               	clrf	(??_echo+3)& (0+255),c
 12964  0009A2  5032               	movf	??_echo,w,c
 12965  0009A4  1234               	iorwf	??_echo+2,f,c
 12966  0009A6  5033               	movf	??_echo+1,w,c
 12967  0009A8  1235               	iorwf	??_echo+3,f,c
 12968  0009AA  C034  F001         	movff	??_echo+2,___xxtofl@val
 12969  0009AE  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 12970  0009B2  0E00               	movlw	0
 12971  0009B4  BE02               	btfsc	___xxtofl@val+1,7,c
 12972  0009B6  0EFF               	movlw	-1
 12973  0009B8  6E03               	movwf	___xxtofl@val+2,c
 12974  0009BA  6E04               	movwf	___xxtofl@val+3,c
 12975  0009BC  0E01               	movlw	1
 12976  0009BE  EC60  F014         	call	___xxtofl
 12977  0009C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
 12978  0009C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 12979  0009CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 12980  0009CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 12981  0009D2  ECB8  F00C         	call	___fldiv	;wreg free
 12982  0009D6  C00F  F028         	movff	?___fldiv,___fltol@f1
 12983  0009DA  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 12984  0009DE  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 12985  0009E2  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 12986  0009E6  ECA2  F018         	call	___fltol	;wreg free
 12987  0009EA  C028  F063         	movff	?___fltol,_a+2
 12988  0009EE  C029  F064         	movff	?___fltol+1,_a+3
 12989  0009F2                     i2l5566:
 12990                           
 12991                           ;main.c: 131:                 if (a[1]>=2 && a[1]<=200){
 12992  0009F2  BE64               	btfsc	_a+3,7,c
 12993  0009F4  D067               	goto	i2l5590
 12994  0009F6  5064               	movf	_a+3,w,c
 12995  0009F8  E104               	bnz	i2u558_40
 12996  0009FA  0E02               	movlw	2
 12997  0009FC  5C63               	subwf	_a+2,w,c
 12998  0009FE  A0D8               	btfss	status,0,c
 12999  000A00  D061               	goto	i2l5590
 13000  000A02                     i2u558_40:
 13001  000A02  BE64               	btfsc	_a+3,7,c
 13002  000A04  D006               	goto	i2u559_40
 13003  000A06  5064               	movf	_a+3,w,c
 13004  000A08  E15D               	bnz	i2l5590
 13005  000A0A  0EC9               	movlw	201
 13006  000A0C  5C63               	subwf	_a+2,w,c
 13007  000A0E  B0D8               	btfsc	status,0,c
 13008  000A10  D059               	goto	i2l5590
 13009  000A12                     i2u559_40:
 13010                           
 13011                           ;main.c: 133:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 13012  000A12  0441               	decf	_sumf+1,w,c
 13013  000A14  B4D8               	btfsc	status,2,c
 13014  000A16  D01B               	goto	i2l5582
 13015  000A18  0102               	movlb	2	; () banked
 13016  000A1A  515C               	movf	(_dist_final+12)& (0+255),w,b
 13017  000A1C  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 13018  000A1E  B4D8               	btfsc	status,2,c
 13019  000A20  D016               	goto	i2l5582
 13020                           
 13021                           ; BSR set to: 2
 13022  000A22  515E               	movf	(_dist_final+14)& (0+255),w,b
 13023  000A24  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 13024  000A26  B4D8               	btfsc	status,2,c
 13025  000A28  D012               	goto	i2l5582
 13026                           
 13027                           ; BSR set to: 2
 13028  000A2A  5160               	movf	(_dist_final+16)& (0+255),w,b
 13029  000A2C  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 13030  000A2E  B4D8               	btfsc	status,2,c
 13031  000A30  D00E               	goto	i2l5582
 13032                           
 13033                           ; BSR set to: 2
 13034                           ;main.c: 134:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 13035  000A32  515E               	movf	(_dist_final+14)& (0+255),w,b
 13036  000A34  255C               	addwf	(_dist_final+12)& (0+255),w,b
 13037  000A36  6E32               	movwf	??_echo& (0+255),c
 13038  000A38  515F               	movf	(_dist_final+15)& (0+255),w,b
 13039  000A3A  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 13040  000A3C  6E33               	movwf	(??_echo+1)& (0+255),c
 13041  000A3E  5160               	movf	(_dist_final+16)& (0+255),w,b
 13042  000A40  2432               	addwf	??_echo,w,c
 13043  000A42  6E3A               	movwf	_sum+2,c
 13044  000A44  5161               	movf	(_dist_final+17)& (0+255),w,b
 13045  000A46  2033               	addwfc	??_echo+1,w,c
 13046  000A48  6E3B               	movwf	_sum+3,c
 13047                           
 13048                           ; BSR set to: 2
 13049                           ;main.c: 135:             sumf[1] = 1;
 13050  000A4A  0E01               	movlw	1
 13051  000A4C  6E41               	movwf	_sumf+1,c
 13052  000A4E                     i2l5582:
 13053                           
 13054                           ;main.c: 137:         if (sumf[1]){
 13055  000A4E  5041               	movf	_sumf+1,w,c
 13056  000A50  B4D8               	btfsc	status,2,c
 13057  000A52  D02B               	goto	i2l5588
 13058                           
 13059                           ;main.c: 138:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 13060  000A54  90D8               	bcf	status,0,c
 13061  000A56  3450               	rlcf	_meas,w,c	;volatile
 13062  000A58  6ED9               	movwf	fsr2l,c
 13063  000A5A  3451               	rlcf	_meas+1,w,c	;volatile
 13064  000A5C  6EDA               	movwf	fsr2h,c
 13065  000A5E  0E5C               	movlw	low (_dist_final+12)
 13066  000A60  26D9               	addwf	fsr2l,f,c
 13067  000A62  0E02               	movlw	high (_dist_final+12)
 13068  000A64  22DA               	addwfc	fsr2h,f,c
 13069  000A66  CFDE F032          	movff	postinc2,??_echo
 13070  000A6A  CFDD F033          	movff	postdec2,??_echo+1
 13071  000A6E  EE20  F03A         	lfsr	2,_sum+2
 13072  000A72  CFDE F034          	movff	postinc2,??_echo+2
 13073  000A76  CFDD F035          	movff	postdec2,??_echo+3
 13074  000A7A  5032               	movf	??_echo,w,c
 13075  000A7C  5E34               	subwf	??_echo+2,f,c
 13076  000A7E  5033               	movf	??_echo+1,w,c
 13077  000A80  5A35               	subwfb	??_echo+3,f,c
 13078  000A82  5063               	movf	_a+2,w,c
 13079  000A84  2434               	addwf	??_echo+2,w,c
 13080  000A86  6E3A               	movwf	_sum+2,c
 13081  000A88  5064               	movf	_a+3,w,c
 13082  000A8A  2035               	addwfc	??_echo+3,w,c
 13083  000A8C  6E3B               	movwf	_sum+3,c
 13084                           
 13085                           ;main.c: 139:             dist_final[1][5] = (sum[1]/5);
 13086  000A8E  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 13087  000A92  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 13088  000A96  0E00               	movlw	0
 13089  000A98  6E04               	movwf	i2___awdiv@divisor+1,c
 13090  000A9A  0E05               	movlw	5
 13091  000A9C  6E03               	movwf	i2___awdiv@divisor,c
 13092  000A9E  EC1A  F01B         	call	i2___awdiv	;wreg free
 13093  000AA2  C001  F266         	movff	?i2___awdiv,_dist_final+22
 13094  000AA6  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 13095  000AAA                     i2l5588:
 13096                           
 13097                           ;main.c: 141:         dist_final[1][meas] = a[1];
 13098  000AAA  90D8               	bcf	status,0,c
 13099  000AAC  3450               	rlcf	_meas,w,c	;volatile
 13100  000AAE  6ED9               	movwf	fsr2l,c
 13101  000AB0  3451               	rlcf	_meas+1,w,c	;volatile
 13102  000AB2  6EDA               	movwf	fsr2h,c
 13103  000AB4  0E5C               	movlw	low (_dist_final+12)
 13104  000AB6  26D9               	addwf	fsr2l,f,c
 13105  000AB8  0E02               	movlw	high (_dist_final+12)
 13106  000ABA  22DA               	addwfc	fsr2h,f,c
 13107  000ABC  C063  FFDE         	movff	_a+2,postinc2
 13108  000AC0  C064  FFDD         	movff	_a+3,postdec2
 13109  000AC4                     i2l5590:
 13110                           
 13111                           ;main.c: 144:     if (b==3){
 13112  000AC4  0E03               	movlw	3
 13113  000AC6  185A               	xorwf	_b,w,c
 13114  000AC8  105B               	iorwf	_b+1,w,c
 13115  000ACA  A4D8               	btfss	status,2,c
 13116  000ACC  D0A4               	goto	i2l5624
 13117                           
 13118                           ;main.c: 145:         if (RB5 == 1){
 13119  000ACE  BA81               	btfsc	3969,5,c	;volatile
 13120                           
 13121                           ;main.c: 146:             TMR1ON = 1;
 13122  000AD0  80CD               	bsf	4045,0,c	;volatile
 13123                           
 13124                           ;main.c: 148:         if (RB5 == 0){
 13125                           
 13126                           ;main.c: 147:         }
 13127  000AD2  BA81               	btfsc	3969,5,c	;volatile
 13128  000AD4  D037               	goto	i2l5600
 13129                           
 13130                           ;main.c: 149:             TMR1ON = 0;
 13131  000AD6  90CD               	bcf	4045,0,c	;volatile
 13132                           
 13133                           ;main.c: 150:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 13134  000AD8  0EAE               	movlw	174
 13135  000ADA  6E13               	movwf	___fldiv@a,c
 13136  000ADC  0E47               	movlw	71
 13137  000ADE  6E14               	movwf	___fldiv@a+1,c
 13138  000AE0  0E6B               	movlw	107
 13139  000AE2  6E15               	movwf	___fldiv@a+2,c
 13140  000AE4  0E42               	movlw	66
 13141  000AE6  6E16               	movwf	___fldiv@a+3,c
 13142  000AE8  50CF               	movf	4047,w,c	;volatile
 13143  000AEA  6E33               	movwf	(??_echo+1)& (0+255),c
 13144  000AEC  6A32               	clrf	??_echo& (0+255),c
 13145  000AEE  50CE               	movf	4046,w,c	;volatile
 13146  000AF0  6E34               	movwf	(??_echo+2)& (0+255),c
 13147  000AF2  6A35               	clrf	(??_echo+3)& (0+255),c
 13148  000AF4  5032               	movf	??_echo,w,c
 13149  000AF6  1234               	iorwf	??_echo+2,f,c
 13150  000AF8  5033               	movf	??_echo+1,w,c
 13151  000AFA  1235               	iorwf	??_echo+3,f,c
 13152  000AFC  C034  F001         	movff	??_echo+2,___xxtofl@val
 13153  000B00  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13154  000B04  0E00               	movlw	0
 13155  000B06  BE02               	btfsc	___xxtofl@val+1,7,c
 13156  000B08  0EFF               	movlw	-1
 13157  000B0A  6E03               	movwf	___xxtofl@val+2,c
 13158  000B0C  6E04               	movwf	___xxtofl@val+3,c
 13159  000B0E  0E01               	movlw	1
 13160  000B10  EC60  F014         	call	___xxtofl
 13161  000B14  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13162  000B18  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13163  000B1C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13164  000B20  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13165  000B24  ECB8  F00C         	call	___fldiv	;wreg free
 13166  000B28  C00F  F028         	movff	?___fldiv,___fltol@f1
 13167  000B2C  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13168  000B30  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13169  000B34  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13170  000B38  ECA2  F018         	call	___fltol	;wreg free
 13171  000B3C  C028  F065         	movff	?___fltol,_a+4
 13172  000B40  C029  F066         	movff	?___fltol+1,_a+5
 13173  000B44                     i2l5600:
 13174                           
 13175                           ;main.c: 153:                 if (a[2]>=2 && a[2]<=200){
 13176  000B44  BE66               	btfsc	_a+5,7,c
 13177  000B46  D067               	goto	i2l5624
 13178  000B48  5066               	movf	_a+5,w,c
 13179  000B4A  E104               	bnz	i2u568_40
 13180  000B4C  0E02               	movlw	2
 13181  000B4E  5C65               	subwf	_a+4,w,c
 13182  000B50  A0D8               	btfss	status,0,c
 13183  000B52  D061               	goto	i2l5624
 13184  000B54                     i2u568_40:
 13185  000B54  BE66               	btfsc	_a+5,7,c
 13186  000B56  D006               	goto	i2u569_40
 13187  000B58  5066               	movf	_a+5,w,c
 13188  000B5A  E15D               	bnz	i2l5624
 13189  000B5C  0EC9               	movlw	201
 13190  000B5E  5C65               	subwf	_a+4,w,c
 13191  000B60  B0D8               	btfsc	status,0,c
 13192  000B62  D059               	goto	i2l5624
 13193  000B64                     i2u569_40:
 13194                           
 13195                           ;main.c: 155:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 13196  000B64  0442               	decf	_sumf+2,w,c
 13197  000B66  B4D8               	btfsc	status,2,c
 13198  000B68  D01B               	goto	i2l5616
 13199  000B6A  0102               	movlb	2	; () banked
 13200  000B6C  5168               	movf	(_dist_final+24)& (0+255),w,b
 13201  000B6E  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 13202  000B70  B4D8               	btfsc	status,2,c
 13203  000B72  D016               	goto	i2l5616
 13204                           
 13205                           ; BSR set to: 2
 13206  000B74  516A               	movf	(_dist_final+26)& (0+255),w,b
 13207  000B76  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 13208  000B78  B4D8               	btfsc	status,2,c
 13209  000B7A  D012               	goto	i2l5616
 13210                           
 13211                           ; BSR set to: 2
 13212  000B7C  516C               	movf	(_dist_final+28)& (0+255),w,b
 13213  000B7E  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 13214  000B80  B4D8               	btfsc	status,2,c
 13215  000B82  D00E               	goto	i2l5616
 13216                           
 13217                           ; BSR set to: 2
 13218                           ;main.c: 156:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 13219  000B84  516A               	movf	(_dist_final+26)& (0+255),w,b
 13220  000B86  2568               	addwf	(_dist_final+24)& (0+255),w,b
 13221  000B88  6E32               	movwf	??_echo& (0+255),c
 13222  000B8A  516B               	movf	(_dist_final+27)& (0+255),w,b
 13223  000B8C  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 13224  000B8E  6E33               	movwf	(??_echo+1)& (0+255),c
 13225  000B90  516C               	movf	(_dist_final+28)& (0+255),w,b
 13226  000B92  2432               	addwf	??_echo,w,c
 13227  000B94  6E3C               	movwf	_sum+4,c
 13228  000B96  516D               	movf	(_dist_final+29)& (0+255),w,b
 13229  000B98  2033               	addwfc	??_echo+1,w,c
 13230  000B9A  6E3D               	movwf	_sum+5,c
 13231                           
 13232                           ; BSR set to: 2
 13233                           ;main.c: 157:             sumf[2] = 1;
 13234  000B9C  0E01               	movlw	1
 13235  000B9E  6E42               	movwf	_sumf+2,c
 13236  000BA0                     i2l5616:
 13237                           
 13238                           ;main.c: 159:         if (sumf[2]){
 13239  000BA0  5042               	movf	_sumf+2,w,c
 13240  000BA2  B4D8               	btfsc	status,2,c
 13241  000BA4  D02B               	goto	i2l5622
 13242                           
 13243                           ;main.c: 160:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 13244  000BA6  90D8               	bcf	status,0,c
 13245  000BA8  3450               	rlcf	_meas,w,c	;volatile
 13246  000BAA  6ED9               	movwf	fsr2l,c
 13247  000BAC  3451               	rlcf	_meas+1,w,c	;volatile
 13248  000BAE  6EDA               	movwf	fsr2h,c
 13249  000BB0  0E68               	movlw	low (_dist_final+24)
 13250  000BB2  26D9               	addwf	fsr2l,f,c
 13251  000BB4  0E02               	movlw	high (_dist_final+24)
 13252  000BB6  22DA               	addwfc	fsr2h,f,c
 13253  000BB8  CFDE F032          	movff	postinc2,??_echo
 13254  000BBC  CFDD F033          	movff	postdec2,??_echo+1
 13255  000BC0  EE20  F03C         	lfsr	2,_sum+4
 13256  000BC4  CFDE F034          	movff	postinc2,??_echo+2
 13257  000BC8  CFDD F035          	movff	postdec2,??_echo+3
 13258  000BCC  5032               	movf	??_echo,w,c
 13259  000BCE  5E34               	subwf	??_echo+2,f,c
 13260  000BD0  5033               	movf	??_echo+1,w,c
 13261  000BD2  5A35               	subwfb	??_echo+3,f,c
 13262  000BD4  5065               	movf	_a+4,w,c
 13263  000BD6  2434               	addwf	??_echo+2,w,c
 13264  000BD8  6E3C               	movwf	_sum+4,c
 13265  000BDA  5066               	movf	_a+5,w,c
 13266  000BDC  2035               	addwfc	??_echo+3,w,c
 13267  000BDE  6E3D               	movwf	_sum+5,c
 13268                           
 13269                           ;main.c: 161:             dist_final[2][5] = (sum[2]/5);
 13270  000BE0  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 13271  000BE4  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 13272  000BE8  0E00               	movlw	0
 13273  000BEA  6E04               	movwf	i2___awdiv@divisor+1,c
 13274  000BEC  0E05               	movlw	5
 13275  000BEE  6E03               	movwf	i2___awdiv@divisor,c
 13276  000BF0  EC1A  F01B         	call	i2___awdiv	;wreg free
 13277  000BF4  C001  F272         	movff	?i2___awdiv,_dist_final+34
 13278  000BF8  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 13279  000BFC                     i2l5622:
 13280                           
 13281                           ;main.c: 163:         dist_final[2][meas] = a[2];
 13282  000BFC  90D8               	bcf	status,0,c
 13283  000BFE  3450               	rlcf	_meas,w,c	;volatile
 13284  000C00  6ED9               	movwf	fsr2l,c
 13285  000C02  3451               	rlcf	_meas+1,w,c	;volatile
 13286  000C04  6EDA               	movwf	fsr2h,c
 13287  000C06  0E68               	movlw	low (_dist_final+24)
 13288  000C08  26D9               	addwf	fsr2l,f,c
 13289  000C0A  0E02               	movlw	high (_dist_final+24)
 13290  000C0C  22DA               	addwfc	fsr2h,f,c
 13291  000C0E  C065  FFDE         	movff	_a+4,postinc2
 13292  000C12  C066  FFDD         	movff	_a+5,postdec2
 13293  000C16                     i2l5624:
 13294                           
 13295                           ;main.c: 166:     if (b==4){
 13296  000C16  0E04               	movlw	4
 13297  000C18  185A               	xorwf	_b,w,c
 13298  000C1A  105B               	iorwf	_b+1,w,c
 13299  000C1C  A4D8               	btfss	status,2,c
 13300  000C1E  0012               	return	
 13301                           
 13302                           ;main.c: 167:         if (RB4 == 1){
 13303  000C20  B881               	btfsc	3969,4,c	;volatile
 13304                           
 13305                           ;main.c: 168:             TMR1ON = 1;
 13306  000C22  80CD               	bsf	4045,0,c	;volatile
 13307                           
 13308                           ;main.c: 170:         if (RB4 == 0){
 13309                           
 13310                           ;main.c: 169:         }
 13311  000C24  B881               	btfsc	3969,4,c	;volatile
 13312  000C26  D037               	goto	i2l5634
 13313                           
 13314                           ;main.c: 171:             TMR1ON = 0;
 13315  000C28  90CD               	bcf	4045,0,c	;volatile
 13316                           
 13317                           ;main.c: 172:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 13318  000C2A  0EAE               	movlw	174
 13319  000C2C  6E13               	movwf	___fldiv@a,c
 13320  000C2E  0E47               	movlw	71
 13321  000C30  6E14               	movwf	___fldiv@a+1,c
 13322  000C32  0E6B               	movlw	107
 13323  000C34  6E15               	movwf	___fldiv@a+2,c
 13324  000C36  0E42               	movlw	66
 13325  000C38  6E16               	movwf	___fldiv@a+3,c
 13326  000C3A  50CF               	movf	4047,w,c	;volatile
 13327  000C3C  6E33               	movwf	(??_echo+1)& (0+255),c
 13328  000C3E  6A32               	clrf	??_echo& (0+255),c
 13329  000C40  50CE               	movf	4046,w,c	;volatile
 13330  000C42  6E34               	movwf	(??_echo+2)& (0+255),c
 13331  000C44  6A35               	clrf	(??_echo+3)& (0+255),c
 13332  000C46  5032               	movf	??_echo,w,c
 13333  000C48  1234               	iorwf	??_echo+2,f,c
 13334  000C4A  5033               	movf	??_echo+1,w,c
 13335  000C4C  1235               	iorwf	??_echo+3,f,c
 13336  000C4E  C034  F001         	movff	??_echo+2,___xxtofl@val
 13337  000C52  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13338  000C56  0E00               	movlw	0
 13339  000C58  BE02               	btfsc	___xxtofl@val+1,7,c
 13340  000C5A  0EFF               	movlw	-1
 13341  000C5C  6E03               	movwf	___xxtofl@val+2,c
 13342  000C5E  6E04               	movwf	___xxtofl@val+3,c
 13343  000C60  0E01               	movlw	1
 13344  000C62  EC60  F014         	call	___xxtofl
 13345  000C66  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13346  000C6A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13347  000C6E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13348  000C72  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13349  000C76  ECB8  F00C         	call	___fldiv	;wreg free
 13350  000C7A  C00F  F028         	movff	?___fldiv,___fltol@f1
 13351  000C7E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13352  000C82  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13353  000C86  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13354  000C8A  ECA2  F018         	call	___fltol	;wreg free
 13355  000C8E  C028  F067         	movff	?___fltol,_a+6
 13356  000C92  C029  F068         	movff	?___fltol+1,_a+7
 13357  000C96                     i2l5634:
 13358                           
 13359                           ;main.c: 175:                 if (a[3]>=2 && a[3]<=200){
 13360  000C96  BE68               	btfsc	_a+7,7,c
 13361  000C98  0012               	return	
 13362  000C9A  5068               	movf	_a+7,w,c
 13363  000C9C  E104               	bnz	i2u578_40
 13364  000C9E  0E02               	movlw	2
 13365  000CA0  5C67               	subwf	_a+6,w,c
 13366  000CA2  A0D8               	btfss	status,0,c
 13367  000CA4  0012               	return	
 13368  000CA6                     i2u578_40:
 13369  000CA6  BE68               	btfsc	_a+7,7,c
 13370  000CA8  D006               	goto	i2u579_40
 13371  000CAA  5068               	movf	_a+7,w,c
 13372  000CAC  E15D               	bnz	i2l410
 13373  000CAE  0EC9               	movlw	201
 13374  000CB0  5C67               	subwf	_a+6,w,c
 13375  000CB2  B0D8               	btfsc	status,0,c
 13376  000CB4  0012               	return	
 13377  000CB6                     i2u579_40:
 13378                           
 13379                           ;main.c: 177:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 13380  000CB6  0443               	decf	_sumf+3,w,c
 13381  000CB8  B4D8               	btfsc	status,2,c
 13382  000CBA  D01B               	goto	i2l5650
 13383  000CBC  0102               	movlb	2	; () banked
 13384  000CBE  5174               	movf	(_dist_final+36)& (0+255),w,b
 13385  000CC0  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 13386  000CC2  B4D8               	btfsc	status,2,c
 13387  000CC4  D016               	goto	i2l5650
 13388                           
 13389                           ; BSR set to: 2
 13390  000CC6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13391  000CC8  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 13392  000CCA  B4D8               	btfsc	status,2,c
 13393  000CCC  D012               	goto	i2l5650
 13394                           
 13395                           ; BSR set to: 2
 13396  000CCE  5178               	movf	(_dist_final+40)& (0+255),w,b
 13397  000CD0  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 13398  000CD2  B4D8               	btfsc	status,2,c
 13399  000CD4  D00E               	goto	i2l5650
 13400                           
 13401                           ; BSR set to: 2
 13402                           ;main.c: 178:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 13403  000CD6  5176               	movf	(_dist_final+38)& (0+255),w,b
 13404  000CD8  2574               	addwf	(_dist_final+36)& (0+255),w,b
 13405  000CDA  6E32               	movwf	??_echo& (0+255),c
 13406  000CDC  5177               	movf	(_dist_final+39)& (0+255),w,b
 13407  000CDE  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 13408  000CE0  6E33               	movwf	(??_echo+1)& (0+255),c
 13409  000CE2  5178               	movf	(_dist_final+40)& (0+255),w,b
 13410  000CE4  2432               	addwf	??_echo,w,c
 13411  000CE6  6E3E               	movwf	_sum+6,c
 13412  000CE8  5179               	movf	(_dist_final+41)& (0+255),w,b
 13413  000CEA  2033               	addwfc	??_echo+1,w,c
 13414  000CEC  6E3F               	movwf	_sum+7,c
 13415                           
 13416                           ; BSR set to: 2
 13417                           ;main.c: 179:             sumf[3] = 1;
 13418  000CEE  0E01               	movlw	1
 13419  000CF0  6E43               	movwf	_sumf+3,c
 13420  000CF2                     i2l5650:
 13421                           
 13422                           ;main.c: 181:         if (sumf[3]){
 13423  000CF2  5043               	movf	_sumf+3,w,c
 13424  000CF4  B4D8               	btfsc	status,2,c
 13425  000CF6  D02B               	goto	i2l5656
 13426                           
 13427                           ;main.c: 182:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 13428  000CF8  90D8               	bcf	status,0,c
 13429  000CFA  3450               	rlcf	_meas,w,c	;volatile
 13430  000CFC  6ED9               	movwf	fsr2l,c
 13431  000CFE  3451               	rlcf	_meas+1,w,c	;volatile
 13432  000D00  6EDA               	movwf	fsr2h,c
 13433  000D02  0E74               	movlw	low (_dist_final+36)
 13434  000D04  26D9               	addwf	fsr2l,f,c
 13435  000D06  0E02               	movlw	high (_dist_final+36)
 13436  000D08  22DA               	addwfc	fsr2h,f,c
 13437  000D0A  CFDE F032          	movff	postinc2,??_echo
 13438  000D0E  CFDD F033          	movff	postdec2,??_echo+1
 13439  000D12  EE20  F03E         	lfsr	2,_sum+6
 13440  000D16  CFDE F034          	movff	postinc2,??_echo+2
 13441  000D1A  CFDD F035          	movff	postdec2,??_echo+3
 13442  000D1E  5032               	movf	??_echo,w,c
 13443  000D20  5E34               	subwf	??_echo+2,f,c
 13444  000D22  5033               	movf	??_echo+1,w,c
 13445  000D24  5A35               	subwfb	??_echo+3,f,c
 13446  000D26  5067               	movf	_a+6,w,c
 13447  000D28  2434               	addwf	??_echo+2,w,c
 13448  000D2A  6E3E               	movwf	_sum+6,c
 13449  000D2C  5068               	movf	_a+7,w,c
 13450  000D2E  2035               	addwfc	??_echo+3,w,c
 13451  000D30  6E3F               	movwf	_sum+7,c
 13452                           
 13453                           ;main.c: 183:             dist_final[3][5] = (sum[3]/5);
 13454  000D32  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 13455  000D36  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 13456  000D3A  0E00               	movlw	0
 13457  000D3C  6E04               	movwf	i2___awdiv@divisor+1,c
 13458  000D3E  0E05               	movlw	5
 13459  000D40  6E03               	movwf	i2___awdiv@divisor,c
 13460  000D42  EC1A  F01B         	call	i2___awdiv	;wreg free
 13461  000D46  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 13462  000D4A  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 13463  000D4E                     i2l5656:
 13464                           
 13465                           ;main.c: 185:         dist_final[3][meas] = a[3];
 13466  000D4E  90D8               	bcf	status,0,c
 13467  000D50  3450               	rlcf	_meas,w,c	;volatile
 13468  000D52  6ED9               	movwf	fsr2l,c
 13469  000D54  3451               	rlcf	_meas+1,w,c	;volatile
 13470  000D56  6EDA               	movwf	fsr2h,c
 13471  000D58  0E74               	movlw	low (_dist_final+36)
 13472  000D5A  26D9               	addwf	fsr2l,f,c
 13473  000D5C  0E02               	movlw	high (_dist_final+36)
 13474  000D5E  22DA               	addwfc	fsr2h,f,c
 13475  000D60  C067  FFDE         	movff	_a+6,postinc2
 13476  000D64  C068  FFDD         	movff	_a+7,postdec2
 13477  000D68                     i2l410:
 13478  000D68  0012               	return		;funcret
 13479  000D6A                     __end_of_echo:
 13480                           	opt callstack 0
 13481                           
 13482 ;; *************** function i2___awdiv *****************
 13483 ;; Defined at:
 13484 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 13485 ;; Parameters:    Size  Location     Type
 13486 ;;  dividend        2    0[COMRAM] int 
 13487 ;;  divisor         2    2[COMRAM] int 
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;  __awdiv         2    6[COMRAM] int 
 13490 ;;  __awdiv         1    5[COMRAM] unsigned char 
 13491 ;;  __awdiv         1    4[COMRAM] unsigned char 
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  2    0[COMRAM] int 
 13494 ;; Registers used:
 13495 ;;		wreg, status,2, status,0
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13502 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13504 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13505 ;;Total ram usage:        8 bytes
 13506 ;; Hardware stack levels used:    1
 13507 ;; This function calls:
 13508 ;;		Nothing
 13509 ;; This function is called by:
 13510 ;;		_echo
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           	psect	text56
 13515  003634                     __ptext56:
 13516                           	opt callstack 0
 13517  003634                     i2___awdiv:
 13518                           	opt callstack 14
 13519                           
 13520                           ;incstack = 0
 13521  003634  0E00               	movlw	0
 13522  003636  6E06               	movwf	i2___awdiv@sign,c
 13523  003638  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13524  00363A  D006               	goto	i2l5392
 13525  00363C  6C03               	negf	i2___awdiv@divisor,c
 13526  00363E  1E04               	comf	i2___awdiv@divisor+1,f,c
 13527  003640  B0D8               	btfsc	status,0,c
 13528  003642  2A04               	incf	i2___awdiv@divisor+1,f,c
 13529  003644  0E01               	movlw	1
 13530  003646  6E06               	movwf	i2___awdiv@sign,c
 13531  003648                     i2l5392:
 13532  003648  AE02               	btfss	i2___awdiv@dividend+1,7,c
 13533  00364A  D006               	goto	i2l5398
 13534  00364C  6C01               	negf	i2___awdiv@dividend,c
 13535  00364E  1E02               	comf	i2___awdiv@dividend+1,f,c
 13536  003650  B0D8               	btfsc	status,0,c
 13537  003652  2A02               	incf	i2___awdiv@dividend+1,f,c
 13538  003654  0E01               	movlw	1
 13539  003656  1A06               	xorwf	i2___awdiv@sign,f,c
 13540  003658                     i2l5398:
 13541  003658  0E00               	movlw	0
 13542  00365A  6E08               	movwf	i2___awdiv@quotient+1,c
 13543  00365C  0E00               	movlw	0
 13544  00365E  6E07               	movwf	i2___awdiv@quotient,c
 13545  003660  5003               	movf	i2___awdiv@divisor,w,c
 13546  003662  1004               	iorwf	i2___awdiv@divisor+1,w,c
 13547  003664  B4D8               	btfsc	status,2,c
 13548  003666  D01C               	goto	i2l5420
 13549  003668  0E01               	movlw	1
 13550  00366A  6E05               	movwf	i2___awdiv@counter,c
 13551  00366C  D004               	goto	i2l5406
 13552  00366E                     i2l5404:
 13553  00366E  90D8               	bcf	status,0,c
 13554  003670  3603               	rlcf	i2___awdiv@divisor,f,c
 13555  003672  3604               	rlcf	i2___awdiv@divisor+1,f,c
 13556  003674  2A05               	incf	i2___awdiv@counter,f,c
 13557  003676                     i2l5406:
 13558  003676  AE04               	btfss	i2___awdiv@divisor+1,7,c
 13559  003678  D7FA               	goto	i2l5404
 13560  00367A                     i2u540_40:
 13561  00367A  90D8               	bcf	status,0,c
 13562  00367C  3607               	rlcf	i2___awdiv@quotient,f,c
 13563  00367E  3608               	rlcf	i2___awdiv@quotient+1,f,c
 13564  003680  5003               	movf	i2___awdiv@divisor,w,c
 13565  003682  5C01               	subwf	i2___awdiv@dividend,w,c
 13566  003684  5004               	movf	i2___awdiv@divisor+1,w,c
 13567  003686  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13568  003688  A0D8               	btfss	status,0,c
 13569  00368A  D005               	goto	i2l5416
 13570  00368C  5003               	movf	i2___awdiv@divisor,w,c
 13571  00368E  5E01               	subwf	i2___awdiv@dividend,f,c
 13572  003690  5004               	movf	i2___awdiv@divisor+1,w,c
 13573  003692  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13574  003694  8007               	bsf	i2___awdiv@quotient,0,c
 13575  003696                     i2l5416:
 13576  003696  90D8               	bcf	status,0,c
 13577  003698  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13578  00369A  3203               	rrcf	i2___awdiv@divisor,f,c
 13579  00369C  2E05               	decfsz	i2___awdiv@counter,f,c
 13580  00369E  D7ED               	goto	i2u540_40
 13581  0036A0                     i2l5420:
 13582  0036A0  5006               	movf	i2___awdiv@sign,w,c
 13583  0036A2  B4D8               	btfsc	status,2,c
 13584  0036A4  D004               	goto	i2l5424
 13585  0036A6  6C07               	negf	i2___awdiv@quotient,c
 13586  0036A8  1E08               	comf	i2___awdiv@quotient+1,f,c
 13587  0036AA  B0D8               	btfsc	status,0,c
 13588  0036AC  2A08               	incf	i2___awdiv@quotient+1,f,c
 13589  0036AE                     i2l5424:
 13590  0036AE  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13591  0036B2  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13592  0036B6  0012               	return		;funcret
 13593  0036B8                     __end_ofi2___awdiv:
 13594                           	opt callstack 0
 13595                           
 13596 ;; *************** function ___xxtofl *****************
 13597 ;; Defined at:
 13598 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13599 ;; Parameters:    Size  Location     Type
 13600 ;;  sign            1    wreg     unsigned char 
 13601 ;;  val             4    0[COMRAM] long 
 13602 ;; Auto vars:     Size  Location     Type
 13603 ;;  sign            1    8[COMRAM] unsigned char 
 13604 ;;  arg             4   10[COMRAM] unsigned long 
 13605 ;;  exp             1    9[COMRAM] unsigned char 
 13606 ;; Return value:  Size  Location     Type
 13607 ;;                  4    0[COMRAM] unsigned char 
 13608 ;; Registers used:
 13609 ;;		wreg, status,2, status,0
 13610 ;; Tracked objects:
 13611 ;;		On entry : 0/0
 13612 ;;		On exit  : 0/0
 13613 ;;		Unchanged: 0/0
 13614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13616 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13617 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13618 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13619 ;;Total ram usage:       14 bytes
 13620 ;; Hardware stack levels used:    1
 13621 ;; This function calls:
 13622 ;;		Nothing
 13623 ;; This function is called by:
 13624 ;;		_echo
 13625 ;; This function uses a non-reentrant model
 13626 ;;
 13627                           
 13628                           	psect	text57
 13629  0028C0                     __ptext57:
 13630                           	opt callstack 0
 13631  0028C0                     ___xxtofl:
 13632                           	opt callstack 14
 13633                           
 13634                           ;incstack = 0
 13635                           ;___xxtofl@sign stored from wreg
 13636  0028C0  6E09               	movwf	___xxtofl@sign,c
 13637  0028C2  5009               	movf	___xxtofl@sign,w,c
 13638  0028C4  A4D8               	btfss	status,2,c
 13639  0028C6  AE04               	btfss	___xxtofl@val+3,7,c
 13640  0028C8  D01A               	goto	i2l1356
 13641  0028CA  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13642  0028CE  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13643  0028D2  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13644  0028D6  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13645  0028DA  1E05               	comf	??___xxtofl,f,c
 13646  0028DC  1E06               	comf	??___xxtofl+1,f,c
 13647  0028DE  1E07               	comf	??___xxtofl+2,f,c
 13648  0028E0  1E08               	comf	??___xxtofl+3,f,c
 13649  0028E2  2A05               	incf	??___xxtofl,f,c
 13650  0028E4  0E00               	movlw	0
 13651  0028E6  2206               	addwfc	??___xxtofl+1,f,c
 13652  0028E8  2207               	addwfc	??___xxtofl+2,f,c
 13653  0028EA  2208               	addwfc	??___xxtofl+3,f,c
 13654  0028EC  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13655  0028F0  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13656  0028F4  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13657  0028F8  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13658  0028FC  D008               	goto	i2l5344
 13659  0028FE                     i2l1356:
 13660  0028FE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13661  002902  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13662  002906  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13663  00290A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13664  00290E                     i2l5344:
 13665  00290E  5001               	movf	___xxtofl@val,w,c
 13666  002910  1002               	iorwf	___xxtofl@val+1,w,c
 13667  002912  1003               	iorwf	___xxtofl@val+2,w,c
 13668  002914  1004               	iorwf	___xxtofl@val+3,w,c
 13669  002916  A4D8               	btfss	status,2,c
 13670  002918  D009               	goto	i2l5350
 13671  00291A  0E00               	movlw	0
 13672  00291C  6E01               	movwf	?___xxtofl,c
 13673  00291E  0E00               	movlw	0
 13674  002920  6E02               	movwf	?___xxtofl+1,c
 13675  002922  0E00               	movlw	0
 13676  002924  6E03               	movwf	?___xxtofl+2,c
 13677  002926  0E00               	movlw	0
 13678  002928  6E04               	movwf	?___xxtofl+3,c
 13679  00292A  0012               	return	
 13680  00292C                     i2l5350:
 13681  00292C  0E96               	movlw	150
 13682  00292E  6E0A               	movwf	___xxtofl@exp,c
 13683  002930  D006               	goto	i2l5354
 13684  002932                     i2l5352:
 13685  002932  2A0A               	incf	___xxtofl@exp,f,c
 13686  002934  90D8               	bcf	status,0,c
 13687  002936  320E               	rrcf	___xxtofl@arg+3,f,c
 13688  002938  320D               	rrcf	___xxtofl@arg+2,f,c
 13689  00293A  320C               	rrcf	___xxtofl@arg+1,f,c
 13690  00293C  320B               	rrcf	___xxtofl@arg,f,c
 13691  00293E                     i2l5354:
 13692  00293E  0E00               	movlw	0
 13693  002940  140B               	andwf	___xxtofl@arg,w,c
 13694  002942  6E05               	movwf	??___xxtofl& (0+255),c
 13695  002944  0E00               	movlw	0
 13696  002946  140C               	andwf	___xxtofl@arg+1,w,c
 13697  002948  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13698  00294A  0E00               	movlw	0
 13699  00294C  140D               	andwf	___xxtofl@arg+2,w,c
 13700  00294E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13701  002950  0EFE               	movlw	254
 13702  002952  140E               	andwf	___xxtofl@arg+3,w,c
 13703  002954  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13704  002956  5005               	movf	??___xxtofl,w,c
 13705  002958  1006               	iorwf	??___xxtofl+1,w,c
 13706  00295A  1007               	iorwf	??___xxtofl+2,w,c
 13707  00295C  1008               	iorwf	??___xxtofl+3,w,c
 13708  00295E  B4D8               	btfsc	status,2,c
 13709  002960  D00D               	goto	i2l1363
 13710  002962  D7E7               	goto	i2l5352
 13711  002964                     i2l5356:
 13712  002964  2A0A               	incf	___xxtofl@exp,f,c
 13713  002966  0E01               	movlw	1
 13714  002968  260B               	addwf	___xxtofl@arg,f,c
 13715  00296A  0E00               	movlw	0
 13716  00296C  220C               	addwfc	___xxtofl@arg+1,f,c
 13717  00296E  220D               	addwfc	___xxtofl@arg+2,f,c
 13718  002970  220E               	addwfc	___xxtofl@arg+3,f,c
 13719  002972  90D8               	bcf	status,0,c
 13720  002974  320E               	rrcf	___xxtofl@arg+3,f,c
 13721  002976  320D               	rrcf	___xxtofl@arg+2,f,c
 13722  002978  320C               	rrcf	___xxtofl@arg+1,f,c
 13723  00297A  320B               	rrcf	___xxtofl@arg,f,c
 13724  00297C                     i2l1363:
 13725  00297C  0E00               	movlw	0
 13726  00297E  140B               	andwf	___xxtofl@arg,w,c
 13727  002980  6E05               	movwf	??___xxtofl& (0+255),c
 13728  002982  0E00               	movlw	0
 13729  002984  140C               	andwf	___xxtofl@arg+1,w,c
 13730  002986  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 13731  002988  0E00               	movlw	0
 13732  00298A  140D               	andwf	___xxtofl@arg+2,w,c
 13733  00298C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 13734  00298E  0EFF               	movlw	255
 13735  002990  140E               	andwf	___xxtofl@arg+3,w,c
 13736  002992  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 13737  002994  5005               	movf	??___xxtofl,w,c
 13738  002996  1006               	iorwf	??___xxtofl+1,w,c
 13739  002998  1007               	iorwf	??___xxtofl+2,w,c
 13740  00299A  1008               	iorwf	??___xxtofl+3,w,c
 13741  00299C  B4D8               	btfsc	status,2,c
 13742  00299E  D007               	goto	i2l5364
 13743  0029A0  D7E1               	goto	i2l5356
 13744  0029A2                     i2l5362:
 13745  0029A2  060A               	decf	___xxtofl@exp,f,c
 13746  0029A4  90D8               	bcf	status,0,c
 13747  0029A6  360B               	rlcf	___xxtofl@arg,f,c
 13748  0029A8  360C               	rlcf	___xxtofl@arg+1,f,c
 13749  0029AA  360D               	rlcf	___xxtofl@arg+2,f,c
 13750  0029AC  360E               	rlcf	___xxtofl@arg+3,f,c
 13751  0029AE                     i2l5364:
 13752  0029AE  BE0D               	btfsc	___xxtofl@arg+2,7,c
 13753  0029B0  D003               	goto	i2u533_40
 13754  0029B2  0E02               	movlw	2
 13755  0029B4  600A               	cpfslt	___xxtofl@exp,c
 13756  0029B6  D7F5               	goto	i2l5362
 13757  0029B8                     i2u533_40:
 13758  0029B8  A00A               	btfss	___xxtofl@exp,0,c
 13759  0029BA  9E0D               	bcf	___xxtofl@arg+2,7,c
 13760  0029BC  90D8               	bcf	status,0,c
 13761  0029BE  320A               	rrcf	___xxtofl@exp,f,c
 13762  0029C0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13763  0029C4  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 13764  0029C6  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 13765  0029C8  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 13766  0029CA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13767  0029CE  6A07               	clrf	??___xxtofl+2,c
 13768  0029D0  6A06               	clrf	??___xxtofl+1,c
 13769  0029D2  6A05               	clrf	??___xxtofl,c
 13770  0029D4  5005               	movf	??___xxtofl,w,c
 13771  0029D6  120B               	iorwf	___xxtofl@arg,f,c
 13772  0029D8  5006               	movf	??___xxtofl+1,w,c
 13773  0029DA  120C               	iorwf	___xxtofl@arg+1,f,c
 13774  0029DC  5007               	movf	??___xxtofl+2,w,c
 13775  0029DE  120D               	iorwf	___xxtofl@arg+2,f,c
 13776  0029E0  5008               	movf	??___xxtofl+3,w,c
 13777  0029E2  120E               	iorwf	___xxtofl@arg+3,f,c
 13778  0029E4  5009               	movf	___xxtofl@sign,w,c
 13779  0029E6  A4D8               	btfss	status,2,c
 13780  0029E8  AE04               	btfss	___xxtofl@val+3,7,c
 13781  0029EA  D001               	goto	i2l5380
 13782  0029EC  8E0E               	bsf	___xxtofl@arg+3,7,c
 13783  0029EE                     i2l5380:
 13784  0029EE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13785  0029F2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13786  0029F6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13787  0029FA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13788  0029FE  0012               	return		;funcret
 13789  002A00                     __end_of___xxtofl:
 13790                           	opt callstack 0
 13791                           
 13792 ;; *************** function ___fltol *****************
 13793 ;; Defined at:
 13794 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  f1              4   39[COMRAM] unsigned char 
 13797 ;; Auto vars:     Size  Location     Type
 13798 ;;  exp1            1   48[COMRAM] unsigned char 
 13799 ;;  sign1           1   47[COMRAM] unsigned char 
 13800 ;; Return value:  Size  Location     Type
 13801 ;;                  4   39[COMRAM] long 
 13802 ;; Registers used:
 13803 ;;		wreg, status,2, status,0
 13804 ;; Tracked objects:
 13805 ;;		On entry : 0/0
 13806 ;;		On exit  : 0/0
 13807 ;;		Unchanged: 0/0
 13808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13811 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13812 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13813 ;;Total ram usage:       10 bytes
 13814 ;; Hardware stack levels used:    1
 13815 ;; This function calls:
 13816 ;;		Nothing
 13817 ;; This function is called by:
 13818 ;;		_echo
 13819 ;; This function uses a non-reentrant model
 13820 ;;
 13821                           
 13822                           	psect	text58
 13823  003144                     __ptext58:
 13824                           	opt callstack 0
 13825  003144                     ___fltol:
 13826                           	opt callstack 14
 13827                           
 13828                           ;incstack = 0
 13829  003144  342A               	rlcf	___fltol@f1+2,w,c
 13830  003146  342B               	rlcf	___fltol@f1+3,w,c
 13831  003148  6E31               	movwf	___fltol@exp1,c
 13832  00314A  5031               	movf	___fltol@exp1,w,c
 13833  00314C  A4D8               	btfss	status,2,c
 13834  00314E  D009               	goto	i2l5284
 13835  003150                     i2u517_40:
 13836  003150  0E00               	movlw	0
 13837  003152  6E28               	movwf	?___fltol,c
 13838  003154  0E00               	movlw	0
 13839  003156  6E29               	movwf	?___fltol+1,c
 13840  003158  0E00               	movlw	0
 13841  00315A  6E2A               	movwf	?___fltol+2,c
 13842  00315C  0E00               	movlw	0
 13843  00315E  6E2B               	movwf	?___fltol+3,c
 13844  003160  0012               	return	
 13845  003162                     i2l5284:
 13846  003162  C028  F02C         	movff	___fltol@f1,??___fltol
 13847  003166  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 13848  00316A  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 13849  00316E  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 13850  003172  0E20               	movlw	32
 13851  003174  D005               	goto	i2u518_40
 13852  003176                     i2u518_45:
 13853  003176  90D8               	bcf	status,0,c
 13854  003178  322F               	rrcf	??___fltol+3,f,c
 13855  00317A  322E               	rrcf	??___fltol+2,f,c
 13856  00317C  322D               	rrcf	??___fltol+1,f,c
 13857  00317E  322C               	rrcf	??___fltol,f,c
 13858  003180                     i2u518_40:
 13859  003180  2EE8               	decfsz	wreg,f,c
 13860  003182  D7F9               	goto	i2u518_45
 13861  003184  502C               	movf	??___fltol,w,c
 13862  003186  6E30               	movwf	___fltol@sign1,c
 13863  003188  8E2A               	bsf	___fltol@f1+2,7,c
 13864  00318A  0EFF               	movlw	255
 13865  00318C  1628               	andwf	___fltol@f1,f,c
 13866  00318E  0EFF               	movlw	255
 13867  003190  1629               	andwf	___fltol@f1+1,f,c
 13868  003192  0EFF               	movlw	255
 13869  003194  162A               	andwf	___fltol@f1+2,f,c
 13870  003196  0E00               	movlw	0
 13871  003198  162B               	andwf	___fltol@f1+3,f,c
 13872  00319A  0E96               	movlw	150
 13873  00319C  5E31               	subwf	___fltol@exp1,f,c
 13874  00319E  AE31               	btfss	___fltol@exp1,7,c
 13875  0031A0  D00D               	goto	i2l5304
 13876  0031A2  5031               	movf	___fltol@exp1,w,c
 13877  0031A4  0A80               	xorlw	128
 13878  0031A6  0F97               	addlw	151
 13879  0031A8  A0D8               	btfss	status,0,c
 13880  0031AA  D7D2               	goto	i2u517_40
 13881  0031AC                     i2l5300:
 13882  0031AC  90D8               	bcf	status,0,c
 13883  0031AE  322B               	rrcf	___fltol@f1+3,f,c
 13884  0031B0  322A               	rrcf	___fltol@f1+2,f,c
 13885  0031B2  3229               	rrcf	___fltol@f1+1,f,c
 13886  0031B4  3228               	rrcf	___fltol@f1,f,c
 13887  0031B6  3E31               	incfsz	___fltol@exp1,f,c
 13888  0031B8  D7F9               	goto	i2l5300
 13889  0031BA  D00D               	goto	i2u522_40
 13890  0031BC                     i2l5304:
 13891  0031BC  0E1F               	movlw	31
 13892  0031BE  6431               	cpfsgt	___fltol@exp1,c
 13893  0031C0  D007               	goto	i2l5312
 13894  0031C2  D7C6               	goto	i2u517_40
 13895  0031C4                     i2l5310:
 13896  0031C4  90D8               	bcf	status,0,c
 13897  0031C6  3628               	rlcf	___fltol@f1,f,c
 13898  0031C8  3629               	rlcf	___fltol@f1+1,f,c
 13899  0031CA  362A               	rlcf	___fltol@f1+2,f,c
 13900  0031CC  362B               	rlcf	___fltol@f1+3,f,c
 13901  0031CE  0631               	decf	___fltol@exp1,f,c
 13902  0031D0                     i2l5312:
 13903  0031D0  5031               	movf	___fltol@exp1,w,c
 13904  0031D2  A4D8               	btfss	status,2,c
 13905  0031D4  D7F7               	goto	i2l5310
 13906  0031D6                     i2u522_40:
 13907  0031D6  5030               	movf	___fltol@sign1,w,c
 13908  0031D8  B4D8               	btfsc	status,2,c
 13909  0031DA  D008               	goto	i2l5318
 13910  0031DC  1E2B               	comf	___fltol@f1+3,f,c
 13911  0031DE  1E2A               	comf	___fltol@f1+2,f,c
 13912  0031E0  1E29               	comf	___fltol@f1+1,f,c
 13913  0031E2  6C28               	negf	___fltol@f1,c
 13914  0031E4  0E00               	movlw	0
 13915  0031E6  2229               	addwfc	___fltol@f1+1,f,c
 13916  0031E8  222A               	addwfc	___fltol@f1+2,f,c
 13917  0031EA  222B               	addwfc	___fltol@f1+3,f,c
 13918  0031EC                     i2l5318:
 13919  0031EC  C028  F028         	movff	___fltol@f1,?___fltol
 13920  0031F0  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 13921  0031F4  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 13922  0031F8  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 13923  0031FC  0012               	return		;funcret
 13924  0031FE                     __end_of___fltol:
 13925                           	opt callstack 0
 13926                           
 13927 ;; *************** function ___fldiv *****************
 13928 ;; Defined at:
 13929 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;  b               4   14[COMRAM] long 
 13932 ;;  a               4   18[COMRAM] long 
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;  grs             4   33[COMRAM] unsigned long 
 13935 ;;  rem             4   26[COMRAM] unsigned long 
 13936 ;;  new_exp         2   31[COMRAM] short 
 13937 ;;  aexp            1   38[COMRAM] unsigned char 
 13938 ;;  bexp            1   37[COMRAM] unsigned char 
 13939 ;;  sign            1   30[COMRAM] unsigned char 
 13940 ;; Return value:  Size  Location     Type
 13941 ;;                  4   14[COMRAM] unsigned char 
 13942 ;; Registers used:
 13943 ;;		wreg, status,2, status,0
 13944 ;; Tracked objects:
 13945 ;;		On entry : 0/0
 13946 ;;		On exit  : 0/0
 13947 ;;		Unchanged: 0/0
 13948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13949 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13950 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13951 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13952 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13953 ;;Total ram usage:       25 bytes
 13954 ;; Hardware stack levels used:    1
 13955 ;; This function calls:
 13956 ;;		Nothing
 13957 ;; This function is called by:
 13958 ;;		_echo
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962                           	psect	text59
 13963  001970                     __ptext59:
 13964                           	opt callstack 0
 13965  001970                     ___fldiv:
 13966                           	opt callstack 14
 13967                           
 13968                           ;incstack = 0
 13969  001970  5012               	movf	___fldiv@b+3,w,c
 13970  001972  0B80               	andlw	128
 13971  001974  6E1F               	movwf	___fldiv@sign,c
 13972  001976  5012               	movf	___fldiv@b+3,w,c
 13973  001978  2412               	addwf	___fldiv@b+3,w,c
 13974  00197A  6E26               	movwf	___fldiv@bexp,c
 13975  00197C  BE11               	btfsc	___fldiv@b+2,7,c
 13976  00197E  8026               	bsf	___fldiv@bexp,0,c
 13977  001980  5026               	movf	___fldiv@bexp,w,c
 13978  001982  B4D8               	btfsc	status,2,c
 13979  001984  D00D               	goto	i2l5112
 13980  001986  2826               	incf	___fldiv@bexp,w,c
 13981  001988  A4D8               	btfss	status,2,c
 13982  00198A  D008               	goto	i2l5108
 13983  00198C  0E00               	movlw	0
 13984  00198E  6E0F               	movwf	___fldiv@b,c
 13985  001990  0E00               	movlw	0
 13986  001992  6E10               	movwf	___fldiv@b+1,c
 13987  001994  0E00               	movlw	0
 13988  001996  6E11               	movwf	___fldiv@b+2,c
 13989  001998  0E00               	movlw	0
 13990  00199A  6E12               	movwf	___fldiv@b+3,c
 13991  00199C                     i2l5108:
 13992  00199C  8E11               	bsf	___fldiv@b+2,7,c
 13993  00199E  D006               	goto	L6
 13994  0019A0                     i2l5112:
 13995  0019A0  0E00               	movlw	0
 13996  0019A2  6E0F               	movwf	___fldiv@b,c
 13997  0019A4  0E00               	movlw	0
 13998  0019A6  6E10               	movwf	___fldiv@b+1,c
 13999  0019A8  0E00               	movlw	0
 14000  0019AA  6E11               	movwf	___fldiv@b+2,c
 14001  0019AC                     L6:
 14002  0019AC  0E00               	movlw	0
 14003  0019AE  6E12               	movwf	___fldiv@b+3,c
 14004  0019B0  5016               	movf	___fldiv@a+3,w,c
 14005  0019B2  0B80               	andlw	128
 14006  0019B4  1A1F               	xorwf	___fldiv@sign,f,c
 14007  0019B6  5016               	movf	___fldiv@a+3,w,c
 14008  0019B8  2416               	addwf	___fldiv@a+3,w,c
 14009  0019BA  6E27               	movwf	___fldiv@aexp,c
 14010  0019BC  BE15               	btfsc	___fldiv@a+2,7,c
 14011  0019BE  8027               	bsf	___fldiv@aexp,0,c
 14012  0019C0  5027               	movf	___fldiv@aexp,w,c
 14013  0019C2  B4D8               	btfsc	status,2,c
 14014  0019C4  D00D               	goto	i2l5132
 14015  0019C6  2827               	incf	___fldiv@aexp,w,c
 14016  0019C8  A4D8               	btfss	status,2,c
 14017  0019CA  D008               	goto	i2l5128
 14018  0019CC  0E00               	movlw	0
 14019  0019CE  6E13               	movwf	___fldiv@a,c
 14020  0019D0  0E00               	movlw	0
 14021  0019D2  6E14               	movwf	___fldiv@a+1,c
 14022  0019D4  0E00               	movlw	0
 14023  0019D6  6E15               	movwf	___fldiv@a+2,c
 14024  0019D8  0E00               	movlw	0
 14025  0019DA  6E16               	movwf	___fldiv@a+3,c
 14026  0019DC                     i2l5128:
 14027  0019DC  8E15               	bsf	___fldiv@a+2,7,c
 14028  0019DE  D006               	goto	L7
 14029  0019E0                     i2l5132:
 14030  0019E0  0E00               	movlw	0
 14031  0019E2  6E13               	movwf	___fldiv@a,c
 14032  0019E4  0E00               	movlw	0
 14033  0019E6  6E14               	movwf	___fldiv@a+1,c
 14034  0019E8  0E00               	movlw	0
 14035  0019EA  6E15               	movwf	___fldiv@a+2,c
 14036  0019EC                     L7:
 14037  0019EC  0E00               	movlw	0
 14038  0019EE  6E16               	movwf	___fldiv@a+3,c
 14039  0019F0  5013               	movf	___fldiv@a,w,c
 14040  0019F2  1014               	iorwf	___fldiv@a+1,w,c
 14041  0019F4  1015               	iorwf	___fldiv@a+2,w,c
 14042  0019F6  1016               	iorwf	___fldiv@a+3,w,c
 14043  0019F8  A4D8               	btfss	status,2,c
 14044  0019FA  D017               	goto	i2l5146
 14045  0019FC  0E00               	movlw	0
 14046  0019FE  6E0F               	movwf	___fldiv@b,c
 14047  001A00  0E00               	movlw	0
 14048  001A02  6E10               	movwf	___fldiv@b+1,c
 14049  001A04  0E00               	movlw	0
 14050  001A06  6E11               	movwf	___fldiv@b+2,c
 14051  001A08  0E00               	movlw	0
 14052  001A0A  6E12               	movwf	___fldiv@b+3,c
 14053  001A0C  0E80               	movlw	128
 14054  001A0E  1211               	iorwf	___fldiv@b+2,f,c
 14055  001A10  0E7F               	movlw	127
 14056  001A12  1212               	iorwf	___fldiv@b+3,f,c
 14057  001A14                     i2l5140:
 14058  001A14  501F               	movf	___fldiv@sign,w,c
 14059  001A16  1212               	iorwf	___fldiv@b+3,f,c
 14060  001A18  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14061  001A1C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14062  001A20  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14063  001A24  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14064  001A28  0012               	return	
 14065  001A2A                     i2l5146:
 14066  001A2A  5026               	movf	___fldiv@bexp,w,c
 14067  001A2C  A4D8               	btfss	status,2,c
 14068  001A2E  D009               	goto	i2l5154
 14069  001A30  0E00               	movlw	0
 14070  001A32  6E0F               	movwf	?___fldiv,c
 14071  001A34  0E00               	movlw	0
 14072  001A36  6E10               	movwf	?___fldiv+1,c
 14073  001A38  0E00               	movlw	0
 14074  001A3A  6E11               	movwf	?___fldiv+2,c
 14075  001A3C  0E00               	movlw	0
 14076  001A3E  6E12               	movwf	?___fldiv+3,c
 14077  001A40  0012               	return	
 14078  001A42                     i2l5154:
 14079  001A42  5027               	movf	___fldiv@aexp,w,c
 14080  001A44  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14081  001A48  6A18               	clrf	(??___fldiv+1)& (0+255),c
 14082  001A4A  5E17               	subwf	??___fldiv,f,c
 14083  001A4C  0E00               	movlw	0
 14084  001A4E  5A18               	subwfb	??___fldiv+1,f,c
 14085  001A50  0E7F               	movlw	127
 14086  001A52  2417               	addwf	??___fldiv,w,c
 14087  001A54  6E20               	movwf	___fldiv@new_exp,c
 14088  001A56  0E00               	movlw	0
 14089  001A58  2018               	addwfc	??___fldiv+1,w,c
 14090  001A5A  6E21               	movwf	___fldiv@new_exp+1,c
 14091  001A5C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14092  001A60  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14093  001A64  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14094  001A68  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14095  001A6C  0E00               	movlw	0
 14096  001A6E  6E0F               	movwf	___fldiv@b,c
 14097  001A70  0E00               	movlw	0
 14098  001A72  6E10               	movwf	___fldiv@b+1,c
 14099  001A74  0E00               	movlw	0
 14100  001A76  6E11               	movwf	___fldiv@b+2,c
 14101  001A78  0E00               	movlw	0
 14102  001A7A  6E12               	movwf	___fldiv@b+3,c
 14103  001A7C  0E00               	movlw	0
 14104  001A7E  6E22               	movwf	___fldiv@grs,c
 14105  001A80  0E00               	movlw	0
 14106  001A82  6E23               	movwf	___fldiv@grs+1,c
 14107  001A84  0E00               	movlw	0
 14108  001A86  6E24               	movwf	___fldiv@grs+2,c
 14109  001A88  0E00               	movlw	0
 14110  001A8A  6E25               	movwf	___fldiv@grs+3,c
 14111  001A8C  0E00               	movlw	0
 14112  001A8E  6E27               	movwf	___fldiv@aexp,c
 14113  001A90  D028               	goto	i2l1285
 14114  001A92                     i2l5164:
 14115  001A92  5027               	movf	___fldiv@aexp,w,c
 14116  001A94  B4D8               	btfsc	status,2,c
 14117  001A96  D011               	goto	i2l5172
 14118  001A98  90D8               	bcf	status,0,c
 14119  001A9A  361B               	rlcf	___fldiv@rem,f,c
 14120  001A9C  361C               	rlcf	___fldiv@rem+1,f,c
 14121  001A9E  361D               	rlcf	___fldiv@rem+2,f,c
 14122  001AA0  361E               	rlcf	___fldiv@rem+3,f,c
 14123  001AA2  90D8               	bcf	status,0,c
 14124  001AA4  360F               	rlcf	___fldiv@b,f,c
 14125  001AA6  3610               	rlcf	___fldiv@b+1,f,c
 14126  001AA8  3611               	rlcf	___fldiv@b+2,f,c
 14127  001AAA  3612               	rlcf	___fldiv@b+3,f,c
 14128  001AAC  BE25               	btfsc	___fldiv@grs+3,7,c
 14129  001AAE  800F               	bsf	___fldiv@b,0,c
 14130  001AB0  90D8               	bcf	status,0,c
 14131  001AB2  3622               	rlcf	___fldiv@grs,f,c
 14132  001AB4  3623               	rlcf	___fldiv@grs+1,f,c
 14133  001AB6  3624               	rlcf	___fldiv@grs+2,f,c
 14134  001AB8  3625               	rlcf	___fldiv@grs+3,f,c
 14135  001ABA                     i2l5172:
 14136  001ABA  5013               	movf	___fldiv@a,w,c
 14137  001ABC  5C1B               	subwf	___fldiv@rem,w,c
 14138  001ABE  5014               	movf	___fldiv@a+1,w,c
 14139  001AC0  581C               	subwfb	___fldiv@rem+1,w,c
 14140  001AC2  5015               	movf	___fldiv@a+2,w,c
 14141  001AC4  581D               	subwfb	___fldiv@rem+2,w,c
 14142  001AC6  5016               	movf	___fldiv@a+3,w,c
 14143  001AC8  581E               	subwfb	___fldiv@rem+3,w,c
 14144  001ACA  A0D8               	btfss	status,0,c
 14145  001ACC  D009               	goto	i2l5178
 14146  001ACE  8C25               	bsf	___fldiv@grs+3,6,c
 14147  001AD0  5013               	movf	___fldiv@a,w,c
 14148  001AD2  5E1B               	subwf	___fldiv@rem,f,c
 14149  001AD4  5014               	movf	___fldiv@a+1,w,c
 14150  001AD6  5A1C               	subwfb	___fldiv@rem+1,f,c
 14151  001AD8  5015               	movf	___fldiv@a+2,w,c
 14152  001ADA  5A1D               	subwfb	___fldiv@rem+2,f,c
 14153  001ADC  5016               	movf	___fldiv@a+3,w,c
 14154  001ADE  5A1E               	subwfb	___fldiv@rem+3,f,c
 14155  001AE0                     i2l5178:
 14156  001AE0  2A27               	incf	___fldiv@aexp,f,c
 14157  001AE2                     i2l1285:
 14158  001AE2  0E19               	movlw	25
 14159  001AE4  6427               	cpfsgt	___fldiv@aexp,c
 14160  001AE6  D7D5               	goto	i2l5164
 14161  001AE8  501B               	movf	___fldiv@rem,w,c
 14162  001AEA  101C               	iorwf	___fldiv@rem+1,w,c
 14163  001AEC  101D               	iorwf	___fldiv@rem+2,w,c
 14164  001AEE  101E               	iorwf	___fldiv@rem+3,w,c
 14165  001AF0  B4D8               	btfsc	status,2,c
 14166  001AF2  D011               	goto	i2l5190
 14167  001AF4  8022               	bsf	___fldiv@grs,0,c
 14168  001AF6  D00F               	goto	i2l5190
 14169  001AF8                     i2l5184:
 14170  001AF8  90D8               	bcf	status,0,c
 14171  001AFA  360F               	rlcf	___fldiv@b,f,c
 14172  001AFC  3610               	rlcf	___fldiv@b+1,f,c
 14173  001AFE  3611               	rlcf	___fldiv@b+2,f,c
 14174  001B00  3612               	rlcf	___fldiv@b+3,f,c
 14175  001B02  BE25               	btfsc	___fldiv@grs+3,7,c
 14176  001B04  800F               	bsf	___fldiv@b,0,c
 14177  001B06  90D8               	bcf	status,0,c
 14178  001B08  3622               	rlcf	___fldiv@grs,f,c
 14179  001B0A  3623               	rlcf	___fldiv@grs+1,f,c
 14180  001B0C  3624               	rlcf	___fldiv@grs+2,f,c
 14181  001B0E  3625               	rlcf	___fldiv@grs+3,f,c
 14182  001B10  0620               	decf	___fldiv@new_exp,f,c
 14183  001B12  A0D8               	btfss	status,0,c
 14184  001B14  0621               	decf	___fldiv@new_exp+1,f,c
 14185  001B16                     i2l5190:
 14186  001B16  AE11               	btfss	___fldiv@b+2,7,c
 14187  001B18  D7EF               	goto	i2l5184
 14188  001B1A  0E00               	movlw	0
 14189  001B1C  6E27               	movwf	___fldiv@aexp,c
 14190  001B1E  AE25               	btfss	___fldiv@grs+3,7,c
 14191  001B20  D017               	goto	i2l1296
 14192  001B22  0EFF               	movlw	255
 14193  001B24  1422               	andwf	___fldiv@grs,w,c
 14194  001B26  6E17               	movwf	??___fldiv& (0+255),c
 14195  001B28  0EFF               	movlw	255
 14196  001B2A  1423               	andwf	___fldiv@grs+1,w,c
 14197  001B2C  6E18               	movwf	(??___fldiv+1)& (0+255),c
 14198  001B2E  0EFF               	movlw	255
 14199  001B30  1424               	andwf	___fldiv@grs+2,w,c
 14200  001B32  6E19               	movwf	(??___fldiv+2)& (0+255),c
 14201  001B34  0E7F               	movlw	127
 14202  001B36  1425               	andwf	___fldiv@grs+3,w,c
 14203  001B38  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 14204  001B3A  5017               	movf	??___fldiv,w,c
 14205  001B3C  1018               	iorwf	??___fldiv+1,w,c
 14206  001B3E  1019               	iorwf	??___fldiv+2,w,c
 14207  001B40  101A               	iorwf	??___fldiv+3,w,c
 14208  001B42  B4D8               	btfsc	status,2,c
 14209  001B44  D003               	goto	i2l1297
 14210  001B46                     i2u504_40:
 14211  001B46  0E01               	movlw	1
 14212  001B48  6E27               	movwf	___fldiv@aexp,c
 14213  001B4A  D002               	goto	i2l1296
 14214  001B4C                     i2l1297:
 14215  001B4C  B00F               	btfsc	___fldiv@b,0,c
 14216  001B4E  D7FB               	goto	i2u504_40
 14217  001B50                     i2l1296:
 14218  001B50  5027               	movf	___fldiv@aexp,w,c
 14219  001B52  B4D8               	btfsc	status,2,c
 14220  001B54  D01F               	goto	i2l5210
 14221  001B56  0E01               	movlw	1
 14222  001B58  260F               	addwf	___fldiv@b,f,c
 14223  001B5A  0E00               	movlw	0
 14224  001B5C  2210               	addwfc	___fldiv@b+1,f,c
 14225  001B5E  2211               	addwfc	___fldiv@b+2,f,c
 14226  001B60  2212               	addwfc	___fldiv@b+3,f,c
 14227  001B62  A012               	btfss	___fldiv@b+3,0,c
 14228  001B64  D017               	goto	i2l5210
 14229  001B66  C00F  F017         	movff	___fldiv@b,??___fldiv
 14230  001B6A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 14231  001B6E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 14232  001B72  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 14233  001B76  341A               	rlcf	??___fldiv+3,w,c
 14234  001B78  321A               	rrcf	??___fldiv+3,f,c
 14235  001B7A  3219               	rrcf	??___fldiv+2,f,c
 14236  001B7C  3218               	rrcf	??___fldiv+1,f,c
 14237  001B7E  3217               	rrcf	??___fldiv,f,c
 14238  001B80  C017  F00F         	movff	??___fldiv,___fldiv@b
 14239  001B84  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 14240  001B88  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 14241  001B8C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 14242  001B90  4A20               	infsnz	___fldiv@new_exp,f,c
 14243  001B92  2A21               	incf	___fldiv@new_exp+1,f,c
 14244  001B94                     i2l5210:
 14245  001B94  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14246  001B96  D010               	goto	i2l5214
 14247  001B98  5021               	movf	___fldiv@new_exp+1,w,c
 14248  001B9A  E103               	bnz	i2u508_40
 14249  001B9C  2820               	incf	___fldiv@new_exp,w,c
 14250  001B9E  A0D8               	btfss	status,0,c
 14251  001BA0  D00B               	goto	i2l5214
 14252  001BA2                     i2u508_40:
 14253  001BA2  0E00               	movlw	0
 14254  001BA4  6E21               	movwf	___fldiv@new_exp+1,c
 14255  001BA6  6820               	setf	___fldiv@new_exp,c
 14256  001BA8  0E00               	movlw	0
 14257  001BAA  6E0F               	movwf	___fldiv@b,c
 14258  001BAC  0E00               	movlw	0
 14259  001BAE  6E10               	movwf	___fldiv@b+1,c
 14260  001BB0  0E00               	movlw	0
 14261  001BB2  6E11               	movwf	___fldiv@b+2,c
 14262  001BB4  0E00               	movlw	0
 14263  001BB6  6E12               	movwf	___fldiv@b+3,c
 14264  001BB8                     i2l5214:
 14265  001BB8  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14266  001BBA  D005               	goto	i2u509_40
 14267  001BBC  5021               	movf	___fldiv@new_exp+1,w,c
 14268  001BBE  E111               	bnz	i2l5218
 14269  001BC0  0420               	decf	___fldiv@new_exp,w,c
 14270  001BC2  B0D8               	btfsc	status,0,c
 14271  001BC4  D00E               	goto	i2l5218
 14272  001BC6                     i2u509_40:
 14273  001BC6  0E00               	movlw	0
 14274  001BC8  6E21               	movwf	___fldiv@new_exp+1,c
 14275  001BCA  0E00               	movlw	0
 14276  001BCC  6E20               	movwf	___fldiv@new_exp,c
 14277  001BCE  0E00               	movlw	0
 14278  001BD0  6E0F               	movwf	___fldiv@b,c
 14279  001BD2  0E00               	movlw	0
 14280  001BD4  6E10               	movwf	___fldiv@b+1,c
 14281  001BD6  0E00               	movlw	0
 14282  001BD8  6E11               	movwf	___fldiv@b+2,c
 14283  001BDA  0E00               	movlw	0
 14284  001BDC  6E12               	movwf	___fldiv@b+3,c
 14285  001BDE  0E00               	movlw	0
 14286  001BE0  6E1F               	movwf	___fldiv@sign,c
 14287  001BE2                     i2l5218:
 14288  001BE2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 14289  001BE6  A026               	btfss	___fldiv@bexp,0,c
 14290  001BE8  D002               	goto	i2l5224
 14291  001BEA  8E11               	bsf	___fldiv@b+2,7,c
 14292  001BEC  D001               	goto	i2l5226
 14293  001BEE                     i2l5224:
 14294  001BEE  9E11               	bcf	___fldiv@b+2,7,c
 14295  001BF0                     i2l5226:
 14296  001BF0  90D8               	bcf	status,0,c
 14297  001BF2  3026               	rrcf	___fldiv@bexp,w,c
 14298  001BF4  6E12               	movwf	___fldiv@b+3,c
 14299  001BF6  D70E               	goto	i2l5140
 14300  001BF8                     __end_of___fldiv:
 14301                           	opt callstack 0
 14302                           
 14303                           	psect	rparam
 14304  0000                     
 14305                           	psect	temp
 14306  00006E                     btemp:
 14307                           	opt callstack 0
 14308  00006E                     	ds	1
 14309  0000                     int$flags	set	btemp
 14310  0000                     wtemp8	set	btemp+1
 14311  0000                     ttemp5	set	btemp+1
 14312  0000                     ttemp6	set	btemp+4
 14313  0000                     ttemp7	set	btemp+8
 14314                           tosu	equ	0xFFF
 14315                           tosh	equ	0xFFE
 14316                           tosl	equ	0xFFD
 14317                           stkptr	equ	0xFFC
 14318                           pclatu	equ	0xFFB
 14319                           pclath	equ	0xFFA
 14320                           pcl	equ	0xFF9
 14321                           tblptru	equ	0xFF8
 14322                           tblptrh	equ	0xFF7
 14323                           tblptrl	equ	0xFF6
 14324                           tablat	equ	0xFF5
 14325                           prodh	equ	0xFF4
 14326                           prodl	equ	0xFF3
 14327                           indf0	equ	0xFEF
 14328                           postinc0	equ	0xFEE
 14329                           postdec0	equ	0xFED
 14330                           preinc0	equ	0xFEC
 14331                           plusw0	equ	0xFEB
 14332                           fsr0h	equ	0xFEA
 14333                           fsr0l	equ	0xFE9
 14334                           wreg	equ	0xFE8
 14335                           indf1	equ	0xFE7
 14336                           postinc1	equ	0xFE6
 14337                           postdec1	equ	0xFE5
 14338                           preinc1	equ	0xFE4
 14339                           plusw1	equ	0xFE3
 14340                           fsr1h	equ	0xFE2
 14341                           fsr1l	equ	0xFE1
 14342                           bsr	equ	0xFE0
 14343                           indf2	equ	0xFDF
 14344                           postinc2	equ	0xFDE
 14345                           postdec2	equ	0xFDD
 14346                           preinc2	equ	0xFDC
 14347                           plusw2	equ	0xFDB
 14348                           fsr2h	equ	0xFDA
 14349                           fsr2l	equ	0xFD9
 14350                           status	equ	0xFD8


Data Sizes:
    Strings     556
    Constant    23
    Data        5
    BSS         238
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256    202     230
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1627_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[10]), STR_60(CODE[11]), STR_59(CODE[11]), STR_58(CODE[12]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_number_deploy
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _actuators_main->_stepper
    _actuators_main->_stepper2
    _actuators_main->_stepper2_back
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper2

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0  295764
                                             90 BANK1    112   112      0
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   47376
                                            122 BANK0      4     2      2
                                              0 BANK1     10    10      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23053
                                            121 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2013
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     8      4   25004
                                            121 BANK0      6     2      4
                                              0 BANK1      6     6      0
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24409
                                            121 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1291
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                       8     4      4  143492
                                             12 BANK1      8     4      4
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   46934
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   47219
                                            125 BANK0      2     0      2
                                              0 BANK1     12    12      0
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                              8     6      2   23949
                                            125 BANK0      2     0      2
                                              0 BANK1      6     6      0
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   23624
                                            121 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0    1404
                                              5 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       5     3      2     657
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         5     3      2     747
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   26760
                                            121 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   22895
                                            109 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1291
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CA      E6       7       89.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     273      34        0.0%
DATA                 0      0     273       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 04:25:42 2019

                  ___fldiv@aexp 0027                    ___fldiv@bexp 0026                               _a 0061  
                             _b 005A                               _i 01DB                    ___fldiv@sign 001F  
                   __CFG_CPD$ON 000000                    ___awdiv@sign 0085             servoRotate180@servo 0080  
           ___wmul@multiplicand 0082                     __CFG_BORV$3 000000                 ??_number_deploy 00FD  
             stepper2@direction 010B                   servoRotate0@i 0083                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000             __end_of_system_init 3AFE                             l120 30BE  
                           l123 3108                             l132 2FD4                             l117 306A  
                           l135 301A                 _ultrasonic_main 2486                             l129 2F7C  
                           l506 0290                             l611 1C74                             l451 25DA  
                           l544 1016                             l609 1C6C                             l634 1E5E  
                           l636 1E66                             l728 3622                             l598 3436  
                           _GIE 007F97                    __CFG_CPB$OFF 000000                             _RB2 007C0A  
                           _RC1 007C11                             _RB3 007C0B                             _RC2 007C12  
                           _RD0 007C18                             _RB4 007C0C                             _RD1 007C19  
                           _RB5 007C0D                             _RB6 007C0E                             _RB7 007C0F  
                           _ISR 0008          __size_of_stepper2_back 00A0                             _abs 3A98  
                           _cnt 01E3                             _pad 3406                             _min 2C5C  
                           _sum 0038                  stepper2_back@i 0104                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                            ?_ISR 0001                    ___fltol@exp1 0031  
                  __CFG_WDT$OFF 000000                            l1121 37EC                            ?_abs 0092  
                          l1407 28B6                            l1376 3AC2                            l1474 399E  
                          l7102 1842                            ?_pad 0094                            l7008 16B8  
                          l7024 1724                            l6420 3742                            l7206 35D4  
                          l6430 3A32                            l8102 0808                            l7310 34FC  
                          l7208 35E0                            l6512 2660                            l6440 3BA4  
                          l8104 0816                            l8032 051A                            l8008 0378  
                          l7144 18DA                            l7064 17B8                            l7218 3614  
                          l6434 3A4A                            l6602 1C50                            l7330 2EA4  
                          l6524 26AE                            l6540 2734                            l6620 1C9E  
                          l8212 0E8A                            ?_min 0080                            l6526 26C2  
                          l6518 2688                            l6438 3B9E                            l6462 342E  
                          l6630 1D98                            l8054 06A6                            l7182 195A  
                          l7350 2F38                            l7326 2E8C                            l7414 2D80  
                          l8310 1174                            l8302 1118                            l8222 0EBA  
                          l6544 275A                            l6536 271E                            l6560 2B88  
                          l6472 3486                            l6464 3440                            l6616 1C8E  
                          l6720 204C                            l6704 1FD6                            l6800 1308  
                          l7336 2EDC                            l8320 11CA                            l8240 0F46  
                          l7602 37DE                            l6458 341E                            l6650 1DFE  
                          l6802 134A                            l8082 0778                            l8058 06CC  
                          l7346 2F20                            l7530 2C9C                            l7514 2450  
                          l7506 240C                            l7426 2DBA                            l8306 1164  
                          l6580 2C3A                            l6572 2BFE                            l6564 2BA2  
                          l6556 2B64                            l6468 345A                            l8092 079A  
                          l7620 2A5A                            l7436 2DEE                            l8316 11C4  
                          l8324 11EE                            l6742 27EA                            l6726 2790  
                          l6566 2BB6                            l6654 1E16                            l6814 13B6  
                          l8086 0780                            l7374 33C0                            l7542 2D4A  
                          l7446 2E22                            l8262 0FAA                            l6592 39E0  
                          l6752 2856                            l6744 27F2                            l6736 27DA  
                          l6728 2794                            l6576 2C14                            l6816 13D4  
                          l7296 34C0                            l7560 3550                            l7544 2D4E  
                          l7528 2C92                            l7456 2E56                            l7720 24FA  
                          l8256 0F8C                            l8264 0FBE                            l6746 27F8  
                          l6682 1ED0                            l6674 1EAE                            l6834 14DC  
                          l6818 13E2                            l7554 3540                            l7802 20FE  
                          l7490 2394                            l7482 2360                            l7474 231C  
                          l7722 2502                            l8346 128A                            l8274 0FFE  
                          l6748 2820                            l6668 1E7C                            l6780 12EE  
                          l7468 22EE                            l8268 0FE0                            l8196 0E30  
                          l8188 0DD2                            l6854 15E6                            l7566 3566  
                          l7582 3598                            l7830 21B2                            l7806 2112  
                          l7750 25B2                            l7726 2512                            l6696 1F5E  
                          l6848 15AA                            l6792 12FA                            l6784 12F2  
                          l6776 12DC                            l6864 160A                            l7568 356E  
                          l7816 215C                            l7594 37AA                            l6858 15F2  
                          l6778 12DE                            l7586 35A6                            l7578 358E  
                          l7818 2166                            l7498 23D8                            l7746 2584  
                          l8298 1108                            l7596 37B6                            l6796 12FE  
                          l6788 12F6                            l6884 38C6                            l7916 015E  
                          l7764 25E0                            l6886 38EE                            l7758 25CA  
                          l7944 01EA                            l7696 2B2C                            l7792 2092  
                          l7848 227E                            l7966 0270                            l7886 00BC  
                          l7798 20CC                            l7992 0310                            l7976 02B0  
                          STR_1 FFD8                            STR_2 FF09                            STR_3 FF73  
                          STR_4 FFD8                            STR_5 FFCE                            STR_6 FFF3  
                          STR_7 FEE1                            STR_8 FFD8                            STR_9 FFF9  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            u7000 1C24  
                          u7100 1DDC                            u7030 1C62                            _RBIE 007F93  
                          u7120 1DE8                            u8000 233C                            _RBIF 007F90  
                          u7050 1C88                            u7210 1F3C                            u8010 2370  
                          u7060 1DA8                            u7220 1F3E                            u8100 2470  
                          u8020 2380                            u7150 1E52                            u8110 2C82  
                          u8030 23A4                            u7320 27D6                            u7080 1DCA  
                          u7240 1FB2                            u8040 23B4                            u7081 1DC8  
                          u7090 1DD8                            u7250 1FE8                            u7170 1ECC  
                          u8210 3572                            u8050 23E8                            u7340 2886  
                          u6700 3AA8                            u7180 1F02                            u8060 23F8  
                          u8300 257C                            u7245 1FA0                            u7350 2888  
                          u6630 373A                            u7270 200A                            u7190 1F04  
                          u7430 141C                            u8150 2D0A                            u8070 241C  
                          u8310 2594                            u6615 3BEC                            u7271 2008  
                          u6616 3BEE                            u6800 3988                            u7280 2018  
                          u7440 141E                            u8400 2132                            u8160 2D30  
                          u8080 242C                            u8250 37BA                            u6650 3782  
                          u7290 201C                            u7450 142A                            u7610 2FC2  
                          u8410 2142                            u8090 2460                            u8330 25E0  
                          u9107 1224                            u9027 0E48                            u6820 3B8C  
                          u8420 2152                            u9117 1258                            u9037 0E72  
                          u6830 3B8E                            u6750 3B5A                            u7470 145E  
                          u7550 30AC                            u7630 3008                            u9207 2DCA  
                          u9127 127C                            u9047 0E9C                            u6760 3B5C  
                          u6680 3B28                            u8440 217E                            u8360 20C2  
                          u9217 2DE0                            u9137 2498                            u9057 0ED0  
                          u6770 3A90                            u6690 3B2A                            u7490 1510  
                          u7570 30F6                            u7650 3056                            u7810 34E6  
                          u8450 218E                            u8370 20F4                            u9307 3352  
                          u9227 2DFE                            u9147 24C2                            u9067 0F02  
                          u6940 2BBA                            u6780 3A92                            u8460 219E  
                          u6861 268E                            u9317 2A20                            u9237 2E14  
                          u9157 254A                            u9077 10C0                            u6790 3986  
                          u7590 3142                            u7830 3522                            u8470 21AE  
                          u8390 2122                            u9407 169C                            u9327 2A4C  
                          u9247 2E32                            u9167 25EE                            u9087 11D6  
                          u7760 35E4                            u6880 26C6                            u8640 02AC  
                          u9417 16B0                            u9337 2AAE                            u9257 2E48  
                          u9177 261A                            u9097 1200                            u8730 081C  
                          u8490 228E                            u9507 1794                            u9427 16CC  
                          u9347 2AD8                            u9267 22A6                            u9187 2D96  
                          u6980 39DC                            u7940 2E6C                            u9517 17AE  
                          u9437 16E0                            u9357 3382                            u9277 222A  
                          u9197 2DAC                            u6990 1C22                            u8670 038A  
                          u8590 0200                            u7950 22C0                            u9607 18BA  
                          u9527 17D0                            u9447 16F4                            u9367 2EF0  
                          u9287 225E                            u8680 039A                            u7880 33E8  
                          u7960 22D0                            u7785 3828                            u8681 0398  
                          u9617 18D2                            u9537 17EA                            u9457 1708  
                          u9377 1660                            u9297 331E                            u7970 22FE  
                          u7890 2D7E                            u7795 3C10                            u9707 2F92  
                          u9627 18F2                            u9547 1804                            u9467 171C  
                          u9387 1674                            u7796 3C12                            u7980 230E  
                          u8940 0F64                            u8860 0DBC                            u9717 2FA6  
                          u9637 190A                            u9557 181E                            u9477 1746  
                          u9397 1688                            u7990 232C                            u8950 0F74  
                          u9807 30DC                            u9727 2FD8                            u9647 1922  
                          u9567 1838                            u9487 1760                            u8855 0DAA  
                          u8960 0FBE                            u8880 0DEE                            u9817 3112  
                          u9737 2FEE                            u9657 193A                            u9577 1872  
                          u9497 177A                            u8881 0DEC                            u8857 0DAC  
                          u8970 0FCE                            u9907 0540                            u9827 3124  
                          u9747 3024                            u9667 1952                            u9587 188A  
                          u8875 0DDA                            u8980 1012                            u9917 070E  
                          u9837 007A                            u9757 3038                            u9677 322A  
                          u9597 18A2                            u8877 0DDC                            u9927 36C0  
                          u9847 011E                            u9767 3076                            u9687 327C  
                          u9937 36DA                            u9857 0192                            u9777 3082  
                          u9697 2F82                            u9947 36EC                            u9867 0228  
                          u9787 3090                            u9957 3710                            u9877 02C8  
                          u9797 30C8                            u9967 3BD2                            u9887 0328  
                          u9977 3BDC                            u9897 03B4                            _Pole 0200  
            main@poles_detected 01C4                     main@t_count 01BE                            abs@a 0092  
                          _data 005E                            _echo 0826                            _dbuf 0280  
                          _disp 01DD                            _atoi 277C                            _main 0D6A  
                          _dtoa 1BF8                            _meas 0050                            _keys FDBB  
                          _send 006D                            _tick 0056                            _prec 004C  
                          _sens 0058                            _temp 00FF                            _time 01D2  
                          _nout 0048                            pad@i 009B                            pad@p 0098  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 009D                            fsr2l 000FD9  
                          _trig 2D6C                            _sumf 0040                            btemp 006E  
                          min@i 0089                            _xtoa 1E40                            prodh 000FF4  
                          prodl 000FF3                            start 000E         __size_of_actuators_main 0136  
                 __CFG_IESO$OFF 000000                 ___fldiv@new_exp 0020                 __end_of_UI_main 0826  
               servoRotate180@i 0083                   __CFG_MCLRE$ON 000000                    main@act_done 01B8  
                  ___param_bank 000000                           ??_ISR 0036                           ??_abs 0094  
                         ??_pad 009A                           ??_min 0084           actuators_main@act_cnt 0112  
         I2C_Master_Read@ackBit 0081                ?_I2C_Master_Init 008D                ?_I2C_Master_Read 0001  
              ?_I2C_Master_Wait 0001                ?_I2C_Master_Stop 0001                           ?_echo 0001  
                 ___fltol@sign1 0030                 __end_of___aodiv 277C                           ?_atoi 0087  
                         ?_main 0001                           ?_dtoa 009F                 __end_of___aomod 2C5C  
               __end_of___fldiv 1BF8                 __end_of___awdiv 35B0                           STR_10 FE06  
                         STR_11 FF7E                           STR_20 FF5D                           STR_12 FE5A  
                         STR_13 FF88                           STR_21 FF22                           STR_14 FE6A  
                         STR_22 FE4A                           STR_30 FDE4                           STR_31 FFE2  
                         STR_23 FFC4                           STR_15 FF92                           STR_32 FED0  
                         STR_24 FF46                           STR_16 FE17                           STR_40 FDD2  
                         STR_33 FE29                           STR_17 FF9C                           STR_41 FE89  
                         STR_25 FE7A                           STR_34 FFE2                           STR_26 FFC4  
                         STR_18 FFEB                           STR_42 FF3A                           STR_50 FEB6  
                         STR_51 FDE4                           STR_43 FE39                           STR_35 FED0  
                         STR_27 FF46                           STR_19 FEEF                           STR_28 FE7A  
                         STR_52 FED0                           STR_44 FDD2                           STR_60 FF68  
                         STR_36 FE28                           STR_45 FE89                           STR_53 FF01  
                         STR_61 FFB0                           STR_37 FED3                           STR_29 FE98  
                         STR_46 FF3A                           STR_54 FEFC                           STR_38 FEC5  
                         STR_55 FFBA                           STR_39 FE39                           STR_47 FDF5  
                         STR_56 FFA6                           STR_48 FF16                           STR_57 FF22  
                         STR_49 FEA7                           STR_58 FF2E                           STR_59 FF52  
               __end_of___fltol 31FE                           ?_trig 0001                 __end_of___lldiv 3634  
               ___awdiv@divisor 0082                           ?_xtoa 009F                           _T1CON 000FCD  
               __end_of___llmod 37FE                           i2l410 0D68                           i2l383 3A1A  
               ___awdiv@counter 0084                    vfpfcnvrt@fmt 00C8                    vfpfcnvrt@llu 00D8  
                         _TMR1H 000FCF                           _TMR1L 000FCE                           _PORTB 000F81  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                 __end_of_lcdInst 3CF6                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                 __end_of_initLCD 3728                  __CFG_EBTRB$OFF 000000  
                         _brake 32B6                           _flags 004E                           _dists 0069  
                         _fputc 3728                 __end_of_isalpha 3A98                           _fputs 3A26  
               __end_of_isdigit 3B94                           _servo 31FE                           atoi@n 0094  
                         pad@fp 0094                           atoi@s 0087                           _width 004A  
                         _state 01DF                           _putch 3CD6                           _start 390A  
                         main@i 01B4                           main@k 01BC                           dtoa@d 00A1  
                         dtoa@i 00C1                           dtoa@n 00B9                           dtoa@p 00B3  
                         dtoa@s 00B7                           dtoa@w 00B5                 __end_of_islower 3B30  
               __end_of_isspace 39E8                 __end_of_isupper 3B62                           tablat 000FF5  
               send_nibble@data 0081                           plusw2 000FDB                 __end_of_pulse_e 3BF0  
                         ttemp5 006F                           ttemp6 0072                           ttemp7 0076  
                         status 000FD8     I2C_Master_Read@receivedByte 0082                 __end_of_stepper 352A  
                         wtemp8 006F                           xtoa@c 00C4                           xtoa@d 00A1  
                         xtoa@i 00C2                           xtoa@n 00BA                           xtoa@p 00B6  
                         xtoa@w 00B8                           xtoa@x 00A9                   _stepper2_back 3366  
               __end_of_toupper 39A8                ??_servoRotate180 0082              __size_ofi2___awdiv 0084  
                __CFG_PBADEN$ON 000000                    _toupper$1679 008C                 __initialization 385E  
                  __end_of_echo 0D6A                     _system_init 3ACC                    __end_of_atoi 28C0  
                  __end_of_main 1296                    __end_of_dtoa 1E40                    __end_of_keys FDCC  
       __end_of_ultrasonic_main 2632                    __end_of_trig 2E6E                    __end_of_xtoa 2076  
                        ??_echo 0032                          ??_atoi 0089                          ??_main 015A  
                        ??_dtoa 00A9                          ??_trig 0080                          ??_xtoa 00AA  
                 __activetblptr 000002            number_deploy@t_count 0104               ?_I2C_Master_Start 0001  
             ?_I2C_Master_Write 0081            number_deploy@tires_t 0100              ??_I2C_Master_Start 0081  
                        ?_brake 0001                          _ADCON1 000FC1              ??_I2C_Master_Write 0083  
                  ?_send_nibble 0001                          ?_fputc 0084                ___llmod@dividend 0080  
                        ?_fputs 008D                ___awdiv@dividend 0080                          ?_servo 0001  
                        ?_putch 0001                          ?_start 0001                          _INT1IE 007F83  
                        _INT1IF 007F80              stepper2@steps2_adj 00FD                          i2l1363 297C  
                        i2l1356 28FE                          i2l1285 1AE2                          i2l1296 1B50  
                        i2l1297 1B4C                          i2l5112 19A0                          i2l5210 1B94  
                        i2l5140 1A14                          i2l5132 19E0                          i2l5108 199C  
                        i2l5300 31AC                          i2l5214 1BB8                          i2l5310 31C4  
                        i2l6110 3A08                          i2l5224 1BEE                          i2l5128 19DC  
                        i2l5312 31D0                          i2l5304 31BC                          i2l5226 1BF0  
                        i2l5218 1BE2                          i2l5154 1A42                          i2l5146 1A2A  
                        i2l5172 1ABA                          i2l5164 1A92                          i2l5404 366E  
                        i2l5420 36A0                          i2l5190 1B16                          i2l5318 31EC  
                        i2l5350 292C                          i2l5406 3676                          i2l5184 1AF8  
                        i2l5352 2932                          i2l5344 290E                          i2l5424 36AE  
                        i2l5416 3696                          i2l5600 0B44                          i2l5178 1AE0  
                        i2l5362 29A2                          i2l5354 293E                          i2l5284 3162  
                        i2l5380 29EE                          i2l5364 29AE                          i2l5356 2964  
                        i2l5532 08A4                          i2l5622 0BFC                          i2l5392 3648  
                        i2l5616 0BA0                          i2l5624 0C16                          i2l5650 0CF2  
                        i2l5634 0C96                          i2l5554 0958                          i2l5548 0900  
                        i2l5556 0972                          i2l5398 3658                          i2l5582 0A4E  
                        i2l5566 09F2                          i2l5590 0AC4                          i2l5656 0D4E  
                        i2l5588 0AAA                       ??_UI_main 0100                   vfpfcnvrt@done 00E1  
                        _TMR1ON 007E68                  ?_stepper2_back 00FD                          _SSPADD 000FC8  
                        _SSPBUF 000FC9                __end_of___xxtofl 2A00     number_deploy@poles_detected 00FB  
                __CFG_XINST$OFF 000000                    vfprintf@cfmt 00EB                       ??___aodiv 0090  
                     ??___aomod 0090                          ___wmul 3C42                       ??___fldiv 0017  
                     ??___awdiv 0084                       ??___fltol 002C                       ??___lldiv 0088  
                     ??___llmod 0088                          clear_0 3884                          clear_1 3890  
                        clear_2 38A0                ___awdiv@quotient 0086                       ??_lcdInst 0083  
                        _printf 3C1A                          pad@buf 0096                          dtoa@fp 009F  
                        _strlen 3B94                  i2___awdiv@sign 0006                       ??_initLCD 0084  
                        fputc@c 0084                          fputs@c 0091                          fputs@i 0092  
                  __pdataCOMRAM 0069                          fputs@s 008D                       ??_isalpha 0082  
                     ??_isdigit 0082               __end_ofi2___awdiv 36B8                       ??_islower 0082  
                  __mediumconst FDBA                       ??_isspace 0082                          tblptrh 000FF7  
                     ??_isupper 0082                          tblptrl 000FF6                          tblptru 000FF8  
              __end_of_vfprintf 390A                       ??_pulse_e 0080                __end_of_stepper2 2F6A  
ultrasonic_main@min_us_dist_918 0108                       ??_stepper 00FF                          xtoa@fp 009F  
                     ??_toupper 0088                    ___xxtofl@arg 000B           pulse_e@interruptState 0080  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                      __accesstop 0080  
       __end_of__initialization 38A6                  _actuators_main 2A00                   ___rparam_used 000001  
                    ___fltol@f1 0028                    stepper@i_380 0104              __size_of_backwards 0026  
           full_drive@direction 00FC                  __pcstackCOMRAM 0001                    stepper@stack 00FD  
              ?_ultrasonic_main 00FA                   __end_of_brake 3366                   __end_of_fputc 3796  
                 __end_of_fputs 3A62                   __end_of_servo 32B6               servoRotate0@servo 0080  
                 __end_of_putch 3CE6                   __end_of_start 395C                 _key_was_pressed 01E5  
         number_deploy@avg_dist 00F9                         ??_brake 00F9                         ??_fputc 0088  
                       ??_fputs 0091                         ??_servo 0085                         ??_putch 0083  
                       ??_start 0095                 ??_stepper2_back 0100                      __pbssBANK0 00FF  
                    __pbssBANK1 01CA                      __pbssBANK2 0200          __end_of_actuators_main 2B36  
                       ?___wmul 0080              __size_of_send_byte 0018                         ?_printf 00ED  
        stepper2_back@direction 0101                         ?_strlen 0080           __end_of_number_deploy 2298  
                     ?___xxtofl 0001               __end_of_backwards 3C90              __size_of_vfpfcnvrt 03AA  
                    _dist_final 0250                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                         _UI_main 0012            __size_of_send_nibble 001A  
               ?_actuators_main 010C                         __Hparam 0000                         __Lparam 0000  
                  ?_system_init 0001                         ___aodiv 2632                         ___aomod 2B36  
                       ___fldiv 1970                         ___awdiv 352A                         ___fltol 3144  
                       ___lldiv 35B0                 __size_of___wmul 0028                         ___llmod 3796  
                     ?_vfprintf 00E5                       ?_stepper2 00FD                 __CFG_STVREN$OFF 000000  
                       __pcinit 385E                      _full_drive 1640                         __ramtop 1000  
                       _lcdInst 3CE6                         __ptext0 0D6A                         __ptext1 2486  
                       __ptext2 2D6C                         __ptext3 2298                         __ptext4 2C5C  
                       __ptext5 390A                         __ptext6 2076                         __ptext7 352A  
                       __ptext8 32B6                         __ptext9 3C6A                 __size_of_printf 0028  
               __size_of_strlen 002E                         _initLCD 36B8                    __size_of_ISR 3A1E  
                       _counter 0060                    __size_of_abs 0034                    __size_of_pad 009C  
                       _isalpha 3A62                    __size_of_min 0110                         _isdigit 3B62  
                    ??___xxtofl 0005                         _islower 3AFE                         _isspace 39A8  
                       _isupper 3B30        __size_of_I2C_Master_Init 0060        __size_of_I2C_Master_Read 002A  
      __size_of_I2C_Master_Wait 0014        __size_of_I2C_Master_Stop 0008                 _prev_dist_final 01CA  
                       _pressed 01D9                         atoi@neg 008D                         _pulse_e 3BC2  
                       _stepper 34A2                  __pintcode_body 39E8                         _toupper 395C  
          end_of_initialization 38A6                         min@size 0082             main@arduino_stopped 01B9  
         __end_of_LCD_SIZE_HORZ FDD1               __end_of_send_byte 3CC2           __end_of_LCD_SIZE_VERT FDD0  
                       fputc@fp 0086                   __Lmediumconst FDBA                         int_func 39E8  
                       fputs@fp 008F       __size_of_I2C_Master_Start 0008       __size_of_I2C_Master_Write 000A  
               ___lldiv@divisor 0084                 ___lldiv@counter 008C               __end_of_vfpfcnvrt 1640  
                 ?_servoRotate0 0080                  main@steps2_adj 01B2                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 00EB                      ??_stepper2 0100  
                       strlen@a 0082                         strlen@s 0080                       _PORTAbits 000F80  
                    _print_echo 2298                   stepper2@i_388 0107                   ___xxtofl@sign 0009  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                      main@i_1030 01C2  
                    main@i_1026 01B6                       i2___awdiv 3634     ultrasonic_main@step2_offset 0104  
                 send_byte@data 0082              i2___awdiv@dividend 0001           UI_main@poles_detected 00FB  
                ??_servoRotate0 0082     number_deploy@tires_detected 0102                     vfpfcnvrt@ap 00CA  
                   vfpfcnvrt@fp 00C6                     vfpfcnvrt@ll 00D0                  __end_of___wmul 3C6A  
                   ?_full_drive 00F9         __size_of_servoRotate180 00EE                   __pidataCOMRAM 3D10  
                __end_of_printf 3C42                  __end_of_strlen 3BC2             start_initialization 385E  
                    min@minimum 0087              i2___awdiv@quotient 0007                     __end_of_ISR 3A26  
                   __end_of_abs 3ACC                     __end_of_pad 34A2                     __end_of_min 2D6C  
         stepper2@count_stepper 0109                      ?i2___awdiv 0001               ??_I2C_Master_Init 0091  
             ??_I2C_Master_Read 0081               ??_I2C_Master_Wait 0080               ??_I2C_Master_Stop 0081  
             main@prev_avg_dist 01C6                  _poles_detected 0052                 ___llmod@divisor 0084  
               ___llmod@counter 0088                    UI_main@t_dep 00F9                     vfprintf@fmt 00E7  
                      ??___wmul 0084        I2C_Master_Init@clockFreq 008D                __CFG_LPT1OSC$OFF 000000  
          __size_of_system_init 0032                        ??_printf 00F5                        ??_strlen 0082  
                   ?_print_echo 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
      __size_of_ultrasonic_main 01AC                     __pbssCOMRAM 0038                   __pcstackBANK0 0080  
                 __pcstackBANK1 0100                ___aodiv@dividend 0080                ??_actuators_main 0110  
             __size_of___xxtofl 0140                       _backwards 3C6A                        ?_UI_main 00F9  
         __end_of_stepper2_back 3406             __size_of_full_drive 0330                       _atoi$1587 008F  
                     _atoi$1588 0093                       _atoi$1589 0091                _I2C_Master_Start 3D08  
              _I2C_Master_Write 3CF6                       _dtoa$1103 00B1               __CFG_CCP2MX$PORTC 000000  
                     __pintcode 0008                   __pmediumconst FDBA                        ?___aodiv 0080  
                      ?___aomod 0080                        ?___fldiv 000F                        ?___awdiv 0080  
              ___aodiv@quotient 0092                        ?___fltol 0028                        ?___lldiv 0080  
                      ?___llmod 0080                        ?_lcdInst 0001               __size_of_vfprintf 0056  
             __size_of_stepper2 00FC            full_drive@stepper_no 00F9                        ?_initLCD 0001  
                      ?_isalpha 0080                        ?_isdigit 0080                        ?_islower 0080  
                      ?_isspace 0080                        ?_isupper 0080            __end_of_servoRotate0 3144  
                 ??_send_nibble 0081                        ?_pulse_e 0001                  __size_of_brake 00B0  
                   ??i2___awdiv 0005                        ?_stepper 00FD                  __size_of_fputc 006E  
                __size_of_fputs 003C                        ?_toupper 0086                  __size_of_servo 00B8  
                    ?_backwards 0001                  __size_of_putch 0010                  __size_of_start 0052  
                ___wmul@product 0084                        _LATAbits 000F89                        _LATBbits 000F8A  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      UI_main@i 0159                       _send_byte 3CAA             __size_of_print_echo 01EE  
        __size_of_number_deploy 0222                  _LCD_LINE1_ADDR FDCE                  _LCD_LINE2_ADDR FDD1  
                _LCD_LINE3_ADDR FDCD                  _LCD_LINE4_ADDR FDCC                        i2u504_40 1B46  
                      i2u522_40 31D6                        i2u508_40 1BA2                        i2u540_40 367A  
                      i2u509_40 1BC6                        i2u517_40 3150                        i2u533_40 29B8  
                      i2u518_40 3180                        i2u518_45 3176                        i2u635_40 3A12  
                      i2u548_40 08B4                        i2u549_40 08C4                        i2u558_40 0A02  
                      i2u559_40 0A12                        i2u568_40 0B54                        i2u569_40 0B64  
                      i2u578_40 0CA6                        i2u579_40 0CB6                __CFG_WDTPS$32768 000000  
    stepper2_back@count_stepper 0102                  _servoRotate180 2F6A                       _vfpfcnvrt 1296  
                     _xtoa$1114 00B2                       _xtoa$1115 00B4               ___wmul@multiplier 0080  
                     main@t_dep 01C0               i2___awdiv@divisor 0003                       main@stack 01BA  
             i2___awdiv@counter 0005                    _isspace$1614 0086                      vfpfcnvrt@c 00E0  
           actuators_main@stack 010C                       copy_data0 3872               ??_ultrasonic_main 00FC  
               UI_main@keypress 0154          __end_of_LCD_LINE1_ADDR FDCF                __size_of_UI_main 0814  
        __end_of_LCD_LINE2_ADDR FDD2          __end_of_LCD_LINE3_ADDR FDCE          __end_of_LCD_LINE4_ADDR FDCD  
           __end_of_send_nibble 3CAA                      ?_send_byte 0001                     UI_main@Pole 0104  
                      __Hrparam 0000                     UI_main@tick 0155                      vfprintf@ap 00E9  
                      __Lrparam 0000                      vfprintf@fp 00E5              __CFG_BOREN$SBORDIS 000000  
        __end_of_servoRotate180 3058                __size_of___aodiv 014A                __size_of___aomod 0126  
              __size_of___fldiv 0288                __size_of___awdiv 0086                __size_of___fltol 00BA  
              __size_of___lldiv 0084                __size_of___llmod 0068                    ??_full_drive 00FB  
                    ?_vfpfcnvrt 00C6                 ___aodiv@divisor 0088                 ___aodiv@counter 0090  
              __size_of_lcdInst 0010        actuators_main@steps2_adj 010E                   _number_deploy 2076  
               _I2C_Master_Init 37FE                 _I2C_Master_Read 3BF0                __size_of_initLCD 0070  
                      ___xxtofl 28C0                 _I2C_Master_Wait 3CC2                 _I2C_Master_Stop 3D00  
              __size_of_isalpha 0036                __size_of_isdigit 0032                __size_of_islower 0032  
              __size_of_isspace 0040                        __ptext10 2A00                        __ptext11 3ACC  
                      __ptext20 3C1A                        __ptext12 3366                        __ptext21 38B4  
                      __ptext13 2E6E                        __ptext30 3B94                        __ptext22 1296  
                      __ptext14 34A2                        __ptext31 3A26                        __ptext23 1E40  
                      __ptext15 1640                        __ptext40 3C42                        __ptext32 3728  
                      __ptext24 395C                        __ptext16 31FE                        __ptext41 36B8  
                      __ptext33 3CD6                        __ptext25 3AFE                        __ptext17 2F6A  
                      __ptext50 3BF0                        __ptext42 3CE6                        __ptext34 3A98  
                      __ptext26 3B30                        __ptext18 3058                        __ptext51 3CC2  
                      __ptext43 3CAA                        __ptext35 2B36                        __ptext27 3A62  
                      __ptext19 0012                        __ptext52 37FE                        __ptext44 3C90  
                      __ptext36 2632                        __ptext28 1BF8                        __ptext53 35B0  
                      __ptext45 3BC2                        __ptext37 277C                        __ptext29 3406  
                      __ptext46 3796                        __ptext38 39A8                        __ptext55 0826  
                      __ptext47 3CF6                        __ptext39 3B62                        __ptext56 3634  
                      __ptext48 3D00                        __ptext57 28C0                        __ptext49 3D08  
                      __ptext58 3144                        __ptext59 1970                __size_of_isupper 0032  
                      _avg_dist 0044                __size_of_pulse_e 002E                     ??_backwards 0083  
              __size_of_stepper 0088                __size_of_toupper 004C                   __size_of_echo 0544  
                 __size_of_atoi 0144                   __size_of_main 052C                   __size_of_dtoa 0248  
       stepper2_back@steps2_adj 00FD                   __size_of_trig 0102                   __size_of_xtoa 0236  
            __end_of_full_drive 1970                        _keypress 005F                        _temp_int 01E1  
               ?_servoRotate180 0080                        int$flags 006E                        _vfprintf 38B4  
                      main@Pole 015E                        _stepper2 2E6E                       printf@fmt 00ED  
   I2C_Master_Write@byteToWrite 0081                ___aomod@dividend 0080           __size_of_servoRotate0 00EC  
                      min@array 0080                    ??_print_echo 00F9                  ?_number_deploy 00F9  
                     putch@data 0083                  _vfpfcnvrt$1129 00E3        __end_of_I2C_Master_Start 3D10  
      __end_of_I2C_Master_Write 3D00                      _INTCONbits 000FF2           ultrasonic_main@sensed 0102  
                      isalpha@c 0080                        isdigit@c 0080                       stepper2@i 0105  
                   _send_nibble 3C90                        intlevel2 0000                   _LCD_SIZE_HORZ FDD0  
                      islower@c 0080                   _LCD_SIZE_VERT FDCF                        isspace@c 0080  
              ___lldiv@dividend 0080                     ??_send_byte 0082                        isupper@c 0080  
                _tires_deployed 0054              __end_of_print_echo 2486                   ??_system_init 0080  
                  _servoRotate0 3058                        printf@ap 00F7         __end_of_I2C_Master_Init 385E  
               ___aomod@divisor 0088         __end_of_I2C_Master_Read 3C1A         __end_of_I2C_Master_Wait 3CD6  
       __end_of_I2C_Master_Stop 3D08                     ??_vfpfcnvrt 00CC                     lcdInst@data 0083  
               ___aomod@counter 0090                        stepper@i 0102       ultrasonic_main@steps2_adj 0106  
              ___lldiv@quotient 0088                        toupper@c 0086                     _SSPCON1bits 000FC6  
                   _SSPCON2bits 000FC5                     _timer_count 005C                    ___aodiv@sign 0091  
                  ___aomod@sign 0091            stepper@count_stepper 0100  
