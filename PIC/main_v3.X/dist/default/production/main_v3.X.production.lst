

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 07:39:44 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4620 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  003FF6                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _dists
   122  003FF6  0000               	dw	0
   123  003FF8  FFFF               	dw	65535
   124                           
   125                           ;initializer for _send
   126  003FFA  01                 	db	1
   127                           
   128                           	psect	mediumconst
   129  00FD7C                     __pmediumconst:
   130                           	opt callstack 0
   131  00FD7C  00                 	db	0
   132  00FD7D                     _keys:
   133                           	opt callstack 0
   134  00FD7D  31                 	db	49
   135  00FD7E  32                 	db	50
   136  00FD7F  33                 	db	51
   137  00FD80  41                 	db	65
   138  00FD81  34                 	db	52
   139  00FD82  35                 	db	53
   140  00FD83  36                 	db	54
   141  00FD84  42                 	db	66
   142  00FD85  37                 	db	55
   143  00FD86  38                 	db	56
   144  00FD87  39                 	db	57
   145  00FD88  43                 	db	67
   146  00FD89  2A                 	db	42
   147  00FD8A  30                 	db	48
   148  00FD8B  23                 	db	35
   149  00FD8C  44                 	db	68
   150  00FD8D  00                 	db	0
   151  00FD8E                     __end_of_keys:
   152                           	opt callstack 0
   153  00FD8E  50                 	db	80
   154  00FD8F                     __end_of_LCD_LINE4_ADDR:
   155                           	opt callstack 0
   156  00FD8F  10                 	db	16
   157  00FD90                     __end_of_LCD_LINE3_ADDR:
   158                           	opt callstack 0
   159  00FD90                     _LCD_LINE1_ADDR:
   160                           	opt callstack 0
   161  00FD90  00                 	db	0
   162  00FD91                     __end_of_LCD_LINE1_ADDR:
   163                           	opt callstack 0
   164  00FD91                     _LCD_SIZE_VERT:
   165                           	opt callstack 0
   166  00FD91  04                 	db	4
   167  00FD92                     __end_of_LCD_SIZE_VERT:
   168                           	opt callstack 0
   169  00FD92                     _LCD_SIZE_HORZ:
   170                           	opt callstack 0
   171  00FD92  10                 	db	16
   172  00FD93                     __end_of_LCD_SIZE_HORZ:
   173                           	opt callstack 0
   174  00FD93  40                 	db	64
   175  00FD94                     __end_of_LCD_LINE2_ADDR:
   176                           	opt callstack 0
   177  0000                     _EECON2	set	4007
   178  0000                     _EECON1bits	set	4006
   179  0000                     _EEADR	set	4009
   180  0000                     _EEDATA	set	4008
   181  0000                     _PORTAbits	set	3968
   182  0000                     _TRISAbits	set	3986
   183  0000                     _T1CON	set	4045
   184  0000                     _PORTB	set	3969
   185  0000                     _TMR1H	set	4047
   186  0000                     _TMR1L	set	4046
   187  0000                     _LATDbits	set	3980
   188  0000                     _INTCONbits	set	4082
   189  0000                     _LATBbits	set	3978
   190  0000                     _TRISBbits	set	3987
   191  0000                     _LATE	set	3981
   192  0000                     _TRISE	set	3990
   193  0000                     _LATC	set	3979
   194  0000                     _TRISC	set	3988
   195  0000                     _ADCON1	set	4033
   196  0000                     _TRISD	set	3989
   197  0000                     _LATD	set	3980
   198  0000                     _TRISA	set	3986
   199  0000                     _LATB	set	3978
   200  0000                     _TRISB	set	3987
   201  0000                     _LATAbits	set	3977
   202  0000                     _LATEbits	set	3981
   203  0000                     _LATCbits	set	3979
   204  0000                     _LATA	set	3977
   205  0000                     _SSPBUF	set	4041
   206  0000                     _SSPCON2bits	set	4037
   207  0000                     _SSPCON1	set	4038
   208  0000                     _SSPADD	set	4040
   209  0000                     _TRISCbits	set	3988
   210  0000                     _SSPCON1bits	set	4038
   211  0000                     _SSPCON2	set	4037
   212  0000                     _SSPSTAT	set	4039
   213  0000                     _GIE	set	32663
   214  0000                     _INT1IE	set	32643
   215  0000                     _RB2	set	31754
   216  0000                     _RB3	set	31755
   217  0000                     _RB4	set	31756
   218  0000                     _RB5	set	31757
   219  0000                     _RB6	set	31758
   220  0000                     _TMR1ON	set	32360
   221  0000                     _RB7	set	31759
   222  0000                     _INT1IF	set	32640
   223  0000                     _RBIE	set	32659
   224  0000                     _RBIF	set	32656
   225  0000                     _RD0	set	31768
   226  0000                     _RD1	set	31769
   227  0000                     _RC2	set	31762
   228  0000                     _RC1	set	31761
   229  00FD94                     STR_40:
   230  00FD94  50                 	db	80	;'P'
   231  00FD95  25                 	db	37
   232  00FD96  64                 	db	100	;'d'
   233  00FD97  20                 	db	32
   234  00FD98  44                 	db	68	;'D'
   235  00FD99  65                 	db	101	;'e'
   236  00FD9A  70                 	db	112	;'p'
   237  00FD9B  3A                 	db	58	;':'
   238  00FD9C  25                 	db	37
   239  00FD9D  64                 	db	100	;'d'
   240  00FD9E  2C                 	db	44
   241  00FD9F  54                 	db	84	;'T'
   242  00FDA0  6F                 	db	111	;'o'
   243  00FDA1  74                 	db	116	;'t'
   244  00FDA2  3A                 	db	58	;':'
   245  00FDA3  25                 	db	37
   246  00FDA4  64                 	db	100	;'d'
   247  00FDA5  00                 	db	0
   248  00FDA6                     STR_30:
   249  00FDA6  20                 	db	32
   250  00FDA7  20                 	db	32
   251  00FDA8  20                 	db	32
   252  00FDA9  20                 	db	32
   253  00FDAA  20                 	db	32
   254  00FDAB  30                 	db	48	;'0'
   255  00FDAC  2D                 	db	45
   256  00FDAD  4D                 	db	77	;'M'
   257  00FDAE  65                 	db	101	;'e'
   258  00FDAF  6E                 	db	110	;'n'
   259  00FDB0  75                 	db	117	;'u'
   260  00FDB1  20                 	db	32
   261  00FDB2  20                 	db	32
   262  00FDB3  20                 	db	32
   263  00FDB4  20                 	db	32
   264  00FDB5  20                 	db	32
   265  00FDB6  00                 	db	0
   266  00FDB7                     STR_47:
   267  00FDB7  3C                 	db	60	;'<'
   268  00FDB8  2A                 	db	42
   269  00FDB9  20                 	db	32
   270  00FDBA  20                 	db	32
   271  00FDBB  20                 	db	32
   272  00FDBC  30                 	db	48	;'0'
   273  00FDBD  2D                 	db	45
   274  00FDBE  4D                 	db	77	;'M'
   275  00FDBF  65                 	db	101	;'e'
   276  00FDC0  6E                 	db	110	;'n'
   277  00FDC1  75                 	db	117	;'u'
   278  00FDC2  20                 	db	32
   279  00FDC3  20                 	db	32
   280  00FDC4  20                 	db	32
   281  00FDC5  20                 	db	32
   282  00FDC6  20                 	db	32
   283  00FDC7  00                 	db	0
   284  00FDC8                     STR_10:
   285  00FDC8  44                 	db	68	;'D'
   286  00FDC9  69                 	db	105	;'i'
   287  00FDCA  73                 	db	115	;'s'
   288  00FDCB  74                 	db	116	;'t'
   289  00FDCC  31                 	db	49	;'1'
   290  00FDCD  3D                 	db	61	;'='
   291  00FDCE  25                 	db	37
   292  00FDCF  64                 	db	100	;'d'
   293  00FDD0  2C                 	db	44
   294  00FDD1  41                 	db	65	;'A'
   295  00FDD2  76                 	db	118	;'v'
   296  00FDD3  67                 	db	103	;'g'
   297  00FDD4  3D                 	db	61	;'='
   298  00FDD5  25                 	db	37
   299  00FDD6  64                 	db	100	;'d'
   300  00FDD7  20                 	db	32
   301  00FDD8  00                 	db	0
   302  00FDD9                     STR_16:
   303  00FDD9  44                 	db	68	;'D'
   304  00FDDA  69                 	db	105	;'i'
   305  00FDDB  73                 	db	115	;'s'
   306  00FDDC  74                 	db	116	;'t'
   307  00FDDD  34                 	db	52	;'4'
   308  00FDDE  3D                 	db	61	;'='
   309  00FDDF  25                 	db	37
   310  00FDE0  64                 	db	100	;'d'
   311  00FDE1  2C                 	db	44
   312  00FDE2  41                 	db	65	;'A'
   313  00FDE3  76                 	db	118	;'v'
   314  00FDE4  67                 	db	103	;'g'
   315  00FDE5  3D                 	db	61	;'='
   316  00FDE6  25                 	db	37
   317  00FDE7  64                 	db	100	;'d'
   318  00FDE8  20                 	db	32
   319  00FDE9  00                 	db	0
   320  00FDEA                     STR_36:
   321  00FDEA  20                 	db	32
   322  00FDEB  20                 	db	32
   323  00FDEC  20                 	db	32
   324  00FDED  20                 	db	32
   325  00FDEE  20                 	db	32
   326  00FDEF  30                 	db	48	;'0'
   327  00FDF0  2D                 	db	45
   328  00FDF1  4D                 	db	77	;'M'
   329  00FDF2  65                 	db	101	;'e'
   330  00FDF3  6E                 	db	110	;'n'
   331  00FDF4  75                 	db	117	;'u'
   332  00FDF5  20                 	db	32
   333  00FDF6  20                 	db	32
   334  00FDF7  20                 	db	32
   335  00FDF8  23                 	db	35
   336  00FDF9  3E                 	db	62	;'>'
   337  00FDFA  00                 	db	0
   338  00FDFB                     STR_39:
   339  00FDFB  3C                 	db	60	;'<'
   340  00FDFC  2A                 	db	42
   341  00FDFD  20                 	db	32
   342  00FDFE  20                 	db	32
   343  00FDFF  20                 	db	32
   344  00FE00  30                 	db	48	;'0'
   345  00FE01  2D                 	db	45
   346  00FE02  4D                 	db	77	;'M'
   347  00FE03  65                 	db	101	;'e'
   348  00FE04  6E                 	db	110	;'n'
   349  00FE05  75                 	db	117	;'u'
   350  00FE06  20                 	db	32
   351  00FE07  20                 	db	32
   352  00FE08  20                 	db	32
   353  00FE09  23                 	db	35
   354  00FE0A  3E                 	db	62	;'>'
   355  00FE0B  00                 	db	0
   356  00FE0C                     STR_58:
   357  00FE0C  64                 	db	100	;'d'
   358  00FE0D  69                 	db	105	;'i'
   359  00FE0E  73                 	db	115	;'s'
   360  00FE0F  74                 	db	116	;'t'
   361  00FE10  20                 	db	32
   362  00FE11  70                 	db	112	;'p'
   363  00FE12  5B                 	db	91	;'['
   364  00FE13  25                 	db	37
   365  00FE14  64                 	db	100	;'d'
   366  00FE15  5D                 	db	93	;']'
   367  00FE16  3A                 	db	58	;':'
   368  00FE17  25                 	db	37
   369  00FE18  64                 	db	100	;'d'
   370  00FE19  2C                 	db	44
   371  00FE1A  25                 	db	37
   372  00FE1B  64                 	db	100	;'d'
   373  00FE1C  00                 	db	0
   374  00FE1D                     STR_60:
   375  00FE1D  70                 	db	112	;'p'
   376  00FE1E  5B                 	db	91	;'['
   377  00FE1F  25                 	db	37
   378  00FE20  64                 	db	100	;'d'
   379  00FE21  5D                 	db	93	;']'
   380  00FE22  2C                 	db	44
   381  00FE23  74                 	db	116	;'t'
   382  00FE24  64                 	db	100	;'d'
   383  00FE25  65                 	db	101	;'e'
   384  00FE26  70                 	db	112	;'p'
   385  00FE27  20                 	db	32
   386  00FE28  3A                 	db	58	;':'
   387  00FE29  20                 	db	32
   388  00FE2A  25                 	db	37
   389  00FE2B  64                 	db	100	;'d'
   390  00FE2C  00                 	db	0
   391  00FE2D                     STR_61:
   392  00FE2D  70                 	db	112	;'p'
   393  00FE2E  5B                 	db	91	;'['
   394  00FE2F  25                 	db	37
   395  00FE30  64                 	db	100	;'d'
   396  00FE31  5D                 	db	93	;']'
   397  00FE32  20                 	db	32
   398  00FE33  74                 	db	116	;'t'
   399  00FE34  63                 	db	99	;'c'
   400  00FE35  6E                 	db	110	;'n'
   401  00FE36  74                 	db	116	;'t'
   402  00FE37  20                 	db	32
   403  00FE38  3A                 	db	58	;':'
   404  00FE39  20                 	db	32
   405  00FE3A  25                 	db	37
   406  00FE3B  64                 	db	100	;'d'
   407  00FE3C  00                 	db	0
   408  00FE3D                     STR_22:
   409  00FE3D  64                 	db	100	;'d'
   410  00FE3E  65                 	db	101	;'e'
   411  00FE3F  74                 	db	116	;'t'
   412  00FE40  2C                 	db	44
   413  00FE41  25                 	db	37
   414  00FE42  64                 	db	100	;'d'
   415  00FE43  2C                 	db	44
   416  00FE44  20                 	db	32
   417  00FE45  74                 	db	116	;'t'
   418  00FE46  63                 	db	99	;'c'
   419  00FE47  6E                 	db	110	;'n'
   420  00FE48  74                 	db	116	;'t'
   421  00FE49  20                 	db	32
   422  00FE4A  25                 	db	37
   423  00FE4B  64                 	db	100	;'d'
   424  00FE4C  00                 	db	0
   425  00FE4D                     STR_12:
   426  00FE4D  44                 	db	68	;'D'
   427  00FE4E  69                 	db	105	;'i'
   428  00FE4F  73                 	db	115	;'s'
   429  00FE50  74                 	db	116	;'t'
   430  00FE51  32                 	db	50	;'2'
   431  00FE52  3D                 	db	61	;'='
   432  00FE53  25                 	db	37
   433  00FE54  64                 	db	100	;'d'
   434  00FE55  2C                 	db	44
   435  00FE56  41                 	db	65	;'A'
   436  00FE57  76                 	db	118	;'v'
   437  00FE58  67                 	db	103	;'g'
   438  00FE59  3D                 	db	61	;'='
   439  00FE5A  25                 	db	37
   440  00FE5B  64                 	db	100	;'d'
   441  00FE5C  00                 	db	0
   442  00FE5D                     STR_14:
   443  00FE5D  44                 	db	68	;'D'
   444  00FE5E  69                 	db	105	;'i'
   445  00FE5F  73                 	db	115	;'s'
   446  00FE60  74                 	db	116	;'t'
   447  00FE61  33                 	db	51	;'3'
   448  00FE62  3D                 	db	61	;'='
   449  00FE63  25                 	db	37
   450  00FE64  64                 	db	100	;'d'
   451  00FE65  2C                 	db	44
   452  00FE66  41                 	db	65	;'A'
   453  00FE67  76                 	db	118	;'v'
   454  00FE68  67                 	db	103	;'g'
   455  00FE69  3D                 	db	61	;'='
   456  00FE6A  25                 	db	37
   457  00FE6B  64                 	db	100	;'d'
   458  00FE6C  00                 	db	0
   459  00FE6D                     STR_25:
   460  00FE6D  33                 	db	51	;'3'
   461  00FE6E  20                 	db	32
   462  00FE6F  2D                 	db	45
   463  00FE70  20                 	db	32
   464  00FE71  44                 	db	68	;'D'
   465  00FE72  61                 	db	97	;'a'
   466  00FE73  74                 	db	116	;'t'
   467  00FE74  65                 	db	101	;'e'
   468  00FE75  26                 	db	38
   469  00FE76  54                 	db	84	;'T'
   470  00FE77  69                 	db	105	;'i'
   471  00FE78  6D                 	db	109	;'m'
   472  00FE79  65                 	db	101	;'e'
   473  00FE7A  20                 	db	32
   474  00FE7B  00                 	db	0
   475  00FE7C                     STR_41:
   476  00FE7C  44                 	db	68	;'D'
   477  00FE7D  69                 	db	105	;'i'
   478  00FE7E  73                 	db	115	;'s'
   479  00FE7F  74                 	db	116	;'t'
   480  00FE80  54                 	db	84	;'T'
   481  00FE81  6F                 	db	111	;'o'
   482  00FE82  53                 	db	83	;'S'
   483  00FE83  74                 	db	116	;'t'
   484  00FE84  61                 	db	97	;'a'
   485  00FE85  72                 	db	114	;'r'
   486  00FE86  74                 	db	116	;'t'
   487  00FE87  3A                 	db	58	;':'
   488  00FE88  25                 	db	37
   489  00FE89  64                 	db	100	;'d'
   490  00FE8A  00                 	db	0
   491  00FE8B                     STR_29:
   492  00FE8B  4D                 	db	77	;'M'
   493  00FE8C  61                 	db	97	;'a'
   494  00FE8D  63                 	db	99	;'c'
   495  00FE8E  68                 	db	104	;'h'
   496  00FE8F  69                 	db	105	;'i'
   497  00FE90  6E                 	db	110	;'n'
   498  00FE91  65                 	db	101	;'e'
   499  00FE92  20                 	db	32
   500  00FE93  49                 	db	73	;'I'
   501  00FE94  6E                 	db	110	;'n'
   502  00FE95  20                 	db	32
   503  00FE96  55                 	db	85	;'U'
   504  00FE97  73                 	db	115	;'s'
   505  00FE98  65                 	db	101	;'e'
   506  00FE99  00                 	db	0
   507  00FE9A                     STR_49:
   508  00FE9A  25                 	db	37
   509  00FE9B  30                 	db	48	;'0'
   510  00FE9C  32                 	db	50	;'2'
   511  00FE9D  78                 	db	120	;'x'
   512  00FE9E  2F                 	db	47
   513  00FE9F  25                 	db	37
   514  00FEA0  30                 	db	48	;'0'
   515  00FEA1  32                 	db	50	;'2'
   516  00FEA2  78                 	db	120	;'x'
   517  00FEA3  2F                 	db	47
   518  00FEA4  25                 	db	37
   519  00FEA5  30                 	db	48	;'0'
   520  00FEA6  32                 	db	50	;'2'
   521  00FEA7  78                 	db	120	;'x'
   522  00FEA8  00                 	db	0
   523  00FEA9                     STR_50:
   524  00FEA9  25                 	db	37
   525  00FEAA  30                 	db	48	;'0'
   526  00FEAB  32                 	db	50	;'2'
   527  00FEAC  78                 	db	120	;'x'
   528  00FEAD  3A                 	db	58	;':'
   529  00FEAE  25                 	db	37
   530  00FEAF  30                 	db	48	;'0'
   531  00FEB0  32                 	db	50	;'2'
   532  00FEB1  78                 	db	120	;'x'
   533  00FEB2  3A                 	db	58	;':'
   534  00FEB3  25                 	db	37
   535  00FEB4  30                 	db	48	;'0'
   536  00FEB5  32                 	db	50	;'2'
   537  00FEB6  78                 	db	120	;'x'
   538  00FEB7  00                 	db	0
   539  00FEB8                     STR_59:
   540  00FEB8  70                 	db	112	;'p'
   541  00FEB9  5B                 	db	91	;'['
   542  00FEBA  25                 	db	37
   543  00FEBB  64                 	db	100	;'d'
   544  00FEBC  5D                 	db	93	;']'
   545  00FEBD  20                 	db	32
   546  00FEBE  66                 	db	102	;'f'
   547  00FEBF  73                 	db	115	;'s'
   548  00FEC0  20                 	db	32
   549  00FEC1  3A                 	db	58	;':'
   550  00FEC2  20                 	db	32
   551  00FEC3  25                 	db	37
   552  00FEC4  64                 	db	100	;'d'
   553  00FEC5  00                 	db	0
   554  00FEC6                     STR_38:
   555  00FEC6  4E                 	db	78	;'N'
   556  00FEC7  6F                 	db	111	;'o'
   557  00FEC8  2E                 	db	46
   558  00FEC9  20                 	db	32
   559  00FECA  50                 	db	80	;'P'
   560  00FECB  6F                 	db	111	;'o'
   561  00FECC  6C                 	db	108	;'l'
   562  00FECD  65                 	db	101	;'e'
   563  00FECE  73                 	db	115	;'s'
   564  00FECF  3A                 	db	58	;':'
   565  00FED0  20                 	db	32
   566  00FED1  25                 	db	37
   567  00FED2  64                 	db	100	;'d'
   568  00FED3  00                 	db	0
   569  00FED4                     STR_37:
   570  00FED4  4E                 	db	78	;'N'
   571  00FED5  6F                 	db	111	;'o'
   572  00FED6  2E                 	db	46
   573  00FED7  20                 	db	32
   574  00FED8  54                 	db	84	;'T'
   575  00FED9  69                 	db	105	;'i'
   576  00FEDA  72                 	db	114	;'r'
   577  00FEDB  65                 	db	101	;'e'
   578  00FEDC  73                 	db	115	;'s'
   579  00FEDD  3A                 	db	58	;':'
   580  00FEDE  20                 	db	32
   581  00FEDF  25                 	db	37
   582  00FEE0  64                 	db	100	;'d'
   583  00FEE1  00                 	db	0
   584  00FEE2                     STR_7:
   585  00FEE2  53                 	db	83	;'S'
   586  00FEE3  74                 	db	116	;'t'
   587  00FEE4  65                 	db	101	;'e'
   588  00FEE5  70                 	db	112	;'p'
   589  00FEE6  20                 	db	32
   590  00FEE7  73                 	db	115	;'s'
   591  00FEE8  70                 	db	112	;'p'
   592  00FEE9  65                 	db	101	;'e'
   593  00FEEA  65                 	db	101	;'e'
   594  00FEEB  64                 	db	100	;'d'
   595  00FEEC  20                 	db	32
   596  00FEED  25                 	db	37
   597  00FEEE  64                 	db	100	;'d'
   598  00FEEF  00                 	db	0
   599  00FEF0                     STR_19:
   600  00FEF0  62                 	db	98	;'b'
   601  00FEF1  72                 	db	114	;'r'
   602  00FEF2  65                 	db	101	;'e'
   603  00FEF3  61                 	db	97	;'a'
   604  00FEF4  6B                 	db	107	;'k'
   605  00FEF5  20                 	db	32
   606  00FEF6  68                 	db	104	;'h'
   607  00FEF7  65                 	db	101	;'e'
   608  00FEF8  72                 	db	114	;'r'
   609  00FEF9  65                 	db	101	;'e'
   610  00FEFA  65                 	db	101	;'e'
   611  00FEFB  3F                 	db	63	;'?'
   612  00FEFC  00                 	db	0
   613  00FEFD                     STR_54:
   614  00FEFD  6D                 	db	109	;'m'
   615  00FEFE  6F                 	db	111	;'o'
   616  00FEFF  72                 	db	114	;'r'
   617  00FF00  65                 	db	101	;'e'
   618  00FF01  20                 	db	32
   619  00FF02  77                 	db	119	;'w'
   620  00FF03  61                 	db	97	;'a'
   621  00FF04  69                 	db	105	;'i'
   622  00FF05  74                 	db	116	;'t'
   623  00FF06  69                 	db	105	;'i'
   624  00FF07  6E                 	db	110	;'n'
   625  00FF08  67                 	db	103	;'g'
   626  00FF09  00                 	db	0
   627  00FF0A                     STR_2:
   628  00FF0A  53                 	db	83	;'S'
   629  00FF0B  74                 	db	116	;'t'
   630  00FF0C  65                 	db	101	;'e'
   631  00FF0D  70                 	db	112	;'p'
   632  00FF0E  70                 	db	112	;'p'
   633  00FF0F  65                 	db	101	;'e'
   634  00FF10  72                 	db	114	;'r'
   635  00FF11  20                 	db	32
   636  00FF12  64                 	db	100	;'d'
   637  00FF13  6F                 	db	111	;'o'
   638  00FF14  6E                 	db	110	;'n'
   639  00FF15  65                 	db	101	;'e'
   640  00FF16  00                 	db	0
   641  00FF17                     STR_48:
   642  00FF17  44                 	db	68	;'D'
   643  00FF18  41                 	db	65	;'A'
   644  00FF19  54                 	db	84	;'T'
   645  00FF1A  45                 	db	69	;'E'
   646  00FF1B  20                 	db	32
   647  00FF1C  26                 	db	38
   648  00FF1D  20                 	db	32
   649  00FF1E  54                 	db	84	;'T'
   650  00FF1F  49                 	db	73	;'I'
   651  00FF20  4D                 	db	77	;'M'
   652  00FF21  45                 	db	69	;'E'
   653  00FF22  00                 	db	0
   654  00FF23                     STR_21:
   655  00FF23  73                 	db	115	;'s'
   656  00FF24  74                 	db	116	;'t'
   657  00FF25  65                 	db	101	;'e'
   658  00FF26  70                 	db	112	;'p'
   659  00FF27  73                 	db	115	;'s'
   660  00FF28  61                 	db	97	;'a'
   661  00FF29  64                 	db	100	;'d'
   662  00FF2A  6A                 	db	106	;'j'
   663  00FF2B  20                 	db	32
   664  00FF2C  25                 	db	37
   665  00FF2D  64                 	db	100	;'d'
   666  00FF2E  00                 	db	0
   667  00FF2F                     STR_62:
   668  00FF2F  61                 	db	97	;'a'
   669  00FF30  76                 	db	118	;'v'
   670  00FF31  67                 	db	103	;'g'
   671  00FF32  20                 	db	32
   672  00FF33  64                 	db	100	;'d'
   673  00FF34  69                 	db	105	;'i'
   674  00FF35  73                 	db	115	;'s'
   675  00FF36  74                 	db	116	;'t'
   676  00FF37  20                 	db	32
   677  00FF38  25                 	db	37
   678  00FF39  64                 	db	100	;'d'
   679  00FF3A  00                 	db	0
   680  00FF3B                     STR_42:
   681  00FF3B  44                 	db	68	;'D'
   682  00FF3C  69                 	db	105	;'i'
   683  00FF3D  73                 	db	115	;'s'
   684  00FF3E  74                 	db	116	;'t'
   685  00FF3F  54                 	db	84	;'T'
   686  00FF40  6F                 	db	111	;'o'
   687  00FF41  43                 	db	67	;'C'
   688  00FF42  4C                 	db	76	;'L'
   689  00FF43  3A                 	db	58	;':'
   690  00FF44  25                 	db	37
   691  00FF45  64                 	db	100	;'d'
   692  00FF46  00                 	db	0
   693  00FF47                     STR_24:
   694  00FF47  32                 	db	50	;'2'
   695  00FF48  20                 	db	32
   696  00FF49  2D                 	db	45
   697  00FF4A  20                 	db	32
   698  00FF4B  53                 	db	83	;'S'
   699  00FF4C  75                 	db	117	;'u'
   700  00FF4D  6D                 	db	109	;'m'
   701  00FF4E  6D                 	db	109	;'m'
   702  00FF4F  61                 	db	97	;'a'
   703  00FF50  72                 	db	114	;'r'
   704  00FF51  79                 	db	121	;'y'
   705  00FF52  00                 	db	0
   706  00FF53                     STR_63:
   707  00FF53  70                 	db	112	;'p'
   708  00FF54  6F                 	db	111	;'o'
   709  00FF55  6C                 	db	108	;'l'
   710  00FF56  65                 	db	101	;'e'
   711  00FF57  73                 	db	115	;'s'
   712  00FF58  20                 	db	32
   713  00FF59  64                 	db	100	;'d'
   714  00FF5A  20                 	db	32
   715  00FF5B  25                 	db	37
   716  00FF5C  64                 	db	100	;'d'
   717  00FF5D  00                 	db	0
   718  00FF5E                     STR_20:
   719  00FF5E  6D                 	db	109	;'m'
   720  00FF5F  69                 	db	105	;'i'
   721  00FF60  6E                 	db	110	;'n'
   722  00FF61  69                 	db	105	;'i'
   723  00FF62  6D                 	db	109	;'m'
   724  00FF63  75                 	db	117	;'u'
   725  00FF64  6D                 	db	109	;'m'
   726  00FF65  20                 	db	32
   727  00FF66  25                 	db	37
   728  00FF67  64                 	db	100	;'d'
   729  00FF68  00                 	db	0
   730  00FF69                     STR_64:
   731  00FF69  70                 	db	112	;'p'
   732  00FF6A  6F                 	db	111	;'o'
   733  00FF6B  6C                 	db	108	;'l'
   734  00FF6C  65                 	db	101	;'e'
   735  00FF6D  73                 	db	115	;'s'
   736  00FF6E  20                 	db	32
   737  00FF6F  64                 	db	100	;'d'
   738  00FF70  6F                 	db	111	;'o'
   739  00FF71  6E                 	db	110	;'n'
   740  00FF72  65                 	db	101	;'e'
   741  00FF73  00                 	db	0
   742  00FF74                     STR_3:
   743  00FF74  53                 	db	83	;'S'
   744  00FF75  65                 	db	101	;'e'
   745  00FF76  72                 	db	114	;'r'
   746  00FF77  76                 	db	118	;'v'
   747  00FF78  6F                 	db	111	;'o'
   748  00FF79  20                 	db	32
   749  00FF7A  64                 	db	100	;'d'
   750  00FF7B  6F                 	db	111	;'o'
   751  00FF7C  6E                 	db	110	;'n'
   752  00FF7D  65                 	db	101	;'e'
   753  00FF7E  00                 	db	0
   754  00FF7F                     STR_11:
   755  00FF7F  44                 	db	68	;'D'
   756  00FF80  69                 	db	105	;'i'
   757  00FF81  73                 	db	115	;'s'
   758  00FF82  74                 	db	116	;'t'
   759  00FF83  31                 	db	49	;'1'
   760  00FF84  20                 	db	32
   761  00FF85  3D                 	db	61	;'='
   762  00FF86  20                 	db	32
   763  00FF87  58                 	db	88	;'X'
   764  00FF88  00                 	db	0
   765  00FF89                     STR_13:
   766  00FF89  44                 	db	68	;'D'
   767  00FF8A  69                 	db	105	;'i'
   768  00FF8B  73                 	db	115	;'s'
   769  00FF8C  74                 	db	116	;'t'
   770  00FF8D  32                 	db	50	;'2'
   771  00FF8E  20                 	db	32
   772  00FF8F  3D                 	db	61	;'='
   773  00FF90  20                 	db	32
   774  00FF91  58                 	db	88	;'X'
   775  00FF92  00                 	db	0
   776  00FF93                     STR_15:
   777  00FF93  44                 	db	68	;'D'
   778  00FF94  69                 	db	105	;'i'
   779  00FF95  73                 	db	115	;'s'
   780  00FF96  74                 	db	116	;'t'
   781  00FF97  33                 	db	51	;'3'
   782  00FF98  20                 	db	32
   783  00FF99  3D                 	db	61	;'='
   784  00FF9A  20                 	db	32
   785  00FF9B  58                 	db	88	;'X'
   786  00FF9C  00                 	db	0
   787  00FF9D                     STR_17:
   788  00FF9D  44                 	db	68	;'D'
   789  00FF9E  69                 	db	105	;'i'
   790  00FF9F  73                 	db	115	;'s'
   791  00FFA0  74                 	db	116	;'t'
   792  00FFA1  34                 	db	52	;'4'
   793  00FFA2  20                 	db	32
   794  00FFA3  3D                 	db	61	;'='
   795  00FFA4  20                 	db	32
   796  00FFA5  58                 	db	88	;'X'
   797  00FFA6  00                 	db	0
   798  00FFA7                     STR_56:
   799  00FFA7  64                 	db	100	;'d'
   800  00FFA8  75                 	db	117	;'u'
   801  00FFA9  6E                 	db	110	;'n'
   802  00FFAA  20                 	db	32
   803  00FFAB  62                 	db	98	;'b'
   804  00FFAC  72                 	db	114	;'r'
   805  00FFAD  65                 	db	101	;'e'
   806  00FFAE  61                 	db	97	;'a'
   807  00FFAF  6B                 	db	107	;'k'
   808  00FFB0  00                 	db	0
   809  00FFB1                     STR_65:
   810  00FFB1  62                 	db	98	;'b'
   811  00FFB2  61                 	db	97	;'a'
   812  00FFB3  63                 	db	99	;'c'
   813  00FFB4  6B                 	db	107	;'k'
   814  00FFB5  77                 	db	119	;'w'
   815  00FFB6  61                 	db	97	;'a'
   816  00FFB7  72                 	db	114	;'r'
   817  00FFB8  64                 	db	100	;'d'
   818  00FFB9  73                 	db	115	;'s'
   819  00FFBA  00                 	db	0
   820  00FFBB                     STR_55:
   821  00FFBB  64                 	db	100	;'d'
   822  00FFBC  6F                 	db	111	;'o'
   823  00FFBD  6E                 	db	110	;'n'
   824  00FFBE  65                 	db	101	;'e'
   825  00FFBF  20                 	db	32
   826  00FFC0  77                 	db	119	;'w'
   827  00FFC1  61                 	db	97	;'a'
   828  00FFC2  69                 	db	105	;'i'
   829  00FFC3  74                 	db	116	;'t'
   830  00FFC4  00                 	db	0
   831  00FFC5                     STR_23:
   832  00FFC5  31                 	db	49	;'1'
   833  00FFC6  20                 	db	32
   834  00FFC7  2D                 	db	45
   835  00FFC8  20                 	db	32
   836  00FFC9  53                 	db	83	;'S'
   837  00FFCA  74                 	db	116	;'t'
   838  00FFCB  61                 	db	97	;'a'
   839  00FFCC  72                 	db	114	;'r'
   840  00FFCD  74                 	db	116	;'t'
   841  00FFCE  00                 	db	0
   842  00FFCF                     STR_5:
   843  00FFCF  73                 	db	115	;'s'
   844  00FFD0  74                 	db	116	;'t'
   845  00FFD1  65                 	db	101	;'e'
   846  00FFD2  70                 	db	112	;'p'
   847  00FFD3  70                 	db	112	;'p'
   848  00FFD4  70                 	db	112	;'p'
   849  00FFD5  20                 	db	32
   850  00FFD6  25                 	db	37
   851  00FFD7  64                 	db	100	;'d'
   852  00FFD8  00                 	db	0
   853  00FFD9                     STR_1:
   854  00FFD9  63                 	db	99	;'c'
   855  00FFDA  6E                 	db	110	;'n'
   856  00FFDB  74                 	db	116	;'t'
   857  00FFDC  20                 	db	32
   858  00FFDD  69                 	db	105	;'i'
   859  00FFDE  73                 	db	115	;'s'
   860  00FFDF  20                 	db	32
   861  00FFE0  25                 	db	37
   862  00FFE1  64                 	db	100	;'d'
   863  00FFE2  00                 	db	0
   864  00FFE3                     STR_31:
   865  00FFE3  4F                 	db	79	;'O'
   866  00FFE4  70                 	db	112	;'p'
   867  00FFE5  20                 	db	32
   868  00FFE6  54                 	db	84	;'T'
   869  00FFE7  69                 	db	105	;'i'
   870  00FFE8  6D                 	db	109	;'m'
   871  00FFE9  65                 	db	101	;'e'
   872  00FFEA  3A                 	db	58	;':'
   873  00FFEB  00                 	db	0
   874  00FFEC                     STR_18:
   875  00FFEC  6F                 	db	111	;'o'
   876  00FFED  72                 	db	114	;'r'
   877  00FFEE  20                 	db	32
   878  00FFEF  68                 	db	104	;'h'
   879  00FFF0  65                 	db	101	;'e'
   880  00FFF1  72                 	db	114	;'r'
   881  00FFF2  65                 	db	101	;'e'
   882  00FFF3  00                 	db	0
   883  00FFF4                     STR_6:
   884  00FFF4  73                 	db	115	;'s'
   885  00FFF5  74                 	db	116	;'t'
   886  00FFF6  65                 	db	101	;'e'
   887  00FFF7  70                 	db	112	;'p'
   888  00FFF8  31                 	db	49	;'1'
   889  00FFF9  00                 	db	0
   890  00FFFA                     STR_9:
   891  00FFFA  77                 	db	119	;'w'
   892  00FFFB  68                 	db	104	;'h'
   893  00FFFC  61                 	db	97	;'a'
   894  00FFFD  74                 	db	116	;'t'
   895  00FFFE  00                 	db	0
   896  0000                     
   897                           ; #config settings
   898  00FFFF  00                 	db	0	; dummy byte at the end
   899  0000                     
   900                           	psect	cinit
   901  003B3C                     __pcinit:
   902                           	opt callstack 0
   903  003B3C                     start_initialization:
   904                           	opt callstack 0
   905  003B3C                     __initialization:
   906                           	opt callstack 0
   907                           
   908                           ; Initialize objects allocated to COMRAM (5 bytes)
   909                           ; load TBLPTR registers with __pidataCOMRAM
   910  003B3C  0EF6               	movlw	low __pidataCOMRAM
   911  003B3E  6EF6               	movwf	tblptrl,c
   912  003B40  0E3F               	movlw	high __pidataCOMRAM
   913  003B42  6EF7               	movwf	tblptrh,c
   914  003B44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   915  003B46  6EF8               	movwf	tblptru,c
   916  003B48  EE00  F069         	lfsr	0,__pdataCOMRAM
   917  003B4C  EE10 F005          	lfsr	1,5
   918  003B50                     copy_data0:
   919  003B50  0009               	tblrd		*+
   920  003B52  CFF5 FFEE          	movff	tablat,postinc0
   921  003B56  50E5               	movf	postdec1,w,c
   922  003B58  50E1               	movf	fsr1l,w,c
   923  003B5A  E1FA               	bnz	copy_data0
   924                           
   925                           ; Clear objects allocated to BANK2 (160 bytes)
   926  003B5C  EE02  F000         	lfsr	0,__pbssBANK2
   927  003B60  0EA0               	movlw	160
   928  003B62                     clear_0:
   929  003B62  6AEE               	clrf	postinc0,c
   930  003B64  06E8               	decf	wreg,f,c
   931  003B66  E1FD               	bnz	clear_0
   932                           
   933                           ; Clear objects allocated to BANK1 (30 bytes)
   934  003B68  EE01  F0D9         	lfsr	0,__pbssBANK1
   935  003B6C  0E1E               	movlw	30
   936  003B6E                     clear_1:
   937  003B6E  6AEE               	clrf	postinc0,c
   938  003B70  06E8               	decf	wreg,f,c
   939  003B72  E1FD               	bnz	clear_1
   940                           
   941                           ; Clear objects allocated to BANK0 (1 bytes)
   942  003B74  0100               	movlb	0
   943  003B76  6BFF               	clrf	__pbssBANK0& (0+255),b
   944                           
   945                           ; Clear objects allocated to COMRAM (49 bytes)
   946  003B78  EE00  F038         	lfsr	0,__pbssCOMRAM
   947  003B7C  0E31               	movlw	49
   948  003B7E                     clear_2:
   949  003B7E  6AEE               	clrf	postinc0,c
   950  003B80  06E8               	decf	wreg,f,c
   951  003B82  E1FD               	bnz	clear_2
   952  003B84                     end_of_initialization:
   953                           	opt callstack 0
   954  003B84                     __end_of__initialization:
   955                           	opt callstack 0
   956  003B84  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   957  003B86  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   958  003B88  0E00               	movlw	low (__Lmediumconst shr (0+16))
   959  003B8A  6EF8               	movwf	tblptru,c
   960  003B8C  0100               	movlb	0
   961  003B8E  EF13  F004         	goto	_main	;jump to C main() function
   962                           
   963                           	psect	bssCOMRAM
   964  000038                     __pbssCOMRAM:
   965                           	opt callstack 0
   966  000038                     _sum:
   967                           	opt callstack 0
   968  000038                     	ds	8
   969  000040                     _sumf:
   970                           	opt callstack 0
   971  000040                     	ds	4
   972  000044                     _avg_dist:
   973                           	opt callstack 0
   974  000044                     	ds	4
   975  000048                     _nout:
   976                           	opt callstack 0
   977  000048                     	ds	2
   978  00004A                     _width:
   979                           	opt callstack 0
   980  00004A                     	ds	2
   981  00004C                     _prec:
   982                           	opt callstack 0
   983  00004C                     	ds	2
   984  00004E                     _flags:
   985                           	opt callstack 0
   986  00004E                     	ds	2
   987  000050                     _meas:
   988                           	opt callstack 0
   989  000050                     	ds	2
   990  000052                     _poles_detected:
   991                           	opt callstack 0
   992  000052                     	ds	2
   993  000054                     _tires_deployed:
   994                           	opt callstack 0
   995  000054                     	ds	2
   996  000056                     _tick:
   997                           	opt callstack 0
   998  000056                     	ds	2
   999  000058                     _sens:
  1000                           	opt callstack 0
  1001  000058                     	ds	2
  1002  00005A                     _b:
  1003                           	opt callstack 0
  1004  00005A                     	ds	2
  1005  00005C                     _timer_count:
  1006                           	opt callstack 0
  1007  00005C                     	ds	2
  1008  00005E                     _data:
  1009                           	opt callstack 0
  1010  00005E                     	ds	1
  1011  00005F                     _keypress:
  1012                           	opt callstack 0
  1013  00005F                     	ds	1
  1014  000060                     _counter:
  1015                           	opt callstack 0
  1016  000060                     	ds	1
  1017  000061                     _a:
  1018                           	opt callstack 0
  1019  000061                     	ds	8
  1020                           
  1021                           	psect	dataCOMRAM
  1022  000069                     __pdataCOMRAM:
  1023                           	opt callstack 0
  1024  000069                     _dists:
  1025                           	opt callstack 0
  1026  000069                     	ds	4
  1027  00006D                     _send:
  1028                           	opt callstack 0
  1029  00006D                     	ds	1
  1030                           
  1031                           	psect	bssBANK0
  1032  0000FF                     __pbssBANK0:
  1033                           	opt callstack 0
  1034  0000FF                     _temp:
  1035                           	opt callstack 0
  1036  0000FF                     	ds	1
  1037                           
  1038                           	psect	bssBANK1
  1039  0001D9                     __pbssBANK1:
  1040                           	opt callstack 0
  1041  0001D9                     _prev_dist_final:
  1042                           	opt callstack 0
  1043  0001D9                     	ds	8
  1044  0001E1                     _time:
  1045                           	opt callstack 0
  1046  0001E1                     	ds	7
  1047  0001E8                     _opTime:
  1048                           	opt callstack 0
  1049  0001E8                     	ds	2
  1050  0001EA                     _pressed:
  1051                           	opt callstack 0
  1052  0001EA                     	ds	2
  1053  0001EC                     _i:
  1054                           	opt callstack 0
  1055  0001EC                     	ds	2
  1056  0001EE                     _disp:
  1057                           	opt callstack 0
  1058  0001EE                     	ds	2
  1059  0001F0                     _state:
  1060                           	opt callstack 0
  1061  0001F0                     	ds	2
  1062  0001F2                     _temp_int:
  1063                           	opt callstack 0
  1064  0001F2                     	ds	2
  1065  0001F4                     _cnt:
  1066                           	opt callstack 0
  1067  0001F4                     	ds	2
  1068  0001F6                     _key_was_pressed:
  1069                           	opt callstack 0
  1070  0001F6                     	ds	1
  1071                           
  1072                           	psect	bssBANK2
  1073  000200                     __pbssBANK2:
  1074                           	opt callstack 0
  1075  000200                     _Pole:
  1076                           	opt callstack 0
  1077  000200                     	ds	80
  1078  000250                     _dist_final:
  1079                           	opt callstack 0
  1080  000250                     	ds	48
  1081  000280                     _dbuf:
  1082                           	opt callstack 0
  1083  000280                     	ds	32
  1084                           
  1085                           	psect	cstackBANK1
  1086  000100                     __pcstackBANK1:
  1087                           	opt callstack 0
  1088  000100                     ??_ultrasonic_main:
  1089  000100                     ??_UI_main:
  1090  000100                     ?_number_deploy:
  1091                           	opt callstack 0
  1092  000100                     stepper@stack:
  1093                           	opt callstack 0
  1094  000100                     stepper2@steps2_adj:
  1095                           	opt callstack 0
  1096  000100                     stepper2_back@steps2_adj:
  1097                           	opt callstack 0
  1098  000100                     number_deploy@avg_dist:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x0
  1102  000100                     	ds	2
  1103  000102                     ??_stepper2:
  1104  000102                     ??_stepper2_back:
  1105  000102                     stepper@t_dep:
  1106                           	opt callstack 0
  1107  000102                     number_deploy@poles_detected:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x2
  1111  000102                     	ds	1
  1112  000103                     stepper2_back@direction:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x3
  1116  000103                     	ds	1
  1117  000104                     ??_stepper:
  1118  000104                     stepper2_back@count_stepper:
  1119                           	opt callstack 0
  1120  000104                     ultrasonic_main@sensed:
  1121                           	opt callstack 0
  1122  000104                     number_deploy@tires_detected:
  1123                           	opt callstack 0
  1124  000104                     UI_main@Pole:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 80 bytes @ 0x4
  1128  000104                     	ds	2
  1129  000106                     stepper2_back@i:
  1130                           	opt callstack 0
  1131  000106                     ultrasonic_main@step2_offset:
  1132                           	opt callstack 0
  1133  000106                     number_deploy@tires_t:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x6
  1137  000106                     	ds	1
  1138  000107                     stepper2@i:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x7
  1142  000107                     	ds	1
  1143  000108                     stepper@count_stepper:
  1144                           	opt callstack 0
  1145  000108                     ultrasonic_main@steps2_adj:
  1146                           	opt callstack 0
  1147  000108                     number_deploy@t_count:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x8
  1151  000108                     	ds	1
  1152  000109                     stepper2@i_489:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x9
  1156  000109                     	ds	1
  1157  00010A                     stepper@i:
  1158                           	opt callstack 0
  1159  00010A                     ultrasonic_main@min_us_dist_969:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0xA
  1163  00010A                     	ds	1
  1164  00010B                     stepper2@count_stepper:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 2 bytes @ 0xB
  1168  00010B                     	ds	1
  1169  00010C                     stepper@i_479:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 2 bytes @ 0xC
  1173  00010C                     	ds	1
  1174  00010D                     stepper2@direction:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 1 bytes @ 0xD
  1178  00010D                     	ds	1
  1179  00010E                     stepper@i_480:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 2 bytes @ 0xE
  1183  00010E                     	ds	2
  1184  000110                     stepper@i_481:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x10
  1188  000110                     	ds	2
  1189  000112                     actuators_main@stack:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x12
  1193  000112                     	ds	2
  1194  000114                     actuators_main@steps2_adj:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x14
  1198  000114                     	ds	2
  1199  000116                     actuators_main@t_dep:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x16
  1203  000116                     	ds	2
  1204  000118                     ??_actuators_main:
  1205                           
  1206                           ; 1 bytes @ 0x18
  1207  000118                     	ds	2
  1208  00011A                     actuators_main@act_cnt:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x1A
  1212  00011A                     	ds	58
  1213  000154                     UI_main@keypress:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x54
  1217  000154                     	ds	1
  1218  000155                     UI_main@tick:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x55
  1222  000155                     	ds	4
  1223  000159                     UI_main@i:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x59
  1227  000159                     	ds	1
  1228  00015A                     ??_main:
  1229                           
  1230                           ; 1 bytes @ 0x5A
  1231  00015A                     	ds	6
  1232  000160                     main@pole_cl_dist:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x60
  1236  000160                     	ds	2
  1237  000162                     main@Pole:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 80 bytes @ 0x62
  1241  000162                     	ds	80
  1242  0001B2                     main@i:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 2 bytes @ 0xB2
  1246  0001B2                     	ds	2
  1247  0001B4                     main@i_1084:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 2 bytes @ 0xB4
  1251  0001B4                     	ds	2
  1252  0001B6                     _main$1073:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 1 bytes @ 0xB6
  1256  0001B6                     	ds	1
  1257  0001B7                     _main$1074:
  1258                           	opt callstack 0
  1259                           
  1260                           ; 1 bytes @ 0xB7
  1261  0001B7                     	ds	1
  1262  0001B8                     _main$1075:
  1263                           	opt callstack 0
  1264                           
  1265                           ; 1 bytes @ 0xB8
  1266  0001B8                     	ds	1
  1267  0001B9                     main@act_done:
  1268                           	opt callstack 0
  1269                           
  1270                           ; 1 bytes @ 0xB9
  1271  0001B9                     	ds	1
  1272  0001BA                     main@arduino_stopped:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 1 bytes @ 0xBA
  1276  0001BA                     	ds	1
  1277  0001BB                     main@stack:
  1278                           	opt callstack 0
  1279                           
  1280                           ; 2 bytes @ 0xBB
  1281  0001BB                     	ds	2
  1282  0001BD                     main@steps2_adj:
  1283                           	opt callstack 0
  1284                           
  1285                           ; 2 bytes @ 0xBD
  1286  0001BD                     	ds	2
  1287  0001BF                     main@k:
  1288                           	opt callstack 0
  1289                           
  1290                           ; 2 bytes @ 0xBF
  1291  0001BF                     	ds	2
  1292  0001C1                     main@t_count:
  1293                           	opt callstack 0
  1294                           
  1295                           ; 2 bytes @ 0xC1
  1296  0001C1                     	ds	2
  1297  0001C3                     main@data_g:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 2 bytes @ 0xC3
  1301  0001C3                     	ds	2
  1302  0001C5                     main@t_dep:
  1303                           	opt callstack 0
  1304                           
  1305                           ; 2 bytes @ 0xC5
  1306  0001C5                     	ds	2
  1307  0001C7                     main@i_1092:
  1308                           	opt callstack 0
  1309                           
  1310                           ; 2 bytes @ 0xC7
  1311  0001C7                     	ds	2
  1312  0001C9                     main@t_det:
  1313                           	opt callstack 0
  1314                           
  1315                           ; 2 bytes @ 0xC9
  1316  0001C9                     	ds	2
  1317  0001CB                     main@prev_avg_dist:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 4 bytes @ 0xCB
  1321  0001CB                     	ds	4
  1322  0001CF                     main@poles_detected:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0xCF
  1326  0001CF                     	ds	2
  1327  0001D1                     main@data:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 8 bytes @ 0xD1
  1331  0001D1                     	ds	8
  1332                           
  1333                           	psect	cstackBANK0
  1334  000080                     __pcstackBANK0:
  1335                           	opt callstack 0
  1336  000080                     ??_I2C_Master_Wait:
  1337  000080                     ??_trig:
  1338  000080                     ?_strlen:
  1339                           	opt callstack 0
  1340  000080                     ?_isupper:
  1341                           	opt callstack 0
  1342  000080                     ?_isalpha:
  1343                           	opt callstack 0
  1344  000080                     ?_isdigit:
  1345                           	opt callstack 0
  1346  000080                     ?_isspace:
  1347                           	opt callstack 0
  1348  000080                     ?_islower:
  1349                           	opt callstack 0
  1350  000080                     ?_min:
  1351                           	opt callstack 0
  1352  000080                     ?___wmul:
  1353                           	opt callstack 0
  1354  000080                     ?___awdiv:
  1355                           	opt callstack 0
  1356  000080                     ?___lldiv:
  1357                           	opt callstack 0
  1358  000080                     ?___llmod:
  1359                           	opt callstack 0
  1360  000080                     ?___aodiv:
  1361                           	opt callstack 0
  1362  000080                     ?___aomod:
  1363                           	opt callstack 0
  1364  000080                     pulse_e@interruptState:
  1365                           	opt callstack 0
  1366  000080                     servoRotate0@servo:
  1367                           	opt callstack 0
  1368  000080                     servoRotate180@servo:
  1369                           	opt callstack 0
  1370  000080                     min@array:
  1371                           	opt callstack 0
  1372  000080                     ___wmul@multiplier:
  1373                           	opt callstack 0
  1374  000080                     ___awdiv@dividend:
  1375                           	opt callstack 0
  1376  000080                     isalpha@c:
  1377                           	opt callstack 0
  1378  000080                     isdigit@c:
  1379                           	opt callstack 0
  1380  000080                     isspace@c:
  1381                           	opt callstack 0
  1382  000080                     isupper@c:
  1383                           	opt callstack 0
  1384  000080                     strlen@s:
  1385                           	opt callstack 0
  1386  000080                     islower@c:
  1387                           	opt callstack 0
  1388  000080                     ___lldiv@dividend:
  1389                           	opt callstack 0
  1390  000080                     ___llmod@dividend:
  1391                           	opt callstack 0
  1392  000080                     ___aodiv@dividend:
  1393                           	opt callstack 0
  1394  000080                     ___aomod@dividend:
  1395                           	opt callstack 0
  1396                           
  1397                           ; 8 bytes @ 0x0
  1398  000080                     	ds	1
  1399  000081                     I2C_Master_Read@ackBit:
  1400                           	opt callstack 0
  1401  000081                     send_nibble@data:
  1402                           	opt callstack 0
  1403  000081                     I2C_Master_Write@byteToWrite:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x1
  1407  000081                     	ds	1
  1408  000082                     ??_isupper:
  1409  000082                     ??_isalpha:
  1410  000082                     ??_isdigit:
  1411  000082                     ??_isspace:
  1412  000082                     ??_islower:
  1413  000082                     ??_servoRotate0:
  1414  000082                     ??_servoRotate180:
  1415  000082                     I2C_Master_Read@receivedByte:
  1416                           	opt callstack 0
  1417  000082                     send_byte@data:
  1418                           	opt callstack 0
  1419  000082                     min@size:
  1420                           	opt callstack 0
  1421  000082                     ___wmul@multiplicand:
  1422                           	opt callstack 0
  1423  000082                     ___awdiv@divisor:
  1424                           	opt callstack 0
  1425  000082                     strlen@a:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x2
  1429  000082                     	ds	1
  1430  000083                     lcdInst@data:
  1431                           	opt callstack 0
  1432  000083                     putch@data:
  1433                           	opt callstack 0
  1434  000083                     servoRotate0@i:
  1435                           	opt callstack 0
  1436  000083                     servoRotate180@i:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x3
  1440  000083                     	ds	1
  1441  000084                     ??_initLCD:
  1442  000084                     ??_min:
  1443  000084                     ___awdiv@counter:
  1444                           	opt callstack 0
  1445  000084                     ___wmul@product:
  1446                           	opt callstack 0
  1447  000084                     fputc@c:
  1448                           	opt callstack 0
  1449  000084                     ___lldiv@divisor:
  1450                           	opt callstack 0
  1451  000084                     ___llmod@divisor:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 4 bytes @ 0x4
  1455  000084                     	ds	1
  1456  000085                     ??_servo:
  1457  000085                     ___awdiv@sign:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x5
  1461  000085                     	ds	1
  1462  000086                     ?_toupper:
  1463                           	opt callstack 0
  1464  000086                     _isspace$1748:
  1465                           	opt callstack 0
  1466  000086                     ___awdiv@quotient:
  1467                           	opt callstack 0
  1468  000086                     fputc@fp:
  1469                           	opt callstack 0
  1470  000086                     toupper@c:
  1471                           	opt callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x6
  1474  000086                     	ds	1
  1475  000087                     ?_atoi:
  1476                           	opt callstack 0
  1477  000087                     min@minimum:
  1478                           	opt callstack 0
  1479  000087                     atoi@s:
  1480                           	opt callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x7
  1483  000087                     	ds	1
  1484  000088                     ??_fputc:
  1485  000088                     ??_toupper:
  1486  000088                     ___llmod@counter:
  1487                           	opt callstack 0
  1488  000088                     ___lldiv@quotient:
  1489                           	opt callstack 0
  1490  000088                     ___aodiv@divisor:
  1491                           	opt callstack 0
  1492  000088                     ___aomod@divisor:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 8 bytes @ 0x8
  1496  000088                     	ds	1
  1497  000089                     ??_atoi:
  1498  000089                     min@i:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x9
  1502  000089                     	ds	3
  1503  00008C                     ___lldiv@counter:
  1504                           	opt callstack 0
  1505  00008C                     _toupper$1813:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 2 bytes @ 0xC
  1509  00008C                     	ds	1
  1510  00008D                     atoi@neg:
  1511                           	opt callstack 0
  1512  00008D                     fputs@s:
  1513                           	opt callstack 0
  1514  00008D                     I2C_Master_Init@clockFreq:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 4 bytes @ 0xD
  1518  00008D                     	ds	2
  1519  00008F                     _atoi$1721:
  1520                           	opt callstack 0
  1521  00008F                     fputs@fp:
  1522                           	opt callstack 0
  1523                           
  1524                           ; 2 bytes @ 0xF
  1525  00008F                     	ds	1
  1526  000090                     ___aodiv@counter:
  1527                           	opt callstack 0
  1528  000090                     ___aomod@counter:
  1529                           	opt callstack 0
  1530                           
  1531                           ; 1 bytes @ 0x10
  1532  000090                     	ds	1
  1533  000091                     ??_I2C_Master_Init:
  1534  000091                     ___aodiv@sign:
  1535                           	opt callstack 0
  1536  000091                     ___aomod@sign:
  1537                           	opt callstack 0
  1538  000091                     fputs@c:
  1539                           	opt callstack 0
  1540  000091                     _atoi$1723:
  1541                           	opt callstack 0
  1542                           
  1543                           ; 2 bytes @ 0x11
  1544  000091                     	ds	1
  1545  000092                     ?_abs:
  1546                           	opt callstack 0
  1547  000092                     abs@a:
  1548                           	opt callstack 0
  1549  000092                     fputs@i:
  1550                           	opt callstack 0
  1551  000092                     ___aodiv@quotient:
  1552                           	opt callstack 0
  1553                           
  1554                           ; 8 bytes @ 0x12
  1555  000092                     	ds	1
  1556  000093                     _atoi$1722:
  1557                           	opt callstack 0
  1558                           
  1559                           ; 1 bytes @ 0x13
  1560  000093                     	ds	1
  1561  000094                     ??_abs:
  1562  000094                     ?_pad:
  1563                           	opt callstack 0
  1564  000094                     pad@fp:
  1565                           	opt callstack 0
  1566  000094                     atoi@n:
  1567                           	opt callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x14
  1570  000094                     	ds	1
  1571  000095                     
  1572                           ; 1 bytes @ 0x15
  1573  000095                     	ds	1
  1574  000096                     pad@buf:
  1575                           	opt callstack 0
  1576                           
  1577                           ; 2 bytes @ 0x16
  1578  000096                     	ds	2
  1579  000098                     pad@p:
  1580                           	opt callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x18
  1583  000098                     	ds	2
  1584  00009A                     ??_pad:
  1585                           
  1586                           ; 1 bytes @ 0x1A
  1587  00009A                     	ds	1
  1588  00009B                     pad@i:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x1B
  1592  00009B                     	ds	2
  1593  00009D                     pad@w:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 2 bytes @ 0x1D
  1597  00009D                     	ds	2
  1598  00009F                     ?_dtoa:
  1599                           	opt callstack 0
  1600  00009F                     ?_xtoa:
  1601                           	opt callstack 0
  1602  00009F                     dtoa@fp:
  1603                           	opt callstack 0
  1604  00009F                     xtoa@fp:
  1605                           	opt callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x1F
  1608  00009F                     	ds	2
  1609  0000A1                     dtoa@d:
  1610                           	opt callstack 0
  1611  0000A1                     xtoa@d:
  1612                           	opt callstack 0
  1613                           
  1614                           ; 8 bytes @ 0x21
  1615  0000A1                     	ds	8
  1616  0000A9                     ??_dtoa:
  1617  0000A9                     xtoa@x:
  1618                           	opt callstack 0
  1619                           
  1620                           ; 1 bytes @ 0x29
  1621  0000A9                     	ds	1
  1622  0000AA                     ??_xtoa:
  1623                           
  1624                           ; 1 bytes @ 0x2A
  1625  0000AA                     	ds	7
  1626  0000B1                     _dtoa$1237:
  1627                           	opt callstack 0
  1628                           
  1629                           ; 2 bytes @ 0x31
  1630  0000B1                     	ds	1
  1631  0000B2                     _xtoa$1248:
  1632                           	opt callstack 0
  1633                           
  1634                           ; 2 bytes @ 0x32
  1635  0000B2                     	ds	1
  1636  0000B3                     dtoa@p:
  1637                           	opt callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x33
  1640  0000B3                     	ds	1
  1641  0000B4                     _xtoa$1249:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x34
  1645  0000B4                     	ds	1
  1646  0000B5                     dtoa@w:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x35
  1650  0000B5                     	ds	1
  1651  0000B6                     xtoa@p:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x36
  1655  0000B6                     	ds	1
  1656  0000B7                     dtoa@s:
  1657                           	opt callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x37
  1660  0000B7                     	ds	1
  1661  0000B8                     xtoa@w:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x38
  1665  0000B8                     	ds	1
  1666  0000B9                     dtoa@n:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 8 bytes @ 0x39
  1670  0000B9                     	ds	1
  1671  0000BA                     xtoa@n:
  1672                           	opt callstack 0
  1673                           
  1674                           ; 8 bytes @ 0x3A
  1675  0000BA                     	ds	7
  1676  0000C1                     dtoa@i:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x41
  1680  0000C1                     	ds	1
  1681  0000C2                     xtoa@i:
  1682                           	opt callstack 0
  1683                           
  1684                           ; 2 bytes @ 0x42
  1685  0000C2                     	ds	2
  1686  0000C4                     xtoa@c:
  1687                           	opt callstack 0
  1688                           
  1689                           ; 2 bytes @ 0x44
  1690  0000C4                     	ds	2
  1691  0000C6                     ?_vfpfcnvrt:
  1692                           	opt callstack 0
  1693  0000C6                     vfpfcnvrt@fp:
  1694                           	opt callstack 0
  1695                           
  1696                           ; 2 bytes @ 0x46
  1697  0000C6                     	ds	2
  1698  0000C8                     vfpfcnvrt@fmt:
  1699                           	opt callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x48
  1702  0000C8                     	ds	2
  1703  0000CA                     vfpfcnvrt@ap:
  1704                           	opt callstack 0
  1705                           
  1706                           ; 2 bytes @ 0x4A
  1707  0000CA                     	ds	2
  1708  0000CC                     ??_vfpfcnvrt:
  1709                           
  1710                           ; 1 bytes @ 0x4C
  1711  0000CC                     	ds	4
  1712  0000D0                     vfpfcnvrt@ll:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 8 bytes @ 0x50
  1716  0000D0                     	ds	8
  1717  0000D8                     vfpfcnvrt@llu:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 8 bytes @ 0x58
  1721  0000D8                     	ds	8
  1722  0000E0                     vfpfcnvrt@c:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 1 bytes @ 0x60
  1726  0000E0                     	ds	1
  1727  0000E1                     vfpfcnvrt@done:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x61
  1731  0000E1                     	ds	2
  1732  0000E3                     _vfpfcnvrt$1263:
  1733                           	opt callstack 0
  1734                           
  1735                           ; 2 bytes @ 0x63
  1736  0000E3                     	ds	2
  1737  0000E5                     ?_vfprintf:
  1738                           	opt callstack 0
  1739  0000E5                     vfprintf@fp:
  1740                           	opt callstack 0
  1741                           
  1742                           ; 2 bytes @ 0x65
  1743  0000E5                     	ds	2
  1744  0000E7                     vfprintf@fmt:
  1745                           	opt callstack 0
  1746                           
  1747                           ; 2 bytes @ 0x67
  1748  0000E7                     	ds	2
  1749  0000E9                     vfprintf@ap:
  1750                           	opt callstack 0
  1751                           
  1752                           ; 2 bytes @ 0x69
  1753  0000E9                     	ds	2
  1754  0000EB                     vfprintf@cfmt:
  1755                           	opt callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x6B
  1758  0000EB                     	ds	2
  1759  0000ED                     ?_printf:
  1760                           	opt callstack 0
  1761  0000ED                     printf@fmt:
  1762                           	opt callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x6D
  1765  0000ED                     	ds	10
  1766  0000F7                     
  1767                           ; 1 bytes @ 0x77
  1768  0000F7                     	ds	2
  1769  0000F9                     printf@ap:
  1770                           	opt callstack 0
  1771                           
  1772                           ; 2 bytes @ 0x79
  1773  0000F9                     	ds	2
  1774  0000FB                     ??_brake:
  1775  0000FB                     ??_print_echo:
  1776  0000FB                     ??_number_deploy:
  1777  0000FB                     full_drive@stepper_no:
  1778                           	opt callstack 0
  1779  0000FB                     UI_main@t_dep:
  1780                           	opt callstack 0
  1781                           
  1782                           ; 2 bytes @ 0x7B
  1783  0000FB                     	ds	1
  1784  0000FC                     ?_ultrasonic_main:
  1785                           	opt callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x7C
  1788  0000FC                     	ds	1
  1789  0000FD                     ??_full_drive:
  1790  0000FD                     UI_main@poles_detected:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 2 bytes @ 0x7D
  1794  0000FD                     	ds	1
  1795  0000FE                     full_drive@direction:
  1796                           	opt callstack 0
  1797                           
  1798                           ; 1 bytes @ 0x7E
  1799  0000FE                     	ds	1
  1800                           
  1801                           	psect	cstackCOMRAM
  1802  000001                     __pcstackCOMRAM:
  1803                           	opt callstack 0
  1804  000001                     ?i2___awdiv:
  1805                           	opt callstack 0
  1806  000001                     ?___xxtofl:
  1807                           	opt callstack 0
  1808  000001                     i2___awdiv@dividend:
  1809                           	opt callstack 0
  1810  000001                     ___xxtofl@val:
  1811                           	opt callstack 0
  1812                           
  1813                           ; 4 bytes @ 0x0
  1814  000001                     	ds	2
  1815  000003                     i2___awdiv@divisor:
  1816                           	opt callstack 0
  1817                           
  1818                           ; 2 bytes @ 0x2
  1819  000003                     	ds	2
  1820  000005                     ??___xxtofl:
  1821  000005                     i2___awdiv@counter:
  1822                           	opt callstack 0
  1823                           
  1824                           ; 1 bytes @ 0x4
  1825  000005                     	ds	1
  1826  000006                     i2___awdiv@sign:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 1 bytes @ 0x5
  1830  000006                     	ds	1
  1831  000007                     i2___awdiv@quotient:
  1832                           	opt callstack 0
  1833                           
  1834                           ; 2 bytes @ 0x6
  1835  000007                     	ds	2
  1836  000009                     ___xxtofl@sign:
  1837                           	opt callstack 0
  1838                           
  1839                           ; 1 bytes @ 0x8
  1840  000009                     	ds	1
  1841  00000A                     ___xxtofl@exp:
  1842                           	opt callstack 0
  1843                           
  1844                           ; 1 bytes @ 0x9
  1845  00000A                     	ds	1
  1846  00000B                     ___xxtofl@arg:
  1847                           	opt callstack 0
  1848                           
  1849                           ; 4 bytes @ 0xA
  1850  00000B                     	ds	4
  1851  00000F                     ?___fldiv:
  1852                           	opt callstack 0
  1853  00000F                     ___fldiv@b:
  1854                           	opt callstack 0
  1855                           
  1856                           ; 4 bytes @ 0xE
  1857  00000F                     	ds	4
  1858  000013                     ___fldiv@a:
  1859                           	opt callstack 0
  1860                           
  1861                           ; 4 bytes @ 0x12
  1862  000013                     	ds	4
  1863  000017                     ??___fldiv:
  1864                           
  1865                           ; 1 bytes @ 0x16
  1866  000017                     	ds	4
  1867  00001B                     ___fldiv@rem:
  1868                           	opt callstack 0
  1869                           
  1870                           ; 4 bytes @ 0x1A
  1871  00001B                     	ds	4
  1872  00001F                     ___fldiv@sign:
  1873                           	opt callstack 0
  1874                           
  1875                           ; 1 bytes @ 0x1E
  1876  00001F                     	ds	1
  1877  000020                     ___fldiv@new_exp:
  1878                           	opt callstack 0
  1879                           
  1880                           ; 2 bytes @ 0x1F
  1881  000020                     	ds	2
  1882  000022                     ___fldiv@grs:
  1883                           	opt callstack 0
  1884                           
  1885                           ; 4 bytes @ 0x21
  1886  000022                     	ds	4
  1887  000026                     ___fldiv@bexp:
  1888                           	opt callstack 0
  1889                           
  1890                           ; 1 bytes @ 0x25
  1891  000026                     	ds	1
  1892  000027                     ___fldiv@aexp:
  1893                           	opt callstack 0
  1894                           
  1895                           ; 1 bytes @ 0x26
  1896  000027                     	ds	1
  1897  000028                     ?___fltol:
  1898                           	opt callstack 0
  1899  000028                     ___fltol@f1:
  1900                           	opt callstack 0
  1901                           
  1902                           ; 4 bytes @ 0x27
  1903  000028                     	ds	4
  1904  00002C                     ??___fltol:
  1905                           
  1906                           ; 1 bytes @ 0x2B
  1907  00002C                     	ds	4
  1908  000030                     ___fltol@sign1:
  1909                           	opt callstack 0
  1910                           
  1911                           ; 1 bytes @ 0x2F
  1912  000030                     	ds	1
  1913  000031                     ___fltol@exp1:
  1914                           	opt callstack 0
  1915                           
  1916                           ; 1 bytes @ 0x30
  1917  000031                     	ds	1
  1918  000032                     ??_echo:
  1919                           
  1920                           ; 1 bytes @ 0x31
  1921  000032                     	ds	4
  1922  000036                     ??_ISR:
  1923                           
  1924                           ; 1 bytes @ 0x35
  1925  000036                     	ds	2
  1926                           
  1927 ;;
  1928 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1929 ;;
  1930 ;; *************** function _main *****************
  1931 ;; Defined at:
  1932 ;;		line 722 in file "main.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  k               2  191[BANK1 ] int 
  1937 ;;  i               2  180[BANK1 ] int 
  1938 ;;  i               2  178[BANK1 ] int 
  1939 ;;  i               2  199[BANK1 ] int 
  1940 ;;  pole_cl_dist    2   96[BANK1 ] int 
  1941 ;;  Pole           80   98[BANK1 ] struct Poles[10]
  1942 ;;  data            8  209[BANK1 ] volatile int [4]
  1943 ;;  prev_avg_dis    4  203[BANK1 ] volatile long 
  1944 ;;  poles_detect    2  207[BANK1 ] int 
  1945 ;;  t_dep           2  197[BANK1 ] int 
  1946 ;;  data_g          2  195[BANK1 ] unsigned int 
  1947 ;;  t_count         2  193[BANK1 ] int 
  1948 ;;  steps2_adj      2  189[BANK1 ] int 
  1949 ;;  stack           2  187[BANK1 ] int 
  1950 ;;  t_det           2  201[BANK1 ] volatile int 
  1951 ;;  read            2    0        int 
  1952 ;;  arduino_stop    1  186[BANK1 ] _Bool 
  1953 ;;  act_done        1  185[BANK1 ] _Bool 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Locals:         0       0     123       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Totals:         0       0     127       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;Total ram usage:      127 bytes
  1968 ;; Hardware stack levels required when called:   17
  1969 ;; This function calls:
  1970 ;;		_I2C_Master_Read
  1971 ;;		_I2C_Master_RepeatedStart
  1972 ;;		_I2C_Master_Stop
  1973 ;;		_I2C_Master_Write
  1974 ;;		_UI_main
  1975 ;;		___wmul
  1976 ;;		_actuators_main
  1977 ;;		_backwards
  1978 ;;		_brake
  1979 ;;		_initLCD
  1980 ;;		_lcdInst
  1981 ;;		_number_deploy
  1982 ;;		_printf
  1983 ;;		_start
  1984 ;;		_ultrasonic_main
  1985 ;; This function is called by:
  1986 ;;		Startup code after reset
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text0
  1991  000826                     __ptext0:
  1992                           	opt callstack 0
  1993  000826                     _main:
  1994                           	opt callstack 14
  1995                           
  1996                           ;main.c: 724:     int t_dep=0;
  1997                           
  1998                           ;incstack = 0
  1999  000826  0E00               	movlw	0
  2000  000828  0101               	movlb	1	; () banked
  2001  00082A  6FC6               	movwf	(main@t_dep+1)& (0+255),b
  2002  00082C  0E00               	movlw	0
  2003  00082E  6FC5               	movwf	main@t_dep& (0+255),b
  2004                           
  2005                           ;main.c: 725:     int t_count;;main.c: 726:  TRISD = 0x00;
  2006  000830  0E00               	movlw	0
  2007  000832  6E95               	movwf	3989,c	;volatile
  2008                           
  2009                           ; BSR set to: 1
  2010                           ;main.c: 727:  GIE = 1;
  2011  000834  8EF2               	bsf	4082,7,c	;volatile
  2012                           
  2013                           ;main.c: 728:     int steps2_adj =0;
  2014  000836  0E00               	movlw	0
  2015  000838  6FBE               	movwf	(main@steps2_adj+1)& (0+255),b
  2016  00083A  0E00               	movlw	0
  2017  00083C  6FBD               	movwf	main@steps2_adj& (0+255),b
  2018                           
  2019                           ;main.c: 729:     ADCON1=0x0F;
  2020  00083E  0E0F               	movlw	15
  2021  000840  6EC1               	movwf	4033,c	;volatile
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;main.c: 731:  initLCD();
  2025  000842  ECCB  F01C         	call	_initLCD	;wreg free
  2026                           
  2027                           ;main.c: 733:  T1CON = 0x10;
  2028  000846  0E10               	movlw	16
  2029  000848  6ECD               	movwf	4045,c	;volatile
  2030                           
  2031                           ;main.c: 734:     int poles_detected=0;
  2032  00084A  0E00               	movlw	0
  2033  00084C  0101               	movlb	1	; () banked
  2034  00084E  6FD0               	movwf	(main@poles_detected+1)& (0+255),b
  2035  000850  0E00               	movlw	0
  2036  000852  6FCF               	movwf	main@poles_detected& (0+255),b
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;main.c: 736:     volatile long prev_avg_dist=0;
  2040                           
  2041                           ; BSR set to: 1
  2042  000854  0E00               	movlw	0
  2043  000856  6FCB               	movwf	main@prev_avg_dist& (0+255),b	;volatile
  2044  000858  0E00               	movlw	0
  2045  00085A  6FCC               	movwf	(main@prev_avg_dist+1)& (0+255),b	;volatile
  2046  00085C  0E00               	movlw	0
  2047  00085E  6FCD               	movwf	(main@prev_avg_dist+2)& (0+255),b	;volatile
  2048  000860  0E00               	movlw	0
  2049  000862  6FCE               	movwf	(main@prev_avg_dist+3)& (0+255),b	;volatile
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;main.c: 737:     volatile int data[4];;main.c: 738:     unsigned int data_g;;main.c: 73
      +                          9:     TRISAbits.RA4 = 0;
  2053  000864  9892               	bcf	3986,4,c	;volatile
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;main.c: 740:     PORTAbits.RA4 = LATAbits.LATA4;
  2057  000866  A889               	btfss	3977,4,c	;volatile
  2058  000868  D002               	bra	u9005
  2059  00086A  8880               	bsf	3968,4,c	;volatile
  2060  00086C  D001               	bra	u9007
  2061  00086E                     u9005:
  2062  00086E  9880               	bcf	3968,4,c	;volatile
  2063  000870                     u9007:
  2064                           
  2065                           ;main.c: 743:     _Bool arduino_stopped = 0;
  2066  000870  0E00               	movlw	0
  2067  000872  0101               	movlb	1	; () banked
  2068  000874  6FBA               	movwf	main@arduino_stopped& (0+255),b
  2069                           
  2070                           ; BSR set to: 1
  2071                           ;main.c: 744:     volatile int t_det = 0;
  2072  000876  0E00               	movlw	0
  2073  000878  6FCA               	movwf	(main@t_det+1)& (0+255),b	;volatile
  2074  00087A  0E00               	movlw	0
  2075  00087C  6FC9               	movwf	main@t_det& (0+255),b	;volatile
  2076                           
  2077                           ; BSR set to: 1
  2078                           ;main.c: 746:     Poles Pole[10];;main.c: 754:     if (~sens){
  2079  00087E  2858               	incf	_sens,w,c	;volatile
  2080  000880  E103               	bnz	u9010
  2081  000882  2859               	incf	_sens+1,w,c	;volatile
  2082  000884  B4D8               	btfsc	status,2,c
  2083  000886  D00E               	goto	l8432
  2084  000888                     u9010:
  2085                           
  2086                           ; BSR set to: 1
  2087                           ;main.c: 755:         TRISBbits.RB0 = 0;
  2088  000888  9093               	bcf	3987,0,c	;volatile
  2089                           
  2090                           ;main.c: 756:         LATBbits.LATB0 = 0;
  2091  00088A  908A               	bcf	3978,0,c	;volatile
  2092                           
  2093                           ;main.c: 758:         TRISB = 0b11111111;
  2094  00088C  6893               	setf	3987,c	;volatile
  2095                           
  2096                           ; BSR set to: 1
  2097                           ;main.c: 759:         UI_main( t_dep, poles_detected);
  2098  00088E  0E00               	movlw	0
  2099  000890  0100               	movlb	0	; () banked
  2100  000892  6FFC               	movwf	(UI_main@t_dep+1)& (0+255),b
  2101  000894  0E00               	movlw	0
  2102  000896  6FFB               	movwf	UI_main@t_dep& (0+255),b
  2103  000898  0E00               	movlw	0
  2104  00089A  6FFE               	movwf	(UI_main@poles_detected+1)& (0+255),b
  2105  00089C  0E00               	movlw	0
  2106  00089E  6FFD               	movwf	UI_main@poles_detected& (0+255),b
  2107  0008A0  EC09  F000         	call	_UI_main	;wreg free
  2108  0008A4                     l8432:
  2109                           
  2110                           ;main.c: 762:         PORTAbits.RA4 = LATAbits.LATA4;
  2111  0008A4  A889               	btfss	3977,4,c	;volatile
  2112  0008A6  D002               	bra	u9025
  2113  0008A8  8880               	bsf	3968,4,c	;volatile
  2114  0008AA  D001               	bra	u9027
  2115  0008AC                     u9025:
  2116  0008AC  9880               	bcf	3968,4,c	;volatile
  2117  0008AE                     u9027:
  2118                           
  2119                           ;main.c: 769:         if ((poles_detected <2)&&((Pole[poles_detected].dist_from_start )<
      +                          4000)){
  2120  0008AE  0101               	movlb	1	; () banked
  2121  0008B0  BFD0               	btfsc	(main@poles_detected+1)& (0+255),7,b
  2122  0008B2  D006               	goto	u9030
  2123  0008B4  51D0               	movf	(main@poles_detected+1)& (0+255),w,b
  2124  0008B6  E103               	bnz	u9031
  2125  0008B8  0E02               	movlw	2
  2126  0008BA  5DCF               	subwf	main@poles_detected& (0+255),w,b
  2127  0008BC  B0D8               	btfsc	status,0,c
  2128  0008BE                     u9031:
  2129  0008BE  D34A               	goto	l8628
  2130  0008C0                     u9030:
  2131                           
  2132                           ; BSR set to: 1
  2133  0008C0  C1CF  F15A         	movff	main@poles_detected,??_main
  2134  0008C4  C1D0  F15B         	movff	main@poles_detected+1,??_main+1
  2135  0008C8  90D8               	bcf	status,0,c
  2136  0008CA  375A               	rlcf	??_main& (0+255),f,b
  2137  0008CC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2138  0008CE  90D8               	bcf	status,0,c
  2139  0008D0  375A               	rlcf	??_main& (0+255),f,b
  2140  0008D2  375B               	rlcf	(??_main+1)& (0+255),f,b
  2141  0008D4  90D8               	bcf	status,0,c
  2142  0008D6  375A               	rlcf	??_main& (0+255),f,b
  2143  0008D8  375B               	rlcf	(??_main+1)& (0+255),f,b
  2144  0008DA  0E04               	movlw	4
  2145  0008DC  275A               	addwf	??_main& (0+255),f,b
  2146  0008DE  0E00               	movlw	0
  2147  0008E0  235B               	addwfc	(??_main+1)& (0+255),f,b
  2148  0008E2  0E62               	movlw	low main@Pole
  2149  0008E4  255A               	addwf	??_main& (0+255),w,b
  2150  0008E6  6ED9               	movwf	fsr2l,c
  2151  0008E8  0E01               	movlw	high main@Pole
  2152  0008EA  215B               	addwfc	(??_main+1)& (0+255),w,b
  2153  0008EC  6EDA               	movwf	fsr2h,c
  2154  0008EE  0E01               	movlw	1
  2155  0008F0  BEDB               	btfsc	plusw2,7,c
  2156  0008F2  D10B               	goto	l8524
  2157  0008F4  0EA0               	movlw	160
  2158  0008F6  5CDE               	subwf	postinc2,w,c
  2159  0008F8  0E0F               	movlw	15
  2160  0008FA  58DE               	subwfb	postinc2,w,c
  2161  0008FC  A0D8               	btfss	status,0,c
  2162  0008FE  D105               	goto	l8524
  2163  000900  D329               	goto	l8628
  2164  000902                     l8440:
  2165                           
  2166                           ;main.c: 780:                 t_count = 5;
  2167  000902  0E00               	movlw	0
  2168  000904  0101               	movlb	1	; () banked
  2169  000906  6FC2               	movwf	(main@t_count+1)& (0+255),b
  2170  000908  0E05               	movlw	5
  2171  00090A  6FC1               	movwf	main@t_count& (0+255),b
  2172                           
  2173                           ; BSR set to: 1
  2174                           ;main.c: 781:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2175  00090C  0E01               	movlw	1
  2176  00090E  ECE2  F01F         	call	_lcdInst
  2177  000912  0E11               	movlw	17
  2178  000914  0101               	movlb	1	; () banked
  2179  000916  6F5A               	movwf	??_main& (0+255),b
  2180  000918  0E3A               	movlw	58
  2181  00091A                     u9247:
  2182  00091A  2EE8               	decfsz	wreg,f,c
  2183  00091C  D7FE               	bra	u9247
  2184  00091E  2F5A               	decfsz	??_main& (0+255),f,b
  2185  000920  D7FC               	bra	u9247
  2186  000922  F000               	nop	
  2187                           
  2188                           ;main.c: 782:                     printf("waiting");
  2189  000924  0E02               	movlw	low (STR_54+5)
  2190  000926  0100               	movlb	0	; () banked
  2191  000928  6FED               	movwf	printf@fmt& (0+255),b
  2192  00092A  0EFF               	movlw	high (STR_54+5)
  2193  00092C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2194  00092E  EC7C  F01F         	call	_printf	;wreg free
  2195                           
  2196                           ;main.c: 784:                     if (!PORTAbits.RA4){
  2197  000932  B880               	btfsc	3968,4,c	;volatile
  2198  000934  D013               	goto	l8456
  2199                           
  2200                           ;main.c: 785:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2201  000936  0E01               	movlw	1
  2202  000938  ECE2  F01F         	call	_lcdInst
  2203  00093C  0E11               	movlw	17
  2204  00093E  0101               	movlb	1	; () banked
  2205  000940  6F5A               	movwf	??_main& (0+255),b
  2206  000942  0E3A               	movlw	58
  2207  000944                     u9257:
  2208  000944  2EE8               	decfsz	wreg,f,c
  2209  000946  D7FE               	bra	u9257
  2210  000948  2F5A               	decfsz	??_main& (0+255),f,b
  2211  00094A  D7FC               	bra	u9257
  2212  00094C  F000               	nop	
  2213                           
  2214                           ;main.c: 786:                         printf("more waiting");
  2215  00094E  0EFD               	movlw	low STR_54
  2216  000950  0100               	movlb	0	; () banked
  2217  000952  6FED               	movwf	printf@fmt& (0+255),b
  2218  000954  0EFE               	movlw	high STR_54
  2219  000956  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2220  000958  EC7C  F01F         	call	_printf	;wreg free
  2221  00095C                     l8456:
  2222                           
  2223                           ;main.c: 788:                     if (PORTAbits.RA4){
  2224  00095C  A880               	btfss	3968,4,c	;volatile
  2225  00095E  D08B               	goto	l8506
  2226                           
  2227                           ;main.c: 791:                         I2C_Master_RepeatedStart();
  2228  000960  ECF7  F01F         	call	_I2C_Master_RepeatedStart	;wreg free
  2229                           
  2230                           ;main.c: 792:                         I2C_Master_Write(0b00010001);
  2231  000964  0E00               	movlw	0
  2232  000966  0100               	movlb	0	; () banked
  2233  000968  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  2234  00096A  0E11               	movlw	17
  2235  00096C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  2236  00096E  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  2237                           
  2238                           ;main.c: 793:                         data[0] = I2C_Master_Read(0);
  2239  000972  0E00               	movlw	0
  2240  000974  EC67  F01F         	call	_I2C_Master_Read
  2241  000978  0101               	movlb	1	; () banked
  2242  00097A  6F5A               	movwf	??_main& (0+255),b
  2243  00097C  515A               	movf	??_main& (0+255),w,b
  2244  00097E  6FD1               	movwf	main@data& (0+255),b	;volatile
  2245  000980  6BD2               	clrf	(main@data+1)& (0+255),b	;volatile
  2246                           
  2247                           ;main.c: 794:                         data[1] = I2C_Master_Read(0);
  2248  000982  0E00               	movlw	0
  2249  000984  EC67  F01F         	call	_I2C_Master_Read
  2250  000988  0101               	movlb	1	; () banked
  2251  00098A  6F5A               	movwf	??_main& (0+255),b
  2252  00098C  515A               	movf	??_main& (0+255),w,b
  2253  00098E  6FD3               	movwf	(main@data+2)& (0+255),b	;volatile
  2254  000990  6BD4               	clrf	(main@data+3)& (0+255),b	;volatile
  2255                           
  2256                           ;main.c: 795:                         data[2] = I2C_Master_Read(0);
  2257  000992  0E00               	movlw	0
  2258  000994  EC67  F01F         	call	_I2C_Master_Read
  2259  000998  0101               	movlb	1	; () banked
  2260  00099A  6F5A               	movwf	??_main& (0+255),b
  2261  00099C  515A               	movf	??_main& (0+255),w,b
  2262  00099E  6FD5               	movwf	(main@data+4)& (0+255),b	;volatile
  2263  0009A0  6BD6               	clrf	(main@data+5)& (0+255),b	;volatile
  2264                           
  2265                           ;main.c: 796:                         data[3] = I2C_Master_Read(1);
  2266  0009A2  0E01               	movlw	1
  2267  0009A4  EC67  F01F         	call	_I2C_Master_Read
  2268  0009A8  0101               	movlb	1	; () banked
  2269  0009AA  6F5A               	movwf	??_main& (0+255),b
  2270  0009AC  515A               	movf	??_main& (0+255),w,b
  2271  0009AE  6FD7               	movwf	(main@data+6)& (0+255),b	;volatile
  2272  0009B0  6BD8               	clrf	(main@data+7)& (0+255),b	;volatile
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;main.c: 798:                         data_g = data[0];
  2276  0009B2  C1D1  F1C3         	movff	main@data,main@data_g	;volatile
  2277  0009B6  C1D2  F1C4         	movff	main@data+1,main@data_g+1	;volatile
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;main.c: 799:                         data_g = (data_g<<8)||(data[1]);
  2281  0009BA  0E01               	movlw	1
  2282  0009BC  6FB6               	movwf	_main$1073& (0+255),b
  2283                           
  2284                           ; BSR set to: 1
  2285  0009BE  51C3               	movf	main@data_g& (0+255),w,b
  2286  0009C0  6F5B               	movwf	(??_main+1)& (0+255),b
  2287  0009C2  6B5A               	clrf	??_main& (0+255),b
  2288  0009C4  515A               	movf	??_main& (0+255),w,b
  2289  0009C6  115B               	iorwf	(??_main+1)& (0+255),w,b
  2290  0009C8  A4D8               	btfss	status,2,c
  2291  0009CA  D006               	goto	l8470
  2292                           
  2293                           ; BSR set to: 1
  2294  0009CC  51D3               	movf	(main@data+2)& (0+255),w,b	;volatile
  2295  0009CE  11D4               	iorwf	(main@data+3)& (0+255),w,b	;volatile
  2296  0009D0  A4D8               	btfss	status,2,c
  2297  0009D2  D002               	goto	l8470
  2298                           
  2299                           ; BSR set to: 1
  2300  0009D4  0E00               	movlw	0
  2301  0009D6  6FB6               	movwf	_main$1073& (0+255),b
  2302  0009D8                     l8470:
  2303                           
  2304                           ; BSR set to: 1
  2305  0009D8  C1B6  F1C3         	movff	_main$1073,main@data_g
  2306  0009DC  6BC4               	clrf	(main@data_g+1)& (0+255),b
  2307                           
  2308                           ;main.c: 800:                         data_g = (data_g<<8)||(data[2]);
  2309  0009DE  0E01               	movlw	1
  2310  0009E0  6FB7               	movwf	_main$1074& (0+255),b
  2311                           
  2312                           ; BSR set to: 1
  2313  0009E2  51C3               	movf	main@data_g& (0+255),w,b
  2314  0009E4  6F5B               	movwf	(??_main+1)& (0+255),b
  2315  0009E6  6B5A               	clrf	??_main& (0+255),b
  2316  0009E8  515A               	movf	??_main& (0+255),w,b
  2317  0009EA  115B               	iorwf	(??_main+1)& (0+255),w,b
  2318  0009EC  A4D8               	btfss	status,2,c
  2319  0009EE  D006               	goto	l8478
  2320                           
  2321                           ; BSR set to: 1
  2322  0009F0  51D5               	movf	(main@data+4)& (0+255),w,b	;volatile
  2323  0009F2  11D6               	iorwf	(main@data+5)& (0+255),w,b	;volatile
  2324  0009F4  A4D8               	btfss	status,2,c
  2325  0009F6  D002               	goto	l8478
  2326                           
  2327                           ; BSR set to: 1
  2328  0009F8  0E00               	movlw	0
  2329  0009FA  6FB7               	movwf	_main$1074& (0+255),b
  2330  0009FC                     l8478:
  2331                           
  2332                           ; BSR set to: 1
  2333  0009FC  C1B7  F1C3         	movff	_main$1074,main@data_g
  2334  000A00  6BC4               	clrf	(main@data_g+1)& (0+255),b
  2335                           
  2336                           ;main.c: 801:                         data_g = (data_g<<8)||(data[3]);
  2337  000A02  0E01               	movlw	1
  2338  000A04  6FB8               	movwf	_main$1075& (0+255),b
  2339                           
  2340                           ; BSR set to: 1
  2341  000A06  51C3               	movf	main@data_g& (0+255),w,b
  2342  000A08  6F5B               	movwf	(??_main+1)& (0+255),b
  2343  000A0A  6B5A               	clrf	??_main& (0+255),b
  2344  000A0C  515A               	movf	??_main& (0+255),w,b
  2345  000A0E  115B               	iorwf	(??_main+1)& (0+255),w,b
  2346  000A10  A4D8               	btfss	status,2,c
  2347  000A12  D006               	goto	l8486
  2348                           
  2349                           ; BSR set to: 1
  2350  000A14  51D7               	movf	(main@data+6)& (0+255),w,b	;volatile
  2351  000A16  11D8               	iorwf	(main@data+7)& (0+255),w,b	;volatile
  2352  000A18  A4D8               	btfss	status,2,c
  2353  000A1A  D002               	goto	l8486
  2354                           
  2355                           ; BSR set to: 1
  2356  000A1C  0E00               	movlw	0
  2357  000A1E  6FB8               	movwf	_main$1075& (0+255),b
  2358  000A20                     l8486:
  2359                           
  2360                           ; BSR set to: 1
  2361  000A20  C1B8  F1C3         	movff	_main$1075,main@data_g
  2362  000A24  6BC4               	clrf	(main@data_g+1)& (0+255),b
  2363                           
  2364                           ; BSR set to: 1
  2365                           ;main.c: 802:                         I2C_Master_Stop();
  2366  000A26  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  2367                           
  2368                           ;main.c: 803:                         t_det = data[1];
  2369  000A2A  C1D3  F1C9         	movff	main@data+2,main@t_det	;volatile
  2370  000A2E  C1D4  F1CA         	movff	main@data+3,main@t_det+1	;volatile
  2371                           
  2372                           ;main.c: 804:                         opTime = data[3];
  2373  000A32  C1D7  F1E8         	movff	main@data+6,_opTime	;volatile
  2374  000A36  C1D8  F1E9         	movff	main@data+7,_opTime+1	;volatile
  2375                           
  2376                           ;main.c: 805:                         if (data[2]==1){
  2377  000A3A  0101               	movlb	1	; () banked
  2378  000A3C  05D5               	decf	(main@data+4)& (0+255),w,b	;volatile
  2379  000A3E  11D6               	iorwf	(main@data+5)& (0+255),w,b	;volatile
  2380  000A40  A4D8               	btfss	status,2,c
  2381  000A42  D003               	goto	l8498
  2382                           
  2383                           ; BSR set to: 1
  2384                           ;main.c: 806:                             brake();
  2385  000A44  ECC6  F01A         	call	_brake	;wreg free
  2386                           
  2387                           ;main.c: 807:                             break;
  2388  000A48  D064               	goto	u9150
  2389  000A4A                     l8498:
  2390                           
  2391                           ; BSR set to: 1
  2392                           ;main.c: 809:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2393  000A4A  0E01               	movlw	1
  2394  000A4C  ECE2  F01F         	call	_lcdInst
  2395  000A50  0E11               	movlw	17
  2396  000A52  0101               	movlb	1	; () banked
  2397  000A54  6F5A               	movwf	??_main& (0+255),b
  2398  000A56  0E3A               	movlw	58
  2399  000A58                     u9267:
  2400  000A58  2EE8               	decfsz	wreg,f,c
  2401  000A5A  D7FE               	bra	u9267
  2402  000A5C  2F5A               	decfsz	??_main& (0+255),f,b
  2403  000A5E  D7FC               	bra	u9267
  2404  000A60  F000               	nop	
  2405                           
  2406                           ;main.c: 810:                         printf("done wait");
  2407  000A62  0EBB               	movlw	low STR_55
  2408  000A64  0100               	movlb	0	; () banked
  2409  000A66  6FED               	movwf	printf@fmt& (0+255),b
  2410  000A68  0EFF               	movlw	high STR_55
  2411  000A6A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2412  000A6C  EC7C  F01F         	call	_printf	;wreg free
  2413                           
  2414                           ;main.c: 811:                         arduino_stopped = 1;
  2415  000A70  0E01               	movlw	1
  2416  000A72  0101               	movlb	1	; () banked
  2417  000A74  6FBA               	movwf	main@arduino_stopped& (0+255),b
  2418  000A76                     l8506:
  2419                           
  2420                           ;main.c: 813:                     if (arduino_stopped){
  2421  000A76  0101               	movlb	1	; () banked
  2422  000A78  51BA               	movf	main@arduino_stopped& (0+255),w,b
  2423  000A7A  B4D8               	btfsc	status,2,c
  2424  000A7C  D046               	goto	l8524
  2425                           
  2426                           ; BSR set to: 1
  2427                           ;main.c: 814:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2428  000A7E  0E01               	movlw	1
  2429  000A80  ECE2  F01F         	call	_lcdInst
  2430  000A84  0E11               	movlw	17
  2431  000A86  0101               	movlb	1	; () banked
  2432  000A88  6F5A               	movwf	??_main& (0+255),b
  2433  000A8A  0E3A               	movlw	58
  2434  000A8C                     u9277:
  2435  000A8C  2EE8               	decfsz	wreg,f,c
  2436  000A8E  D7FE               	bra	u9277
  2437  000A90  2F5A               	decfsz	??_main& (0+255),f,b
  2438  000A92  D7FC               	bra	u9277
  2439  000A94  F000               	nop	
  2440                           
  2441                           ;main.c: 815:                         printf("dun break");
  2442  000A96  0EA7               	movlw	low STR_56
  2443  000A98  0100               	movlb	0	; () banked
  2444  000A9A  6FED               	movwf	printf@fmt& (0+255),b
  2445  000A9C  0EFF               	movlw	high STR_56
  2446  000A9E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2447  000AA0  EC7C  F01F         	call	_printf	;wreg free
  2448                           
  2449                           ;main.c: 816:                         steps2_adj=ultrasonic_main();
  2450  000AA4  EC85  F012         	call	_ultrasonic_main	;wreg free
  2451  000AA8  C0FC  F1BD         	movff	?_ultrasonic_main,main@steps2_adj
  2452  000AAC  C0FD  F1BE         	movff	?_ultrasonic_main+1,main@steps2_adj+1
  2453                           
  2454                           ;main.c: 817:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  2455  000AB0  0E01               	movlw	1
  2456  000AB2  ECE2  F01F         	call	_lcdInst
  2457  000AB6  0E11               	movlw	17
  2458  000AB8  0101               	movlb	1	; () banked
  2459  000ABA  6F5A               	movwf	??_main& (0+255),b
  2460  000ABC  0E3A               	movlw	58
  2461  000ABE                     u9287:
  2462  000ABE  2EE8               	decfsz	wreg,f,c
  2463  000AC0  D7FE               	bra	u9287
  2464  000AC2  2F5A               	decfsz	??_main& (0+255),f,b
  2465  000AC4  D7FC               	bra	u9287
  2466  000AC6  F000               	nop	
  2467                           
  2468                           ;main.c: 818:                         printf("stepsadj %d", steps2_adj);
  2469  000AC8  0E23               	movlw	low STR_21
  2470  000ACA  0100               	movlb	0	; () banked
  2471  000ACC  6FED               	movwf	printf@fmt& (0+255),b
  2472  000ACE  0EFF               	movlw	high STR_21
  2473  000AD0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2474  000AD2  C1BD  F0EF         	movff	main@steps2_adj,?_printf+2
  2475  000AD6  C1BE  F0F0         	movff	main@steps2_adj+1,?_printf+3
  2476  000ADA  EC7C  F01F         	call	_printf	;wreg free
  2477                           
  2478                           ;main.c: 819:                         t_count = number_deploy(avg_dist, poles_detected,t
      +                          _det);
  2479  000ADE  C044  F100         	movff	_avg_dist,number_deploy@avg_dist	;volatile
  2480  000AE2  C045  F101         	movff	_avg_dist+1,number_deploy@avg_dist+1	;volatile
  2481  000AE6  C1CF  F102         	movff	main@poles_detected,number_deploy@poles_detected
  2482  000AEA  C1D0  F103         	movff	main@poles_detected+1,number_deploy@poles_detected+1
  2483  000AEE  C1C9  F104         	movff	main@t_det,number_deploy@tires_detected	;volatile
  2484  000AF2  C1CA  F105         	movff	main@t_det+1,number_deploy@tires_detected+1	;volatile
  2485  000AF6  EC6F  F013         	call	_number_deploy	;wreg free
  2486  000AFA  C100  F1C1         	movff	?_number_deploy,main@t_count
  2487  000AFE  C101  F1C2         	movff	?_number_deploy+1,main@t_count+1
  2488                           
  2489                           ;main.c: 820:                         sens = 0;
  2490  000B02  0E00               	movlw	0
  2491  000B04  6E59               	movwf	_sens+1,c	;volatile
  2492  000B06  0E00               	movlw	0
  2493  000B08  6E58               	movwf	_sens,c	;volatile
  2494  000B0A                     l8524:
  2495                           
  2496                           ;main.c: 777:             while (sens){
  2497  000B0A  5058               	movf	_sens,w,c	;volatile
  2498  000B0C  1059               	iorwf	_sens+1,w,c	;volatile
  2499  000B0E  A4D8               	btfss	status,2,c
  2500  000B10  D6F8               	goto	l8440
  2501  000B12                     u9150:
  2502                           
  2503                           ;main.c: 823:             int pole_cl_dist = (avg_dist)-(prev_avg_dist);
  2504  000B12  0101               	movlb	1	; () banked
  2505  000B14  51CB               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2506  000B16  5C44               	subwf	_avg_dist,w,c	;volatile
  2507  000B18  6F60               	movwf	main@pole_cl_dist& (0+255),b
  2508  000B1A  51CC               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2509  000B1C  5845               	subwfb	_avg_dist+1,w,c	;volatile
  2510  000B1E  6F61               	movwf	(main@pole_cl_dist+1)& (0+255),b
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;main.c: 829:             act_done = 0;
  2514  000B20  0E00               	movlw	0
  2515  000B22  6FB9               	movwf	main@act_done& (0+255),b
  2516                           
  2517                           ; BSR set to: 1
  2518                           ;main.c: 830:             if (t_count<=2){
  2519  000B24  BFC2               	btfsc	(main@t_count+1)& (0+255),7,b
  2520  000B26  D006               	goto	u9160
  2521  000B28  51C2               	movf	(main@t_count+1)& (0+255),w,b
  2522  000B2A  E165               	bnz	l564
  2523  000B2C  0E03               	movlw	3
  2524  000B2E  5DC1               	subwf	main@t_count& (0+255),w,b
  2525  000B30  B0D8               	btfsc	status,0,c
  2526  000B32  D061               	goto	l564
  2527  000B34                     u9160:
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;main.c: 831:                 if (t_dep <8){
  2531  000B34  BFC6               	btfsc	(main@t_dep+1)& (0+255),7,b
  2532  000B36  D006               	goto	u9170
  2533  000B38  51C6               	movf	(main@t_dep+1)& (0+255),w,b
  2534  000B3A  E12D               	bnz	l8548
  2535  000B3C  0E08               	movlw	8
  2536  000B3E  5DC5               	subwf	main@t_dep& (0+255),w,b
  2537  000B40  B0D8               	btfsc	status,0,c
  2538  000B42  D029               	goto	u9180
  2539  000B44                     u9170:
  2540                           
  2541                           ; BSR set to: 1
  2542                           ;main.c: 834:                     stack = 1;
  2543  000B44  0E00               	movlw	0
  2544  000B46  6FBC               	movwf	(main@stack+1)& (0+255),b
  2545  000B48  0E01               	movlw	1
  2546  000B4A  6FBB               	movwf	main@stack& (0+255),b
  2547                           
  2548                           ; BSR set to: 1
  2549                           ;main.c: 835:                     brake();
  2550  000B4C  ECC6  F01A         	call	_brake	;wreg free
  2551                           
  2552                           ;main.c: 837:                     for(int i=0; i<(t_count); i++){
  2553  000B50  0E00               	movlw	0
  2554  000B52  0101               	movlb	1	; () banked
  2555  000B54  6FB3               	movwf	(main@i+1)& (0+255),b
  2556  000B56  0E00               	movlw	0
  2557  000B58  6FB2               	movwf	main@i& (0+255),b
  2558  000B5A  D013               	goto	l8546
  2559  000B5C                     l8540:
  2560                           
  2561                           ; BSR set to: 1
  2562                           ;main.c: 838:                         actuators_main(stack, steps2_adj, t_dep);
  2563  000B5C  C1BB  F112         	movff	main@stack,actuators_main@stack
  2564  000B60  C1BC  F113         	movff	main@stack+1,actuators_main@stack+1
  2565  000B64  C1BD  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2566  000B68  C1BE  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2567  000B6C  C1C5  F116         	movff	main@t_dep,actuators_main@t_dep
  2568  000B70  C1C6  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2569  000B74  EC2B  F014         	call	_actuators_main	;wreg free
  2570                           
  2571                           ;main.c: 840:                         t_dep++;
  2572  000B78  0101               	movlb	1	; () banked
  2573  000B7A  4BC5               	infsnz	main@t_dep& (0+255),f,b
  2574  000B7C  2BC6               	incf	(main@t_dep+1)& (0+255),f,b
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;main.c: 841:                     }
  2578  000B7E  4BB2               	infsnz	main@i& (0+255),f,b
  2579  000B80  2BB3               	incf	(main@i+1)& (0+255),f,b
  2580  000B82                     l8546:
  2581                           
  2582                           ; BSR set to: 1
  2583  000B82  51C1               	movf	main@t_count& (0+255),w,b
  2584  000B84  5DB2               	subwf	main@i& (0+255),w,b
  2585  000B86  51B3               	movf	(main@i+1)& (0+255),w,b
  2586  000B88  0A80               	xorlw	128
  2587  000B8A  6F5A               	movwf	??_main& (0+255),b
  2588  000B8C  51C2               	movf	(main@t_count+1)& (0+255),w,b
  2589  000B8E  0A80               	xorlw	128
  2590  000B90  595A               	subwfb	??_main& (0+255),w,b
  2591  000B92  A0D8               	btfss	status,0,c
  2592  000B94  D7E3               	goto	l8540
  2593  000B96                     u9180:
  2594  000B96                     l8548:
  2595                           
  2596                           ; BSR set to: 1
  2597                           ;main.c: 843:                 if (t_dep >= 8){
  2598  000B96  BFC6               	btfsc	(main@t_dep+1)& (0+255),7,b
  2599  000B98  D02C               	goto	u9200
  2600  000B9A  51C6               	movf	(main@t_dep+1)& (0+255),w,b
  2601  000B9C  E104               	bnz	u9190
  2602  000B9E  0E08               	movlw	8
  2603  000BA0  5DC5               	subwf	main@t_dep& (0+255),w,b
  2604  000BA2  A0D8               	btfss	status,0,c
  2605  000BA4  D026               	goto	u9200
  2606  000BA6                     u9190:
  2607                           
  2608                           ; BSR set to: 1
  2609                           ;main.c: 844:                     stack = 2;
  2610  000BA6  0E00               	movlw	0
  2611  000BA8  6FBC               	movwf	(main@stack+1)& (0+255),b
  2612  000BAA  0E02               	movlw	2
  2613  000BAC  6FBB               	movwf	main@stack& (0+255),b
  2614                           
  2615                           ;main.c: 845:                     for(int i=0; i<(t_count); i++){
  2616  000BAE  0E00               	movlw	0
  2617  000BB0  6FB5               	movwf	(main@i_1084+1)& (0+255),b
  2618  000BB2  0E00               	movlw	0
  2619  000BB4  6FB4               	movwf	main@i_1084& (0+255),b
  2620  000BB6  D013               	goto	l8558
  2621  000BB8                     l8552:
  2622                           
  2623                           ; BSR set to: 1
  2624                           ;main.c: 846:                         actuators_main(stack, steps2_adj, t_dep);
  2625  000BB8  C1BB  F112         	movff	main@stack,actuators_main@stack
  2626  000BBC  C1BC  F113         	movff	main@stack+1,actuators_main@stack+1
  2627  000BC0  C1BD  F114         	movff	main@steps2_adj,actuators_main@steps2_adj
  2628  000BC4  C1BE  F115         	movff	main@steps2_adj+1,actuators_main@steps2_adj+1
  2629  000BC8  C1C5  F116         	movff	main@t_dep,actuators_main@t_dep
  2630  000BCC  C1C6  F117         	movff	main@t_dep+1,actuators_main@t_dep+1
  2631  000BD0  EC2B  F014         	call	_actuators_main	;wreg free
  2632                           
  2633                           ;main.c: 848:                         t_dep++;
  2634  000BD4  0101               	movlb	1	; () banked
  2635  000BD6  4BC5               	infsnz	main@t_dep& (0+255),f,b
  2636  000BD8  2BC6               	incf	(main@t_dep+1)& (0+255),f,b
  2637                           
  2638                           ; BSR set to: 1
  2639                           ;main.c: 849:                     }
  2640  000BDA  4BB4               	infsnz	main@i_1084& (0+255),f,b
  2641  000BDC  2BB5               	incf	(main@i_1084+1)& (0+255),f,b
  2642  000BDE                     l8558:
  2643                           
  2644                           ; BSR set to: 1
  2645  000BDE  51C1               	movf	main@t_count& (0+255),w,b
  2646  000BE0  5DB4               	subwf	main@i_1084& (0+255),w,b
  2647  000BE2  51B5               	movf	(main@i_1084+1)& (0+255),w,b
  2648  000BE4  0A80               	xorlw	128
  2649  000BE6  6F5A               	movwf	??_main& (0+255),b
  2650  000BE8  51C2               	movf	(main@t_count+1)& (0+255),w,b
  2651  000BEA  0A80               	xorlw	128
  2652  000BEC  595A               	subwfb	??_main& (0+255),w,b
  2653  000BEE  A0D8               	btfss	status,0,c
  2654  000BF0  D7E3               	goto	l8552
  2655  000BF2                     u9200:
  2656                           
  2657                           ; BSR set to: 1
  2658                           ;main.c: 851:                 act_done = 1;
  2659  000BF2  0E01               	movlw	1
  2660  000BF4  6FB9               	movwf	main@act_done& (0+255),b
  2661  000BF6                     l564:
  2662                           
  2663                           ; BSR set to: 1
  2664                           ;main.c: 853:             if (act_done){
  2665  000BF6  51B9               	movf	main@act_done& (0+255),w,b
  2666  000BF8  B4D8               	btfsc	status,2,c
  2667  000BFA  D1F8               	goto	l8648
  2668                           
  2669                           ; BSR set to: 1
  2670                           ;main.c: 854:             Pole[poles_detected].dist_from_cl = avg_dist;
  2671  000BFC  C1CF  F15A         	movff	main@poles_detected,??_main
  2672  000C00  C1D0  F15B         	movff	main@poles_detected+1,??_main+1
  2673  000C04  90D8               	bcf	status,0,c
  2674  000C06  375A               	rlcf	??_main& (0+255),f,b
  2675  000C08  375B               	rlcf	(??_main+1)& (0+255),f,b
  2676  000C0A  90D8               	bcf	status,0,c
  2677  000C0C  375A               	rlcf	??_main& (0+255),f,b
  2678  000C0E  375B               	rlcf	(??_main+1)& (0+255),f,b
  2679  000C10  90D8               	bcf	status,0,c
  2680  000C12  375A               	rlcf	??_main& (0+255),f,b
  2681  000C14  375B               	rlcf	(??_main+1)& (0+255),f,b
  2682  000C16  0E06               	movlw	6
  2683  000C18  275A               	addwf	??_main& (0+255),f,b
  2684  000C1A  0E00               	movlw	0
  2685  000C1C  235B               	addwfc	(??_main+1)& (0+255),f,b
  2686  000C1E  0E62               	movlw	low main@Pole
  2687  000C20  255A               	addwf	??_main& (0+255),w,b
  2688  000C22  6ED9               	movwf	fsr2l,c
  2689  000C24  0E01               	movlw	high main@Pole
  2690  000C26  215B               	addwfc	(??_main+1)& (0+255),w,b
  2691  000C28  6EDA               	movwf	fsr2h,c
  2692  000C2A  C044  FFDE         	movff	_avg_dist,postinc2	;volatile
  2693  000C2E  C045  FFDD         	movff	_avg_dist+1,postdec2	;volatile
  2694                           
  2695                           ;main.c: 855:             Pole[poles_detected].dist_from_start = avg_dist+prev_avg_dist;
  2696  000C32  51CB               	movf	main@prev_avg_dist& (0+255),w,b	;volatile
  2697  000C34  2444               	addwf	_avg_dist,w,c	;volatile
  2698  000C36  6F5A               	movwf	??_main& (0+255),b
  2699  000C38  51CC               	movf	(main@prev_avg_dist+1)& (0+255),w,b	;volatile
  2700  000C3A  2045               	addwfc	_avg_dist+1,w,c	;volatile
  2701  000C3C  6F5B               	movwf	(??_main+1)& (0+255),b
  2702  000C3E  C1CF  F15C         	movff	main@poles_detected,??_main+2
  2703  000C42  C1D0  F15D         	movff	main@poles_detected+1,??_main+3
  2704  000C46  90D8               	bcf	status,0,c
  2705  000C48  375C               	rlcf	(??_main+2)& (0+255),f,b
  2706  000C4A  375D               	rlcf	(??_main+3)& (0+255),f,b
  2707  000C4C  90D8               	bcf	status,0,c
  2708  000C4E  375C               	rlcf	(??_main+2)& (0+255),f,b
  2709  000C50  375D               	rlcf	(??_main+3)& (0+255),f,b
  2710  000C52  90D8               	bcf	status,0,c
  2711  000C54  375C               	rlcf	(??_main+2)& (0+255),f,b
  2712  000C56  375D               	rlcf	(??_main+3)& (0+255),f,b
  2713  000C58  0E04               	movlw	4
  2714  000C5A  275C               	addwf	(??_main+2)& (0+255),f,b
  2715  000C5C  0E00               	movlw	0
  2716  000C5E  235D               	addwfc	(??_main+3)& (0+255),f,b
  2717  000C60  0E62               	movlw	low main@Pole
  2718  000C62  255C               	addwf	(??_main+2)& (0+255),w,b
  2719  000C64  6ED9               	movwf	fsr2l,c
  2720  000C66  0E01               	movlw	high main@Pole
  2721  000C68  215D               	addwfc	(??_main+3)& (0+255),w,b
  2722  000C6A  6EDA               	movwf	fsr2h,c
  2723  000C6C  C15A  FFDE         	movff	??_main,postinc2
  2724  000C70  C15B  FFDD         	movff	??_main+1,postdec2
  2725                           
  2726                           ; BSR set to: 1
  2727                           ;main.c: 860:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2728  000C74  0E01               	movlw	1
  2729  000C76  ECE2  F01F         	call	_lcdInst
  2730  000C7A  0E11               	movlw	17
  2731  000C7C  0101               	movlb	1	; () banked
  2732  000C7E  6F5A               	movwf	??_main& (0+255),b
  2733  000C80  0E3A               	movlw	58
  2734  000C82                     u9297:
  2735  000C82  2EE8               	decfsz	wreg,f,c
  2736  000C84  D7FE               	bra	u9297
  2737  000C86  2F5A               	decfsz	??_main& (0+255),f,b
  2738  000C88  D7FC               	bra	u9297
  2739  000C8A  F000               	nop	
  2740                           
  2741                           ;main.c: 861:             printf("dist p[%d]:%d,%d", poles_detected,Pole[poles_detected]
      +                          .dist_from_cl, avg_dist);
  2742  000C8C  0E0C               	movlw	low STR_58
  2743  000C8E  0100               	movlb	0	; () banked
  2744  000C90  6FED               	movwf	printf@fmt& (0+255),b
  2745  000C92  0EFE               	movlw	high STR_58
  2746  000C94  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2747  000C96  C1CF  F0EF         	movff	main@poles_detected,?_printf+2
  2748  000C9A  C1D0  F0F0         	movff	main@poles_detected+1,?_printf+3
  2749  000C9E  C1CF  F15A         	movff	main@poles_detected,??_main
  2750  000CA2  C1D0  F15B         	movff	main@poles_detected+1,??_main+1
  2751  000CA6  0101               	movlb	1	; () banked
  2752  000CA8  90D8               	bcf	status,0,c
  2753  000CAA  375A               	rlcf	??_main& (0+255),f,b
  2754  000CAC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2755  000CAE  90D8               	bcf	status,0,c
  2756  000CB0  375A               	rlcf	??_main& (0+255),f,b
  2757  000CB2  375B               	rlcf	(??_main+1)& (0+255),f,b
  2758  000CB4  90D8               	bcf	status,0,c
  2759  000CB6  375A               	rlcf	??_main& (0+255),f,b
  2760  000CB8  375B               	rlcf	(??_main+1)& (0+255),f,b
  2761  000CBA  0E06               	movlw	6
  2762  000CBC  275A               	addwf	??_main& (0+255),f,b
  2763  000CBE  0E00               	movlw	0
  2764  000CC0  235B               	addwfc	(??_main+1)& (0+255),f,b
  2765  000CC2  0E62               	movlw	low main@Pole
  2766  000CC4  255A               	addwf	??_main& (0+255),w,b
  2767  000CC6  6ED9               	movwf	fsr2l,c
  2768  000CC8  0E01               	movlw	high main@Pole
  2769  000CCA  215B               	addwfc	(??_main+1)& (0+255),w,b
  2770  000CCC  6EDA               	movwf	fsr2h,c
  2771  000CCE  CFDE F0F1          	movff	postinc2,?_printf+4
  2772  000CD2  CFDD F0F2          	movff	postdec2,?_printf+5
  2773  000CD6  C044  F0F3         	movff	_avg_dist,?_printf+6	;volatile
  2774  000CDA  C045  F0F4         	movff	_avg_dist+1,?_printf+7	;volatile
  2775  000CDE  C046  F0F5         	movff	_avg_dist+2,?_printf+8	;volatile
  2776  000CE2  C047  F0F6         	movff	_avg_dist+3,?_printf+9	;volatile
  2777  000CE6  EC7C  F01F         	call	_printf	;wreg free
  2778  000CEA  0EC0               	movlw	192
  2779  000CEC  ECE2  F01F         	call	_lcdInst
  2780                           
  2781                           ;main.c: 863:             printf("p[%d] fs : %d",poles_detected, Pole[poles_detected].di
      +                          st_from_start);
  2782  000CF0  0EB8               	movlw	low STR_59
  2783  000CF2  0100               	movlb	0	; () banked
  2784  000CF4  6FED               	movwf	printf@fmt& (0+255),b
  2785  000CF6  0EFE               	movlw	high STR_59
  2786  000CF8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2787  000CFA  C1CF  F0EF         	movff	main@poles_detected,?_printf+2
  2788  000CFE  C1D0  F0F0         	movff	main@poles_detected+1,?_printf+3
  2789  000D02  C1CF  F15A         	movff	main@poles_detected,??_main
  2790  000D06  C1D0  F15B         	movff	main@poles_detected+1,??_main+1
  2791  000D0A  0101               	movlb	1	; () banked
  2792  000D0C  90D8               	bcf	status,0,c
  2793  000D0E  375A               	rlcf	??_main& (0+255),f,b
  2794  000D10  375B               	rlcf	(??_main+1)& (0+255),f,b
  2795  000D12  90D8               	bcf	status,0,c
  2796  000D14  375A               	rlcf	??_main& (0+255),f,b
  2797  000D16  375B               	rlcf	(??_main+1)& (0+255),f,b
  2798  000D18  90D8               	bcf	status,0,c
  2799  000D1A  375A               	rlcf	??_main& (0+255),f,b
  2800  000D1C  375B               	rlcf	(??_main+1)& (0+255),f,b
  2801  000D1E  0E04               	movlw	4
  2802  000D20  275A               	addwf	??_main& (0+255),f,b
  2803  000D22  0E00               	movlw	0
  2804  000D24  235B               	addwfc	(??_main+1)& (0+255),f,b
  2805  000D26  0E62               	movlw	low main@Pole
  2806  000D28  255A               	addwf	??_main& (0+255),w,b
  2807  000D2A  6ED9               	movwf	fsr2l,c
  2808  000D2C  0E01               	movlw	high main@Pole
  2809  000D2E  215B               	addwfc	(??_main+1)& (0+255),w,b
  2810  000D30  6EDA               	movwf	fsr2h,c
  2811  000D32  CFDE F0F1          	movff	postinc2,?_printf+4
  2812  000D36  CFDD F0F2          	movff	postdec2,?_printf+5
  2813  000D3A  EC7C  F01F         	call	_printf	;wreg free
  2814  000D3E  0E90               	movlw	144
  2815  000D40  ECE2  F01F         	call	_lcdInst
  2816                           
  2817                           ;main.c: 865:             printf("p[%d],tdep : %d",poles_detected, Pole[poles_detected].
      +                          tires_deployed);
  2818  000D44  0E1D               	movlw	low STR_60
  2819  000D46  0100               	movlb	0	; () banked
  2820  000D48  6FED               	movwf	printf@fmt& (0+255),b
  2821  000D4A  0EFE               	movlw	high STR_60
  2822  000D4C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2823  000D4E  C1CF  F0EF         	movff	main@poles_detected,?_printf+2
  2824  000D52  C1D0  F0F0         	movff	main@poles_detected+1,?_printf+3
  2825  000D56  C1CF  F15A         	movff	main@poles_detected,??_main
  2826  000D5A  C1D0  F15B         	movff	main@poles_detected+1,??_main+1
  2827  000D5E  0101               	movlb	1	; () banked
  2828  000D60  90D8               	bcf	status,0,c
  2829  000D62  375A               	rlcf	??_main& (0+255),f,b
  2830  000D64  375B               	rlcf	(??_main+1)& (0+255),f,b
  2831  000D66  90D8               	bcf	status,0,c
  2832  000D68  375A               	rlcf	??_main& (0+255),f,b
  2833  000D6A  375B               	rlcf	(??_main+1)& (0+255),f,b
  2834  000D6C  90D8               	bcf	status,0,c
  2835  000D6E  375A               	rlcf	??_main& (0+255),f,b
  2836  000D70  375B               	rlcf	(??_main+1)& (0+255),f,b
  2837  000D72  0E62               	movlw	low main@Pole
  2838  000D74  255A               	addwf	??_main& (0+255),w,b
  2839  000D76  6ED9               	movwf	fsr2l,c
  2840  000D78  0E01               	movlw	high main@Pole
  2841  000D7A  215B               	addwfc	(??_main+1)& (0+255),w,b
  2842  000D7C  6EDA               	movwf	fsr2h,c
  2843  000D7E  CFDE F0F1          	movff	postinc2,?_printf+4
  2844  000D82  CFDD F0F2          	movff	postdec2,?_printf+5
  2845  000D86  EC7C  F01F         	call	_printf	;wreg free
  2846  000D8A  0ED0               	movlw	208
  2847  000D8C  ECE2  F01F         	call	_lcdInst
  2848                           
  2849                           ;main.c: 867:             printf("p[%d] tcnt : %d",poles_detected, Pole[poles_detected].
      +                          tires_final);
  2850  000D90  0E2D               	movlw	low STR_61
  2851  000D92  0100               	movlb	0	; () banked
  2852  000D94  6FED               	movwf	printf@fmt& (0+255),b
  2853  000D96  0EFE               	movlw	high STR_61
  2854  000D98  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2855  000D9A  C1CF  F0EF         	movff	main@poles_detected,?_printf+2
  2856  000D9E  C1D0  F0F0         	movff	main@poles_detected+1,?_printf+3
  2857  000DA2  C1CF  F15A         	movff	main@poles_detected,??_main
  2858  000DA6  C1D0  F15B         	movff	main@poles_detected+1,??_main+1
  2859  000DAA  0101               	movlb	1	; () banked
  2860  000DAC  90D8               	bcf	status,0,c
  2861  000DAE  375A               	rlcf	??_main& (0+255),f,b
  2862  000DB0  375B               	rlcf	(??_main+1)& (0+255),f,b
  2863  000DB2  90D8               	bcf	status,0,c
  2864  000DB4  375A               	rlcf	??_main& (0+255),f,b
  2865  000DB6  375B               	rlcf	(??_main+1)& (0+255),f,b
  2866  000DB8  90D8               	bcf	status,0,c
  2867  000DBA  375A               	rlcf	??_main& (0+255),f,b
  2868  000DBC  375B               	rlcf	(??_main+1)& (0+255),f,b
  2869  000DBE  0E02               	movlw	2
  2870  000DC0  275A               	addwf	??_main& (0+255),f,b
  2871  000DC2  0E00               	movlw	0
  2872  000DC4  235B               	addwfc	(??_main+1)& (0+255),f,b
  2873  000DC6  0E62               	movlw	low main@Pole
  2874  000DC8  255A               	addwf	??_main& (0+255),w,b
  2875  000DCA  6ED9               	movwf	fsr2l,c
  2876  000DCC  0E01               	movlw	high main@Pole
  2877  000DCE  215B               	addwfc	(??_main+1)& (0+255),w,b
  2878  000DD0  6EDA               	movwf	fsr2h,c
  2879  000DD2  CFDE F0F1          	movff	postinc2,?_printf+4
  2880  000DD6  CFDD F0F2          	movff	postdec2,?_printf+5
  2881  000DDA  EC7C  F01F         	call	_printf	;wreg free
  2882                           
  2883                           ;main.c: 870:             _delay((unsigned long)((2000)*(10000000/4000.0)));
  2884  000DDE  0E1A               	movlw	26
  2885  000DE0  0101               	movlb	1	; () banked
  2886  000DE2  6F5B               	movwf	(??_main+1)& (0+255),b
  2887  000DE4  0E5E               	movlw	94
  2888  000DE6  6F5A               	movwf	??_main& (0+255),b
  2889  000DE8  0E6E               	movlw	110
  2890  000DEA                     u9307:
  2891  000DEA  2EE8               	decfsz	wreg,f,c
  2892  000DEC  D7FE               	bra	u9307
  2893  000DEE  2F5A               	decfsz	??_main& (0+255),f,b
  2894  000DF0  D7FC               	bra	u9307
  2895  000DF2  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  2896  000DF4  D7FA               	bra	u9307
  2897  000DF6  F000               	nop	
  2898                           
  2899                           ;main.c: 874:             prev_avg_dist = avg_dist ;
  2900  000DF8  C044  F1CB         	movff	_avg_dist,main@prev_avg_dist	;volatile
  2901  000DFC  C045  F1CC         	movff	_avg_dist+1,main@prev_avg_dist+1	;volatile
  2902  000E00  C046  F1CD         	movff	_avg_dist+2,main@prev_avg_dist+2	;volatile
  2903  000E04  C047  F1CE         	movff	_avg_dist+3,main@prev_avg_dist+3	;volatile
  2904                           
  2905                           ;main.c: 875:             poles_detected++;
  2906  000E08  0101               	movlb	1	; () banked
  2907  000E0A  4BCF               	infsnz	main@poles_detected& (0+255),f,b
  2908  000E0C  2BD0               	incf	(main@poles_detected+1)& (0+255),f,b
  2909                           
  2910                           ; BSR set to: 1
  2911                           ;main.c: 876:             start();
  2912  000E0E  ECF4  F01D         	call	_start	;wreg free
  2913                           
  2914                           ;main.c: 877:             arduino_stopped = 0;
  2915  000E12  0E00               	movlw	0
  2916  000E14  0101               	movlb	1	; () banked
  2917  000E16  6FBA               	movwf	main@arduino_stopped& (0+255),b
  2918                           
  2919                           ; BSR set to: 1
  2920                           ;main.c: 879:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  2921  000E18  0E01               	movlw	1
  2922  000E1A  ECE2  F01F         	call	_lcdInst
  2923  000E1E  0E11               	movlw	17
  2924  000E20  0101               	movlb	1	; () banked
  2925  000E22  6F5A               	movwf	??_main& (0+255),b
  2926  000E24  0E3A               	movlw	58
  2927  000E26                     u9317:
  2928  000E26  2EE8               	decfsz	wreg,f,c
  2929  000E28  D7FE               	bra	u9317
  2930  000E2A  2F5A               	decfsz	??_main& (0+255),f,b
  2931  000E2C  D7FC               	bra	u9317
  2932  000E2E  F000               	nop	
  2933                           
  2934                           ;main.c: 880:             printf("avg dist %d", avg_dist);
  2935  000E30  0E2F               	movlw	low STR_62
  2936  000E32  0100               	movlb	0	; () banked
  2937  000E34  6FED               	movwf	printf@fmt& (0+255),b
  2938  000E36  0EFF               	movlw	high STR_62
  2939  000E38  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2940  000E3A  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  2941  000E3E  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  2942  000E42  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  2943  000E46  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  2944  000E4A  EC7C  F01F         	call	_printf	;wreg free
  2945                           
  2946                           ;main.c: 881:             printf("poles d %d", poles_detected);
  2947  000E4E  0E53               	movlw	low STR_63
  2948  000E50  0100               	movlb	0	; () banked
  2949  000E52  6FED               	movwf	printf@fmt& (0+255),b
  2950  000E54  0EFF               	movlw	high STR_63
  2951  000E56  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  2952  000E58  C1CF  F0EF         	movff	main@poles_detected,?_printf+2
  2953  000E5C  C1D0  F0F0         	movff	main@poles_detected+1,?_printf+3
  2954  000E60  EC7C  F01F         	call	_printf	;wreg free
  2955                           
  2956                           ;main.c: 882:             for (int i=0;i<4;i++){
  2957  000E64  0E00               	movlw	0
  2958  000E66  0101               	movlb	1	; () banked
  2959  000E68  6FC8               	movwf	(main@i_1092+1)& (0+255),b
  2960  000E6A  0E00               	movlw	0
  2961  000E6C  6FC7               	movwf	main@i_1092& (0+255),b
  2962  000E6E                     l8602:
  2963                           
  2964                           ; BSR set to: 1
  2965  000E6E  BFC8               	btfsc	(main@i_1092+1)& (0+255),7,b
  2966  000E70  D006               	goto	l8606
  2967  000E72  51C8               	movf	(main@i_1092+1)& (0+255),w,b
  2968  000E74  E15D               	bnz	l8624
  2969  000E76  0E04               	movlw	4
  2970  000E78  5DC7               	subwf	main@i_1092& (0+255),w,b
  2971  000E7A  B0D8               	btfsc	status,0,c
  2972  000E7C  D059               	goto	l8624
  2973  000E7E                     l8606:
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;main.c: 883:                 sum[i] = 0 ;
  2977  000E7E  90D8               	bcf	status,0,c
  2978  000E80  35C7               	rlcf	main@i_1092& (0+255),w,b
  2979  000E82  6ED9               	movwf	fsr2l,c
  2980  000E84  35C8               	rlcf	(main@i_1092+1)& (0+255),w,b
  2981  000E86  6EDA               	movwf	fsr2h,c
  2982  000E88  0E38               	movlw	low _sum
  2983  000E8A  26D9               	addwf	fsr2l,f,c
  2984  000E8C  0E00               	movlw	high _sum
  2985  000E8E  22DA               	addwfc	fsr2h,f,c
  2986  000E90  0E00               	movlw	0
  2987  000E92  6EDE               	movwf	postinc2,c
  2988  000E94  0E00               	movlw	0
  2989  000E96  6EDD               	movwf	postdec2,c
  2990                           
  2991                           ;main.c: 884:                 a[i] =0 ;
  2992  000E98  90D8               	bcf	status,0,c
  2993  000E9A  35C7               	rlcf	main@i_1092& (0+255),w,b
  2994  000E9C  6ED9               	movwf	fsr2l,c
  2995  000E9E  35C8               	rlcf	(main@i_1092+1)& (0+255),w,b
  2996  000EA0  6EDA               	movwf	fsr2h,c
  2997  000EA2  0E61               	movlw	low _a
  2998  000EA4  26D9               	addwf	fsr2l,f,c
  2999  000EA6  0E00               	movlw	high _a
  3000  000EA8  22DA               	addwfc	fsr2h,f,c
  3001  000EAA  0E00               	movlw	0
  3002  000EAC  6EDE               	movwf	postinc2,c
  3003  000EAE  0E00               	movlw	0
  3004  000EB0  6EDD               	movwf	postdec2,c
  3005                           
  3006                           ;main.c: 885:                 sumf[i] = 0 ;
  3007  000EB2  0E40               	movlw	low _sumf
  3008  000EB4  25C7               	addwf	main@i_1092& (0+255),w,b
  3009  000EB6  6ED9               	movwf	fsr2l,c
  3010  000EB8  0E00               	movlw	high _sumf
  3011  000EBA  21C8               	addwfc	(main@i_1092+1)& (0+255),w,b
  3012  000EBC  6EDA               	movwf	fsr2h,c
  3013  000EBE  0E00               	movlw	0
  3014  000EC0  6EDF               	movwf	indf2,c
  3015                           
  3016                           ; BSR set to: 1
  3017                           ;main.c: 886:                 for (int k=0;k<6;k++){
  3018  000EC2  0E00               	movlw	0
  3019  000EC4  6FC0               	movwf	(main@k+1)& (0+255),b
  3020  000EC6  0E00               	movlw	0
  3021  000EC8  6FBF               	movwf	main@k& (0+255),b
  3022  000ECA                     l8610:
  3023                           
  3024                           ; BSR set to: 1
  3025  000ECA  BFC0               	btfsc	(main@k+1)& (0+255),7,b
  3026  000ECC  D006               	goto	l8614
  3027  000ECE  51C0               	movf	(main@k+1)& (0+255),w,b
  3028  000ED0  E12C               	bnz	l8620
  3029  000ED2  0E06               	movlw	6
  3030  000ED4  5DBF               	subwf	main@k& (0+255),w,b
  3031  000ED6  B0D8               	btfsc	status,0,c
  3032  000ED8  D028               	goto	l8620
  3033  000EDA                     l8614:
  3034                           
  3035                           ; BSR set to: 1
  3036                           ;main.c: 887:                     dist_final[i][k] = 0;
  3037  000EDA  C1C7  F080         	movff	main@i_1092,___wmul@multiplier
  3038  000EDE  C1C8  F081         	movff	main@i_1092+1,___wmul@multiplier+1
  3039  000EE2  0E00               	movlw	0
  3040  000EE4  0100               	movlb	0	; () banked
  3041  000EE6  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3042  000EE8  0E0C               	movlw	12
  3043  000EEA  6F82               	movwf	___wmul@multiplicand& (0+255),b
  3044  000EEC  EC90  F01F         	call	___wmul	;wreg free
  3045  000EF0  0E50               	movlw	low _dist_final
  3046  000EF2  0101               	movlb	1	; () banked
  3047  000EF4  6F5A               	movwf	??_main& (0+255),b
  3048  000EF6  0E02               	movlw	high _dist_final
  3049  000EF8  6F5B               	movwf	(??_main+1)& (0+255),b
  3050  000EFA  0100               	movlb	0	; () banked
  3051  000EFC  5180               	movf	?___wmul& (0+255),w,b
  3052  000EFE  0101               	movlb	1	; () banked
  3053  000F00  275A               	addwf	??_main& (0+255),f,b
  3054  000F02  0100               	movlb	0	; () banked
  3055  000F04  5181               	movf	(?___wmul+1)& (0+255),w,b
  3056  000F06  0101               	movlb	1	; () banked
  3057  000F08  235B               	addwfc	(??_main+1)& (0+255),f,b
  3058  000F0A  90D8               	bcf	status,0,c
  3059  000F0C  35BF               	rlcf	main@k& (0+255),w,b
  3060  000F0E  6ED9               	movwf	fsr2l,c
  3061  000F10  35C0               	rlcf	(main@k+1)& (0+255),w,b
  3062  000F12  6EDA               	movwf	fsr2h,c
  3063  000F14  515A               	movf	??_main& (0+255),w,b
  3064  000F16  26D9               	addwf	fsr2l,f,c
  3065  000F18  515B               	movf	(??_main+1)& (0+255),w,b
  3066  000F1A  22DA               	addwfc	fsr2h,f,c
  3067  000F1C  0E00               	movlw	0
  3068  000F1E  6EDE               	movwf	postinc2,c
  3069  000F20  0E00               	movlw	0
  3070  000F22  6EDD               	movwf	postdec2,c
  3071                           
  3072                           ; BSR set to: 1
  3073                           ;main.c: 888:                     }
  3074  000F24  4BBF               	infsnz	main@k& (0+255),f,b
  3075  000F26  2BC0               	incf	(main@k+1)& (0+255),f,b
  3076  000F28  D7D0               	goto	l8610
  3077  000F2A                     l8620:
  3078                           
  3079                           ; BSR set to: 1
  3080                           ;main.c: 889:                 }
  3081  000F2A  4BC7               	infsnz	main@i_1092& (0+255),f,b
  3082  000F2C  2BC8               	incf	(main@i_1092+1)& (0+255),f,b
  3083  000F2E  D79F               	goto	l8602
  3084  000F30                     l8624:
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;main.c: 890:                 _delay((unsigned long)((1000)*(10000000/4000.0)));
  3088  000F30  0E0D               	movlw	13
  3089  000F32  0101               	movlb	1	; () banked
  3090  000F34  6F5B               	movwf	(??_main+1)& (0+255),b
  3091  000F36  0EAF               	movlw	175
  3092  000F38  6F5A               	movwf	??_main& (0+255),b
  3093  000F3A  0EB6               	movlw	182
  3094  000F3C                     u9327:
  3095  000F3C  2EE8               	decfsz	wreg,f,c
  3096  000F3E  D7FE               	bra	u9327
  3097  000F40  2F5A               	decfsz	??_main& (0+255),f,b
  3098  000F42  D7FC               	bra	u9327
  3099  000F44  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  3100  000F46  D7FA               	bra	u9327
  3101  000F48  F000               	nop	
  3102                           
  3103                           ;main.c: 891:                 sens = 1;
  3104  000F4A  0E00               	movlw	0
  3105  000F4C  6E59               	movwf	_sens+1,c	;volatile
  3106  000F4E  0E01               	movlw	1
  3107  000F50  6E58               	movwf	_sens,c	;volatile
  3108  000F52  D04C               	goto	l8648
  3109  000F54                     l8628:
  3110                           
  3111                           ; BSR set to: 1
  3112                           ;main.c: 895:             brake();
  3113  000F54  ECC6  F01A         	call	_brake	;wreg free
  3114                           
  3115                           ;main.c: 896:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  3116  000F58  0E01               	movlw	1
  3117  000F5A  ECE2  F01F         	call	_lcdInst
  3118  000F5E  0E11               	movlw	17
  3119  000F60  0101               	movlb	1	; () banked
  3120  000F62  6F5A               	movwf	??_main& (0+255),b
  3121  000F64  0E3A               	movlw	58
  3122  000F66                     u9337:
  3123  000F66  2EE8               	decfsz	wreg,f,c
  3124  000F68  D7FE               	bra	u9337
  3125  000F6A  2F5A               	decfsz	??_main& (0+255),f,b
  3126  000F6C  D7FC               	bra	u9337
  3127  000F6E  F000               	nop	
  3128                           
  3129                           ;main.c: 897:             printf("poles done");
  3130  000F70  0E69               	movlw	low STR_64
  3131  000F72  0100               	movlb	0	; () banked
  3132  000F74  6FED               	movwf	printf@fmt& (0+255),b
  3133  000F76  0EFF               	movlw	high STR_64
  3134  000F78  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3135  000F7A  EC7C  F01F         	call	_printf	;wreg free
  3136                           
  3137                           ;main.c: 898:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  3138  000F7E  0E0D               	movlw	13
  3139  000F80  0101               	movlb	1	; () banked
  3140  000F82  6F5B               	movwf	(??_main+1)& (0+255),b
  3141  000F84  0EAF               	movlw	175
  3142  000F86  6F5A               	movwf	??_main& (0+255),b
  3143  000F88  0EB6               	movlw	182
  3144  000F8A                     u9347:
  3145  000F8A  2EE8               	decfsz	wreg,f,c
  3146  000F8C  D7FE               	bra	u9347
  3147  000F8E  2F5A               	decfsz	??_main& (0+255),f,b
  3148  000F90  D7FC               	bra	u9347
  3149  000F92  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  3150  000F94  D7FA               	bra	u9347
  3151  000F96  F000               	nop	
  3152                           
  3153                           ;main.c: 904:             backwards();
  3154  000F98  ECA4  F01F         	call	_backwards	;wreg free
  3155                           
  3156                           ;main.c: 905:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  3157  000F9C  0E01               	movlw	1
  3158  000F9E  ECE2  F01F         	call	_lcdInst
  3159  000FA2  0E11               	movlw	17
  3160  000FA4  0101               	movlb	1	; () banked
  3161  000FA6  6F5A               	movwf	??_main& (0+255),b
  3162  000FA8  0E3A               	movlw	58
  3163  000FAA                     u9357:
  3164  000FAA  2EE8               	decfsz	wreg,f,c
  3165  000FAC  D7FE               	bra	u9357
  3166  000FAE  2F5A               	decfsz	??_main& (0+255),f,b
  3167  000FB0  D7FC               	bra	u9357
  3168  000FB2  F000               	nop	
  3169                           
  3170                           ;main.c: 906:             printf("backwards");
  3171  000FB4  0EB1               	movlw	low STR_65
  3172  000FB6  0100               	movlb	0	; () banked
  3173  000FB8  6FED               	movwf	printf@fmt& (0+255),b
  3174  000FBA  0EFF               	movlw	high STR_65
  3175  000FBC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3176  000FBE  EC7C  F01F         	call	_printf	;wreg free
  3177                           
  3178                           ;main.c: 907:             _delay((unsigned long)((1000)*(10000000/4000.0)));
  3179  000FC2  0E0D               	movlw	13
  3180  000FC4  0101               	movlb	1	; () banked
  3181  000FC6  6F5B               	movwf	(??_main+1)& (0+255),b
  3182  000FC8  0EAF               	movlw	175
  3183  000FCA  6F5A               	movwf	??_main& (0+255),b
  3184  000FCC  0EB6               	movlw	182
  3185  000FCE                     u9367:
  3186  000FCE  2EE8               	decfsz	wreg,f,c
  3187  000FD0  D7FE               	bra	u9367
  3188  000FD2  2F5A               	decfsz	??_main& (0+255),f,b
  3189  000FD4  D7FC               	bra	u9367
  3190  000FD6  2F5B               	decfsz	(??_main+1)& (0+255),f,b
  3191  000FD8  D7FA               	bra	u9367
  3192  000FDA  F000               	nop	
  3193                           
  3194                           ;main.c: 908:             sens = 0;
  3195  000FDC  0E00               	movlw	0
  3196  000FDE  6E59               	movwf	_sens+1,c	;volatile
  3197  000FE0  0E00               	movlw	0
  3198  000FE2  6E58               	movwf	_sens,c	;volatile
  3199                           
  3200                           ;main.c: 909:             send = 1;
  3201  000FE4  0E01               	movlw	1
  3202  000FE6  6E6D               	movwf	_send,c
  3203                           
  3204                           ;main.c: 910:             break;
  3205  000FE8  EF07  F000         	goto	start
  3206  000FEC                     l8648:
  3207                           
  3208                           ;main.c: 912:         t_count = 5;
  3209  000FEC  0E00               	movlw	0
  3210  000FEE  0101               	movlb	1	; () banked
  3211  000FF0  6FC2               	movwf	(main@t_count+1)& (0+255),b
  3212  000FF2  0E05               	movlw	5
  3213  000FF4  6FC1               	movwf	main@t_count& (0+255),b
  3214  000FF6  D456               	goto	l8432
  3215  000FF8                     __end_of_main:
  3216                           	opt callstack 0
  3217                           
  3218 ;; *************** function _ultrasonic_main *****************
  3219 ;; Defined at:
  3220 ;;		line 293 in file "main.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  min_us_dist     2   10[BANK1 ] int 
  3225 ;;  steps2_adj      2    8[BANK1 ] int 
  3226 ;;  step2_offset    2    6[BANK1 ] int 
  3227 ;;  sensed          2    4[BANK1 ] int 
  3228 ;;  min_us_dist     2    0        int 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  2  124[BANK0 ] int 
  3231 ;; Registers used:
  3232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3238 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Totals:         0       2      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;Total ram usage:       14 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:   15
  3245 ;; This function calls:
  3246 ;;		_abs
  3247 ;;		_lcdInst
  3248 ;;		_min
  3249 ;;		_print_echo
  3250 ;;		_printf
  3251 ;;		_trig
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text1
  3258  00250A                     __ptext1:
  3259                           	opt callstack 0
  3260  00250A                     _ultrasonic_main:
  3261                           	opt callstack 15
  3262                           
  3263                           ;main.c: 294:     TRISBbits.RB0 = 0;
  3264                           
  3265                           ;incstack = 0
  3266  00250A  9093               	bcf	3987,0,c	;volatile
  3267                           
  3268                           ;main.c: 295:     LATBbits.LATB0 = 1;
  3269  00250C  808A               	bsf	3978,0,c	;volatile
  3270                           
  3271                           ;main.c: 297:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3272  00250E  0E01               	movlw	1
  3273  002510  ECE2  F01F         	call	_lcdInst
  3274  002514  0E11               	movlw	17
  3275  002516  0101               	movlb	1	; () banked
  3276  002518  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3277  00251A  0E3A               	movlw	58
  3278  00251C                     u9377:
  3279  00251C  2EE8               	decfsz	wreg,f,c
  3280  00251E  D7FE               	bra	u9377
  3281  002520  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3282  002522  D7FC               	bra	u9377
  3283  002524  F000               	nop	
  3284                           
  3285                           ;main.c: 298:     printf("or here");
  3286  002526  0EEC               	movlw	low STR_18
  3287  002528  0100               	movlb	0	; () banked
  3288  00252A  6FED               	movwf	printf@fmt& (0+255),b
  3289  00252C  0EFF               	movlw	high STR_18
  3290  00252E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3291  002530  EC7C  F01F         	call	_printf	;wreg free
  3292                           
  3293                           ;main.c: 299:  TRISB = 0b11110000;
  3294  002534  0EF0               	movlw	240
  3295  002536  6E93               	movwf	3987,c	;volatile
  3296                           
  3297                           ;main.c: 300:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3298  002538  0E01               	movlw	1
  3299  00253A  ECE2  F01F         	call	_lcdInst
  3300  00253E  0E11               	movlw	17
  3301  002540  0101               	movlb	1	; () banked
  3302  002542  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3303  002544  0E3A               	movlw	58
  3304  002546                     u9387:
  3305  002546  2EE8               	decfsz	wreg,f,c
  3306  002548  D7FE               	bra	u9387
  3307  00254A  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3308  00254C  D7FC               	bra	u9387
  3309  00254E  F000               	nop	
  3310                           
  3311                           ;main.c: 301:     printf("break heree?");
  3312  002550  0EF0               	movlw	low STR_19
  3313  002552  0100               	movlb	0	; () banked
  3314  002554  6FED               	movwf	printf@fmt& (0+255),b
  3315  002556  0EFE               	movlw	high STR_19
  3316  002558  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3317  00255A  EC7C  F01F         	call	_printf	;wreg free
  3318                           
  3319                           ;main.c: 302:     RBIF = 0;
  3320  00255E  90F2               	bcf	4082,0,c	;volatile
  3321                           
  3322                           ;main.c: 303:  RBIE = 1;
  3323  002560  86F2               	bsf	4082,3,c	;volatile
  3324                           
  3325                           ;main.c: 305:     int sensed = 0;
  3326  002562  0E00               	movlw	0
  3327  002564  0101               	movlb	1	; () banked
  3328  002566  6F05               	movwf	(ultrasonic_main@sensed+1)& (0+255),b
  3329  002568  0E00               	movlw	0
  3330  00256A  6F04               	movwf	ultrasonic_main@sensed& (0+255),b
  3331                           
  3332                           ;main.c: 307:     int steps2_adj=0;
  3333  00256C  0E00               	movlw	0
  3334  00256E  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3335  002570  0E00               	movlw	0
  3336  002572  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3337                           
  3338                           ;main.c: 308:     int step2_offset=0;
  3339  002574  0E00               	movlw	0
  3340  002576  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3341  002578  0E00               	movlw	0
  3342  00257A  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3343                           
  3344                           ;main.c: 309:     while(send){
  3345  00257C  D084               	goto	l468
  3346  00257E                     l7982:
  3347                           
  3348                           ; BSR set to: 1
  3349                           ;main.c: 310:         for (meas=0; meas<3;meas++){
  3350  00257E  0E00               	movlw	0
  3351  002580  6E51               	movwf	_meas+1,c	;volatile
  3352  002582  0E00               	movlw	0
  3353  002584  6E50               	movwf	_meas,c	;volatile
  3354  002586                     l7984:
  3355                           
  3356                           ; BSR set to: 1
  3357  002586  BE51               	btfsc	_meas+1,7,c	;volatile
  3358  002588  D006               	goto	l7988
  3359  00258A  5051               	movf	_meas+1,w,c	;volatile
  3360  00258C  E174               	bnz	l8026
  3361  00258E  0E03               	movlw	3
  3362  002590  5C50               	subwf	_meas,w,c	;volatile
  3363  002592  B0D8               	btfsc	status,0,c
  3364  002594  D070               	goto	l8026
  3365  002596                     l7988:
  3366                           
  3367                           ; BSR set to: 1
  3368                           ;main.c: 311:         trig();
  3369  002596  EC7A  F018         	call	_trig	;wreg free
  3370                           
  3371                           ;main.c: 312:         RBIE = 0;
  3372  00259A  96F2               	bcf	4082,3,c	;volatile
  3373                           
  3374                           ;main.c: 313:         print_echo();
  3375  00259C  EC8E  F011         	call	_print_echo	;wreg free
  3376                           
  3377                           ;main.c: 314:         RBIE = 1;
  3378  0025A0  86F2               	bsf	4082,3,c	;volatile
  3379                           
  3380                           ;main.c: 315:         int min_us_dist = min(a, 4);
  3381  0025A2  0E61               	movlw	low _a
  3382  0025A4  0100               	movlb	0	; () banked
  3383  0025A6  6F80               	movwf	min@array& (0+255),b
  3384  0025A8  0E00               	movlw	high _a
  3385  0025AA  6F81               	movwf	(min@array+1)& (0+255),b
  3386  0025AC  0E00               	movlw	0
  3387  0025AE  6F83               	movwf	(min@size+1)& (0+255),b
  3388  0025B0  0E04               	movlw	4
  3389  0025B2  6F82               	movwf	min@size& (0+255),b
  3390  0025B4  ECF2  F017         	call	_min	;wreg free
  3391  0025B8  C080  F10A         	movff	?_min,ultrasonic_main@min_us_dist_969
  3392  0025BC  C081  F10B         	movff	?_min+1,ultrasonic_main@min_us_dist_969+1
  3393                           
  3394                           ;main.c: 316:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3395  0025C0  0E01               	movlw	1
  3396  0025C2  ECE2  F01F         	call	_lcdInst
  3397  0025C6  0E11               	movlw	17
  3398  0025C8  0101               	movlb	1	; () banked
  3399  0025CA  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3400  0025CC  0E3A               	movlw	58
  3401  0025CE                     u9397:
  3402  0025CE  2EE8               	decfsz	wreg,f,c
  3403  0025D0  D7FE               	bra	u9397
  3404  0025D2  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3405  0025D4  D7FC               	bra	u9397
  3406  0025D6  F000               	nop	
  3407                           
  3408                           ;main.c: 317:         printf("minimum %d", min_us_dist);
  3409  0025D8  0E5E               	movlw	low STR_20
  3410  0025DA  0100               	movlb	0	; () banked
  3411  0025DC  6FED               	movwf	printf@fmt& (0+255),b
  3412  0025DE  0EFF               	movlw	high STR_20
  3413  0025E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3414  0025E2  C10A  F0EF         	movff	ultrasonic_main@min_us_dist_969,?_printf+2
  3415  0025E6  C10B  F0F0         	movff	ultrasonic_main@min_us_dist_969+1,?_printf+3
  3416  0025EA  EC7C  F01F         	call	_printf	;wreg free
  3417                           
  3418                           ;main.c: 319:         if (min_us_dist<14){
  3419  0025EE  0101               	movlb	1	; () banked
  3420  0025F0  BF0B               	btfsc	(ultrasonic_main@min_us_dist_969+1)& (0+255),7,b
  3421  0025F2  D006               	goto	u8520
  3422  0025F4  510B               	movf	(ultrasonic_main@min_us_dist_969+1)& (0+255),w,b
  3423  0025F6  E108               	bnz	l8008
  3424  0025F8  0E0E               	movlw	14
  3425  0025FA  5D0A               	subwf	ultrasonic_main@min_us_dist_969& (0+255),w,b
  3426  0025FC  B0D8               	btfsc	status,0,c
  3427  0025FE  D004               	goto	l8008
  3428  002600                     u8520:
  3429                           
  3430                           ; BSR set to: 1
  3431                           ;main.c: 320:             step2_offset = 0;
  3432  002600  0E00               	movlw	0
  3433  002602  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3434  002604  0E00               	movlw	0
  3435  002606  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3436  002608                     l8008:
  3437                           
  3438                           ; BSR set to: 1
  3439                           ;main.c: 322:         if ((min_us_dist>=14)&&(min_us_dist<=26)){
  3440  002608  BF0B               	btfsc	(ultrasonic_main@min_us_dist_969+1)& (0+255),7,b
  3441  00260A  D01D               	goto	l8014
  3442  00260C  510B               	movf	(ultrasonic_main@min_us_dist_969+1)& (0+255),w,b
  3443  00260E  E104               	bnz	u8530
  3444  002610  0E0E               	movlw	14
  3445  002612  5D0A               	subwf	ultrasonic_main@min_us_dist_969& (0+255),w,b
  3446  002614  A0D8               	btfss	status,0,c
  3447  002616  D017               	goto	l8014
  3448  002618                     u8530:
  3449                           
  3450                           ; BSR set to: 1
  3451  002618  BF0B               	btfsc	(ultrasonic_main@min_us_dist_969+1)& (0+255),7,b
  3452  00261A  D006               	goto	u8540
  3453  00261C  510B               	movf	(ultrasonic_main@min_us_dist_969+1)& (0+255),w,b
  3454  00261E  E113               	bnz	l8014
  3455  002620  0E1B               	movlw	27
  3456  002622  5D0A               	subwf	ultrasonic_main@min_us_dist_969& (0+255),w,b
  3457  002624  B0D8               	btfsc	status,0,c
  3458  002626  D00F               	goto	l8014
  3459  002628                     u8540:
  3460                           
  3461                           ; BSR set to: 1
  3462                           ;main.c: 323:         step2_offset = abs(min_us_dist - 14);
  3463  002628  0EF2               	movlw	242
  3464  00262A  250A               	addwf	ultrasonic_main@min_us_dist_969& (0+255),w,b
  3465  00262C  0100               	movlb	0	; () banked
  3466  00262E  6F92               	movwf	abs@a& (0+255),b
  3467  002630  0EFF               	movlw	255
  3468  002632  0101               	movlb	1	; () banked
  3469  002634  210B               	addwfc	(ultrasonic_main@min_us_dist_969+1)& (0+255),w,b
  3470  002636  0100               	movlb	0	; () banked
  3471  002638  6F93               	movwf	(abs@a+1)& (0+255),b
  3472  00263A  ECBB  F01E         	call	_abs	;wreg free
  3473  00263E  C092  F106         	movff	?_abs,ultrasonic_main@step2_offset
  3474  002642  C093  F107         	movff	?_abs+1,ultrasonic_main@step2_offset+1
  3475  002646                     l8014:
  3476                           
  3477                           ;main.c: 325:         if (min_us_dist>26){
  3478  002646  0101               	movlb	1	; () banked
  3479  002648  BF0B               	btfsc	(ultrasonic_main@min_us_dist_969+1)& (0+255),7,b
  3480  00264A  D00A               	goto	l8018
  3481  00264C  510B               	movf	(ultrasonic_main@min_us_dist_969+1)& (0+255),w,b
  3482  00264E  E104               	bnz	u8550
  3483  002650  0E1B               	movlw	27
  3484  002652  5D0A               	subwf	ultrasonic_main@min_us_dist_969& (0+255),w,b
  3485  002654  A0D8               	btfss	status,0,c
  3486  002656  D004               	goto	l8018
  3487  002658                     u8550:
  3488                           
  3489                           ; BSR set to: 1
  3490                           ;main.c: 326:             step2_offset = 10;
  3491  002658  0E00               	movlw	0
  3492  00265A  6F07               	movwf	(ultrasonic_main@step2_offset+1)& (0+255),b
  3493  00265C  0E0A               	movlw	10
  3494  00265E  6F06               	movwf	ultrasonic_main@step2_offset& (0+255),b
  3495  002660                     l8018:
  3496                           
  3497                           ; BSR set to: 1
  3498                           ;main.c: 328:         steps2_adj = 110 + step2_offset;
  3499  002660  0E6E               	movlw	110
  3500  002662  2506               	addwf	ultrasonic_main@step2_offset& (0+255),w,b
  3501  002664  6F08               	movwf	ultrasonic_main@steps2_adj& (0+255),b
  3502  002666  0E00               	movlw	0
  3503  002668  2107               	addwfc	(ultrasonic_main@step2_offset+1)& (0+255),w,b
  3504  00266A  6F09               	movwf	(ultrasonic_main@steps2_adj+1)& (0+255),b
  3505                           
  3506                           ; BSR set to: 1
  3507                           ;main.c: 329:         sensed++;
  3508  00266C  4B04               	infsnz	ultrasonic_main@sensed& (0+255),f,b
  3509  00266E  2B05               	incf	(ultrasonic_main@sensed+1)& (0+255),f,b
  3510                           
  3511                           ; BSR set to: 1
  3512                           ;main.c: 332:         }
  3513  002670  4A50               	infsnz	_meas,f,c	;volatile
  3514  002672  2A51               	incf	_meas+1,f,c	;volatile
  3515  002674  D788               	goto	l7984
  3516  002676                     l8026:
  3517                           
  3518                           ; BSR set to: 1
  3519                           ;main.c: 333:         if (sensed>2){
  3520  002676  BF05               	btfsc	(ultrasonic_main@sensed+1)& (0+255),7,b
  3521  002678  D006               	goto	l468
  3522  00267A  5105               	movf	(ultrasonic_main@sensed+1)& (0+255),w,b
  3523  00267C  E107               	bnz	l8032
  3524  00267E  0E03               	movlw	3
  3525  002680  5D04               	subwf	ultrasonic_main@sensed& (0+255),w,b
  3526  002682  B0D8               	btfsc	status,0,c
  3527  002684  D003               	goto	u8570
  3528  002686                     l468:
  3529                           
  3530                           ; BSR set to: 1
  3531                           ;main.c: 309:     while(send){
  3532  002686  506D               	movf	_send,w,c
  3533  002688  A4D8               	btfss	status,2,c
  3534  00268A  D779               	goto	l7982
  3535  00268C                     u8570:
  3536  00268C                     l8032:
  3537                           
  3538                           ; BSR set to: 1
  3539                           ;main.c: 380:          { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));}
      +                          ;
  3540  00268C  0E01               	movlw	1
  3541  00268E  ECE2  F01F         	call	_lcdInst
  3542  002692  0E11               	movlw	17
  3543  002694  0101               	movlb	1	; () banked
  3544  002696  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3545  002698  0E3A               	movlw	58
  3546  00269A                     u9407:
  3547  00269A  2EE8               	decfsz	wreg,f,c
  3548  00269C  D7FE               	bra	u9407
  3549  00269E  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3550  0026A0  D7FC               	bra	u9407
  3551  0026A2  F000               	nop	
  3552                           
  3553                           ;main.c: 381:     printf("stepsadj %d", steps2_adj);
  3554  0026A4  0E23               	movlw	low STR_21
  3555  0026A6  0100               	movlb	0	; () banked
  3556  0026A8  6FED               	movwf	printf@fmt& (0+255),b
  3557  0026AA  0EFF               	movlw	high STR_21
  3558  0026AC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3559  0026AE  C108  F0EF         	movff	ultrasonic_main@steps2_adj,?_printf+2
  3560  0026B2  C109  F0F0         	movff	ultrasonic_main@steps2_adj+1,?_printf+3
  3561  0026B6  EC7C  F01F         	call	_printf	;wreg free
  3562                           
  3563                           ;main.c: 382:     _delay((unsigned long)((1000)*(10000000/4000.0)));
  3564  0026BA  0E0D               	movlw	13
  3565  0026BC  0101               	movlb	1	; () banked
  3566  0026BE  6F01               	movwf	(??_ultrasonic_main+1)& (0+255),b
  3567  0026C0  0EAF               	movlw	175
  3568  0026C2  6F00               	movwf	??_ultrasonic_main& (0+255),b
  3569  0026C4  0EB6               	movlw	182
  3570  0026C6                     u9417:
  3571  0026C6  2EE8               	decfsz	wreg,f,c
  3572  0026C8  D7FE               	bra	u9417
  3573  0026CA  2F00               	decfsz	??_ultrasonic_main& (0+255),f,b
  3574  0026CC  D7FC               	bra	u9417
  3575  0026CE  2F01               	decfsz	(??_ultrasonic_main+1)& (0+255),f,b
  3576  0026D0  D7FA               	bra	u9417
  3577  0026D2  F000               	nop	
  3578                           
  3579                           ;main.c: 383:     return steps2_adj;
  3580  0026D4  C108  F0FC         	movff	ultrasonic_main@steps2_adj,?_ultrasonic_main
  3581  0026D8  C109  F0FD         	movff	ultrasonic_main@steps2_adj+1,?_ultrasonic_main+1
  3582  0026DC  0012               	return		;funcret
  3583  0026DE                     __end_of_ultrasonic_main:
  3584                           	opt callstack 0
  3585                           
  3586 ;; *************** function _trig *****************
  3587 ;; Defined at:
  3588 ;;		line 192 in file "main.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;Total ram usage:        2 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    3
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_ultrasonic_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text2
  3617  0030F4                     __ptext2:
  3618                           	opt callstack 0
  3619  0030F4                     _trig:
  3620                           	opt callstack 26
  3621                           
  3622                           ;main.c: 193:     for(b=1; b<5; b++){
  3623                           
  3624                           ;incstack = 0
  3625  0030F4  0E00               	movlw	0
  3626  0030F6  6E5B               	movwf	_b+1,c
  3627  0030F8  0E01               	movlw	1
  3628  0030FA  6E5A               	movwf	_b,c
  3629  0030FC  BE5B               	btfsc	_b+1,7,c
  3630  0030FE  D004               	goto	l7668
  3631  003100  505B               	movf	_b+1,w,c
  3632  003102  E101               	bnz	u8100
  3633  003104  D072               	goto	L1
  3634  003106                     u8100:
  3635  003106  0012               	return	
  3636  003108                     l7668:
  3637                           
  3638                           ;main.c: 194:         TMR1H = 0;
  3639  003108  0E00               	movlw	0
  3640  00310A  6ECF               	movwf	4047,c	;volatile
  3641                           
  3642                           ;main.c: 195:         TMR1L = 0;
  3643  00310C  0E00               	movlw	0
  3644  00310E  6ECE               	movwf	4046,c	;volatile
  3645                           
  3646                           ;main.c: 196:         if(b==1){
  3647  003110  045A               	decf	_b,w,c
  3648  003112  105B               	iorwf	_b+1,w,c
  3649  003114  A4D8               	btfss	status,2,c
  3650  003116  D015               	goto	l7680
  3651                           
  3652                           ;main.c: 197:             RBIE = 0;
  3653  003118  96F2               	bcf	4082,3,c	;volatile
  3654                           
  3655                           ;main.c: 198:             RD1 = 1;
  3656  00311A  8283               	bsf	3971,1,c	;volatile
  3657                           
  3658                           ;main.c: 199:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3659  00311C  0E08               	movlw	8
  3660  00311E                     u9427:
  3661  00311E  2EE8               	decfsz	wreg,f,c
  3662  003120  D7FE               	bra	u9427
  3663  003122  F000               	nop	
  3664                           
  3665                           ;main.c: 200:             RD1 = 0;
  3666  003124  9283               	bcf	3971,1,c	;volatile
  3667                           
  3668                           ;main.c: 202:             RBIE = 1;
  3669  003126  86F2               	bsf	4082,3,c	;volatile
  3670                           
  3671                           ;main.c: 203:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3672  003128  0E02               	movlw	2
  3673  00312A  0100               	movlb	0	; () banked
  3674  00312C  6F81               	movwf	(??_trig+1)& (0+255),b
  3675  00312E  0EB7               	movlw	183
  3676  003130  6F80               	movwf	??_trig& (0+255),b
  3677  003132  0E4C               	movlw	76
  3678  003134                     u9437:
  3679  003134  2EE8               	decfsz	wreg,f,c
  3680  003136  D7FE               	bra	u9437
  3681  003138  2F80               	decfsz	??_trig& (0+255),f,b
  3682  00313A  D7FC               	bra	u9437
  3683  00313C  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3684  00313E  D7FA               	bra	u9437
  3685  003140  F000               	nop	
  3686  003142                     l7680:
  3687                           
  3688                           ;main.c: 205:         if(b==2){
  3689  003142  0E02               	movlw	2
  3690  003144  185A               	xorwf	_b,w,c
  3691  003146  105B               	iorwf	_b+1,w,c
  3692  003148  A4D8               	btfss	status,2,c
  3693  00314A  D015               	goto	l7690
  3694                           
  3695                           ;main.c: 206:             RBIE = 0;
  3696  00314C  96F2               	bcf	4082,3,c	;volatile
  3697                           
  3698                           ;main.c: 207:             RD0 = 1;
  3699  00314E  8083               	bsf	3971,0,c	;volatile
  3700                           
  3701                           ;main.c: 208:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3702  003150  0E08               	movlw	8
  3703  003152                     u9447:
  3704  003152  2EE8               	decfsz	wreg,f,c
  3705  003154  D7FE               	bra	u9447
  3706  003156  F000               	nop	
  3707                           
  3708                           ;main.c: 209:             RD0 = 0;
  3709  003158  9083               	bcf	3971,0,c	;volatile
  3710                           
  3711                           ;main.c: 211:             RBIE = 1;
  3712  00315A  86F2               	bsf	4082,3,c	;volatile
  3713                           
  3714                           ;main.c: 212:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3715  00315C  0E02               	movlw	2
  3716  00315E  0100               	movlb	0	; () banked
  3717  003160  6F81               	movwf	(??_trig+1)& (0+255),b
  3718  003162  0EB7               	movlw	183
  3719  003164  6F80               	movwf	??_trig& (0+255),b
  3720  003166  0E4C               	movlw	76
  3721  003168                     u9457:
  3722  003168  2EE8               	decfsz	wreg,f,c
  3723  00316A  D7FE               	bra	u9457
  3724  00316C  2F80               	decfsz	??_trig& (0+255),f,b
  3725  00316E  D7FC               	bra	u9457
  3726  003170  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3727  003172  D7FA               	bra	u9457
  3728  003174  F000               	nop	
  3729  003176                     l7690:
  3730                           
  3731                           ;main.c: 214:         if(b==3){
  3732  003176  0E03               	movlw	3
  3733  003178  185A               	xorwf	_b,w,c
  3734  00317A  105B               	iorwf	_b+1,w,c
  3735  00317C  A4D8               	btfss	status,2,c
  3736  00317E  D015               	goto	l7700
  3737                           
  3738                           ;main.c: 215:             RBIE = 0;
  3739  003180  96F2               	bcf	4082,3,c	;volatile
  3740                           
  3741                           ;main.c: 216:             RB3 = 1;
  3742  003182  8681               	bsf	3969,3,c	;volatile
  3743                           
  3744                           ;main.c: 217:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3745  003184  0E08               	movlw	8
  3746  003186                     u9467:
  3747  003186  2EE8               	decfsz	wreg,f,c
  3748  003188  D7FE               	bra	u9467
  3749  00318A  F000               	nop	
  3750                           
  3751                           ;main.c: 218:             RB3 = 0;
  3752  00318C  9681               	bcf	3969,3,c	;volatile
  3753                           
  3754                           ;main.c: 220:             RBIE = 1;
  3755  00318E  86F2               	bsf	4082,3,c	;volatile
  3756                           
  3757                           ;main.c: 221:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3758  003190  0E02               	movlw	2
  3759  003192  0100               	movlb	0	; () banked
  3760  003194  6F81               	movwf	(??_trig+1)& (0+255),b
  3761  003196  0EB7               	movlw	183
  3762  003198  6F80               	movwf	??_trig& (0+255),b
  3763  00319A  0E4C               	movlw	76
  3764  00319C                     u9477:
  3765  00319C  2EE8               	decfsz	wreg,f,c
  3766  00319E  D7FE               	bra	u9477
  3767  0031A0  2F80               	decfsz	??_trig& (0+255),f,b
  3768  0031A2  D7FC               	bra	u9477
  3769  0031A4  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3770  0031A6  D7FA               	bra	u9477
  3771  0031A8  F000               	nop	
  3772  0031AA                     l7700:
  3773                           
  3774                           ;main.c: 223:         if(b==4){
  3775  0031AA  0E04               	movlw	4
  3776  0031AC  185A               	xorwf	_b,w,c
  3777  0031AE  105B               	iorwf	_b+1,w,c
  3778  0031B0  A4D8               	btfss	status,2,c
  3779  0031B2  D015               	goto	l7710
  3780                           
  3781                           ;main.c: 224:             RBIE = 0;
  3782  0031B4  96F2               	bcf	4082,3,c	;volatile
  3783                           
  3784                           ;main.c: 225:             RB2 = 1;
  3785  0031B6  8481               	bsf	3969,2,c	;volatile
  3786                           
  3787                           ;main.c: 226:             _delay((unsigned long)((10)*(10000000/4000000.0)));
  3788  0031B8  0E08               	movlw	8
  3789  0031BA                     u9487:
  3790  0031BA  2EE8               	decfsz	wreg,f,c
  3791  0031BC  D7FE               	bra	u9487
  3792  0031BE  F000               	nop	
  3793                           
  3794                           ;main.c: 227:             RB2 = 0;
  3795  0031C0  9481               	bcf	3969,2,c	;volatile
  3796                           
  3797                           ;main.c: 229:             RBIE = 1;
  3798  0031C2  86F2               	bsf	4082,3,c	;volatile
  3799                           
  3800                           ;main.c: 230:             _delay((unsigned long)((135)*(10000000/4000.0)));
  3801  0031C4  0E02               	movlw	2
  3802  0031C6  0100               	movlb	0	; () banked
  3803  0031C8  6F81               	movwf	(??_trig+1)& (0+255),b
  3804  0031CA  0EB7               	movlw	183
  3805  0031CC  6F80               	movwf	??_trig& (0+255),b
  3806  0031CE  0E4C               	movlw	76
  3807  0031D0                     u9497:
  3808  0031D0  2EE8               	decfsz	wreg,f,c
  3809  0031D2  D7FE               	bra	u9497
  3810  0031D4  2F80               	decfsz	??_trig& (0+255),f,b
  3811  0031D6  D7FC               	bra	u9497
  3812  0031D8  2F81               	decfsz	(??_trig+1)& (0+255),f,b
  3813  0031DA  D7FA               	bra	u9497
  3814  0031DC  F000               	nop	
  3815  0031DE                     l7710:
  3816                           
  3817                           ;main.c: 232:     }
  3818  0031DE  4A5A               	infsnz	_b,f,c
  3819  0031E0  2A5B               	incf	_b+1,f,c
  3820  0031E2  BE5B               	btfsc	_b+1,7,c
  3821  0031E4  D791               	goto	l7668
  3822  0031E6  505B               	movf	_b+1,w,c
  3823  0031E8  E105               	bnz	u8150
  3824  0031EA                     L1:
  3825  0031EA  0E05               	movlw	5
  3826  0031EC  5C5A               	subwf	_b,w,c
  3827  0031EE  B0D8               	btfsc	status,0,c
  3828  0031F0  0012               	return	
  3829  0031F2  D78A               	goto	l7668
  3830  0031F4                     u8150:
  3831  0031F4  0012               	return		;funcret
  3832  0031F6                     __end_of_trig:
  3833                           	opt callstack 0
  3834                           
  3835 ;; *************** function _print_echo *****************
  3836 ;; Defined at:
  3837 ;;		line 235 in file "main.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;Total ram usage:        1 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:   14
  3858 ;; This function calls:
  3859 ;;		_lcdInst
  3860 ;;		_printf
  3861 ;; This function is called by:
  3862 ;;		_ultrasonic_main
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text3
  3867  00231C                     __ptext3:
  3868                           	opt callstack 0
  3869  00231C                     _print_echo:
  3870                           	opt callstack 15
  3871                           
  3872                           ;main.c: 236:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3873                           
  3874                           ;incstack = 0
  3875  00231C  0E01               	movlw	1
  3876  00231E  ECE2  F01F         	call	_lcdInst
  3877  002322  0E11               	movlw	17
  3878  002324  0100               	movlb	0	; () banked
  3879  002326  6FFB               	movwf	??_print_echo& (0+255),b
  3880  002328  0E3A               	movlw	58
  3881  00232A                     u9507:
  3882  00232A  2EE8               	decfsz	wreg,f,c
  3883  00232C  D7FE               	bra	u9507
  3884  00232E  2FFB               	decfsz	??_print_echo& (0+255),f,b
  3885  002330  D7FC               	bra	u9507
  3886  002332  F000               	nop	
  3887                           
  3888                           ;main.c: 237:     if(a[0]>=2 && a[0]<=400){
  3889  002334  BE62               	btfsc	_a+1,7,c
  3890  002336  D01D               	goto	l7722
  3891  002338  5062               	movf	_a+1,w,c
  3892  00233A  E104               	bnz	u8160
  3893  00233C  0E02               	movlw	2
  3894  00233E  5C61               	subwf	_a,w,c
  3895  002340  A0D8               	btfss	status,0,c
  3896  002342  D017               	goto	l7722
  3897  002344                     u8160:
  3898  002344  BE62               	btfsc	_a+1,7,c
  3899  002346  D006               	goto	u8170
  3900  002348  0E91               	movlw	145
  3901  00234A  5C61               	subwf	_a,w,c
  3902  00234C  0E01               	movlw	1
  3903  00234E  5862               	subwfb	_a+1,w,c
  3904  002350  B0D8               	btfsc	status,0,c
  3905  002352  D00F               	goto	l7722
  3906  002354                     u8170:
  3907                           
  3908                           ;main.c: 238:         printf("Dist1=%d,Avg=%d ",a[0],dist_final[0][5]);
  3909  002354  0EC8               	movlw	low STR_10
  3910  002356  0100               	movlb	0	; () banked
  3911  002358  6FED               	movwf	printf@fmt& (0+255),b
  3912  00235A  0EFD               	movlw	high STR_10
  3913  00235C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3914  00235E  C061  F0EF         	movff	_a,?_printf+2
  3915  002362  C062  F0F0         	movff	_a+1,?_printf+3
  3916  002366  C25A  F0F1         	movff	_dist_final+10,?_printf+4
  3917  00236A  C25B  F0F2         	movff	_dist_final+11,?_printf+5
  3918  00236E  EC7C  F01F         	call	_printf	;wreg free
  3919  002372                     l7722:
  3920                           
  3921                           ;main.c: 240:     if(!(a[0]>=2 && a[0]<=400)){
  3922  002372  BE62               	btfsc	_a+1,7,c
  3923  002374  D00E               	goto	u8190
  3924  002376  5062               	movf	_a+1,w,c
  3925  002378  E104               	bnz	u8180
  3926  00237A  0E02               	movlw	2
  3927  00237C  5C61               	subwf	_a,w,c
  3928  00237E  A0D8               	btfss	status,0,c
  3929  002380  D008               	goto	u8190
  3930  002382                     u8180:
  3931  002382  BE62               	btfsc	_a+1,7,c
  3932  002384  D00D               	goto	l7728
  3933  002386  0E91               	movlw	145
  3934  002388  5C61               	subwf	_a,w,c
  3935  00238A  0E01               	movlw	1
  3936  00238C  5862               	subwfb	_a+1,w,c
  3937  00238E  A0D8               	btfss	status,0,c
  3938  002390  D007               	goto	l7728
  3939  002392                     u8190:
  3940                           
  3941                           ;main.c: 241:         printf("Dist1 = X");
  3942  002392  0E7F               	movlw	low STR_11
  3943  002394  0100               	movlb	0	; () banked
  3944  002396  6FED               	movwf	printf@fmt& (0+255),b
  3945  002398  0EFF               	movlw	high STR_11
  3946  00239A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3947  00239C  EC7C  F01F         	call	_printf	;wreg free
  3948  0023A0                     l7728:
  3949                           
  3950                           ;main.c: 243:     if(a[1]>=2 && a[1]<=400){
  3951  0023A0  BE64               	btfsc	_a+3,7,c
  3952  0023A2  D020               	goto	l7736
  3953  0023A4  5064               	movf	_a+3,w,c
  3954  0023A6  E104               	bnz	u8200
  3955  0023A8  0E02               	movlw	2
  3956  0023AA  5C63               	subwf	_a+2,w,c
  3957  0023AC  A0D8               	btfss	status,0,c
  3958  0023AE  D01A               	goto	l7736
  3959  0023B0                     u8200:
  3960  0023B0  BE64               	btfsc	_a+3,7,c
  3961  0023B2  D006               	goto	u8210
  3962  0023B4  0E91               	movlw	145
  3963  0023B6  5C63               	subwf	_a+2,w,c
  3964  0023B8  0E01               	movlw	1
  3965  0023BA  5864               	subwfb	_a+3,w,c
  3966  0023BC  B0D8               	btfsc	status,0,c
  3967  0023BE  D012               	goto	l7736
  3968  0023C0                     u8210:
  3969  0023C0  0EC0               	movlw	192
  3970  0023C2  ECE2  F01F         	call	_lcdInst
  3971                           
  3972                           ;main.c: 245:         printf("Dist2=%d,Avg=%d",a[1],dist_final[1][5]);
  3973  0023C6  0E4D               	movlw	low STR_12
  3974  0023C8  0100               	movlb	0	; () banked
  3975  0023CA  6FED               	movwf	printf@fmt& (0+255),b
  3976  0023CC  0EFE               	movlw	high STR_12
  3977  0023CE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  3978  0023D0  C063  F0EF         	movff	_a+2,?_printf+2
  3979  0023D4  C064  F0F0         	movff	_a+3,?_printf+3
  3980  0023D8  C266  F0F1         	movff	_dist_final+22,?_printf+4
  3981  0023DC  C267  F0F2         	movff	_dist_final+23,?_printf+5
  3982  0023E0  EC7C  F01F         	call	_printf	;wreg free
  3983  0023E4                     l7736:
  3984                           
  3985                           ;main.c: 247:     if(!(a[1]>=2 && a[1]<=400)){
  3986  0023E4  BE64               	btfsc	_a+3,7,c
  3987  0023E6  D00E               	goto	u8230
  3988  0023E8  5064               	movf	_a+3,w,c
  3989  0023EA  E104               	bnz	u8220
  3990  0023EC  0E02               	movlw	2
  3991  0023EE  5C63               	subwf	_a+2,w,c
  3992  0023F0  A0D8               	btfss	status,0,c
  3993  0023F2  D008               	goto	u8230
  3994  0023F4                     u8220:
  3995  0023F4  BE64               	btfsc	_a+3,7,c
  3996  0023F6  D010               	goto	l7744
  3997  0023F8  0E91               	movlw	145
  3998  0023FA  5C63               	subwf	_a+2,w,c
  3999  0023FC  0E01               	movlw	1
  4000  0023FE  5864               	subwfb	_a+3,w,c
  4001  002400  A0D8               	btfss	status,0,c
  4002  002402  D00A               	goto	l7744
  4003  002404                     u8230:
  4004  002404  0EC0               	movlw	192
  4005  002406  ECE2  F01F         	call	_lcdInst
  4006                           
  4007                           ;main.c: 249:         printf("Dist2 = X");
  4008  00240A  0E89               	movlw	low STR_13
  4009  00240C  0100               	movlb	0	; () banked
  4010  00240E  6FED               	movwf	printf@fmt& (0+255),b
  4011  002410  0EFF               	movlw	high STR_13
  4012  002412  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4013  002414  EC7C  F01F         	call	_printf	;wreg free
  4014  002418                     l7744:
  4015                           
  4016                           ;main.c: 251:     if(a[2]>=2 && a[2]<=400){
  4017  002418  BE66               	btfsc	_a+5,7,c
  4018  00241A  D020               	goto	l7752
  4019  00241C  5066               	movf	_a+5,w,c
  4020  00241E  E104               	bnz	u8240
  4021  002420  0E02               	movlw	2
  4022  002422  5C65               	subwf	_a+4,w,c
  4023  002424  A0D8               	btfss	status,0,c
  4024  002426  D01A               	goto	l7752
  4025  002428                     u8240:
  4026  002428  BE66               	btfsc	_a+5,7,c
  4027  00242A  D006               	goto	u8250
  4028  00242C  0E91               	movlw	145
  4029  00242E  5C65               	subwf	_a+4,w,c
  4030  002430  0E01               	movlw	1
  4031  002432  5866               	subwfb	_a+5,w,c
  4032  002434  B0D8               	btfsc	status,0,c
  4033  002436  D012               	goto	l7752
  4034  002438                     u8250:
  4035  002438  0E90               	movlw	144
  4036  00243A  ECE2  F01F         	call	_lcdInst
  4037                           
  4038                           ;main.c: 253:         printf("Dist3=%d,Avg=%d",a[2],dist_final[2][5]);
  4039  00243E  0E5D               	movlw	low STR_14
  4040  002440  0100               	movlb	0	; () banked
  4041  002442  6FED               	movwf	printf@fmt& (0+255),b
  4042  002444  0EFE               	movlw	high STR_14
  4043  002446  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4044  002448  C065  F0EF         	movff	_a+4,?_printf+2
  4045  00244C  C066  F0F0         	movff	_a+5,?_printf+3
  4046  002450  C272  F0F1         	movff	_dist_final+34,?_printf+4
  4047  002454  C273  F0F2         	movff	_dist_final+35,?_printf+5
  4048  002458  EC7C  F01F         	call	_printf	;wreg free
  4049  00245C                     l7752:
  4050                           
  4051                           ;main.c: 255:     if(!(a[2]>=2 && a[2]<=400)){
  4052  00245C  BE66               	btfsc	_a+5,7,c
  4053  00245E  D00E               	goto	u8270
  4054  002460  5066               	movf	_a+5,w,c
  4055  002462  E104               	bnz	u8260
  4056  002464  0E02               	movlw	2
  4057  002466  5C65               	subwf	_a+4,w,c
  4058  002468  A0D8               	btfss	status,0,c
  4059  00246A  D008               	goto	u8270
  4060  00246C                     u8260:
  4061  00246C  BE66               	btfsc	_a+5,7,c
  4062  00246E  D010               	goto	l7760
  4063  002470  0E91               	movlw	145
  4064  002472  5C65               	subwf	_a+4,w,c
  4065  002474  0E01               	movlw	1
  4066  002476  5866               	subwfb	_a+5,w,c
  4067  002478  A0D8               	btfss	status,0,c
  4068  00247A  D00A               	goto	l7760
  4069  00247C                     u8270:
  4070  00247C  0E90               	movlw	144
  4071  00247E  ECE2  F01F         	call	_lcdInst
  4072                           
  4073                           ;main.c: 257:         printf("Dist3 = X");
  4074  002482  0E93               	movlw	low STR_15
  4075  002484  0100               	movlb	0	; () banked
  4076  002486  6FED               	movwf	printf@fmt& (0+255),b
  4077  002488  0EFF               	movlw	high STR_15
  4078  00248A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4079  00248C  EC7C  F01F         	call	_printf	;wreg free
  4080  002490                     l7760:
  4081                           
  4082                           ;main.c: 259:     if(a[3]>=2 && a[3]<=400){
  4083  002490  BE68               	btfsc	_a+7,7,c
  4084  002492  D020               	goto	l7768
  4085  002494  5068               	movf	_a+7,w,c
  4086  002496  E104               	bnz	u8280
  4087  002498  0E02               	movlw	2
  4088  00249A  5C67               	subwf	_a+6,w,c
  4089  00249C  A0D8               	btfss	status,0,c
  4090  00249E  D01A               	goto	l7768
  4091  0024A0                     u8280:
  4092  0024A0  BE68               	btfsc	_a+7,7,c
  4093  0024A2  D006               	goto	u8290
  4094  0024A4  0E91               	movlw	145
  4095  0024A6  5C67               	subwf	_a+6,w,c
  4096  0024A8  0E01               	movlw	1
  4097  0024AA  5868               	subwfb	_a+7,w,c
  4098  0024AC  B0D8               	btfsc	status,0,c
  4099  0024AE  D012               	goto	l7768
  4100  0024B0                     u8290:
  4101  0024B0  0ED0               	movlw	208
  4102  0024B2  ECE2  F01F         	call	_lcdInst
  4103                           
  4104                           ;main.c: 261:         printf("Dist4=%d,Avg=%d ",a[3],dist_final[3][5]);
  4105  0024B6  0ED9               	movlw	low STR_16
  4106  0024B8  0100               	movlb	0	; () banked
  4107  0024BA  6FED               	movwf	printf@fmt& (0+255),b
  4108  0024BC  0EFD               	movlw	high STR_16
  4109  0024BE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4110  0024C0  C067  F0EF         	movff	_a+6,?_printf+2
  4111  0024C4  C068  F0F0         	movff	_a+7,?_printf+3
  4112  0024C8  C27E  F0F1         	movff	_dist_final+46,?_printf+4
  4113  0024CC  C27F  F0F2         	movff	_dist_final+47,?_printf+5
  4114  0024D0  EC7C  F01F         	call	_printf	;wreg free
  4115  0024D4                     l7768:
  4116                           
  4117                           ;main.c: 264:     if(!(a[3]>=2 && a[3]<=400)){
  4118  0024D4  BE68               	btfsc	_a+7,7,c
  4119  0024D6  D00E               	goto	u8310
  4120  0024D8  5068               	movf	_a+7,w,c
  4121  0024DA  E104               	bnz	u8300
  4122  0024DC  0E02               	movlw	2
  4123  0024DE  5C67               	subwf	_a+6,w,c
  4124  0024E0  A0D8               	btfss	status,0,c
  4125  0024E2  D008               	goto	u8310
  4126  0024E4                     u8300:
  4127  0024E4  BE68               	btfsc	_a+7,7,c
  4128  0024E6  0012               	return	
  4129  0024E8  0E91               	movlw	145
  4130  0024EA  5C67               	subwf	_a+6,w,c
  4131  0024EC  0E01               	movlw	1
  4132  0024EE  5868               	subwfb	_a+7,w,c
  4133  0024F0  A0D8               	btfss	status,0,c
  4134  0024F2  0012               	return	
  4135  0024F4                     u8310:
  4136  0024F4  0ED0               	movlw	208
  4137  0024F6  ECE2  F01F         	call	_lcdInst
  4138                           
  4139                           ;main.c: 266:         printf("Dist4 = X");
  4140  0024FA  0E9D               	movlw	low STR_17
  4141  0024FC  0100               	movlb	0	; () banked
  4142  0024FE  6FED               	movwf	printf@fmt& (0+255),b
  4143  002500  0EFF               	movlw	high STR_17
  4144  002502  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4145  002504  EC7C  F01F         	call	_printf	;wreg free
  4146  002508  0012               	return		;funcret
  4147  00250A                     __end_of_print_echo:
  4148                           	opt callstack 0
  4149                           
  4150 ;; *************** function _min *****************
  4151 ;; Defined at:
  4152 ;;		line 269 in file "main.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  array           2    0[BANK0 ] PTR int 
  4155 ;;		 -> a(8), 
  4156 ;;  size            2    2[BANK0 ] int 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  i               2    9[BANK0 ] int 
  4159 ;;  minimum         2    7[BANK0 ] int 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  2    0[BANK0 ] int 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4169 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;Total ram usage:       11 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    3
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_ultrasonic_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text4
  4184  002FE4                     __ptext4:
  4185                           	opt callstack 0
  4186  002FE4                     _min:
  4187                           	opt callstack 26
  4188                           
  4189                           ;main.c: 270:     int minimum =0 ;
  4190                           
  4191                           ;incstack = 0
  4192  002FE4  0E00               	movlw	0
  4193  002FE6  0100               	movlb	0	; () banked
  4194  002FE8  6F88               	movwf	(min@minimum+1)& (0+255),b
  4195  002FEA  0E00               	movlw	0
  4196  002FEC  6F87               	movwf	min@minimum& (0+255),b
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;main.c: 271:     if (array[0]<=23){
  4200  002FEE  C080  FFD9         	movff	min@array,fsr2l
  4201  002FF2  C081  FFDA         	movff	min@array+1,fsr2h
  4202  002FF6  0E01               	movlw	1
  4203  002FF8  BEDB               	btfsc	plusw2,7,c
  4204  002FFA  D007               	goto	u8320
  4205  002FFC  0E01               	movlw	1
  4206  002FFE  50DB               	movf	plusw2,w,c
  4207  003000  E10C               	bnz	l7782
  4208  003002  0E18               	movlw	24
  4209  003004  5CDE               	subwf	postinc2,w,c
  4210  003006  B0D8               	btfsc	status,0,c
  4211  003008  D008               	goto	l7782
  4212  00300A                     u8320:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;main.c: 272:          minimum = array[0];}
  4216  00300A  C080  FFD9         	movff	min@array,fsr2l
  4217  00300E  C081  FFDA         	movff	min@array+1,fsr2h
  4218  003012  CFDE F087          	movff	postinc2,min@minimum
  4219  003016  CFDD F088          	movff	postdec2,min@minimum+1
  4220  00301A                     l7782:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;main.c: 276:     for (int i = 0; i<size; i++){
  4224  00301A  0E00               	movlw	0
  4225  00301C  6F8A               	movwf	(min@i+1)& (0+255),b
  4226  00301E  0E00               	movlw	0
  4227  003020  6F89               	movwf	min@i& (0+255),b
  4228  003022  D059               	goto	l7798
  4229  003024                     l7784:
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;main.c: 280:         if ((minimum==0)||(minimum>=array[i])&&(array[i]!=0)&&(array[i]>=1
      +                          4)&&(array[i]<=23)){
  4233  003024  5187               	movf	min@minimum& (0+255),w,b
  4234  003026  1188               	iorwf	(min@minimum+1)& (0+255),w,b
  4235  003028  B4D8               	btfsc	status,2,c
  4236  00302A  D046               	goto	u8370
  4237                           
  4238                           ; BSR set to: 0
  4239  00302C  90D8               	bcf	status,0,c
  4240  00302E  3589               	rlcf	min@i& (0+255),w,b
  4241  003030  6ED9               	movwf	fsr2l,c
  4242  003032  358A               	rlcf	(min@i+1)& (0+255),w,b
  4243  003034  6EDA               	movwf	fsr2h,c
  4244  003036  5180               	movf	min@array& (0+255),w,b
  4245  003038  26D9               	addwf	fsr2l,f,c
  4246  00303A  5181               	movf	(min@array+1)& (0+255),w,b
  4247  00303C  22DA               	addwfc	fsr2h,f,c
  4248  00303E  50DE               	movf	postinc2,w,c
  4249  003040  5D87               	subwf	min@minimum& (0+255),w,b
  4250  003042  5188               	movf	(min@minimum+1)& (0+255),w,b
  4251  003044  0A80               	xorlw	128
  4252  003046  6F86               	movwf	(??_min+2)& (0+255),b
  4253  003048  50DE               	movf	postinc2,w,c
  4254  00304A  0A80               	xorlw	128
  4255  00304C  5986               	subwfb	(??_min+2)& (0+255),w,b
  4256  00304E  A0D8               	btfss	status,0,c
  4257  003050  D040               	goto	l7796
  4258                           
  4259                           ; BSR set to: 0
  4260  003052  90D8               	bcf	status,0,c
  4261  003054  3589               	rlcf	min@i& (0+255),w,b
  4262  003056  6ED9               	movwf	fsr2l,c
  4263  003058  358A               	rlcf	(min@i+1)& (0+255),w,b
  4264  00305A  6EDA               	movwf	fsr2h,c
  4265  00305C  5180               	movf	min@array& (0+255),w,b
  4266  00305E  26D9               	addwf	fsr2l,f,c
  4267  003060  5181               	movf	(min@array+1)& (0+255),w,b
  4268  003062  22DA               	addwfc	fsr2h,f,c
  4269  003064  50DE               	movf	postinc2,w,c
  4270  003066  10DE               	iorwf	postinc2,w,c
  4271  003068  B4D8               	btfsc	status,2,c
  4272  00306A  D033               	goto	l7796
  4273                           
  4274                           ; BSR set to: 0
  4275  00306C  90D8               	bcf	status,0,c
  4276  00306E  3589               	rlcf	min@i& (0+255),w,b
  4277  003070  6ED9               	movwf	fsr2l,c
  4278  003072  358A               	rlcf	(min@i+1)& (0+255),w,b
  4279  003074  6EDA               	movwf	fsr2h,c
  4280  003076  5180               	movf	min@array& (0+255),w,b
  4281  003078  26D9               	addwf	fsr2l,f,c
  4282  00307A  5181               	movf	(min@array+1)& (0+255),w,b
  4283  00307C  22DA               	addwfc	fsr2h,f,c
  4284  00307E  0E01               	movlw	1
  4285  003080  BEDB               	btfsc	plusw2,7,c
  4286  003082  D027               	goto	l7796
  4287  003084  0E01               	movlw	1
  4288  003086  50DB               	movf	plusw2,w,c
  4289  003088  E104               	bnz	u8360
  4290  00308A  0E0E               	movlw	14
  4291  00308C  5CDE               	subwf	postinc2,w,c
  4292  00308E  A0D8               	btfss	status,0,c
  4293  003090  D020               	goto	l7796
  4294  003092                     u8360:
  4295                           
  4296                           ; BSR set to: 0
  4297  003092  90D8               	bcf	status,0,c
  4298  003094  3589               	rlcf	min@i& (0+255),w,b
  4299  003096  6ED9               	movwf	fsr2l,c
  4300  003098  358A               	rlcf	(min@i+1)& (0+255),w,b
  4301  00309A  6EDA               	movwf	fsr2h,c
  4302  00309C  5180               	movf	min@array& (0+255),w,b
  4303  00309E  26D9               	addwf	fsr2l,f,c
  4304  0030A0  5181               	movf	(min@array+1)& (0+255),w,b
  4305  0030A2  22DA               	addwfc	fsr2h,f,c
  4306  0030A4  0E01               	movlw	1
  4307  0030A6  BEDB               	btfsc	plusw2,7,c
  4308  0030A8  D007               	goto	u8370
  4309  0030AA  0E01               	movlw	1
  4310  0030AC  50DB               	movf	plusw2,w,c
  4311  0030AE  E111               	bnz	l7796
  4312  0030B0  0E18               	movlw	24
  4313  0030B2  5CDE               	subwf	postinc2,w,c
  4314  0030B4  B0D8               	btfsc	status,0,c
  4315  0030B6  D00D               	goto	l7796
  4316  0030B8                     u8370:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;main.c: 284:             minimum = array[i];
  4320  0030B8  90D8               	bcf	status,0,c
  4321  0030BA  3589               	rlcf	min@i& (0+255),w,b
  4322  0030BC  6ED9               	movwf	fsr2l,c
  4323  0030BE  358A               	rlcf	(min@i+1)& (0+255),w,b
  4324  0030C0  6EDA               	movwf	fsr2h,c
  4325  0030C2  5180               	movf	min@array& (0+255),w,b
  4326  0030C4  26D9               	addwf	fsr2l,f,c
  4327  0030C6  5181               	movf	(min@array+1)& (0+255),w,b
  4328  0030C8  22DA               	addwfc	fsr2h,f,c
  4329  0030CA  CFDE F087          	movff	postinc2,min@minimum
  4330  0030CE  CFDD F088          	movff	postdec2,min@minimum+1
  4331  0030D2                     l7796:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;main.c: 289:     }
  4335  0030D2  4B89               	infsnz	min@i& (0+255),f,b
  4336  0030D4  2B8A               	incf	(min@i+1)& (0+255),f,b
  4337  0030D6                     l7798:
  4338                           
  4339                           ; BSR set to: 0
  4340  0030D6  5182               	movf	min@size& (0+255),w,b
  4341  0030D8  5D89               	subwf	min@i& (0+255),w,b
  4342  0030DA  518A               	movf	(min@i+1)& (0+255),w,b
  4343  0030DC  0A80               	xorlw	128
  4344  0030DE  6F84               	movwf	??_min& (0+255),b
  4345  0030E0  5183               	movf	(min@size+1)& (0+255),w,b
  4346  0030E2  0A80               	xorlw	128
  4347  0030E4  5984               	subwfb	??_min& (0+255),w,b
  4348  0030E6  A0D8               	btfss	status,0,c
  4349  0030E8  D79D               	goto	l7784
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;main.c: 290:     return minimum;
  4353  0030EA  C087  F080         	movff	min@minimum,?_min
  4354  0030EE  C088  F081         	movff	min@minimum+1,?_min+1
  4355                           
  4356                           ; BSR set to: 0
  4357  0030F2  0012               	return		;funcret
  4358  0030F4                     __end_of_min:
  4359                           	opt callstack 0
  4360                           
  4361 ;; *************** function _start *****************
  4362 ;; Defined at:
  4363 ;;		line 704 in file "main.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    5
  4384 ;; This function calls:
  4385 ;;		_I2C_Master_Init
  4386 ;;		_I2C_Master_Start
  4387 ;;		_I2C_Master_Stop
  4388 ;;		_I2C_Master_Write
  4389 ;; This function is called by:
  4390 ;;		_main
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text5
  4395  003BE8                     __ptext5:
  4396                           	opt callstack 0
  4397  003BE8                     _start:
  4398                           	opt callstack 25
  4399                           
  4400                           ;main.c: 705:     I2C_Master_Init(100000);
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;incstack = 0
  4404  003BE8  0EA0               	movlw	160
  4405  003BEA  0100               	movlb	0	; () banked
  4406  003BEC  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  4407  003BEE  0E86               	movlw	134
  4408  003BF0  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  4409  003BF2  0E01               	movlw	1
  4410  003BF4  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  4411  003BF6  0E00               	movlw	0
  4412  003BF8  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  4413  003BFA  EC6E  F01D         	call	_I2C_Master_Init	;wreg free
  4414                           
  4415                           ;main.c: 706:     I2C_Master_Start();
  4416  003BFE  ECF3  F01F         	call	_I2C_Master_Start	;wreg free
  4417                           
  4418                           ;main.c: 707:     I2C_Master_Write(0b00010000);
  4419  003C02  0E00               	movlw	0
  4420  003C04  0100               	movlb	0	; () banked
  4421  003C06  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4422  003C08  0E10               	movlw	16
  4423  003C0A  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4424  003C0C  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  4425                           
  4426                           ;main.c: 708:     I2C_Master_Stop();
  4427  003C10  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  4428                           
  4429                           ;main.c: 710:     I2C_Master_Start();
  4430  003C14  ECF3  F01F         	call	_I2C_Master_Start	;wreg free
  4431                           
  4432                           ;main.c: 711:     I2C_Master_Write(0b00010000);
  4433  003C18  0E00               	movlw	0
  4434  003C1A  0100               	movlb	0	; () banked
  4435  003C1C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4436  003C1E  0E10               	movlw	16
  4437  003C20  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4438  003C22  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  4439                           
  4440                           ;main.c: 712:     I2C_Master_Write('2');
  4441  003C26  0E00               	movlw	0
  4442  003C28  0100               	movlb	0	; () banked
  4443  003C2A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4444  003C2C  0E32               	movlw	50
  4445  003C2E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4446  003C30  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  4447                           
  4448                           ;main.c: 713:     I2C_Master_Stop();
  4449  003C34  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  4450  003C38  0012               	return		;funcret
  4451  003C3A                     __end_of_start:
  4452                           	opt callstack 0
  4453                           
  4454 ;; *************** function _number_deploy *****************
  4455 ;; Defined at:
  4456 ;;		line 421 in file "main.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  avg_dist        2    0[BANK1 ] int 
  4459 ;;  poles_detect    2    2[BANK1 ] int 
  4460 ;;  tires_detect    2    4[BANK1 ] int 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  t_count         2    8[BANK1 ] int 
  4463 ;;  tires_t         2    6[BANK1 ] int 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  2    0[BANK1 ] int 
  4466 ;; Registers used:
  4467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4473 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;Total ram usage:       12 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:   14
  4480 ;; This function calls:
  4481 ;;		___awdiv
  4482 ;;		_lcdInst
  4483 ;;		_printf
  4484 ;; This function is called by:
  4485 ;;		_main
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text6
  4490  0026DE                     __ptext6:
  4491                           	opt callstack 0
  4492  0026DE                     _number_deploy:
  4493                           	opt callstack 16
  4494                           
  4495                           ;main.c: 422:     int tires_t=0;
  4496                           
  4497                           ;incstack = 0
  4498  0026DE  0E00               	movlw	0
  4499  0026E0  0101               	movlb	1	; () banked
  4500  0026E2  6F07               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4501  0026E4  0E00               	movlw	0
  4502  0026E6  6F06               	movwf	number_deploy@tires_t& (0+255),b
  4503                           
  4504                           ;main.c: 424:     int t_count = 0;
  4505  0026E8  0E00               	movlw	0
  4506  0026EA  6F09               	movwf	(number_deploy@t_count+1)& (0+255),b
  4507  0026EC  0E00               	movlw	0
  4508  0026EE  6F08               	movwf	number_deploy@t_count& (0+255),b
  4509                           
  4510                           ;main.c: 427:     while (t_count<3){
  4511  0026F0  D0A5               	goto	l8092
  4512  0026F2                     l8060:
  4513                           
  4514                           ; BSR set to: 1
  4515                           ;main.c: 428:   if (poles_detected != 0){
  4516  0026F2  5102               	movf	number_deploy@poles_detected& (0+255),w,b
  4517  0026F4  1103               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4518  0026F6  B4D8               	btfsc	status,2,c
  4519  0026F8  D032               	goto	l8070
  4520                           
  4521                           ; BSR set to: 1
  4522                           ;main.c: 429:    if ((avg_dist/1000)<30){
  4523  0026FA  C100  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4524  0026FE  C101  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4525  002702  0E03               	movlw	3
  4526  002704  0100               	movlb	0	; () banked
  4527  002706  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4528  002708  0EE8               	movlw	232
  4529  00270A  6F82               	movwf	___awdiv@divisor& (0+255),b
  4530  00270C  EC04  F01C         	call	___awdiv	;wreg free
  4531  002710  0100               	movlb	0	; () banked
  4532  002712  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4533  002714  D006               	goto	u8600
  4534  002716  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4535  002718  E109               	bnz	l8066
  4536  00271A  0E1E               	movlw	30
  4537  00271C  5D80               	subwf	?___awdiv& (0+255),w,b
  4538  00271E  B0D8               	btfsc	status,0,c
  4539  002720  D005               	goto	l8066
  4540  002722                     u8600:
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;main.c: 431:     tires_t = 1;
  4544  002722  0E00               	movlw	0
  4545  002724  0101               	movlb	1	; () banked
  4546  002726  6F07               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4547  002728  0E01               	movlw	1
  4548  00272A  6F06               	movwf	number_deploy@tires_t& (0+255),b
  4549  00272C                     l8066:
  4550                           
  4551                           ;main.c: 433:    if ((avg_dist/1000)>30){
  4552  00272C  C100  F080         	movff	number_deploy@avg_dist,___awdiv@dividend
  4553  002730  C101  F081         	movff	number_deploy@avg_dist+1,___awdiv@dividend+1
  4554  002734  0E03               	movlw	3
  4555  002736  0100               	movlb	0	; () banked
  4556  002738  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  4557  00273A  0EE8               	movlw	232
  4558  00273C  6F82               	movwf	___awdiv@divisor& (0+255),b
  4559  00273E  EC04  F01C         	call	___awdiv	;wreg free
  4560  002742  0100               	movlb	0	; () banked
  4561  002744  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  4562  002746  D00B               	goto	l8070
  4563  002748  5181               	movf	(?___awdiv+1)& (0+255),w,b
  4564  00274A  E104               	bnz	u8610
  4565  00274C  0E1F               	movlw	31
  4566  00274E  5D80               	subwf	?___awdiv& (0+255),w,b
  4567  002750  A0D8               	btfss	status,0,c
  4568  002752  D005               	goto	l8070
  4569  002754                     u8610:
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;main.c: 434:     tires_t = 2;
  4573  002754  0E00               	movlw	0
  4574  002756  0101               	movlb	1	; () banked
  4575  002758  6F07               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4576  00275A  0E02               	movlw	2
  4577  00275C  6F06               	movwf	number_deploy@tires_t& (0+255),b
  4578  00275E                     l8070:
  4579                           
  4580                           ;main.c: 438:   if (poles_detected == 0){
  4581  00275E  0101               	movlb	1	; () banked
  4582  002760  5102               	movf	number_deploy@poles_detected& (0+255),w,b
  4583  002762  1103               	iorwf	(number_deploy@poles_detected+1)& (0+255),w,b
  4584  002764  A4D8               	btfss	status,2,c
  4585  002766  D004               	goto	l8074
  4586                           
  4587                           ; BSR set to: 1
  4588                           ;main.c: 439:    tires_t = 2;
  4589  002768  0E00               	movlw	0
  4590  00276A  6F07               	movwf	(number_deploy@tires_t+1)& (0+255),b
  4591  00276C  0E02               	movlw	2
  4592  00276E  6F06               	movwf	number_deploy@tires_t& (0+255),b
  4593  002770                     l8074:
  4594                           
  4595                           ; BSR set to: 1
  4596                           ;main.c: 458:         t_count = tires_t - tires_detected;
  4597  002770  5104               	movf	number_deploy@tires_detected& (0+255),w,b
  4598  002772  5D06               	subwf	number_deploy@tires_t& (0+255),w,b
  4599  002774  6F08               	movwf	number_deploy@t_count& (0+255),b
  4600  002776  5105               	movf	(number_deploy@tires_detected+1)& (0+255),w,b
  4601  002778  5907               	subwfb	(number_deploy@tires_t+1)& (0+255),w,b
  4602  00277A  6F09               	movwf	(number_deploy@t_count+1)& (0+255),b
  4603                           
  4604                           ; BSR set to: 1
  4605                           ;main.c: 459:         Pole[poles_detected].tires_deployed = t_count;
  4606  00277C  C102  F0FB         	movff	number_deploy@poles_detected,??_number_deploy
  4607  002780  C103  F0FC         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4608  002784  0100               	movlb	0	; () banked
  4609  002786  90D8               	bcf	status,0,c
  4610  002788  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4611  00278A  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4612  00278C  90D8               	bcf	status,0,c
  4613  00278E  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4614  002790  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4615  002792  90D8               	bcf	status,0,c
  4616  002794  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4617  002796  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4618  002798  0E00               	movlw	low _Pole
  4619  00279A  25FB               	addwf	??_number_deploy& (0+255),w,b
  4620  00279C  6ED9               	movwf	fsr2l,c
  4621  00279E  0E02               	movlw	high _Pole
  4622  0027A0  21FC               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4623  0027A2  6EDA               	movwf	fsr2h,c
  4624  0027A4  C108  FFDE         	movff	number_deploy@t_count,postinc2
  4625  0027A8  C109  FFDD         	movff	number_deploy@t_count+1,postdec2
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;main.c: 460:         Pole[poles_detected].tires_final = tires_t;
  4629  0027AC  C102  F0FB         	movff	number_deploy@poles_detected,??_number_deploy
  4630  0027B0  C103  F0FC         	movff	number_deploy@poles_detected+1,??_number_deploy+1
  4631  0027B4  90D8               	bcf	status,0,c
  4632  0027B6  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4633  0027B8  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4634  0027BA  90D8               	bcf	status,0,c
  4635  0027BC  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4636  0027BE  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4637  0027C0  90D8               	bcf	status,0,c
  4638  0027C2  37FB               	rlcf	??_number_deploy& (0+255),f,b
  4639  0027C4  37FC               	rlcf	(??_number_deploy+1)& (0+255),f,b
  4640  0027C6  0E02               	movlw	low (_Pole+2)
  4641  0027C8  25FB               	addwf	??_number_deploy& (0+255),w,b
  4642  0027CA  6ED9               	movwf	fsr2l,c
  4643  0027CC  0E02               	movlw	high (_Pole+2)
  4644  0027CE  21FC               	addwfc	(??_number_deploy+1)& (0+255),w,b
  4645  0027D0  6EDA               	movwf	fsr2h,c
  4646  0027D2  C106  FFDE         	movff	number_deploy@tires_t,postinc2
  4647  0027D6  C107  FFDD         	movff	number_deploy@tires_t+1,postdec2
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;main.c: 461:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4651  0027DA  0E01               	movlw	1
  4652  0027DC  ECE2  F01F         	call	_lcdInst
  4653  0027E0  0E11               	movlw	17
  4654  0027E2  0100               	movlb	0	; () banked
  4655  0027E4  6FFB               	movwf	??_number_deploy& (0+255),b
  4656  0027E6  0E3A               	movlw	58
  4657  0027E8                     u9517:
  4658  0027E8  2EE8               	decfsz	wreg,f,c
  4659  0027EA  D7FE               	bra	u9517
  4660  0027EC  2FFB               	decfsz	??_number_deploy& (0+255),f,b
  4661  0027EE  D7FC               	bra	u9517
  4662  0027F0  F000               	nop	
  4663                           
  4664                           ;main.c: 462:         printf("det,%d, tcnt %d",tires_detected,t_count);
  4665  0027F2  0E3D               	movlw	low STR_22
  4666  0027F4  0100               	movlb	0	; () banked
  4667  0027F6  6FED               	movwf	printf@fmt& (0+255),b
  4668  0027F8  0EFE               	movlw	high STR_22
  4669  0027FA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  4670  0027FC  C104  F0EF         	movff	number_deploy@tires_detected,?_printf+2
  4671  002800  C105  F0F0         	movff	number_deploy@tires_detected+1,?_printf+3
  4672  002804  C108  F0F1         	movff	number_deploy@t_count,?_printf+4
  4673  002808  C109  F0F2         	movff	number_deploy@t_count+1,?_printf+5
  4674  00280C  EC7C  F01F         	call	_printf	;wreg free
  4675                           
  4676                           ;main.c: 463:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  4677  002810  0E0D               	movlw	13
  4678  002812  0100               	movlb	0	; () banked
  4679  002814  6FFC               	movwf	(??_number_deploy+1)& (0+255),b
  4680  002816  0EAF               	movlw	175
  4681  002818  6FFB               	movwf	??_number_deploy& (0+255),b
  4682  00281A  0EB6               	movlw	182
  4683  00281C                     u9527:
  4684  00281C  2EE8               	decfsz	wreg,f,c
  4685  00281E  D7FE               	bra	u9527
  4686  002820  2FFB               	decfsz	??_number_deploy& (0+255),f,b
  4687  002822  D7FC               	bra	u9527
  4688  002824  2FFC               	decfsz	(??_number_deploy+1)& (0+255),f,b
  4689  002826  D7FA               	bra	u9527
  4690  002828  F000               	nop	
  4691                           
  4692                           ;main.c: 465:         if (t_count<=2){
  4693  00282A  0101               	movlb	1	; () banked
  4694  00282C  BF09               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4695  00282E  D00E               	goto	u8640
  4696  002830  5109               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4697  002832  E104               	bnz	l8092
  4698  002834  0E03               	movlw	3
  4699  002836  5D08               	subwf	number_deploy@t_count& (0+255),w,b
  4700  002838  A0D8               	btfss	status,0,c
  4701  00283A  D008               	goto	u8640
  4702  00283C                     l8092:
  4703                           
  4704                           ; BSR set to: 1
  4705                           ;main.c: 427:     while (t_count<3){
  4706  00283C  BF09               	btfsc	(number_deploy@t_count+1)& (0+255),7,b
  4707  00283E  D759               	goto	l8060
  4708  002840  5109               	movf	(number_deploy@t_count+1)& (0+255),w,b
  4709  002842  E104               	bnz	u8640
  4710  002844  0E03               	movlw	3
  4711  002846  5D08               	subwf	number_deploy@t_count& (0+255),w,b
  4712  002848  A0D8               	btfss	status,0,c
  4713  00284A  D753               	goto	l8060
  4714  00284C                     u8640:
  4715                           
  4716                           ; BSR set to: 1
  4717                           ;main.c: 473:     return (int) t_count;
  4718  00284C  C108  F100         	movff	number_deploy@t_count,?_number_deploy
  4719  002850  C109  F101         	movff	number_deploy@t_count+1,?_number_deploy+1
  4720                           
  4721                           ; BSR set to: 1
  4722  002854  0012               	return		;funcret
  4723  002856                     __end_of_number_deploy:
  4724                           	opt callstack 0
  4725                           
  4726 ;; *************** function ___awdiv *****************
  4727 ;; Defined at:
  4728 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  dividend        2    0[BANK0 ] int 
  4731 ;;  divisor         2    2[BANK0 ] int 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  quotient        2    6[BANK0 ] int 
  4734 ;;  sign            1    5[BANK0 ] unsigned char 
  4735 ;;  counter         1    4[BANK0 ] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  2    0[BANK0 ] int 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4745 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;Total ram usage:        8 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    3
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_number_deploy
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text7
  4760  003808                     __ptext7:
  4761                           	opt callstack 0
  4762  003808                     ___awdiv:
  4763                           	opt callstack 26
  4764                           
  4765                           ; BSR set to: 1
  4766                           ;incstack = 0
  4767  003808  0E00               	movlw	0
  4768  00380A  0100               	movlb	0	; () banked
  4769  00380C  6F85               	movwf	___awdiv@sign& (0+255),b
  4770                           
  4771                           ; BSR set to: 0
  4772  00380E  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4773  003810  D006               	goto	l7808
  4774                           
  4775                           ; BSR set to: 0
  4776  003812  6D82               	negf	___awdiv@divisor& (0+255),b
  4777  003814  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4778  003816  B0D8               	btfsc	status,0,c
  4779  003818  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4780                           
  4781                           ; BSR set to: 0
  4782  00381A  0E01               	movlw	1
  4783  00381C  6F85               	movwf	___awdiv@sign& (0+255),b
  4784  00381E                     l7808:
  4785                           
  4786                           ; BSR set to: 0
  4787  00381E  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4788  003820  D006               	goto	l7814
  4789                           
  4790                           ; BSR set to: 0
  4791  003822  6D80               	negf	___awdiv@dividend& (0+255),b
  4792  003824  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4793  003826  B0D8               	btfsc	status,0,c
  4794  003828  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4795                           
  4796                           ; BSR set to: 0
  4797  00382A  0E01               	movlw	1
  4798  00382C  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  4799  00382E                     l7814:
  4800                           
  4801                           ; BSR set to: 0
  4802  00382E  0E00               	movlw	0
  4803  003830  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  4804  003832  0E00               	movlw	0
  4805  003834  6F86               	movwf	___awdiv@quotient& (0+255),b
  4806                           
  4807                           ; BSR set to: 0
  4808  003836  5182               	movf	___awdiv@divisor& (0+255),w,b
  4809  003838  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4810  00383A  B4D8               	btfsc	status,2,c
  4811  00383C  D01C               	goto	l7836
  4812                           
  4813                           ; BSR set to: 0
  4814  00383E  0E01               	movlw	1
  4815  003840  6F84               	movwf	___awdiv@counter& (0+255),b
  4816  003842  D004               	goto	l7822
  4817  003844                     l7820:
  4818                           
  4819                           ; BSR set to: 0
  4820  003844  90D8               	bcf	status,0,c
  4821  003846  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  4822  003848  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4823  00384A  2B84               	incf	___awdiv@counter& (0+255),f,b
  4824  00384C                     l7822:
  4825                           
  4826                           ; BSR set to: 0
  4827  00384C  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4828  00384E  D7FA               	goto	l7820
  4829  003850                     u8420:
  4830                           
  4831                           ; BSR set to: 0
  4832  003850  90D8               	bcf	status,0,c
  4833  003852  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  4834  003854  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4835                           
  4836                           ; BSR set to: 0
  4837  003856  5182               	movf	___awdiv@divisor& (0+255),w,b
  4838  003858  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  4839  00385A  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4840  00385C  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4841  00385E  A0D8               	btfss	status,0,c
  4842  003860  D005               	goto	l7832
  4843                           
  4844                           ; BSR set to: 0
  4845  003862  5182               	movf	___awdiv@divisor& (0+255),w,b
  4846  003864  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  4847  003866  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4848  003868  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4849                           
  4850                           ; BSR set to: 0
  4851  00386A  8186               	bsf	___awdiv@quotient& (0+255),0,b
  4852  00386C                     l7832:
  4853                           
  4854                           ; BSR set to: 0
  4855  00386C  90D8               	bcf	status,0,c
  4856  00386E  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4857  003870  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  4858                           
  4859                           ; BSR set to: 0
  4860  003872  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  4861  003874  D7ED               	goto	u8420
  4862  003876                     l7836:
  4863                           
  4864                           ; BSR set to: 0
  4865  003876  5185               	movf	___awdiv@sign& (0+255),w,b
  4866  003878  B4D8               	btfsc	status,2,c
  4867  00387A  D004               	goto	l7840
  4868                           
  4869                           ; BSR set to: 0
  4870  00387C  6D86               	negf	___awdiv@quotient& (0+255),b
  4871  00387E  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4872  003880  B0D8               	btfsc	status,0,c
  4873  003882  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4874  003884                     l7840:
  4875                           
  4876                           ; BSR set to: 0
  4877  003884  C086  F080         	movff	___awdiv@quotient,?___awdiv
  4878  003888  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  4879                           
  4880                           ; BSR set to: 0
  4881  00388C  0012               	return		;funcret
  4882  00388E                     __end_of___awdiv:
  4883                           	opt callstack 0
  4884                           
  4885 ;; *************** function _brake *****************
  4886 ;; Defined at:
  4887 ;;		line 673 in file "main.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;Total ram usage:        2 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:   14
  4908 ;; This function calls:
  4909 ;;		_I2C_Master_Read
  4910 ;;		_I2C_Master_Start
  4911 ;;		_I2C_Master_Stop
  4912 ;;		_I2C_Master_Write
  4913 ;;		_lcdInst
  4914 ;;		_printf
  4915 ;; This function is called by:
  4916 ;;		_main
  4917 ;;		_sense_tires
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text8
  4922  00358C                     __ptext8:
  4923                           	opt callstack 0
  4924  00358C                     _brake:
  4925                           	opt callstack 16
  4926                           
  4927                           ;main.c: 674:     I2C_Master_Start();
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;incstack = 0
  4931  00358C  ECF3  F01F         	call	_I2C_Master_Start	;wreg free
  4932                           
  4933                           ;main.c: 675:     I2C_Master_Write(0b00010000);
  4934  003590  0E00               	movlw	0
  4935  003592  0100               	movlb	0	; () banked
  4936  003594  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4937  003596  0E10               	movlw	16
  4938  003598  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4939  00359A  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  4940                           
  4941                           ;main.c: 676:     I2C_Master_Write('9');
  4942  00359E  0E00               	movlw	0
  4943  0035A0  0100               	movlb	0	; () banked
  4944  0035A2  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4945  0035A4  0E39               	movlw	57
  4946  0035A6  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4947  0035A8  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  4948                           
  4949                           ;main.c: 677:     I2C_Master_Stop();
  4950  0035AC  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  4951                           
  4952                           ;main.c: 678:     I2C_Master_Start();
  4953  0035B0  ECF3  F01F         	call	_I2C_Master_Start	;wreg free
  4954                           
  4955                           ;main.c: 679:     I2C_Master_Write(0b00010001);
  4956  0035B4  0E00               	movlw	0
  4957  0035B6  0100               	movlb	0	; () banked
  4958  0035B8  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  4959  0035BA  0E11               	movlw	17
  4960  0035BC  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  4961  0035BE  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  4962                           
  4963                           ;main.c: 680:     avg_dist = I2C_Master_Read(1);
  4964  0035C2  0E01               	movlw	1
  4965  0035C4  EC67  F01F         	call	_I2C_Master_Read
  4966  0035C8  0100               	movlb	0	; () banked
  4967  0035CA  6FFB               	movwf	??_brake& (0+255),b
  4968  0035CC  51FB               	movf	??_brake& (0+255),w,b
  4969  0035CE  6E44               	movwf	_avg_dist,c	;volatile
  4970  0035D0  6A45               	clrf	_avg_dist+1,c	;volatile
  4971  0035D2  6A46               	clrf	_avg_dist+2,c	;volatile
  4972  0035D4  6A47               	clrf	_avg_dist+3,c	;volatile
  4973                           
  4974                           ;main.c: 681:     I2C_Master_Stop();
  4975  0035D6  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  4976                           
  4977                           ;main.c: 682:     if(avg_dist){
  4978  0035DA  5044               	movf	_avg_dist,w,c	;volatile
  4979  0035DC  1045               	iorwf	_avg_dist+1,w,c	;volatile
  4980  0035DE  1046               	iorwf	_avg_dist+2,w,c	;volatile
  4981  0035E0  1047               	iorwf	_avg_dist+3,w,c	;volatile
  4982  0035E2  B4D8               	btfsc	status,2,c
  4983  0035E4  0012               	return	
  4984                           
  4985                           ;main.c: 685:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4986  0035E6  0E01               	movlw	1
  4987  0035E8  ECE2  F01F         	call	_lcdInst
  4988  0035EC  0E11               	movlw	17
  4989  0035EE  0100               	movlb	0	; () banked
  4990  0035F0  6FFB               	movwf	??_brake& (0+255),b
  4991  0035F2  0E3A               	movlw	58
  4992  0035F4                     u9537:
  4993  0035F4  2EE8               	decfsz	wreg,f,c
  4994  0035F6  D7FE               	bra	u9537
  4995  0035F8  2FFB               	decfsz	??_brake& (0+255),f,b
  4996  0035FA  D7FC               	bra	u9537
  4997  0035FC  F000               	nop	
  4998                           
  4999                           ;main.c: 693:         printf("%d",avg_dist);
  5000  0035FE  0E2A               	movlw	low (STR_60+13)
  5001  003600  0100               	movlb	0	; () banked
  5002  003602  6FED               	movwf	printf@fmt& (0+255),b
  5003  003604  0EFE               	movlw	high (STR_60+13)
  5004  003606  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5005  003608  C044  F0EF         	movff	_avg_dist,?_printf+2	;volatile
  5006  00360C  C045  F0F0         	movff	_avg_dist+1,?_printf+3	;volatile
  5007  003610  C046  F0F1         	movff	_avg_dist+2,?_printf+4	;volatile
  5008  003614  C047  F0F2         	movff	_avg_dist+3,?_printf+5	;volatile
  5009  003618  EC7C  F01F         	call	_printf	;wreg free
  5010                           
  5011                           ;main.c: 698:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  5012  00361C  0E0D               	movlw	13
  5013  00361E  0100               	movlb	0	; () banked
  5014  003620  6FFC               	movwf	(??_brake+1)& (0+255),b
  5015  003622  0EAF               	movlw	175
  5016  003624  6FFB               	movwf	??_brake& (0+255),b
  5017  003626  0EB6               	movlw	182
  5018  003628                     u9547:
  5019  003628  2EE8               	decfsz	wreg,f,c
  5020  00362A  D7FE               	bra	u9547
  5021  00362C  2FFB               	decfsz	??_brake& (0+255),f,b
  5022  00362E  D7FC               	bra	u9547
  5023  003630  2FFC               	decfsz	(??_brake+1)& (0+255),f,b
  5024  003632  D7FA               	bra	u9547
  5025  003634  F000               	nop	
  5026                           
  5027                           ;main.c: 700:     send = 1;
  5028  003636  0E01               	movlw	1
  5029  003638  6E6D               	movwf	_send,c
  5030  00363A  0012               	return		;funcret
  5031  00363C                     __end_of_brake:
  5032                           	opt callstack 0
  5033                           
  5034 ;; *************** function _backwards *****************
  5035 ;; Defined at:
  5036 ;;		line 715 in file "main.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;Total ram usage:        0 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    5
  5057 ;; This function calls:
  5058 ;;		_I2C_Master_Start
  5059 ;;		_I2C_Master_Stop
  5060 ;;		_I2C_Master_Write
  5061 ;; This function is called by:
  5062 ;;		_main
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text9
  5067  003F48                     __ptext9:
  5068                           	opt callstack 0
  5069  003F48                     _backwards:
  5070                           	opt callstack 25
  5071                           
  5072                           ;main.c: 716:     I2C_Master_Start();
  5073                           
  5074                           ;incstack = 0
  5075  003F48  ECF3  F01F         	call	_I2C_Master_Start	;wreg free
  5076                           
  5077                           ;main.c: 717:     I2C_Master_Write(0b00010000);
  5078  003F4C  0E00               	movlw	0
  5079  003F4E  0100               	movlb	0	; () banked
  5080  003F50  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5081  003F52  0E10               	movlw	16
  5082  003F54  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5083  003F56  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  5084                           
  5085                           ;main.c: 718:     I2C_Master_Write('5');
  5086  003F5A  0E00               	movlw	0
  5087  003F5C  0100               	movlb	0	; () banked
  5088  003F5E  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  5089  003F60  0E35               	movlw	53
  5090  003F62  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  5091  003F64  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  5092                           
  5093                           ;main.c: 719:     I2C_Master_Stop();
  5094  003F68  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  5095  003F6C  0012               	return		;funcret
  5096  003F6E                     __end_of_backwards:
  5097                           	opt callstack 0
  5098                           
  5099 ;; *************** function _actuators_main *****************
  5100 ;; Defined at:
  5101 ;;		line 3 in file "actuators_main.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  stack           2   18[BANK1 ] int 
  5104 ;;  steps2_adj      2   20[BANK1 ] int 
  5105 ;;  t_dep           2   22[BANK1 ] int 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  act_cnt         2   26[BANK1 ] int 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5117 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;Total ram usage:       10 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:   16
  5124 ;; This function calls:
  5125 ;;		_initLCD
  5126 ;;		_lcdInst
  5127 ;;		_printf
  5128 ;;		_servo
  5129 ;;		_stepper
  5130 ;;		_stepper2
  5131 ;;		_stepper2_back
  5132 ;;		_system_init
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text10
  5139  002856                     __ptext10:
  5140                           	opt callstack 0
  5141  002856                     _actuators_main:
  5142                           	opt callstack 14
  5143                           
  5144                           ;actuators_main.c: 4:     int act_cnt = 0;
  5145                           
  5146                           ;incstack = 0
  5147  002856  0E00               	movlw	0
  5148  002858  0101               	movlb	1	; () banked
  5149  00285A  6F1B               	movwf	(actuators_main@act_cnt+1)& (0+255),b
  5150  00285C  0E00               	movlw	0
  5151  00285E  6F1A               	movwf	actuators_main@act_cnt& (0+255),b
  5152                           
  5153                           ; BSR set to: 1
  5154                           ;actuators_main.c: 5:     system_init();
  5155  002860  ECD5  F01E         	call	_system_init	;wreg free
  5156                           
  5157                           ;actuators_main.c: 6:     initLCD();
  5158  002864  ECCB  F01C         	call	_initLCD	;wreg free
  5159                           
  5160                           ;actuators_main.c: 7:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  5161  002868  0E01               	movlw	1
  5162  00286A  ECE2  F01F         	call	_lcdInst
  5163  00286E  0E11               	movlw	17
  5164  002870  0101               	movlb	1	; () banked
  5165  002872  6F18               	movwf	??_actuators_main& (0+255),b
  5166  002874  0E3A               	movlw	58
  5167  002876                     u9557:
  5168  002876  2EE8               	decfsz	wreg,f,c
  5169  002878  D7FE               	bra	u9557
  5170  00287A  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5171  00287C  D7FC               	bra	u9557
  5172  00287E  F000               	nop	
  5173                           
  5174                           ;actuators_main.c: 8:     printf("cnt is %d",act_cnt);
  5175  002880  0ED9               	movlw	low STR_1
  5176  002882  0100               	movlb	0	; () banked
  5177  002884  6FED               	movwf	printf@fmt& (0+255),b
  5178  002886  0EFF               	movlw	high STR_1
  5179  002888  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5180  00288A  0E00               	movlw	0
  5181  00288C  6FF0               	movwf	(?_printf+3)& (0+255),b
  5182  00288E  0E00               	movlw	0
  5183  002890  6FEF               	movwf	(?_printf+2)& (0+255),b
  5184  002892  EC7C  F01F         	call	_printf	;wreg free
  5185                           
  5186                           ;actuators_main.c: 9:     _delay((unsigned long)((200)*(10000000/4000.0)));
  5187  002896  0E03               	movlw	3
  5188  002898  0101               	movlb	1	; () banked
  5189  00289A  6F19               	movwf	(??_actuators_main+1)& (0+255),b
  5190  00289C  0E8A               	movlw	138
  5191  00289E  6F18               	movwf	??_actuators_main& (0+255),b
  5192  0028A0  0E55               	movlw	85
  5193  0028A2                     u9567:
  5194  0028A2  2EE8               	decfsz	wreg,f,c
  5195  0028A4  D7FE               	bra	u9567
  5196  0028A6  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5197  0028A8  D7FC               	bra	u9567
  5198  0028AA  2F19               	decfsz	(??_actuators_main+1)& (0+255),f,b
  5199  0028AC  D7FA               	bra	u9567
  5200  0028AE  D000               	nop2	
  5201  0028B0                     l7878:
  5202                           
  5203                           ;actuators_main.c: 11:     if (act_cnt==0){
  5204  0028B0  0101               	movlb	1	; () banked
  5205  0028B2  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  5206  0028B4  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5207  0028B6  A4D8               	btfss	status,2,c
  5208  0028B8  D071               	goto	l7958
  5209                           
  5210                           ; BSR set to: 1
  5211                           ;actuators_main.c: 15:         stepper(stack, t_dep);
  5212  0028BA  C112  F100         	movff	actuators_main@stack,stepper@stack
  5213  0028BE  C113  F101         	movff	actuators_main@stack+1,stepper@stack+1
  5214  0028C2  C116  F102         	movff	actuators_main@t_dep,stepper@t_dep
  5215  0028C6  C117  F103         	movff	actuators_main@t_dep+1,stepper@t_dep+1
  5216  0028CA  ECD3  F014         	call	_stepper	;wreg free
  5217                           
  5218                           ;actuators_main.c: 16:         stepper2(0, steps2_adj);
  5219  0028CE  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5220  0028D2  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5221  0028D6  0E00               	movlw	0
  5222  0028D8  ECFB  F018         	call	_stepper2
  5223                           
  5224                           ;actuators_main.c: 17:                 stepper2_back(1, steps2_adj);
  5225  0028DC  C114  F100         	movff	actuators_main@steps2_adj,stepper2_back@steps2_adj
  5226  0028E0  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2_back@steps2_adj+1
  5227  0028E4  0E01               	movlw	1
  5228  0028E6  EC1E  F01B         	call	_stepper2_back
  5229                           
  5230                           ;actuators_main.c: 20:                 LATA = 0b00000000;
  5231  0028EA  0E00               	movlw	0
  5232  0028EC  6E89               	movwf	3977,c	;volatile
  5233                           
  5234                           ;actuators_main.c: 21:         LATCbits.LATC0 = 0;
  5235  0028EE  908B               	bcf	3979,0,c	;volatile
  5236                           
  5237                           ;actuators_main.c: 22:         LATEbits.LATE0 = 0;
  5238  0028F0  908D               	bcf	3981,0,c	;volatile
  5239                           
  5240                           ;actuators_main.c: 23:         LATEbits.LATE1 = 0;
  5241  0028F2  928D               	bcf	3981,1,c	;volatile
  5242                           
  5243                           ;actuators_main.c: 24:         LATEbits.LATE2 = 0;
  5244  0028F4  948D               	bcf	3981,2,c	;volatile
  5245                           
  5246                           ;actuators_main.c: 25:         LATCbits.LATC5 = 0;
  5247  0028F6  9A8B               	bcf	3979,5,c	;volatile
  5248                           
  5249                           ;actuators_main.c: 26:         LATCbits.LATC6 = 0;
  5250  0028F8  9C8B               	bcf	3979,6,c	;volatile
  5251                           
  5252                           ;actuators_main.c: 27:         LATCbits.LATC7 = 0;
  5253  0028FA  9E8B               	bcf	3979,7,c	;volatile
  5254                           
  5255                           ;actuators_main.c: 28:         LATAbits.LATA5 = 0;
  5256  0028FC  9A89               	bcf	3977,5,c	;volatile
  5257                           
  5258                           ;actuators_main.c: 30:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5259  0028FE  0E01               	movlw	1
  5260  002900  ECE2  F01F         	call	_lcdInst
  5261  002904  0E11               	movlw	17
  5262  002906  0101               	movlb	1	; () banked
  5263  002908  6F18               	movwf	??_actuators_main& (0+255),b
  5264  00290A  0E3A               	movlw	58
  5265  00290C                     u9577:
  5266  00290C  2EE8               	decfsz	wreg,f,c
  5267  00290E  D7FE               	bra	u9577
  5268  002910  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5269  002912  D7FC               	bra	u9577
  5270  002914  F000               	nop	
  5271                           
  5272                           ;actuators_main.c: 31:         printf("Stepper done");
  5273  002916  0E0A               	movlw	low STR_2
  5274  002918  0100               	movlb	0	; () banked
  5275  00291A  6FED               	movwf	printf@fmt& (0+255),b
  5276  00291C  0EFF               	movlw	high STR_2
  5277  00291E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5278  002920  EC7C  F01F         	call	_printf	;wreg free
  5279                           
  5280                           ;actuators_main.c: 33:         servo();
  5281  002924  ECBC  F01B         	call	_servo	;wreg free
  5282                           
  5283                           ;actuators_main.c: 34:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/400
      +                          0.0)));};
  5284  002928  0E01               	movlw	1
  5285  00292A  ECE2  F01F         	call	_lcdInst
  5286  00292E  0E11               	movlw	17
  5287  002930  0101               	movlb	1	; () banked
  5288  002932  6F18               	movwf	??_actuators_main& (0+255),b
  5289  002934  0E3A               	movlw	58
  5290  002936                     u9587:
  5291  002936  2EE8               	decfsz	wreg,f,c
  5292  002938  D7FE               	bra	u9587
  5293  00293A  2F18               	decfsz	??_actuators_main& (0+255),f,b
  5294  00293C  D7FC               	bra	u9587
  5295  00293E  F000               	nop	
  5296                           
  5297                           ;actuators_main.c: 35:         printf("Servo done");
  5298  002940  0E74               	movlw	low STR_3
  5299  002942  0100               	movlb	0	; () banked
  5300  002944  6FED               	movwf	printf@fmt& (0+255),b
  5301  002946  0EFF               	movlw	high STR_3
  5302  002948  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5303  00294A  EC7C  F01F         	call	_printf	;wreg free
  5304                           
  5305                           ;actuators_main.c: 36:                 LATA = 0b00000000;
  5306  00294E  0E00               	movlw	0
  5307  002950  6E89               	movwf	3977,c	;volatile
  5308                           
  5309                           ;actuators_main.c: 37:         LATCbits.LATC0 = 0;
  5310  002952  908B               	bcf	3979,0,c	;volatile
  5311                           
  5312                           ;actuators_main.c: 38:         LATEbits.LATE0 = 0;
  5313  002954  908D               	bcf	3981,0,c	;volatile
  5314                           
  5315                           ;actuators_main.c: 39:         LATEbits.LATE1 = 0;
  5316  002956  928D               	bcf	3981,1,c	;volatile
  5317                           
  5318                           ;actuators_main.c: 40:         LATEbits.LATE2 = 0;
  5319  002958  948D               	bcf	3981,2,c	;volatile
  5320                           
  5321                           ;actuators_main.c: 41:         LATCbits.LATC5 = 0;
  5322  00295A  9A8B               	bcf	3979,5,c	;volatile
  5323                           
  5324                           ;actuators_main.c: 42:         LATCbits.LATC6 = 0;
  5325  00295C  9C8B               	bcf	3979,6,c	;volatile
  5326                           
  5327                           ;actuators_main.c: 43:         LATCbits.LATC7 = 0;
  5328  00295E  9E8B               	bcf	3979,7,c	;volatile
  5329                           
  5330                           ;actuators_main.c: 44:         LATAbits.LATA5 = 0;
  5331  002960  9A89               	bcf	3977,5,c	;volatile
  5332                           
  5333                           ;actuators_main.c: 48:         if (t_dep%2!=0){
  5334  002962  0101               	movlb	1	; () banked
  5335  002964  A116               	btfss	actuators_main@t_dep& (0+255),0,b
  5336  002966  D006               	goto	l7936
  5337                           
  5338                           ; BSR set to: 1
  5339                           ;actuators_main.c: 49:             steps2_adj = steps2_adj+1;
  5340  002968  0E01               	movlw	1
  5341  00296A  2514               	addwf	actuators_main@steps2_adj& (0+255),w,b
  5342  00296C  6F14               	movwf	actuators_main@steps2_adj& (0+255),b
  5343  00296E  0E00               	movlw	0
  5344  002970  2115               	addwfc	(actuators_main@steps2_adj+1)& (0+255),w,b
  5345  002972  6F15               	movwf	(actuators_main@steps2_adj+1)& (0+255),b
  5346  002974                     l7936:
  5347                           
  5348                           ; BSR set to: 1
  5349                           ;actuators_main.c: 51:         stepper2(1, steps2_adj);
  5350  002974  C114  F100         	movff	actuators_main@steps2_adj,stepper2@steps2_adj
  5351  002978  C115  F101         	movff	actuators_main@steps2_adj+1,stepper2@steps2_adj+1
  5352  00297C  0E01               	movlw	1
  5353  00297E  ECFB  F018         	call	_stepper2
  5354                           
  5355                           ;actuators_main.c: 52:                         LATA = 0b00000000;
  5356  002982  0E00               	movlw	0
  5357  002984  6E89               	movwf	3977,c	;volatile
  5358                           
  5359                           ;actuators_main.c: 53:         LATCbits.LATC0 = 0;
  5360  002986  908B               	bcf	3979,0,c	;volatile
  5361                           
  5362                           ;actuators_main.c: 54:         LATEbits.LATE0 = 0;
  5363  002988  908D               	bcf	3981,0,c	;volatile
  5364                           
  5365                           ;actuators_main.c: 55:         LATEbits.LATE1 = 0;
  5366  00298A  928D               	bcf	3981,1,c	;volatile
  5367                           
  5368                           ;actuators_main.c: 56:         LATEbits.LATE2 = 0;
  5369  00298C  948D               	bcf	3981,2,c	;volatile
  5370                           
  5371                           ;actuators_main.c: 57:         LATCbits.LATC5 = 0;
  5372  00298E  9A8B               	bcf	3979,5,c	;volatile
  5373                           
  5374                           ;actuators_main.c: 58:         LATCbits.LATC6 = 0;
  5375  002990  9C8B               	bcf	3979,6,c	;volatile
  5376                           
  5377                           ;actuators_main.c: 59:         LATCbits.LATC7 = 0;
  5378  002992  9E8B               	bcf	3979,7,c	;volatile
  5379                           
  5380                           ;actuators_main.c: 60:         LATAbits.LATA5 = 0;
  5381  002994  9A89               	bcf	3977,5,c	;volatile
  5382                           
  5383                           ;actuators_main.c: 61:         act_cnt++;
  5384  002996  0101               	movlb	1	; () banked
  5385  002998  4B1A               	infsnz	actuators_main@act_cnt& (0+255),f,b
  5386  00299A  2B1B               	incf	(actuators_main@act_cnt+1)& (0+255),f,b
  5387  00299C                     l7958:
  5388                           
  5389                           ; BSR set to: 1
  5390                           ;actuators_main.c: 64:     if(act_cnt){
  5391  00299C  511A               	movf	actuators_main@act_cnt& (0+255),w,b
  5392  00299E  111B               	iorwf	(actuators_main@act_cnt+1)& (0+255),w,b
  5393  0029A0  A4D8               	btfss	status,2,c
  5394  0029A2  0012               	return	
  5395  0029A4  D785               	goto	l7878
  5396  0029A6                     __end_of_actuators_main:
  5397                           	opt callstack 0
  5398                           
  5399 ;; *************** function _system_init *****************
  5400 ;; Defined at:
  5401 ;;		line 74 in file "actuators_main.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;		None
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;Total ram usage:        0 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    3
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_actuators_main
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text11
  5430  003DAA                     __ptext11:
  5431                           	opt callstack 0
  5432  003DAA                     _system_init:
  5433                           	opt callstack 26
  5434                           
  5435                           ;actuators_main.c: 75:     TRISB = 0x00;
  5436                           
  5437                           ; BSR set to: 1
  5438                           ;incstack = 0
  5439  003DAA  0E00               	movlw	0
  5440  003DAC  6E93               	movwf	3987,c	;volatile
  5441                           
  5442                           ;actuators_main.c: 77:     LATB = 0x0F;
  5443  003DAE  0E0F               	movlw	15
  5444  003DB0  6E8A               	movwf	3978,c	;volatile
  5445                           
  5446                           ;actuators_main.c: 78:     TRISA = 0x00;
  5447  003DB2  0E00               	movlw	0
  5448  003DB4  6E92               	movwf	3986,c	;volatile
  5449                           
  5450                           ;actuators_main.c: 79:     LATA = 0x0F;
  5451  003DB6  0E0F               	movlw	15
  5452  003DB8  6E89               	movwf	3977,c	;volatile
  5453                           
  5454                           ;actuators_main.c: 81:     TRISCbits.TRISC1 = 0;
  5455  003DBA  9294               	bcf	3988,1,c	;volatile
  5456                           
  5457                           ;actuators_main.c: 84:     TRISCbits.TRISC2 = 0;
  5458  003DBC  9494               	bcf	3988,2,c	;volatile
  5459                           
  5460                           ;actuators_main.c: 87:     LATD = 0x00;
  5461  003DBE  0E00               	movlw	0
  5462  003DC0  6E8C               	movwf	3980,c	;volatile
  5463                           
  5464                           ;actuators_main.c: 88:     TRISD = 0x00;
  5465  003DC2  0E00               	movlw	0
  5466  003DC4  6E95               	movwf	3989,c	;volatile
  5467                           
  5468                           ;actuators_main.c: 90:     ADCON1 = 0b00001111;
  5469  003DC6  0E0F               	movlw	15
  5470  003DC8  6EC1               	movwf	4033,c	;volatile
  5471                           
  5472                           ;actuators_main.c: 92:     TRISC = 0x00;
  5473  003DCA  0E00               	movlw	0
  5474  003DCC  6E94               	movwf	3988,c	;volatile
  5475                           
  5476                           ;actuators_main.c: 93:     LATC = 0x00;
  5477  003DCE  0E00               	movlw	0
  5478  003DD0  6E8B               	movwf	3979,c	;volatile
  5479                           
  5480                           ;actuators_main.c: 94:     TRISE = 0x00;
  5481  003DD2  0E00               	movlw	0
  5482  003DD4  6E96               	movwf	3990,c	;volatile
  5483                           
  5484                           ;actuators_main.c: 95:     LATE = 0x00;
  5485  003DD6  0E00               	movlw	0
  5486  003DD8  6E8D               	movwf	3981,c	;volatile
  5487  003DDA  0012               	return		;funcret
  5488  003DDC                     __end_of_system_init:
  5489                           	opt callstack 0
  5490                           
  5491 ;; *************** function _stepper2_back *****************
  5492 ;; Defined at:
  5493 ;;		line 576 in file "actuators_main.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;  direction       1    wreg     unsigned char 
  5496 ;;  steps2_adj      2    0[BANK1 ] int 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  direction       1    3[BANK1 ] unsigned char 
  5499 ;;  i               2    6[BANK1 ] int 
  5500 ;;  count_steppe    2    4[BANK1 ] int 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5510 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;Total ram usage:        8 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:   15
  5517 ;; This function calls:
  5518 ;;		_full_drive
  5519 ;;		_lcdInst
  5520 ;;		_printf
  5521 ;; This function is called by:
  5522 ;;		_actuators_main
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text12
  5527  00363C                     __ptext12:
  5528                           	opt callstack 0
  5529  00363C                     _stepper2_back:
  5530                           	opt callstack 14
  5531                           
  5532                           ;incstack = 0
  5533                           ;stepper2_back@direction stored from wreg
  5534  00363C  0101               	movlb	1	; () banked
  5535  00363E  6F03               	movwf	stepper2_back@direction& (0+255),b
  5536                           
  5537                           ;actuators_main.c: 594:     int count_stepper = 0;
  5538  003640  0E00               	movlw	0
  5539  003642  0101               	movlb	1	; () banked
  5540  003644  6F05               	movwf	(stepper2_back@count_stepper+1)& (0+255),b
  5541  003646  0E00               	movlw	0
  5542  003648  6F04               	movwf	stepper2_back@count_stepper& (0+255),b
  5543                           
  5544                           ; BSR set to: 1
  5545                           ;actuators_main.c: 597:             { lcdInst(0x01); _delay((unsigned long)((5)*(1000000
      +                          0/4000.0)));};
  5546                           
  5547                           ; BSR set to: 1
  5548                           ;actuators_main.c: 596:         if (count_stepper<1){
  5549  00364A  0E01               	movlw	1
  5550  00364C  ECE2  F01F         	call	_lcdInst
  5551  003650  0E11               	movlw	17
  5552  003652  0101               	movlb	1	; () banked
  5553  003654  6F02               	movwf	??_stepper2_back& (0+255),b
  5554  003656  0E3A               	movlw	58
  5555  003658                     u9597:
  5556  003658  2EE8               	decfsz	wreg,f,c
  5557  00365A  D7FE               	bra	u9597
  5558  00365C  2F02               	decfsz	??_stepper2_back& (0+255),f,b
  5559  00365E  D7FC               	bra	u9597
  5560  003660  F000               	nop	
  5561                           
  5562                           ;actuators_main.c: 598:             printf("step1");
  5563  003662  0EF4               	movlw	low STR_6
  5564  003664  0100               	movlb	0	; () banked
  5565  003666  6FED               	movwf	printf@fmt& (0+255),b
  5566  003668  0EFF               	movlw	high STR_6
  5567  00366A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5568  00366C  EC7C  F01F         	call	_printf	;wreg free
  5569  003670  0EC0               	movlw	192
  5570  003672  ECE2  F01F         	call	_lcdInst
  5571                           
  5572                           ;actuators_main.c: 600:             printf("Step speed %d",4);
  5573  003676  0EE2               	movlw	low STR_7
  5574  003678  0100               	movlb	0	; () banked
  5575  00367A  6FED               	movwf	printf@fmt& (0+255),b
  5576  00367C  0EFE               	movlw	high STR_7
  5577  00367E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5578  003680  0E00               	movlw	0
  5579  003682  6FF0               	movwf	(?_printf+3)& (0+255),b
  5580  003684  0E04               	movlw	4
  5581  003686  6FEF               	movwf	(?_printf+2)& (0+255),b
  5582  003688  EC7C  F01F         	call	_printf	;wreg free
  5583                           
  5584                           ;actuators_main.c: 601:             for(int i=0;i<5;i++){
  5585  00368C  0E00               	movlw	0
  5586  00368E  0101               	movlb	1	; () banked
  5587  003690  6F07               	movwf	(stepper2_back@i+1)& (0+255),b
  5588  003692  0E00               	movlw	0
  5589  003694  6F06               	movwf	stepper2_back@i& (0+255),b
  5590  003696                     l7630:
  5591                           
  5592                           ; BSR set to: 1
  5593                           ;actuators_main.c: 603:                 full_drive(direction, 2);
  5594  003696  0E00               	movlw	0
  5595  003698  0100               	movlb	0	; () banked
  5596  00369A  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5597  00369C  0E02               	movlw	2
  5598  00369E  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5599  0036A0  0101               	movlb	1	; () banked
  5600  0036A2  5103               	movf	stepper2_back@direction& (0+255),w,b
  5601  0036A4  EC73  F00C         	call	_full_drive
  5602                           
  5603                           ;actuators_main.c: 605:             }
  5604  0036A8  0101               	movlb	1	; () banked
  5605  0036AA  4B06               	infsnz	stepper2_back@i& (0+255),f,b
  5606  0036AC  2B07               	incf	(stepper2_back@i+1)& (0+255),f,b
  5607                           
  5608                           ; BSR set to: 1
  5609  0036AE  BF07               	btfsc	(stepper2_back@i+1)& (0+255),7,b
  5610  0036B0  D7F2               	goto	l7630
  5611  0036B2  5107               	movf	(stepper2_back@i+1)& (0+255),w,b
  5612  0036B4  E104               	bnz	u8090
  5613  0036B6  0E05               	movlw	5
  5614  0036B8  5D06               	subwf	stepper2_back@i& (0+255),w,b
  5615  0036BA  A0D8               	btfss	status,0,c
  5616  0036BC  D7EC               	goto	l7630
  5617  0036BE                     u8090:
  5618                           
  5619                           ; BSR set to: 1
  5620                           ;actuators_main.c: 606:             printf("cnt is %d", count_stepper);
  5621  0036BE  0ED9               	movlw	low STR_1
  5622  0036C0  0100               	movlb	0	; () banked
  5623  0036C2  6FED               	movwf	printf@fmt& (0+255),b
  5624  0036C4  0EFF               	movlw	high STR_1
  5625  0036C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5626  0036C8  C104  F0EF         	movff	stepper2_back@count_stepper,?_printf+2
  5627  0036CC  C105  F0F0         	movff	stepper2_back@count_stepper+1,?_printf+3
  5628  0036D0  EC7C  F01F         	call	_printf	;wreg free
  5629                           
  5630                           ;actuators_main.c: 607:             count_stepper++;
  5631  0036D4  0101               	movlb	1	; () banked
  5632  0036D6  4B04               	infsnz	stepper2_back@count_stepper& (0+255),f,b
  5633  0036D8  2B05               	incf	(stepper2_back@count_stepper+1)& (0+255),f,b
  5634                           
  5635                           ; BSR set to: 1
  5636  0036DA  0012               	return		;funcret
  5637  0036DC                     __end_of_stepper2_back:
  5638                           	opt callstack 0
  5639                           
  5640 ;; *************** function _stepper2 *****************
  5641 ;; Defined at:
  5642 ;;		line 491 in file "actuators_main.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  direction       1    wreg     unsigned char 
  5645 ;;  steps2_adj      2    0[BANK1 ] int 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  direction       1   13[BANK1 ] unsigned char 
  5648 ;;  i               2    9[BANK1 ] int 
  5649 ;;  i               2    7[BANK1 ] int 
  5650 ;;  count_steppe    2   11[BANK1 ] int 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      void 
  5653 ;; Registers used:
  5654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5660 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;Total ram usage:       14 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:   15
  5667 ;; This function calls:
  5668 ;;		_full_drive
  5669 ;;		_lcdInst
  5670 ;;		_printf
  5671 ;; This function is called by:
  5672 ;;		_actuators_main
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text13
  5677  0031F6                     __ptext13:
  5678                           	opt callstack 0
  5679  0031F6                     _stepper2:
  5680                           	opt callstack 14
  5681                           
  5682                           ; BSR set to: 1
  5683                           ;incstack = 0
  5684                           ;stepper2@direction stored from wreg
  5685  0031F6  0101               	movlb	1	; () banked
  5686  0031F8  6F0D               	movwf	stepper2@direction& (0+255),b
  5687                           
  5688                           ;actuators_main.c: 509:     int count_stepper = 0;
  5689  0031FA  0E00               	movlw	0
  5690  0031FC  0101               	movlb	1	; () banked
  5691  0031FE  6F0C               	movwf	(stepper2@count_stepper+1)& (0+255),b
  5692  003200  0E00               	movlw	0
  5693  003202  6F0B               	movwf	stepper2@count_stepper& (0+255),b
  5694                           
  5695                           ; BSR set to: 1
  5696                           ;actuators_main.c: 512:     if (direction == 0){
  5697                           
  5698                           ; BSR set to: 1
  5699                           ;actuators_main.c: 511:         if (count_stepper<1){
  5700  003204  510D               	movf	stepper2@direction& (0+255),w,b
  5701  003206  A4D8               	btfss	status,2,c
  5702  003208  D029               	goto	l7592
  5703                           
  5704                           ; BSR set to: 1
  5705                           ;actuators_main.c: 517:             for(int i=0;i<steps2_adj;i++){
  5706  00320A  0E00               	movlw	0
  5707  00320C  6F08               	movwf	(stepper2@i+1)& (0+255),b
  5708  00320E  0E00               	movlw	0
  5709  003210  6F07               	movwf	stepper2@i& (0+255),b
  5710  003212  D00C               	goto	l7586
  5711  003214                     l7582:
  5712                           
  5713                           ; BSR set to: 1
  5714                           ;actuators_main.c: 519:                 full_drive(direction, 2);
  5715  003214  0E00               	movlw	0
  5716  003216  0100               	movlb	0	; () banked
  5717  003218  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5718  00321A  0E02               	movlw	2
  5719  00321C  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5720  00321E  0101               	movlb	1	; () banked
  5721  003220  510D               	movf	stepper2@direction& (0+255),w,b
  5722  003222  EC73  F00C         	call	_full_drive
  5723                           
  5724                           ;actuators_main.c: 521:             }
  5725  003226  0101               	movlb	1	; () banked
  5726  003228  4B07               	infsnz	stepper2@i& (0+255),f,b
  5727  00322A  2B08               	incf	(stepper2@i+1)& (0+255),f,b
  5728  00322C                     l7586:
  5729                           
  5730                           ; BSR set to: 1
  5731  00322C  5100               	movf	stepper2@steps2_adj& (0+255),w,b
  5732  00322E  5D07               	subwf	stepper2@i& (0+255),w,b
  5733  003230  5108               	movf	(stepper2@i+1)& (0+255),w,b
  5734  003232  0A80               	xorlw	128
  5735  003234  6F02               	movwf	??_stepper2& (0+255),b
  5736  003236  5101               	movf	(stepper2@steps2_adj+1)& (0+255),w,b
  5737  003238  0A80               	xorlw	128
  5738  00323A  5902               	subwfb	??_stepper2& (0+255),w,b
  5739  00323C  A0D8               	btfss	status,0,c
  5740  00323E  D7EA               	goto	l7582
  5741                           
  5742                           ; BSR set to: 1
  5743                           ;actuators_main.c: 522:             printf("cnt is %d", count_stepper);
  5744  003240  0ED9               	movlw	low STR_1
  5745  003242  0100               	movlb	0	; () banked
  5746  003244  6FED               	movwf	printf@fmt& (0+255),b
  5747  003246  0EFF               	movlw	high STR_1
  5748  003248  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5749  00324A  C10B  F0EF         	movff	stepper2@count_stepper,?_printf+2
  5750  00324E  C10C  F0F0         	movff	stepper2@count_stepper+1,?_printf+3
  5751  003252  EC7C  F01F         	call	_printf	;wreg free
  5752                           
  5753                           ;actuators_main.c: 523:             count_stepper++;
  5754  003256  0101               	movlb	1	; () banked
  5755  003258  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5756  00325A  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5757  00325C                     l7592:
  5758                           
  5759                           ; BSR set to: 1
  5760                           ;actuators_main.c: 525:     if (direction == 1){
  5761  00325C  050D               	decf	stepper2@direction& (0+255),w,b
  5762  00325E  A4D8               	btfss	status,2,c
  5763  003260  0012               	return	
  5764                           
  5765                           ; BSR set to: 1
  5766                           ;actuators_main.c: 526:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/40
      +                          00.0)));};
  5767  003262  0E01               	movlw	1
  5768  003264  ECE2  F01F         	call	_lcdInst
  5769  003268  0E11               	movlw	17
  5770  00326A  0101               	movlb	1	; () banked
  5771  00326C  6F02               	movwf	??_stepper2& (0+255),b
  5772  00326E  0E3A               	movlw	58
  5773  003270                     u9607:
  5774  003270  2EE8               	decfsz	wreg,f,c
  5775  003272  D7FE               	bra	u9607
  5776  003274  2F02               	decfsz	??_stepper2& (0+255),f,b
  5777  003276  D7FC               	bra	u9607
  5778  003278  F000               	nop	
  5779                           
  5780                           ;actuators_main.c: 527:                         printf("steppp %d", steps2_adj-(5));
  5781  00327A  0ECF               	movlw	low STR_5
  5782  00327C  0100               	movlb	0	; () banked
  5783  00327E  6FED               	movwf	printf@fmt& (0+255),b
  5784  003280  0EFF               	movlw	high STR_5
  5785  003282  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  5786  003284  0EFB               	movlw	251
  5787  003286  0101               	movlb	1	; () banked
  5788  003288  2500               	addwf	stepper2@steps2_adj& (0+255),w,b
  5789  00328A  0100               	movlb	0	; () banked
  5790  00328C  6FEF               	movwf	(?_printf+2)& (0+255),b
  5791  00328E  0EFF               	movlw	255
  5792  003290  0101               	movlb	1	; () banked
  5793  003292  2101               	addwfc	(stepper2@steps2_adj+1)& (0+255),w,b
  5794  003294  0100               	movlb	0	; () banked
  5795  003296  6FF0               	movwf	(?_printf+3)& (0+255),b
  5796  003298  EC7C  F01F         	call	_printf	;wreg free
  5797                           
  5798                           ;actuators_main.c: 529:                 for(int i=0;i<(steps2_adj-(5));i++){
  5799  00329C  0E00               	movlw	0
  5800  00329E  0101               	movlb	1	; () banked
  5801  0032A0  6F0A               	movwf	(stepper2@i_489+1)& (0+255),b
  5802  0032A2  0E00               	movlw	0
  5803  0032A4  6F09               	movwf	stepper2@i_489& (0+255),b
  5804  0032A6  D00C               	goto	l7606
  5805  0032A8                     l7602:
  5806                           
  5807                           ; BSR set to: 1
  5808                           ;actuators_main.c: 531:                     full_drive(direction, 2);
  5809  0032A8  0E00               	movlw	0
  5810  0032AA  0100               	movlb	0	; () banked
  5811  0032AC  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5812  0032AE  0E02               	movlw	2
  5813  0032B0  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5814  0032B2  0101               	movlb	1	; () banked
  5815  0032B4  510D               	movf	stepper2@direction& (0+255),w,b
  5816  0032B6  EC73  F00C         	call	_full_drive
  5817                           
  5818                           ;actuators_main.c: 533:                 }
  5819  0032BA  0101               	movlb	1	; () banked
  5820  0032BC  4B09               	infsnz	stepper2@i_489& (0+255),f,b
  5821  0032BE  2B0A               	incf	(stepper2@i_489+1)& (0+255),f,b
  5822  0032C0                     l7606:
  5823                           
  5824                           ; BSR set to: 1
  5825  0032C0  0EFB               	movlw	251
  5826  0032C2  6F02               	movwf	??_stepper2& (0+255),b
  5827  0032C4  0EFF               	movlw	255
  5828  0032C6  6F03               	movwf	(??_stepper2+1)& (0+255),b
  5829  0032C8  C100  F104         	movff	stepper2@steps2_adj,??_stepper2+2
  5830  0032CC  C101  F105         	movff	stepper2@steps2_adj+1,??_stepper2+3
  5831  0032D0  5102               	movf	??_stepper2& (0+255),w,b
  5832  0032D2  2704               	addwf	(??_stepper2+2)& (0+255),f,b
  5833  0032D4  5103               	movf	(??_stepper2+1)& (0+255),w,b
  5834  0032D6  2305               	addwfc	(??_stepper2+3)& (0+255),f,b
  5835  0032D8  5104               	movf	(??_stepper2+2)& (0+255),w,b
  5836  0032DA  5D09               	subwf	stepper2@i_489& (0+255),w,b
  5837  0032DC  510A               	movf	(stepper2@i_489+1)& (0+255),w,b
  5838  0032DE  0A80               	xorlw	128
  5839  0032E0  6F06               	movwf	(??_stepper2+4)& (0+255),b
  5840  0032E2  5105               	movf	(??_stepper2+3)& (0+255),w,b
  5841  0032E4  0A80               	xorlw	128
  5842  0032E6  5906               	subwfb	(??_stepper2+4)& (0+255),w,b
  5843  0032E8  A0D8               	btfss	status,0,c
  5844  0032EA  D7DE               	goto	l7602
  5845                           
  5846                           ; BSR set to: 1
  5847                           ;actuators_main.c: 534:                 count_stepper++;
  5848  0032EC  4B0B               	infsnz	stepper2@count_stepper& (0+255),f,b
  5849  0032EE  2B0C               	incf	(stepper2@count_stepper+1)& (0+255),f,b
  5850                           
  5851                           ; BSR set to: 1
  5852  0032F0  0012               	return		;funcret
  5853  0032F2                     __end_of_stepper2:
  5854                           	opt callstack 0
  5855                           
  5856 ;; *************** function _stepper *****************
  5857 ;; Defined at:
  5858 ;;		line 426 in file "actuators_main.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  stack           2    0[BANK1 ] int 
  5861 ;;  t_dep           2    2[BANK1 ] int 
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;  i               2   16[BANK1 ] int 
  5864 ;;  i               2   14[BANK1 ] int 
  5865 ;;  i               2   12[BANK1 ] int 
  5866 ;;  i               2   10[BANK1 ] int 
  5867 ;;  count_steppe    2    8[BANK1 ] int 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5877 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5878 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5881 ;;Total ram usage:       18 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:   15
  5884 ;; This function calls:
  5885 ;;		_full_drive
  5886 ;; This function is called by:
  5887 ;;		_actuators_main
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text14
  5892  0029A6                     __ptext14:
  5893                           	opt callstack 0
  5894  0029A6                     _stepper:
  5895                           	opt callstack 14
  5896                           
  5897                           ;actuators_main.c: 427:     int count_stepper = 0;
  5898                           
  5899                           ; BSR set to: 1
  5900                           ;incstack = 0
  5901  0029A6  0E00               	movlw	0
  5902  0029A8  0101               	movlb	1	; () banked
  5903  0029AA  6F09               	movwf	(stepper@count_stepper+1)& (0+255),b
  5904  0029AC  0E00               	movlw	0
  5905  0029AE  6F08               	movwf	stepper@count_stepper& (0+255),b
  5906                           
  5907                           ; BSR set to: 1
  5908                           ;actuators_main.c: 436:             if (stack == 1){
  5909                           
  5910                           ; BSR set to: 1
  5911                           ;actuators_main.c: 430:         if (count_stepper<1){
  5912  0029B0  0500               	decf	stepper@stack& (0+255),w,b
  5913  0029B2  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  5914  0029B4  A4D8               	btfss	status,2,c
  5915  0029B6  D03E               	goto	u7990
  5916                           
  5917                           ; BSR set to: 1
  5918                           ;actuators_main.c: 437:                 if (t_dep<=3){
  5919  0029B8  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5920  0029BA  D006               	goto	u7960
  5921  0029BC  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5922  0029BE  E11B               	bnz	l7528
  5923  0029C0  0E04               	movlw	4
  5924  0029C2  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5925  0029C4  B0D8               	btfsc	status,0,c
  5926  0029C6  D017               	goto	u7970
  5927  0029C8                     u7960:
  5928                           
  5929                           ; BSR set to: 1
  5930                           ;actuators_main.c: 438:                     for(int i=0;i<14;i++){
  5931  0029C8  0E00               	movlw	0
  5932  0029CA  6F0B               	movwf	(stepper@i+1)& (0+255),b
  5933  0029CC  0E00               	movlw	0
  5934  0029CE  6F0A               	movwf	stepper@i& (0+255),b
  5935  0029D0                     l7522:
  5936                           
  5937                           ; BSR set to: 1
  5938                           ;actuators_main.c: 440:                         full_drive(0, 1);
  5939  0029D0  0E00               	movlw	0
  5940  0029D2  0100               	movlb	0	; () banked
  5941  0029D4  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5942  0029D6  0E01               	movlw	1
  5943  0029D8  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5944  0029DA  0E00               	movlw	0
  5945  0029DC  EC73  F00C         	call	_full_drive
  5946                           
  5947                           ;actuators_main.c: 442:                     }
  5948  0029E0  0101               	movlb	1	; () banked
  5949  0029E2  4B0A               	infsnz	stepper@i& (0+255),f,b
  5950  0029E4  2B0B               	incf	(stepper@i+1)& (0+255),f,b
  5951                           
  5952                           ; BSR set to: 1
  5953  0029E6  BF0B               	btfsc	(stepper@i+1)& (0+255),7,b
  5954  0029E8  D7F3               	goto	l7522
  5955  0029EA  510B               	movf	(stepper@i+1)& (0+255),w,b
  5956  0029EC  E104               	bnz	u7970
  5957  0029EE  0E0E               	movlw	14
  5958  0029F0  5D0A               	subwf	stepper@i& (0+255),w,b
  5959  0029F2  A0D8               	btfss	status,0,c
  5960  0029F4  D7ED               	goto	l7522
  5961  0029F6                     u7970:
  5962  0029F6                     l7528:
  5963                           
  5964                           ; BSR set to: 1
  5965                           ;actuators_main.c: 444:                 if (t_dep>3){
  5966  0029F6  BF03               	btfsc	(stepper@t_dep+1)& (0+255),7,b
  5967  0029F8  D01D               	goto	u7990
  5968  0029FA  5103               	movf	(stepper@t_dep+1)& (0+255),w,b
  5969  0029FC  E104               	bnz	u7980
  5970  0029FE  0E04               	movlw	4
  5971  002A00  5D02               	subwf	stepper@t_dep& (0+255),w,b
  5972  002A02  A0D8               	btfss	status,0,c
  5973  002A04  D017               	goto	u7990
  5974  002A06                     u7980:
  5975                           
  5976                           ; BSR set to: 1
  5977                           ;actuators_main.c: 445:                     for(int i=0;i<14 -1;i++){
  5978  002A06  0E00               	movlw	0
  5979  002A08  6F0D               	movwf	(stepper@i_479+1)& (0+255),b
  5980  002A0A  0E00               	movlw	0
  5981  002A0C  6F0C               	movwf	stepper@i_479& (0+255),b
  5982  002A0E                     l7536:
  5983                           
  5984                           ; BSR set to: 1
  5985                           ;actuators_main.c: 447:                         full_drive(0, 1);
  5986  002A0E  0E00               	movlw	0
  5987  002A10  0100               	movlb	0	; () banked
  5988  002A12  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  5989  002A14  0E01               	movlw	1
  5990  002A16  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  5991  002A18  0E00               	movlw	0
  5992  002A1A  EC73  F00C         	call	_full_drive
  5993                           
  5994                           ;actuators_main.c: 449:                     }
  5995  002A1E  0101               	movlb	1	; () banked
  5996  002A20  4B0C               	infsnz	stepper@i_479& (0+255),f,b
  5997  002A22  2B0D               	incf	(stepper@i_479+1)& (0+255),f,b
  5998                           
  5999                           ; BSR set to: 1
  6000  002A24  BF0D               	btfsc	(stepper@i_479+1)& (0+255),7,b
  6001  002A26  D7F3               	goto	l7536
  6002  002A28  510D               	movf	(stepper@i_479+1)& (0+255),w,b
  6003  002A2A  E104               	bnz	u7990
  6004  002A2C  0E0D               	movlw	13
  6005  002A2E  5D0C               	subwf	stepper@i_479& (0+255),w,b
  6006  002A30  A0D8               	btfss	status,0,c
  6007  002A32  D7ED               	goto	l7536
  6008  002A34                     u7990:
  6009                           
  6010                           ; BSR set to: 1
  6011                           ;actuators_main.c: 452:             if (stack == 2){
  6012  002A34  0E02               	movlw	2
  6013  002A36  1900               	xorwf	stepper@stack& (0+255),w,b
  6014  002A38  1101               	iorwf	(stepper@stack+1)& (0+255),w,b
  6015  002A3A  A4D8               	btfss	status,2,c
  6016  002A3C  D056               	goto	u8040
  6017                           
  6018                           ; BSR set to: 1
  6019                           ;actuators_main.c: 453:                 if ((t_dep-8)<=3){
  6020  002A3E  0EF8               	movlw	248
  6021  002A40  6F04               	movwf	??_stepper& (0+255),b
  6022  002A42  0EFF               	movlw	255
  6023  002A44  6F05               	movwf	(??_stepper+1)& (0+255),b
  6024  002A46  C102  F106         	movff	stepper@t_dep,??_stepper+2
  6025  002A4A  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  6026  002A4E  5104               	movf	??_stepper& (0+255),w,b
  6027  002A50  2706               	addwf	(??_stepper+2)& (0+255),f,b
  6028  002A52  5105               	movf	(??_stepper+1)& (0+255),w,b
  6029  002A54  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  6030  002A56  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  6031  002A58  D006               	goto	u8010
  6032  002A5A  5107               	movf	(??_stepper+3)& (0+255),w,b
  6033  002A5C  E11B               	bnz	l7558
  6034  002A5E  0E04               	movlw	4
  6035  002A60  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  6036  002A62  B0D8               	btfsc	status,0,c
  6037  002A64  D017               	goto	u8020
  6038  002A66                     u8010:
  6039                           
  6040                           ; BSR set to: 1
  6041                           ;actuators_main.c: 454:                     for(int i=0;i<14;i++){
  6042  002A66  0E00               	movlw	0
  6043  002A68  6F0F               	movwf	(stepper@i_480+1)& (0+255),b
  6044  002A6A  0E00               	movlw	0
  6045  002A6C  6F0E               	movwf	stepper@i_480& (0+255),b
  6046  002A6E                     l7552:
  6047                           
  6048                           ; BSR set to: 1
  6049                           ;actuators_main.c: 455:                         full_drive(0, 3);
  6050  002A6E  0E00               	movlw	0
  6051  002A70  0100               	movlb	0	; () banked
  6052  002A72  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  6053  002A74  0E03               	movlw	3
  6054  002A76  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  6055  002A78  0E00               	movlw	0
  6056  002A7A  EC73  F00C         	call	_full_drive
  6057                           
  6058                           ;actuators_main.c: 458:                     }
  6059  002A7E  0101               	movlb	1	; () banked
  6060  002A80  4B0E               	infsnz	stepper@i_480& (0+255),f,b
  6061  002A82  2B0F               	incf	(stepper@i_480+1)& (0+255),f,b
  6062                           
  6063                           ; BSR set to: 1
  6064  002A84  BF0F               	btfsc	(stepper@i_480+1)& (0+255),7,b
  6065  002A86  D7F3               	goto	l7552
  6066  002A88  510F               	movf	(stepper@i_480+1)& (0+255),w,b
  6067  002A8A  E104               	bnz	u8020
  6068  002A8C  0E0E               	movlw	14
  6069  002A8E  5D0E               	subwf	stepper@i_480& (0+255),w,b
  6070  002A90  A0D8               	btfss	status,0,c
  6071  002A92  D7ED               	goto	l7552
  6072  002A94                     u8020:
  6073  002A94                     l7558:
  6074                           
  6075                           ; BSR set to: 1
  6076                           ;actuators_main.c: 460:                 if ((t_dep-8)>3){
  6077  002A94  0EF8               	movlw	248
  6078  002A96  6F04               	movwf	??_stepper& (0+255),b
  6079  002A98  0EFF               	movlw	255
  6080  002A9A  6F05               	movwf	(??_stepper+1)& (0+255),b
  6081  002A9C  C102  F106         	movff	stepper@t_dep,??_stepper+2
  6082  002AA0  C103  F107         	movff	stepper@t_dep+1,??_stepper+3
  6083  002AA4  5104               	movf	??_stepper& (0+255),w,b
  6084  002AA6  2706               	addwf	(??_stepper+2)& (0+255),f,b
  6085  002AA8  5105               	movf	(??_stepper+1)& (0+255),w,b
  6086  002AAA  2307               	addwfc	(??_stepper+3)& (0+255),f,b
  6087  002AAC  BF07               	btfsc	(??_stepper+3)& (0+255),7,b
  6088  002AAE  D01D               	goto	u8040
  6089  002AB0  5107               	movf	(??_stepper+3)& (0+255),w,b
  6090  002AB2  E104               	bnz	u8030
  6091  002AB4  0E04               	movlw	4
  6092  002AB6  5D06               	subwf	(??_stepper+2)& (0+255),w,b
  6093  002AB8  A0D8               	btfss	status,0,c
  6094  002ABA  D017               	goto	u8040
  6095  002ABC                     u8030:
  6096                           
  6097                           ; BSR set to: 1
  6098                           ;actuators_main.c: 461:                     for(int i=0;i<14 -1;i++){
  6099  002ABC  0E00               	movlw	0
  6100  002ABE  6F11               	movwf	(stepper@i_481+1)& (0+255),b
  6101  002AC0  0E00               	movlw	0
  6102  002AC2  6F10               	movwf	stepper@i_481& (0+255),b
  6103  002AC4                     l7566:
  6104                           
  6105                           ; BSR set to: 1
  6106                           ;actuators_main.c: 462:                         full_drive(0, 3);
  6107  002AC4  0E00               	movlw	0
  6108  002AC6  0100               	movlb	0	; () banked
  6109  002AC8  6FFC               	movwf	(full_drive@stepper_no+1)& (0+255),b
  6110  002ACA  0E03               	movlw	3
  6111  002ACC  6FFB               	movwf	full_drive@stepper_no& (0+255),b
  6112  002ACE  0E00               	movlw	0
  6113  002AD0  EC73  F00C         	call	_full_drive
  6114                           
  6115                           ;actuators_main.c: 465:                     }
  6116  002AD4  0101               	movlb	1	; () banked
  6117  002AD6  4B10               	infsnz	stepper@i_481& (0+255),f,b
  6118  002AD8  2B11               	incf	(stepper@i_481+1)& (0+255),f,b
  6119                           
  6120                           ; BSR set to: 1
  6121  002ADA  BF11               	btfsc	(stepper@i_481+1)& (0+255),7,b
  6122  002ADC  D7F3               	goto	l7566
  6123  002ADE  5111               	movf	(stepper@i_481+1)& (0+255),w,b
  6124  002AE0  E104               	bnz	u8040
  6125  002AE2  0E0D               	movlw	13
  6126  002AE4  5D10               	subwf	stepper@i_481& (0+255),w,b
  6127  002AE6  A0D8               	btfss	status,0,c
  6128  002AE8  D7ED               	goto	l7566
  6129  002AEA                     u8040:
  6130                           
  6131                           ; BSR set to: 1
  6132                           ;actuators_main.c: 469:             count_stepper++;
  6133  002AEA  4B08               	infsnz	stepper@count_stepper& (0+255),f,b
  6134  002AEC  2B09               	incf	(stepper@count_stepper+1)& (0+255),f,b
  6135                           
  6136                           ; BSR set to: 1
  6137                           
  6138                           ;actuators_main.c: 470:         }
  6139  002AEE  0012               	return		;funcret
  6140  002AF0                     __end_of_stepper:
  6141                           	opt callstack 0
  6142                           
  6143 ;; *************** function _full_drive *****************
  6144 ;; Defined at:
  6145 ;;		line 625 in file "actuators_main.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  direction       1    wreg     unsigned char 
  6148 ;;  stepper_no      2  123[BANK0 ] int 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  direction       1  126[BANK0 ] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1    wreg      void 
  6153 ;; Registers used:
  6154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;Total ram usage:        4 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:   14
  6167 ;; This function calls:
  6168 ;;		_printf
  6169 ;; This function is called by:
  6170 ;;		_stepper
  6171 ;;		_stepper2
  6172 ;;		_stepper2_back
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text15
  6177  0018E6                     __ptext15:
  6178                           	opt callstack 0
  6179  0018E6                     _full_drive:
  6180                           	opt callstack 14
  6181                           
  6182                           ; BSR set to: 1
  6183                           ;incstack = 0
  6184                           ;full_drive@direction stored from wreg
  6185  0018E6  0100               	movlb	0	; () banked
  6186  0018E8  6FFE               	movwf	full_drive@direction& (0+255),b
  6187                           
  6188                           ;actuators_main.c: 626:     if (stepper_no == 1){
  6189  0018EA  0100               	movlb	0	; () banked
  6190  0018EC  05FB               	decf	full_drive@stepper_no& (0+255),w,b
  6191  0018EE  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6192  0018F0  A4D8               	btfss	status,2,c
  6193  0018F2  D06B               	goto	l7248
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;actuators_main.c: 627:         if (direction == 1){
  6197  0018F4  05FE               	decf	full_drive@direction& (0+255),w,b
  6198  0018F6  A4D8               	btfss	status,2,c
  6199  0018F8  D032               	goto	l7232
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;actuators_main.c: 628:             LATA = 0b00000011;
  6203  0018FA  0E03               	movlw	3
  6204  0018FC  6E89               	movwf	3977,c	;volatile
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;actuators_main.c: 629:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6208  0018FE  0E1E               	movlw	30
  6209  001900  0100               	movlb	0	; () banked
  6210  001902  6FFD               	movwf	??_full_drive& (0+255),b
  6211  001904  0E37               	movlw	55
  6212  001906                     u9617:
  6213  001906  2EE8               	decfsz	wreg,f,c
  6214  001908  D7FE               	bra	u9617
  6215  00190A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6216  00190C  D7FC               	bra	u9617
  6217                           
  6218                           ;actuators_main.c: 630:             LATA = 0b00000110;
  6219  00190E  0E06               	movlw	6
  6220  001910  6E89               	movwf	3977,c	;volatile
  6221                           
  6222                           ;actuators_main.c: 631:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6223  001912  0E1E               	movlw	30
  6224  001914  0100               	movlb	0	; () banked
  6225  001916  6FFD               	movwf	??_full_drive& (0+255),b
  6226  001918  0E37               	movlw	55
  6227  00191A                     u9627:
  6228  00191A  2EE8               	decfsz	wreg,f,c
  6229  00191C  D7FE               	bra	u9627
  6230  00191E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6231  001920  D7FC               	bra	u9627
  6232                           
  6233                           ;actuators_main.c: 632:             LATA = 0b00001100;
  6234  001922  0E0C               	movlw	12
  6235  001924  6E89               	movwf	3977,c	;volatile
  6236                           
  6237                           ;actuators_main.c: 633:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6238  001926  0E1E               	movlw	30
  6239  001928  0100               	movlb	0	; () banked
  6240  00192A  6FFD               	movwf	??_full_drive& (0+255),b
  6241  00192C  0E37               	movlw	55
  6242  00192E                     u9637:
  6243  00192E  2EE8               	decfsz	wreg,f,c
  6244  001930  D7FE               	bra	u9637
  6245  001932  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6246  001934  D7FC               	bra	u9637
  6247                           
  6248                           ;actuators_main.c: 634:             LATA = 0b00001001;
  6249  001936  0E09               	movlw	9
  6250  001938  6E89               	movwf	3977,c	;volatile
  6251                           
  6252                           ;actuators_main.c: 635:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6253  00193A  0E1E               	movlw	30
  6254  00193C  0100               	movlb	0	; () banked
  6255  00193E  6FFD               	movwf	??_full_drive& (0+255),b
  6256  001940  0E37               	movlw	55
  6257  001942                     u9647:
  6258  001942  2EE8               	decfsz	wreg,f,c
  6259  001944  D7FE               	bra	u9647
  6260  001946  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6261  001948  D7FC               	bra	u9647
  6262                           
  6263                           ;actuators_main.c: 636:             LATA = 0b00000011;
  6264  00194A  0E03               	movlw	3
  6265  00194C  6E89               	movwf	3977,c	;volatile
  6266                           
  6267                           ;actuators_main.c: 637:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6268  00194E  0E1E               	movlw	30
  6269  001950  0100               	movlb	0	; () banked
  6270  001952  6FFD               	movwf	??_full_drive& (0+255),b
  6271  001954  0E37               	movlw	55
  6272  001956                     u9657:
  6273  001956  2EE8               	decfsz	wreg,f,c
  6274  001958  D7FE               	bra	u9657
  6275  00195A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6276  00195C  D7FC               	bra	u9657
  6277  00195E                     l7232:
  6278                           
  6279                           ;actuators_main.c: 639:         if (direction == 0){
  6280  00195E  0100               	movlb	0	; () banked
  6281  001960  51FE               	movf	full_drive@direction& (0+255),w,b
  6282  001962  A4D8               	btfss	status,2,c
  6283  001964  D032               	goto	l7248
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;actuators_main.c: 640:             LATA = 0b00001001;
  6287  001966  0E09               	movlw	9
  6288  001968  6E89               	movwf	3977,c	;volatile
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;actuators_main.c: 641:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6292  00196A  0E1E               	movlw	30
  6293  00196C  0100               	movlb	0	; () banked
  6294  00196E  6FFD               	movwf	??_full_drive& (0+255),b
  6295  001970  0E37               	movlw	55
  6296  001972                     u9667:
  6297  001972  2EE8               	decfsz	wreg,f,c
  6298  001974  D7FE               	bra	u9667
  6299  001976  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6300  001978  D7FC               	bra	u9667
  6301                           
  6302                           ;actuators_main.c: 642:             LATA = 0b00001100;
  6303  00197A  0E0C               	movlw	12
  6304  00197C  6E89               	movwf	3977,c	;volatile
  6305                           
  6306                           ;actuators_main.c: 643:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6307  00197E  0E1E               	movlw	30
  6308  001980  0100               	movlb	0	; () banked
  6309  001982  6FFD               	movwf	??_full_drive& (0+255),b
  6310  001984  0E37               	movlw	55
  6311  001986                     u9677:
  6312  001986  2EE8               	decfsz	wreg,f,c
  6313  001988  D7FE               	bra	u9677
  6314  00198A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6315  00198C  D7FC               	bra	u9677
  6316                           
  6317                           ;actuators_main.c: 644:             LATA = 0b00000110;
  6318  00198E  0E06               	movlw	6
  6319  001990  6E89               	movwf	3977,c	;volatile
  6320                           
  6321                           ;actuators_main.c: 645:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6322  001992  0E1E               	movlw	30
  6323  001994  0100               	movlb	0	; () banked
  6324  001996  6FFD               	movwf	??_full_drive& (0+255),b
  6325  001998  0E37               	movlw	55
  6326  00199A                     u9687:
  6327  00199A  2EE8               	decfsz	wreg,f,c
  6328  00199C  D7FE               	bra	u9687
  6329  00199E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6330  0019A0  D7FC               	bra	u9687
  6331                           
  6332                           ;actuators_main.c: 646:             LATA = 0b00000011;
  6333  0019A2  0E03               	movlw	3
  6334  0019A4  6E89               	movwf	3977,c	;volatile
  6335                           
  6336                           ;actuators_main.c: 647:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6337  0019A6  0E1E               	movlw	30
  6338  0019A8  0100               	movlb	0	; () banked
  6339  0019AA  6FFD               	movwf	??_full_drive& (0+255),b
  6340  0019AC  0E37               	movlw	55
  6341  0019AE                     u9697:
  6342  0019AE  2EE8               	decfsz	wreg,f,c
  6343  0019B0  D7FE               	bra	u9697
  6344  0019B2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6345  0019B4  D7FC               	bra	u9697
  6346                           
  6347                           ;actuators_main.c: 648:             LATA = 0b00001001;
  6348  0019B6  0E09               	movlw	9
  6349  0019B8  6E89               	movwf	3977,c	;volatile
  6350                           
  6351                           ;actuators_main.c: 649:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6352  0019BA  0E1E               	movlw	30
  6353  0019BC  0100               	movlb	0	; () banked
  6354  0019BE  6FFD               	movwf	??_full_drive& (0+255),b
  6355  0019C0  0E37               	movlw	55
  6356  0019C2                     u9707:
  6357  0019C2  2EE8               	decfsz	wreg,f,c
  6358  0019C4  D7FE               	bra	u9707
  6359  0019C6  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6360  0019C8  D7FC               	bra	u9707
  6361  0019CA                     l7248:
  6362                           
  6363                           ;actuators_main.c: 652:     if (stepper_no == 2){
  6364  0019CA  0E02               	movlw	2
  6365  0019CC  0100               	movlb	0	; () banked
  6366  0019CE  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6367  0019D0  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6368  0019D2  A4D8               	btfss	status,2,c
  6369  0019D4  D089               	goto	l7326
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;actuators_main.c: 653:         if (direction == 1){
  6373  0019D6  05FE               	decf	full_drive@direction& (0+255),w,b
  6374  0019D8  A4D8               	btfss	status,2,c
  6375  0019DA  D041               	goto	l7288
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;actuators_main.c: 654:             LATCbits.LATC0 = 1;
  6379  0019DC  808B               	bsf	3979,0,c	;volatile
  6380                           
  6381                           ;actuators_main.c: 655:             LATEbits.LATE0 = 1;
  6382  0019DE  808D               	bsf	3981,0,c	;volatile
  6383                           
  6384                           ;actuators_main.c: 656:             LATEbits.LATE1 = 0;
  6385  0019E0  928D               	bcf	3981,1,c	;volatile
  6386                           
  6387                           ;actuators_main.c: 657:             LATEbits.LATE2 = 0;
  6388  0019E2  948D               	bcf	3981,2,c	;volatile
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;actuators_main.c: 658:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6392  0019E4  0E0D               	movlw	13
  6393  0019E6  0100               	movlb	0	; () banked
  6394  0019E8  6FFD               	movwf	??_full_drive& (0+255),b
  6395  0019EA  0EFB               	movlw	251
  6396  0019EC                     u9717:
  6397  0019EC  2EE8               	decfsz	wreg,f,c
  6398  0019EE  D7FE               	bra	u9717
  6399  0019F0  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6400  0019F2  D7FC               	bra	u9717
  6401  0019F4  D000               	nop2	
  6402                           
  6403                           ;actuators_main.c: 659:             LATCbits.LATC0 = 0;
  6404  0019F6  908B               	bcf	3979,0,c	;volatile
  6405                           
  6406                           ;actuators_main.c: 660:             LATEbits.LATE0 = 1;
  6407  0019F8  808D               	bsf	3981,0,c	;volatile
  6408                           
  6409                           ;actuators_main.c: 661:             LATEbits.LATE1 = 1;
  6410  0019FA  828D               	bsf	3981,1,c	;volatile
  6411                           
  6412                           ;actuators_main.c: 662:             LATEbits.LATE2 = 0;
  6413  0019FC  948D               	bcf	3981,2,c	;volatile
  6414                           
  6415                           ;actuators_main.c: 663:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6416  0019FE  0E0D               	movlw	13
  6417  001A00  0100               	movlb	0	; () banked
  6418  001A02  6FFD               	movwf	??_full_drive& (0+255),b
  6419  001A04  0EFB               	movlw	251
  6420  001A06                     u9727:
  6421  001A06  2EE8               	decfsz	wreg,f,c
  6422  001A08  D7FE               	bra	u9727
  6423  001A0A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6424  001A0C  D7FC               	bra	u9727
  6425  001A0E  D000               	nop2	
  6426                           
  6427                           ;actuators_main.c: 664:             LATCbits.LATC0 = 0;
  6428  001A10  908B               	bcf	3979,0,c	;volatile
  6429                           
  6430                           ;actuators_main.c: 665:             LATEbits.LATE0 = 0;
  6431  001A12  908D               	bcf	3981,0,c	;volatile
  6432                           
  6433                           ;actuators_main.c: 666:             LATEbits.LATE1 = 1;
  6434  001A14  828D               	bsf	3981,1,c	;volatile
  6435                           
  6436                           ;actuators_main.c: 667:             LATEbits.LATE2 = 1;
  6437  001A16  848D               	bsf	3981,2,c	;volatile
  6438                           
  6439                           ;actuators_main.c: 668:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6440  001A18  0E0D               	movlw	13
  6441  001A1A  0100               	movlb	0	; () banked
  6442  001A1C  6FFD               	movwf	??_full_drive& (0+255),b
  6443  001A1E  0EFB               	movlw	251
  6444  001A20                     u9737:
  6445  001A20  2EE8               	decfsz	wreg,f,c
  6446  001A22  D7FE               	bra	u9737
  6447  001A24  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6448  001A26  D7FC               	bra	u9737
  6449  001A28  D000               	nop2	
  6450                           
  6451                           ;actuators_main.c: 669:             LATCbits.LATC0 = 1;
  6452  001A2A  808B               	bsf	3979,0,c	;volatile
  6453                           
  6454                           ;actuators_main.c: 670:             LATEbits.LATE0 = 0;
  6455  001A2C  908D               	bcf	3981,0,c	;volatile
  6456                           
  6457                           ;actuators_main.c: 671:             LATEbits.LATE1 = 0;
  6458  001A2E  928D               	bcf	3981,1,c	;volatile
  6459                           
  6460                           ;actuators_main.c: 672:             LATEbits.LATE2 = 1;
  6461  001A30  848D               	bsf	3981,2,c	;volatile
  6462                           
  6463                           ;actuators_main.c: 673:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6464  001A32  0E0D               	movlw	13
  6465  001A34  0100               	movlb	0	; () banked
  6466  001A36  6FFD               	movwf	??_full_drive& (0+255),b
  6467  001A38  0EFB               	movlw	251
  6468  001A3A                     u9747:
  6469  001A3A  2EE8               	decfsz	wreg,f,c
  6470  001A3C  D7FE               	bra	u9747
  6471  001A3E  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6472  001A40  D7FC               	bra	u9747
  6473  001A42  D000               	nop2	
  6474                           
  6475                           ;actuators_main.c: 674:             LATCbits.LATC0 = 1;
  6476  001A44  808B               	bsf	3979,0,c	;volatile
  6477                           
  6478                           ;actuators_main.c: 675:             LATEbits.LATE0 = 1;
  6479  001A46  808D               	bsf	3981,0,c	;volatile
  6480                           
  6481                           ;actuators_main.c: 676:             LATEbits.LATE1 = 0;
  6482  001A48  928D               	bcf	3981,1,c	;volatile
  6483                           
  6484                           ;actuators_main.c: 677:             LATEbits.LATE2 = 0;
  6485  001A4A  948D               	bcf	3981,2,c	;volatile
  6486                           
  6487                           ;actuators_main.c: 678:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6488  001A4C  0E0D               	movlw	13
  6489  001A4E  0100               	movlb	0	; () banked
  6490  001A50  6FFD               	movwf	??_full_drive& (0+255),b
  6491  001A52  0EFB               	movlw	251
  6492  001A54                     u9757:
  6493  001A54  2EE8               	decfsz	wreg,f,c
  6494  001A56  D7FE               	bra	u9757
  6495  001A58  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6496  001A5A  D7FC               	bra	u9757
  6497  001A5C  D000               	nop2	
  6498  001A5E                     l7288:
  6499                           
  6500                           ;actuators_main.c: 680:         if (direction == 0){
  6501  001A5E  0100               	movlb	0	; () banked
  6502  001A60  51FE               	movf	full_drive@direction& (0+255),w,b
  6503  001A62  A4D8               	btfss	status,2,c
  6504  001A64  D041               	goto	l7326
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;actuators_main.c: 681:             LATCbits.LATC0 = 1;
  6508  001A66  808B               	bsf	3979,0,c	;volatile
  6509                           
  6510                           ;actuators_main.c: 682:             LATEbits.LATE0 = 0;
  6511  001A68  908D               	bcf	3981,0,c	;volatile
  6512                           
  6513                           ;actuators_main.c: 683:             LATEbits.LATE1 = 0;
  6514  001A6A  928D               	bcf	3981,1,c	;volatile
  6515                           
  6516                           ;actuators_main.c: 684:             LATEbits.LATE2 = 1;
  6517  001A6C  848D               	bsf	3981,2,c	;volatile
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;actuators_main.c: 685:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6521  001A6E  0E0D               	movlw	13
  6522  001A70  0100               	movlb	0	; () banked
  6523  001A72  6FFD               	movwf	??_full_drive& (0+255),b
  6524  001A74  0EFB               	movlw	251
  6525  001A76                     u9767:
  6526  001A76  2EE8               	decfsz	wreg,f,c
  6527  001A78  D7FE               	bra	u9767
  6528  001A7A  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6529  001A7C  D7FC               	bra	u9767
  6530  001A7E  D000               	nop2	
  6531                           
  6532                           ;actuators_main.c: 686:             LATCbits.LATC0 = 0;
  6533  001A80  908B               	bcf	3979,0,c	;volatile
  6534                           
  6535                           ;actuators_main.c: 687:             LATEbits.LATE0 = 0;
  6536  001A82  908D               	bcf	3981,0,c	;volatile
  6537                           
  6538                           ;actuators_main.c: 688:             LATEbits.LATE1 = 1;
  6539  001A84  828D               	bsf	3981,1,c	;volatile
  6540                           
  6541                           ;actuators_main.c: 689:             LATEbits.LATE2 = 1;
  6542  001A86  848D               	bsf	3981,2,c	;volatile
  6543                           
  6544                           ;actuators_main.c: 690:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6545  001A88  0E0D               	movlw	13
  6546  001A8A  0100               	movlb	0	; () banked
  6547  001A8C  6FFD               	movwf	??_full_drive& (0+255),b
  6548  001A8E  0EFB               	movlw	251
  6549  001A90                     u9777:
  6550  001A90  2EE8               	decfsz	wreg,f,c
  6551  001A92  D7FE               	bra	u9777
  6552  001A94  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6553  001A96  D7FC               	bra	u9777
  6554  001A98  D000               	nop2	
  6555                           
  6556                           ;actuators_main.c: 691:             LATCbits.LATC0 = 0;
  6557  001A9A  908B               	bcf	3979,0,c	;volatile
  6558                           
  6559                           ;actuators_main.c: 692:             LATEbits.LATE0 = 1;
  6560  001A9C  808D               	bsf	3981,0,c	;volatile
  6561                           
  6562                           ;actuators_main.c: 693:             LATEbits.LATE1 = 1;
  6563  001A9E  828D               	bsf	3981,1,c	;volatile
  6564                           
  6565                           ;actuators_main.c: 694:             LATEbits.LATE2 = 0;
  6566  001AA0  948D               	bcf	3981,2,c	;volatile
  6567                           
  6568                           ;actuators_main.c: 695:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6569  001AA2  0E0D               	movlw	13
  6570  001AA4  0100               	movlb	0	; () banked
  6571  001AA6  6FFD               	movwf	??_full_drive& (0+255),b
  6572  001AA8  0EFB               	movlw	251
  6573  001AAA                     u9787:
  6574  001AAA  2EE8               	decfsz	wreg,f,c
  6575  001AAC  D7FE               	bra	u9787
  6576  001AAE  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6577  001AB0  D7FC               	bra	u9787
  6578  001AB2  D000               	nop2	
  6579                           
  6580                           ;actuators_main.c: 696:             LATCbits.LATC0 = 1;
  6581  001AB4  808B               	bsf	3979,0,c	;volatile
  6582                           
  6583                           ;actuators_main.c: 697:             LATEbits.LATE0 = 1;
  6584  001AB6  808D               	bsf	3981,0,c	;volatile
  6585                           
  6586                           ;actuators_main.c: 698:             LATEbits.LATE1 = 0;
  6587  001AB8  928D               	bcf	3981,1,c	;volatile
  6588                           
  6589                           ;actuators_main.c: 699:             LATEbits.LATE2 = 0;
  6590  001ABA  948D               	bcf	3981,2,c	;volatile
  6591                           
  6592                           ;actuators_main.c: 700:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6593  001ABC  0E0D               	movlw	13
  6594  001ABE  0100               	movlb	0	; () banked
  6595  001AC0  6FFD               	movwf	??_full_drive& (0+255),b
  6596  001AC2  0EFB               	movlw	251
  6597  001AC4                     u9797:
  6598  001AC4  2EE8               	decfsz	wreg,f,c
  6599  001AC6  D7FE               	bra	u9797
  6600  001AC8  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6601  001ACA  D7FC               	bra	u9797
  6602  001ACC  D000               	nop2	
  6603                           
  6604                           ;actuators_main.c: 701:             LATCbits.LATC0 = 1;
  6605  001ACE  808B               	bsf	3979,0,c	;volatile
  6606                           
  6607                           ;actuators_main.c: 702:             LATEbits.LATE0 = 0;
  6608  001AD0  908D               	bcf	3981,0,c	;volatile
  6609                           
  6610                           ;actuators_main.c: 703:             LATEbits.LATE1 = 0;
  6611  001AD2  928D               	bcf	3981,1,c	;volatile
  6612                           
  6613                           ;actuators_main.c: 704:             LATEbits.LATE2 = 1;
  6614  001AD4  848D               	bsf	3981,2,c	;volatile
  6615                           
  6616                           ;actuators_main.c: 705:             _delay((unsigned long)((4)*(10000000/4000.0)));
  6617  001AD6  0E0D               	movlw	13
  6618  001AD8  0100               	movlb	0	; () banked
  6619  001ADA  6FFD               	movwf	??_full_drive& (0+255),b
  6620  001ADC  0EFB               	movlw	251
  6621  001ADE                     u9807:
  6622  001ADE  2EE8               	decfsz	wreg,f,c
  6623  001AE0  D7FE               	bra	u9807
  6624  001AE2  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6625  001AE4  D7FC               	bra	u9807
  6626  001AE6  D000               	nop2	
  6627  001AE8                     l7326:
  6628                           
  6629                           ;actuators_main.c: 708:     if (stepper_no == 3){
  6630  001AE8  0E03               	movlw	3
  6631  001AEA  0100               	movlb	0	; () banked
  6632  001AEC  19FB               	xorwf	full_drive@stepper_no& (0+255),w,b
  6633  001AEE  11FC               	iorwf	(full_drive@stepper_no+1)& (0+255),w,b
  6634  001AF0  A4D8               	btfss	status,2,c
  6635  001AF2  D086               	goto	l7406
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;actuators_main.c: 709:         printf("what");
  6639  001AF4  0EFA               	movlw	low STR_9
  6640  001AF6  6FED               	movwf	printf@fmt& (0+255),b
  6641  001AF8  0EFF               	movlw	high STR_9
  6642  001AFA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  6643  001AFC  EC7C  F01F         	call	_printf	;wreg free
  6644                           
  6645                           ;actuators_main.c: 710:         if (direction == 0){
  6646  001B00  0100               	movlb	0	; () banked
  6647  001B02  51FE               	movf	full_drive@direction& (0+255),w,b
  6648  001B04  A4D8               	btfss	status,2,c
  6649  001B06  D03C               	goto	l7368
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;actuators_main.c: 711:             LATCbits.LATC5 = 1;
  6653  001B08  8A8B               	bsf	3979,5,c	;volatile
  6654                           
  6655                           ;actuators_main.c: 712:             LATCbits.LATC6 = 0;
  6656  001B0A  9C8B               	bcf	3979,6,c	;volatile
  6657                           
  6658                           ;actuators_main.c: 713:             LATCbits.LATC7 = 0;
  6659  001B0C  9E8B               	bcf	3979,7,c	;volatile
  6660                           
  6661                           ;actuators_main.c: 714:             LATAbits.LATA5 = 1;
  6662  001B0E  8A89               	bsf	3977,5,c	;volatile
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;actuators_main.c: 715:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6666  001B10  0E1E               	movlw	30
  6667  001B12  0100               	movlb	0	; () banked
  6668  001B14  6FFD               	movwf	??_full_drive& (0+255),b
  6669  001B16  0E37               	movlw	55
  6670  001B18                     u9817:
  6671  001B18  2EE8               	decfsz	wreg,f,c
  6672  001B1A  D7FE               	bra	u9817
  6673  001B1C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6674  001B1E  D7FC               	bra	u9817
  6675                           
  6676                           ;actuators_main.c: 716:             LATCbits.LATC5 = 1;
  6677  001B20  8A8B               	bsf	3979,5,c	;volatile
  6678                           
  6679                           ;actuators_main.c: 717:             LATCbits.LATC6 = 1;
  6680  001B22  8C8B               	bsf	3979,6,c	;volatile
  6681                           
  6682                           ;actuators_main.c: 718:             LATCbits.LATC7 = 0;
  6683  001B24  9E8B               	bcf	3979,7,c	;volatile
  6684                           
  6685                           ;actuators_main.c: 719:             LATAbits.LATA5 = 0;
  6686  001B26  9A89               	bcf	3977,5,c	;volatile
  6687                           
  6688                           ;actuators_main.c: 720:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6689  001B28  0E1E               	movlw	30
  6690  001B2A  0100               	movlb	0	; () banked
  6691  001B2C  6FFD               	movwf	??_full_drive& (0+255),b
  6692  001B2E  0E37               	movlw	55
  6693  001B30                     u9827:
  6694  001B30  2EE8               	decfsz	wreg,f,c
  6695  001B32  D7FE               	bra	u9827
  6696  001B34  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6697  001B36  D7FC               	bra	u9827
  6698                           
  6699                           ;actuators_main.c: 721:             LATCbits.LATC5 = 0;
  6700  001B38  9A8B               	bcf	3979,5,c	;volatile
  6701                           
  6702                           ;actuators_main.c: 722:             LATCbits.LATC6 = 1;
  6703  001B3A  8C8B               	bsf	3979,6,c	;volatile
  6704                           
  6705                           ;actuators_main.c: 723:             LATCbits.LATC7 = 1;
  6706  001B3C  8E8B               	bsf	3979,7,c	;volatile
  6707                           
  6708                           ;actuators_main.c: 724:             LATAbits.LATA5 = 0;
  6709  001B3E  9A89               	bcf	3977,5,c	;volatile
  6710                           
  6711                           ;actuators_main.c: 725:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6712  001B40  0E1E               	movlw	30
  6713  001B42  0100               	movlb	0	; () banked
  6714  001B44  6FFD               	movwf	??_full_drive& (0+255),b
  6715  001B46  0E37               	movlw	55
  6716  001B48                     u9837:
  6717  001B48  2EE8               	decfsz	wreg,f,c
  6718  001B4A  D7FE               	bra	u9837
  6719  001B4C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6720  001B4E  D7FC               	bra	u9837
  6721                           
  6722                           ;actuators_main.c: 726:             LATCbits.LATC5 = 0;
  6723  001B50  9A8B               	bcf	3979,5,c	;volatile
  6724                           
  6725                           ;actuators_main.c: 727:             LATCbits.LATC6 = 0;
  6726  001B52  9C8B               	bcf	3979,6,c	;volatile
  6727                           
  6728                           ;actuators_main.c: 728:             LATCbits.LATC7 = 1;
  6729  001B54  8E8B               	bsf	3979,7,c	;volatile
  6730                           
  6731                           ;actuators_main.c: 729:             LATAbits.LATA5 = 1;
  6732  001B56  8A89               	bsf	3977,5,c	;volatile
  6733                           
  6734                           ;actuators_main.c: 730:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6735  001B58  0E1E               	movlw	30
  6736  001B5A  0100               	movlb	0	; () banked
  6737  001B5C  6FFD               	movwf	??_full_drive& (0+255),b
  6738  001B5E  0E37               	movlw	55
  6739  001B60                     u9847:
  6740  001B60  2EE8               	decfsz	wreg,f,c
  6741  001B62  D7FE               	bra	u9847
  6742  001B64  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6743  001B66  D7FC               	bra	u9847
  6744                           
  6745                           ;actuators_main.c: 731:             LATCbits.LATC5 = 1;
  6746  001B68  8A8B               	bsf	3979,5,c	;volatile
  6747                           
  6748                           ;actuators_main.c: 732:             LATCbits.LATC6 = 0;
  6749  001B6A  9C8B               	bcf	3979,6,c	;volatile
  6750                           
  6751                           ;actuators_main.c: 733:             LATCbits.LATC7 = 0;
  6752  001B6C  9E8B               	bcf	3979,7,c	;volatile
  6753                           
  6754                           ;actuators_main.c: 734:             LATAbits.LATA5 = 1;
  6755  001B6E  8A89               	bsf	3977,5,c	;volatile
  6756                           
  6757                           ;actuators_main.c: 735:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6758  001B70  0E1E               	movlw	30
  6759  001B72  0100               	movlb	0	; () banked
  6760  001B74  6FFD               	movwf	??_full_drive& (0+255),b
  6761  001B76  0E37               	movlw	55
  6762  001B78                     u9857:
  6763  001B78  2EE8               	decfsz	wreg,f,c
  6764  001B7A  D7FE               	bra	u9857
  6765  001B7C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6766  001B7E  D7FC               	bra	u9857
  6767  001B80                     l7368:
  6768                           
  6769                           ;actuators_main.c: 737:         if (direction == 1){
  6770  001B80  0100               	movlb	0	; () banked
  6771  001B82  05FE               	decf	full_drive@direction& (0+255),w,b
  6772  001B84  A4D8               	btfss	status,2,c
  6773  001B86  D03C               	goto	l7406
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;actuators_main.c: 738:             LATCbits.LATC5 = 1;
  6777  001B88  8A8B               	bsf	3979,5,c	;volatile
  6778                           
  6779                           ;actuators_main.c: 739:             LATCbits.LATC6 = 1;
  6780  001B8A  8C8B               	bsf	3979,6,c	;volatile
  6781                           
  6782                           ;actuators_main.c: 740:             LATCbits.LATC7 = 0;
  6783  001B8C  9E8B               	bcf	3979,7,c	;volatile
  6784                           
  6785                           ;actuators_main.c: 741:             LATAbits.LATA5 = 0;
  6786  001B8E  9A89               	bcf	3977,5,c	;volatile
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;actuators_main.c: 742:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6790  001B90  0E1E               	movlw	30
  6791  001B92  0100               	movlb	0	; () banked
  6792  001B94  6FFD               	movwf	??_full_drive& (0+255),b
  6793  001B96  0E37               	movlw	55
  6794  001B98                     u9867:
  6795  001B98  2EE8               	decfsz	wreg,f,c
  6796  001B9A  D7FE               	bra	u9867
  6797  001B9C  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6798  001B9E  D7FC               	bra	u9867
  6799                           
  6800                           ;actuators_main.c: 743:             LATCbits.LATC5 = 0;
  6801  001BA0  9A8B               	bcf	3979,5,c	;volatile
  6802                           
  6803                           ;actuators_main.c: 744:             LATCbits.LATC6 = 1;
  6804  001BA2  8C8B               	bsf	3979,6,c	;volatile
  6805                           
  6806                           ;actuators_main.c: 745:             LATCbits.LATC7 = 1;
  6807  001BA4  8E8B               	bsf	3979,7,c	;volatile
  6808                           
  6809                           ;actuators_main.c: 746:             LATAbits.LATA5 = 0;
  6810  001BA6  9A89               	bcf	3977,5,c	;volatile
  6811                           
  6812                           ;actuators_main.c: 747:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6813  001BA8  0E1E               	movlw	30
  6814  001BAA  0100               	movlb	0	; () banked
  6815  001BAC  6FFD               	movwf	??_full_drive& (0+255),b
  6816  001BAE  0E37               	movlw	55
  6817  001BB0                     u9877:
  6818  001BB0  2EE8               	decfsz	wreg,f,c
  6819  001BB2  D7FE               	bra	u9877
  6820  001BB4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6821  001BB6  D7FC               	bra	u9877
  6822                           
  6823                           ;actuators_main.c: 748:             LATCbits.LATC5 = 0;
  6824  001BB8  9A8B               	bcf	3979,5,c	;volatile
  6825                           
  6826                           ;actuators_main.c: 749:             LATCbits.LATC6 = 0;
  6827  001BBA  9C8B               	bcf	3979,6,c	;volatile
  6828                           
  6829                           ;actuators_main.c: 750:             LATCbits.LATC7 = 1;
  6830  001BBC  8E8B               	bsf	3979,7,c	;volatile
  6831                           
  6832                           ;actuators_main.c: 751:             LATAbits.LATA5 = 1;
  6833  001BBE  8A89               	bsf	3977,5,c	;volatile
  6834                           
  6835                           ;actuators_main.c: 752:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6836  001BC0  0E1E               	movlw	30
  6837  001BC2  0100               	movlb	0	; () banked
  6838  001BC4  6FFD               	movwf	??_full_drive& (0+255),b
  6839  001BC6  0E37               	movlw	55
  6840  001BC8                     u9887:
  6841  001BC8  2EE8               	decfsz	wreg,f,c
  6842  001BCA  D7FE               	bra	u9887
  6843  001BCC  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6844  001BCE  D7FC               	bra	u9887
  6845                           
  6846                           ;actuators_main.c: 753:             LATCbits.LATC5 = 1;
  6847  001BD0  8A8B               	bsf	3979,5,c	;volatile
  6848                           
  6849                           ;actuators_main.c: 754:             LATCbits.LATC6 = 0;
  6850  001BD2  9C8B               	bcf	3979,6,c	;volatile
  6851                           
  6852                           ;actuators_main.c: 755:             LATCbits.LATC7 = 0;
  6853  001BD4  9E8B               	bcf	3979,7,c	;volatile
  6854                           
  6855                           ;actuators_main.c: 756:             LATAbits.LATA5 = 1;
  6856  001BD6  8A89               	bsf	3977,5,c	;volatile
  6857                           
  6858                           ;actuators_main.c: 757:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6859  001BD8  0E1E               	movlw	30
  6860  001BDA  0100               	movlb	0	; () banked
  6861  001BDC  6FFD               	movwf	??_full_drive& (0+255),b
  6862  001BDE  0E37               	movlw	55
  6863  001BE0                     u9897:
  6864  001BE0  2EE8               	decfsz	wreg,f,c
  6865  001BE2  D7FE               	bra	u9897
  6866  001BE4  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6867  001BE6  D7FC               	bra	u9897
  6868                           
  6869                           ;actuators_main.c: 758:             LATCbits.LATC5 = 1;
  6870  001BE8  8A8B               	bsf	3979,5,c	;volatile
  6871                           
  6872                           ;actuators_main.c: 759:             LATCbits.LATC6 = 1;
  6873  001BEA  8C8B               	bsf	3979,6,c	;volatile
  6874                           
  6875                           ;actuators_main.c: 760:             LATCbits.LATC7 = 0;
  6876  001BEC  9E8B               	bcf	3979,7,c	;volatile
  6877                           
  6878                           ;actuators_main.c: 761:             LATAbits.LATA5 = 0;
  6879  001BEE  9A89               	bcf	3977,5,c	;volatile
  6880                           
  6881                           ;actuators_main.c: 762:             _delay((unsigned long)((9)*(10000000/4000.0)));
  6882  001BF0  0E1E               	movlw	30
  6883  001BF2  0100               	movlb	0	; () banked
  6884  001BF4  6FFD               	movwf	??_full_drive& (0+255),b
  6885  001BF6  0E37               	movlw	55
  6886  001BF8                     u9907:
  6887  001BF8  2EE8               	decfsz	wreg,f,c
  6888  001BFA  D7FE               	bra	u9907
  6889  001BFC  2FFD               	decfsz	??_full_drive& (0+255),f,b
  6890  001BFE  D7FC               	bra	u9907
  6891  001C00                     l7406:
  6892                           
  6893                           ;actuators_main.c: 765:                     LATA = 0b00000000;
  6894  001C00  0E00               	movlw	0
  6895  001C02  6E89               	movwf	3977,c	;volatile
  6896                           
  6897                           ;actuators_main.c: 766:         LATCbits.LATC0 = 0;
  6898  001C04  908B               	bcf	3979,0,c	;volatile
  6899                           
  6900                           ;actuators_main.c: 767:         LATEbits.LATE0 = 0;
  6901  001C06  908D               	bcf	3981,0,c	;volatile
  6902                           
  6903                           ;actuators_main.c: 768:         LATEbits.LATE1 = 0;
  6904  001C08  928D               	bcf	3981,1,c	;volatile
  6905                           
  6906                           ;actuators_main.c: 769:         LATEbits.LATE2 = 0;
  6907  001C0A  948D               	bcf	3981,2,c	;volatile
  6908                           
  6909                           ;actuators_main.c: 770:         LATCbits.LATC5 = 0;
  6910  001C0C  9A8B               	bcf	3979,5,c	;volatile
  6911                           
  6912                           ;actuators_main.c: 771:         LATCbits.LATC6 = 0;
  6913  001C0E  9C8B               	bcf	3979,6,c	;volatile
  6914                           
  6915                           ;actuators_main.c: 772:         LATCbits.LATC7 = 0;
  6916  001C10  9E8B               	bcf	3979,7,c	;volatile
  6917                           
  6918                           ;actuators_main.c: 773:         LATAbits.LATA5 = 0;
  6919  001C12  9A89               	bcf	3977,5,c	;volatile
  6920  001C14  0012               	return		;funcret
  6921  001C16                     __end_of_full_drive:
  6922                           	opt callstack 0
  6923                           
  6924 ;; *************** function _servo *****************
  6925 ;; Defined at:
  6926 ;;		line 190 in file "actuators_main.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;Total ram usage:        2 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    4
  6947 ;; This function calls:
  6948 ;;		_servoRotate0
  6949 ;;		_servoRotate180
  6950 ;; This function is called by:
  6951 ;;		_actuators_main
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text16
  6956  003778                     __ptext16:
  6957                           	opt callstack 0
  6958  003778                     _servo:
  6959                           	opt callstack 25
  6960                           
  6961                           ;actuators_main.c: 192:   TRISB = 0;
  6962                           
  6963                           ;incstack = 0
  6964  003778  0E00               	movlw	0
  6965  00377A  6E93               	movwf	3987,c	;volatile
  6966                           
  6967                           ;actuators_main.c: 193:     TRISC = 0;
  6968  00377C  0E00               	movlw	0
  6969  00377E  6E94               	movwf	3988,c	;volatile
  6970                           
  6971                           ;actuators_main.c: 194:     TRISD = 0;
  6972  003780  0E00               	movlw	0
  6973  003782  6E95               	movwf	3989,c	;volatile
  6974                           
  6975                           ;actuators_main.c: 196:       TRISBbits.RB0 = 0;
  6976  003784  9093               	bcf	3987,0,c	;volatile
  6977                           
  6978                           ;actuators_main.c: 197:     LATBbits.LATB0 = 1;
  6979  003786  808A               	bsf	3978,0,c	;volatile
  6980                           
  6981                           ;actuators_main.c: 198:     {;actuators_main.c: 200:     servoRotate0(1);
  6982  003788  0E00               	movlw	0
  6983  00378A  0100               	movlb	0	; () banked
  6984  00378C  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  6985  00378E  0E01               	movlw	1
  6986  003790  6F80               	movwf	servoRotate0@servo& (0+255),b
  6987  003792  ECF2  F019         	call	_servoRotate0	;wreg free
  6988                           
  6989                           ;actuators_main.c: 204:     servoRotate180(1);
  6990  003796  0E00               	movlw	0
  6991  003798  0100               	movlb	0	; () banked
  6992  00379A  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  6993  00379C  0E01               	movlw	1
  6994  00379E  6F80               	movwf	servoRotate180@servo& (0+255),b
  6995  0037A0  EC79  F019         	call	_servoRotate180	;wreg free
  6996                           
  6997                           ;actuators_main.c: 205:     _delay((unsigned long)((400)*(10000000/4000.0)));
  6998  0037A4  0E06               	movlw	6
  6999  0037A6  0100               	movlb	0	; () banked
  7000  0037A8  6F86               	movwf	(??_servo+1)& (0+255),b
  7001  0037AA  0E13               	movlw	19
  7002  0037AC  6F85               	movwf	??_servo& (0+255),b
  7003  0037AE  0EAD               	movlw	173
  7004  0037B0                     u9917:
  7005  0037B0  2EE8               	decfsz	wreg,f,c
  7006  0037B2  D7FE               	bra	u9917
  7007  0037B4  2F85               	decfsz	??_servo& (0+255),f,b
  7008  0037B6  D7FC               	bra	u9917
  7009  0037B8  2F86               	decfsz	(??_servo+1)& (0+255),f,b
  7010  0037BA  D7FA               	bra	u9917
  7011  0037BC  D000               	nop2	
  7012                           
  7013                           ;actuators_main.c: 206:     servoRotate0(1);
  7014  0037BE  0E00               	movlw	0
  7015  0037C0  0100               	movlb	0	; () banked
  7016  0037C2  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  7017  0037C4  0E01               	movlw	1
  7018  0037C6  6F80               	movwf	servoRotate0@servo& (0+255),b
  7019  0037C8  ECF2  F019         	call	_servoRotate0	;wreg free
  7020                           
  7021                           ;actuators_main.c: 212:     _delay((unsigned long)((50)*(10000000/4000.0)));
  7022  0037CC  0EA3               	movlw	163
  7023  0037CE  0100               	movlb	0	; () banked
  7024  0037D0  6F85               	movwf	??_servo& (0+255),b
  7025  0037D2  0E55               	movlw	85
  7026  0037D4                     u9927:
  7027  0037D4  2EE8               	decfsz	wreg,f,c
  7028  0037D6  D7FE               	bra	u9927
  7029  0037D8  2F85               	decfsz	??_servo& (0+255),f,b
  7030  0037DA  D7FC               	bra	u9927
  7031                           
  7032                           ;actuators_main.c: 213:     servoRotate180(3);
  7033  0037DC  0E00               	movlw	0
  7034  0037DE  0100               	movlb	0	; () banked
  7035  0037E0  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  7036  0037E2  0E03               	movlw	3
  7037  0037E4  6F80               	movwf	servoRotate180@servo& (0+255),b
  7038  0037E6  EC79  F019         	call	_servoRotate180	;wreg free
  7039                           
  7040                           ;actuators_main.c: 214:     servoRotate0(3);
  7041  0037EA  0E00               	movlw	0
  7042  0037EC  0100               	movlb	0	; () banked
  7043  0037EE  6F81               	movwf	(servoRotate0@servo+1)& (0+255),b
  7044  0037F0  0E03               	movlw	3
  7045  0037F2  6F80               	movwf	servoRotate0@servo& (0+255),b
  7046  0037F4  ECF2  F019         	call	_servoRotate0	;wreg free
  7047                           
  7048                           ;actuators_main.c: 215:     servoRotate180(3);
  7049  0037F8  0E00               	movlw	0
  7050  0037FA  0100               	movlb	0	; () banked
  7051  0037FC  6F81               	movwf	(servoRotate180@servo+1)& (0+255),b
  7052  0037FE  0E03               	movlw	3
  7053  003800  6F80               	movwf	servoRotate180@servo& (0+255),b
  7054  003802  EC79  F019         	call	_servoRotate180	;wreg free
  7055  003806  0012               	return		;funcret
  7056  003808                     __end_of_servo:
  7057                           	opt callstack 0
  7058                           
  7059 ;; *************** function _servoRotate180 *****************
  7060 ;; Defined at:
  7061 ;;		line 142 in file "actuators_main.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  servo           2    0[BANK0 ] int 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  i               2    3[BANK0 ] unsigned int 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7075 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7076 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7077 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7078 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;Total ram usage:        5 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    3
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_servo
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text17
  7090  0032F2                     __ptext17:
  7091                           	opt callstack 0
  7092  0032F2                     _servoRotate180:
  7093                           	opt callstack 25
  7094                           
  7095                           ;actuators_main.c: 142: void servoRotate180(int servo);actuators_main.c: 143: {;actuator
      +                          s_main.c: 144:   unsigned int i;;actuators_main.c: 145:     if (servo==1){
  7096                           
  7097                           ;incstack = 0
  7098  0032F2  0100               	movlb	0	; () banked
  7099  0032F4  0580               	decf	servoRotate180@servo& (0+255),w,b
  7100  0032F6  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7101  0032F8  A4D8               	btfss	status,2,c
  7102  0032FA  D027               	goto	u7760
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;actuators_main.c: 146:     for(i=0;i<30;i++)
  7106  0032FC  0E00               	movlw	0
  7107  0032FE  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7108  003300  0E00               	movlw	0
  7109  003302  6F83               	movwf	servoRotate180@i& (0+255),b
  7110  003304                     l134:
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;actuators_main.c: 147:         {;actuators_main.c: 148:           RC1 = 1;
  7114  003304  8282               	bsf	3970,1,c	;volatile
  7115                           
  7116                           ;actuators_main.c: 149:             RC2 = 1;
  7117  003306  8482               	bsf	3970,2,c	;volatile
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;actuators_main.c: 150:           _delay((unsigned long)((450)*(10000000/4000000.0)));
  7121  003308  0EE1               	movlw	225
  7122  00330A                     u9937:
  7123  00330A  D000               	nop2	
  7124  00330C  2EE8               	decfsz	wreg,f,c
  7125  00330E  D7FD               	bra	u9937
  7126                           
  7127                           ;actuators_main.c: 152:           RC2 =0;
  7128  003310  9482               	bcf	3970,2,c	;volatile
  7129                           
  7130                           ;actuators_main.c: 153:           _delay((unsigned long)((2100)*(10000000/4000000.0)));
  7131  003312  0E07               	movlw	7
  7132  003314  0100               	movlb	0	; () banked
  7133  003316  6F82               	movwf	??_servoRotate180& (0+255),b
  7134  003318  0ED0               	movlw	208
  7135  00331A                     u9947:
  7136  00331A  2EE8               	decfsz	wreg,f,c
  7137  00331C  D7FE               	bra	u9947
  7138  00331E  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7139  003320  D7FC               	bra	u9947
  7140  003322  F000               	nop	
  7141                           
  7142                           ;actuators_main.c: 155:           RC1 = 0;
  7143  003324  9282               	bcf	3970,1,c	;volatile
  7144                           
  7145                           ;actuators_main.c: 156:           _delay((unsigned long)((13550)*(10000000/4000000.0)));
  7146  003326  0E2C               	movlw	44
  7147  003328  0100               	movlb	0	; () banked
  7148  00332A  6F82               	movwf	??_servoRotate180& (0+255),b
  7149  00332C  0EFD               	movlw	253
  7150  00332E                     u9957:
  7151  00332E  2EE8               	decfsz	wreg,f,c
  7152  003330  D7FE               	bra	u9957
  7153  003332  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7154  003334  D7FC               	bra	u9957
  7155  003336  F000               	nop	
  7156                           
  7157                           ;actuators_main.c: 157:         }
  7158  003338  0100               	movlb	0	; () banked
  7159  00333A  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7160  00333C  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7161  00333E  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7162  003340  E104               	bnz	u7760
  7163  003342  0E1E               	movlw	30
  7164  003344  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7165  003346  A0D8               	btfss	status,0,c
  7166  003348  D7DD               	goto	l134
  7167  00334A                     u7760:
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;actuators_main.c: 159:   if (servo==2){
  7171  00334A  0E02               	movlw	2
  7172  00334C  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  7173  00334E  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7174  003350  A4D8               	btfss	status,2,c
  7175  003352  D020               	goto	u7780
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;actuators_main.c: 160:     for(i=0;i<30;i++)
  7179  003354  0E00               	movlw	0
  7180  003356  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7181  003358  0E00               	movlw	0
  7182  00335A  6F83               	movwf	servoRotate180@i& (0+255),b
  7183  00335C                     l137:
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;actuators_main.c: 161:           {;actuators_main.c: 163:     RD1 = 1;
  7187  00335C  8283               	bsf	3971,1,c	;volatile
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;actuators_main.c: 167:     _delay((unsigned long)((950)*(10000000/4000000.0)));
  7191  00335E  0E04               	movlw	4
  7192  003360  0100               	movlb	0	; () banked
  7193  003362  6F82               	movwf	??_servoRotate180& (0+255),b
  7194  003364  0E14               	movlw	20
  7195  003366                     u9967:
  7196  003366  2EE8               	decfsz	wreg,f,c
  7197  003368  D7FE               	bra	u9967
  7198  00336A  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7199  00336C  D7FC               	bra	u9967
  7200                           
  7201                           ;actuators_main.c: 169:     RD1 = 0;
  7202  00336E  9283               	bcf	3971,1,c	;volatile
  7203                           
  7204                           ;actuators_main.c: 172:     _delay((unsigned long)((26650)*(10000000/4000000.0)));
  7205  003370  0E57               	movlw	87
  7206  003372  0100               	movlb	0	; () banked
  7207  003374  6F82               	movwf	??_servoRotate180& (0+255),b
  7208  003376  0E85               	movlw	133
  7209  003378                     u9977:
  7210  003378  2EE8               	decfsz	wreg,f,c
  7211  00337A  D7FE               	bra	u9977
  7212  00337C  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7213  00337E  D7FC               	bra	u9977
  7214  003380  F000               	nop	
  7215                           
  7216                           ;actuators_main.c: 174:           }
  7217  003382  0100               	movlb	0	; () banked
  7218  003384  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7219  003386  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7220  003388  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7221  00338A  E104               	bnz	u7780
  7222  00338C  0E1E               	movlw	30
  7223  00338E  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7224  003390  A0D8               	btfss	status,0,c
  7225  003392  D7E4               	goto	l137
  7226  003394                     u7780:
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;actuators_main.c: 176:     if (servo==3){
  7230  003394  0E03               	movlw	3
  7231  003396  1980               	xorwf	servoRotate180@servo& (0+255),w,b
  7232  003398  1181               	iorwf	(servoRotate180@servo+1)& (0+255),w,b
  7233  00339A  A4D8               	btfss	status,2,c
  7234  00339C  0012               	return	
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;actuators_main.c: 177:       for(i=0;i<30;i++)
  7238  00339E  0E00               	movlw	0
  7239  0033A0  6F84               	movwf	(servoRotate180@i+1)& (0+255),b
  7240  0033A2  0E00               	movlw	0
  7241  0033A4  6F83               	movwf	servoRotate180@i& (0+255),b
  7242  0033A6                     l140:
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;actuators_main.c: 178:         {;actuators_main.c: 179:         RD0 = 1;
  7246  0033A6  8083               	bsf	3971,0,c	;volatile
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;actuators_main.c: 181:         _delay((unsigned long)((2500)*(10000000/4000000.0)));
  7250  0033A8  0E09               	movlw	9
  7251  0033AA  0100               	movlb	0	; () banked
  7252  0033AC  6F82               	movwf	??_servoRotate180& (0+255),b
  7253  0033AE  0E1C               	movlw	28
  7254  0033B0                     u9987:
  7255  0033B0  2EE8               	decfsz	wreg,f,c
  7256  0033B2  D7FE               	bra	u9987
  7257  0033B4  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7258  0033B6  D7FC               	bra	u9987
  7259  0033B8  F000               	nop	
  7260                           
  7261                           ;actuators_main.c: 184:             RD0 = 0;
  7262  0033BA  9083               	bcf	3971,0,c	;volatile
  7263                           
  7264                           ;actuators_main.c: 186:         _delay((unsigned long)((10500)*(10000000/4000000.0)));
  7265  0033BC  0E23               	movlw	35
  7266  0033BE  0100               	movlb	0	; () banked
  7267  0033C0  6F82               	movwf	??_servoRotate180& (0+255),b
  7268  0033C2  0E15               	movlw	21
  7269  0033C4                     u9997:
  7270  0033C4  2EE8               	decfsz	wreg,f,c
  7271  0033C6  D7FE               	bra	u9997
  7272  0033C8  2F82               	decfsz	??_servoRotate180& (0+255),f,b
  7273  0033CA  D7FC               	bra	u9997
  7274  0033CC  D000               	nop2	
  7275                           
  7276                           ;actuators_main.c: 187:         }
  7277  0033CE  0100               	movlb	0	; () banked
  7278  0033D0  4B83               	infsnz	servoRotate180@i& (0+255),f,b
  7279  0033D2  2B84               	incf	(servoRotate180@i+1)& (0+255),f,b
  7280  0033D4  5184               	movf	(servoRotate180@i+1)& (0+255),w,b
  7281  0033D6  E105               	bnz	u7800
  7282  0033D8  0E1E               	movlw	30
  7283  0033DA  5D83               	subwf	servoRotate180@i& (0+255),w,b
  7284  0033DC  B0D8               	btfsc	status,0,c
  7285  0033DE  0012               	return	
  7286  0033E0  D7E2               	goto	l140
  7287  0033E2                     u7800:
  7288                           
  7289                           ; BSR set to: 0
  7290  0033E2  0012               	return		;funcret
  7291  0033E4                     __end_of_servoRotate180:
  7292                           	opt callstack 0
  7293                           
  7294 ;; *************** function _servoRotate0 *****************
  7295 ;; Defined at:
  7296 ;;		line 98 in file "actuators_main.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  servo           2    0[BANK0 ] int 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  i               2    3[BANK0 ] unsigned int 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7311 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;Total ram usage:        5 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    3
  7317 ;; This function calls:
  7318 ;;		Nothing
  7319 ;; This function is called by:
  7320 ;;		_servo
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	text18
  7325  0033E4                     __ptext18:
  7326                           	opt callstack 0
  7327  0033E4                     _servoRotate0:
  7328                           	opt callstack 25
  7329                           
  7330                           ;actuators_main.c: 99:     unsigned int i;;actuators_main.c: 100:     if (servo==1){
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;incstack = 0
  7334  0033E4  0100               	movlb	0	; () banked
  7335  0033E6  0580               	decf	servoRotate0@servo& (0+255),w,b
  7336  0033E8  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7337  0033EA  A4D8               	btfss	status,2,c
  7338  0033EC  D025               	goto	u7700
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;actuators_main.c: 101:       for(i=0;i<30;i++)
  7342  0033EE  0E00               	movlw	0
  7343  0033F0  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7344  0033F2  0E00               	movlw	0
  7345  0033F4  6F83               	movwf	servoRotate0@i& (0+255),b
  7346  0033F6                     l122:
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;actuators_main.c: 102:           {;actuators_main.c: 103:             RC1 = 1;
  7350  0033F6  8282               	bsf	3970,1,c	;volatile
  7351                           
  7352                           ;actuators_main.c: 104:             RC2 = 1;
  7353  0033F8  8482               	bsf	3970,2,c	;volatile
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;actuators_main.c: 105:             _delay((unsigned long)((1100)*(10000000/4000000.0)))
      +                          ;
  7357  0033FA  0E04               	movlw	4
  7358  0033FC  0100               	movlb	0	; () banked
  7359  0033FE  6F82               	movwf	??_servoRotate0& (0+255),b
  7360  003400  0E91               	movlw	145
  7361  003402                     u10007:
  7362  003402  2EE8               	decfsz	wreg,f,c
  7363  003404  D7FE               	bra	u10007
  7364  003406  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7365  003408  D7FC               	bra	u10007
  7366                           
  7367                           ;actuators_main.c: 106:             RC2 = 0;
  7368  00340A  9482               	bcf	3970,2,c	;volatile
  7369                           
  7370                           ;actuators_main.c: 107:             _delay((unsigned long)((300)*(10000000/4000000.0)));
  7371  00340C  0EFA               	movlw	250
  7372  00340E                     u10017:
  7373  00340E  2EE8               	decfsz	wreg,f,c
  7374  003410  D7FE               	bra	u10017
  7375                           
  7376                           ;actuators_main.c: 108:             RC1 = 0;
  7377  003412  9282               	bcf	3970,1,c	;volatile
  7378                           
  7379                           ;actuators_main.c: 112:             _delay((unsigned long)((18600)*(10000000/4000000.0))
      +                          );
  7380  003414  0E3D               	movlw	61
  7381  003416  0100               	movlb	0	; () banked
  7382  003418  6F82               	movwf	??_servoRotate0& (0+255),b
  7383  00341A  0E62               	movlw	98
  7384  00341C                     u10027:
  7385  00341C  2EE8               	decfsz	wreg,f,c
  7386  00341E  D7FE               	bra	u10027
  7387  003420  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7388  003422  D7FC               	bra	u10027
  7389  003424  F000               	nop	
  7390                           
  7391                           ;actuators_main.c: 113:           }
  7392  003426  0100               	movlb	0	; () banked
  7393  003428  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7394  00342A  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7395  00342C  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7396  00342E  E104               	bnz	u7700
  7397  003430  0E1E               	movlw	30
  7398  003432  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7399  003434  A0D8               	btfss	status,0,c
  7400  003436  D7DF               	goto	l122
  7401  003438                     u7700:
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;actuators_main.c: 115:     if (servo==2){
  7405  003438  0E02               	movlw	2
  7406  00343A  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7407  00343C  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7408  00343E  A4D8               	btfss	status,2,c
  7409  003440  D021               	goto	u7720
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;actuators_main.c: 116:       for(i=0;i<30;i++)
  7413  003442  0E00               	movlw	0
  7414  003444  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7415  003446  0E00               	movlw	0
  7416  003448  6F83               	movwf	servoRotate0@i& (0+255),b
  7417  00344A                     l125:
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;actuators_main.c: 117:         {;actuators_main.c: 119:         RD1 = 1;
  7421  00344A  8283               	bsf	3971,1,c	;volatile
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;actuators_main.c: 122:           _delay((unsigned long)((1250)*(10000000/4000000.0)));
  7425  00344C  0E05               	movlw	5
  7426  00344E  0100               	movlb	0	; () banked
  7427  003450  6F82               	movwf	??_servoRotate0& (0+255),b
  7428  003452  0E0D               	movlw	13
  7429  003454                     u10037:
  7430  003454  2EE8               	decfsz	wreg,f,c
  7431  003456  D7FE               	bra	u10037
  7432  003458  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7433  00345A  D7FC               	bra	u10037
  7434  00345C  F000               	nop	
  7435                           
  7436                           ;actuators_main.c: 124:         RD1 = 0;
  7437  00345E  9283               	bcf	3971,1,c	;volatile
  7438                           
  7439                           ;actuators_main.c: 127:           _delay((unsigned long)((16950)*(10000000/4000000.0)));
  7440  003460  0E38               	movlw	56
  7441  003462  0100               	movlb	0	; () banked
  7442  003464  6F82               	movwf	??_servoRotate0& (0+255),b
  7443  003466  0E06               	movlw	6
  7444  003468                     u10047:
  7445  003468  2EE8               	decfsz	wreg,f,c
  7446  00346A  D7FE               	bra	u10047
  7447  00346C  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7448  00346E  D7FC               	bra	u10047
  7449  003470  D000               	nop2	
  7450                           
  7451                           ;actuators_main.c: 128:         }
  7452  003472  0100               	movlb	0	; () banked
  7453  003474  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7454  003476  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7455  003478  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7456  00347A  E104               	bnz	u7720
  7457  00347C  0E1E               	movlw	30
  7458  00347E  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7459  003480  A0D8               	btfss	status,0,c
  7460  003482  D7E3               	goto	l125
  7461  003484                     u7720:
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;actuators_main.c: 130:     if (servo==3){
  7465  003484  0E03               	movlw	3
  7466  003486  1980               	xorwf	servoRotate0@servo& (0+255),w,b
  7467  003488  1181               	iorwf	(servoRotate0@servo+1)& (0+255),w,b
  7468  00348A  A4D8               	btfss	status,2,c
  7469  00348C  0012               	return	
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;actuators_main.c: 131:       for(i=0;i<30;i++)
  7473  00348E  0E00               	movlw	0
  7474  003490  6F84               	movwf	(servoRotate0@i+1)& (0+255),b
  7475  003492  0E00               	movlw	0
  7476  003494  6F83               	movwf	servoRotate0@i& (0+255),b
  7477  003496                     l128:
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;actuators_main.c: 132:         {;actuators_main.c: 133:         RD0 = 1;
  7481  003496  8083               	bsf	3971,0,c	;volatile
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;actuators_main.c: 134:         _delay((unsigned long)((2000)*(10000000/4000000.0)));
  7485  003498  0E07               	movlw	7
  7486  00349A  0100               	movlb	0	; () banked
  7487  00349C  6F82               	movwf	??_servoRotate0& (0+255),b
  7488  00349E  0E7D               	movlw	125
  7489  0034A0                     u10057:
  7490  0034A0  2EE8               	decfsz	wreg,f,c
  7491  0034A2  D7FE               	bra	u10057
  7492  0034A4  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7493  0034A6  D7FC               	bra	u10057
  7494                           
  7495                           ;actuators_main.c: 137:         RD0 = 0;
  7496  0034A8  9083               	bcf	3971,0,c	;volatile
  7497                           
  7498                           ;actuators_main.c: 138:         _delay((unsigned long)((11000)*(10000000/4000000.0)));
  7499  0034AA  0E24               	movlw	36
  7500  0034AC  0100               	movlb	0	; () banked
  7501  0034AE  6F82               	movwf	??_servoRotate0& (0+255),b
  7502  0034B0  0EB5               	movlw	181
  7503  0034B2                     u10067:
  7504  0034B2  2EE8               	decfsz	wreg,f,c
  7505  0034B4  D7FE               	bra	u10067
  7506  0034B6  2F82               	decfsz	??_servoRotate0& (0+255),f,b
  7507  0034B8  D7FC               	bra	u10067
  7508  0034BA  D000               	nop2	
  7509                           
  7510                           ;actuators_main.c: 139:         }
  7511  0034BC  0100               	movlb	0	; () banked
  7512  0034BE  4B83               	infsnz	servoRotate0@i& (0+255),f,b
  7513  0034C0  2B84               	incf	(servoRotate0@i+1)& (0+255),f,b
  7514  0034C2  5184               	movf	(servoRotate0@i+1)& (0+255),w,b
  7515  0034C4  E105               	bnz	u7740
  7516  0034C6  0E1E               	movlw	30
  7517  0034C8  5D83               	subwf	servoRotate0@i& (0+255),w,b
  7518  0034CA  B0D8               	btfsc	status,0,c
  7519  0034CC  0012               	return	
  7520  0034CE  D7E3               	goto	l128
  7521  0034D0                     u7740:
  7522                           
  7523                           ; BSR set to: 0
  7524  0034D0  0012               	return		;funcret
  7525  0034D2                     __end_of_servoRotate0:
  7526                           	opt callstack 0
  7527                           
  7528 ;; *************** function _UI_main *****************
  7529 ;; Defined at:
  7530 ;;		line 487 in file "main.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  t_dep           2  123[BANK0 ] int 
  7533 ;;  poles_detect    2  125[BANK0 ] int 
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;  i               1   89[BANK1 ] unsigned char 
  7536 ;;  keypress        1   84[BANK1 ] unsigned char 
  7537 ;;  Pole           80    4[BANK1 ] struct Poles[10]
  7538 ;;  tick            4   85[BANK1 ] unsigned long 
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      void 
  7541 ;; Registers used:
  7542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;      Locals:         0       0      86       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Totals:         0       4      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;Total ram usage:       94 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:   14
  7555 ;; This function calls:
  7556 ;;		_I2C_Master_Init
  7557 ;;		_I2C_Master_Read
  7558 ;;		_I2C_Master_Start
  7559 ;;		_I2C_Master_Stop
  7560 ;;		_I2C_Master_Write
  7561 ;;		___llmod
  7562 ;;		_initLCD
  7563 ;;		_lcdInst
  7564 ;;		_printf
  7565 ;; This function is called by:
  7566 ;;		_main
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text19
  7571  000012                     __ptext19:
  7572                           	opt callstack 0
  7573  000012                     _UI_main:
  7574                           	opt callstack 16
  7575                           
  7576                           ;main.c: 488:     sens = 0;
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;incstack = 0
  7580  000012  0E00               	movlw	0
  7581  000014  6E59               	movwf	_sens+1,c	;volatile
  7582  000016  0E00               	movlw	0
  7583  000018  6E58               	movwf	_sens,c	;volatile
  7584                           
  7585                           ;main.c: 493:     LATD = 0x00;
  7586  00001A  0E00               	movlw	0
  7587  00001C  6E8C               	movwf	3980,c	;volatile
  7588                           
  7589                           ;main.c: 494:     TRISD = 0x00;
  7590  00001E  0E00               	movlw	0
  7591  000020  6E95               	movwf	3989,c	;volatile
  7592                           
  7593                           ;main.c: 497:     TRISD = 0x00;
  7594  000022  0E00               	movlw	0
  7595  000024  6E95               	movwf	3989,c	;volatile
  7596                           
  7597                           ;main.c: 500:     INT1IE = 1;
  7598  000026  86F0               	bsf	4080,3,c	;volatile
  7599                           
  7600                           ;main.c: 503:     initLCD();
  7601  000028  ECCB  F01C         	call	_initLCD	;wreg free
  7602                           
  7603                           ;main.c: 506:     (INTCONbits.GIE = 1);
  7604  00002C  8EF2               	bsf	4082,7,c	;volatile
  7605                           
  7606                           ;main.c: 508:     I2C_Master_Init(100000);
  7607  00002E  0EA0               	movlw	160
  7608  000030  0100               	movlb	0	; () banked
  7609  000032  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  7610  000034  0E86               	movlw	134
  7611  000036  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  7612  000038  0E01               	movlw	1
  7613  00003A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  7614  00003C  0E00               	movlw	0
  7615  00003E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  7616  000040  EC6E  F01D         	call	_I2C_Master_Init	;wreg free
  7617                           
  7618                           ;main.c: 509:     I2C_Master_Start();
  7619  000044  ECF3  F01F         	call	_I2C_Master_Start	;wreg free
  7620                           
  7621                           ;main.c: 510:     I2C_Master_Write(0b00010000);
  7622  000048  0E00               	movlw	0
  7623  00004A  0100               	movlb	0	; () banked
  7624  00004C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7625  00004E  0E10               	movlw	16
  7626  000050  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7627  000052  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  7628                           
  7629                           ;main.c: 511:     I2C_Master_Stop();
  7630  000056  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  7631                           
  7632                           ;main.c: 521:     if((pressed == 0)&&(sens==0)){
  7633  00005A  0101               	movlb	1	; () banked
  7634  00005C  51EA               	movf	_pressed& (0+255),w,b
  7635  00005E  11EB               	iorwf	(_pressed+1)& (0+255),w,b
  7636  000060  A4D8               	btfss	status,2,c
  7637  000062  D3DC               	goto	u8880
  7638                           
  7639                           ; BSR set to: 1
  7640  000064  5058               	movf	_sens,w,c	;volatile
  7641  000066  1059               	iorwf	_sens+1,w,c	;volatile
  7642  000068  A4D8               	btfss	status,2,c
  7643  00006A  D3D8               	goto	u8880
  7644                           
  7645                           ; BSR set to: 1
  7646                           ;main.c: 522:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7647  00006C  0E01               	movlw	1
  7648  00006E  ECE2  F01F         	call	_lcdInst
  7649  000072  0E11               	movlw	17
  7650  000074  0101               	movlb	1	; () banked
  7651  000076  6F00               	movwf	??_UI_main& (0+255),b
  7652  000078  0E3A               	movlw	58
  7653  00007A                     u10077:
  7654  00007A  2EE8               	decfsz	wreg,f,c
  7655  00007C  D7FE               	bra	u10077
  7656  00007E  2F00               	decfsz	??_UI_main& (0+255),f,b
  7657  000080  D7FC               	bra	u10077
  7658  000082  F000               	nop	
  7659                           
  7660                           ;main.c: 523:         printf("1 - Start");
  7661  000084  0EC5               	movlw	low STR_23
  7662  000086  0100               	movlb	0	; () banked
  7663  000088  6FED               	movwf	printf@fmt& (0+255),b
  7664  00008A  0EFF               	movlw	high STR_23
  7665  00008C  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7666  00008E  EC7C  F01F         	call	_printf	;wreg free
  7667  000092  0EC0               	movlw	192
  7668  000094  ECE2  F01F         	call	_lcdInst
  7669                           
  7670                           ;main.c: 525:         printf("2 - Summary");
  7671  000098  0E47               	movlw	low STR_24
  7672  00009A  0100               	movlb	0	; () banked
  7673  00009C  6FED               	movwf	printf@fmt& (0+255),b
  7674  00009E  0EFF               	movlw	high STR_24
  7675  0000A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7676  0000A2  EC7C  F01F         	call	_printf	;wreg free
  7677  0000A6  0E90               	movlw	144
  7678  0000A8  ECE2  F01F         	call	_lcdInst
  7679                           
  7680                           ;main.c: 527:         printf("3 - Date&Time ");
  7681  0000AC  0E6D               	movlw	low STR_25
  7682  0000AE  0100               	movlb	0	; () banked
  7683  0000B0  6FED               	movwf	printf@fmt& (0+255),b
  7684  0000B2  0EFE               	movlw	high STR_25
  7685  0000B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7686  0000B6  EC7C  F01F         	call	_printf	;wreg free
  7687  0000BA  D3B0               	goto	u8880
  7688  0000BC                     l8130:
  7689                           
  7690                           ;main.c: 538:         if (send){
  7691  0000BC  506D               	movf	_send,w,c
  7692  0000BE  B4D8               	btfsc	status,2,c
  7693  0000C0  D3AD               	goto	u8880
  7694                           
  7695                           ;main.c: 539:         if(key_was_pressed){
  7696  0000C2  0101               	movlb	1	; () banked
  7697  0000C4  51F6               	movf	_key_was_pressed& (0+255),w,b	;volatile
  7698  0000C6  B4D8               	btfsc	status,2,c
  7699  0000C8  D3A9               	goto	u8880
  7700                           
  7701                           ; BSR set to: 1
  7702                           ;main.c: 542:             pressed = 1;
  7703  0000CA  0E00               	movlw	0
  7704  0000CC  6FEB               	movwf	(_pressed+1)& (0+255),b
  7705  0000CE  0E01               	movlw	1
  7706  0000D0  6FEA               	movwf	_pressed& (0+255),b
  7707                           
  7708                           ;main.c: 543:             key_was_pressed = 0;
  7709  0000D2  0E00               	movlw	0
  7710  0000D4  6FF6               	movwf	_key_was_pressed& (0+255),b	;volatile
  7711                           
  7712                           ; BSR set to: 1
  7713                           ;main.c: 544:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  7714  0000D6  3881               	swapf	3969,w,c	;volatile
  7715  0000D8  0B0F               	andlw	15
  7716  0000DA  0B0F               	andlw	15
  7717  0000DC  6F54               	movwf	UI_main@keypress& (0+255),b
  7718                           
  7719                           ; BSR set to: 1
  7720                           ;main.c: 545:             temp = keys[keypress];
  7721  0000DE  0E7D               	movlw	low _keys
  7722  0000E0  2554               	addwf	UI_main@keypress& (0+255),w,b
  7723  0000E2  6EF6               	movwf	tblptrl,c
  7724  0000E4  6AF7               	clrf	tblptrh,c
  7725  0000E6  0EFD               	movlw	high _keys
  7726  0000E8  22F7               	addwfc	tblptrh,f,c
  7727  0000EA                     	if	0	;There are less than 3 active tblptr bytes
  7728  0000EA                     	endif
  7729  0000EA  0008               	tblrd		*
  7730  0000EC  CFF5 F0FF          	movff	tablat,_temp
  7731                           
  7732                           ; BSR set to: 1
  7733                           ;main.c: 546:             temp_int = (temp-'0');
  7734  0000F0  0ED0               	movlw	208
  7735  0000F2  0100               	movlb	0	; () banked
  7736  0000F4  25FF               	addwf	_temp& (0+255),w,b
  7737  0000F6  0101               	movlb	1	; () banked
  7738  0000F8  6FF2               	movwf	_temp_int& (0+255),b
  7739  0000FA  6BF3               	clrf	(_temp_int+1)& (0+255),b
  7740  0000FC  0EFF               	movlw	255
  7741  0000FE  23F3               	addwfc	(_temp_int+1)& (0+255),f,b
  7742                           
  7743                           ; BSR set to: 1
  7744                           ;main.c: 548:             if (temp_int == 0){
  7745  000100  51F2               	movf	_temp_int& (0+255),w,b
  7746  000102  11F3               	iorwf	(_temp_int+1)& (0+255),w,b
  7747  000104  A4D8               	btfss	status,2,c
  7748  000106  D02B               	goto	l8160
  7749                           
  7750                           ; BSR set to: 1
  7751                           ;main.c: 549:                 state = 0;
  7752  000108  0E00               	movlw	0
  7753  00010A  6FF1               	movwf	(_state+1)& (0+255),b
  7754  00010C  0E00               	movlw	0
  7755  00010E  6FF0               	movwf	_state& (0+255),b
  7756                           
  7757                           ; BSR set to: 1
  7758                           ;main.c: 550:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7759  000110  0E01               	movlw	1
  7760  000112  ECE2  F01F         	call	_lcdInst
  7761  000116  0E11               	movlw	17
  7762  000118  0101               	movlb	1	; () banked
  7763  00011A  6F00               	movwf	??_UI_main& (0+255),b
  7764  00011C  0E3A               	movlw	58
  7765  00011E                     u10087:
  7766  00011E  2EE8               	decfsz	wreg,f,c
  7767  000120  D7FE               	bra	u10087
  7768  000122  2F00               	decfsz	??_UI_main& (0+255),f,b
  7769  000124  D7FC               	bra	u10087
  7770  000126  F000               	nop	
  7771                           
  7772                           ;main.c: 551:                 printf("1 - Start");
  7773  000128  0EC5               	movlw	low STR_23
  7774  00012A  0100               	movlb	0	; () banked
  7775  00012C  6FED               	movwf	printf@fmt& (0+255),b
  7776  00012E  0EFF               	movlw	high STR_23
  7777  000130  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7778  000132  EC7C  F01F         	call	_printf	;wreg free
  7779  000136  0EC0               	movlw	192
  7780  000138  ECE2  F01F         	call	_lcdInst
  7781                           
  7782                           ;main.c: 553:                 printf("2 - Summary");
  7783  00013C  0E47               	movlw	low STR_24
  7784  00013E  0100               	movlb	0	; () banked
  7785  000140  6FED               	movwf	printf@fmt& (0+255),b
  7786  000142  0EFF               	movlw	high STR_24
  7787  000144  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7788  000146  EC7C  F01F         	call	_printf	;wreg free
  7789  00014A  0E90               	movlw	144
  7790  00014C  ECE2  F01F         	call	_lcdInst
  7791                           
  7792                           ;main.c: 555:                 printf("3 - Date&Time ");
  7793  000150  0E6D               	movlw	low STR_25
  7794  000152  0100               	movlb	0	; () banked
  7795  000154  6FED               	movwf	printf@fmt& (0+255),b
  7796  000156  0EFE               	movlw	high STR_25
  7797  000158  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7798  00015A  EC7C  F01F         	call	_printf	;wreg free
  7799  00015E                     l8160:
  7800                           
  7801                           ;main.c: 558:             if ((temp_int == 1)&&(temp!= '*')&&(temp!= '#')){
  7802  00015E  0101               	movlb	1	; () banked
  7803  000160  05F2               	decf	_temp_int& (0+255),w,b
  7804  000162  11F3               	iorwf	(_temp_int+1)& (0+255),w,b
  7805  000164  A4D8               	btfss	status,2,c
  7806  000166  D041               	goto	l8188
  7807                           
  7808                           ; BSR set to: 1
  7809  000168  0E2A               	movlw	42
  7810  00016A  0100               	movlb	0	; () banked
  7811  00016C  19FF               	xorwf	_temp& (0+255),w,b
  7812  00016E  B4D8               	btfsc	status,2,c
  7813  000170  D03C               	goto	l8188
  7814                           
  7815                           ; BSR set to: 0
  7816  000172  0E23               	movlw	35
  7817  000174  19FF               	xorwf	_temp& (0+255),w,b
  7818  000176  B4D8               	btfsc	status,2,c
  7819  000178  D038               	goto	l8188
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;main.c: 559:                 state = 0;
  7823  00017A  0E00               	movlw	0
  7824  00017C  0101               	movlb	1	; () banked
  7825  00017E  6FF1               	movwf	(_state+1)& (0+255),b
  7826  000180  0E00               	movlw	0
  7827  000182  6FF0               	movwf	_state& (0+255),b
  7828                           
  7829                           ; BSR set to: 1
  7830                           ;main.c: 560:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  7831  000184  0E01               	movlw	1
  7832  000186  ECE2  F01F         	call	_lcdInst
  7833  00018A  0E11               	movlw	17
  7834  00018C  0101               	movlb	1	; () banked
  7835  00018E  6F00               	movwf	??_UI_main& (0+255),b
  7836  000190  0E3A               	movlw	58
  7837  000192                     u10097:
  7838  000192  2EE8               	decfsz	wreg,f,c
  7839  000194  D7FE               	bra	u10097
  7840  000196  2F00               	decfsz	??_UI_main& (0+255),f,b
  7841  000198  D7FC               	bra	u10097
  7842  00019A  F000               	nop	
  7843                           
  7844                           ;main.c: 561:                 printf("Machine In Use");
  7845  00019C  0E8B               	movlw	low STR_29
  7846  00019E  0100               	movlb	0	; () banked
  7847  0001A0  6FED               	movwf	printf@fmt& (0+255),b
  7848  0001A2  0EFE               	movlw	high STR_29
  7849  0001A4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7850  0001A6  EC7C  F01F         	call	_printf	;wreg free
  7851  0001AA  0ED0               	movlw	208
  7852  0001AC  ECE2  F01F         	call	_lcdInst
  7853                           
  7854                           ;main.c: 563:                 printf("     0-Menu     ");
  7855  0001B0  0EA6               	movlw	low STR_30
  7856  0001B2  0100               	movlb	0	; () banked
  7857  0001B4  6FED               	movwf	printf@fmt& (0+255),b
  7858  0001B6  0EFD               	movlw	high STR_30
  7859  0001B8  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7860  0001BA  EC7C  F01F         	call	_printf	;wreg free
  7861                           
  7862                           ;main.c: 567:                 I2C_Master_Start();
  7863  0001BE  ECF3  F01F         	call	_I2C_Master_Start	;wreg free
  7864                           
  7865                           ;main.c: 568:                 I2C_Master_Write(0b00010000);
  7866  0001C2  0E00               	movlw	0
  7867  0001C4  0100               	movlb	0	; () banked
  7868  0001C6  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7869  0001C8  0E10               	movlw	16
  7870  0001CA  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7871  0001CC  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  7872                           
  7873                           ;main.c: 569:                 I2C_Master_Write('1');
  7874  0001D0  0E00               	movlw	0
  7875  0001D2  0100               	movlb	0	; () banked
  7876  0001D4  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  7877  0001D6  0E31               	movlw	49
  7878  0001D8  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  7879  0001DA  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  7880                           
  7881                           ;main.c: 570:                 I2C_Master_Stop();
  7882  0001DE  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  7883                           
  7884                           ;main.c: 572:                 sens = 1;
  7885  0001E2  0E00               	movlw	0
  7886  0001E4  6E59               	movwf	_sens+1,c	;volatile
  7887  0001E6  0E01               	movlw	1
  7888  0001E8  6E58               	movwf	_sens,c	;volatile
  7889  0001EA                     l8188:
  7890                           
  7891                           ;main.c: 575:                 if ((temp_int == 2)||(state == 2)){
  7892  0001EA  0E02               	movlw	2
  7893  0001EC  0101               	movlb	1	; () banked
  7894  0001EE  19F2               	xorwf	_temp_int& (0+255),w,b
  7895  0001F0  11F3               	iorwf	(_temp_int+1)& (0+255),w,b
  7896  0001F2  B4D8               	btfsc	status,2,c
  7897  0001F4  D005               	goto	u8740
  7898                           
  7899                           ; BSR set to: 1
  7900  0001F6  0E02               	movlw	2
  7901  0001F8  19F0               	xorwf	_state& (0+255),w,b
  7902  0001FA  11F1               	iorwf	(_state+1)& (0+255),w,b
  7903  0001FC  A4D8               	btfss	status,2,c
  7904  0001FE  D253               	goto	l8298
  7905  000200                     u8740:
  7906                           
  7907                           ; BSR set to: 1
  7908                           ;main.c: 576:                     if ((temp_int == 2)){
  7909  000200  0E02               	movlw	2
  7910  000202  19F2               	xorwf	_temp_int& (0+255),w,b
  7911  000204  11F3               	iorwf	(_temp_int+1)& (0+255),w,b
  7912  000206  A4D8               	btfss	status,2,c
  7913  000208  D033               	goto	l8210
  7914                           
  7915                           ; BSR set to: 1
  7916                           ;main.c: 577:                         state = 2;
  7917  00020A  0E00               	movlw	0
  7918  00020C  6FF1               	movwf	(_state+1)& (0+255),b
  7919  00020E  0E02               	movlw	2
  7920  000210  6FF0               	movwf	_state& (0+255),b
  7921                           
  7922                           ;main.c: 578:                         disp = 0;
  7923  000212  0E00               	movlw	0
  7924  000214  6FEF               	movwf	(_disp+1)& (0+255),b
  7925  000216  0E00               	movlw	0
  7926  000218  6FEE               	movwf	_disp& (0+255),b
  7927                           
  7928                           ; BSR set to: 1
  7929                           ;main.c: 579:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  7930  00021A  0E01               	movlw	1
  7931  00021C  ECE2  F01F         	call	_lcdInst
  7932  000220  0E11               	movlw	17
  7933  000222  0101               	movlb	1	; () banked
  7934  000224  6F00               	movwf	??_UI_main& (0+255),b
  7935  000226  0E3A               	movlw	58
  7936  000228                     u10107:
  7937  000228  2EE8               	decfsz	wreg,f,c
  7938  00022A  D7FE               	bra	u10107
  7939  00022C  2F00               	decfsz	??_UI_main& (0+255),f,b
  7940  00022E  D7FC               	bra	u10107
  7941  000230  F000               	nop	
  7942                           
  7943                           ;main.c: 580:                         printf("Op Time:");
  7944  000232  0EE3               	movlw	low STR_31
  7945  000234  0100               	movlb	0	; () banked
  7946  000236  6FED               	movwf	printf@fmt& (0+255),b
  7947  000238  0EFF               	movlw	high STR_31
  7948  00023A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7949  00023C  EC7C  F01F         	call	_printf	;wreg free
  7950  000240  0EC0               	movlw	192
  7951  000242  ECE2  F01F         	call	_lcdInst
  7952                           
  7953                           ;main.c: 582:                         printf("%d", opTime);
  7954  000246  0E2A               	movlw	low (STR_60+13)
  7955  000248  0100               	movlb	0	; () banked
  7956  00024A  6FED               	movwf	printf@fmt& (0+255),b
  7957  00024C  0EFE               	movlw	high (STR_60+13)
  7958  00024E  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7959  000250  C1E8  F0EF         	movff	_opTime,?_printf+2
  7960  000254  C1E9  F0F0         	movff	_opTime+1,?_printf+3
  7961  000258  EC7C  F01F         	call	_printf	;wreg free
  7962  00025C  0ED0               	movlw	208
  7963  00025E  ECE2  F01F         	call	_lcdInst
  7964                           
  7965                           ;main.c: 584:                         printf("    0-Menu   #>");
  7966  000262  0EEB               	movlw	low (STR_36+1)
  7967  000264  0100               	movlb	0	; () banked
  7968  000266  6FED               	movwf	printf@fmt& (0+255),b
  7969  000268  0EFD               	movlw	high (STR_36+1)
  7970  00026A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  7971  00026C  EC7C  F01F         	call	_printf	;wreg free
  7972  000270                     l8210:
  7973                           
  7974                           ;main.c: 586:                     if ((temp == '*') && (disp != 0)){
  7975  000270  0E2A               	movlw	42
  7976  000272  0100               	movlb	0	; () banked
  7977  000274  19FF               	xorwf	_temp& (0+255),w,b
  7978  000276  A4D8               	btfss	status,2,c
  7979  000278  D00B               	goto	l519
  7980                           
  7981                           ; BSR set to: 0
  7982  00027A  0101               	movlb	1	; () banked
  7983  00027C  51EE               	movf	_disp& (0+255),w,b
  7984  00027E  11EF               	iorwf	(_disp+1)& (0+255),w,b
  7985  000280  B4D8               	btfsc	status,2,c
  7986  000282  D006               	goto	l519
  7987                           
  7988                           ; BSR set to: 1
  7989                           ;main.c: 587:                         disp = disp - 1;
  7990  000284  0EFF               	movlw	255
  7991  000286  25EE               	addwf	_disp& (0+255),w,b
  7992  000288  6FEE               	movwf	_disp& (0+255),b
  7993  00028A  0EFF               	movlw	255
  7994  00028C  21EF               	addwfc	(_disp+1)& (0+255),w,b
  7995  00028E  6FEF               	movwf	(_disp+1)& (0+255),b
  7996  000290                     l519:
  7997                           
  7998                           ;main.c: 589:                     if ((temp == '#')&& (disp <12)){
  7999  000290  0E23               	movlw	35
  8000  000292  0100               	movlb	0	; () banked
  8001  000294  19FF               	xorwf	_temp& (0+255),w,b
  8002  000296  A4D8               	btfss	status,2,c
  8003  000298  D00B               	goto	l8220
  8004                           
  8005                           ; BSR set to: 0
  8006  00029A  0101               	movlb	1	; () banked
  8007  00029C  BFEF               	btfsc	(_disp+1)& (0+255),7,b
  8008  00029E  D006               	goto	u8790
  8009  0002A0  51EF               	movf	(_disp+1)& (0+255),w,b
  8010  0002A2  E106               	bnz	l8220
  8011  0002A4  0E0C               	movlw	12
  8012  0002A6  5DEE               	subwf	_disp& (0+255),w,b
  8013  0002A8  B0D8               	btfsc	status,0,c
  8014  0002AA  D002               	goto	l8220
  8015  0002AC                     u8790:
  8016                           
  8017                           ; BSR set to: 1
  8018                           ;main.c: 590:                         disp++;
  8019  0002AC  4BEE               	infsnz	_disp& (0+255),f,b
  8020  0002AE  2BEF               	incf	(_disp+1)& (0+255),f,b
  8021  0002B0                     l8220:
  8022                           
  8023                           ;main.c: 592:                     if (disp == 0){
  8024  0002B0  0101               	movlb	1	; () banked
  8025  0002B2  51EE               	movf	_disp& (0+255),w,b
  8026  0002B4  11EF               	iorwf	(_disp+1)& (0+255),w,b
  8027  0002B6  A4D8               	btfss	status,2,c
  8028  0002B8  D02B               	goto	l8236
  8029                           
  8030                           ; BSR set to: 1
  8031                           ;main.c: 593:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8032  0002BA  0E01               	movlw	1
  8033  0002BC  ECE2  F01F         	call	_lcdInst
  8034  0002C0  0E11               	movlw	17
  8035  0002C2  0101               	movlb	1	; () banked
  8036  0002C4  6F00               	movwf	??_UI_main& (0+255),b
  8037  0002C6  0E3A               	movlw	58
  8038  0002C8                     u10117:
  8039  0002C8  2EE8               	decfsz	wreg,f,c
  8040  0002CA  D7FE               	bra	u10117
  8041  0002CC  2F00               	decfsz	??_UI_main& (0+255),f,b
  8042  0002CE  D7FC               	bra	u10117
  8043  0002D0  F000               	nop	
  8044                           
  8045                           ;main.c: 594:                         printf("Op Time:");
  8046  0002D2  0EE3               	movlw	low STR_31
  8047  0002D4  0100               	movlb	0	; () banked
  8048  0002D6  6FED               	movwf	printf@fmt& (0+255),b
  8049  0002D8  0EFF               	movlw	high STR_31
  8050  0002DA  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8051  0002DC  EC7C  F01F         	call	_printf	;wreg free
  8052  0002E0  0EC0               	movlw	192
  8053  0002E2  ECE2  F01F         	call	_lcdInst
  8054                           
  8055                           ;main.c: 596:                         printf("%d", cnt);
  8056  0002E6  0E2A               	movlw	low (STR_60+13)
  8057  0002E8  0100               	movlb	0	; () banked
  8058  0002EA  6FED               	movwf	printf@fmt& (0+255),b
  8059  0002EC  0EFE               	movlw	high (STR_60+13)
  8060  0002EE  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8061  0002F0  0E00               	movlw	0
  8062  0002F2  6FF0               	movwf	(?_printf+3)& (0+255),b
  8063  0002F4  0E00               	movlw	0
  8064  0002F6  6FEF               	movwf	(?_printf+2)& (0+255),b
  8065  0002F8  EC7C  F01F         	call	_printf	;wreg free
  8066  0002FC  0ED0               	movlw	208
  8067  0002FE  ECE2  F01F         	call	_lcdInst
  8068                           
  8069                           ;main.c: 598:                         printf("     0-Menu   #>");
  8070  000302  0EEA               	movlw	low STR_36
  8071  000304  0100               	movlb	0	; () banked
  8072  000306  6FED               	movwf	printf@fmt& (0+255),b
  8073  000308  0EFD               	movlw	high STR_36
  8074  00030A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8075  00030C  EC7C  F01F         	call	_printf	;wreg free
  8076  000310                     l8236:
  8077                           
  8078                           ;main.c: 601:                     if (disp == 1){
  8079  000310  0101               	movlb	1	; () banked
  8080  000312  05EE               	decf	_disp& (0+255),w,b
  8081  000314  11EF               	iorwf	(_disp+1)& (0+255),w,b
  8082  000316  A4D8               	btfss	status,2,c
  8083  000318  D02F               	goto	l8252
  8084                           
  8085                           ; BSR set to: 1
  8086                           ;main.c: 602:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8087  00031A  0E01               	movlw	1
  8088  00031C  ECE2  F01F         	call	_lcdInst
  8089  000320  0E11               	movlw	17
  8090  000322  0101               	movlb	1	; () banked
  8091  000324  6F00               	movwf	??_UI_main& (0+255),b
  8092  000326  0E3A               	movlw	58
  8093  000328                     u10127:
  8094  000328  2EE8               	decfsz	wreg,f,c
  8095  00032A  D7FE               	bra	u10127
  8096  00032C  2F00               	decfsz	??_UI_main& (0+255),f,b
  8097  00032E  D7FC               	bra	u10127
  8098  000330  F000               	nop	
  8099                           
  8100                           ;main.c: 603:                         printf("No. Tires: %d",t_dep);
  8101  000332  0ED4               	movlw	low STR_37
  8102  000334  0100               	movlb	0	; () banked
  8103  000336  6FED               	movwf	printf@fmt& (0+255),b
  8104  000338  0EFE               	movlw	high STR_37
  8105  00033A  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8106  00033C  C0FB  F0EF         	movff	UI_main@t_dep,?_printf+2
  8107  000340  C0FC  F0F0         	movff	UI_main@t_dep+1,?_printf+3
  8108  000344  EC7C  F01F         	call	_printf	;wreg free
  8109  000348  0EC0               	movlw	192
  8110  00034A  ECE2  F01F         	call	_lcdInst
  8111                           
  8112                           ;main.c: 605:                         printf("No. Poles: %d", poles_detected);
  8113  00034E  0EC6               	movlw	low STR_38
  8114  000350  0100               	movlb	0	; () banked
  8115  000352  6FED               	movwf	printf@fmt& (0+255),b
  8116  000354  0EFE               	movlw	high STR_38
  8117  000356  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8118  000358  C0FD  F0EF         	movff	UI_main@poles_detected,?_printf+2
  8119  00035C  C0FE  F0F0         	movff	UI_main@poles_detected+1,?_printf+3
  8120  000360  EC7C  F01F         	call	_printf	;wreg free
  8121  000364  0ED0               	movlw	208
  8122  000366  ECE2  F01F         	call	_lcdInst
  8123                           
  8124                           ;main.c: 607:                         printf("<*   0-Menu   #>");
  8125  00036A  0EFB               	movlw	low STR_39
  8126  00036C  0100               	movlb	0	; () banked
  8127  00036E  6FED               	movwf	printf@fmt& (0+255),b
  8128  000370  0EFD               	movlw	high STR_39
  8129  000372  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8130  000374  EC7C  F01F         	call	_printf	;wreg free
  8131  000378                     l8252:
  8132                           
  8133                           ;main.c: 610:                     if (disp > 1 && disp <11){
  8134  000378  0101               	movlb	1	; () banked
  8135  00037A  BFEF               	btfsc	(_disp+1)& (0+255),7,b
  8136  00037C  D0CE               	goto	l8276
  8137  00037E  51EF               	movf	(_disp+1)& (0+255),w,b
  8138  000380  E104               	bnz	u8820
  8139  000382  0E02               	movlw	2
  8140  000384  5DEE               	subwf	_disp& (0+255),w,b
  8141  000386  A0D8               	btfss	status,0,c
  8142  000388  D0C8               	goto	l8276
  8143  00038A                     u8820:
  8144                           
  8145                           ; BSR set to: 1
  8146  00038A  BFEF               	btfsc	(_disp+1)& (0+255),7,b
  8147  00038C  D006               	goto	u8830
  8148  00038E  51EF               	movf	(_disp+1)& (0+255),w,b
  8149  000390  E103               	bnz	u8831
  8150  000392  0E0B               	movlw	11
  8151  000394  5DEE               	subwf	_disp& (0+255),w,b
  8152  000396  B0D8               	btfsc	status,0,c
  8153  000398                     u8831:
  8154  000398  D0C0               	goto	l8276
  8155  00039A                     u8830:
  8156                           
  8157                           ; BSR set to: 1
  8158                           ;main.c: 611:                         i = disp - 2;
  8159  00039A  0EFE               	movlw	254
  8160  00039C  25EE               	addwf	_disp& (0+255),w,b
  8161  00039E  6FEC               	movwf	_i& (0+255),b
  8162  0003A0  0EFF               	movlw	255
  8163  0003A2  21EF               	addwfc	(_disp+1)& (0+255),w,b
  8164  0003A4  6FED               	movwf	(_i+1)& (0+255),b
  8165                           
  8166                           ; BSR set to: 1
  8167                           ;main.c: 612:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8168  0003A6  0E01               	movlw	1
  8169  0003A8  ECE2  F01F         	call	_lcdInst
  8170  0003AC  0E11               	movlw	17
  8171  0003AE  0101               	movlb	1	; () banked
  8172  0003B0  6F00               	movwf	??_UI_main& (0+255),b
  8173  0003B2  0E3A               	movlw	58
  8174  0003B4                     u10137:
  8175  0003B4  2EE8               	decfsz	wreg,f,c
  8176  0003B6  D7FE               	bra	u10137
  8177  0003B8  2F00               	decfsz	??_UI_main& (0+255),f,b
  8178  0003BA  D7FC               	bra	u10137
  8179  0003BC  F000               	nop	
  8180                           
  8181                           ;main.c: 613:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  8182  0003BE  0E94               	movlw	low STR_40
  8183  0003C0  0100               	movlb	0	; () banked
  8184  0003C2  6FED               	movwf	printf@fmt& (0+255),b
  8185  0003C4  0EFD               	movlw	high STR_40
  8186  0003C6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8187  0003C8  0E01               	movlw	1
  8188  0003CA  0101               	movlb	1	; () banked
  8189  0003CC  25EC               	addwf	_i& (0+255),w,b
  8190  0003CE  0100               	movlb	0	; () banked
  8191  0003D0  6FEF               	movwf	(?_printf+2)& (0+255),b
  8192  0003D2  0E00               	movlw	0
  8193  0003D4  0101               	movlb	1	; () banked
  8194  0003D6  21ED               	addwfc	(_i+1)& (0+255),w,b
  8195  0003D8  0100               	movlb	0	; () banked
  8196  0003DA  6FF0               	movwf	(?_printf+3)& (0+255),b
  8197  0003DC  C1EC  F100         	movff	_i,??_UI_main
  8198  0003E0  C1ED  F101         	movff	_i+1,??_UI_main+1
  8199  0003E4  0101               	movlb	1	; () banked
  8200  0003E6  90D8               	bcf	status,0,c
  8201  0003E8  3700               	rlcf	??_UI_main& (0+255),f,b
  8202  0003EA  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8203  0003EC  90D8               	bcf	status,0,c
  8204  0003EE  3700               	rlcf	??_UI_main& (0+255),f,b
  8205  0003F0  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8206  0003F2  90D8               	bcf	status,0,c
  8207  0003F4  3700               	rlcf	??_UI_main& (0+255),f,b
  8208  0003F6  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8209  0003F8  0E04               	movlw	low UI_main@Pole
  8210  0003FA  2500               	addwf	??_UI_main& (0+255),w,b
  8211  0003FC  6ED9               	movwf	fsr2l,c
  8212  0003FE  0E01               	movlw	high UI_main@Pole
  8213  000400  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8214  000402  6EDA               	movwf	fsr2h,c
  8215  000404  CFDE F0F1          	movff	postinc2,?_printf+4
  8216  000408  CFDD F0F2          	movff	postdec2,?_printf+5
  8217  00040C  C1EC  F102         	movff	_i,??_UI_main+2
  8218  000410  C1ED  F103         	movff	_i+1,??_UI_main+3
  8219  000414  90D8               	bcf	status,0,c
  8220  000416  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8221  000418  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8222  00041A  90D8               	bcf	status,0,c
  8223  00041C  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8224  00041E  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8225  000420  90D8               	bcf	status,0,c
  8226  000422  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8227  000424  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8228  000426  0E02               	movlw	2
  8229  000428  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8230  00042A  0E00               	movlw	0
  8231  00042C  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8232  00042E  0E04               	movlw	low UI_main@Pole
  8233  000430  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8234  000432  6ED9               	movwf	fsr2l,c
  8235  000434  0E01               	movlw	high UI_main@Pole
  8236  000436  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8237  000438  6EDA               	movwf	fsr2h,c
  8238  00043A  CFDE F0F3          	movff	postinc2,?_printf+6
  8239  00043E  CFDD F0F4          	movff	postdec2,?_printf+7
  8240  000442  EC7C  F01F         	call	_printf	;wreg free
  8241  000446  0EC0               	movlw	192
  8242  000448  ECE2  F01F         	call	_lcdInst
  8243                           
  8244                           ;main.c: 615:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8245  00044C  0E7C               	movlw	low STR_41
  8246  00044E  0100               	movlb	0	; () banked
  8247  000450  6FED               	movwf	printf@fmt& (0+255),b
  8248  000452  0EFE               	movlw	high STR_41
  8249  000454  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8250  000456  0E01               	movlw	1
  8251  000458  0101               	movlb	1	; () banked
  8252  00045A  25EC               	addwf	_i& (0+255),w,b
  8253  00045C  0100               	movlb	0	; () banked
  8254  00045E  6FEF               	movwf	(?_printf+2)& (0+255),b
  8255  000460  0E00               	movlw	0
  8256  000462  0101               	movlb	1	; () banked
  8257  000464  21ED               	addwfc	(_i+1)& (0+255),w,b
  8258  000466  0100               	movlb	0	; () banked
  8259  000468  6FF0               	movwf	(?_printf+3)& (0+255),b
  8260  00046A  C1EC  F100         	movff	_i,??_UI_main
  8261  00046E  C1ED  F101         	movff	_i+1,??_UI_main+1
  8262  000472  0101               	movlb	1	; () banked
  8263  000474  90D8               	bcf	status,0,c
  8264  000476  3700               	rlcf	??_UI_main& (0+255),f,b
  8265  000478  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8266  00047A  90D8               	bcf	status,0,c
  8267  00047C  3700               	rlcf	??_UI_main& (0+255),f,b
  8268  00047E  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8269  000480  90D8               	bcf	status,0,c
  8270  000482  3700               	rlcf	??_UI_main& (0+255),f,b
  8271  000484  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8272  000486  0E04               	movlw	4
  8273  000488  2700               	addwf	??_UI_main& (0+255),f,b
  8274  00048A  0E00               	movlw	0
  8275  00048C  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8276  00048E  0E04               	movlw	low UI_main@Pole
  8277  000490  2500               	addwf	??_UI_main& (0+255),w,b
  8278  000492  6ED9               	movwf	fsr2l,c
  8279  000494  0E01               	movlw	high UI_main@Pole
  8280  000496  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8281  000498  6EDA               	movwf	fsr2h,c
  8282  00049A  CFDE F0F1          	movff	postinc2,?_printf+4
  8283  00049E  CFDD F0F2          	movff	postdec2,?_printf+5
  8284  0004A2  EC7C  F01F         	call	_printf	;wreg free
  8285  0004A6  0E90               	movlw	144
  8286  0004A8  ECE2  F01F         	call	_lcdInst
  8287                           
  8288                           ;main.c: 617:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8289  0004AC  0E3B               	movlw	low STR_42
  8290  0004AE  0100               	movlb	0	; () banked
  8291  0004B0  6FED               	movwf	printf@fmt& (0+255),b
  8292  0004B2  0EFF               	movlw	high STR_42
  8293  0004B4  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8294  0004B6  0E01               	movlw	1
  8295  0004B8  0101               	movlb	1	; () banked
  8296  0004BA  25EC               	addwf	_i& (0+255),w,b
  8297  0004BC  0100               	movlb	0	; () banked
  8298  0004BE  6FEF               	movwf	(?_printf+2)& (0+255),b
  8299  0004C0  0E00               	movlw	0
  8300  0004C2  0101               	movlb	1	; () banked
  8301  0004C4  21ED               	addwfc	(_i+1)& (0+255),w,b
  8302  0004C6  0100               	movlb	0	; () banked
  8303  0004C8  6FF0               	movwf	(?_printf+3)& (0+255),b
  8304  0004CA  C1EC  F100         	movff	_i,??_UI_main
  8305  0004CE  C1ED  F101         	movff	_i+1,??_UI_main+1
  8306  0004D2  0101               	movlb	1	; () banked
  8307  0004D4  90D8               	bcf	status,0,c
  8308  0004D6  3700               	rlcf	??_UI_main& (0+255),f,b
  8309  0004D8  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8310  0004DA  90D8               	bcf	status,0,c
  8311  0004DC  3700               	rlcf	??_UI_main& (0+255),f,b
  8312  0004DE  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8313  0004E0  90D8               	bcf	status,0,c
  8314  0004E2  3700               	rlcf	??_UI_main& (0+255),f,b
  8315  0004E4  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8316  0004E6  0E06               	movlw	6
  8317  0004E8  2700               	addwf	??_UI_main& (0+255),f,b
  8318  0004EA  0E00               	movlw	0
  8319  0004EC  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8320  0004EE  0E04               	movlw	low UI_main@Pole
  8321  0004F0  2500               	addwf	??_UI_main& (0+255),w,b
  8322  0004F2  6ED9               	movwf	fsr2l,c
  8323  0004F4  0E01               	movlw	high UI_main@Pole
  8324  0004F6  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8325  0004F8  6EDA               	movwf	fsr2h,c
  8326  0004FA  CFDE F0F1          	movff	postinc2,?_printf+4
  8327  0004FE  CFDD F0F2          	movff	postdec2,?_printf+5
  8328  000502  EC7C  F01F         	call	_printf	;wreg free
  8329  000506  0ED0               	movlw	208
  8330  000508  ECE2  F01F         	call	_lcdInst
  8331                           
  8332                           ;main.c: 619:                         printf("<*   0-Menu   #>");
  8333  00050C  0EFB               	movlw	low STR_39
  8334  00050E  0100               	movlb	0	; () banked
  8335  000510  6FED               	movwf	printf@fmt& (0+255),b
  8336  000512  0EFD               	movlw	high STR_39
  8337  000514  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8338  000516  EC7C  F01F         	call	_printf	;wreg free
  8339  00051A                     l8276:
  8340                           
  8341                           ;main.c: 621:                     if (disp == 11){
  8342  00051A  0E0B               	movlw	11
  8343  00051C  0101               	movlb	1	; () banked
  8344  00051E  19EE               	xorwf	_disp& (0+255),w,b
  8345  000520  11EF               	iorwf	(_disp+1)& (0+255),w,b
  8346  000522  A4D8               	btfss	status,2,c
  8347  000524  D0C0               	goto	l8298
  8348                           
  8349                           ; BSR set to: 1
  8350                           ;main.c: 622:                         i = disp - 2;
  8351  000526  0EFE               	movlw	254
  8352  000528  25EE               	addwf	_disp& (0+255),w,b
  8353  00052A  6FEC               	movwf	_i& (0+255),b
  8354  00052C  0EFF               	movlw	255
  8355  00052E  21EF               	addwfc	(_disp+1)& (0+255),w,b
  8356  000530  6FED               	movwf	(_i+1)& (0+255),b
  8357                           
  8358                           ; BSR set to: 1
  8359                           ;main.c: 623:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8360  000532  0E01               	movlw	1
  8361  000534  ECE2  F01F         	call	_lcdInst
  8362  000538  0E11               	movlw	17
  8363  00053A  0101               	movlb	1	; () banked
  8364  00053C  6F00               	movwf	??_UI_main& (0+255),b
  8365  00053E  0E3A               	movlw	58
  8366  000540                     u10147:
  8367  000540  2EE8               	decfsz	wreg,f,c
  8368  000542  D7FE               	bra	u10147
  8369  000544  2F00               	decfsz	??_UI_main& (0+255),f,b
  8370  000546  D7FC               	bra	u10147
  8371  000548  F000               	nop	
  8372                           
  8373                           ;main.c: 624:                         printf("P%d Dep:%d,Tot:%d", i+1 , Pole[i].tires_de
      +                          ployed,Pole[i].tires_final);
  8374  00054A  0E94               	movlw	low STR_40
  8375  00054C  0100               	movlb	0	; () banked
  8376  00054E  6FED               	movwf	printf@fmt& (0+255),b
  8377  000550  0EFD               	movlw	high STR_40
  8378  000552  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8379  000554  0E01               	movlw	1
  8380  000556  0101               	movlb	1	; () banked
  8381  000558  25EC               	addwf	_i& (0+255),w,b
  8382  00055A  0100               	movlb	0	; () banked
  8383  00055C  6FEF               	movwf	(?_printf+2)& (0+255),b
  8384  00055E  0E00               	movlw	0
  8385  000560  0101               	movlb	1	; () banked
  8386  000562  21ED               	addwfc	(_i+1)& (0+255),w,b
  8387  000564  0100               	movlb	0	; () banked
  8388  000566  6FF0               	movwf	(?_printf+3)& (0+255),b
  8389  000568  C1EC  F100         	movff	_i,??_UI_main
  8390  00056C  C1ED  F101         	movff	_i+1,??_UI_main+1
  8391  000570  0101               	movlb	1	; () banked
  8392  000572  90D8               	bcf	status,0,c
  8393  000574  3700               	rlcf	??_UI_main& (0+255),f,b
  8394  000576  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8395  000578  90D8               	bcf	status,0,c
  8396  00057A  3700               	rlcf	??_UI_main& (0+255),f,b
  8397  00057C  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8398  00057E  90D8               	bcf	status,0,c
  8399  000580  3700               	rlcf	??_UI_main& (0+255),f,b
  8400  000582  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8401  000584  0E04               	movlw	low UI_main@Pole
  8402  000586  2500               	addwf	??_UI_main& (0+255),w,b
  8403  000588  6ED9               	movwf	fsr2l,c
  8404  00058A  0E01               	movlw	high UI_main@Pole
  8405  00058C  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8406  00058E  6EDA               	movwf	fsr2h,c
  8407  000590  CFDE F0F1          	movff	postinc2,?_printf+4
  8408  000594  CFDD F0F2          	movff	postdec2,?_printf+5
  8409  000598  C1EC  F102         	movff	_i,??_UI_main+2
  8410  00059C  C1ED  F103         	movff	_i+1,??_UI_main+3
  8411  0005A0  90D8               	bcf	status,0,c
  8412  0005A2  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8413  0005A4  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8414  0005A6  90D8               	bcf	status,0,c
  8415  0005A8  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8416  0005AA  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8417  0005AC  90D8               	bcf	status,0,c
  8418  0005AE  3702               	rlcf	(??_UI_main+2)& (0+255),f,b
  8419  0005B0  3703               	rlcf	(??_UI_main+3)& (0+255),f,b
  8420  0005B2  0E02               	movlw	2
  8421  0005B4  2702               	addwf	(??_UI_main+2)& (0+255),f,b
  8422  0005B6  0E00               	movlw	0
  8423  0005B8  2303               	addwfc	(??_UI_main+3)& (0+255),f,b
  8424  0005BA  0E04               	movlw	low UI_main@Pole
  8425  0005BC  2502               	addwf	(??_UI_main+2)& (0+255),w,b
  8426  0005BE  6ED9               	movwf	fsr2l,c
  8427  0005C0  0E01               	movlw	high UI_main@Pole
  8428  0005C2  2103               	addwfc	(??_UI_main+3)& (0+255),w,b
  8429  0005C4  6EDA               	movwf	fsr2h,c
  8430  0005C6  CFDE F0F3          	movff	postinc2,?_printf+6
  8431  0005CA  CFDD F0F4          	movff	postdec2,?_printf+7
  8432  0005CE  EC7C  F01F         	call	_printf	;wreg free
  8433  0005D2  0EC0               	movlw	192
  8434  0005D4  ECE2  F01F         	call	_lcdInst
  8435                           
  8436                           ;main.c: 626:                         printf("DistToStart:%d",i+1 , Pole[i].dist_from_st
      +                          art);
  8437  0005D8  0E7C               	movlw	low STR_41
  8438  0005DA  0100               	movlb	0	; () banked
  8439  0005DC  6FED               	movwf	printf@fmt& (0+255),b
  8440  0005DE  0EFE               	movlw	high STR_41
  8441  0005E0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8442  0005E2  0E01               	movlw	1
  8443  0005E4  0101               	movlb	1	; () banked
  8444  0005E6  25EC               	addwf	_i& (0+255),w,b
  8445  0005E8  0100               	movlb	0	; () banked
  8446  0005EA  6FEF               	movwf	(?_printf+2)& (0+255),b
  8447  0005EC  0E00               	movlw	0
  8448  0005EE  0101               	movlb	1	; () banked
  8449  0005F0  21ED               	addwfc	(_i+1)& (0+255),w,b
  8450  0005F2  0100               	movlb	0	; () banked
  8451  0005F4  6FF0               	movwf	(?_printf+3)& (0+255),b
  8452  0005F6  C1EC  F100         	movff	_i,??_UI_main
  8453  0005FA  C1ED  F101         	movff	_i+1,??_UI_main+1
  8454  0005FE  0101               	movlb	1	; () banked
  8455  000600  90D8               	bcf	status,0,c
  8456  000602  3700               	rlcf	??_UI_main& (0+255),f,b
  8457  000604  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8458  000606  90D8               	bcf	status,0,c
  8459  000608  3700               	rlcf	??_UI_main& (0+255),f,b
  8460  00060A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8461  00060C  90D8               	bcf	status,0,c
  8462  00060E  3700               	rlcf	??_UI_main& (0+255),f,b
  8463  000610  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8464  000612  0E04               	movlw	4
  8465  000614  2700               	addwf	??_UI_main& (0+255),f,b
  8466  000616  0E00               	movlw	0
  8467  000618  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8468  00061A  0E04               	movlw	low UI_main@Pole
  8469  00061C  2500               	addwf	??_UI_main& (0+255),w,b
  8470  00061E  6ED9               	movwf	fsr2l,c
  8471  000620  0E01               	movlw	high UI_main@Pole
  8472  000622  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8473  000624  6EDA               	movwf	fsr2h,c
  8474  000626  CFDE F0F1          	movff	postinc2,?_printf+4
  8475  00062A  CFDD F0F2          	movff	postdec2,?_printf+5
  8476  00062E  EC7C  F01F         	call	_printf	;wreg free
  8477  000632  0E90               	movlw	144
  8478  000634  ECE2  F01F         	call	_lcdInst
  8479                           
  8480                           ;main.c: 628:                         printf("DistToCL:%d",i+1 , Pole[i].dist_from_cl);
  8481  000638  0E3B               	movlw	low STR_42
  8482  00063A  0100               	movlb	0	; () banked
  8483  00063C  6FED               	movwf	printf@fmt& (0+255),b
  8484  00063E  0EFF               	movlw	high STR_42
  8485  000640  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8486  000642  0E01               	movlw	1
  8487  000644  0101               	movlb	1	; () banked
  8488  000646  25EC               	addwf	_i& (0+255),w,b
  8489  000648  0100               	movlb	0	; () banked
  8490  00064A  6FEF               	movwf	(?_printf+2)& (0+255),b
  8491  00064C  0E00               	movlw	0
  8492  00064E  0101               	movlb	1	; () banked
  8493  000650  21ED               	addwfc	(_i+1)& (0+255),w,b
  8494  000652  0100               	movlb	0	; () banked
  8495  000654  6FF0               	movwf	(?_printf+3)& (0+255),b
  8496  000656  C1EC  F100         	movff	_i,??_UI_main
  8497  00065A  C1ED  F101         	movff	_i+1,??_UI_main+1
  8498  00065E  0101               	movlb	1	; () banked
  8499  000660  90D8               	bcf	status,0,c
  8500  000662  3700               	rlcf	??_UI_main& (0+255),f,b
  8501  000664  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8502  000666  90D8               	bcf	status,0,c
  8503  000668  3700               	rlcf	??_UI_main& (0+255),f,b
  8504  00066A  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8505  00066C  90D8               	bcf	status,0,c
  8506  00066E  3700               	rlcf	??_UI_main& (0+255),f,b
  8507  000670  3701               	rlcf	(??_UI_main+1)& (0+255),f,b
  8508  000672  0E06               	movlw	6
  8509  000674  2700               	addwf	??_UI_main& (0+255),f,b
  8510  000676  0E00               	movlw	0
  8511  000678  2301               	addwfc	(??_UI_main+1)& (0+255),f,b
  8512  00067A  0E04               	movlw	low UI_main@Pole
  8513  00067C  2500               	addwf	??_UI_main& (0+255),w,b
  8514  00067E  6ED9               	movwf	fsr2l,c
  8515  000680  0E01               	movlw	high UI_main@Pole
  8516  000682  2101               	addwfc	(??_UI_main+1)& (0+255),w,b
  8517  000684  6EDA               	movwf	fsr2h,c
  8518  000686  CFDE F0F1          	movff	postinc2,?_printf+4
  8519  00068A  CFDD F0F2          	movff	postdec2,?_printf+5
  8520  00068E  EC7C  F01F         	call	_printf	;wreg free
  8521  000692  0ED0               	movlw	208
  8522  000694  ECE2  F01F         	call	_lcdInst
  8523                           
  8524                           ;main.c: 630:                         printf("<*   0-Menu     ");
  8525  000698  0EB7               	movlw	low STR_47
  8526  00069A  0100               	movlb	0	; () banked
  8527  00069C  6FED               	movwf	printf@fmt& (0+255),b
  8528  00069E  0EFD               	movlw	high STR_47
  8529  0006A0  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8530  0006A2  EC7C  F01F         	call	_printf	;wreg free
  8531  0006A6                     l8298:
  8532                           
  8533                           ;main.c: 633:             if (temp_int == 3){
  8534  0006A6  0E03               	movlw	3
  8535  0006A8  0101               	movlb	1	; () banked
  8536  0006AA  19F2               	xorwf	_temp_int& (0+255),w,b
  8537  0006AC  11F3               	iorwf	(_temp_int+1)& (0+255),w,b
  8538  0006AE  A4D8               	btfss	status,2,c
  8539  0006B0  D0B5               	goto	u8880
  8540                           
  8541                           ; BSR set to: 1
  8542                           ;main.c: 634:                 state = 0;
  8543  0006B2  0E00               	movlw	0
  8544  0006B4  6FF1               	movwf	(_state+1)& (0+255),b
  8545  0006B6  0E00               	movlw	0
  8546  0006B8  6FF0               	movwf	_state& (0+255),b
  8547                           
  8548                           ;main.c: 635:                 tick = 0;
  8549  0006BA  0E00               	movlw	0
  8550  0006BC  6F55               	movwf	UI_main@tick& (0+255),b
  8551  0006BE  0E00               	movlw	0
  8552  0006C0  6F56               	movwf	(UI_main@tick+1)& (0+255),b
  8553  0006C2  0E00               	movlw	0
  8554  0006C4  6F57               	movwf	(UI_main@tick+2)& (0+255),b
  8555  0006C6  0E00               	movlw	0
  8556  0006C8  6F58               	movwf	(UI_main@tick+3)& (0+255),b
  8557                           
  8558                           ;main.c: 636:                 while(~key_was_pressed){
  8559  0006CA  D0A5               	goto	l8348
  8560  0006CC                     l8302:
  8561                           
  8562                           ; BSR set to: 1
  8563                           ;main.c: 637:                     if(tick % 1000 == 0){
  8564  0006CC  C155  F080         	movff	UI_main@tick,___llmod@dividend
  8565  0006D0  C156  F081         	movff	UI_main@tick+1,___llmod@dividend+1
  8566  0006D4  C157  F082         	movff	UI_main@tick+2,___llmod@dividend+2
  8567  0006D8  C158  F083         	movff	UI_main@tick+3,___llmod@dividend+3
  8568  0006DC  0EE8               	movlw	232
  8569  0006DE  0100               	movlb	0	; () banked
  8570  0006E0  6F84               	movwf	___llmod@divisor& (0+255),b
  8571  0006E2  0E03               	movlw	3
  8572  0006E4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  8573  0006E6  0E00               	movlw	0
  8574  0006E8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  8575  0006EA  0E00               	movlw	0
  8576  0006EC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  8577  0006EE  EC3A  F01D         	call	___llmod	;wreg free
  8578  0006F2  0100               	movlb	0	; () banked
  8579  0006F4  5180               	movf	?___llmod& (0+255),w,b
  8580  0006F6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  8581  0006F8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  8582  0006FA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  8583  0006FC  A4D8               	btfss	status,2,c
  8584  0006FE  D084               	goto	l8346
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;main.c: 638:                         { lcdInst(0x01); _delay((unsigned long)((5)*(10000
      +                          000/4000.0)));};
  8588  000700  0E01               	movlw	1
  8589  000702  ECE2  F01F         	call	_lcdInst
  8590  000706  0E11               	movlw	17
  8591  000708  0101               	movlb	1	; () banked
  8592  00070A  6F00               	movwf	??_UI_main& (0+255),b
  8593  00070C  0E3A               	movlw	58
  8594  00070E                     u10157:
  8595  00070E  2EE8               	decfsz	wreg,f,c
  8596  000710  D7FE               	bra	u10157
  8597  000712  2F00               	decfsz	??_UI_main& (0+255),f,b
  8598  000714  D7FC               	bra	u10157
  8599  000716  F000               	nop	
  8600                           
  8601                           ;main.c: 639:                         printf("DATE & TIME");
  8602  000718  0E17               	movlw	low STR_48
  8603  00071A  0100               	movlb	0	; () banked
  8604  00071C  6FED               	movwf	printf@fmt& (0+255),b
  8605  00071E  0EFF               	movlw	high STR_48
  8606  000720  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8607  000722  EC7C  F01F         	call	_printf	;wreg free
  8608                           
  8609                           ;main.c: 640:                         I2C_Master_Init(100000);
  8610  000726  0EA0               	movlw	160
  8611  000728  0100               	movlb	0	; () banked
  8612  00072A  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
  8613  00072C  0E86               	movlw	134
  8614  00072E  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
  8615  000730  0E01               	movlw	1
  8616  000732  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
  8617  000734  0E00               	movlw	0
  8618  000736  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
  8619  000738  EC6E  F01D         	call	_I2C_Master_Init	;wreg free
  8620                           
  8621                           ;main.c: 641:                         I2C_Master_Start();
  8622  00073C  ECF3  F01F         	call	_I2C_Master_Start	;wreg free
  8623                           
  8624                           ;main.c: 642:                         I2C_Master_Write(0b11010000);
  8625  000740  0E00               	movlw	0
  8626  000742  0100               	movlb	0	; () banked
  8627  000744  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8628  000746  0ED0               	movlw	208
  8629  000748  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8630  00074A  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  8631                           
  8632                           ;main.c: 643:                         I2C_Master_Write(0x00);
  8633  00074E  0E00               	movlw	0
  8634  000750  0100               	movlb	0	; () banked
  8635  000752  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8636  000754  0E00               	movlw	0
  8637  000756  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8638  000758  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  8639                           
  8640                           ;main.c: 644:                         I2C_Master_Stop();
  8641  00075C  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  8642                           
  8643                           ;main.c: 646:                         I2C_Master_Start();
  8644  000760  ECF3  F01F         	call	_I2C_Master_Start	;wreg free
  8645                           
  8646                           ;main.c: 647:                         I2C_Master_Write(0b11010001);
  8647  000764  0E00               	movlw	0
  8648  000766  0100               	movlb	0	; () banked
  8649  000768  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
  8650  00076A  0ED1               	movlw	209
  8651  00076C  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
  8652  00076E  ECEA  F01F         	call	_I2C_Master_Write	;wreg free
  8653                           
  8654                           ;main.c: 648:                         for(unsigned char i = 0; i < 6; i++){
  8655  000772  0E00               	movlw	0
  8656  000774  0101               	movlb	1	; () banked
  8657  000776  6F59               	movwf	UI_main@i& (0+255),b
  8658  000778                     l8326:
  8659                           
  8660                           ; BSR set to: 1
  8661  000778  0E05               	movlw	5
  8662  00077A  6559               	cpfsgt	UI_main@i& (0+255),b
  8663  00077C  D001               	goto	l8330
  8664  00077E  D00D               	goto	l8336
  8665  000780                     l8330:
  8666                           
  8667                           ; BSR set to: 1
  8668                           ;main.c: 649:                             time[i] = I2C_Master_Read(0);
  8669  000780  0EE1               	movlw	low _time
  8670  000782  2559               	addwf	UI_main@i& (0+255),w,b
  8671  000784  6ED9               	movwf	fsr2l,c
  8672  000786  6ADA               	clrf	fsr2h,c
  8673  000788  0E01               	movlw	high _time
  8674  00078A  22DA               	addwfc	fsr2h,f,c
  8675  00078C  0E00               	movlw	0
  8676  00078E  EC67  F01F         	call	_I2C_Master_Read
  8677  000792  6EDF               	movwf	indf2,c
  8678                           
  8679                           ;main.c: 650:                         }
  8680  000794  0101               	movlb	1	; () banked
  8681  000796  2B59               	incf	UI_main@i& (0+255),f,b
  8682  000798  D7EF               	goto	l8326
  8683  00079A                     l8336:
  8684                           
  8685                           ; BSR set to: 1
  8686                           ;main.c: 651:                         time[6] = I2C_Master_Read(1);
  8687  00079A  0E01               	movlw	1
  8688  00079C  EC67  F01F         	call	_I2C_Master_Read
  8689  0007A0  0101               	movlb	1	; () banked
  8690  0007A2  6FE7               	movwf	(_time+6)& (0+255),b
  8691                           
  8692                           ;main.c: 652:                         I2C_Master_Stop();
  8693  0007A4  ECEF  F01F         	call	_I2C_Master_Stop	;wreg free
  8694  0007A8  0EC0               	movlw	192
  8695  0007AA  ECE2  F01F         	call	_lcdInst
  8696                           
  8697                           ;main.c: 656:                         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  8698  0007AE  0E9A               	movlw	low STR_49
  8699  0007B0  0100               	movlb	0	; () banked
  8700  0007B2  6FED               	movwf	printf@fmt& (0+255),b
  8701  0007B4  0EFE               	movlw	high STR_49
  8702  0007B6  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8703  0007B8  C1E7  F0EF         	movff	_time+6,?_printf+2
  8704  0007BC  6BF0               	clrf	(?_printf+3)& (0+255),b
  8705  0007BE  C1E6  F0F1         	movff	_time+5,?_printf+4
  8706  0007C2  6BF2               	clrf	(?_printf+5)& (0+255),b
  8707  0007C4  C1E5  F0F3         	movff	_time+4,?_printf+6
  8708  0007C8  6BF4               	clrf	(?_printf+7)& (0+255),b
  8709  0007CA  EC7C  F01F         	call	_printf	;wreg free
  8710  0007CE  0E90               	movlw	144
  8711  0007D0  ECE2  F01F         	call	_lcdInst
  8712                           
  8713                           ;main.c: 658:                         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  8714  0007D4  0EA9               	movlw	low STR_50
  8715  0007D6  0100               	movlb	0	; () banked
  8716  0007D8  6FED               	movwf	printf@fmt& (0+255),b
  8717  0007DA  0EFE               	movlw	high STR_50
  8718  0007DC  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8719  0007DE  C1E3  F0EF         	movff	_time+2,?_printf+2
  8720  0007E2  6BF0               	clrf	(?_printf+3)& (0+255),b
  8721  0007E4  C1E2  F0F1         	movff	_time+1,?_printf+4
  8722  0007E8  6BF2               	clrf	(?_printf+5)& (0+255),b
  8723  0007EA  C1E1  F0F3         	movff	_time,?_printf+6
  8724  0007EE  6BF4               	clrf	(?_printf+7)& (0+255),b
  8725  0007F0  EC7C  F01F         	call	_printf	;wreg free
  8726  0007F4  0ED0               	movlw	208
  8727  0007F6  ECE2  F01F         	call	_lcdInst
  8728                           
  8729                           ;main.c: 660:                         printf("     0-Menu     ");
  8730  0007FA  0EA6               	movlw	low STR_30
  8731  0007FC  0100               	movlb	0	; () banked
  8732  0007FE  6FED               	movwf	printf@fmt& (0+255),b
  8733  000800  0EFD               	movlw	high STR_30
  8734  000802  6FEE               	movwf	(printf@fmt+1)& (0+255),b
  8735  000804  EC7C  F01F         	call	_printf	;wreg free
  8736  000808                     l8346:
  8737                           
  8738                           ;main.c: 663:                     tick++;
  8739  000808  0E01               	movlw	1
  8740  00080A  0101               	movlb	1	; () banked
  8741  00080C  2755               	addwf	UI_main@tick& (0+255),f,b
  8742  00080E  0E00               	movlw	0
  8743  000810  2356               	addwfc	(UI_main@tick+1)& (0+255),f,b
  8744  000812  2357               	addwfc	(UI_main@tick+2)& (0+255),f,b
  8745  000814  2358               	addwfc	(UI_main@tick+3)& (0+255),f,b
  8746  000816                     l8348:
  8747                           
  8748                           ; BSR set to: 1
  8749                           ;main.c: 636:                 while(~key_was_pressed){
  8750  000816  05F6               	decf	_key_was_pressed& (0+255),w,b	;volatile
  8751  000818  A4D8               	btfss	status,2,c
  8752  00081A  D758               	goto	l8302
  8753  00081C                     u8880:
  8754                           
  8755                           ;main.c: 529:     while(sens==0){
  8756  00081C  5058               	movf	_sens,w,c	;volatile
  8757  00081E  1059               	iorwf	_sens+1,w,c	;volatile
  8758  000820  A4D8               	btfss	status,2,c
  8759  000822  0012               	return	
  8760  000824  D44B               	goto	l8130
  8761  000826                     __end_of_UI_main:
  8762                           	opt callstack 0
  8763                           
  8764 ;; *************** function _printf *****************
  8765 ;; Defined at:
  8766 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  fmt             2  109[BANK0 ] PTR const unsigned char 
  8769 ;;		 -> STR_65(10), STR_64(11), STR_63(11), STR_62(12), 
  8770 ;;		 -> STR_61(16), STR_60(16), STR_59(14), STR_58(17), 
  8771 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  8772 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
  8773 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
  8774 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
  8775 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
  8776 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
  8777 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
  8778 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
  8779 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  8780 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  8781 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  8782 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  8783 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  8784 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  8785 ;;		 -> STR_1(10), 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  ap              2  121[BANK0 ] PTR void [1]
  8788 ;;		 -> ?_printf(2), 
  8789 ;;  ret             2    0        int 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  2  109[BANK0 ] int 
  8792 ;; Registers used:
  8793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8799 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8802 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8803 ;;Total ram usage:       14 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:   13
  8806 ;; This function calls:
  8807 ;;		_vfprintf
  8808 ;; This function is called by:
  8809 ;;		_actuators_main
  8810 ;;		_stepper2
  8811 ;;		_stepper2_back
  8812 ;;		_full_drive
  8813 ;;		_print_echo
  8814 ;;		_ultrasonic_main
  8815 ;;		_number_deploy
  8816 ;;		_UI_main
  8817 ;;		_brake
  8818 ;;		_main
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text20
  8823  003EF8                     __ptext20:
  8824                           	opt callstack 0
  8825  003EF8                     _printf:
  8826                           	opt callstack 16
  8827                           
  8828                           ;incstack = 0
  8829  003EF8  0EEF               	movlw	low (?_printf+2)
  8830  003EFA  0100               	movlb	0	; () banked
  8831  003EFC  6FF9               	movwf	printf@ap& (0+255),b
  8832  003EFE  0E00               	movlw	high (?_printf+2)
  8833  003F00  6FFA               	movwf	(printf@ap+1)& (0+255),b
  8834                           
  8835                           ; BSR set to: 0
  8836  003F02  0E00               	movlw	0
  8837  003F04  6FE5               	movwf	vfprintf@fp& (0+255),b
  8838  003F06  0E00               	movlw	0
  8839  003F08  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  8840  003F0A  C0ED  F0E7         	movff	printf@fmt,vfprintf@fmt
  8841  003F0E  C0EE  F0E8         	movff	printf@fmt+1,vfprintf@fmt+1
  8842  003F12  0EF9               	movlw	low printf@ap
  8843  003F14  6FE9               	movwf	vfprintf@ap& (0+255),b
  8844  003F16  0E00               	movlw	high printf@ap
  8845  003F18  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  8846  003F1A  ECC9  F01D         	call	_vfprintf	;wreg free
  8847  003F1E  0012               	return		;funcret
  8848  003F20                     __end_of_printf:
  8849                           	opt callstack 0
  8850                           
  8851 ;; *************** function _vfprintf *****************
  8852 ;; Defined at:
  8853 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  8856 ;;		 -> NULL(0), 
  8857 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  8858 ;;		 -> STR_65(10), STR_64(11), STR_63(11), STR_62(12), 
  8859 ;;		 -> STR_61(16), STR_60(16), STR_59(14), STR_58(17), 
  8860 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  8861 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
  8862 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
  8863 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
  8864 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
  8865 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
  8866 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
  8867 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
  8868 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  8869 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  8870 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  8871 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  8872 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  8873 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  8874 ;;		 -> STR_1(10), 
  8875 ;;  ap              2  105[BANK0 ] PTR PTR void 
  8876 ;;		 -> printf@ap(2), 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  cfmt            2  107[BANK0 ] PTR unsigned char 
  8879 ;;		 -> STR_65(10), STR_64(11), STR_63(11), STR_62(12), 
  8880 ;;		 -> STR_61(16), STR_60(16), STR_59(14), STR_58(17), 
  8881 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
  8882 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
  8883 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
  8884 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
  8885 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
  8886 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
  8887 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
  8888 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
  8889 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
  8890 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
  8891 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
  8892 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
  8893 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
  8894 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
  8895 ;;		 -> STR_1(10), 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  2  101[BANK0 ] int 
  8898 ;; Registers used:
  8899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8905 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;Total ram usage:        8 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; Hardware stack levels required when called:   12
  8912 ;; This function calls:
  8913 ;;		_vfpfcnvrt
  8914 ;; This function is called by:
  8915 ;;		_printf
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           	psect	text21
  8920  003B92                     __ptext21:
  8921                           	opt callstack 0
  8922  003B92                     _vfprintf:
  8923                           	opt callstack 16
  8924                           
  8925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8926                           
  8927                           ;incstack = 0
  8928  003B92  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  8929  003B96  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8930                           
  8931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8932  003B9A  0E00               	movlw	0
  8933  003B9C  6E49               	movwf	_nout+1,c
  8934  003B9E  0E00               	movlw	0
  8935  003BA0  6E48               	movwf	_nout,c
  8936                           
  8937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8938  003BA2  D014               	goto	l7110
  8939  003BA4                     l7108:
  8940                           
  8941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8942  003BA4  C0E5  F0C6         	movff	vfprintf@fp,vfpfcnvrt@fp
  8943  003BA8  C0E6  F0C7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8944  003BAC  0EEB               	movlw	low vfprintf@cfmt
  8945  003BAE  0100               	movlb	0	; () banked
  8946  003BB0  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  8947  003BB2  0E00               	movlw	high vfprintf@cfmt
  8948  003BB4  6FC9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8949  003BB6  C0E9  F0CA         	movff	vfprintf@ap,vfpfcnvrt@ap
  8950  003BBA  C0EA  F0CB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8951  003BBE  EC9E  F00A         	call	_vfpfcnvrt	;wreg free
  8952  003BC2  0100               	movlb	0	; () banked
  8953  003BC4  51C6               	movf	?_vfpfcnvrt& (0+255),w,b
  8954  003BC6  2648               	addwf	_nout,f,c
  8955  003BC8  51C7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8956  003BCA  2249               	addwfc	_nout+1,f,c
  8957  003BCC                     l7110:
  8958                           
  8959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8960  003BCC  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  8961  003BD0  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8962  003BD4                     	if	0	;tblptru may be non-zero
  8963  003BD4                     	endif
  8964  003BD4                     	if	0	;tblptru may be non-zero
  8965  003BD4                     	endif
  8966  003BD4  0008               	tblrd		*
  8967  003BD6  50F5               	movf	tablat,w,c
  8968  003BD8  0900               	iorlw	0
  8969  003BDA  A4D8               	btfss	status,2,c
  8970  003BDC  D7E3               	goto	l7108
  8971                           
  8972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8973  003BDE  C048  F0E5         	movff	_nout,?_vfprintf
  8974  003BE2  C049  F0E6         	movff	_nout+1,?_vfprintf+1
  8975  003BE6  0012               	return		;funcret
  8976  003BE8                     __end_of_vfprintf:
  8977                           	opt callstack 0
  8978                           
  8979 ;; *************** function _vfpfcnvrt *****************
  8980 ;; Defined at:
  8981 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  8984 ;;		 -> NULL(0), 
  8985 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  8986 ;;		 -> vfprintf@cfmt(2), 
  8987 ;;  ap              2   74[BANK0 ] PTR PTR void 
  8988 ;;		 -> printf@ap(2), 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;  llu             8   88[BANK0 ] unsigned long long 
  8991 ;;  ll              8   80[BANK0 ] long long 
  8992 ;;  f               4    0        long long 
  8993 ;;  vp              3    0        PTR void 
  8994 ;;  ct              3    0        unsigned char [3]
  8995 ;;  cp              3    0        PTR unsigned char 
  8996 ;;  done            2   97[BANK0 ] int 
  8997 ;;  i               2    0        int 
  8998 ;;  c               1   96[BANK0 ] unsigned char 
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  2   70[BANK0 ] int 
  9001 ;; Registers used:
  9002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9008 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9010 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9011 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9012 ;;Total ram usage:       31 bytes
  9013 ;; Hardware stack levels used:    1
  9014 ;; Hardware stack levels required when called:   11
  9015 ;; This function calls:
  9016 ;;		_atoi
  9017 ;;		_dtoa
  9018 ;;		_fputc
  9019 ;;		_isdigit
  9020 ;;		_xtoa
  9021 ;; This function is called by:
  9022 ;;		_vfprintf
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text22
  9027  00153C                     __ptext22:
  9028                           	opt callstack 0
  9029  00153C                     _vfpfcnvrt:
  9030                           	opt callstack 16
  9031                           
  9032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  9033                           
  9034                           ;incstack = 0
  9035  00153C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9036  001540  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9037  001544  CFDE FFF6          	movff	postinc2,tblptrl
  9038  001548  CFDD FFF7          	movff	postdec2,tblptrh
  9039  00154C                     	if	0	;tblptru may be non-zero
  9040  00154C                     	endif
  9041  00154C                     	if	0	;tblptru may be non-zero
  9042  00154C                     	endif
  9043  00154C  0008               	tblrd		*
  9044  00154E  50F5               	movf	tablat,w,c
  9045  001550  0A25               	xorlw	37
  9046  001552  A4D8               	btfss	status,2,c
  9047  001554  D1AD               	goto	l7088
  9048                           
  9049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  9050  001556  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9051  00155A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9052  00155E  2ADE               	incf	postinc2,f,c
  9053  001560  0E00               	movlw	0
  9054  001562  22DD               	addwfc	postdec2,f,c
  9055                           
  9056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  9057  001564  0E00               	movlw	0
  9058  001566  6E4B               	movwf	_width+1,c
  9059  001568  0E00               	movlw	0
  9060  00156A  6E4A               	movwf	_width,c
  9061  00156C  C04A  F04E         	movff	_width,_flags
  9062  001570  C04B  F04F         	movff	_width+1,_flags+1
  9063                           
  9064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  9065  001574  684C               	setf	_prec,c
  9066  001576  684D               	setf	_prec+1,c
  9067                           
  9068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  9069  001578  0E00               	movlw	0
  9070  00157A  0100               	movlb	0	; () banked
  9071  00157C  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9072  00157E  0E00               	movlw	0
  9073  001580  D014               	goto	L2
  9074  001582                     l7000:
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  9078  001582  804E               	bsf	_flags,0,c
  9079  001584                     l7002:
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  9083  001584  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9084  001588  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9085  00158C  2ADE               	incf	postinc2,f,c
  9086  00158E  0E00               	movlw	0
  9087  001590  22DD               	addwfc	postdec2,f,c
  9088                           
  9089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  9090  001592  D02E               	goto	l7026
  9091  001594                     l7004:
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  9095  001594  824E               	bsf	_flags,1,c
  9096  001596  D7F6               	goto	l7002
  9097  001598                     l7008:
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  9101  001598  844E               	bsf	_flags,2,c
  9102  00159A  D7F4               	goto	l7002
  9103  00159C                     l7012:
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  9107  00159C  864E               	bsf	_flags,3,c
  9108  00159E  D7F2               	goto	l7002
  9109  0015A0                     l7016:
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  9113  0015A0  884E               	bsf	_flags,4,c
  9114  0015A2  D7F0               	goto	l7002
  9115  0015A4                     l7020:
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  9119  0015A4  0E00               	movlw	0
  9120  0015A6  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9121  0015A8  0E01               	movlw	1
  9122  0015AA                     L2:
  9123  0015AA  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  9124                           
  9125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  9126  0015AC  D021               	goto	l7026
  9127  0015AE                     l7024:
  9128                           
  9129                           ; BSR set to: 0
  9130  0015AE  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9131  0015B2  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9132  0015B6  CFDE FFF6          	movff	postinc2,tblptrl
  9133  0015BA  CFDD FFF7          	movff	postdec2,tblptrh
  9134  0015BE                     	if	0	;tblptru may be non-zero
  9135  0015BE                     	endif
  9136  0015BE                     	if	0	;tblptru may be non-zero
  9137  0015BE                     	endif
  9138  0015BE  0008               	tblrd		*
  9139  0015C0  50F5               	movf	tablat,w,c
  9140  0015C2  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  9141  0015C4  6BCD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9142                           
  9143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9144                           ; Switch size 1, requested type "simple"
  9145                           ; Number of cases is 1, Range of values is 0 to 0
  9146                           ; switch strategies available:
  9147                           ; Name         Instructions Cycles
  9148                           ; simple_byte            4     3 (average)
  9149                           ;	Chosen strategy is simple_byte
  9150  0015C6  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9151  0015C8  0A00               	xorlw	0	; case 0
  9152  0015CA  A4D8               	btfss	status,2,c
  9153  0015CC  D7EB               	goto	l7020
  9154                           
  9155                           ; BSR set to: 0
  9156                           ; Switch size 1, requested type "simple"
  9157                           ; Number of cases is 5, Range of values is 32 to 48
  9158                           ; switch strategies available:
  9159                           ; Name         Instructions Cycles
  9160                           ; simple_byte           16     9 (average)
  9161                           ;	Chosen strategy is simple_byte
  9162  0015CE  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  9163  0015D0  0A20               	xorlw	32	; case 32
  9164  0015D2  B4D8               	btfsc	status,2,c
  9165  0015D4  D7E3               	goto	l7012
  9166  0015D6  0A03               	xorlw	3	; case 35
  9167  0015D8  B4D8               	btfsc	status,2,c
  9168  0015DA  D7E2               	goto	l7016
  9169  0015DC  0A08               	xorlw	8	; case 43
  9170  0015DE  B4D8               	btfsc	status,2,c
  9171  0015E0  D7DB               	goto	l7008
  9172  0015E2  0A06               	xorlw	6	; case 45
  9173  0015E4  B4D8               	btfsc	status,2,c
  9174  0015E6  D7CD               	goto	l7000
  9175  0015E8  0A1D               	xorlw	29	; case 48
  9176  0015EA  B4D8               	btfsc	status,2,c
  9177  0015EC  D7D3               	goto	l7004
  9178  0015EE  D7DA               	goto	l7020
  9179  0015F0                     l7026:
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  9183  0015F0  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  9184  0015F2  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  9185  0015F4  B4D8               	btfsc	status,2,c
  9186  0015F6  D7DB               	goto	l7024
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  9190  0015F8  B04E               	btfsc	_flags,0,c
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  9194  0015FA  924E               	bcf	_flags,1,c
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  9198  0015FC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9199  001600  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9200  001604  CFDE FFF6          	movff	postinc2,tblptrl
  9201  001608  CFDD FFF7          	movff	postdec2,tblptrh
  9202  00160C                     	if	0	;tblptru may be non-zero
  9203  00160C                     	endif
  9204  00160C                     	if	0	;tblptru may be non-zero
  9205  00160C                     	endif
  9206  00160C  0008               	tblrd		*
  9207  00160E  50F5               	movf	tablat,w,c
  9208  001610  0A2A               	xorlw	42
  9209  001612  A4D8               	btfss	status,2,c
  9210  001614  D023               	goto	l7038
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  9214  001616  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9215  00161A  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9216  00161E  2ADE               	incf	postinc2,f,c
  9217  001620  0E00               	movlw	0
  9218  001622  22DD               	addwfc	postdec2,f,c
  9219                           
  9220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9221  001624  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9222  001628  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9223  00162C  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9224  001630  0E02               	movlw	2
  9225  001632  26DE               	addwf	postinc2,f,c
  9226  001634  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9227  001638  0E00               	movlw	0
  9228  00163A  22DD               	addwfc	postdec2,f,c
  9229  00163C  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9230  001640  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9231  001644  CFDE F04A          	movff	postinc2,_width
  9232  001648  CFDD F04B          	movff	postdec2,_width+1
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  9236  00164C  AE4B               	btfss	_width+1,7,c
  9237  00164E  D040               	goto	u7600
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  9241  001650  804E               	bsf	_flags,0,c
  9242                           
  9243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  9244  001652  6C4A               	negf	_width,c
  9245  001654  1E4B               	comf	_width+1,f,c
  9246  001656  B0D8               	btfsc	status,0,c
  9247  001658  2A4B               	incf	_width+1,f,c
  9248  00165A  D03A               	goto	u7600
  9249  00165C                     l7038:
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  9253  00165C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9254  001660  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9255  001664  CFDE F087          	movff	postinc2,atoi@s
  9256  001668  CFDD F088          	movff	postdec2,atoi@s+1
  9257  00166C  EC1D  F016         	call	_atoi	;wreg free
  9258  001670  C087  F04A         	movff	?_atoi,_width
  9259  001674  C088  F04B         	movff	?_atoi+1,_width+1
  9260                           
  9261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9262  001678  D007               	goto	l7042
  9263  00167A                     l7040:
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  9267  00167A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9268  00167E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9269  001682  2ADE               	incf	postinc2,f,c
  9270  001684  0E00               	movlw	0
  9271  001686  22DD               	addwfc	postdec2,f,c
  9272  001688                     l7042:
  9273  001688  0ED0               	movlw	208
  9274  00168A  0100               	movlb	0	; () banked
  9275  00168C  6FCC               	movwf	??_vfpfcnvrt& (0+255),b
  9276  00168E  0EFF               	movlw	255
  9277  001690  6FCD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9278  001692  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9279  001696  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9280  00169A  CFDE FFF6          	movff	postinc2,tblptrl
  9281  00169E  CFDD FFF7          	movff	postdec2,tblptrh
  9282  0016A2                     	if	0	;tblptru may be non-zero
  9283  0016A2                     	endif
  9284  0016A2                     	if	0	;tblptru may be non-zero
  9285  0016A2                     	endif
  9286  0016A2  0008               	tblrd		*
  9287  0016A4  50F5               	movf	tablat,w,c
  9288  0016A6  6FCE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9289  0016A8  6BCF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  9290  0016AA  51CC               	movf	??_vfpfcnvrt& (0+255),w,b
  9291  0016AC  27CE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  9292  0016AE  51CD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9293  0016B0  23CF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  9294  0016B2  51CF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  9295  0016B4  E106               	bnz	u7580
  9296  0016B6  0E0A               	movlw	10
  9297  0016B8  5DCE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  9298  0016BA  B0D8               	btfsc	status,0,c
  9299  0016BC  D002               	goto	u7580
  9300  0016BE  0E01               	movlw	1
  9301  0016C0  D001               	goto	u7590
  9302  0016C2                     u7580:
  9303  0016C2  0E00               	movlw	0
  9304  0016C4                     u7590:
  9305  0016C4  6FE3               	movwf	_vfpfcnvrt$1263& (0+255),b
  9306  0016C6  6BE4               	clrf	(_vfpfcnvrt$1263+1)& (0+255),b
  9307                           
  9308                           ; BSR set to: 0
  9309  0016C8  51E3               	movf	_vfpfcnvrt$1263& (0+255),w,b
  9310  0016CA  11E4               	iorwf	(_vfpfcnvrt$1263+1)& (0+255),w,b
  9311  0016CC  A4D8               	btfss	status,2,c
  9312  0016CE  D7D5               	goto	l7040
  9313  0016D0                     u7600:
  9314                           
  9315                           ; BSR set to: 0
  9316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  9317  0016D0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9318  0016D4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9319  0016D8  CFDE FFF6          	movff	postinc2,tblptrl
  9320  0016DC  CFDD FFF7          	movff	postdec2,tblptrh
  9321  0016E0                     	if	0	;tblptru may be non-zero
  9322  0016E0                     	endif
  9323  0016E0                     	if	0	;tblptru may be non-zero
  9324  0016E0                     	endif
  9325  0016E0  0008               	tblrd		*
  9326  0016E2  50F5               	movf	tablat,w,c
  9327  0016E4  0A64               	xorlw	100
  9328  0016E6  B4D8               	btfsc	status,2,c
  9329  0016E8  D00D               	goto	u7620
  9330                           
  9331                           ; BSR set to: 0
  9332  0016EA  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9333  0016EE  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9334  0016F2  CFDE FFF6          	movff	postinc2,tblptrl
  9335  0016F6  CFDD FFF7          	movff	postdec2,tblptrh
  9336  0016FA                     	if	0	;tblptru may be non-zero
  9337  0016FA                     	endif
  9338  0016FA                     	if	0	;tblptru may be non-zero
  9339  0016FA                     	endif
  9340  0016FA  0008               	tblrd		*
  9341  0016FC  50F5               	movf	tablat,w,c
  9342  0016FE  0A69               	xorlw	105
  9343  001700  A4D8               	btfss	status,2,c
  9344  001702  D03F               	goto	l7058
  9345  001704                     u7620:
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  9349  001704  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9350  001708  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9351  00170C  2ADE               	incf	postinc2,f,c
  9352  00170E  0E00               	movlw	0
  9353  001710  22DD               	addwfc	postdec2,f,c
  9354                           
  9355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9356  001712  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9357  001716  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9358  00171A  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9359  00171E  0E02               	movlw	2
  9360  001720  26DE               	addwf	postinc2,f,c
  9361  001722  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9362  001726  0E00               	movlw	0
  9363  001728  22DD               	addwfc	postdec2,f,c
  9364  00172A  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9365  00172E  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9366  001732  CFDE F0D0          	movff	postinc2,vfpfcnvrt@ll
  9367  001736  CFDD F0D1          	movff	postdec2,vfpfcnvrt@ll+1
  9368  00173A  0E00               	movlw	0
  9369  00173C  BFD1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  9370  00173E  0EFF               	movlw	-1
  9371  001740  6FD2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  9372  001742  6FD3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  9373  001744  6FD4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  9374  001746  6FD5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  9375  001748  6FD6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  9376  00174A  6FD7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9380  00174C  C0C6  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  9381  001750  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  9382  001754  C0D0  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  9383  001758  C0D1  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  9384  00175C  C0D2  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  9385  001760  C0D3  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  9386  001764  C0D4  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  9387  001768  C0D5  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  9388  00176C  C0D6  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  9389  001770  C0D7  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  9390  001774  EC4F  F00F         	call	_dtoa	;wreg free
  9391  001778  C09F  F0C6         	movff	?_dtoa,?_vfpfcnvrt
  9392  00177C  C0A0  F0C7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  9393  001780  0012               	return	
  9394  001782                     l7058:
  9395                           
  9396                           ; BSR set to: 0
  9397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9398  001782  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9399  001786  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9400  00178A  CFDE FFF6          	movff	postinc2,tblptrl
  9401  00178E  CFDD FFF7          	movff	postdec2,tblptrh
  9402  001792                     	if	0	;tblptru may be non-zero
  9403  001792                     	endif
  9404  001792                     	if	0	;tblptru may be non-zero
  9405  001792                     	endif
  9406  001792  0008               	tblrd		*
  9407  001794  50F5               	movf	tablat,w,c
  9408  001796  0A78               	xorlw	120
  9409  001798  B4D8               	btfsc	status,2,c
  9410  00179A  D00D               	goto	u7640
  9411                           
  9412                           ; BSR set to: 0
  9413  00179C  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9414  0017A0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9415  0017A4  CFDE FFF6          	movff	postinc2,tblptrl
  9416  0017A8  CFDD FFF7          	movff	postdec2,tblptrh
  9417  0017AC                     	if	0	;tblptru may be non-zero
  9418  0017AC                     	endif
  9419  0017AC                     	if	0	;tblptru may be non-zero
  9420  0017AC                     	endif
  9421  0017AC  0008               	tblrd		*
  9422  0017AE  50F5               	movf	tablat,w,c
  9423  0017B0  0A58               	xorlw	88
  9424  0017B2  A4D8               	btfss	status,2,c
  9425  0017B4  D04D               	goto	l7072
  9426  0017B6                     u7640:
  9427                           
  9428                           ; BSR set to: 0
  9429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9430  0017B6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9431  0017BA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9432  0017BE  CFDE FFF6          	movff	postinc2,tblptrl
  9433  0017C2  CFDD FFF7          	movff	postdec2,tblptrh
  9434  0017C6                     	if	0	;tblptru may be non-zero
  9435  0017C6                     	endif
  9436  0017C6                     	if	0	;tblptru may be non-zero
  9437  0017C6                     	endif
  9438  0017C6  0008               	tblrd		*
  9439  0017C8  CFF5 F0E0          	movff	tablat,vfpfcnvrt@c
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9443  0017CC  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9444  0017D0  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9445  0017D4  2ADE               	incf	postinc2,f,c
  9446  0017D6  0E00               	movlw	0
  9447  0017D8  22DD               	addwfc	postdec2,f,c
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9451  0017DA  C0CA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9452  0017DE  C0CB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9453  0017E2  CFDF F0CC          	movff	indf2,??_vfpfcnvrt
  9454  0017E6  0E02               	movlw	2
  9455  0017E8  26DE               	addwf	postinc2,f,c
  9456  0017EA  CFDF F0CD          	movff	indf2,??_vfpfcnvrt+1
  9457  0017EE  0E00               	movlw	0
  9458  0017F0  22DD               	addwfc	postdec2,f,c
  9459  0017F2  C0CC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9460  0017F6  C0CD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9461  0017FA  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt+2
  9462  0017FE  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+3
  9463  001802  C0CE  F0D8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9464  001806  C0CF  F0D9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9465  00180A  6BDA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9466  00180C  6BDB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9467  00180E  6BDC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9468  001810  6BDD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9469  001812  6BDE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9470  001814  6BDF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  9474  001816  C0C6  F09F         	movff	vfpfcnvrt@fp,xtoa@fp
  9475  00181A  C0C7  F0A0         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9476  00181E  C0D8  F0A1         	movff	vfpfcnvrt@llu,xtoa@d
  9477  001822  C0D9  F0A2         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9478  001826  C0DA  F0A3         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9479  00182A  C0DB  F0A4         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9480  00182E  C0DC  F0A5         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9481  001832  C0DD  F0A6         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9482  001836  C0DE  F0A7         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9483  00183A  C0DF  F0A8         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9484  00183E  C0E0  F0A9         	movff	vfpfcnvrt@c,xtoa@x
  9485  001842  EC73  F010         	call	_xtoa	;wreg free
  9486  001846  C09F  F0C6         	movff	?_xtoa,?_vfpfcnvrt
  9487  00184A  C0A0  F0C7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9488  00184E  0012               	return	
  9489  001850                     l7072:
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9493  001850  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9494  001854  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9495  001858  CFDE FFF6          	movff	postinc2,tblptrl
  9496  00185C  CFDD FFF7          	movff	postdec2,tblptrh
  9497  001860                     	if	0	;tblptru may be non-zero
  9498  001860                     	endif
  9499  001860                     	if	0	;tblptru may be non-zero
  9500  001860                     	endif
  9501  001860  0008               	tblrd		*
  9502  001862  50F5               	movf	tablat,w,c
  9503  001864  0A25               	xorlw	37
  9504  001866  A4D8               	btfss	status,2,c
  9505  001868  D017               	goto	l7082
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9509  00186A  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9510  00186E  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9511  001872  2ADE               	incf	postinc2,f,c
  9512  001874  0E00               	movlw	0
  9513  001876  22DD               	addwfc	postdec2,f,c
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9517  001878  0E00               	movlw	0
  9518  00187A  6F85               	movwf	(fputc@c+1)& (0+255),b
  9519  00187C  0E25               	movlw	37
  9520  00187E  6F84               	movwf	fputc@c& (0+255),b
  9521  001880  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9522  001884  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9523  001888  EC03  F01D         	call	_fputc	;wreg free
  9524  00188C                     l7078:
  9525                           
  9526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9527  00188C  0E00               	movlw	0
  9528  00188E  0100               	movlb	0	; () banked
  9529  001890  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9530  001892  0E01               	movlw	1
  9531  001894  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9532  001896  0012               	return	
  9533  001898                     l7082:
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9537  001898  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9538  00189C  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9539  0018A0  2ADE               	incf	postinc2,f,c
  9540  0018A2  0E00               	movlw	0
  9541  0018A4  22DD               	addwfc	postdec2,f,c
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9545  0018A6  0E00               	movlw	0
  9546  0018A8  6FC7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9547  0018AA  0E00               	movlw	0
  9548  0018AC  6FC6               	movwf	?_vfpfcnvrt& (0+255),b
  9549  0018AE  0012               	return	
  9550  0018B0                     l7088:
  9551                           
  9552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9553  0018B0  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9554  0018B4  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9555  0018B8  CFDE FFF6          	movff	postinc2,tblptrl
  9556  0018BC  CFDD FFF7          	movff	postdec2,tblptrh
  9557  0018C0                     	if	0	;tblptru may be non-zero
  9558  0018C0                     	endif
  9559  0018C0                     	if	0	;tblptru may be non-zero
  9560  0018C0                     	endif
  9561  0018C0  0008               	tblrd		*
  9562  0018C2  50F5               	movf	tablat,w,c
  9563  0018C4  0100               	movlb	0	; () banked
  9564  0018C6  6F84               	movwf	fputc@c& (0+255),b
  9565  0018C8  6B85               	clrf	(fputc@c+1)& (0+255),b
  9566  0018CA  C0C6  F086         	movff	vfpfcnvrt@fp,fputc@fp
  9567  0018CE  C0C7  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9568  0018D2  EC03  F01D         	call	_fputc	;wreg free
  9569                           
  9570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9571  0018D6  C0C8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9572  0018DA  C0C9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9573  0018DE  2ADE               	incf	postinc2,f,c
  9574  0018E0  0E00               	movlw	0
  9575  0018E2  22DD               	addwfc	postdec2,f,c
  9576  0018E4  D7D3               	goto	l7078
  9577  0018E6                     __end_of_vfpfcnvrt:
  9578                           	opt callstack 0
  9579                           
  9580 ;; *************** function _xtoa *****************
  9581 ;; Defined at:
  9582 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9585 ;;		 -> NULL(0), 
  9586 ;;  d               8   33[BANK0 ] unsigned long long 
  9587 ;;  x               1   41[BANK0 ] unsigned char 
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;  n               8   58[BANK0 ] unsigned long long 
  9590 ;;  c               2   68[BANK0 ] int 
  9591 ;;  i               2   66[BANK0 ] int 
  9592 ;;  w               2   56[BANK0 ] int 
  9593 ;;  p               2   54[BANK0 ] int 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  2   31[BANK0 ] int 
  9596 ;; Registers used:
  9597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9603 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9604 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9605 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9606 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;Total ram usage:       39 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; Hardware stack levels required when called:   10
  9610 ;; This function calls:
  9611 ;;		_isalpha
  9612 ;;		_isupper
  9613 ;;		_pad
  9614 ;;		_toupper
  9615 ;; This function is called by:
  9616 ;;		_vfpfcnvrt
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           	psect	text23
  9621  0020E6                     __ptext23:
  9622                           	opt callstack 0
  9623  0020E6                     _xtoa:
  9624                           	opt callstack 16
  9625                           
  9626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9627                           
  9628                           ;incstack = 0
  9629  0020E6  AE4D               	btfss	_prec+1,7,c
  9630                           
  9631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9632  0020E8  924E               	bcf	_flags,1,c
  9633                           
  9634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9635  0020EA  BE4D               	btfsc	_prec+1,7,c
  9636  0020EC  D005               	goto	u7300
  9637  0020EE  504D               	movf	_prec+1,w,c
  9638  0020F0  E109               	bnz	l672
  9639  0020F2  044C               	decf	_prec,w,c
  9640  0020F4  B0D8               	btfsc	status,0,c
  9641  0020F6  D006               	goto	l672
  9642  0020F8                     u7300:
  9643  0020F8  0E00               	movlw	0
  9644  0020FA  0100               	movlb	0	; () banked
  9645  0020FC  6FB7               	movwf	(xtoa@p+1)& (0+255),b
  9646  0020FE  0E01               	movlw	1
  9647  002100  6FB6               	movwf	xtoa@p& (0+255),b
  9648  002102  D004               	goto	l674
  9649  002104                     l672:
  9650  002104  C04C  F0B6         	movff	_prec,xtoa@p
  9651  002108  C04D  F0B7         	movff	_prec+1,xtoa@p+1
  9652  00210C                     l674:
  9653                           
  9654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9655  00210C  C04A  F0B8         	movff	_width,xtoa@w
  9656  002110  C04B  F0B9         	movff	_width+1,xtoa@w+1
  9657                           
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9659  002114  A84E               	btfss	_flags,4,c
  9660  002116  D005               	goto	l6892
  9661                           
  9662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9663  002118  0100               	movlb	0	; () banked
  9664  00211A  0EFE               	movlw	254
  9665  00211C  27B8               	addwf	xtoa@w& (0+255),f,b
  9666  00211E  0EFF               	movlw	255
  9667  002120  23B9               	addwfc	(xtoa@w+1)& (0+255),f,b
  9668  002122                     l6892:
  9669                           
  9670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9671  002122  C0A1  F0BA         	movff	xtoa@d,xtoa@n
  9672  002126  C0A2  F0BB         	movff	xtoa@d+1,xtoa@n+1
  9673  00212A  C0A3  F0BC         	movff	xtoa@d+2,xtoa@n+2
  9674  00212E  C0A4  F0BD         	movff	xtoa@d+3,xtoa@n+3
  9675  002132  C0A5  F0BE         	movff	xtoa@d+4,xtoa@n+4
  9676  002136  C0A6  F0BF         	movff	xtoa@d+5,xtoa@n+5
  9677  00213A  C0A7  F0C0         	movff	xtoa@d+6,xtoa@n+6
  9678  00213E  C0A8  F0C1         	movff	xtoa@d+7,xtoa@n+7
  9679                           
  9680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9681  002142  0E00               	movlw	0
  9682  002144  0100               	movlb	0	; () banked
  9683  002146  6FC3               	movwf	(xtoa@i+1)& (0+255),b
  9684  002148  0E1F               	movlw	31
  9685  00214A  6FC2               	movwf	xtoa@i& (0+255),b
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9689  00214C  0E00               	movlw	0
  9690  00214E  0102               	movlb	2	; () banked
  9691  002150  6F9F               	movwf	(_dbuf+31)& (0+255),b
  9692                           
  9693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9694  002152  D094               	goto	l6928
  9695  002154                     l6898:
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9699  002154  07C2               	decf	xtoa@i& (0+255),f,b
  9700  002156  A0D8               	btfss	status,0,c
  9701  002158  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9705  00215A  0E0F               	movlw	15
  9706  00215C  15BA               	andwf	xtoa@n& (0+255),w,b
  9707  00215E  6FC4               	movwf	xtoa@c& (0+255),b
  9708  002160  6BC5               	clrf	(xtoa@c+1)& (0+255),b
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9712  002162  BFC5               	btfsc	(xtoa@c+1)& (0+255),7,b
  9713  002164  D008               	goto	l6906
  9714  002166  51C5               	movf	(xtoa@c+1)& (0+255),w,b
  9715  002168  E104               	bnz	u7320
  9716  00216A  0E0A               	movlw	10
  9717  00216C  5DC4               	subwf	xtoa@c& (0+255),w,b
  9718  00216E  A0D8               	btfss	status,0,c
  9719  002170  D002               	goto	l6906
  9720  002172                     u7320:
  9721                           
  9722                           ; BSR set to: 0
  9723  002172  0E57               	movlw	87
  9724  002174  D001               	goto	L3
  9725  002176                     l6906:
  9726                           
  9727                           ; BSR set to: 0
  9728  002176  0E30               	movlw	48
  9729  002178                     L3:
  9730  002178  25C4               	addwf	xtoa@c& (0+255),w,b
  9731  00217A  6FC4               	movwf	xtoa@c& (0+255),b
  9732  00217C  0E00               	movlw	0
  9733  00217E  21C5               	addwfc	(xtoa@c+1)& (0+255),w,b
  9734  002180  6FC5               	movwf	(xtoa@c+1)& (0+255),b
  9735                           
  9736                           ; BSR set to: 0
  9737                           
  9738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  9739  002182  0EBF               	movlw	191
  9740  002184  6FAA               	movwf	??_xtoa& (0+255),b
  9741  002186  0EFF               	movlw	255
  9742  002188  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9743  00218A  51A9               	movf	xtoa@x& (0+255),w,b
  9744  00218C  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9745  00218E  6BAD               	clrf	(??_xtoa+3)& (0+255),b
  9746  002190  51AA               	movf	??_xtoa& (0+255),w,b
  9747  002192  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9748  002194  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9749  002196  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9750  002198  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9751  00219A  E106               	bnz	u7330
  9752  00219C  0E1A               	movlw	26
  9753  00219E  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9754  0021A0  B0D8               	btfsc	status,0,c
  9755  0021A2  D002               	goto	u7330
  9756  0021A4  0E01               	movlw	1
  9757  0021A6  D001               	goto	u7340
  9758  0021A8                     u7330:
  9759  0021A8  0E00               	movlw	0
  9760  0021AA                     u7340:
  9761  0021AA  6FB2               	movwf	_xtoa$1248& (0+255),b
  9762  0021AC  6BB3               	clrf	(_xtoa$1248+1)& (0+255),b
  9763                           
  9764                           ; BSR set to: 0
  9765  0021AE  51B2               	movf	_xtoa$1248& (0+255),w,b
  9766  0021B0  11B3               	iorwf	(_xtoa$1248+1)& (0+255),w,b
  9767  0021B2  B4D8               	btfsc	status,2,c
  9768  0021B4  D027               	goto	l6920
  9769                           
  9770                           ; BSR set to: 0
  9771  0021B6  0E9F               	movlw	159
  9772  0021B8  6FAA               	movwf	??_xtoa& (0+255),b
  9773  0021BA  0EFF               	movlw	255
  9774  0021BC  6FAB               	movwf	(??_xtoa+1)& (0+255),b
  9775  0021BE  0E20               	movlw	32
  9776  0021C0  11C4               	iorwf	xtoa@c& (0+255),w,b
  9777  0021C2  6FAC               	movwf	(??_xtoa+2)& (0+255),b
  9778  0021C4  0E00               	movlw	0
  9779  0021C6  11C5               	iorwf	(xtoa@c+1)& (0+255),w,b
  9780  0021C8  6FAD               	movwf	(??_xtoa+3)& (0+255),b
  9781  0021CA  51AA               	movf	??_xtoa& (0+255),w,b
  9782  0021CC  27AC               	addwf	(??_xtoa+2)& (0+255),f,b
  9783  0021CE  51AB               	movf	(??_xtoa+1)& (0+255),w,b
  9784  0021D0  23AD               	addwfc	(??_xtoa+3)& (0+255),f,b
  9785  0021D2  51AD               	movf	(??_xtoa+3)& (0+255),w,b
  9786  0021D4  E106               	bnz	u7360
  9787  0021D6  0E1A               	movlw	26
  9788  0021D8  5DAC               	subwf	(??_xtoa+2)& (0+255),w,b
  9789  0021DA  B0D8               	btfsc	status,0,c
  9790  0021DC  D002               	goto	u7360
  9791  0021DE  0E01               	movlw	1
  9792  0021E0  D001               	goto	u7370
  9793  0021E2                     u7360:
  9794  0021E2  0E00               	movlw	0
  9795  0021E4                     u7370:
  9796  0021E4  6FB4               	movwf	_xtoa$1249& (0+255),b
  9797  0021E6  6BB5               	clrf	(_xtoa$1249+1)& (0+255),b
  9798                           
  9799                           ; BSR set to: 0
  9800  0021E8  51B4               	movf	_xtoa$1249& (0+255),w,b
  9801  0021EA  11B5               	iorwf	(_xtoa$1249+1)& (0+255),w,b
  9802  0021EC  B4D8               	btfsc	status,2,c
  9803  0021EE  D00A               	goto	l6920
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9807  0021F0  C0C4  F086         	movff	xtoa@c,toupper@c
  9808  0021F4  C0C5  F087         	movff	xtoa@c+1,toupper@c+1
  9809  0021F8  EC1D  F01E         	call	_toupper	;wreg free
  9810  0021FC  C086  F0C4         	movff	?_toupper,xtoa@c
  9811  002200  C087  F0C5         	movff	?_toupper+1,xtoa@c+1
  9812  002204                     l6920:
  9813                           
  9814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9815  002204  0E80               	movlw	low _dbuf
  9816  002206  0100               	movlb	0	; () banked
  9817  002208  25C2               	addwf	xtoa@i& (0+255),w,b
  9818  00220A  6ED9               	movwf	fsr2l,c
  9819  00220C  0E02               	movlw	high _dbuf
  9820  00220E  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9821  002210  6EDA               	movwf	fsr2h,c
  9822  002212  C0C4  FFDF         	movff	xtoa@c,indf2
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9826  002216  07B6               	decf	xtoa@p& (0+255),f,b
  9827  002218  A0D8               	btfss	status,0,c
  9828  00221A  07B7               	decf	(xtoa@p+1)& (0+255),f,b
  9829                           
  9830                           ; BSR set to: 0
  9831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9832  00221C  07B8               	decf	xtoa@w& (0+255),f,b
  9833  00221E  A0D8               	btfss	status,0,c
  9834  002220  07B9               	decf	(xtoa@w+1)& (0+255),f,b
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9838  002222  C0BA  F0AA         	movff	xtoa@n,??_xtoa
  9839  002226  C0BB  F0AB         	movff	xtoa@n+1,??_xtoa+1
  9840  00222A  C0BC  F0AC         	movff	xtoa@n+2,??_xtoa+2
  9841  00222E  C0BD  F0AD         	movff	xtoa@n+3,??_xtoa+3
  9842  002232  C0BE  F0AE         	movff	xtoa@n+4,??_xtoa+4
  9843  002236  C0BF  F0AF         	movff	xtoa@n+5,??_xtoa+5
  9844  00223A  C0C0  F0B0         	movff	xtoa@n+6,??_xtoa+6
  9845  00223E  C0C1  F0B1         	movff	xtoa@n+7,??_xtoa+7
  9846  002242  0E05               	movlw	5
  9847  002244  D009               	goto	u7390
  9848  002246                     u7395:
  9849  002246  90D8               	bcf	status,0,c
  9850  002248  33B1               	rrcf	(??_xtoa+7)& (0+255),f,b
  9851  00224A  33B0               	rrcf	(??_xtoa+6)& (0+255),f,b
  9852  00224C  33AF               	rrcf	(??_xtoa+5)& (0+255),f,b
  9853  00224E  33AE               	rrcf	(??_xtoa+4)& (0+255),f,b
  9854  002250  33AD               	rrcf	(??_xtoa+3)& (0+255),f,b
  9855  002252  33AC               	rrcf	(??_xtoa+2)& (0+255),f,b
  9856  002254  33AB               	rrcf	(??_xtoa+1)& (0+255),f,b
  9857  002256  33AA               	rrcf	??_xtoa& (0+255),f,b
  9858  002258                     u7390:
  9859  002258  2EE8               	decfsz	wreg,f,c
  9860  00225A  D7F5               	goto	u7395
  9861  00225C  C0AA  F0BA         	movff	??_xtoa,xtoa@n
  9862  002260  C0AB  F0BB         	movff	??_xtoa+1,xtoa@n+1
  9863  002264  C0AC  F0BC         	movff	??_xtoa+2,xtoa@n+2
  9864  002268  C0AD  F0BD         	movff	??_xtoa+3,xtoa@n+3
  9865  00226C  C0AE  F0BE         	movff	??_xtoa+4,xtoa@n+4
  9866  002270  C0AF  F0BF         	movff	??_xtoa+5,xtoa@n+5
  9867  002274  C0B0  F0C0         	movff	??_xtoa+6,xtoa@n+6
  9868  002278  C0B1  F0C1         	movff	??_xtoa+7,xtoa@n+7
  9869  00227C                     l6928:
  9870                           
  9871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9872  00227C  0100               	movlb	0	; () banked
  9873  00227E  BFC3               	btfsc	(xtoa@i+1)& (0+255),7,b
  9874  002280  D020               	goto	u7440
  9875  002282  51C3               	movf	(xtoa@i+1)& (0+255),w,b
  9876  002284  E104               	bnz	u7400
  9877  002286  0E02               	movlw	2
  9878  002288  5DC2               	subwf	xtoa@i& (0+255),w,b
  9879  00228A  A0D8               	btfss	status,0,c
  9880  00228C  D01A               	goto	u7440
  9881  00228E                     u7400:
  9882                           
  9883                           ; BSR set to: 0
  9884  00228E  51BA               	movf	xtoa@n& (0+255),w,b
  9885  002290  11BB               	iorwf	(xtoa@n+1)& (0+255),w,b
  9886  002292  11BC               	iorwf	(xtoa@n+2)& (0+255),w,b
  9887  002294  11BD               	iorwf	(xtoa@n+3)& (0+255),w,b
  9888  002296  11BE               	iorwf	(xtoa@n+4)& (0+255),w,b
  9889  002298  11BF               	iorwf	(xtoa@n+5)& (0+255),w,b
  9890  00229A  11C0               	iorwf	(xtoa@n+6)& (0+255),w,b
  9891  00229C  11C1               	iorwf	(xtoa@n+7)& (0+255),w,b
  9892  00229E  A4D8               	btfss	status,2,c
  9893  0022A0  D759               	goto	l6898
  9894                           
  9895                           ; BSR set to: 0
  9896  0022A2  BFB7               	btfsc	(xtoa@p+1)& (0+255),7,b
  9897  0022A4  D005               	goto	u7420
  9898  0022A6  51B7               	movf	(xtoa@p+1)& (0+255),w,b
  9899  0022A8  E102               	bnz	u7421
  9900  0022AA  05B6               	decf	xtoa@p& (0+255),w,b
  9901  0022AC  B0D8               	btfsc	status,0,c
  9902  0022AE                     u7421:
  9903  0022AE  D752               	goto	l6898
  9904  0022B0                     u7420:
  9905                           
  9906                           ; BSR set to: 0
  9907  0022B0  BFB9               	btfsc	(xtoa@w+1)& (0+255),7,b
  9908  0022B2  D007               	goto	u7440
  9909  0022B4  51B9               	movf	(xtoa@w+1)& (0+255),w,b
  9910  0022B6  E103               	bnz	u7430
  9911  0022B8  05B8               	decf	xtoa@w& (0+255),w,b
  9912  0022BA  A0D8               	btfss	status,0,c
  9913  0022BC  D002               	goto	u7440
  9914  0022BE                     u7430:
  9915                           
  9916                           ; BSR set to: 0
  9917  0022BE  B24E               	btfsc	_flags,1,c
  9918  0022C0  D749               	goto	l6898
  9919  0022C2                     u7440:
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  9923  0022C2  A84E               	btfss	_flags,4,c
  9924  0022C4  D016               	goto	l6944
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  9928  0022C6  07C2               	decf	xtoa@i& (0+255),f,b
  9929  0022C8  A0D8               	btfss	status,0,c
  9930  0022CA  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  9934  0022CC  0E80               	movlw	low _dbuf
  9935  0022CE  25C2               	addwf	xtoa@i& (0+255),w,b
  9936  0022D0  6ED9               	movwf	fsr2l,c
  9937  0022D2  0E02               	movlw	high _dbuf
  9938  0022D4  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9939  0022D6  6EDA               	movwf	fsr2h,c
  9940  0022D8  C0A9  FFDF         	movff	xtoa@x,indf2
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  9944  0022DC  07C2               	decf	xtoa@i& (0+255),f,b
  9945  0022DE  A0D8               	btfss	status,0,c
  9946  0022E0  07C3               	decf	(xtoa@i+1)& (0+255),f,b
  9947                           
  9948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  9949  0022E2  0E80               	movlw	low _dbuf
  9950  0022E4  25C2               	addwf	xtoa@i& (0+255),w,b
  9951  0022E6  6ED9               	movwf	fsr2l,c
  9952  0022E8  0E02               	movlw	high _dbuf
  9953  0022EA  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9954  0022EC  6EDA               	movwf	fsr2h,c
  9955  0022EE  0E30               	movlw	48
  9956  0022F0  6EDF               	movwf	indf2,c
  9957  0022F2                     l6944:
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  9961  0022F2  C09F  F094         	movff	xtoa@fp,pad@fp
  9962  0022F6  C0A0  F095         	movff	xtoa@fp+1,pad@fp+1
  9963  0022FA  0E80               	movlw	low _dbuf
  9964  0022FC  25C2               	addwf	xtoa@i& (0+255),w,b
  9965  0022FE  6F96               	movwf	pad@buf& (0+255),b
  9966  002300  0E02               	movlw	high _dbuf
  9967  002302  21C3               	addwfc	(xtoa@i+1)& (0+255),w,b
  9968  002304  6F97               	movwf	(pad@buf+1)& (0+255),b
  9969  002306  C0B8  F098         	movff	xtoa@w,pad@p
  9970  00230A  C0B9  F099         	movff	xtoa@w+1,pad@p+1
  9971  00230E  EC6E  F01B         	call	_pad	;wreg free
  9972  002312  C094  F09F         	movff	?_pad,?_xtoa
  9973  002316  C095  F0A0         	movff	?_pad+1,?_xtoa+1
  9974  00231A  0012               	return		;funcret
  9975  00231C                     __end_of_xtoa:
  9976                           	opt callstack 0
  9977                           
  9978 ;; *************** function _toupper *****************
  9979 ;; Defined at:
  9980 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;  c               2    6[BANK0 ] int 
  9983 ;; Auto vars:     Size  Location     Type
  9984 ;;		None
  9985 ;; Return value:  Size  Location     Type
  9986 ;;                  2    6[BANK0 ] int 
  9987 ;; Registers used:
  9988 ;;		wreg, status,2, status,0
  9989 ;; Tracked objects:
  9990 ;;		On entry : 0/0
  9991 ;;		On exit  : 0/0
  9992 ;;		Unchanged: 0/0
  9993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9994 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;Total ram usage:        8 bytes
  9999 ;; Hardware stack levels used:    1
 10000 ;; Hardware stack levels required when called:    4
 10001 ;; This function calls:
 10002 ;;		_islower
 10003 ;; This function is called by:
 10004 ;;		_xtoa
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text24
 10009  003C3A                     __ptext24:
 10010                           	opt callstack 0
 10011  003C3A                     _toupper:
 10012                           	opt callstack 21
 10013                           
 10014                           ;incstack = 0
 10015  003C3A  0E9F               	movlw	159
 10016  003C3C  0100               	movlb	0	; () banked
 10017  003C3E  6F88               	movwf	??_toupper& (0+255),b
 10018  003C40  0EFF               	movlw	255
 10019  003C42  6F89               	movwf	(??_toupper+1)& (0+255),b
 10020  003C44  C086  F08A         	movff	toupper@c,??_toupper+2
 10021  003C48  C087  F08B         	movff	toupper@c+1,??_toupper+3
 10022  003C4C  5188               	movf	??_toupper& (0+255),w,b
 10023  003C4E  278A               	addwf	(??_toupper+2)& (0+255),f,b
 10024  003C50  5189               	movf	(??_toupper+1)& (0+255),w,b
 10025  003C52  238B               	addwfc	(??_toupper+3)& (0+255),f,b
 10026  003C54  518B               	movf	(??_toupper+3)& (0+255),w,b
 10027  003C56  E106               	bnz	u6940
 10028  003C58  0E1A               	movlw	26
 10029  003C5A  5D8A               	subwf	(??_toupper+2)& (0+255),w,b
 10030  003C5C  B0D8               	btfsc	status,0,c
 10031  003C5E  D002               	goto	u6940
 10032  003C60  0E01               	movlw	1
 10033  003C62  D001               	goto	u6950
 10034  003C64                     u6940:
 10035  003C64  0E00               	movlw	0
 10036  003C66                     u6950:
 10037  003C66  6F8C               	movwf	_toupper$1813& (0+255),b
 10038  003C68  6B8D               	clrf	(_toupper$1813+1)& (0+255),b
 10039                           
 10040                           ; BSR set to: 0
 10041  003C6A  518C               	movf	_toupper$1813& (0+255),w,b
 10042  003C6C  118D               	iorwf	(_toupper$1813+1)& (0+255),w,b
 10043  003C6E  B4D8               	btfsc	status,2,c
 10044  003C70  D005               	goto	l1512
 10045                           
 10046                           ; BSR set to: 0
 10047  003C72  0E5F               	movlw	95
 10048  003C74  1586               	andwf	toupper@c& (0+255),w,b
 10049  003C76  6F86               	movwf	?_toupper& (0+255),b
 10050  003C78  6B87               	clrf	(?_toupper+1)& (0+255),b
 10051  003C7A  0012               	return	
 10052  003C7C                     l1512:
 10053                           
 10054                           ; BSR set to: 0
 10055  003C7C  C086  F086         	movff	toupper@c,?_toupper
 10056  003C80  C087  F087         	movff	toupper@c+1,?_toupper+1
 10057                           
 10058                           ; BSR set to: 0
 10059  003C84  0012               	return		;funcret
 10060  003C86                     __end_of_toupper:
 10061                           	opt callstack 0
 10062                           
 10063 ;; *************** function _islower *****************
 10064 ;; Defined at:
 10065 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  c               2    0[BANK0 ] int 
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;		None
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  2    0[BANK0 ] int 
 10072 ;; Registers used:
 10073 ;;		wreg, status,2, status,0
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10081 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10082 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10083 ;;Total ram usage:        6 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; Hardware stack levels required when called:    3
 10086 ;; This function calls:
 10087 ;;		Nothing
 10088 ;; This function is called by:
 10089 ;;		_toupper
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           	psect	text25
 10094  003DDC                     __ptext25:
 10095                           	opt callstack 0
 10096  003DDC                     _islower:
 10097                           	opt callstack 21
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;incstack = 0
 10101  003DDC  0E9F               	movlw	159
 10102  003DDE  0100               	movlb	0	; () banked
 10103  003DE0  6F82               	movwf	??_islower& (0+255),b
 10104  003DE2  0EFF               	movlw	255
 10105  003DE4  6F83               	movwf	(??_islower+1)& (0+255),b
 10106  003DE6  C080  F084         	movff	islower@c,??_islower+2
 10107  003DEA  C081  F085         	movff	islower@c+1,??_islower+3
 10108  003DEE  5182               	movf	??_islower& (0+255),w,b
 10109  003DF0  2784               	addwf	(??_islower+2)& (0+255),f,b
 10110  003DF2  5183               	movf	(??_islower+1)& (0+255),w,b
 10111  003DF4  2385               	addwfc	(??_islower+3)& (0+255),f,b
 10112  003DF6  5185               	movf	(??_islower+3)& (0+255),w,b
 10113  003DF8  E106               	bnz	u6830
 10114  003DFA  0E1A               	movlw	26
 10115  003DFC  5D84               	subwf	(??_islower+2)& (0+255),w,b
 10116  003DFE  B0D8               	btfsc	status,0,c
 10117  003E00  D002               	goto	u6830
 10118  003E02  0E01               	movlw	1
 10119  003E04  D001               	goto	u6840
 10120  003E06                     u6830:
 10121  003E06  0E00               	movlw	0
 10122  003E08                     u6840:
 10123  003E08  6F80               	movwf	?_islower& (0+255),b
 10124  003E0A  6B81               	clrf	(?_islower+1)& (0+255),b
 10125                           
 10126                           ; BSR set to: 0
 10127  003E0C  0012               	return		;funcret
 10128  003E0E                     __end_of_islower:
 10129                           	opt callstack 0
 10130                           
 10131 ;; *************** function _isupper *****************
 10132 ;; Defined at:
 10133 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  c               2    0[BANK0 ] int 
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;		None
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  2    0[BANK0 ] int 
 10140 ;; Registers used:
 10141 ;;		wreg, status,2, status,0
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10150 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10151 ;;Total ram usage:        6 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; Hardware stack levels required when called:    3
 10154 ;; This function calls:
 10155 ;;		Nothing
 10156 ;; This function is called by:
 10157 ;;		_xtoa
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text26
 10162  003E0E                     __ptext26:
 10163                           	opt callstack 0
 10164  003E0E                     _isupper:
 10165                           	opt callstack 22
 10166                           
 10167                           ; BSR set to: 0
 10168                           ;incstack = 0
 10169  003E0E  0EBF               	movlw	191
 10170  003E10  0100               	movlb	0	; () banked
 10171  003E12  6F82               	movwf	??_isupper& (0+255),b
 10172  003E14  0EFF               	movlw	255
 10173  003E16  6F83               	movwf	(??_isupper+1)& (0+255),b
 10174  003E18  C080  F084         	movff	isupper@c,??_isupper+2
 10175  003E1C  C081  F085         	movff	isupper@c+1,??_isupper+3
 10176  003E20  5182               	movf	??_isupper& (0+255),w,b
 10177  003E22  2784               	addwf	(??_isupper+2)& (0+255),f,b
 10178  003E24  5183               	movf	(??_isupper+1)& (0+255),w,b
 10179  003E26  2385               	addwfc	(??_isupper+3)& (0+255),f,b
 10180  003E28  5185               	movf	(??_isupper+3)& (0+255),w,b
 10181  003E2A  E106               	bnz	u6900
 10182  003E2C  0E1A               	movlw	26
 10183  003E2E  5D84               	subwf	(??_isupper+2)& (0+255),w,b
 10184  003E30  B0D8               	btfsc	status,0,c
 10185  003E32  D002               	goto	u6900
 10186  003E34  0E01               	movlw	1
 10187  003E36  D001               	goto	u6910
 10188  003E38                     u6900:
 10189  003E38  0E00               	movlw	0
 10190  003E3A                     u6910:
 10191  003E3A  6F80               	movwf	?_isupper& (0+255),b
 10192  003E3C  6B81               	clrf	(?_isupper+1)& (0+255),b
 10193                           
 10194                           ; BSR set to: 0
 10195  003E3E  0012               	return		;funcret
 10196  003E40                     __end_of_isupper:
 10197                           	opt callstack 0
 10198                           
 10199 ;; *************** function _isalpha *****************
 10200 ;; Defined at:
 10201 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;  c               2    0[BANK0 ] int 
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;		None
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  2    0[BANK0 ] int 
 10208 ;; Registers used:
 10209 ;;		wreg, status,2, status,0
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;Total ram usage:        6 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; Hardware stack levels required when called:    3
 10222 ;; This function calls:
 10223 ;;		Nothing
 10224 ;; This function is called by:
 10225 ;;		_xtoa
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           	psect	text27
 10230  003D40                     __ptext27:
 10231                           	opt callstack 0
 10232  003D40                     _isalpha:
 10233                           	opt callstack 22
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;incstack = 0
 10237  003D40  0E9F               	movlw	159
 10238  003D42  0100               	movlb	0	; () banked
 10239  003D44  6F82               	movwf	??_isalpha& (0+255),b
 10240  003D46  0EFF               	movlw	255
 10241  003D48  6F83               	movwf	(??_isalpha+1)& (0+255),b
 10242  003D4A  0E20               	movlw	32
 10243  003D4C  1180               	iorwf	isalpha@c& (0+255),w,b
 10244  003D4E  6F84               	movwf	(??_isalpha+2)& (0+255),b
 10245  003D50  0E00               	movlw	0
 10246  003D52  1181               	iorwf	(isalpha@c+1)& (0+255),w,b
 10247  003D54  6F85               	movwf	(??_isalpha+3)& (0+255),b
 10248  003D56  5182               	movf	??_isalpha& (0+255),w,b
 10249  003D58  2784               	addwf	(??_isalpha+2)& (0+255),f,b
 10250  003D5A  5183               	movf	(??_isalpha+1)& (0+255),w,b
 10251  003D5C  2385               	addwfc	(??_isalpha+3)& (0+255),f,b
 10252  003D5E  5185               	movf	(??_isalpha+3)& (0+255),w,b
 10253  003D60  E106               	bnz	u6920
 10254  003D62  0E1A               	movlw	26
 10255  003D64  5D84               	subwf	(??_isalpha+2)& (0+255),w,b
 10256  003D66  B0D8               	btfsc	status,0,c
 10257  003D68  D002               	goto	u6920
 10258  003D6A  0E01               	movlw	1
 10259  003D6C  D001               	goto	u6930
 10260  003D6E                     u6920:
 10261  003D6E  0E00               	movlw	0
 10262  003D70                     u6930:
 10263  003D70  6F80               	movwf	?_isalpha& (0+255),b
 10264  003D72  6B81               	clrf	(?_isalpha+1)& (0+255),b
 10265                           
 10266                           ; BSR set to: 0
 10267  003D74  0012               	return		;funcret
 10268  003D76                     __end_of_isalpha:
 10269                           	opt callstack 0
 10270                           
 10271 ;; *************** function _dtoa *****************
 10272 ;; Defined at:
 10273 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
 10276 ;;		 -> NULL(0), 
 10277 ;;  d               8   33[BANK0 ] long long 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  n               8   57[BANK0 ] long long 
 10280 ;;  i               2   65[BANK0 ] int 
 10281 ;;  s               2   55[BANK0 ] int 
 10282 ;;  w               2   53[BANK0 ] int 
 10283 ;;  p               2   51[BANK0 ] int 
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  2   31[BANK0 ] int 
 10286 ;; Registers used:
 10287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10293 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10294 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10295 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10296 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10297 ;;Total ram usage:       36 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:   10
 10300 ;; This function calls:
 10301 ;;		___aodiv
 10302 ;;		___aomod
 10303 ;;		_abs
 10304 ;;		_pad
 10305 ;; This function is called by:
 10306 ;;		_vfpfcnvrt
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           	psect	text28
 10311  001E9E                     __ptext28:
 10312                           	opt callstack 0
 10313  001E9E                     _dtoa:
 10314                           	opt callstack 16
 10315                           
 10316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;incstack = 0
 10320  001E9E  C0A1  F0B9         	movff	dtoa@d,dtoa@n
 10321  001EA2  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
 10322  001EA6  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
 10323  001EAA  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
 10324  001EAE  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
 10325  001EB2  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
 10326  001EB6  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
 10327  001EBA  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
 10328                           
 10329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 10330  001EBE  0100               	movlb	0	; () banked
 10331  001EC0  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
 10332  001EC2  D002               	goto	u7140
 10333  001EC4  0E01               	movlw	1
 10334  001EC6  D001               	goto	u7150
 10335  001EC8                     u7140:
 10336  001EC8  0E00               	movlw	0
 10337  001ECA                     u7150:
 10338  001ECA  6FB7               	movwf	dtoa@s& (0+255),b
 10339  001ECC  6BB8               	clrf	(dtoa@s+1)& (0+255),b
 10340                           
 10341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 10342  001ECE  51B7               	movf	dtoa@s& (0+255),w,b
 10343  001ED0  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10344  001ED2  B4D8               	btfsc	status,2,c
 10345  001ED4  D010               	goto	l6826
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 10349  001ED6  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
 10350  001ED8  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
 10351  001EDA  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
 10352  001EDC  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
 10353  001EDE  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
 10354  001EE0  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
 10355  001EE2  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
 10356  001EE4  6DB9               	negf	dtoa@n& (0+255),b
 10357  001EE6  0E00               	movlw	0
 10358  001EE8  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
 10359  001EEA  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
 10360  001EEC  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
 10361  001EEE  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
 10362  001EF0  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
 10363  001EF2  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
 10364  001EF4  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
 10365  001EF6                     l6826:
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 10369  001EF6  AE4D               	btfss	_prec+1,7,c
 10370                           
 10371                           ; BSR set to: 0
 10372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 10373  001EF8  924E               	bcf	_flags,1,c
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 10377  001EFA  BE4D               	btfsc	_prec+1,7,c
 10378  001EFC  D005               	goto	u7180
 10379  001EFE  504D               	movf	_prec+1,w,c
 10380  001F00  E108               	bnz	l647
 10381  001F02  044C               	decf	_prec,w,c
 10382  001F04  B0D8               	btfsc	status,0,c
 10383  001F06  D005               	goto	l647
 10384  001F08                     u7180:
 10385                           
 10386                           ; BSR set to: 0
 10387  001F08  0E00               	movlw	0
 10388  001F0A  6FB4               	movwf	(dtoa@p+1)& (0+255),b
 10389  001F0C  0E01               	movlw	1
 10390  001F0E  6FB3               	movwf	dtoa@p& (0+255),b
 10391  001F10  D004               	goto	l649
 10392  001F12                     l647:
 10393                           
 10394                           ; BSR set to: 0
 10395  001F12  C04C  F0B3         	movff	_prec,dtoa@p
 10396  001F16  C04D  F0B4         	movff	_prec+1,dtoa@p+1
 10397  001F1A                     l649:
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 10401  001F1A  C04A  F0B5         	movff	_width,dtoa@w
 10402  001F1E  C04B  F0B6         	movff	_width+1,dtoa@w+1
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 10406  001F22  51B7               	movf	dtoa@s& (0+255),w,b
 10407  001F24  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10408  001F26  A4D8               	btfss	status,2,c
 10409  001F28  D002               	goto	u7200
 10410                           
 10411                           ; BSR set to: 0
 10412  001F2A  A44E               	btfss	_flags,2,c
 10413  001F2C  D003               	goto	l6840
 10414  001F2E                     u7200:
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 10418  001F2E  07B5               	decf	dtoa@w& (0+255),f,b
 10419  001F30  A0D8               	btfss	status,0,c
 10420  001F32  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10421  001F34                     l6840:
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 10425  001F34  0E00               	movlw	0
 10426  001F36  6FC2               	movwf	(dtoa@i+1)& (0+255),b
 10427  001F38  0E1F               	movlw	31
 10428  001F3A  6FC1               	movwf	dtoa@i& (0+255),b
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 10432  001F3C  0E00               	movlw	0
 10433  001F3E  0102               	movlb	2	; () banked
 10434  001F40  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10435                           
 10436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10437  001F42  D07D               	goto	l6854
 10438  001F44                     l6844:
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 10442  001F44  07C1               	decf	dtoa@i& (0+255),f,b
 10443  001F46  A0D8               	btfss	status,0,c
 10444  001F48  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10445                           
 10446                           ; BSR set to: 0
 10447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 10448  001F4A  0E80               	movlw	low _dbuf
 10449  001F4C  25C1               	addwf	dtoa@i& (0+255),w,b
 10450  001F4E  6ED9               	movwf	fsr2l,c
 10451  001F50  0E02               	movlw	high _dbuf
 10452  001F52  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10453  001F54  6EDA               	movwf	fsr2h,c
 10454  001F56  C0B9  F080         	movff	dtoa@n,___aomod@dividend
 10455  001F5A  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
 10456  001F5E  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
 10457  001F62  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
 10458  001F66  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
 10459  001F6A  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
 10460  001F6E  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
 10461  001F72  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
 10462  001F76  0E0A               	movlw	10
 10463  001F78  6F88               	movwf	___aomod@divisor& (0+255),b
 10464  001F7A  0E00               	movlw	0
 10465  001F7C  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
 10466  001F7E  0E00               	movlw	0
 10467  001F80  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
 10468  001F82  0E00               	movlw	0
 10469  001F84  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
 10470  001F86  0E00               	movlw	0
 10471  001F88  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
 10472  001F8A  0E00               	movlw	0
 10473  001F8C  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
 10474  001F8E  0E00               	movlw	0
 10475  001F90  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
 10476  001F92  0E00               	movlw	0
 10477  001F94  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
 10478  001F96  EC5F  F017         	call	___aomod	;wreg free
 10479  001F9A  C080  F0A9         	movff	?___aomod,??_dtoa
 10480  001F9E  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
 10481  001FA2  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
 10482  001FA6  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
 10483  001FAA  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
 10484  001FAE  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
 10485  001FB2  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
 10486  001FB6  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
 10487  001FBA  C0A9  F092         	movff	??_dtoa,abs@a
 10488  001FBE  C0AB  F093         	movff	??_dtoa+2,abs@a+1
 10489  001FC2  ECBB  F01E         	call	_abs	;wreg free
 10490  001FC6  0100               	movlb	0	; () banked
 10491  001FC8  5192               	movf	?_abs& (0+255),w,b
 10492  001FCA  0F30               	addlw	48
 10493  001FCC  6EDF               	movwf	indf2,c
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10497  001FCE  07B3               	decf	dtoa@p& (0+255),f,b
 10498  001FD0  A0D8               	btfss	status,0,c
 10499  001FD2  07B4               	decf	(dtoa@p+1)& (0+255),f,b
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10503  001FD4  07B5               	decf	dtoa@w& (0+255),f,b
 10504  001FD6  A0D8               	btfss	status,0,c
 10505  001FD8  07B6               	decf	(dtoa@w+1)& (0+255),f,b
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10509  001FDA  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
 10510  001FDE  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
 10511  001FE2  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
 10512  001FE6  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
 10513  001FEA  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
 10514  001FEE  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
 10515  001FF2  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
 10516  001FF6  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
 10517  001FFA  0E0A               	movlw	10
 10518  001FFC  6F88               	movwf	___aodiv@divisor& (0+255),b
 10519  001FFE  0E00               	movlw	0
 10520  002000  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
 10521  002002  0E00               	movlw	0
 10522  002004  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
 10523  002006  0E00               	movlw	0
 10524  002008  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
 10525  00200A  0E00               	movlw	0
 10526  00200C  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
 10527  00200E  0E00               	movlw	0
 10528  002010  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
 10529  002012  0E00               	movlw	0
 10530  002014  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
 10531  002016  0E00               	movlw	0
 10532  002018  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
 10533  00201A  EC78  F015         	call	___aodiv	;wreg free
 10534  00201E  C080  F0B9         	movff	?___aodiv,dtoa@n
 10535  002022  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
 10536  002026  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
 10537  00202A  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
 10538  00202E  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
 10539  002032  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
 10540  002036  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
 10541  00203A  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
 10542  00203E                     l6854:
 10543                           
 10544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10545  00203E  0100               	movlb	0	; () banked
 10546  002040  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
 10547  002042  D01F               	goto	u7250
 10548  002044  51C2               	movf	(dtoa@i+1)& (0+255),w,b
 10549  002046  E103               	bnz	u7210
 10550  002048  05C1               	decf	dtoa@i& (0+255),w,b
 10551  00204A  A0D8               	btfss	status,0,c
 10552  00204C  D01A               	goto	u7250
 10553  00204E                     u7210:
 10554                           
 10555                           ; BSR set to: 0
 10556  00204E  51B9               	movf	dtoa@n& (0+255),w,b
 10557  002050  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
 10558  002052  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
 10559  002054  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
 10560  002056  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
 10561  002058  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
 10562  00205A  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
 10563  00205C  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
 10564  00205E  A4D8               	btfss	status,2,c
 10565  002060  D771               	goto	l6844
 10566                           
 10567                           ; BSR set to: 0
 10568  002062  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
 10569  002064  D005               	goto	u7230
 10570  002066  51B4               	movf	(dtoa@p+1)& (0+255),w,b
 10571  002068  E102               	bnz	u7231
 10572  00206A  05B3               	decf	dtoa@p& (0+255),w,b
 10573  00206C  B0D8               	btfsc	status,0,c
 10574  00206E                     u7231:
 10575  00206E  D76A               	goto	l6844
 10576  002070                     u7230:
 10577                           
 10578                           ; BSR set to: 0
 10579  002070  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
 10580  002072  D007               	goto	u7250
 10581  002074  51B6               	movf	(dtoa@w+1)& (0+255),w,b
 10582  002076  E103               	bnz	u7240
 10583  002078  05B5               	decf	dtoa@w& (0+255),w,b
 10584  00207A  A0D8               	btfss	status,0,c
 10585  00207C  D002               	goto	u7250
 10586  00207E                     u7240:
 10587                           
 10588                           ; BSR set to: 0
 10589  00207E  B24E               	btfsc	_flags,1,c
 10590  002080  D761               	goto	l6844
 10591  002082                     u7250:
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10595  002082  51B7               	movf	dtoa@s& (0+255),w,b
 10596  002084  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10597  002086  A4D8               	btfss	status,2,c
 10598  002088  D002               	goto	u7270
 10599                           
 10600                           ; BSR set to: 0
 10601  00208A  A44E               	btfss	_flags,2,c
 10602  00208C  D017               	goto	l6878
 10603  00208E                     u7270:
 10604                           
 10605                           ; BSR set to: 0
 10606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10607  00208E  07C1               	decf	dtoa@i& (0+255),f,b
 10608  002090  A0D8               	btfss	status,0,c
 10609  002092  07C2               	decf	(dtoa@i+1)& (0+255),f,b
 10610                           
 10611                           ; BSR set to: 0
 10612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10613  002094  51B7               	movf	dtoa@s& (0+255),w,b
 10614  002096  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
 10615  002098  A4D8               	btfss	status,2,c
 10616  00209A  D004               	goto	l6874
 10617                           
 10618                           ; BSR set to: 0
 10619  00209C  0E00               	movlw	0
 10620  00209E  6FB2               	movwf	(_dtoa$1237+1)& (0+255),b
 10621  0020A0  0E2B               	movlw	43
 10622  0020A2  D003               	goto	L4
 10623  0020A4                     l6874:
 10624                           
 10625                           ; BSR set to: 0
 10626  0020A4  0E00               	movlw	0
 10627  0020A6  6FB2               	movwf	(_dtoa$1237+1)& (0+255),b
 10628  0020A8  0E2D               	movlw	45
 10629  0020AA                     L4:
 10630  0020AA  6FB1               	movwf	_dtoa$1237& (0+255),b
 10631                           
 10632                           ; BSR set to: 0
 10633  0020AC  0E80               	movlw	low _dbuf
 10634  0020AE  25C1               	addwf	dtoa@i& (0+255),w,b
 10635  0020B0  6ED9               	movwf	fsr2l,c
 10636  0020B2  0E02               	movlw	high _dbuf
 10637  0020B4  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10638  0020B6  6EDA               	movwf	fsr2h,c
 10639  0020B8  C0B1  FFDF         	movff	_dtoa$1237,indf2
 10640  0020BC                     l6878:
 10641                           
 10642                           ; BSR set to: 0
 10643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10644  0020BC  C09F  F094         	movff	dtoa@fp,pad@fp
 10645  0020C0  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
 10646  0020C4  0E80               	movlw	low _dbuf
 10647  0020C6  25C1               	addwf	dtoa@i& (0+255),w,b
 10648  0020C8  6F96               	movwf	pad@buf& (0+255),b
 10649  0020CA  0E02               	movlw	high _dbuf
 10650  0020CC  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
 10651  0020CE  6F97               	movwf	(pad@buf+1)& (0+255),b
 10652  0020D0  C0B5  F098         	movff	dtoa@w,pad@p
 10653  0020D4  C0B6  F099         	movff	dtoa@w+1,pad@p+1
 10654  0020D8  EC6E  F01B         	call	_pad	;wreg free
 10655  0020DC  C094  F09F         	movff	?_pad,?_dtoa
 10656  0020E0  C095  F0A0         	movff	?_pad+1,?_dtoa+1
 10657  0020E4  0012               	return		;funcret
 10658  0020E6                     __end_of_dtoa:
 10659                           	opt callstack 0
 10660                           
 10661 ;; *************** function _pad *****************
 10662 ;; Defined at:
 10663 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
 10666 ;;		 -> NULL(0), 
 10667 ;;  buf             2   22[BANK0 ] PTR unsigned char 
 10668 ;;		 -> dbuf(32), 
 10669 ;;  p               2   24[BANK0 ] int 
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;  w               2   29[BANK0 ] int 
 10672 ;;  i               2   27[BANK0 ] int 
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  2   20[BANK0 ] int 
 10675 ;; Registers used:
 10676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10682 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10683 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10684 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10685 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10686 ;;Total ram usage:       11 bytes
 10687 ;; Hardware stack levels used:    1
 10688 ;; Hardware stack levels required when called:    9
 10689 ;; This function calls:
 10690 ;;		_fputc
 10691 ;;		_fputs
 10692 ;;		_strlen
 10693 ;; This function is called by:
 10694 ;;		_dtoa
 10695 ;;		_xtoa
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text29
 10700  0036DC                     __ptext29:
 10701                           	opt callstack 0
 10702  0036DC                     _pad:
 10703                           	opt callstack 16
 10704                           
 10705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10706                           
 10707                           ;incstack = 0
 10708  0036DC  A04E               	btfss	_flags,0,c
 10709  0036DE  D00A               	goto	l6682
 10710                           
 10711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10712  0036E0  C096  F08D         	movff	pad@buf,fputs@s
 10713  0036E4  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10714  0036E8  C094  F08F         	movff	pad@fp,fputs@fp
 10715  0036EC  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10716  0036F0  EC82  F01E         	call	_fputs	;wreg free
 10717  0036F4                     l6682:
 10718                           
 10719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10720  0036F4  0100               	movlb	0	; () banked
 10721  0036F6  BF99               	btfsc	(pad@p+1)& (0+255),7,b
 10722  0036F8  D005               	goto	l6686
 10723                           
 10724                           ; BSR set to: 0
 10725  0036FA  C098  F09D         	movff	pad@p,pad@w
 10726  0036FE  C099  F09E         	movff	pad@p+1,pad@w+1
 10727  003702  D004               	goto	l636
 10728  003704                     l6686:
 10729                           
 10730                           ; BSR set to: 0
 10731  003704  0E00               	movlw	0
 10732  003706  6F9E               	movwf	(pad@w+1)& (0+255),b
 10733  003708  0E00               	movlw	0
 10734  00370A  6F9D               	movwf	pad@w& (0+255),b
 10735  00370C                     l636:
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10739  00370C  0E00               	movlw	0
 10740  00370E  6F9C               	movwf	(pad@i+1)& (0+255),b
 10741  003710  0E00               	movlw	0
 10742  003712  6F9B               	movwf	pad@i& (0+255),b
 10743                           
 10744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10745  003714  D00D               	goto	l6692
 10746  003716                     l6688:
 10747                           
 10748                           ; BSR set to: 0
 10749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10750  003716  0E00               	movlw	0
 10751  003718  6F85               	movwf	(fputc@c+1)& (0+255),b
 10752  00371A  0E20               	movlw	32
 10753  00371C  6F84               	movwf	fputc@c& (0+255),b
 10754  00371E  C094  F086         	movff	pad@fp,fputc@fp
 10755  003722  C095  F087         	movff	pad@fp+1,fputc@fp+1
 10756  003726  EC03  F01D         	call	_fputc	;wreg free
 10757                           
 10758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10759  00372A  0100               	movlb	0	; () banked
 10760  00372C  4B9B               	infsnz	pad@i& (0+255),f,b
 10761  00372E  2B9C               	incf	(pad@i+1)& (0+255),f,b
 10762  003730                     l6692:
 10763                           
 10764                           ; BSR set to: 0
 10765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10766  003730  519D               	movf	pad@w& (0+255),w,b
 10767  003732  5D9B               	subwf	pad@i& (0+255),w,b
 10768  003734  519C               	movf	(pad@i+1)& (0+255),w,b
 10769  003736  0A80               	xorlw	128
 10770  003738  6F9A               	movwf	??_pad& (0+255),b
 10771  00373A  519E               	movf	(pad@w+1)& (0+255),w,b
 10772  00373C  0A80               	xorlw	128
 10773  00373E  599A               	subwfb	??_pad& (0+255),w,b
 10774  003740  A0D8               	btfss	status,0,c
 10775  003742  D7E9               	goto	l6688
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10779  003744  B04E               	btfsc	_flags,0,c
 10780  003746  D00A               	goto	l6696
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10784  003748  C096  F08D         	movff	pad@buf,fputs@s
 10785  00374C  C097  F08E         	movff	pad@buf+1,fputs@s+1
 10786  003750  C094  F08F         	movff	pad@fp,fputs@fp
 10787  003754  C095  F090         	movff	pad@fp+1,fputs@fp+1
 10788  003758  EC82  F01E         	call	_fputs	;wreg free
 10789  00375C                     l6696:
 10790                           
 10791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10792  00375C  C096  F080         	movff	pad@buf,strlen@s
 10793  003760  C097  F081         	movff	pad@buf+1,strlen@s+1
 10794  003764  EC39  F01F         	call	_strlen	;wreg free
 10795  003768  0100               	movlb	0	; () banked
 10796  00376A  519D               	movf	pad@w& (0+255),w,b
 10797  00376C  2580               	addwf	?_strlen& (0+255),w,b
 10798  00376E  6F94               	movwf	?_pad& (0+255),b
 10799  003770  519E               	movf	(pad@w+1)& (0+255),w,b
 10800  003772  2181               	addwfc	(?_strlen+1)& (0+255),w,b
 10801  003774  6F95               	movwf	(?_pad+1)& (0+255),b
 10802                           
 10803                           ; BSR set to: 0
 10804  003776  0012               	return		;funcret
 10805  003778                     __end_of_pad:
 10806                           	opt callstack 0
 10807                           
 10808 ;; *************** function _strlen *****************
 10809 ;; Defined at:
 10810 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 10813 ;;		 -> dbuf(32), 
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 10816 ;;		 -> dbuf(32), 
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  2    0[BANK0 ] unsigned int 
 10819 ;; Registers used:
 10820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10829 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10830 ;;Total ram usage:        4 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:    3
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_pad
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text30
 10841  003E72                     __ptext30:
 10842                           	opt callstack 0
 10843  003E72                     _strlen:
 10844                           	opt callstack 21
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;incstack = 0
 10848  003E72  C080  F082         	movff	strlen@s,strlen@a
 10849  003E76  C081  F083         	movff	strlen@s+1,strlen@a+1
 10850  003E7A  D003               	goto	l6664
 10851  003E7C                     l6662:
 10852  003E7C  0100               	movlb	0	; () banked
 10853  003E7E  4B80               	infsnz	strlen@s& (0+255),f,b
 10854  003E80  2B81               	incf	(strlen@s+1)& (0+255),f,b
 10855  003E82                     l6664:
 10856  003E82  C080  FFD9         	movff	strlen@s,fsr2l
 10857  003E86  C081  FFDA         	movff	strlen@s+1,fsr2h
 10858  003E8A  50DF               	movf	indf2,w,c
 10859  003E8C  A4D8               	btfss	status,2,c
 10860  003E8E  D7F6               	goto	l6662
 10861  003E90  0100               	movlb	0	; () banked
 10862  003E92  5182               	movf	strlen@a& (0+255),w,b
 10863  003E94  5D80               	subwf	strlen@s& (0+255),w,b
 10864  003E96  6F80               	movwf	?_strlen& (0+255),b
 10865  003E98  5183               	movf	(strlen@a+1)& (0+255),w,b
 10866  003E9A  5981               	subwfb	(strlen@s+1)& (0+255),w,b
 10867  003E9C  6F81               	movwf	(?_strlen+1)& (0+255),b
 10868                           
 10869                           ; BSR set to: 0
 10870  003E9E  0012               	return		;funcret
 10871  003EA0                     __end_of_strlen:
 10872                           	opt callstack 0
 10873                           
 10874 ;; *************** function _fputs *****************
 10875 ;; Defined at:
 10876 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10877 ;; Parameters:    Size  Location     Type
 10878 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 10879 ;;		 -> dbuf(32), 
 10880 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 10881 ;;		 -> NULL(0), 
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;  i               2   18[BANK0 ] int 
 10884 ;;  c               1   17[BANK0 ] unsigned char 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  2   13[BANK0 ] int 
 10887 ;; Registers used:
 10888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10895 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10897 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10898 ;;Total ram usage:        7 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    8
 10901 ;; This function calls:
 10902 ;;		_fputc
 10903 ;; This function is called by:
 10904 ;;		_pad
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           	psect	text31
 10909  003D04                     __ptext31:
 10910                           	opt callstack 0
 10911  003D04                     _fputs:
 10912                           	opt callstack 16
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;incstack = 0
 10916  003D04  0E00               	movlw	0
 10917  003D06  0100               	movlb	0	; () banked
 10918  003D08  6F93               	movwf	(fputs@i+1)& (0+255),b
 10919  003D0A  0E00               	movlw	0
 10920  003D0C  6F92               	movwf	fputs@i& (0+255),b
 10921  003D0E  D00C               	goto	l6658
 10922  003D10                     l6654:
 10923                           
 10924                           ; BSR set to: 0
 10925  003D10  C091  F084         	movff	fputs@c,fputc@c
 10926  003D14  6B85               	clrf	(fputc@c+1)& (0+255),b
 10927  003D16  C08F  F086         	movff	fputs@fp,fputc@fp
 10928  003D1A  C090  F087         	movff	fputs@fp+1,fputc@fp+1
 10929  003D1E  EC03  F01D         	call	_fputc	;wreg free
 10930  003D22  0100               	movlb	0	; () banked
 10931  003D24  4B92               	infsnz	fputs@i& (0+255),f,b
 10932  003D26  2B93               	incf	(fputs@i+1)& (0+255),f,b
 10933  003D28                     l6658:
 10934                           
 10935                           ; BSR set to: 0
 10936  003D28  5192               	movf	fputs@i& (0+255),w,b
 10937  003D2A  258D               	addwf	fputs@s& (0+255),w,b
 10938  003D2C  6ED9               	movwf	fsr2l,c
 10939  003D2E  5193               	movf	(fputs@i+1)& (0+255),w,b
 10940  003D30  218E               	addwfc	(fputs@s+1)& (0+255),w,b
 10941  003D32  6EDA               	movwf	fsr2h,c
 10942  003D34  50DF               	movf	indf2,w,c
 10943  003D36  6F91               	movwf	fputs@c& (0+255),b
 10944  003D38  5191               	movf	fputs@c& (0+255),w,b
 10945  003D3A  B4D8               	btfsc	status,2,c
 10946  003D3C  0012               	return	
 10947  003D3E  D7E8               	goto	l6654
 10948  003D40                     __end_of_fputs:
 10949                           	opt callstack 0
 10950                           
 10951 ;; *************** function _fputc *****************
 10952 ;; Defined at:
 10953 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;  c               2    4[BANK0 ] int 
 10956 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10957 ;;		 -> NULL(0), 
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;		None
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  2    4[BANK0 ] int 
 10962 ;; Registers used:
 10963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10969 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10971 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;Total ram usage:        9 bytes
 10974 ;; Hardware stack levels used:    1
 10975 ;; Hardware stack levels required when called:    7
 10976 ;; This function calls:
 10977 ;;		_putch
 10978 ;; This function is called by:
 10979 ;;		_pad
 10980 ;;		_vfpfcnvrt
 10981 ;;		_fputs
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985                           	psect	text32
 10986  003A06                     __ptext32:
 10987                           	opt callstack 0
 10988  003A06                     _fputc:
 10989                           	opt callstack 16
 10990                           
 10991                           ; BSR set to: 0
 10992                           ;incstack = 0
 10993  003A06  0100               	movlb	0	; () banked
 10994  003A08  5186               	movf	fputc@fp& (0+255),w,b
 10995  003A0A  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 10996  003A0C  B4D8               	btfsc	status,2,c
 10997  003A0E  D004               	goto	u6780
 10998                           
 10999                           ; BSR set to: 0
 11000  003A10  5186               	movf	fputc@fp& (0+255),w,b
 11001  003A12  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
 11002  003A14  A4D8               	btfss	status,2,c
 11003  003A16  D004               	goto	l6644
 11004  003A18                     u6780:
 11005                           
 11006                           ; BSR set to: 0
 11007  003A18  5184               	movf	fputc@c& (0+255),w,b
 11008  003A1A  ECDA  F01F         	call	_putch
 11009  003A1E  0012               	return	
 11010  003A20                     l6644:
 11011                           
 11012                           ; BSR set to: 0
 11013  003A20  EE20 F004          	lfsr	2,4
 11014  003A24  5186               	movf	fputc@fp& (0+255),w,b
 11015  003A26  26D9               	addwf	fsr2l,f,c
 11016  003A28  5187               	movf	(fputc@fp+1)& (0+255),w,b
 11017  003A2A  22DA               	addwfc	fsr2h,f,c
 11018  003A2C  50DE               	movf	postinc2,w,c
 11019  003A2E  10DE               	iorwf	postinc2,w,c
 11020  003A30  B4D8               	btfsc	status,2,c
 11021  003A32  D016               	goto	u6800
 11022                           
 11023                           ; BSR set to: 0
 11024  003A34  EE20 F004          	lfsr	2,4
 11025  003A38  5186               	movf	fputc@fp& (0+255),w,b
 11026  003A3A  26D9               	addwf	fsr2l,f,c
 11027  003A3C  5187               	movf	(fputc@fp+1)& (0+255),w,b
 11028  003A3E  22DA               	addwfc	fsr2h,f,c
 11029  003A40  EE10 F002          	lfsr	1,2
 11030  003A44  5186               	movf	fputc@fp& (0+255),w,b
 11031  003A46  26E1               	addwf	fsr1l,f,c
 11032  003A48  5187               	movf	(fputc@fp+1)& (0+255),w,b
 11033  003A4A  22E2               	addwfc	fsr1h,f,c
 11034  003A4C  50DE               	movf	postinc2,w,c
 11035  003A4E  5CE6               	subwf	postinc1,w,c
 11036  003A50  50E6               	movf	postinc1,w,c
 11037  003A52  0A80               	xorlw	128
 11038  003A54  6F8C               	movwf	(??_fputc+4)& (0+255),b
 11039  003A56  50DE               	movf	postinc2,w,c
 11040  003A58  0A80               	xorlw	128
 11041  003A5A  598C               	subwfb	(??_fputc+4)& (0+255),w,b
 11042  003A5C  B0D8               	btfsc	status,0,c
 11043  003A5E  0012               	return	
 11044  003A60                     u6800:
 11045                           
 11046                           ; BSR set to: 0
 11047  003A60  EE20 F002          	lfsr	2,2
 11048  003A64  5186               	movf	fputc@fp& (0+255),w,b
 11049  003A66  26D9               	addwf	fsr2l,f,c
 11050  003A68  5187               	movf	(fputc@fp+1)& (0+255),w,b
 11051  003A6A  22DA               	addwfc	fsr2h,f,c
 11052  003A6C  2ADE               	incf	postinc2,f,c
 11053  003A6E  0E00               	movlw	0
 11054  003A70  22DD               	addwfc	postdec2,f,c
 11055  003A72  0012               	return		;funcret
 11056  003A74                     __end_of_fputc:
 11057                           	opt callstack 0
 11058                           
 11059 ;; *************** function _putch *****************
 11060 ;; Defined at:
 11061 ;;		line 102 in file "lcd.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;  data            1    wreg     unsigned char 
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;  data            1    3[BANK0 ] unsigned char 
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      void 
 11068 ;; Registers used:
 11069 ;;		wreg, status,2, status,0, cstack
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;Total ram usage:        1 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; Hardware stack levels required when called:    6
 11082 ;; This function calls:
 11083 ;;		_send_byte
 11084 ;; This function is called by:
 11085 ;;		_fputc
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text33
 11090  003FB4                     __ptext33:
 11091                           	opt callstack 0
 11092  003FB4                     _putch:
 11093                           	opt callstack 16
 11094                           
 11095                           ;incstack = 0
 11096                           ;putch@data stored from wreg
 11097  003FB4  0100               	movlb	0	; () banked
 11098  003FB6  6F83               	movwf	putch@data& (0+255),b
 11099                           
 11100                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 11101  003FB8  848C               	bsf	3980,2,c	;volatile
 11102                           
 11103                           ;lcd.c: 104:     send_byte((unsigned char)data);
 11104  003FBA  0100               	movlb	0	; () banked
 11105  003FBC  5183               	movf	putch@data& (0+255),w,b
 11106  003FBE  ECC4  F01F         	call	_send_byte
 11107  003FC2  0012               	return		;funcret
 11108  003FC4                     __end_of_putch:
 11109                           	opt callstack 0
 11110                           
 11111 ;; *************** function _abs *****************
 11112 ;; Defined at:
 11113 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;  a               2   18[BANK0 ] int 
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;		None
 11118 ;; Return value:  Size  Location     Type
 11119 ;;                  2   18[BANK0 ] int 
 11120 ;; Registers used:
 11121 ;;		wreg, status,2, status,0
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11129 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;Total ram usage:        4 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:    3
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_ultrasonic_main
 11138 ;;		_dtoa
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           
 11142                           	psect	text34
 11143  003D76                     __ptext34:
 11144                           	opt callstack 0
 11145  003D76                     _abs:
 11146                           	opt callstack 22
 11147                           
 11148                           ;incstack = 0
 11149  003D76  0100               	movlb	0	; () banked
 11150  003D78  BF93               	btfsc	(abs@a+1)& (0+255),7,b
 11151  003D7A  D005               	goto	u6850
 11152  003D7C  5193               	movf	(abs@a+1)& (0+255),w,b
 11153  003D7E  E110               	bnz	l1414
 11154  003D80  0592               	decf	abs@a& (0+255),w,b
 11155  003D82  B0D8               	btfsc	status,0,c
 11156  003D84  D00D               	goto	l1414
 11157  003D86                     u6850:
 11158                           
 11159                           ; BSR set to: 0
 11160  003D86  C092  F094         	movff	abs@a,??_abs
 11161  003D8A  C093  F095         	movff	abs@a+1,??_abs+1
 11162  003D8E  1F94               	comf	??_abs& (0+255),f,b
 11163  003D90  1F95               	comf	(??_abs+1)& (0+255),f,b
 11164  003D92  4B94               	infsnz	??_abs& (0+255),f,b
 11165  003D94  2B95               	incf	(??_abs+1)& (0+255),f,b
 11166  003D96  C094  F092         	movff	??_abs,?_abs
 11167  003D9A  C095  F093         	movff	??_abs+1,?_abs+1
 11168  003D9E  0012               	return	
 11169  003DA0                     l1414:
 11170                           
 11171                           ; BSR set to: 0
 11172  003DA0  C092  F092         	movff	abs@a,?_abs
 11173  003DA4  C093  F093         	movff	abs@a+1,?_abs+1
 11174                           
 11175                           ; BSR set to: 0
 11176  003DA8  0012               	return		;funcret
 11177  003DAA                     __end_of_abs:
 11178                           	opt callstack 0
 11179                           
 11180 ;; *************** function ___aomod *****************
 11181 ;; Defined at:
 11182 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  dividend        8    0[BANK0 ] long long 
 11185 ;;  divisor         8    8[BANK0 ] long long 
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;  sign            1   17[BANK0 ] unsigned char 
 11188 ;;  counter         1   16[BANK0 ] unsigned char 
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  8    0[BANK0 ] long long 
 11191 ;; Registers used:
 11192 ;;		wreg, status,2, status,0
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11198 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;Total ram usage:       18 bytes
 11203 ;; Hardware stack levels used:    1
 11204 ;; Hardware stack levels required when called:    3
 11205 ;; This function calls:
 11206 ;;		Nothing
 11207 ;; This function is called by:
 11208 ;;		_dtoa
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text35
 11213  002EBE                     __ptext35:
 11214                           	opt callstack 0
 11215  002EBE                     ___aomod:
 11216                           	opt callstack 22
 11217                           
 11218                           ; BSR set to: 0
 11219                           ;incstack = 0
 11220  002EBE  0E00               	movlw	0
 11221  002EC0  0100               	movlb	0	; () banked
 11222  002EC2  6F91               	movwf	___aomod@sign& (0+255),b
 11223                           
 11224                           ; BSR set to: 0
 11225  002EC4  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
 11226  002EC6  D012               	goto	l6780
 11227                           
 11228                           ; BSR set to: 0
 11229  002EC8  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11230  002ECA  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11231  002ECC  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11232  002ECE  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11233  002ED0  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11234  002ED2  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11235  002ED4  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11236  002ED6  6D80               	negf	___aomod@dividend& (0+255),b
 11237  002ED8  0E00               	movlw	0
 11238  002EDA  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11239  002EDC  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11240  002EDE  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11241  002EE0  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11242  002EE2  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11243  002EE4  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11244  002EE6  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11245                           
 11246                           ; BSR set to: 0
 11247  002EE8  0E01               	movlw	1
 11248  002EEA  6F91               	movwf	___aomod@sign& (0+255),b
 11249  002EEC                     l6780:
 11250                           
 11251                           ; BSR set to: 0
 11252  002EEC  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11253  002EEE  D010               	goto	l6784
 11254                           
 11255                           ; BSR set to: 0
 11256  002EF0  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
 11257  002EF2  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
 11258  002EF4  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
 11259  002EF6  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
 11260  002EF8  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
 11261  002EFA  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
 11262  002EFC  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
 11263  002EFE  6D88               	negf	___aomod@divisor& (0+255),b
 11264  002F00  0E00               	movlw	0
 11265  002F02  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 11266  002F04  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 11267  002F06  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 11268  002F08  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 11269  002F0A  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 11270  002F0C  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 11271  002F0E  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 11272  002F10                     l6784:
 11273                           
 11274                           ; BSR set to: 0
 11275  002F10  5188               	movf	___aomod@divisor& (0+255),w,b
 11276  002F12  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 11277  002F14  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 11278  002F16  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 11279  002F18  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 11280  002F1A  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 11281  002F1C  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 11282  002F1E  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 11283  002F20  B4D8               	btfsc	status,2,c
 11284  002F22  D03C               	goto	l6800
 11285                           
 11286                           ; BSR set to: 0
 11287  002F24  0E01               	movlw	1
 11288  002F26  6F90               	movwf	___aomod@counter& (0+255),b
 11289  002F28  D00A               	goto	l6790
 11290  002F2A                     l6788:
 11291                           
 11292                           ; BSR set to: 0
 11293  002F2A  90D8               	bcf	status,0,c
 11294  002F2C  3788               	rlcf	___aomod@divisor& (0+255),f,b
 11295  002F2E  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 11296  002F30  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 11297  002F32  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 11298  002F34  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 11299  002F36  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 11300  002F38  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 11301  002F3A  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 11302  002F3C  2B90               	incf	___aomod@counter& (0+255),f,b
 11303  002F3E                     l6790:
 11304                           
 11305                           ; BSR set to: 0
 11306  002F3E  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 11307  002F40  D7F4               	goto	l6788
 11308  002F42                     u7090:
 11309                           
 11310                           ; BSR set to: 0
 11311  002F42  5188               	movf	___aomod@divisor& (0+255),w,b
 11312  002F44  5D80               	subwf	___aomod@dividend& (0+255),w,b
 11313  002F46  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11314  002F48  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 11315  002F4A  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11316  002F4C  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 11317  002F4E  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11318  002F50  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 11319  002F52  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11320  002F54  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 11321  002F56  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11322  002F58  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 11323  002F5A  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11324  002F5C  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 11325  002F5E  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11326  002F60  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 11327  002F62  A0D8               	btfss	status,0,c
 11328  002F64  D010               	goto	l6796
 11329                           
 11330                           ; BSR set to: 0
 11331  002F66  5188               	movf	___aomod@divisor& (0+255),w,b
 11332  002F68  5F80               	subwf	___aomod@dividend& (0+255),f,b
 11333  002F6A  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
 11334  002F6C  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 11335  002F6E  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
 11336  002F70  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 11337  002F72  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
 11338  002F74  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 11339  002F76  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
 11340  002F78  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 11341  002F7A  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
 11342  002F7C  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 11343  002F7E  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
 11344  002F80  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 11345  002F82  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
 11346  002F84  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 11347  002F86                     l6796:
 11348                           
 11349                           ; BSR set to: 0
 11350  002F86  90D8               	bcf	status,0,c
 11351  002F88  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 11352  002F8A  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 11353  002F8C  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 11354  002F8E  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 11355  002F90  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 11356  002F92  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 11357  002F94  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 11358  002F96  3388               	rrcf	___aomod@divisor& (0+255),f,b
 11359                           
 11360                           ; BSR set to: 0
 11361  002F98  2F90               	decfsz	___aomod@counter& (0+255),f,b
 11362  002F9A  D7D3               	goto	u7090
 11363  002F9C                     l6800:
 11364                           
 11365                           ; BSR set to: 0
 11366  002F9C  5191               	movf	___aomod@sign& (0+255),w,b
 11367  002F9E  B4D8               	btfsc	status,2,c
 11368  002FA0  D010               	goto	l6804
 11369                           
 11370                           ; BSR set to: 0
 11371  002FA2  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
 11372  002FA4  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
 11373  002FA6  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
 11374  002FA8  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
 11375  002FAA  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
 11376  002FAC  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
 11377  002FAE  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
 11378  002FB0  6D80               	negf	___aomod@dividend& (0+255),b
 11379  002FB2  0E00               	movlw	0
 11380  002FB4  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11381  002FB6  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11382  002FB8  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11383  002FBA  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11384  002FBC  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11385  002FBE  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11386  002FC0  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11387  002FC2                     l6804:
 11388                           
 11389                           ; BSR set to: 0
 11390  002FC2  C080  F080         	movff	___aomod@dividend,?___aomod
 11391  002FC6  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
 11392  002FCA  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
 11393  002FCE  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
 11394  002FD2  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
 11395  002FD6  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
 11396  002FDA  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
 11397  002FDE  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
 11398                           
 11399                           ; BSR set to: 0
 11400  002FE2  0012               	return		;funcret
 11401  002FE4                     __end_of___aomod:
 11402                           	opt callstack 0
 11403                           
 11404 ;; *************** function ___aodiv *****************
 11405 ;; Defined at:
 11406 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;  dividend        8    0[BANK0 ] long long 
 11409 ;;  divisor         8    8[BANK0 ] long long 
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;  quotient        8   18[BANK0 ] long long 
 11412 ;;  sign            1   17[BANK0 ] unsigned char 
 11413 ;;  counter         1   16[BANK0 ] unsigned char 
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  8    0[BANK0 ] long long 
 11416 ;; Registers used:
 11417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11423 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11424 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11426 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11427 ;;Total ram usage:       26 bytes
 11428 ;; Hardware stack levels used:    1
 11429 ;; Hardware stack levels required when called:    3
 11430 ;; This function calls:
 11431 ;;		Nothing
 11432 ;; This function is called by:
 11433 ;;		_dtoa
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           	psect	text36
 11438  002AF0                     __ptext36:
 11439                           	opt callstack 0
 11440  002AF0                     ___aodiv:
 11441                           	opt callstack 22
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;incstack = 0
 11445  002AF0  0E00               	movlw	0
 11446  002AF2  0100               	movlb	0	; () banked
 11447  002AF4  6F91               	movwf	___aodiv@sign& (0+255),b
 11448                           
 11449                           ; BSR set to: 0
 11450  002AF6  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11451  002AF8  D012               	goto	l6736
 11452                           
 11453                           ; BSR set to: 0
 11454  002AFA  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 11455  002AFC  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 11456  002AFE  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 11457  002B00  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 11458  002B02  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 11459  002B04  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 11460  002B06  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
 11461  002B08  6D88               	negf	___aodiv@divisor& (0+255),b
 11462  002B0A  0E00               	movlw	0
 11463  002B0C  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 11464  002B0E  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 11465  002B10  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 11466  002B12  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 11467  002B14  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 11468  002B16  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 11469  002B18  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 11470                           
 11471                           ; BSR set to: 0
 11472  002B1A  0E01               	movlw	1
 11473  002B1C  6F91               	movwf	___aodiv@sign& (0+255),b
 11474  002B1E                     l6736:
 11475                           
 11476                           ; BSR set to: 0
 11477  002B1E  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 11478  002B20  D012               	goto	l6742
 11479                           
 11480                           ; BSR set to: 0
 11481  002B22  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
 11482  002B24  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
 11483  002B26  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
 11484  002B28  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
 11485  002B2A  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
 11486  002B2C  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
 11487  002B2E  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
 11488  002B30  6D80               	negf	___aodiv@dividend& (0+255),b
 11489  002B32  0E00               	movlw	0
 11490  002B34  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 11491  002B36  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 11492  002B38  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 11493  002B3A  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 11494  002B3C  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 11495  002B3E  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 11496  002B40  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 11497                           
 11498                           ; BSR set to: 0
 11499  002B42  0E01               	movlw	1
 11500  002B44  1B91               	xorwf	___aodiv@sign& (0+255),f,b
 11501  002B46                     l6742:
 11502                           
 11503                           ; BSR set to: 0
 11504  002B46  EE20  F092         	lfsr	2,___aodiv@quotient
 11505  002B4A  0E07               	movlw	7
 11506  002B4C                     u7011:
 11507  002B4C  6ADE               	clrf	postinc2,c
 11508  002B4E  06E8               	decf	wreg,f,c
 11509  002B50  E2FD               	bc	u7011
 11510                           
 11511                           ; BSR set to: 0
 11512  002B52  5188               	movf	___aodiv@divisor& (0+255),w,b
 11513  002B54  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 11514  002B56  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 11515  002B58  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 11516  002B5A  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 11517  002B5C  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 11518  002B5E  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 11519  002B60  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 11520  002B62  B4D8               	btfsc	status,2,c
 11521  002B64  D046               	goto	l6764
 11522                           
 11523                           ; BSR set to: 0
 11524  002B66  0E01               	movlw	1
 11525  002B68  6F90               	movwf	___aodiv@counter& (0+255),b
 11526  002B6A  D00A               	goto	l6750
 11527  002B6C                     l6748:
 11528                           
 11529                           ; BSR set to: 0
 11530  002B6C  90D8               	bcf	status,0,c
 11531  002B6E  3788               	rlcf	___aodiv@divisor& (0+255),f,b
 11532  002B70  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 11533  002B72  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 11534  002B74  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 11535  002B76  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 11536  002B78  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 11537  002B7A  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 11538  002B7C  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 11539  002B7E  2B90               	incf	___aodiv@counter& (0+255),f,b
 11540  002B80                     l6750:
 11541                           
 11542                           ; BSR set to: 0
 11543  002B80  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11544  002B82  D7F4               	goto	l6748
 11545  002B84                     u7030:
 11546                           
 11547                           ; BSR set to: 0
 11548  002B84  90D8               	bcf	status,0,c
 11549  002B86  3792               	rlcf	___aodiv@quotient& (0+255),f,b
 11550  002B88  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 11551  002B8A  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 11552  002B8C  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 11553  002B8E  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 11554  002B90  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 11555  002B92  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 11556  002B94  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 11557                           
 11558                           ; BSR set to: 0
 11559  002B96  5188               	movf	___aodiv@divisor& (0+255),w,b
 11560  002B98  5D80               	subwf	___aodiv@dividend& (0+255),w,b
 11561  002B9A  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11562  002B9C  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 11563  002B9E  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11564  002BA0  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 11565  002BA2  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11566  002BA4  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 11567  002BA6  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11568  002BA8  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 11569  002BAA  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11570  002BAC  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 11571  002BAE  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11572  002BB0  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 11573  002BB2  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11574  002BB4  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 11575  002BB6  A0D8               	btfss	status,0,c
 11576  002BB8  D011               	goto	l6760
 11577                           
 11578                           ; BSR set to: 0
 11579  002BBA  5188               	movf	___aodiv@divisor& (0+255),w,b
 11580  002BBC  5F80               	subwf	___aodiv@dividend& (0+255),f,b
 11581  002BBE  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11582  002BC0  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 11583  002BC2  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11584  002BC4  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 11585  002BC6  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11586  002BC8  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 11587  002BCA  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11588  002BCC  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 11589  002BCE  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11590  002BD0  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 11591  002BD2  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11592  002BD4  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 11593  002BD6  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11594  002BD8  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 11595                           
 11596                           ; BSR set to: 0
 11597  002BDA  8192               	bsf	___aodiv@quotient& (0+255),0,b
 11598  002BDC                     l6760:
 11599                           
 11600                           ; BSR set to: 0
 11601  002BDC  90D8               	bcf	status,0,c
 11602  002BDE  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 11603  002BE0  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 11604  002BE2  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 11605  002BE4  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 11606  002BE6  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 11607  002BE8  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 11608  002BEA  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 11609  002BEC  3388               	rrcf	___aodiv@divisor& (0+255),f,b
 11610                           
 11611                           ; BSR set to: 0
 11612  002BEE  2F90               	decfsz	___aodiv@counter& (0+255),f,b
 11613  002BF0  D7C9               	goto	u7030
 11614  002BF2                     l6764:
 11615                           
 11616                           ; BSR set to: 0
 11617  002BF2  5191               	movf	___aodiv@sign& (0+255),w,b
 11618  002BF4  B4D8               	btfsc	status,2,c
 11619  002BF6  D010               	goto	l6768
 11620                           
 11621                           ; BSR set to: 0
 11622  002BF8  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
 11623  002BFA  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
 11624  002BFC  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
 11625  002BFE  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
 11626  002C00  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
 11627  002C02  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
 11628  002C04  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
 11629  002C06  6D92               	negf	___aodiv@quotient& (0+255),b
 11630  002C08  0E00               	movlw	0
 11631  002C0A  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 11632  002C0C  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 11633  002C0E  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 11634  002C10  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 11635  002C12  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 11636  002C14  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 11637  002C16  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 11638  002C18                     l6768:
 11639                           
 11640                           ; BSR set to: 0
 11641  002C18  C092  F080         	movff	___aodiv@quotient,?___aodiv
 11642  002C1C  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
 11643  002C20  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
 11644  002C24  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
 11645  002C28  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
 11646  002C2C  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
 11647  002C30  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
 11648  002C34  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
 11649                           
 11650                           ; BSR set to: 0
 11651  002C38  0012               	return		;funcret
 11652  002C3A                     __end_of___aodiv:
 11653                           	opt callstack 0
 11654                           
 11655 ;; *************** function _atoi *****************
 11656 ;; Defined at:
 11657 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 11660 ;;		 -> STR_65(10), STR_64(11), STR_63(11), STR_62(12), 
 11661 ;;		 -> STR_61(16), STR_60(16), STR_59(14), STR_58(17), 
 11662 ;;		 -> STR_57(12), STR_56(10), STR_55(10), STR_54(13), 
 11663 ;;		 -> STR_53(8), STR_52(3), STR_51(17), STR_50(15), 
 11664 ;;		 -> STR_49(15), STR_48(12), STR_47(17), STR_46(12), 
 11665 ;;		 -> STR_45(15), STR_44(18), STR_43(17), STR_42(12), 
 11666 ;;		 -> STR_41(15), STR_40(18), STR_39(17), STR_38(14), 
 11667 ;;		 -> STR_37(14), STR_36(17), STR_35(3), STR_34(9), 
 11668 ;;		 -> STR_33(16), STR_32(3), STR_31(9), STR_30(17), 
 11669 ;;		 -> STR_29(15), STR_28(15), STR_27(12), STR_26(10), 
 11670 ;;		 -> STR_25(15), STR_24(12), STR_23(10), STR_22(16), 
 11671 ;;		 -> STR_21(12), STR_20(11), STR_19(13), STR_18(8), 
 11672 ;;		 -> STR_17(10), STR_16(17), STR_15(10), STR_14(16), 
 11673 ;;		 -> STR_13(10), STR_12(16), STR_11(10), STR_10(17), 
 11674 ;;		 -> STR_9(5), STR_8(10), STR_7(14), STR_6(6), 
 11675 ;;		 -> STR_5(10), STR_4(10), STR_3(11), STR_2(13), 
 11676 ;;		 -> STR_1(10), 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  n               2   20[BANK0 ] int 
 11679 ;;  neg             2   13[BANK0 ] int 
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  2    7[BANK0 ] int 
 11682 ;; Registers used:
 11683 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11684 ;; Tracked objects:
 11685 ;;		On entry : 0/0
 11686 ;;		On exit  : 0/0
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11690 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11691 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11692 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11693 ;;Total ram usage:       15 bytes
 11694 ;; Hardware stack levels used:    1
 11695 ;; Hardware stack levels required when called:    4
 11696 ;; This function calls:
 11697 ;;		___wmul
 11698 ;;		_isdigit
 11699 ;;		_isspace
 11700 ;; This function is called by:
 11701 ;;		_vfpfcnvrt
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text37
 11706  002C3A                     __ptext37:
 11707                           	opt callstack 0
 11708  002C3A                     _atoi:
 11709                           	opt callstack 22
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;incstack = 0
 11713  002C3A  0E00               	movlw	0
 11714  002C3C  0100               	movlb	0	; () banked
 11715  002C3E  6F95               	movwf	(atoi@n+1)& (0+255),b
 11716  002C40  0E00               	movlw	0
 11717  002C42  6F94               	movwf	atoi@n& (0+255),b
 11718  002C44  0E00               	movlw	0
 11719  002C46  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11720  002C48  0E00               	movlw	0
 11721  002C4A  6F8D               	movwf	atoi@neg& (0+255),b
 11722  002C4C  D002               	goto	l6952
 11723  002C4E                     l6950:
 11724                           
 11725                           ; BSR set to: 0
 11726  002C4E  4B87               	infsnz	atoi@s& (0+255),f,b
 11727  002C50  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11728  002C52                     l6952:
 11729                           
 11730                           ; BSR set to: 0
 11731  002C52  0E01               	movlw	1
 11732  002C54  6F93               	movwf	_atoi$1722& (0+255),b
 11733                           
 11734                           ; BSR set to: 0
 11735  002C56  C087  FFF6         	movff	atoi@s,tblptrl
 11736  002C5A  C088  FFF7         	movff	atoi@s+1,tblptrh
 11737  002C5E                     	if	0	;tblptru may be non-zero
 11738  002C5E                     	endif
 11739  002C5E                     	if	0	;tblptru may be non-zero
 11740  002C5E                     	endif
 11741  002C5E  0008               	tblrd		*
 11742  002C60  50F5               	movf	tablat,w,c
 11743  002C62  0A20               	xorlw	32
 11744  002C64  B4D8               	btfsc	status,2,c
 11745  002C66  D018               	goto	l6960
 11746                           
 11747                           ; BSR set to: 0
 11748  002C68  0EF7               	movlw	247
 11749  002C6A  6F89               	movwf	??_atoi& (0+255),b
 11750  002C6C  0EFF               	movlw	255
 11751  002C6E  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11752  002C70  C087  FFF6         	movff	atoi@s,tblptrl
 11753  002C74  C088  FFF7         	movff	atoi@s+1,tblptrh
 11754  002C78                     	if	0	;tblptru may be non-zero
 11755  002C78                     	endif
 11756  002C78                     	if	0	;tblptru may be non-zero
 11757  002C78                     	endif
 11758  002C78  0008               	tblrd		*
 11759  002C7A  50F5               	movf	tablat,w,c
 11760  002C7C  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11761  002C7E  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11762  002C80  5189               	movf	??_atoi& (0+255),w,b
 11763  002C82  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11764  002C84  518A               	movf	(??_atoi+1)& (0+255),w,b
 11765  002C86  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11766  002C88  518C               	movf	(??_atoi+3)& (0+255),w,b
 11767  002C8A  E104               	bnz	u7470
 11768  002C8C  0E05               	movlw	5
 11769  002C8E  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11770  002C90  A0D8               	btfss	status,0,c
 11771  002C92  D002               	goto	l6960
 11772  002C94                     u7470:
 11773                           
 11774                           ; BSR set to: 0
 11775  002C94  0E00               	movlw	0
 11776  002C96  6F93               	movwf	_atoi$1722& (0+255),b
 11777  002C98                     l6960:
 11778                           
 11779                           ; BSR set to: 0
 11780  002C98  C093  F08F         	movff	_atoi$1722,_atoi$1721
 11781  002C9C  6B90               	clrf	(_atoi$1721+1)& (0+255),b
 11782                           
 11783                           ; BSR set to: 0
 11784  002C9E  518F               	movf	_atoi$1721& (0+255),w,b
 11785  002CA0  1190               	iorwf	(_atoi$1721+1)& (0+255),w,b
 11786  002CA2  B4D8               	btfsc	status,2,c
 11787  002CA4  D008               	goto	l6970
 11788  002CA6  D7D3               	goto	l6950
 11789  002CA8                     l6966:
 11790                           
 11791                           ; BSR set to: 0
 11792  002CA8  0E00               	movlw	0
 11793  002CAA  6F8E               	movwf	(atoi@neg+1)& (0+255),b
 11794  002CAC  0E01               	movlw	1
 11795  002CAE  6F8D               	movwf	atoi@neg& (0+255),b
 11796  002CB0                     l6968:
 11797                           
 11798                           ; BSR set to: 0
 11799  002CB0  4B87               	infsnz	atoi@s& (0+255),f,b
 11800  002CB2  2B88               	incf	(atoi@s+1)& (0+255),f,b
 11801  002CB4  D02F               	goto	l6976
 11802  002CB6                     l6970:
 11803                           
 11804                           ; BSR set to: 0
 11805  002CB6  C087  FFF6         	movff	atoi@s,tblptrl
 11806  002CBA  C088  FFF7         	movff	atoi@s+1,tblptrh
 11807  002CBE                     	if	0	;tblptru may be non-zero
 11808  002CBE                     	endif
 11809  002CBE                     	if	0	;tblptru may be non-zero
 11810  002CBE                     	endif
 11811  002CBE  0008               	tblrd		*
 11812  002CC0  50F5               	movf	tablat,w,c
 11813  002CC2  6F89               	movwf	??_atoi& (0+255),b
 11814  002CC4  6B8A               	clrf	(??_atoi+1)& (0+255),b
 11815                           
 11816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11817                           ; Switch size 1, requested type "simple"
 11818                           ; Number of cases is 1, Range of values is 0 to 0
 11819                           ; switch strategies available:
 11820                           ; Name         Instructions Cycles
 11821                           ; simple_byte            4     3 (average)
 11822                           ;	Chosen strategy is simple_byte
 11823  002CC6  518A               	movf	(??_atoi+1)& (0+255),w,b
 11824  002CC8  0A00               	xorlw	0	; case 0
 11825  002CCA  A4D8               	btfss	status,2,c
 11826  002CCC  D023               	goto	l6976
 11827                           
 11828                           ; BSR set to: 0
 11829                           ; Switch size 1, requested type "simple"
 11830                           ; Number of cases is 2, Range of values is 43 to 45
 11831                           ; switch strategies available:
 11832                           ; Name         Instructions Cycles
 11833                           ; simple_byte            7     4 (average)
 11834                           ;	Chosen strategy is simple_byte
 11835  002CCE  5189               	movf	??_atoi& (0+255),w,b
 11836  002CD0  0A2B               	xorlw	43	; case 43
 11837  002CD2  B4D8               	btfsc	status,2,c
 11838  002CD4  D7ED               	goto	l6968
 11839  002CD6  0A06               	xorlw	6	; case 45
 11840  002CD8  B4D8               	btfsc	status,2,c
 11841  002CDA  D7E6               	goto	l6966
 11842  002CDC  D01B               	goto	l6976
 11843  002CDE                     l6972:
 11844                           
 11845                           ; BSR set to: 0
 11846  002CDE  C094  F080         	movff	atoi@n,___wmul@multiplier
 11847  002CE2  C095  F081         	movff	atoi@n+1,___wmul@multiplier+1
 11848  002CE6  0E00               	movlw	0
 11849  002CE8  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11850  002CEA  0E0A               	movlw	10
 11851  002CEC  6F82               	movwf	___wmul@multiplicand& (0+255),b
 11852  002CEE  EC90  F01F         	call	___wmul	;wreg free
 11853  002CF2  C087  FFF6         	movff	atoi@s,tblptrl
 11854  002CF6  C088  FFF7         	movff	atoi@s+1,tblptrh
 11855  002CFA                     	if	0	;tblptru may be non-zero
 11856  002CFA                     	endif
 11857  002CFA                     	if	0	;tblptru may be non-zero
 11858  002CFA                     	endif
 11859  002CFA  0008               	tblrd		*
 11860  002CFC  50F5               	movf	tablat,w,c
 11861  002CFE  0100               	movlb	0	; () banked
 11862  002D00  5F80               	subwf	?___wmul& (0+255),f,b
 11863  002D02  0E00               	movlw	0
 11864  002D04  5B81               	subwfb	(?___wmul+1)& (0+255),f,b
 11865  002D06  0E30               	movlw	48
 11866  002D08  2580               	addwf	?___wmul& (0+255),w,b
 11867  002D0A  6F94               	movwf	atoi@n& (0+255),b
 11868  002D0C  0E00               	movlw	0
 11869  002D0E  2181               	addwfc	(?___wmul+1)& (0+255),w,b
 11870  002D10  6F95               	movwf	(atoi@n+1)& (0+255),b
 11871  002D12  D7CE               	goto	l6968
 11872  002D14                     l6976:
 11873                           
 11874                           ; BSR set to: 0
 11875  002D14  0ED0               	movlw	208
 11876  002D16  6F89               	movwf	??_atoi& (0+255),b
 11877  002D18  0EFF               	movlw	255
 11878  002D1A  6F8A               	movwf	(??_atoi+1)& (0+255),b
 11879  002D1C  C087  FFF6         	movff	atoi@s,tblptrl
 11880  002D20  C088  FFF7         	movff	atoi@s+1,tblptrh
 11881  002D24                     	if	0	;tblptru may be non-zero
 11882  002D24                     	endif
 11883  002D24                     	if	0	;tblptru may be non-zero
 11884  002D24                     	endif
 11885  002D24  0008               	tblrd		*
 11886  002D26  50F5               	movf	tablat,w,c
 11887  002D28  6F8B               	movwf	(??_atoi+2)& (0+255),b
 11888  002D2A  6B8C               	clrf	(??_atoi+3)& (0+255),b
 11889  002D2C  5189               	movf	??_atoi& (0+255),w,b
 11890  002D2E  278B               	addwf	(??_atoi+2)& (0+255),f,b
 11891  002D30  518A               	movf	(??_atoi+1)& (0+255),w,b
 11892  002D32  238C               	addwfc	(??_atoi+3)& (0+255),f,b
 11893  002D34  518C               	movf	(??_atoi+3)& (0+255),w,b
 11894  002D36  E106               	bnz	u7490
 11895  002D38  0E0A               	movlw	10
 11896  002D3A  5D8B               	subwf	(??_atoi+2)& (0+255),w,b
 11897  002D3C  B0D8               	btfsc	status,0,c
 11898  002D3E  D002               	goto	u7490
 11899  002D40  0E01               	movlw	1
 11900  002D42  D001               	goto	u7500
 11901  002D44                     u7490:
 11902  002D44  0E00               	movlw	0
 11903  002D46                     u7500:
 11904  002D46  6F91               	movwf	_atoi$1723& (0+255),b
 11905  002D48  6B92               	clrf	(_atoi$1723+1)& (0+255),b
 11906                           
 11907                           ; BSR set to: 0
 11908  002D4A  5191               	movf	_atoi$1723& (0+255),w,b
 11909  002D4C  1192               	iorwf	(_atoi$1723+1)& (0+255),w,b
 11910  002D4E  A4D8               	btfss	status,2,c
 11911  002D50  D7C6               	goto	l6972
 11912                           
 11913                           ; BSR set to: 0
 11914  002D52  518D               	movf	atoi@neg& (0+255),w,b
 11915  002D54  118E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11916  002D56  A4D8               	btfss	status,2,c
 11917  002D58  D00D               	goto	l1445
 11918                           
 11919                           ; BSR set to: 0
 11920  002D5A  C094  F089         	movff	atoi@n,??_atoi
 11921  002D5E  C095  F08A         	movff	atoi@n+1,??_atoi+1
 11922  002D62  1F89               	comf	??_atoi& (0+255),f,b
 11923  002D64  1F8A               	comf	(??_atoi+1)& (0+255),f,b
 11924  002D66  4B89               	infsnz	??_atoi& (0+255),f,b
 11925  002D68  2B8A               	incf	(??_atoi+1)& (0+255),f,b
 11926  002D6A  C089  F087         	movff	??_atoi,?_atoi
 11927  002D6E  C08A  F088         	movff	??_atoi+1,?_atoi+1
 11928  002D72  0012               	return	
 11929  002D74                     l1445:
 11930                           
 11931                           ; BSR set to: 0
 11932  002D74  C094  F087         	movff	atoi@n,?_atoi
 11933  002D78  C095  F088         	movff	atoi@n+1,?_atoi+1
 11934                           
 11935                           ; BSR set to: 0
 11936  002D7C  0012               	return		;funcret
 11937  002D7E                     __end_of_atoi:
 11938                           	opt callstack 0
 11939                           
 11940 ;; *************** function _isspace *****************
 11941 ;; Defined at:
 11942 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;  c               2    0[BANK0 ] int 
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;		None
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  2    0[BANK0 ] int 
 11949 ;; Registers used:
 11950 ;;		wreg, status,2, status,0
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11956 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11959 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11960 ;;Total ram usage:        7 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:    3
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_atoi
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970                           	psect	text38
 11971  003C86                     __ptext38:
 11972                           	opt callstack 0
 11973  003C86                     _isspace:
 11974                           	opt callstack 22
 11975                           
 11976                           ; BSR set to: 0
 11977                           ;incstack = 0
 11978  003C86  0E01               	movlw	1
 11979  003C88  0100               	movlb	0	; () banked
 11980  003C8A  6F86               	movwf	_isspace$1748& (0+255),b
 11981                           
 11982                           ; BSR set to: 0
 11983  003C8C  0E20               	movlw	32
 11984  003C8E  1980               	xorwf	isspace@c& (0+255),w,b
 11985  003C90  1181               	iorwf	(isspace@c+1)& (0+255),w,b
 11986  003C92  B4D8               	btfsc	status,2,c
 11987  003C94  D014               	goto	l6816
 11988                           
 11989                           ; BSR set to: 0
 11990  003C96  0EF7               	movlw	247
 11991  003C98  6F82               	movwf	??_isspace& (0+255),b
 11992  003C9A  0EFF               	movlw	255
 11993  003C9C  6F83               	movwf	(??_isspace+1)& (0+255),b
 11994  003C9E  C080  F084         	movff	isspace@c,??_isspace+2
 11995  003CA2  C081  F085         	movff	isspace@c+1,??_isspace+3
 11996  003CA6  5182               	movf	??_isspace& (0+255),w,b
 11997  003CA8  2784               	addwf	(??_isspace+2)& (0+255),f,b
 11998  003CAA  5183               	movf	(??_isspace+1)& (0+255),w,b
 11999  003CAC  2385               	addwfc	(??_isspace+3)& (0+255),f,b
 12000  003CAE  5185               	movf	(??_isspace+3)& (0+255),w,b
 12001  003CB0  E104               	bnz	u7130
 12002  003CB2  0E05               	movlw	5
 12003  003CB4  5D84               	subwf	(??_isspace+2)& (0+255),w,b
 12004  003CB6  A0D8               	btfss	status,0,c
 12005  003CB8  D002               	goto	l6816
 12006  003CBA                     u7130:
 12007                           
 12008                           ; BSR set to: 0
 12009  003CBA  0E00               	movlw	0
 12010  003CBC  6F86               	movwf	_isspace$1748& (0+255),b
 12011  003CBE                     l6816:
 12012                           
 12013                           ; BSR set to: 0
 12014  003CBE  C086  F080         	movff	_isspace$1748,?_isspace
 12015  003CC2  6B81               	clrf	(?_isspace+1)& (0+255),b
 12016                           
 12017                           ; BSR set to: 0
 12018  003CC4  0012               	return		;funcret
 12019  003CC6                     __end_of_isspace:
 12020                           	opt callstack 0
 12021                           
 12022 ;; *************** function _isdigit *****************
 12023 ;; Defined at:
 12024 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;  c               2    0[BANK0 ] int 
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  2    0[BANK0 ] int 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;Total ram usage:        6 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    3
 12045 ;; This function calls:
 12046 ;;		Nothing
 12047 ;; This function is called by:
 12048 ;;		_vfpfcnvrt
 12049 ;;		_atoi
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           	psect	text39
 12054  003E40                     __ptext39:
 12055                           	opt callstack 0
 12056  003E40                     _isdigit:
 12057                           	opt callstack 23
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;incstack = 0
 12061  003E40  0ED0               	movlw	208
 12062  003E42  0100               	movlb	0	; () banked
 12063  003E44  6F82               	movwf	??_isdigit& (0+255),b
 12064  003E46  0EFF               	movlw	255
 12065  003E48  6F83               	movwf	(??_isdigit+1)& (0+255),b
 12066  003E4A  C080  F084         	movff	isdigit@c,??_isdigit+2
 12067  003E4E  C081  F085         	movff	isdigit@c+1,??_isdigit+3
 12068  003E52  5182               	movf	??_isdigit& (0+255),w,b
 12069  003E54  2784               	addwf	(??_isdigit+2)& (0+255),f,b
 12070  003E56  5183               	movf	(??_isdigit+1)& (0+255),w,b
 12071  003E58  2385               	addwfc	(??_isdigit+3)& (0+255),f,b
 12072  003E5A  5185               	movf	(??_isdigit+3)& (0+255),w,b
 12073  003E5C  E106               	bnz	u6970
 12074  003E5E  0E0A               	movlw	10
 12075  003E60  5D84               	subwf	(??_isdigit+2)& (0+255),w,b
 12076  003E62  B0D8               	btfsc	status,0,c
 12077  003E64  D002               	goto	u6970
 12078  003E66  0E01               	movlw	1
 12079  003E68  D001               	goto	u6980
 12080  003E6A                     u6970:
 12081  003E6A  0E00               	movlw	0
 12082  003E6C                     u6980:
 12083  003E6C  6F80               	movwf	?_isdigit& (0+255),b
 12084  003E6E  6B81               	clrf	(?_isdigit+1)& (0+255),b
 12085                           
 12086                           ; BSR set to: 0
 12087  003E70  0012               	return		;funcret
 12088  003E72                     __end_of_isdigit:
 12089                           	opt callstack 0
 12090                           
 12091 ;; *************** function ___wmul *****************
 12092 ;; Defined at:
 12093 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 12094 ;; Parameters:    Size  Location     Type
 12095 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12096 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;  product         2    4[BANK0 ] unsigned int 
 12099 ;; Return value:  Size  Location     Type
 12100 ;;                  2    0[BANK0 ] unsigned int 
 12101 ;; Registers used:
 12102 ;;		wreg, status,2, status,0, prodl, prodh
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/0
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12108 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12109 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12111 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12112 ;;Total ram usage:        6 bytes
 12113 ;; Hardware stack levels used:    1
 12114 ;; Hardware stack levels required when called:    3
 12115 ;; This function calls:
 12116 ;;		Nothing
 12117 ;; This function is called by:
 12118 ;;		_main
 12119 ;;		_atoi
 12120 ;; This function uses a non-reentrant model
 12121 ;;
 12122                           
 12123                           	psect	text40
 12124  003F20                     __ptext40:
 12125                           	opt callstack 0
 12126  003F20                     ___wmul:
 12127                           	opt callstack 22
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;incstack = 0
 12131  003F20  0100               	movlb	0	; () banked
 12132  003F22  5180               	movf	___wmul@multiplier& (0+255),w,b
 12133  003F24  0382               	mulwf	___wmul@multiplicand& (0+255),b
 12134  003F26  CFF3 F084          	movff	prodl,___wmul@product
 12135  003F2A  CFF4 F085          	movff	prodh,___wmul@product+1
 12136  003F2E  5180               	movf	___wmul@multiplier& (0+255),w,b
 12137  003F30  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12138  003F32  50F3               	movf	prodl,w,c
 12139  003F34  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 12140  003F36  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12141  003F38  0382               	mulwf	___wmul@multiplicand& (0+255),b
 12142  003F3A  50F3               	movf	prodl,w,c
 12143  003F3C  2785               	addwf	(___wmul@product+1)& (0+255),f,b
 12144                           
 12145                           ; BSR set to: 0
 12146  003F3E  C084  F080         	movff	___wmul@product,?___wmul
 12147  003F42  C085  F081         	movff	___wmul@product+1,?___wmul+1
 12148                           
 12149                           ; BSR set to: 0
 12150  003F46  0012               	return		;funcret
 12151  003F48                     __end_of___wmul:
 12152                           	opt callstack 0
 12153                           
 12154 ;; *************** function _initLCD *****************
 12155 ;; Defined at:
 12156 ;;		line 69 in file "lcd.c"
 12157 ;; Parameters:    Size  Location     Type
 12158 ;;		None
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;		None
 12161 ;; Return value:  Size  Location     Type
 12162 ;;                  1    wreg      void 
 12163 ;; Registers used:
 12164 ;;		wreg, status,2, status,0, cstack
 12165 ;; Tracked objects:
 12166 ;;		On entry : 0/0
 12167 ;;		On exit  : 0/0
 12168 ;;		Unchanged: 0/0
 12169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12172 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12173 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12174 ;;Total ram usage:        1 bytes
 12175 ;; Hardware stack levels used:    1
 12176 ;; Hardware stack levels required when called:    7
 12177 ;; This function calls:
 12178 ;;		_lcdInst
 12179 ;;		_send_byte
 12180 ;;		_send_nibble
 12181 ;; This function is called by:
 12182 ;;		_actuators_main
 12183 ;;		_UI_main
 12184 ;;		_main
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           	psect	text41
 12189  003996                     __ptext41:
 12190                           	opt callstack 0
 12191  003996                     _initLCD:
 12192                           	opt callstack 23
 12193                           
 12194                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;incstack = 0
 12198  003996  0E31               	movlw	49
 12199  003998  0100               	movlb	0	; () banked
 12200  00399A  6F84               	movwf	??_initLCD& (0+255),b
 12201  00399C  0EB2               	movlw	178
 12202  00399E                     u10167:
 12203  00399E  2EE8               	decfsz	wreg,f,c
 12204  0039A0  D7FE               	bra	u10167
 12205  0039A2  2F84               	decfsz	??_initLCD& (0+255),f,b
 12206  0039A4  D7FC               	bra	u10167
 12207  0039A6  F000               	nop	
 12208                           
 12209                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 12210  0039A8  948C               	bcf	3980,2,c	;volatile
 12211                           
 12212                           ;lcd.c: 74:     send_nibble(0b0011);
 12213  0039AA  0E03               	movlw	3
 12214  0039AC  ECB7  F01F         	call	_send_nibble
 12215                           
 12216                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 12217  0039B0  0E11               	movlw	17
 12218  0039B2  0100               	movlb	0	; () banked
 12219  0039B4  6F84               	movwf	??_initLCD& (0+255),b
 12220  0039B6  0E3A               	movlw	58
 12221  0039B8                     u10177:
 12222  0039B8  2EE8               	decfsz	wreg,f,c
 12223  0039BA  D7FE               	bra	u10177
 12224  0039BC  2F84               	decfsz	??_initLCD& (0+255),f,b
 12225  0039BE  D7FC               	bra	u10177
 12226  0039C0  F000               	nop	
 12227                           
 12228                           ;lcd.c: 76:     send_nibble(0b0011);
 12229  0039C2  0E03               	movlw	3
 12230  0039C4  ECB7  F01F         	call	_send_nibble
 12231                           
 12232                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 12233  0039C8  0E7D               	movlw	125
 12234  0039CA                     u10187:
 12235  0039CA  2EE8               	decfsz	wreg,f,c
 12236  0039CC  D7FE               	bra	u10187
 12237                           
 12238                           ;lcd.c: 78:     send_byte(0b00110010);
 12239  0039CE  0E32               	movlw	50
 12240  0039D0  ECC4  F01F         	call	_send_byte
 12241                           
 12242                           ;lcd.c: 80:     send_byte(0b00101000);
 12243  0039D4  0E28               	movlw	40
 12244  0039D6  ECC4  F01F         	call	_send_byte
 12245                           
 12246                           ;lcd.c: 81:     send_byte(0b00001000);
 12247  0039DA  0E08               	movlw	8
 12248  0039DC  ECC4  F01F         	call	_send_byte
 12249                           
 12250                           ;lcd.c: 82:     send_byte(0b00000001);
 12251  0039E0  0E01               	movlw	1
 12252  0039E2  ECC4  F01F         	call	_send_byte
 12253                           
 12254                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 12255  0039E6  0E11               	movlw	17
 12256  0039E8  0100               	movlb	0	; () banked
 12257  0039EA  6F84               	movwf	??_initLCD& (0+255),b
 12258  0039EC  0E3A               	movlw	58
 12259  0039EE                     u10197:
 12260  0039EE  2EE8               	decfsz	wreg,f,c
 12261  0039F0  D7FE               	bra	u10197
 12262  0039F2  2F84               	decfsz	??_initLCD& (0+255),f,b
 12263  0039F4  D7FC               	bra	u10197
 12264  0039F6  F000               	nop	
 12265                           
 12266                           ;lcd.c: 84:     send_byte(0b00000110);
 12267  0039F8  0E06               	movlw	6
 12268  0039FA  ECC4  F01F         	call	_send_byte
 12269                           
 12270                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 12271  0039FE  0E0F               	movlw	15
 12272  003A00  ECE2  F01F         	call	_lcdInst
 12273  003A04  0012               	return		;funcret
 12274  003A06                     __end_of_initLCD:
 12275                           	opt callstack 0
 12276                           
 12277 ;; *************** function _lcdInst *****************
 12278 ;; Defined at:
 12279 ;;		line 64 in file "lcd.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;  data            1    wreg     unsigned char 
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;  data            1    3[BANK0 ] unsigned char 
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  1    wreg      void 
 12286 ;; Registers used:
 12287 ;;		wreg, status,2, status,0, cstack
 12288 ;; Tracked objects:
 12289 ;;		On entry : 0/0
 12290 ;;		On exit  : 0/0
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12297 ;;Total ram usage:        1 bytes
 12298 ;; Hardware stack levels used:    1
 12299 ;; Hardware stack levels required when called:    6
 12300 ;; This function calls:
 12301 ;;		_send_byte
 12302 ;; This function is called by:
 12303 ;;		_actuators_main
 12304 ;;		_stepper2
 12305 ;;		_stepper2_back
 12306 ;;		_initLCD
 12307 ;;		_print_echo
 12308 ;;		_ultrasonic_main
 12309 ;;		_number_deploy
 12310 ;;		_UI_main
 12311 ;;		_brake
 12312 ;;		_main
 12313 ;;		_lcd_shift_cursor
 12314 ;;		_lcd_shift_display
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	text42
 12319  003FC4                     __ptext42:
 12320                           	opt callstack 0
 12321  003FC4                     _lcdInst:
 12322                           	opt callstack 22
 12323                           
 12324                           ;incstack = 0
 12325                           ;lcdInst@data stored from wreg
 12326  003FC4  0100               	movlb	0	; () banked
 12327  003FC6  6F83               	movwf	lcdInst@data& (0+255),b
 12328                           
 12329                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 12330  003FC8  948C               	bcf	3980,2,c	;volatile
 12331                           
 12332                           ;lcd.c: 66:     send_byte(data);
 12333  003FCA  0100               	movlb	0	; () banked
 12334  003FCC  5183               	movf	lcdInst@data& (0+255),w,b
 12335  003FCE  ECC4  F01F         	call	_send_byte
 12336  003FD2  0012               	return		;funcret
 12337  003FD4                     __end_of_lcdInst:
 12338                           	opt callstack 0
 12339                           
 12340 ;; *************** function _send_byte *****************
 12341 ;; Defined at:
 12342 ;;		line 55 in file "lcd.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;  data            1    wreg     unsigned char 
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;  data            1    2[BANK0 ] unsigned char 
 12347 ;; Return value:  Size  Location     Type
 12348 ;;                  1    wreg      void 
 12349 ;; Registers used:
 12350 ;;		wreg, status,2, status,0, cstack
 12351 ;; Tracked objects:
 12352 ;;		On entry : 0/0
 12353 ;;		On exit  : 0/0
 12354 ;;		Unchanged: 0/0
 12355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12359 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12360 ;;Total ram usage:        1 bytes
 12361 ;; Hardware stack levels used:    1
 12362 ;; Hardware stack levels required when called:    5
 12363 ;; This function calls:
 12364 ;;		_send_nibble
 12365 ;; This function is called by:
 12366 ;;		_lcdInst
 12367 ;;		_initLCD
 12368 ;;		_putch
 12369 ;; This function uses a non-reentrant model
 12370 ;;
 12371                           
 12372                           	psect	text43
 12373  003F88                     __ptext43:
 12374                           	opt callstack 0
 12375  003F88                     _send_byte:
 12376                           	opt callstack 16
 12377                           
 12378                           ;incstack = 0
 12379                           ;send_byte@data stored from wreg
 12380  003F88  0100               	movlb	0	; () banked
 12381  003F8A  6F82               	movwf	send_byte@data& (0+255),b
 12382                           
 12383                           ;lcd.c: 57:     send_nibble(data >> 4);
 12384  003F8C  0100               	movlb	0	; () banked
 12385  003F8E  3982               	swapf	send_byte@data& (0+255),w,b
 12386  003F90  0B0F               	andlw	15
 12387  003F92  ECB7  F01F         	call	_send_nibble
 12388                           
 12389                           ;lcd.c: 60:     send_nibble(data);
 12390  003F96  0100               	movlb	0	; () banked
 12391  003F98  5182               	movf	send_byte@data& (0+255),w,b
 12392  003F9A  ECB7  F01F         	call	_send_nibble
 12393  003F9E  0012               	return		;funcret
 12394  003FA0                     __end_of_send_byte:
 12395                           	opt callstack 0
 12396                           
 12397 ;; *************** function _send_nibble *****************
 12398 ;; Defined at:
 12399 ;;		line 44 in file "lcd.c"
 12400 ;; Parameters:    Size  Location     Type
 12401 ;;  data            1    wreg     unsigned char 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;  data            1    1[BANK0 ] unsigned char 
 12404 ;; Return value:  Size  Location     Type
 12405 ;;                  1    wreg      void 
 12406 ;; Registers used:
 12407 ;;		wreg, status,2, status,0, cstack
 12408 ;; Tracked objects:
 12409 ;;		On entry : 0/0
 12410 ;;		On exit  : 0/0
 12411 ;;		Unchanged: 0/0
 12412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12414 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12416 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12417 ;;Total ram usage:        1 bytes
 12418 ;; Hardware stack levels used:    1
 12419 ;; Hardware stack levels required when called:    4
 12420 ;; This function calls:
 12421 ;;		_pulse_e
 12422 ;; This function is called by:
 12423 ;;		_send_byte
 12424 ;;		_initLCD
 12425 ;; This function uses a non-reentrant model
 12426 ;;
 12427                           
 12428                           	psect	text44
 12429  003F6E                     __ptext44:
 12430                           	opt callstack 0
 12431  003F6E                     _send_nibble:
 12432                           	opt callstack 16
 12433                           
 12434                           ;incstack = 0
 12435                           ;send_nibble@data stored from wreg
 12436  003F6E  0100               	movlb	0	; () banked
 12437  003F70  6F81               	movwf	send_nibble@data& (0+255),b
 12438                           
 12439                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 12440  003F72  508C               	movf	3980,w,c	;volatile
 12441  003F74  0B0F               	andlw	15
 12442  003F76  6E8C               	movwf	3980,c	;volatile
 12443                           
 12444                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 12445  003F78  0100               	movlb	0	; () banked
 12446  003F7A  3981               	swapf	send_nibble@data& (0+255),w,b
 12447  003F7C  0BF0               	andlw	240
 12448  003F7E  108C               	iorwf	3980,w,c	;volatile
 12449  003F80  6E8C               	movwf	3980,c	;volatile
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;lcd.c: 48:     pulse_e();
 12453  003F82  EC50  F01F         	call	_pulse_e	;wreg free
 12454  003F86  0012               	return		;funcret
 12455  003F88                     __end_of_send_nibble:
 12456                           	opt callstack 0
 12457                           
 12458 ;; *************** function _pulse_e *****************
 12459 ;; Defined at:
 12460 ;;		line 28 in file "lcd.c"
 12461 ;; Parameters:    Size  Location     Type
 12462 ;;		None
 12463 ;; Auto vars:     Size  Location     Type
 12464 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 12465 ;; Return value:  Size  Location     Type
 12466 ;;                  1    wreg      void 
 12467 ;; Registers used:
 12468 ;;		wreg
 12469 ;; Tracked objects:
 12470 ;;		On entry : 0/0
 12471 ;;		On exit  : 0/0
 12472 ;;		Unchanged: 0/0
 12473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12475 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12477 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12478 ;;Total ram usage:        1 bytes
 12479 ;; Hardware stack levels used:    1
 12480 ;; Hardware stack levels required when called:    3
 12481 ;; This function calls:
 12482 ;;		Nothing
 12483 ;; This function is called by:
 12484 ;;		_send_nibble
 12485 ;; This function uses a non-reentrant model
 12486 ;;
 12487                           
 12488                           	psect	text45
 12489  003EA0                     __ptext45:
 12490                           	opt callstack 0
 12491  003EA0                     _pulse_e:
 12492                           	opt callstack 16
 12493                           
 12494                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 12495                           
 12496                           ;incstack = 0
 12497  003EA0  0E00               	movlw	0
 12498  003EA2  BEF2               	btfsc	4082,7,c	;volatile
 12499  003EA4  0E01               	movlw	1
 12500  003EA6  0100               	movlb	0	; () banked
 12501  003EA8  6F80               	movwf	pulse_e@interruptState& (0+255),b
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 12505  003EAA  9EF2               	bcf	4082,7,c	;volatile
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 12509  003EAC  868C               	bsf	3980,3,c	;volatile
 12510                           
 12511                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 12512  003EAE  0E14               	movlw	20
 12513  003EB0                     u10207:
 12514  003EB0  2EE8               	decfsz	wreg,f,c
 12515  003EB2  D7FE               	bra	u10207
 12516  003EB4  D000               	nop2	
 12517                           
 12518                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 12519  003EB6  968C               	bcf	3980,3,c	;volatile
 12520                           
 12521                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 12522  003EB8  0E53               	movlw	83
 12523  003EBA                     u10217:
 12524  003EBA  2EE8               	decfsz	wreg,f,c
 12525  003EBC  D7FE               	bra	u10217
 12526  003EBE  F000               	nop	
 12527                           
 12528                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 12529  003EC0  0100               	movlb	0	; () banked
 12530  003EC2  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 12531  003EC4  D002               	bra	u6765
 12532  003EC6  9EF2               	bcf	4082,7,c	;volatile
 12533  003EC8  D001               	bra	u6766
 12534  003ECA                     u6765:
 12535  003ECA  8EF2               	bsf	4082,7,c	;volatile
 12536  003ECC                     u6766:
 12537  003ECC  0012               	return		;funcret
 12538  003ECE                     __end_of_pulse_e:
 12539                           	opt callstack 0
 12540                           
 12541 ;; *************** function ___llmod *****************
 12542 ;; Defined at:
 12543 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  dividend        4    0[BANK0 ] unsigned long 
 12546 ;;  divisor         4    4[BANK0 ] unsigned long 
 12547 ;; Auto vars:     Size  Location     Type
 12548 ;;  counter         1    8[BANK0 ] unsigned char 
 12549 ;; Return value:  Size  Location     Type
 12550 ;;                  4    0[BANK0 ] unsigned long 
 12551 ;; Registers used:
 12552 ;;		wreg, status,2, status,0
 12553 ;; Tracked objects:
 12554 ;;		On entry : 0/0
 12555 ;;		On exit  : 0/0
 12556 ;;		Unchanged: 0/0
 12557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12558 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12561 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12562 ;;Total ram usage:        9 bytes
 12563 ;; Hardware stack levels used:    1
 12564 ;; Hardware stack levels required when called:    3
 12565 ;; This function calls:
 12566 ;;		Nothing
 12567 ;; This function is called by:
 12568 ;;		_UI_main
 12569 ;; This function uses a non-reentrant model
 12570 ;;
 12571                           
 12572                           	psect	text46
 12573  003A74                     __ptext46:
 12574                           	opt callstack 0
 12575  003A74                     ___llmod:
 12576                           	opt callstack 26
 12577                           
 12578                           ;incstack = 0
 12579  003A74  0100               	movlb	0	; () banked
 12580  003A76  5184               	movf	___llmod@divisor& (0+255),w,b
 12581  003A78  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12582  003A7A  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12583  003A7C  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12584  003A7E  B4D8               	btfsc	status,2,c
 12585  003A80  D024               	goto	l1159
 12586                           
 12587                           ; BSR set to: 0
 12588  003A82  0E01               	movlw	1
 12589  003A84  6F88               	movwf	___llmod@counter& (0+255),b
 12590  003A86  D006               	goto	l7850
 12591  003A88                     l7848:
 12592                           
 12593                           ; BSR set to: 0
 12594  003A88  90D8               	bcf	status,0,c
 12595  003A8A  3784               	rlcf	___llmod@divisor& (0+255),f,b
 12596  003A8C  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12597  003A8E  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12598  003A90  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12599  003A92  2B88               	incf	___llmod@counter& (0+255),f,b
 12600  003A94                     l7850:
 12601                           
 12602                           ; BSR set to: 0
 12603  003A94  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12604  003A96  D7F8               	goto	l7848
 12605  003A98                     u8460:
 12606                           
 12607                           ; BSR set to: 0
 12608  003A98  5184               	movf	___llmod@divisor& (0+255),w,b
 12609  003A9A  5D80               	subwf	___llmod@dividend& (0+255),w,b
 12610  003A9C  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12611  003A9E  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12612  003AA0  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12613  003AA2  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12614  003AA4  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12615  003AA6  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12616  003AA8  A0D8               	btfss	status,0,c
 12617  003AAA  D008               	goto	l7856
 12618                           
 12619                           ; BSR set to: 0
 12620  003AAC  5184               	movf	___llmod@divisor& (0+255),w,b
 12621  003AAE  5F80               	subwf	___llmod@dividend& (0+255),f,b
 12622  003AB0  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 12623  003AB2  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12624  003AB4  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 12625  003AB6  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12626  003AB8  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 12627  003ABA  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12628  003ABC                     l7856:
 12629                           
 12630                           ; BSR set to: 0
 12631  003ABC  90D8               	bcf	status,0,c
 12632  003ABE  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12633  003AC0  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12634  003AC2  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12635  003AC4  3384               	rrcf	___llmod@divisor& (0+255),f,b
 12636                           
 12637                           ; BSR set to: 0
 12638  003AC6  2F88               	decfsz	___llmod@counter& (0+255),f,b
 12639  003AC8  D7E7               	goto	u8460
 12640  003ACA                     l1159:
 12641                           
 12642                           ; BSR set to: 0
 12643  003ACA  C080  F080         	movff	___llmod@dividend,?___llmod
 12644  003ACE  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 12645  003AD2  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 12646  003AD6  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 12647                           
 12648                           ; BSR set to: 0
 12649  003ADA  0012               	return		;funcret
 12650  003ADC                     __end_of___llmod:
 12651                           	opt callstack 0
 12652                           
 12653 ;; *************** function _I2C_Master_Write *****************
 12654 ;; Defined at:
 12655 ;;		line 70 in file "I2C.c"
 12656 ;; Parameters:    Size  Location     Type
 12657 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 12658 ;; Auto vars:     Size  Location     Type
 12659 ;;		None
 12660 ;; Return value:  Size  Location     Type
 12661 ;;                  1    wreg      void 
 12662 ;; Registers used:
 12663 ;;		wreg, status,2, status,0, cstack
 12664 ;; Tracked objects:
 12665 ;;		On entry : 0/0
 12666 ;;		On exit  : 0/0
 12667 ;;		Unchanged: 0/0
 12668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12672 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12673 ;;Total ram usage:        2 bytes
 12674 ;; Hardware stack levels used:    1
 12675 ;; Hardware stack levels required when called:    4
 12676 ;; This function calls:
 12677 ;;		_I2C_Master_Wait
 12678 ;; This function is called by:
 12679 ;;		_UI_main
 12680 ;;		_brake
 12681 ;;		_start
 12682 ;;		_backwards
 12683 ;;		_main
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687                           	psect	text47
 12688  003FD4                     __ptext47:
 12689                           	opt callstack 0
 12690  003FD4                     _I2C_Master_Write:
 12691                           	opt callstack 25
 12692                           
 12693                           ;I2C.c: 71:     I2C_Master_Wait();
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;incstack = 0
 12697  003FD4  ECD0  F01F         	call	_I2C_Master_Wait	;wreg free
 12698                           
 12699                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 12700  003FD8  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 12701  003FDC  0012               	return		;funcret
 12702  003FDE                     __end_of_I2C_Master_Write:
 12703                           	opt callstack 0
 12704                           
 12705 ;; *************** function _I2C_Master_Stop *****************
 12706 ;; Defined at:
 12707 ;;		line 65 in file "I2C.c"
 12708 ;; Parameters:    Size  Location     Type
 12709 ;;		None
 12710 ;; Auto vars:     Size  Location     Type
 12711 ;;		None
 12712 ;; Return value:  Size  Location     Type
 12713 ;;                  1    wreg      void 
 12714 ;; Registers used:
 12715 ;;		wreg, status,2, status,0, cstack
 12716 ;; Tracked objects:
 12717 ;;		On entry : 0/0
 12718 ;;		On exit  : 0/0
 12719 ;;		Unchanged: 0/0
 12720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12725 ;;Total ram usage:        0 bytes
 12726 ;; Hardware stack levels used:    1
 12727 ;; Hardware stack levels required when called:    4
 12728 ;; This function calls:
 12729 ;;		_I2C_Master_Wait
 12730 ;; This function is called by:
 12731 ;;		_UI_main
 12732 ;;		_brake
 12733 ;;		_start
 12734 ;;		_backwards
 12735 ;;		_main
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           
 12739                           	psect	text48
 12740  003FDE                     __ptext48:
 12741                           	opt callstack 0
 12742  003FDE                     _I2C_Master_Stop:
 12743                           	opt callstack 25
 12744                           
 12745                           ;I2C.c: 66:     I2C_Master_Wait();
 12746                           
 12747                           ;incstack = 0
 12748  003FDE  ECD0  F01F         	call	_I2C_Master_Wait	;wreg free
 12749                           
 12750                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 12751  003FE2  84C5               	bsf	4037,2,c	;volatile
 12752  003FE4  0012               	return		;funcret
 12753  003FE6                     __end_of_I2C_Master_Stop:
 12754                           	opt callstack 0
 12755                           
 12756 ;; *************** function _I2C_Master_Start *****************
 12757 ;; Defined at:
 12758 ;;		line 55 in file "I2C.c"
 12759 ;; Parameters:    Size  Location     Type
 12760 ;;		None
 12761 ;; Auto vars:     Size  Location     Type
 12762 ;;		None
 12763 ;; Return value:  Size  Location     Type
 12764 ;;                  1    wreg      void 
 12765 ;; Registers used:
 12766 ;;		wreg, status,2, status,0, cstack
 12767 ;; Tracked objects:
 12768 ;;		On entry : 0/0
 12769 ;;		On exit  : 0/0
 12770 ;;		Unchanged: 0/0
 12771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12776 ;;Total ram usage:        0 bytes
 12777 ;; Hardware stack levels used:    1
 12778 ;; Hardware stack levels required when called:    4
 12779 ;; This function calls:
 12780 ;;		_I2C_Master_Wait
 12781 ;; This function is called by:
 12782 ;;		_UI_main
 12783 ;;		_brake
 12784 ;;		_start
 12785 ;;		_backwards
 12786 ;; This function uses a non-reentrant model
 12787 ;;
 12788                           
 12789                           	psect	text49
 12790  003FE6                     __ptext49:
 12791                           	opt callstack 0
 12792  003FE6                     _I2C_Master_Start:
 12793                           	opt callstack 25
 12794                           
 12795                           ;I2C.c: 56:     I2C_Master_Wait();
 12796                           
 12797                           ;incstack = 0
 12798  003FE6  ECD0  F01F         	call	_I2C_Master_Wait	;wreg free
 12799                           
 12800                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 12801  003FEA  80C5               	bsf	4037,0,c	;volatile
 12802  003FEC  0012               	return		;funcret
 12803  003FEE                     __end_of_I2C_Master_Start:
 12804                           	opt callstack 0
 12805                           
 12806 ;; *************** function _I2C_Master_Read *****************
 12807 ;; Defined at:
 12808 ;;		line 77 in file "I2C.c"
 12809 ;; Parameters:    Size  Location     Type
 12810 ;;  ackBit          1    wreg     unsigned char 
 12811 ;; Auto vars:     Size  Location     Type
 12812 ;;  ackBit          1    1[BANK0 ] unsigned char 
 12813 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  1    wreg      unsigned char 
 12816 ;; Registers used:
 12817 ;;		wreg, status,2, status,0, cstack
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12827 ;;Total ram usage:        2 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:    4
 12830 ;; This function calls:
 12831 ;;		_I2C_Master_Wait
 12832 ;; This function is called by:
 12833 ;;		_UI_main
 12834 ;;		_brake
 12835 ;;		_main
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	text50
 12840  003ECE                     __ptext50:
 12841                           	opt callstack 0
 12842  003ECE                     _I2C_Master_Read:
 12843                           	opt callstack 25
 12844                           
 12845                           ;incstack = 0
 12846                           ;I2C_Master_Read@ackBit stored from wreg
 12847  003ECE  0100               	movlb	0	; () banked
 12848  003ED0  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 12849                           
 12850                           ;I2C.c: 78:     I2C_Master_Wait();
 12851  003ED2  ECD0  F01F         	call	_I2C_Master_Wait	;wreg free
 12852                           
 12853                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 12854  003ED6  86C5               	bsf	4037,3,c	;volatile
 12855                           
 12856                           ;I2C.c: 81:     I2C_Master_Wait();
 12857  003ED8  ECD0  F01F         	call	_I2C_Master_Wait	;wreg free
 12858                           
 12859                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 12860  003EDC  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 12861                           
 12862                           ;I2C.c: 86:     I2C_Master_Wait();
 12863  003EE0  ECD0  F01F         	call	_I2C_Master_Wait	;wreg free
 12864                           
 12865                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 12866  003EE4  0100               	movlb	0	; () banked
 12867  003EE6  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 12868  003EE8  D002               	bra	u7945
 12869  003EEA  9AC5               	bcf	4037,5,c	;volatile
 12870  003EEC  D001               	bra	u7946
 12871  003EEE                     u7945:
 12872  003EEE  8AC5               	bsf	4037,5,c	;volatile
 12873  003EF0                     u7946:
 12874                           
 12875                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 12876  003EF0  88C5               	bsf	4037,4,c	;volatile
 12877                           
 12878                           ;I2C.c: 90:     return receivedByte;
 12879  003EF2  0100               	movlb	0	; () banked
 12880  003EF4  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 12881                           
 12882                           ; BSR set to: 0
 12883  003EF6  0012               	return		;funcret
 12884  003EF8                     __end_of_I2C_Master_Read:
 12885                           	opt callstack 0
 12886                           
 12887 ;; *************** function _I2C_Master_Init *****************
 12888 ;; Defined at:
 12889 ;;		line 32 in file "I2C.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12892 ;; Auto vars:     Size  Location     Type
 12893 ;;		None
 12894 ;; Return value:  Size  Location     Type
 12895 ;;                  1    wreg      void 
 12896 ;; Registers used:
 12897 ;;		wreg, status,2, status,0, cstack
 12898 ;; Tracked objects:
 12899 ;;		On entry : 0/0
 12900 ;;		On exit  : 0/0
 12901 ;;		Unchanged: 0/0
 12902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12906 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12907 ;;Total ram usage:        8 bytes
 12908 ;; Hardware stack levels used:    1
 12909 ;; Hardware stack levels required when called:    4
 12910 ;; This function calls:
 12911 ;;		___lldiv
 12912 ;; This function is called by:
 12913 ;;		_UI_main
 12914 ;;		_start
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text51
 12919  003ADC                     __ptext51:
 12920                           	opt callstack 0
 12921  003ADC                     _I2C_Master_Init:
 12922                           	opt callstack 25
 12923                           
 12924                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;incstack = 0
 12928  003ADC  9AC6               	bcf	4038,5,c	;volatile
 12929                           
 12930                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 12931  003ADE  8694               	bsf	3988,3,c	;volatile
 12932                           
 12933                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 12934  003AE0  8894               	bsf	3988,4,c	;volatile
 12935                           
 12936                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12937  003AE2  0E80               	movlw	128
 12938  003AE4  0100               	movlb	0	; () banked
 12939  003AE6  6F80               	movwf	___lldiv@dividend& (0+255),b
 12940  003AE8  0E96               	movlw	150
 12941  003AEA  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12942  003AEC  0E98               	movlw	152
 12943  003AEE  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12944  003AF0  0E00               	movlw	0
 12945  003AF2  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12946  003AF4  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12947  003AF8  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12948  003AFC  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12949  003B00  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12950  003B04  0E02               	movlw	2
 12951  003B06                     u7935:
 12952  003B06  90D8               	bcf	status,0,c
 12953  003B08  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12954  003B0A  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12955  003B0C  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12956  003B0E  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12957  003B10  2EE8               	decfsz	wreg,f,c
 12958  003B12  D7F9               	goto	u7935
 12959  003B14  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12960  003B18  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12961  003B1C  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12962  003B20  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12963  003B24  EC47  F01C         	call	___lldiv	;wreg free
 12964  003B28  0100               	movlb	0	; () banked
 12965  003B2A  0580               	decf	?___lldiv& (0+255),w,b
 12966  003B2C  6EC8               	movwf	4040,c	;volatile
 12967                           
 12968                           ; BSR set to: 0
 12969                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 12970  003B2E  0E80               	movlw	128
 12971  003B30  6EC7               	movwf	4039,c	;volatile
 12972                           
 12973                           ; BSR set to: 0
 12974                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 12975  003B32  0E28               	movlw	40
 12976  003B34  6EC6               	movwf	4038,c	;volatile
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 12980  003B36  0E00               	movlw	0
 12981  003B38  6EC5               	movwf	4037,c	;volatile
 12982                           
 12983                           ; BSR set to: 0
 12984  003B3A  0012               	return		;funcret
 12985  003B3C                     __end_of_I2C_Master_Init:
 12986                           	opt callstack 0
 12987                           
 12988 ;; *************** function ___lldiv *****************
 12989 ;; Defined at:
 12990 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 12991 ;; Parameters:    Size  Location     Type
 12992 ;;  dividend        4    0[BANK0 ] unsigned long 
 12993 ;;  divisor         4    4[BANK0 ] unsigned long 
 12994 ;; Auto vars:     Size  Location     Type
 12995 ;;  quotient        4    8[BANK0 ] unsigned long 
 12996 ;;  counter         1   12[BANK0 ] unsigned char 
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  4    0[BANK0 ] unsigned long 
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0
 13001 ;; Tracked objects:
 13002 ;;		On entry : 0/0
 13003 ;;		On exit  : 0/0
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13006 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13007 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13009 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13010 ;;Total ram usage:       13 bytes
 13011 ;; Hardware stack levels used:    1
 13012 ;; Hardware stack levels required when called:    3
 13013 ;; This function calls:
 13014 ;;		Nothing
 13015 ;; This function is called by:
 13016 ;;		_I2C_Master_Init
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           	psect	text52
 13021  00388E                     __ptext52:
 13022                           	opt callstack 0
 13023  00388E                     ___lldiv:
 13024                           	opt callstack 25
 13025                           
 13026                           ; BSR set to: 0
 13027                           ;incstack = 0
 13028  00388E  0E00               	movlw	0
 13029  003890  0100               	movlb	0	; () banked
 13030  003892  6F88               	movwf	___lldiv@quotient& (0+255),b
 13031  003894  0E00               	movlw	0
 13032  003896  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 13033  003898  0E00               	movlw	0
 13034  00389A  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 13035  00389C  0E00               	movlw	0
 13036  00389E  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 13037                           
 13038                           ; BSR set to: 0
 13039  0038A0  5184               	movf	___lldiv@divisor& (0+255),w,b
 13040  0038A2  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13041  0038A4  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13042  0038A6  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13043  0038A8  B4D8               	btfsc	status,2,c
 13044  0038AA  D02A               	goto	l766
 13045                           
 13046                           ; BSR set to: 0
 13047  0038AC  0E01               	movlw	1
 13048  0038AE  6F8C               	movwf	___lldiv@counter& (0+255),b
 13049  0038B0  D006               	goto	l7432
 13050  0038B2                     l7430:
 13051                           
 13052                           ; BSR set to: 0
 13053  0038B2  90D8               	bcf	status,0,c
 13054  0038B4  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 13055  0038B6  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13056  0038B8  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13057  0038BA  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13058  0038BC  2B8C               	incf	___lldiv@counter& (0+255),f,b
 13059  0038BE                     l7432:
 13060                           
 13061                           ; BSR set to: 0
 13062  0038BE  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13063  0038C0  D7F8               	goto	l7430
 13064  0038C2                     u7910:
 13065                           
 13066                           ; BSR set to: 0
 13067  0038C2  90D8               	bcf	status,0,c
 13068  0038C4  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 13069  0038C6  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13070  0038C8  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13071  0038CA  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13072                           
 13073                           ; BSR set to: 0
 13074  0038CC  5184               	movf	___lldiv@divisor& (0+255),w,b
 13075  0038CE  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 13076  0038D0  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13077  0038D2  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13078  0038D4  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13079  0038D6  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13080  0038D8  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13081  0038DA  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13082  0038DC  A0D8               	btfss	status,0,c
 13083  0038DE  D009               	goto	l7442
 13084                           
 13085                           ; BSR set to: 0
 13086  0038E0  5184               	movf	___lldiv@divisor& (0+255),w,b
 13087  0038E2  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 13088  0038E4  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13089  0038E6  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13090  0038E8  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13091  0038EA  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13092  0038EC  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13093  0038EE  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13094                           
 13095                           ; BSR set to: 0
 13096  0038F0  8188               	bsf	___lldiv@quotient& (0+255),0,b
 13097  0038F2                     l7442:
 13098                           
 13099                           ; BSR set to: 0
 13100  0038F2  90D8               	bcf	status,0,c
 13101  0038F4  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13102  0038F6  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13103  0038F8  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13104  0038FA  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 13105                           
 13106                           ; BSR set to: 0
 13107  0038FC  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 13108  0038FE  D7E1               	goto	u7910
 13109  003900                     l766:
 13110                           
 13111                           ; BSR set to: 0
 13112  003900  C088  F080         	movff	___lldiv@quotient,?___lldiv
 13113  003904  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 13114  003908  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 13115  00390C  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 13116                           
 13117                           ; BSR set to: 0
 13118  003910  0012               	return		;funcret
 13119  003912                     __end_of___lldiv:
 13120                           	opt callstack 0
 13121                           
 13122 ;; *************** function _I2C_Master_RepeatedStart *****************
 13123 ;; Defined at:
 13124 ;;		line 60 in file "I2C.c"
 13125 ;; Parameters:    Size  Location     Type
 13126 ;;		None
 13127 ;; Auto vars:     Size  Location     Type
 13128 ;;		None
 13129 ;; Return value:  Size  Location     Type
 13130 ;;                  1    wreg      void 
 13131 ;; Registers used:
 13132 ;;		wreg, status,2, status,0, cstack
 13133 ;; Tracked objects:
 13134 ;;		On entry : 0/0
 13135 ;;		On exit  : 0/0
 13136 ;;		Unchanged: 0/0
 13137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13142 ;;Total ram usage:        0 bytes
 13143 ;; Hardware stack levels used:    1
 13144 ;; Hardware stack levels required when called:    4
 13145 ;; This function calls:
 13146 ;;		_I2C_Master_Wait
 13147 ;; This function is called by:
 13148 ;;		_main
 13149 ;; This function uses a non-reentrant model
 13150 ;;
 13151                           
 13152                           	psect	text53
 13153  003FEE                     __ptext53:
 13154                           	opt callstack 0
 13155  003FEE                     _I2C_Master_RepeatedStart:
 13156                           	opt callstack 26
 13157                           
 13158                           ;I2C.c: 61:     I2C_Master_Wait();
 13159                           
 13160                           ; BSR set to: 0
 13161                           ;incstack = 0
 13162  003FEE  ECD0  F01F         	call	_I2C_Master_Wait	;wreg free
 13163                           
 13164                           ;I2C.c: 62:     SSPCON2bits.RSEN = 1;
 13165  003FF2  82C5               	bsf	4037,1,c	;volatile
 13166  003FF4  0012               	return		;funcret
 13167  003FF6                     __end_of_I2C_Master_RepeatedStart:
 13168                           	opt callstack 0
 13169                           
 13170 ;; *************** function _I2C_Master_Wait *****************
 13171 ;; Defined at:
 13172 ;;		line 21 in file "I2C.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;		None
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;		None
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  1    wreg      void 
 13179 ;; Registers used:
 13180 ;;		wreg, status,2, status,0
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;Total ram usage:        1 bytes
 13191 ;; Hardware stack levels used:    1
 13192 ;; Hardware stack levels required when called:    3
 13193 ;; This function calls:
 13194 ;;		Nothing
 13195 ;; This function is called by:
 13196 ;;		_I2C_Master_Start
 13197 ;;		_I2C_Master_RepeatedStart
 13198 ;;		_I2C_Master_Stop
 13199 ;;		_I2C_Master_Write
 13200 ;;		_I2C_Master_Read
 13201 ;; This function uses a non-reentrant model
 13202 ;;
 13203                           
 13204                           	psect	text54
 13205  003FA0                     __ptext54:
 13206                           	opt callstack 0
 13207  003FA0                     _I2C_Master_Wait:
 13208                           	opt callstack 25
 13209                           
 13210                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 13211                           
 13212                           ;I2C.c: 28:     }
 13213                           
 13214                           ;incstack = 0
 13215  003FA0  B4C7               	btfsc	4039,2,c	;volatile
 13216  003FA2  D7FE               	goto	_I2C_Master_Wait
 13217  003FA4  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 13218  003FA8  0E1F               	movlw	31
 13219  003FAA  0100               	movlb	0	; () banked
 13220  003FAC  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 13221  003FAE  B4D8               	btfsc	status,2,c
 13222  003FB0  0012               	return	
 13223  003FB2  D7F6               	goto	_I2C_Master_Wait
 13224  003FB4                     __end_of_I2C_Master_Wait:
 13225                           	opt callstack 0
 13226                           
 13227 ;; *************** function _ISR *****************
 13228 ;; Defined at:
 13229 ;;		line 73 in file "main.c"
 13230 ;; Parameters:    Size  Location     Type
 13231 ;;		None
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;		None
 13234 ;; Return value:  Size  Location     Type
 13235 ;;                  1    wreg      void 
 13236 ;; Registers used:
 13237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13238 ;; Tracked objects:
 13239 ;;		On entry : 0/0
 13240 ;;		On exit  : 0/0
 13241 ;;		Unchanged: 0/0
 13242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13247 ;;Total ram usage:        2 bytes
 13248 ;; Hardware stack levels used:    1
 13249 ;; Hardware stack levels required when called:    2
 13250 ;; This function calls:
 13251 ;;		_echo
 13252 ;; This function is called by:
 13253 ;;		Interrupt level 2
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           	psect	intcode
 13258  000008                     __pintcode:
 13259                           	opt callstack 0
 13260  000008                     _ISR:
 13261                           	opt callstack 14
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;incstack = 0
 13265  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13266  00000A  ED63  F01E         	call	int_func,f	;refresh shadow registers
 13267                           
 13268                           	psect	intcode_body
 13269  003CC6                     __pintcode_body:
 13270                           	opt callstack 14
 13271  003CC6                     int_func:
 13272                           	opt callstack 14
 13273  003CC6  0006               	pop		; remove dummy address from shadow register refresh
 13274  003CC8  CFD9 F036          	movff	fsr2l,??_ISR
 13275  003CCC  CFDA F037          	movff	fsr2h,??_ISR+1
 13276                           
 13277                           ;main.c: 74:  if(RBIF == 1){
 13278  003CD0  A0F2               	btfss	4082,0,c	;volatile
 13279  003CD2  D012               	goto	i2l400
 13280                           
 13281                           ;main.c: 75:         if (sens){
 13282  003CD4  5058               	movf	_sens,w,c	;volatile
 13283  003CD6  1059               	iorwf	_sens+1,w,c	;volatile
 13284  003CD8  B4D8               	btfsc	status,2,c
 13285  003CDA  D005               	goto	i2l6272
 13286                           
 13287                           ;main.c: 76:             RBIE = 0;
 13288  003CDC  96F2               	bcf	4082,3,c	;volatile
 13289                           
 13290                           ;main.c: 77:             echo();
 13291  003CDE  ECFC  F007         	call	_echo	;wreg free
 13292                           
 13293                           ;main.c: 78:             RBIF = 0;
 13294  003CE2  90F2               	bcf	4082,0,c	;volatile
 13295                           
 13296                           ;main.c: 79:             RBIE = 1;
 13297  003CE4  86F2               	bsf	4082,3,c	;volatile
 13298  003CE6                     i2l6272:
 13299                           
 13300                           ;main.c: 81:         if (~sens){
 13301  003CE6  2858               	incf	_sens,w,c	;volatile
 13302  003CE8  E103               	bnz	i2u643_40
 13303  003CEA  2859               	incf	_sens+1,w,c	;volatile
 13304  003CEC  B4D8               	btfsc	status,2,c
 13305  003CEE  D004               	goto	i2l400
 13306  003CF0                     i2u643_40:
 13307                           
 13308                           ;main.c: 82:             key_was_pressed = 1;
 13309  003CF0  0E01               	movlw	1
 13310  003CF2  0101               	movlb	1	; () banked
 13311  003CF4  6FF6               	movwf	_key_was_pressed& (0+255),b	;volatile
 13312                           
 13313                           ; BSR set to: 1
 13314                           ;main.c: 83:             INT1IF = 0;
 13315  003CF6  90F0               	bcf	4080,0,c	;volatile
 13316  003CF8                     i2l400:
 13317  003CF8  C037  FFDA         	movff	??_ISR+1,fsr2h
 13318  003CFC  C036  FFD9         	movff	??_ISR,fsr2l
 13319  003D00  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13320  003D02  0011               	retfie		f
 13321  003D04                     __end_of_ISR:
 13322                           	opt callstack 0
 13323                           
 13324 ;; *************** function _echo *****************
 13325 ;; Defined at:
 13326 ;;		line 101 in file "main.c"
 13327 ;; Parameters:    Size  Location     Type
 13328 ;;		None
 13329 ;; Auto vars:     Size  Location     Type
 13330 ;;		None
 13331 ;; Return value:  Size  Location     Type
 13332 ;;                  1    wreg      void 
 13333 ;; Registers used:
 13334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13335 ;; Tracked objects:
 13336 ;;		On entry : 0/0
 13337 ;;		On exit  : 0/0
 13338 ;;		Unchanged: 0/0
 13339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13342 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13344 ;;Total ram usage:        4 bytes
 13345 ;; Hardware stack levels used:    1
 13346 ;; Hardware stack levels required when called:    1
 13347 ;; This function calls:
 13348 ;;		___fldiv
 13349 ;;		___fltol
 13350 ;;		___xxtofl
 13351 ;;		i2___awdiv
 13352 ;; This function is called by:
 13353 ;;		_ISR
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357                           	psect	text56
 13358  000FF8                     __ptext56:
 13359                           	opt callstack 0
 13360  000FF8                     _echo:
 13361                           	opt callstack 14
 13362                           
 13363                           ;main.c: 102:     if (b==1){
 13364                           
 13365                           ;incstack = 0
 13366  000FF8  045A               	decf	_b,w,c
 13367  000FFA  105B               	iorwf	_b+1,w,c
 13368  000FFC  A4D8               	btfss	status,2,c
 13369  000FFE  D0A2               	goto	i2l5740
 13370                           
 13371                           ;main.c: 103:         if (RB7 == 1){
 13372  001000  BE81               	btfsc	3969,7,c	;volatile
 13373                           
 13374                           ;main.c: 104:             TMR1ON = 1;
 13375  001002  80CD               	bsf	4045,0,c	;volatile
 13376                           
 13377                           ;main.c: 106:         if (RB7 == 0){
 13378                           
 13379                           ;main.c: 105:         }
 13380  001004  BE81               	btfsc	3969,7,c	;volatile
 13381  001006  D037               	goto	i2l5716
 13382                           
 13383                           ;main.c: 107:             TMR1ON = 0;
 13384  001008  90CD               	bcf	4045,0,c	;volatile
 13385                           
 13386                           ;main.c: 108:             a[0] = (TMR1L | (TMR1H<<8))/58.82;
 13387  00100A  0EAE               	movlw	174
 13388  00100C  6E13               	movwf	___fldiv@a,c
 13389  00100E  0E47               	movlw	71
 13390  001010  6E14               	movwf	___fldiv@a+1,c
 13391  001012  0E6B               	movlw	107
 13392  001014  6E15               	movwf	___fldiv@a+2,c
 13393  001016  0E42               	movlw	66
 13394  001018  6E16               	movwf	___fldiv@a+3,c
 13395  00101A  50CF               	movf	4047,w,c	;volatile
 13396  00101C  6E33               	movwf	(??_echo+1)& (0+255),c
 13397  00101E  6A32               	clrf	??_echo& (0+255),c
 13398  001020  50CE               	movf	4046,w,c	;volatile
 13399  001022  6E34               	movwf	(??_echo+2)& (0+255),c
 13400  001024  6A35               	clrf	(??_echo+3)& (0+255),c
 13401  001026  5032               	movf	??_echo,w,c
 13402  001028  1234               	iorwf	??_echo+2,f,c
 13403  00102A  5033               	movf	??_echo+1,w,c
 13404  00102C  1235               	iorwf	??_echo+3,f,c
 13405  00102E  C034  F001         	movff	??_echo+2,___xxtofl@val
 13406  001032  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13407  001036  0E00               	movlw	0
 13408  001038  BE02               	btfsc	___xxtofl@val+1,7,c
 13409  00103A  0EFF               	movlw	-1
 13410  00103C  6E03               	movwf	___xxtofl@val+2,c
 13411  00103E  6E04               	movwf	___xxtofl@val+3,c
 13412  001040  0E01               	movlw	1
 13413  001042  ECBF  F016         	call	___xxtofl
 13414  001046  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13415  00104A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13416  00104E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13417  001052  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13418  001056  EC0B  F00E         	call	___fldiv	;wreg free
 13419  00105A  C00F  F028         	movff	?___fldiv,___fltol@f1
 13420  00105E  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13421  001062  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13422  001066  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13423  00106A  EC69  F01A         	call	___fltol	;wreg free
 13424  00106E  C028  F061         	movff	?___fltol,_a
 13425  001072  C029  F062         	movff	?___fltol+1,_a+1
 13426  001076                     i2l5716:
 13427                           
 13428                           ;main.c: 112:         if (a[0]>=2 && a[0]<=200){
 13429  001076  BE62               	btfsc	_a+1,7,c
 13430  001078  D065               	goto	i2l5740
 13431  00107A  5062               	movf	_a+1,w,c
 13432  00107C  E104               	bnz	i2u563_40
 13433  00107E  0E02               	movlw	2
 13434  001080  5C61               	subwf	_a,w,c
 13435  001082  A0D8               	btfss	status,0,c
 13436  001084  D05F               	goto	i2l5740
 13437  001086                     i2u563_40:
 13438  001086  BE62               	btfsc	_a+1,7,c
 13439  001088  D006               	goto	i2u564_40
 13440  00108A  5062               	movf	_a+1,w,c
 13441  00108C  E15B               	bnz	i2l5740
 13442  00108E  0EC9               	movlw	201
 13443  001090  5C61               	subwf	_a,w,c
 13444  001092  B0D8               	btfsc	status,0,c
 13445  001094  D057               	goto	i2l5740
 13446  001096                     i2u564_40:
 13447                           
 13448                           ;main.c: 113:             if ((~sumf[0])&&(dist_final[0][0]!=0)&&(dist_final[0][1]!=0)&&
      +                          (dist_final[0][2]!=0)){
 13449  001096  0440               	decf	_sumf,w,c
 13450  001098  B4D8               	btfsc	status,2,c
 13451  00109A  D01B               	goto	i2l5732
 13452  00109C  0102               	movlb	2	; () banked
 13453  00109E  5150               	movf	_dist_final& (0+255),w,b
 13454  0010A0  1151               	iorwf	(_dist_final+1)& (0+255),w,b
 13455  0010A2  B4D8               	btfsc	status,2,c
 13456  0010A4  D016               	goto	i2l5732
 13457                           
 13458                           ; BSR set to: 2
 13459  0010A6  5152               	movf	(_dist_final+2)& (0+255),w,b
 13460  0010A8  1153               	iorwf	(_dist_final+3)& (0+255),w,b
 13461  0010AA  B4D8               	btfsc	status,2,c
 13462  0010AC  D012               	goto	i2l5732
 13463                           
 13464                           ; BSR set to: 2
 13465  0010AE  5154               	movf	(_dist_final+4)& (0+255),w,b
 13466  0010B0  1155               	iorwf	(_dist_final+5)& (0+255),w,b
 13467  0010B2  B4D8               	btfsc	status,2,c
 13468  0010B4  D00E               	goto	i2l5732
 13469                           
 13470                           ; BSR set to: 2
 13471                           ;main.c: 114:                 sum[0] = (dist_final[0][0]+dist_final[0][1]+dist_final[0][
      +                          2]);
 13472  0010B6  5154               	movf	(_dist_final+4)& (0+255),w,b
 13473  0010B8  2552               	addwf	(_dist_final+2)& (0+255),w,b
 13474  0010BA  6E32               	movwf	??_echo& (0+255),c
 13475  0010BC  5155               	movf	(_dist_final+5)& (0+255),w,b
 13476  0010BE  2153               	addwfc	(_dist_final+3)& (0+255),w,b
 13477  0010C0  6E33               	movwf	(??_echo+1)& (0+255),c
 13478  0010C2  5150               	movf	_dist_final& (0+255),w,b
 13479  0010C4  2432               	addwf	??_echo,w,c
 13480  0010C6  6E38               	movwf	_sum,c
 13481  0010C8  5151               	movf	(_dist_final+1)& (0+255),w,b
 13482  0010CA  2033               	addwfc	??_echo+1,w,c
 13483  0010CC  6E39               	movwf	_sum+1,c
 13484                           
 13485                           ; BSR set to: 2
 13486                           ;main.c: 115:                 sumf[0] = 1;
 13487  0010CE  0E01               	movlw	1
 13488  0010D0  6E40               	movwf	_sumf,c
 13489  0010D2                     i2l5732:
 13490                           
 13491                           ;main.c: 117:             if (sumf[0]){
 13492  0010D2  5040               	movf	_sumf,w,c
 13493  0010D4  B4D8               	btfsc	status,2,c
 13494  0010D6  D029               	goto	i2l5738
 13495                           
 13496                           ;main.c: 118:                 sum[0] = sum[0] - dist_final[0][meas] + a[0];
 13497  0010D8  90D8               	bcf	status,0,c
 13498  0010DA  3450               	rlcf	_meas,w,c	;volatile
 13499  0010DC  6ED9               	movwf	fsr2l,c
 13500  0010DE  3451               	rlcf	_meas+1,w,c	;volatile
 13501  0010E0  6EDA               	movwf	fsr2h,c
 13502  0010E2  0E50               	movlw	low _dist_final
 13503  0010E4  26D9               	addwf	fsr2l,f,c
 13504  0010E6  0E02               	movlw	high _dist_final
 13505  0010E8  22DA               	addwfc	fsr2h,f,c
 13506  0010EA  CFDE F032          	movff	postinc2,??_echo
 13507  0010EE  CFDD F033          	movff	postdec2,??_echo+1
 13508  0010F2  C038  F034         	movff	_sum,??_echo+2
 13509  0010F6  C039  F035         	movff	_sum+1,??_echo+3
 13510  0010FA  5032               	movf	??_echo,w,c
 13511  0010FC  5E34               	subwf	??_echo+2,f,c
 13512  0010FE  5033               	movf	??_echo+1,w,c
 13513  001100  5A35               	subwfb	??_echo+3,f,c
 13514  001102  5061               	movf	_a,w,c
 13515  001104  2434               	addwf	??_echo+2,w,c
 13516  001106  6E38               	movwf	_sum,c
 13517  001108  5062               	movf	_a+1,w,c
 13518  00110A  2035               	addwfc	??_echo+3,w,c
 13519  00110C  6E39               	movwf	_sum+1,c
 13520                           
 13521                           ;main.c: 119:                 dist_final[0][5] = (sum[0]/5);
 13522  00110E  C038  F001         	movff	_sum,i2___awdiv@dividend
 13523  001112  C039  F002         	movff	_sum+1,i2___awdiv@dividend+1
 13524  001116  0E00               	movlw	0
 13525  001118  6E04               	movwf	i2___awdiv@divisor+1,c
 13526  00111A  0E05               	movlw	5
 13527  00111C  6E03               	movwf	i2___awdiv@divisor,c
 13528  00111E  EC89  F01C         	call	i2___awdiv	;wreg free
 13529  001122  C001  F25A         	movff	?i2___awdiv,_dist_final+10
 13530  001126  C002  F25B         	movff	?i2___awdiv+1,_dist_final+11
 13531  00112A                     i2l5738:
 13532                           
 13533                           ;main.c: 121:             dist_final[0][meas] = a[0];
 13534  00112A  90D8               	bcf	status,0,c
 13535  00112C  3450               	rlcf	_meas,w,c	;volatile
 13536  00112E  6ED9               	movwf	fsr2l,c
 13537  001130  3451               	rlcf	_meas+1,w,c	;volatile
 13538  001132  6EDA               	movwf	fsr2h,c
 13539  001134  0E50               	movlw	low _dist_final
 13540  001136  26D9               	addwf	fsr2l,f,c
 13541  001138  0E02               	movlw	high _dist_final
 13542  00113A  22DA               	addwfc	fsr2h,f,c
 13543  00113C  C061  FFDE         	movff	_a,postinc2
 13544  001140  C062  FFDD         	movff	_a+1,postdec2
 13545  001144                     i2l5740:
 13546                           
 13547                           ;main.c: 124:     if (b==2){
 13548  001144  0E02               	movlw	2
 13549  001146  185A               	xorwf	_b,w,c
 13550  001148  105B               	iorwf	_b+1,w,c
 13551  00114A  A4D8               	btfss	status,2,c
 13552  00114C  D0A4               	goto	i2l5774
 13553                           
 13554                           ;main.c: 125:         if (RB6 == 1){
 13555  00114E  BC81               	btfsc	3969,6,c	;volatile
 13556                           
 13557                           ;main.c: 126:             TMR1ON = 1;
 13558  001150  80CD               	bsf	4045,0,c	;volatile
 13559                           
 13560                           ;main.c: 128:         if (RB6 == 0){
 13561                           
 13562                           ;main.c: 127:         }
 13563  001152  BC81               	btfsc	3969,6,c	;volatile
 13564  001154  D037               	goto	i2l5750
 13565                           
 13566                           ;main.c: 129:             TMR1ON = 0;
 13567  001156  90CD               	bcf	4045,0,c	;volatile
 13568                           
 13569                           ;main.c: 130:             a[1] = (TMR1L | (TMR1H<<8))/58.82;
 13570  001158  0EAE               	movlw	174
 13571  00115A  6E13               	movwf	___fldiv@a,c
 13572  00115C  0E47               	movlw	71
 13573  00115E  6E14               	movwf	___fldiv@a+1,c
 13574  001160  0E6B               	movlw	107
 13575  001162  6E15               	movwf	___fldiv@a+2,c
 13576  001164  0E42               	movlw	66
 13577  001166  6E16               	movwf	___fldiv@a+3,c
 13578  001168  50CF               	movf	4047,w,c	;volatile
 13579  00116A  6E33               	movwf	(??_echo+1)& (0+255),c
 13580  00116C  6A32               	clrf	??_echo& (0+255),c
 13581  00116E  50CE               	movf	4046,w,c	;volatile
 13582  001170  6E34               	movwf	(??_echo+2)& (0+255),c
 13583  001172  6A35               	clrf	(??_echo+3)& (0+255),c
 13584  001174  5032               	movf	??_echo,w,c
 13585  001176  1234               	iorwf	??_echo+2,f,c
 13586  001178  5033               	movf	??_echo+1,w,c
 13587  00117A  1235               	iorwf	??_echo+3,f,c
 13588  00117C  C034  F001         	movff	??_echo+2,___xxtofl@val
 13589  001180  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13590  001184  0E00               	movlw	0
 13591  001186  BE02               	btfsc	___xxtofl@val+1,7,c
 13592  001188  0EFF               	movlw	-1
 13593  00118A  6E03               	movwf	___xxtofl@val+2,c
 13594  00118C  6E04               	movwf	___xxtofl@val+3,c
 13595  00118E  0E01               	movlw	1
 13596  001190  ECBF  F016         	call	___xxtofl
 13597  001194  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13598  001198  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13599  00119C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13600  0011A0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13601  0011A4  EC0B  F00E         	call	___fldiv	;wreg free
 13602  0011A8  C00F  F028         	movff	?___fldiv,___fltol@f1
 13603  0011AC  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13604  0011B0  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13605  0011B4  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13606  0011B8  EC69  F01A         	call	___fltol	;wreg free
 13607  0011BC  C028  F063         	movff	?___fltol,_a+2
 13608  0011C0  C029  F064         	movff	?___fltol+1,_a+3
 13609  0011C4                     i2l5750:
 13610                           
 13611                           ;main.c: 133:                 if (a[1]>=2 && a[1]<=200){
 13612  0011C4  BE64               	btfsc	_a+3,7,c
 13613  0011C6  D067               	goto	i2l5774
 13614  0011C8  5064               	movf	_a+3,w,c
 13615  0011CA  E104               	bnz	i2u573_40
 13616  0011CC  0E02               	movlw	2
 13617  0011CE  5C63               	subwf	_a+2,w,c
 13618  0011D0  A0D8               	btfss	status,0,c
 13619  0011D2  D061               	goto	i2l5774
 13620  0011D4                     i2u573_40:
 13621  0011D4  BE64               	btfsc	_a+3,7,c
 13622  0011D6  D006               	goto	i2u574_40
 13623  0011D8  5064               	movf	_a+3,w,c
 13624  0011DA  E15D               	bnz	i2l5774
 13625  0011DC  0EC9               	movlw	201
 13626  0011DE  5C63               	subwf	_a+2,w,c
 13627  0011E0  B0D8               	btfsc	status,0,c
 13628  0011E2  D059               	goto	i2l5774
 13629  0011E4                     i2u574_40:
 13630                           
 13631                           ;main.c: 135:                 if ((~sumf[1])&&(dist_final[1][0]!=0)&&(dist_final[1][1]!=
      +                          0)&&(dist_final[1][2]!=0)){
 13632  0011E4  0441               	decf	_sumf+1,w,c
 13633  0011E6  B4D8               	btfsc	status,2,c
 13634  0011E8  D01B               	goto	i2l5766
 13635  0011EA  0102               	movlb	2	; () banked
 13636  0011EC  515C               	movf	(_dist_final+12)& (0+255),w,b
 13637  0011EE  115D               	iorwf	(_dist_final+13)& (0+255),w,b
 13638  0011F0  B4D8               	btfsc	status,2,c
 13639  0011F2  D016               	goto	i2l5766
 13640                           
 13641                           ; BSR set to: 2
 13642  0011F4  515E               	movf	(_dist_final+14)& (0+255),w,b
 13643  0011F6  115F               	iorwf	(_dist_final+15)& (0+255),w,b
 13644  0011F8  B4D8               	btfsc	status,2,c
 13645  0011FA  D012               	goto	i2l5766
 13646                           
 13647                           ; BSR set to: 2
 13648  0011FC  5160               	movf	(_dist_final+16)& (0+255),w,b
 13649  0011FE  1161               	iorwf	(_dist_final+17)& (0+255),w,b
 13650  001200  B4D8               	btfsc	status,2,c
 13651  001202  D00E               	goto	i2l5766
 13652                           
 13653                           ; BSR set to: 2
 13654                           ;main.c: 136:             sum[1] = (dist_final[1][0]+dist_final[1][1]+dist_final[1][2]);
 13655  001204  515E               	movf	(_dist_final+14)& (0+255),w,b
 13656  001206  255C               	addwf	(_dist_final+12)& (0+255),w,b
 13657  001208  6E32               	movwf	??_echo& (0+255),c
 13658  00120A  515F               	movf	(_dist_final+15)& (0+255),w,b
 13659  00120C  215D               	addwfc	(_dist_final+13)& (0+255),w,b
 13660  00120E  6E33               	movwf	(??_echo+1)& (0+255),c
 13661  001210  5160               	movf	(_dist_final+16)& (0+255),w,b
 13662  001212  2432               	addwf	??_echo,w,c
 13663  001214  6E3A               	movwf	_sum+2,c
 13664  001216  5161               	movf	(_dist_final+17)& (0+255),w,b
 13665  001218  2033               	addwfc	??_echo+1,w,c
 13666  00121A  6E3B               	movwf	_sum+3,c
 13667                           
 13668                           ; BSR set to: 2
 13669                           ;main.c: 137:             sumf[1] = 1;
 13670  00121C  0E01               	movlw	1
 13671  00121E  6E41               	movwf	_sumf+1,c
 13672  001220                     i2l5766:
 13673                           
 13674                           ;main.c: 139:         if (sumf[1]){
 13675  001220  5041               	movf	_sumf+1,w,c
 13676  001222  B4D8               	btfsc	status,2,c
 13677  001224  D02B               	goto	i2l5772
 13678                           
 13679                           ;main.c: 140:             sum[1] = sum[1] - dist_final[1][meas] + a[1];
 13680  001226  90D8               	bcf	status,0,c
 13681  001228  3450               	rlcf	_meas,w,c	;volatile
 13682  00122A  6ED9               	movwf	fsr2l,c
 13683  00122C  3451               	rlcf	_meas+1,w,c	;volatile
 13684  00122E  6EDA               	movwf	fsr2h,c
 13685  001230  0E5C               	movlw	low (_dist_final+12)
 13686  001232  26D9               	addwf	fsr2l,f,c
 13687  001234  0E02               	movlw	high (_dist_final+12)
 13688  001236  22DA               	addwfc	fsr2h,f,c
 13689  001238  CFDE F032          	movff	postinc2,??_echo
 13690  00123C  CFDD F033          	movff	postdec2,??_echo+1
 13691  001240  EE20  F03A         	lfsr	2,_sum+2
 13692  001244  CFDE F034          	movff	postinc2,??_echo+2
 13693  001248  CFDD F035          	movff	postdec2,??_echo+3
 13694  00124C  5032               	movf	??_echo,w,c
 13695  00124E  5E34               	subwf	??_echo+2,f,c
 13696  001250  5033               	movf	??_echo+1,w,c
 13697  001252  5A35               	subwfb	??_echo+3,f,c
 13698  001254  5063               	movf	_a+2,w,c
 13699  001256  2434               	addwf	??_echo+2,w,c
 13700  001258  6E3A               	movwf	_sum+2,c
 13701  00125A  5064               	movf	_a+3,w,c
 13702  00125C  2035               	addwfc	??_echo+3,w,c
 13703  00125E  6E3B               	movwf	_sum+3,c
 13704                           
 13705                           ;main.c: 141:             dist_final[1][5] = (sum[1]/5);
 13706  001260  C03A  F001         	movff	_sum+2,i2___awdiv@dividend
 13707  001264  C03B  F002         	movff	_sum+3,i2___awdiv@dividend+1
 13708  001268  0E00               	movlw	0
 13709  00126A  6E04               	movwf	i2___awdiv@divisor+1,c
 13710  00126C  0E05               	movlw	5
 13711  00126E  6E03               	movwf	i2___awdiv@divisor,c
 13712  001270  EC89  F01C         	call	i2___awdiv	;wreg free
 13713  001274  C001  F266         	movff	?i2___awdiv,_dist_final+22
 13714  001278  C002  F267         	movff	?i2___awdiv+1,_dist_final+23
 13715  00127C                     i2l5772:
 13716                           
 13717                           ;main.c: 143:         dist_final[1][meas] = a[1];
 13718  00127C  90D8               	bcf	status,0,c
 13719  00127E  3450               	rlcf	_meas,w,c	;volatile
 13720  001280  6ED9               	movwf	fsr2l,c
 13721  001282  3451               	rlcf	_meas+1,w,c	;volatile
 13722  001284  6EDA               	movwf	fsr2h,c
 13723  001286  0E5C               	movlw	low (_dist_final+12)
 13724  001288  26D9               	addwf	fsr2l,f,c
 13725  00128A  0E02               	movlw	high (_dist_final+12)
 13726  00128C  22DA               	addwfc	fsr2h,f,c
 13727  00128E  C063  FFDE         	movff	_a+2,postinc2
 13728  001292  C064  FFDD         	movff	_a+3,postdec2
 13729  001296                     i2l5774:
 13730                           
 13731                           ;main.c: 146:     if (b==3){
 13732  001296  0E03               	movlw	3
 13733  001298  185A               	xorwf	_b,w,c
 13734  00129A  105B               	iorwf	_b+1,w,c
 13735  00129C  A4D8               	btfss	status,2,c
 13736  00129E  D0A4               	goto	i2l5808
 13737                           
 13738                           ;main.c: 147:         if (RB5 == 1){
 13739  0012A0  BA81               	btfsc	3969,5,c	;volatile
 13740                           
 13741                           ;main.c: 148:             TMR1ON = 1;
 13742  0012A2  80CD               	bsf	4045,0,c	;volatile
 13743                           
 13744                           ;main.c: 150:         if (RB5 == 0){
 13745                           
 13746                           ;main.c: 149:         }
 13747  0012A4  BA81               	btfsc	3969,5,c	;volatile
 13748  0012A6  D037               	goto	i2l5784
 13749                           
 13750                           ;main.c: 151:             TMR1ON = 0;
 13751  0012A8  90CD               	bcf	4045,0,c	;volatile
 13752                           
 13753                           ;main.c: 152:             a[2] = (TMR1L | (TMR1H<<8))/58.82;
 13754  0012AA  0EAE               	movlw	174
 13755  0012AC  6E13               	movwf	___fldiv@a,c
 13756  0012AE  0E47               	movlw	71
 13757  0012B0  6E14               	movwf	___fldiv@a+1,c
 13758  0012B2  0E6B               	movlw	107
 13759  0012B4  6E15               	movwf	___fldiv@a+2,c
 13760  0012B6  0E42               	movlw	66
 13761  0012B8  6E16               	movwf	___fldiv@a+3,c
 13762  0012BA  50CF               	movf	4047,w,c	;volatile
 13763  0012BC  6E33               	movwf	(??_echo+1)& (0+255),c
 13764  0012BE  6A32               	clrf	??_echo& (0+255),c
 13765  0012C0  50CE               	movf	4046,w,c	;volatile
 13766  0012C2  6E34               	movwf	(??_echo+2)& (0+255),c
 13767  0012C4  6A35               	clrf	(??_echo+3)& (0+255),c
 13768  0012C6  5032               	movf	??_echo,w,c
 13769  0012C8  1234               	iorwf	??_echo+2,f,c
 13770  0012CA  5033               	movf	??_echo+1,w,c
 13771  0012CC  1235               	iorwf	??_echo+3,f,c
 13772  0012CE  C034  F001         	movff	??_echo+2,___xxtofl@val
 13773  0012D2  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13774  0012D6  0E00               	movlw	0
 13775  0012D8  BE02               	btfsc	___xxtofl@val+1,7,c
 13776  0012DA  0EFF               	movlw	-1
 13777  0012DC  6E03               	movwf	___xxtofl@val+2,c
 13778  0012DE  6E04               	movwf	___xxtofl@val+3,c
 13779  0012E0  0E01               	movlw	1
 13780  0012E2  ECBF  F016         	call	___xxtofl
 13781  0012E6  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13782  0012EA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13783  0012EE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13784  0012F2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13785  0012F6  EC0B  F00E         	call	___fldiv	;wreg free
 13786  0012FA  C00F  F028         	movff	?___fldiv,___fltol@f1
 13787  0012FE  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13788  001302  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13789  001306  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13790  00130A  EC69  F01A         	call	___fltol	;wreg free
 13791  00130E  C028  F065         	movff	?___fltol,_a+4
 13792  001312  C029  F066         	movff	?___fltol+1,_a+5
 13793  001316                     i2l5784:
 13794                           
 13795                           ;main.c: 155:                 if (a[2]>=2 && a[2]<=200){
 13796  001316  BE66               	btfsc	_a+5,7,c
 13797  001318  D067               	goto	i2l5808
 13798  00131A  5066               	movf	_a+5,w,c
 13799  00131C  E104               	bnz	i2u583_40
 13800  00131E  0E02               	movlw	2
 13801  001320  5C65               	subwf	_a+4,w,c
 13802  001322  A0D8               	btfss	status,0,c
 13803  001324  D061               	goto	i2l5808
 13804  001326                     i2u583_40:
 13805  001326  BE66               	btfsc	_a+5,7,c
 13806  001328  D006               	goto	i2u584_40
 13807  00132A  5066               	movf	_a+5,w,c
 13808  00132C  E15D               	bnz	i2l5808
 13809  00132E  0EC9               	movlw	201
 13810  001330  5C65               	subwf	_a+4,w,c
 13811  001332  B0D8               	btfsc	status,0,c
 13812  001334  D059               	goto	i2l5808
 13813  001336                     i2u584_40:
 13814                           
 13815                           ;main.c: 157:                 if ((~sumf[2])&&(dist_final[2][0]!=0)&&(dist_final[2][1]!=
      +                          0)&&(dist_final[2][2]!=0)){
 13816  001336  0442               	decf	_sumf+2,w,c
 13817  001338  B4D8               	btfsc	status,2,c
 13818  00133A  D01B               	goto	i2l5800
 13819  00133C  0102               	movlb	2	; () banked
 13820  00133E  5168               	movf	(_dist_final+24)& (0+255),w,b
 13821  001340  1169               	iorwf	(_dist_final+25)& (0+255),w,b
 13822  001342  B4D8               	btfsc	status,2,c
 13823  001344  D016               	goto	i2l5800
 13824                           
 13825                           ; BSR set to: 2
 13826  001346  516A               	movf	(_dist_final+26)& (0+255),w,b
 13827  001348  116B               	iorwf	(_dist_final+27)& (0+255),w,b
 13828  00134A  B4D8               	btfsc	status,2,c
 13829  00134C  D012               	goto	i2l5800
 13830                           
 13831                           ; BSR set to: 2
 13832  00134E  516C               	movf	(_dist_final+28)& (0+255),w,b
 13833  001350  116D               	iorwf	(_dist_final+29)& (0+255),w,b
 13834  001352  B4D8               	btfsc	status,2,c
 13835  001354  D00E               	goto	i2l5800
 13836                           
 13837                           ; BSR set to: 2
 13838                           ;main.c: 158:             sum[2] = (dist_final[2][0]+dist_final[2][1]+dist_final[2][2]);
 13839  001356  516A               	movf	(_dist_final+26)& (0+255),w,b
 13840  001358  2568               	addwf	(_dist_final+24)& (0+255),w,b
 13841  00135A  6E32               	movwf	??_echo& (0+255),c
 13842  00135C  516B               	movf	(_dist_final+27)& (0+255),w,b
 13843  00135E  2169               	addwfc	(_dist_final+25)& (0+255),w,b
 13844  001360  6E33               	movwf	(??_echo+1)& (0+255),c
 13845  001362  516C               	movf	(_dist_final+28)& (0+255),w,b
 13846  001364  2432               	addwf	??_echo,w,c
 13847  001366  6E3C               	movwf	_sum+4,c
 13848  001368  516D               	movf	(_dist_final+29)& (0+255),w,b
 13849  00136A  2033               	addwfc	??_echo+1,w,c
 13850  00136C  6E3D               	movwf	_sum+5,c
 13851                           
 13852                           ; BSR set to: 2
 13853                           ;main.c: 159:             sumf[2] = 1;
 13854  00136E  0E01               	movlw	1
 13855  001370  6E42               	movwf	_sumf+2,c
 13856  001372                     i2l5800:
 13857                           
 13858                           ;main.c: 161:         if (sumf[2]){
 13859  001372  5042               	movf	_sumf+2,w,c
 13860  001374  B4D8               	btfsc	status,2,c
 13861  001376  D02B               	goto	i2l5806
 13862                           
 13863                           ;main.c: 162:             sum[2] = sum[2] - dist_final[2][meas] + a[2];
 13864  001378  90D8               	bcf	status,0,c
 13865  00137A  3450               	rlcf	_meas,w,c	;volatile
 13866  00137C  6ED9               	movwf	fsr2l,c
 13867  00137E  3451               	rlcf	_meas+1,w,c	;volatile
 13868  001380  6EDA               	movwf	fsr2h,c
 13869  001382  0E68               	movlw	low (_dist_final+24)
 13870  001384  26D9               	addwf	fsr2l,f,c
 13871  001386  0E02               	movlw	high (_dist_final+24)
 13872  001388  22DA               	addwfc	fsr2h,f,c
 13873  00138A  CFDE F032          	movff	postinc2,??_echo
 13874  00138E  CFDD F033          	movff	postdec2,??_echo+1
 13875  001392  EE20  F03C         	lfsr	2,_sum+4
 13876  001396  CFDE F034          	movff	postinc2,??_echo+2
 13877  00139A  CFDD F035          	movff	postdec2,??_echo+3
 13878  00139E  5032               	movf	??_echo,w,c
 13879  0013A0  5E34               	subwf	??_echo+2,f,c
 13880  0013A2  5033               	movf	??_echo+1,w,c
 13881  0013A4  5A35               	subwfb	??_echo+3,f,c
 13882  0013A6  5065               	movf	_a+4,w,c
 13883  0013A8  2434               	addwf	??_echo+2,w,c
 13884  0013AA  6E3C               	movwf	_sum+4,c
 13885  0013AC  5066               	movf	_a+5,w,c
 13886  0013AE  2035               	addwfc	??_echo+3,w,c
 13887  0013B0  6E3D               	movwf	_sum+5,c
 13888                           
 13889                           ;main.c: 163:             dist_final[2][5] = (sum[2]/5);
 13890  0013B2  C03C  F001         	movff	_sum+4,i2___awdiv@dividend
 13891  0013B6  C03D  F002         	movff	_sum+5,i2___awdiv@dividend+1
 13892  0013BA  0E00               	movlw	0
 13893  0013BC  6E04               	movwf	i2___awdiv@divisor+1,c
 13894  0013BE  0E05               	movlw	5
 13895  0013C0  6E03               	movwf	i2___awdiv@divisor,c
 13896  0013C2  EC89  F01C         	call	i2___awdiv	;wreg free
 13897  0013C6  C001  F272         	movff	?i2___awdiv,_dist_final+34
 13898  0013CA  C002  F273         	movff	?i2___awdiv+1,_dist_final+35
 13899  0013CE                     i2l5806:
 13900                           
 13901                           ;main.c: 165:         dist_final[2][meas] = a[2];
 13902  0013CE  90D8               	bcf	status,0,c
 13903  0013D0  3450               	rlcf	_meas,w,c	;volatile
 13904  0013D2  6ED9               	movwf	fsr2l,c
 13905  0013D4  3451               	rlcf	_meas+1,w,c	;volatile
 13906  0013D6  6EDA               	movwf	fsr2h,c
 13907  0013D8  0E68               	movlw	low (_dist_final+24)
 13908  0013DA  26D9               	addwf	fsr2l,f,c
 13909  0013DC  0E02               	movlw	high (_dist_final+24)
 13910  0013DE  22DA               	addwfc	fsr2h,f,c
 13911  0013E0  C065  FFDE         	movff	_a+4,postinc2
 13912  0013E4  C066  FFDD         	movff	_a+5,postdec2
 13913  0013E8                     i2l5808:
 13914                           
 13915                           ;main.c: 168:     if (b==4){
 13916  0013E8  0E04               	movlw	4
 13917  0013EA  185A               	xorwf	_b,w,c
 13918  0013EC  105B               	iorwf	_b+1,w,c
 13919  0013EE  A4D8               	btfss	status,2,c
 13920  0013F0  0012               	return	
 13921                           
 13922                           ;main.c: 169:         if (RB4 == 1){
 13923  0013F2  B881               	btfsc	3969,4,c	;volatile
 13924                           
 13925                           ;main.c: 170:             TMR1ON = 1;
 13926  0013F4  80CD               	bsf	4045,0,c	;volatile
 13927                           
 13928                           ;main.c: 172:         if (RB4 == 0){
 13929                           
 13930                           ;main.c: 171:         }
 13931  0013F6  B881               	btfsc	3969,4,c	;volatile
 13932  0013F8  D037               	goto	i2l5818
 13933                           
 13934                           ;main.c: 173:             TMR1ON = 0;
 13935  0013FA  90CD               	bcf	4045,0,c	;volatile
 13936                           
 13937                           ;main.c: 174:             a[3] = (TMR1L | (TMR1H<<8))/58.82;
 13938  0013FC  0EAE               	movlw	174
 13939  0013FE  6E13               	movwf	___fldiv@a,c
 13940  001400  0E47               	movlw	71
 13941  001402  6E14               	movwf	___fldiv@a+1,c
 13942  001404  0E6B               	movlw	107
 13943  001406  6E15               	movwf	___fldiv@a+2,c
 13944  001408  0E42               	movlw	66
 13945  00140A  6E16               	movwf	___fldiv@a+3,c
 13946  00140C  50CF               	movf	4047,w,c	;volatile
 13947  00140E  6E33               	movwf	(??_echo+1)& (0+255),c
 13948  001410  6A32               	clrf	??_echo& (0+255),c
 13949  001412  50CE               	movf	4046,w,c	;volatile
 13950  001414  6E34               	movwf	(??_echo+2)& (0+255),c
 13951  001416  6A35               	clrf	(??_echo+3)& (0+255),c
 13952  001418  5032               	movf	??_echo,w,c
 13953  00141A  1234               	iorwf	??_echo+2,f,c
 13954  00141C  5033               	movf	??_echo+1,w,c
 13955  00141E  1235               	iorwf	??_echo+3,f,c
 13956  001420  C034  F001         	movff	??_echo+2,___xxtofl@val
 13957  001424  C035  F002         	movff	??_echo+3,___xxtofl@val+1
 13958  001428  0E00               	movlw	0
 13959  00142A  BE02               	btfsc	___xxtofl@val+1,7,c
 13960  00142C  0EFF               	movlw	-1
 13961  00142E  6E03               	movwf	___xxtofl@val+2,c
 13962  001430  6E04               	movwf	___xxtofl@val+3,c
 13963  001432  0E01               	movlw	1
 13964  001434  ECBF  F016         	call	___xxtofl
 13965  001438  C001  F00F         	movff	?___xxtofl,___fldiv@b
 13966  00143C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
 13967  001440  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
 13968  001444  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
 13969  001448  EC0B  F00E         	call	___fldiv	;wreg free
 13970  00144C  C00F  F028         	movff	?___fldiv,___fltol@f1
 13971  001450  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
 13972  001454  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
 13973  001458  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
 13974  00145C  EC69  F01A         	call	___fltol	;wreg free
 13975  001460  C028  F067         	movff	?___fltol,_a+6
 13976  001464  C029  F068         	movff	?___fltol+1,_a+7
 13977  001468                     i2l5818:
 13978                           
 13979                           ;main.c: 177:                 if (a[3]>=2 && a[3]<=200){
 13980  001468  BE68               	btfsc	_a+7,7,c
 13981  00146A  0012               	return	
 13982  00146C  5068               	movf	_a+7,w,c
 13983  00146E  E104               	bnz	i2u593_40
 13984  001470  0E02               	movlw	2
 13985  001472  5C67               	subwf	_a+6,w,c
 13986  001474  A0D8               	btfss	status,0,c
 13987  001476  0012               	return	
 13988  001478                     i2u593_40:
 13989  001478  BE68               	btfsc	_a+7,7,c
 13990  00147A  D006               	goto	i2u594_40
 13991  00147C  5068               	movf	_a+7,w,c
 13992  00147E  E15D               	bnz	i2l427
 13993  001480  0EC9               	movlw	201
 13994  001482  5C67               	subwf	_a+6,w,c
 13995  001484  B0D8               	btfsc	status,0,c
 13996  001486  0012               	return	
 13997  001488                     i2u594_40:
 13998                           
 13999                           ;main.c: 179:                 if ((~sumf[3])&&(dist_final[3][0]!=0)&&(dist_final[3][1]!=
      +                          0)&&(dist_final[3][2]!=0)){
 14000  001488  0443               	decf	_sumf+3,w,c
 14001  00148A  B4D8               	btfsc	status,2,c
 14002  00148C  D01B               	goto	i2l5834
 14003  00148E  0102               	movlb	2	; () banked
 14004  001490  5174               	movf	(_dist_final+36)& (0+255),w,b
 14005  001492  1175               	iorwf	(_dist_final+37)& (0+255),w,b
 14006  001494  B4D8               	btfsc	status,2,c
 14007  001496  D016               	goto	i2l5834
 14008                           
 14009                           ; BSR set to: 2
 14010  001498  5176               	movf	(_dist_final+38)& (0+255),w,b
 14011  00149A  1177               	iorwf	(_dist_final+39)& (0+255),w,b
 14012  00149C  B4D8               	btfsc	status,2,c
 14013  00149E  D012               	goto	i2l5834
 14014                           
 14015                           ; BSR set to: 2
 14016  0014A0  5178               	movf	(_dist_final+40)& (0+255),w,b
 14017  0014A2  1179               	iorwf	(_dist_final+41)& (0+255),w,b
 14018  0014A4  B4D8               	btfsc	status,2,c
 14019  0014A6  D00E               	goto	i2l5834
 14020                           
 14021                           ; BSR set to: 2
 14022                           ;main.c: 180:             sum[3] = (dist_final[3][0]+dist_final[3][1]+dist_final[3][2]);
 14023  0014A8  5176               	movf	(_dist_final+38)& (0+255),w,b
 14024  0014AA  2574               	addwf	(_dist_final+36)& (0+255),w,b
 14025  0014AC  6E32               	movwf	??_echo& (0+255),c
 14026  0014AE  5177               	movf	(_dist_final+39)& (0+255),w,b
 14027  0014B0  2175               	addwfc	(_dist_final+37)& (0+255),w,b
 14028  0014B2  6E33               	movwf	(??_echo+1)& (0+255),c
 14029  0014B4  5178               	movf	(_dist_final+40)& (0+255),w,b
 14030  0014B6  2432               	addwf	??_echo,w,c
 14031  0014B8  6E3E               	movwf	_sum+6,c
 14032  0014BA  5179               	movf	(_dist_final+41)& (0+255),w,b
 14033  0014BC  2033               	addwfc	??_echo+1,w,c
 14034  0014BE  6E3F               	movwf	_sum+7,c
 14035                           
 14036                           ; BSR set to: 2
 14037                           ;main.c: 181:             sumf[3] = 1;
 14038  0014C0  0E01               	movlw	1
 14039  0014C2  6E43               	movwf	_sumf+3,c
 14040  0014C4                     i2l5834:
 14041                           
 14042                           ;main.c: 183:         if (sumf[3]){
 14043  0014C4  5043               	movf	_sumf+3,w,c
 14044  0014C6  B4D8               	btfsc	status,2,c
 14045  0014C8  D02B               	goto	i2l5840
 14046                           
 14047                           ;main.c: 184:             sum[3] = sum[3] - dist_final[3][meas] + a[3];
 14048  0014CA  90D8               	bcf	status,0,c
 14049  0014CC  3450               	rlcf	_meas,w,c	;volatile
 14050  0014CE  6ED9               	movwf	fsr2l,c
 14051  0014D0  3451               	rlcf	_meas+1,w,c	;volatile
 14052  0014D2  6EDA               	movwf	fsr2h,c
 14053  0014D4  0E74               	movlw	low (_dist_final+36)
 14054  0014D6  26D9               	addwf	fsr2l,f,c
 14055  0014D8  0E02               	movlw	high (_dist_final+36)
 14056  0014DA  22DA               	addwfc	fsr2h,f,c
 14057  0014DC  CFDE F032          	movff	postinc2,??_echo
 14058  0014E0  CFDD F033          	movff	postdec2,??_echo+1
 14059  0014E4  EE20  F03E         	lfsr	2,_sum+6
 14060  0014E8  CFDE F034          	movff	postinc2,??_echo+2
 14061  0014EC  CFDD F035          	movff	postdec2,??_echo+3
 14062  0014F0  5032               	movf	??_echo,w,c
 14063  0014F2  5E34               	subwf	??_echo+2,f,c
 14064  0014F4  5033               	movf	??_echo+1,w,c
 14065  0014F6  5A35               	subwfb	??_echo+3,f,c
 14066  0014F8  5067               	movf	_a+6,w,c
 14067  0014FA  2434               	addwf	??_echo+2,w,c
 14068  0014FC  6E3E               	movwf	_sum+6,c
 14069  0014FE  5068               	movf	_a+7,w,c
 14070  001500  2035               	addwfc	??_echo+3,w,c
 14071  001502  6E3F               	movwf	_sum+7,c
 14072                           
 14073                           ;main.c: 185:             dist_final[3][5] = (sum[3]/5);
 14074  001504  C03E  F001         	movff	_sum+6,i2___awdiv@dividend
 14075  001508  C03F  F002         	movff	_sum+7,i2___awdiv@dividend+1
 14076  00150C  0E00               	movlw	0
 14077  00150E  6E04               	movwf	i2___awdiv@divisor+1,c
 14078  001510  0E05               	movlw	5
 14079  001512  6E03               	movwf	i2___awdiv@divisor,c
 14080  001514  EC89  F01C         	call	i2___awdiv	;wreg free
 14081  001518  C001  F27E         	movff	?i2___awdiv,_dist_final+46
 14082  00151C  C002  F27F         	movff	?i2___awdiv+1,_dist_final+47
 14083  001520                     i2l5840:
 14084                           
 14085                           ;main.c: 187:         dist_final[3][meas] = a[3];
 14086  001520  90D8               	bcf	status,0,c
 14087  001522  3450               	rlcf	_meas,w,c	;volatile
 14088  001524  6ED9               	movwf	fsr2l,c
 14089  001526  3451               	rlcf	_meas+1,w,c	;volatile
 14090  001528  6EDA               	movwf	fsr2h,c
 14091  00152A  0E74               	movlw	low (_dist_final+36)
 14092  00152C  26D9               	addwf	fsr2l,f,c
 14093  00152E  0E02               	movlw	high (_dist_final+36)
 14094  001530  22DA               	addwfc	fsr2h,f,c
 14095  001532  C067  FFDE         	movff	_a+6,postinc2
 14096  001536  C068  FFDD         	movff	_a+7,postdec2
 14097  00153A                     i2l427:
 14098  00153A  0012               	return		;funcret
 14099  00153C                     __end_of_echo:
 14100                           	opt callstack 0
 14101                           
 14102 ;; *************** function i2___awdiv *****************
 14103 ;; Defined at:
 14104 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;  dividend        2    0[COMRAM] int 
 14107 ;;  divisor         2    2[COMRAM] int 
 14108 ;; Auto vars:     Size  Location     Type
 14109 ;;  __awdiv         2    6[COMRAM] int 
 14110 ;;  __awdiv         1    5[COMRAM] unsigned char 
 14111 ;;  __awdiv         1    4[COMRAM] unsigned char 
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  2    0[COMRAM] int 
 14114 ;; Registers used:
 14115 ;;		wreg, status,2, status,0
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14124 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14125 ;;Total ram usage:        8 bytes
 14126 ;; Hardware stack levels used:    1
 14127 ;; This function calls:
 14128 ;;		Nothing
 14129 ;; This function is called by:
 14130 ;;		_echo
 14131 ;; This function uses a non-reentrant model
 14132 ;;
 14133                           
 14134                           	psect	text57
 14135  003912                     __ptext57:
 14136                           	opt callstack 0
 14137  003912                     i2___awdiv:
 14138                           	opt callstack 14
 14139                           
 14140                           ;incstack = 0
 14141  003912  0E00               	movlw	0
 14142  003914  6E06               	movwf	i2___awdiv@sign,c
 14143  003916  AE04               	btfss	i2___awdiv@divisor+1,7,c
 14144  003918  D006               	goto	i2l5568
 14145  00391A  6C03               	negf	i2___awdiv@divisor,c
 14146  00391C  1E04               	comf	i2___awdiv@divisor+1,f,c
 14147  00391E  B0D8               	btfsc	status,0,c
 14148  003920  2A04               	incf	i2___awdiv@divisor+1,f,c
 14149  003922  0E01               	movlw	1
 14150  003924  6E06               	movwf	i2___awdiv@sign,c
 14151  003926                     i2l5568:
 14152  003926  AE02               	btfss	i2___awdiv@dividend+1,7,c
 14153  003928  D006               	goto	i2l5574
 14154  00392A  6C01               	negf	i2___awdiv@dividend,c
 14155  00392C  1E02               	comf	i2___awdiv@dividend+1,f,c
 14156  00392E  B0D8               	btfsc	status,0,c
 14157  003930  2A02               	incf	i2___awdiv@dividend+1,f,c
 14158  003932  0E01               	movlw	1
 14159  003934  1A06               	xorwf	i2___awdiv@sign,f,c
 14160  003936                     i2l5574:
 14161  003936  0E00               	movlw	0
 14162  003938  6E08               	movwf	i2___awdiv@quotient+1,c
 14163  00393A  0E00               	movlw	0
 14164  00393C  6E07               	movwf	i2___awdiv@quotient,c
 14165  00393E  5003               	movf	i2___awdiv@divisor,w,c
 14166  003940  1004               	iorwf	i2___awdiv@divisor+1,w,c
 14167  003942  B4D8               	btfsc	status,2,c
 14168  003944  D01C               	goto	i2l5596
 14169  003946  0E01               	movlw	1
 14170  003948  6E05               	movwf	i2___awdiv@counter,c
 14171  00394A  D004               	goto	i2l5582
 14172  00394C                     i2l5580:
 14173  00394C  90D8               	bcf	status,0,c
 14174  00394E  3603               	rlcf	i2___awdiv@divisor,f,c
 14175  003950  3604               	rlcf	i2___awdiv@divisor+1,f,c
 14176  003952  2A05               	incf	i2___awdiv@counter,f,c
 14177  003954                     i2l5582:
 14178  003954  AE04               	btfss	i2___awdiv@divisor+1,7,c
 14179  003956  D7FA               	goto	i2l5580
 14180  003958                     i2u554_40:
 14181  003958  90D8               	bcf	status,0,c
 14182  00395A  3607               	rlcf	i2___awdiv@quotient,f,c
 14183  00395C  3608               	rlcf	i2___awdiv@quotient+1,f,c
 14184  00395E  5003               	movf	i2___awdiv@divisor,w,c
 14185  003960  5C01               	subwf	i2___awdiv@dividend,w,c
 14186  003962  5004               	movf	i2___awdiv@divisor+1,w,c
 14187  003964  5802               	subwfb	i2___awdiv@dividend+1,w,c
 14188  003966  A0D8               	btfss	status,0,c
 14189  003968  D005               	goto	i2l5592
 14190  00396A  5003               	movf	i2___awdiv@divisor,w,c
 14191  00396C  5E01               	subwf	i2___awdiv@dividend,f,c
 14192  00396E  5004               	movf	i2___awdiv@divisor+1,w,c
 14193  003970  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 14194  003972  8007               	bsf	i2___awdiv@quotient,0,c
 14195  003974                     i2l5592:
 14196  003974  90D8               	bcf	status,0,c
 14197  003976  3204               	rrcf	i2___awdiv@divisor+1,f,c
 14198  003978  3203               	rrcf	i2___awdiv@divisor,f,c
 14199  00397A  2E05               	decfsz	i2___awdiv@counter,f,c
 14200  00397C  D7ED               	goto	i2u554_40
 14201  00397E                     i2l5596:
 14202  00397E  5006               	movf	i2___awdiv@sign,w,c
 14203  003980  B4D8               	btfsc	status,2,c
 14204  003982  D004               	goto	i2l5600
 14205  003984  6C07               	negf	i2___awdiv@quotient,c
 14206  003986  1E08               	comf	i2___awdiv@quotient+1,f,c
 14207  003988  B0D8               	btfsc	status,0,c
 14208  00398A  2A08               	incf	i2___awdiv@quotient+1,f,c
 14209  00398C                     i2l5600:
 14210  00398C  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 14211  003990  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 14212  003994  0012               	return		;funcret
 14213  003996                     __end_ofi2___awdiv:
 14214                           	opt callstack 0
 14215                           
 14216 ;; *************** function ___xxtofl *****************
 14217 ;; Defined at:
 14218 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 14219 ;; Parameters:    Size  Location     Type
 14220 ;;  sign            1    wreg     unsigned char 
 14221 ;;  val             4    0[COMRAM] long 
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;  sign            1    8[COMRAM] unsigned char 
 14224 ;;  arg             4   10[COMRAM] unsigned long 
 14225 ;;  exp             1    9[COMRAM] unsigned char 
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  4    0[COMRAM] unsigned char 
 14228 ;; Registers used:
 14229 ;;		wreg, status,2, status,0
 14230 ;; Tracked objects:
 14231 ;;		On entry : 0/0
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14236 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14238 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14239 ;;Total ram usage:       14 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; This function calls:
 14242 ;;		Nothing
 14243 ;; This function is called by:
 14244 ;;		_echo
 14245 ;; This function uses a non-reentrant model
 14246 ;;
 14247                           
 14248                           	psect	text58
 14249  002D7E                     __ptext58:
 14250                           	opt callstack 0
 14251  002D7E                     ___xxtofl:
 14252                           	opt callstack 14
 14253                           
 14254                           ;incstack = 0
 14255                           ;___xxtofl@sign stored from wreg
 14256  002D7E  6E09               	movwf	___xxtofl@sign,c
 14257  002D80  5009               	movf	___xxtofl@sign,w,c
 14258  002D82  A4D8               	btfss	status,2,c
 14259  002D84  AE04               	btfss	___xxtofl@val+3,7,c
 14260  002D86  D01A               	goto	i2l1394
 14261  002D88  C001  F005         	movff	___xxtofl@val,??___xxtofl
 14262  002D8C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 14263  002D90  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 14264  002D94  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 14265  002D98  1E05               	comf	??___xxtofl,f,c
 14266  002D9A  1E06               	comf	??___xxtofl+1,f,c
 14267  002D9C  1E07               	comf	??___xxtofl+2,f,c
 14268  002D9E  1E08               	comf	??___xxtofl+3,f,c
 14269  002DA0  2A05               	incf	??___xxtofl,f,c
 14270  002DA2  0E00               	movlw	0
 14271  002DA4  2206               	addwfc	??___xxtofl+1,f,c
 14272  002DA6  2207               	addwfc	??___xxtofl+2,f,c
 14273  002DA8  2208               	addwfc	??___xxtofl+3,f,c
 14274  002DAA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14275  002DAE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14276  002DB2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14277  002DB6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14278  002DBA  D008               	goto	i2l5520
 14279  002DBC                     i2l1394:
 14280  002DBC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14281  002DC0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14282  002DC4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14283  002DC8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14284  002DCC                     i2l5520:
 14285  002DCC  5001               	movf	___xxtofl@val,w,c
 14286  002DCE  1002               	iorwf	___xxtofl@val+1,w,c
 14287  002DD0  1003               	iorwf	___xxtofl@val+2,w,c
 14288  002DD2  1004               	iorwf	___xxtofl@val+3,w,c
 14289  002DD4  A4D8               	btfss	status,2,c
 14290  002DD6  D009               	goto	i2l5526
 14291  002DD8  0E00               	movlw	0
 14292  002DDA  6E01               	movwf	?___xxtofl,c
 14293  002DDC  0E00               	movlw	0
 14294  002DDE  6E02               	movwf	?___xxtofl+1,c
 14295  002DE0  0E00               	movlw	0
 14296  002DE2  6E03               	movwf	?___xxtofl+2,c
 14297  002DE4  0E00               	movlw	0
 14298  002DE6  6E04               	movwf	?___xxtofl+3,c
 14299  002DE8  0012               	return	
 14300  002DEA                     i2l5526:
 14301  002DEA  0E96               	movlw	150
 14302  002DEC  6E0A               	movwf	___xxtofl@exp,c
 14303  002DEE  D006               	goto	i2l5530
 14304  002DF0                     i2l5528:
 14305  002DF0  2A0A               	incf	___xxtofl@exp,f,c
 14306  002DF2  90D8               	bcf	status,0,c
 14307  002DF4  320E               	rrcf	___xxtofl@arg+3,f,c
 14308  002DF6  320D               	rrcf	___xxtofl@arg+2,f,c
 14309  002DF8  320C               	rrcf	___xxtofl@arg+1,f,c
 14310  002DFA  320B               	rrcf	___xxtofl@arg,f,c
 14311  002DFC                     i2l5530:
 14312  002DFC  0E00               	movlw	0
 14313  002DFE  140B               	andwf	___xxtofl@arg,w,c
 14314  002E00  6E05               	movwf	??___xxtofl& (0+255),c
 14315  002E02  0E00               	movlw	0
 14316  002E04  140C               	andwf	___xxtofl@arg+1,w,c
 14317  002E06  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14318  002E08  0E00               	movlw	0
 14319  002E0A  140D               	andwf	___xxtofl@arg+2,w,c
 14320  002E0C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14321  002E0E  0EFE               	movlw	254
 14322  002E10  140E               	andwf	___xxtofl@arg+3,w,c
 14323  002E12  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14324  002E14  5005               	movf	??___xxtofl,w,c
 14325  002E16  1006               	iorwf	??___xxtofl+1,w,c
 14326  002E18  1007               	iorwf	??___xxtofl+2,w,c
 14327  002E1A  1008               	iorwf	??___xxtofl+3,w,c
 14328  002E1C  B4D8               	btfsc	status,2,c
 14329  002E1E  D00D               	goto	i2l1401
 14330  002E20  D7E7               	goto	i2l5528
 14331  002E22                     i2l5532:
 14332  002E22  2A0A               	incf	___xxtofl@exp,f,c
 14333  002E24  0E01               	movlw	1
 14334  002E26  260B               	addwf	___xxtofl@arg,f,c
 14335  002E28  0E00               	movlw	0
 14336  002E2A  220C               	addwfc	___xxtofl@arg+1,f,c
 14337  002E2C  220D               	addwfc	___xxtofl@arg+2,f,c
 14338  002E2E  220E               	addwfc	___xxtofl@arg+3,f,c
 14339  002E30  90D8               	bcf	status,0,c
 14340  002E32  320E               	rrcf	___xxtofl@arg+3,f,c
 14341  002E34  320D               	rrcf	___xxtofl@arg+2,f,c
 14342  002E36  320C               	rrcf	___xxtofl@arg+1,f,c
 14343  002E38  320B               	rrcf	___xxtofl@arg,f,c
 14344  002E3A                     i2l1401:
 14345  002E3A  0E00               	movlw	0
 14346  002E3C  140B               	andwf	___xxtofl@arg,w,c
 14347  002E3E  6E05               	movwf	??___xxtofl& (0+255),c
 14348  002E40  0E00               	movlw	0
 14349  002E42  140C               	andwf	___xxtofl@arg+1,w,c
 14350  002E44  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 14351  002E46  0E00               	movlw	0
 14352  002E48  140D               	andwf	___xxtofl@arg+2,w,c
 14353  002E4A  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 14354  002E4C  0EFF               	movlw	255
 14355  002E4E  140E               	andwf	___xxtofl@arg+3,w,c
 14356  002E50  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 14357  002E52  5005               	movf	??___xxtofl,w,c
 14358  002E54  1006               	iorwf	??___xxtofl+1,w,c
 14359  002E56  1007               	iorwf	??___xxtofl+2,w,c
 14360  002E58  1008               	iorwf	??___xxtofl+3,w,c
 14361  002E5A  B4D8               	btfsc	status,2,c
 14362  002E5C  D007               	goto	i2l5540
 14363  002E5E  D7E1               	goto	i2l5532
 14364  002E60                     i2l5538:
 14365  002E60  060A               	decf	___xxtofl@exp,f,c
 14366  002E62  90D8               	bcf	status,0,c
 14367  002E64  360B               	rlcf	___xxtofl@arg,f,c
 14368  002E66  360C               	rlcf	___xxtofl@arg+1,f,c
 14369  002E68  360D               	rlcf	___xxtofl@arg+2,f,c
 14370  002E6A  360E               	rlcf	___xxtofl@arg+3,f,c
 14371  002E6C                     i2l5540:
 14372  002E6C  BE0D               	btfsc	___xxtofl@arg+2,7,c
 14373  002E6E  D003               	goto	i2u547_40
 14374  002E70  0E02               	movlw	2
 14375  002E72  600A               	cpfslt	___xxtofl@exp,c
 14376  002E74  D7F5               	goto	i2l5538
 14377  002E76                     i2u547_40:
 14378  002E76  A00A               	btfss	___xxtofl@exp,0,c
 14379  002E78  9E0D               	bcf	___xxtofl@arg+2,7,c
 14380  002E7A  90D8               	bcf	status,0,c
 14381  002E7C  320A               	rrcf	___xxtofl@exp,f,c
 14382  002E7E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14383  002E82  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 14384  002E84  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 14385  002E86  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 14386  002E88  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14387  002E8C  6A07               	clrf	??___xxtofl+2,c
 14388  002E8E  6A06               	clrf	??___xxtofl+1,c
 14389  002E90  6A05               	clrf	??___xxtofl,c
 14390  002E92  5005               	movf	??___xxtofl,w,c
 14391  002E94  120B               	iorwf	___xxtofl@arg,f,c
 14392  002E96  5006               	movf	??___xxtofl+1,w,c
 14393  002E98  120C               	iorwf	___xxtofl@arg+1,f,c
 14394  002E9A  5007               	movf	??___xxtofl+2,w,c
 14395  002E9C  120D               	iorwf	___xxtofl@arg+2,f,c
 14396  002E9E  5008               	movf	??___xxtofl+3,w,c
 14397  002EA0  120E               	iorwf	___xxtofl@arg+3,f,c
 14398  002EA2  5009               	movf	___xxtofl@sign,w,c
 14399  002EA4  A4D8               	btfss	status,2,c
 14400  002EA6  AE04               	btfss	___xxtofl@val+3,7,c
 14401  002EA8  D001               	goto	i2l5556
 14402  002EAA  8E0E               	bsf	___xxtofl@arg+3,7,c
 14403  002EAC                     i2l5556:
 14404  002EAC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14405  002EB0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14406  002EB4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14407  002EB8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14408  002EBC  0012               	return		;funcret
 14409  002EBE                     __end_of___xxtofl:
 14410                           	opt callstack 0
 14411                           
 14412 ;; *************** function ___fltol *****************
 14413 ;; Defined at:
 14414 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 14415 ;; Parameters:    Size  Location     Type
 14416 ;;  f1              4   39[COMRAM] unsigned char 
 14417 ;; Auto vars:     Size  Location     Type
 14418 ;;  exp1            1   48[COMRAM] unsigned char 
 14419 ;;  sign1           1   47[COMRAM] unsigned char 
 14420 ;; Return value:  Size  Location     Type
 14421 ;;                  4   39[COMRAM] long 
 14422 ;; Registers used:
 14423 ;;		wreg, status,2, status,0
 14424 ;; Tracked objects:
 14425 ;;		On entry : 0/0
 14426 ;;		On exit  : 0/0
 14427 ;;		Unchanged: 0/0
 14428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14432 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14433 ;;Total ram usage:       10 bytes
 14434 ;; Hardware stack levels used:    1
 14435 ;; This function calls:
 14436 ;;		Nothing
 14437 ;; This function is called by:
 14438 ;;		_echo
 14439 ;; This function uses a non-reentrant model
 14440 ;;
 14441                           
 14442                           	psect	text59
 14443  0034D2                     __ptext59:
 14444                           	opt callstack 0
 14445  0034D2                     ___fltol:
 14446                           	opt callstack 14
 14447                           
 14448                           ;incstack = 0
 14449  0034D2  342A               	rlcf	___fltol@f1+2,w,c
 14450  0034D4  342B               	rlcf	___fltol@f1+3,w,c
 14451  0034D6  6E31               	movwf	___fltol@exp1,c
 14452  0034D8  5031               	movf	___fltol@exp1,w,c
 14453  0034DA  A4D8               	btfss	status,2,c
 14454  0034DC  D009               	goto	i2l5460
 14455  0034DE                     i2u531_40:
 14456  0034DE  0E00               	movlw	0
 14457  0034E0  6E28               	movwf	?___fltol,c
 14458  0034E2  0E00               	movlw	0
 14459  0034E4  6E29               	movwf	?___fltol+1,c
 14460  0034E6  0E00               	movlw	0
 14461  0034E8  6E2A               	movwf	?___fltol+2,c
 14462  0034EA  0E00               	movlw	0
 14463  0034EC  6E2B               	movwf	?___fltol+3,c
 14464  0034EE  0012               	return	
 14465  0034F0                     i2l5460:
 14466  0034F0  C028  F02C         	movff	___fltol@f1,??___fltol
 14467  0034F4  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
 14468  0034F8  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
 14469  0034FC  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
 14470  003500  0E20               	movlw	32
 14471  003502  D005               	goto	i2u532_40
 14472  003504                     i2u532_45:
 14473  003504  90D8               	bcf	status,0,c
 14474  003506  322F               	rrcf	??___fltol+3,f,c
 14475  003508  322E               	rrcf	??___fltol+2,f,c
 14476  00350A  322D               	rrcf	??___fltol+1,f,c
 14477  00350C  322C               	rrcf	??___fltol,f,c
 14478  00350E                     i2u532_40:
 14479  00350E  2EE8               	decfsz	wreg,f,c
 14480  003510  D7F9               	goto	i2u532_45
 14481  003512  502C               	movf	??___fltol,w,c
 14482  003514  6E30               	movwf	___fltol@sign1,c
 14483  003516  8E2A               	bsf	___fltol@f1+2,7,c
 14484  003518  0EFF               	movlw	255
 14485  00351A  1628               	andwf	___fltol@f1,f,c
 14486  00351C  0EFF               	movlw	255
 14487  00351E  1629               	andwf	___fltol@f1+1,f,c
 14488  003520  0EFF               	movlw	255
 14489  003522  162A               	andwf	___fltol@f1+2,f,c
 14490  003524  0E00               	movlw	0
 14491  003526  162B               	andwf	___fltol@f1+3,f,c
 14492  003528  0E96               	movlw	150
 14493  00352A  5E31               	subwf	___fltol@exp1,f,c
 14494  00352C  AE31               	btfss	___fltol@exp1,7,c
 14495  00352E  D00D               	goto	i2l5480
 14496  003530  5031               	movf	___fltol@exp1,w,c
 14497  003532  0A80               	xorlw	128
 14498  003534  0F97               	addlw	151
 14499  003536  A0D8               	btfss	status,0,c
 14500  003538  D7D2               	goto	i2u531_40
 14501  00353A                     i2l5476:
 14502  00353A  90D8               	bcf	status,0,c
 14503  00353C  322B               	rrcf	___fltol@f1+3,f,c
 14504  00353E  322A               	rrcf	___fltol@f1+2,f,c
 14505  003540  3229               	rrcf	___fltol@f1+1,f,c
 14506  003542  3228               	rrcf	___fltol@f1,f,c
 14507  003544  3E31               	incfsz	___fltol@exp1,f,c
 14508  003546  D7F9               	goto	i2l5476
 14509  003548  D00D               	goto	i2u536_40
 14510  00354A                     i2l5480:
 14511  00354A  0E1F               	movlw	31
 14512  00354C  6431               	cpfsgt	___fltol@exp1,c
 14513  00354E  D007               	goto	i2l5488
 14514  003550  D7C6               	goto	i2u531_40
 14515  003552                     i2l5486:
 14516  003552  90D8               	bcf	status,0,c
 14517  003554  3628               	rlcf	___fltol@f1,f,c
 14518  003556  3629               	rlcf	___fltol@f1+1,f,c
 14519  003558  362A               	rlcf	___fltol@f1+2,f,c
 14520  00355A  362B               	rlcf	___fltol@f1+3,f,c
 14521  00355C  0631               	decf	___fltol@exp1,f,c
 14522  00355E                     i2l5488:
 14523  00355E  5031               	movf	___fltol@exp1,w,c
 14524  003560  A4D8               	btfss	status,2,c
 14525  003562  D7F7               	goto	i2l5486
 14526  003564                     i2u536_40:
 14527  003564  5030               	movf	___fltol@sign1,w,c
 14528  003566  B4D8               	btfsc	status,2,c
 14529  003568  D008               	goto	i2l5494
 14530  00356A  1E2B               	comf	___fltol@f1+3,f,c
 14531  00356C  1E2A               	comf	___fltol@f1+2,f,c
 14532  00356E  1E29               	comf	___fltol@f1+1,f,c
 14533  003570  6C28               	negf	___fltol@f1,c
 14534  003572  0E00               	movlw	0
 14535  003574  2229               	addwfc	___fltol@f1+1,f,c
 14536  003576  222A               	addwfc	___fltol@f1+2,f,c
 14537  003578  222B               	addwfc	___fltol@f1+3,f,c
 14538  00357A                     i2l5494:
 14539  00357A  C028  F028         	movff	___fltol@f1,?___fltol
 14540  00357E  C029  F029         	movff	___fltol@f1+1,?___fltol+1
 14541  003582  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
 14542  003586  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
 14543  00358A  0012               	return		;funcret
 14544  00358C                     __end_of___fltol:
 14545                           	opt callstack 0
 14546                           
 14547 ;; *************** function ___fldiv *****************
 14548 ;; Defined at:
 14549 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 14550 ;; Parameters:    Size  Location     Type
 14551 ;;  b               4   14[COMRAM] long 
 14552 ;;  a               4   18[COMRAM] long 
 14553 ;; Auto vars:     Size  Location     Type
 14554 ;;  grs             4   33[COMRAM] unsigned long 
 14555 ;;  rem             4   26[COMRAM] unsigned long 
 14556 ;;  new_exp         2   31[COMRAM] short 
 14557 ;;  aexp            1   38[COMRAM] unsigned char 
 14558 ;;  bexp            1   37[COMRAM] unsigned char 
 14559 ;;  sign            1   30[COMRAM] unsigned char 
 14560 ;; Return value:  Size  Location     Type
 14561 ;;                  4   14[COMRAM] unsigned char 
 14562 ;; Registers used:
 14563 ;;		wreg, status,2, status,0
 14564 ;; Tracked objects:
 14565 ;;		On entry : 0/0
 14566 ;;		On exit  : 0/0
 14567 ;;		Unchanged: 0/0
 14568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14569 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14570 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14571 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14572 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14573 ;;Total ram usage:       25 bytes
 14574 ;; Hardware stack levels used:    1
 14575 ;; This function calls:
 14576 ;;		Nothing
 14577 ;; This function is called by:
 14578 ;;		_echo
 14579 ;; This function uses a non-reentrant model
 14580 ;;
 14581                           
 14582                           	psect	text60
 14583  001C16                     __ptext60:
 14584                           	opt callstack 0
 14585  001C16                     ___fldiv:
 14586                           	opt callstack 14
 14587                           
 14588                           ;incstack = 0
 14589  001C16  5012               	movf	___fldiv@b+3,w,c
 14590  001C18  0B80               	andlw	128
 14591  001C1A  6E1F               	movwf	___fldiv@sign,c
 14592  001C1C  5012               	movf	___fldiv@b+3,w,c
 14593  001C1E  2412               	addwf	___fldiv@b+3,w,c
 14594  001C20  6E26               	movwf	___fldiv@bexp,c
 14595  001C22  BE11               	btfsc	___fldiv@b+2,7,c
 14596  001C24  8026               	bsf	___fldiv@bexp,0,c
 14597  001C26  5026               	movf	___fldiv@bexp,w,c
 14598  001C28  B4D8               	btfsc	status,2,c
 14599  001C2A  D00D               	goto	i2l5288
 14600  001C2C  2826               	incf	___fldiv@bexp,w,c
 14601  001C2E  A4D8               	btfss	status,2,c
 14602  001C30  D008               	goto	i2l5284
 14603  001C32  0E00               	movlw	0
 14604  001C34  6E0F               	movwf	___fldiv@b,c
 14605  001C36  0E00               	movlw	0
 14606  001C38  6E10               	movwf	___fldiv@b+1,c
 14607  001C3A  0E00               	movlw	0
 14608  001C3C  6E11               	movwf	___fldiv@b+2,c
 14609  001C3E  0E00               	movlw	0
 14610  001C40  6E12               	movwf	___fldiv@b+3,c
 14611  001C42                     i2l5284:
 14612  001C42  8E11               	bsf	___fldiv@b+2,7,c
 14613  001C44  D006               	goto	L5
 14614  001C46                     i2l5288:
 14615  001C46  0E00               	movlw	0
 14616  001C48  6E0F               	movwf	___fldiv@b,c
 14617  001C4A  0E00               	movlw	0
 14618  001C4C  6E10               	movwf	___fldiv@b+1,c
 14619  001C4E  0E00               	movlw	0
 14620  001C50  6E11               	movwf	___fldiv@b+2,c
 14621  001C52                     L5:
 14622  001C52  0E00               	movlw	0
 14623  001C54  6E12               	movwf	___fldiv@b+3,c
 14624  001C56  5016               	movf	___fldiv@a+3,w,c
 14625  001C58  0B80               	andlw	128
 14626  001C5A  1A1F               	xorwf	___fldiv@sign,f,c
 14627  001C5C  5016               	movf	___fldiv@a+3,w,c
 14628  001C5E  2416               	addwf	___fldiv@a+3,w,c
 14629  001C60  6E27               	movwf	___fldiv@aexp,c
 14630  001C62  BE15               	btfsc	___fldiv@a+2,7,c
 14631  001C64  8027               	bsf	___fldiv@aexp,0,c
 14632  001C66  5027               	movf	___fldiv@aexp,w,c
 14633  001C68  B4D8               	btfsc	status,2,c
 14634  001C6A  D00D               	goto	i2l5308
 14635  001C6C  2827               	incf	___fldiv@aexp,w,c
 14636  001C6E  A4D8               	btfss	status,2,c
 14637  001C70  D008               	goto	i2l5304
 14638  001C72  0E00               	movlw	0
 14639  001C74  6E13               	movwf	___fldiv@a,c
 14640  001C76  0E00               	movlw	0
 14641  001C78  6E14               	movwf	___fldiv@a+1,c
 14642  001C7A  0E00               	movlw	0
 14643  001C7C  6E15               	movwf	___fldiv@a+2,c
 14644  001C7E  0E00               	movlw	0
 14645  001C80  6E16               	movwf	___fldiv@a+3,c
 14646  001C82                     i2l5304:
 14647  001C82  8E15               	bsf	___fldiv@a+2,7,c
 14648  001C84  D006               	goto	L6
 14649  001C86                     i2l5308:
 14650  001C86  0E00               	movlw	0
 14651  001C88  6E13               	movwf	___fldiv@a,c
 14652  001C8A  0E00               	movlw	0
 14653  001C8C  6E14               	movwf	___fldiv@a+1,c
 14654  001C8E  0E00               	movlw	0
 14655  001C90  6E15               	movwf	___fldiv@a+2,c
 14656  001C92                     L6:
 14657  001C92  0E00               	movlw	0
 14658  001C94  6E16               	movwf	___fldiv@a+3,c
 14659  001C96  5013               	movf	___fldiv@a,w,c
 14660  001C98  1014               	iorwf	___fldiv@a+1,w,c
 14661  001C9A  1015               	iorwf	___fldiv@a+2,w,c
 14662  001C9C  1016               	iorwf	___fldiv@a+3,w,c
 14663  001C9E  A4D8               	btfss	status,2,c
 14664  001CA0  D017               	goto	i2l5322
 14665  001CA2  0E00               	movlw	0
 14666  001CA4  6E0F               	movwf	___fldiv@b,c
 14667  001CA6  0E00               	movlw	0
 14668  001CA8  6E10               	movwf	___fldiv@b+1,c
 14669  001CAA  0E00               	movlw	0
 14670  001CAC  6E11               	movwf	___fldiv@b+2,c
 14671  001CAE  0E00               	movlw	0
 14672  001CB0  6E12               	movwf	___fldiv@b+3,c
 14673  001CB2  0E80               	movlw	128
 14674  001CB4  1211               	iorwf	___fldiv@b+2,f,c
 14675  001CB6  0E7F               	movlw	127
 14676  001CB8  1212               	iorwf	___fldiv@b+3,f,c
 14677  001CBA                     i2l5316:
 14678  001CBA  501F               	movf	___fldiv@sign,w,c
 14679  001CBC  1212               	iorwf	___fldiv@b+3,f,c
 14680  001CBE  C00F  F00F         	movff	___fldiv@b,?___fldiv
 14681  001CC2  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 14682  001CC6  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 14683  001CCA  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 14684  001CCE  0012               	return	
 14685  001CD0                     i2l5322:
 14686  001CD0  5026               	movf	___fldiv@bexp,w,c
 14687  001CD2  A4D8               	btfss	status,2,c
 14688  001CD4  D009               	goto	i2l5330
 14689  001CD6  0E00               	movlw	0
 14690  001CD8  6E0F               	movwf	?___fldiv,c
 14691  001CDA  0E00               	movlw	0
 14692  001CDC  6E10               	movwf	?___fldiv+1,c
 14693  001CDE  0E00               	movlw	0
 14694  001CE0  6E11               	movwf	?___fldiv+2,c
 14695  001CE2  0E00               	movlw	0
 14696  001CE4  6E12               	movwf	?___fldiv+3,c
 14697  001CE6  0012               	return	
 14698  001CE8                     i2l5330:
 14699  001CE8  5027               	movf	___fldiv@aexp,w,c
 14700  001CEA  C026  F017         	movff	___fldiv@bexp,??___fldiv
 14701  001CEE  6A18               	clrf	(??___fldiv+1)& (0+255),c
 14702  001CF0  5E17               	subwf	??___fldiv,f,c
 14703  001CF2  0E00               	movlw	0
 14704  001CF4  5A18               	subwfb	??___fldiv+1,f,c
 14705  001CF6  0E7F               	movlw	127
 14706  001CF8  2417               	addwf	??___fldiv,w,c
 14707  001CFA  6E20               	movwf	___fldiv@new_exp,c
 14708  001CFC  0E00               	movlw	0
 14709  001CFE  2018               	addwfc	??___fldiv+1,w,c
 14710  001D00  6E21               	movwf	___fldiv@new_exp+1,c
 14711  001D02  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 14712  001D06  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 14713  001D0A  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 14714  001D0E  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 14715  001D12  0E00               	movlw	0
 14716  001D14  6E0F               	movwf	___fldiv@b,c
 14717  001D16  0E00               	movlw	0
 14718  001D18  6E10               	movwf	___fldiv@b+1,c
 14719  001D1A  0E00               	movlw	0
 14720  001D1C  6E11               	movwf	___fldiv@b+2,c
 14721  001D1E  0E00               	movlw	0
 14722  001D20  6E12               	movwf	___fldiv@b+3,c
 14723  001D22  0E00               	movlw	0
 14724  001D24  6E22               	movwf	___fldiv@grs,c
 14725  001D26  0E00               	movlw	0
 14726  001D28  6E23               	movwf	___fldiv@grs+1,c
 14727  001D2A  0E00               	movlw	0
 14728  001D2C  6E24               	movwf	___fldiv@grs+2,c
 14729  001D2E  0E00               	movlw	0
 14730  001D30  6E25               	movwf	___fldiv@grs+3,c
 14731  001D32  0E00               	movlw	0
 14732  001D34  6E27               	movwf	___fldiv@aexp,c
 14733  001D36  D028               	goto	i2l1323
 14734  001D38                     i2l5340:
 14735  001D38  5027               	movf	___fldiv@aexp,w,c
 14736  001D3A  B4D8               	btfsc	status,2,c
 14737  001D3C  D011               	goto	i2l5348
 14738  001D3E  90D8               	bcf	status,0,c
 14739  001D40  361B               	rlcf	___fldiv@rem,f,c
 14740  001D42  361C               	rlcf	___fldiv@rem+1,f,c
 14741  001D44  361D               	rlcf	___fldiv@rem+2,f,c
 14742  001D46  361E               	rlcf	___fldiv@rem+3,f,c
 14743  001D48  90D8               	bcf	status,0,c
 14744  001D4A  360F               	rlcf	___fldiv@b,f,c
 14745  001D4C  3610               	rlcf	___fldiv@b+1,f,c
 14746  001D4E  3611               	rlcf	___fldiv@b+2,f,c
 14747  001D50  3612               	rlcf	___fldiv@b+3,f,c
 14748  001D52  BE25               	btfsc	___fldiv@grs+3,7,c
 14749  001D54  800F               	bsf	___fldiv@b,0,c
 14750  001D56  90D8               	bcf	status,0,c
 14751  001D58  3622               	rlcf	___fldiv@grs,f,c
 14752  001D5A  3623               	rlcf	___fldiv@grs+1,f,c
 14753  001D5C  3624               	rlcf	___fldiv@grs+2,f,c
 14754  001D5E  3625               	rlcf	___fldiv@grs+3,f,c
 14755  001D60                     i2l5348:
 14756  001D60  5013               	movf	___fldiv@a,w,c
 14757  001D62  5C1B               	subwf	___fldiv@rem,w,c
 14758  001D64  5014               	movf	___fldiv@a+1,w,c
 14759  001D66  581C               	subwfb	___fldiv@rem+1,w,c
 14760  001D68  5015               	movf	___fldiv@a+2,w,c
 14761  001D6A  581D               	subwfb	___fldiv@rem+2,w,c
 14762  001D6C  5016               	movf	___fldiv@a+3,w,c
 14763  001D6E  581E               	subwfb	___fldiv@rem+3,w,c
 14764  001D70  A0D8               	btfss	status,0,c
 14765  001D72  D009               	goto	i2l5354
 14766  001D74  8C25               	bsf	___fldiv@grs+3,6,c
 14767  001D76  5013               	movf	___fldiv@a,w,c
 14768  001D78  5E1B               	subwf	___fldiv@rem,f,c
 14769  001D7A  5014               	movf	___fldiv@a+1,w,c
 14770  001D7C  5A1C               	subwfb	___fldiv@rem+1,f,c
 14771  001D7E  5015               	movf	___fldiv@a+2,w,c
 14772  001D80  5A1D               	subwfb	___fldiv@rem+2,f,c
 14773  001D82  5016               	movf	___fldiv@a+3,w,c
 14774  001D84  5A1E               	subwfb	___fldiv@rem+3,f,c
 14775  001D86                     i2l5354:
 14776  001D86  2A27               	incf	___fldiv@aexp,f,c
 14777  001D88                     i2l1323:
 14778  001D88  0E19               	movlw	25
 14779  001D8A  6427               	cpfsgt	___fldiv@aexp,c
 14780  001D8C  D7D5               	goto	i2l5340
 14781  001D8E  501B               	movf	___fldiv@rem,w,c
 14782  001D90  101C               	iorwf	___fldiv@rem+1,w,c
 14783  001D92  101D               	iorwf	___fldiv@rem+2,w,c
 14784  001D94  101E               	iorwf	___fldiv@rem+3,w,c
 14785  001D96  B4D8               	btfsc	status,2,c
 14786  001D98  D011               	goto	i2l5366
 14787  001D9A  8022               	bsf	___fldiv@grs,0,c
 14788  001D9C  D00F               	goto	i2l5366
 14789  001D9E                     i2l5360:
 14790  001D9E  90D8               	bcf	status,0,c
 14791  001DA0  360F               	rlcf	___fldiv@b,f,c
 14792  001DA2  3610               	rlcf	___fldiv@b+1,f,c
 14793  001DA4  3611               	rlcf	___fldiv@b+2,f,c
 14794  001DA6  3612               	rlcf	___fldiv@b+3,f,c
 14795  001DA8  BE25               	btfsc	___fldiv@grs+3,7,c
 14796  001DAA  800F               	bsf	___fldiv@b,0,c
 14797  001DAC  90D8               	bcf	status,0,c
 14798  001DAE  3622               	rlcf	___fldiv@grs,f,c
 14799  001DB0  3623               	rlcf	___fldiv@grs+1,f,c
 14800  001DB2  3624               	rlcf	___fldiv@grs+2,f,c
 14801  001DB4  3625               	rlcf	___fldiv@grs+3,f,c
 14802  001DB6  0620               	decf	___fldiv@new_exp,f,c
 14803  001DB8  A0D8               	btfss	status,0,c
 14804  001DBA  0621               	decf	___fldiv@new_exp+1,f,c
 14805  001DBC                     i2l5366:
 14806  001DBC  AE11               	btfss	___fldiv@b+2,7,c
 14807  001DBE  D7EF               	goto	i2l5360
 14808  001DC0  0E00               	movlw	0
 14809  001DC2  6E27               	movwf	___fldiv@aexp,c
 14810  001DC4  AE25               	btfss	___fldiv@grs+3,7,c
 14811  001DC6  D017               	goto	i2l1334
 14812  001DC8  0EFF               	movlw	255
 14813  001DCA  1422               	andwf	___fldiv@grs,w,c
 14814  001DCC  6E17               	movwf	??___fldiv& (0+255),c
 14815  001DCE  0EFF               	movlw	255
 14816  001DD0  1423               	andwf	___fldiv@grs+1,w,c
 14817  001DD2  6E18               	movwf	(??___fldiv+1)& (0+255),c
 14818  001DD4  0EFF               	movlw	255
 14819  001DD6  1424               	andwf	___fldiv@grs+2,w,c
 14820  001DD8  6E19               	movwf	(??___fldiv+2)& (0+255),c
 14821  001DDA  0E7F               	movlw	127
 14822  001DDC  1425               	andwf	___fldiv@grs+3,w,c
 14823  001DDE  6E1A               	movwf	(??___fldiv+3)& (0+255),c
 14824  001DE0  5017               	movf	??___fldiv,w,c
 14825  001DE2  1018               	iorwf	??___fldiv+1,w,c
 14826  001DE4  1019               	iorwf	??___fldiv+2,w,c
 14827  001DE6  101A               	iorwf	??___fldiv+3,w,c
 14828  001DE8  B4D8               	btfsc	status,2,c
 14829  001DEA  D003               	goto	i2l1335
 14830  001DEC                     i2u518_40:
 14831  001DEC  0E01               	movlw	1
 14832  001DEE  6E27               	movwf	___fldiv@aexp,c
 14833  001DF0  D002               	goto	i2l1334
 14834  001DF2                     i2l1335:
 14835  001DF2  B00F               	btfsc	___fldiv@b,0,c
 14836  001DF4  D7FB               	goto	i2u518_40
 14837  001DF6                     i2l1334:
 14838  001DF6  5027               	movf	___fldiv@aexp,w,c
 14839  001DF8  B4D8               	btfsc	status,2,c
 14840  001DFA  D01F               	goto	i2l5386
 14841  001DFC  0E01               	movlw	1
 14842  001DFE  260F               	addwf	___fldiv@b,f,c
 14843  001E00  0E00               	movlw	0
 14844  001E02  2210               	addwfc	___fldiv@b+1,f,c
 14845  001E04  2211               	addwfc	___fldiv@b+2,f,c
 14846  001E06  2212               	addwfc	___fldiv@b+3,f,c
 14847  001E08  A012               	btfss	___fldiv@b+3,0,c
 14848  001E0A  D017               	goto	i2l5386
 14849  001E0C  C00F  F017         	movff	___fldiv@b,??___fldiv
 14850  001E10  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 14851  001E14  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 14852  001E18  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 14853  001E1C  341A               	rlcf	??___fldiv+3,w,c
 14854  001E1E  321A               	rrcf	??___fldiv+3,f,c
 14855  001E20  3219               	rrcf	??___fldiv+2,f,c
 14856  001E22  3218               	rrcf	??___fldiv+1,f,c
 14857  001E24  3217               	rrcf	??___fldiv,f,c
 14858  001E26  C017  F00F         	movff	??___fldiv,___fldiv@b
 14859  001E2A  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 14860  001E2E  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 14861  001E32  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 14862  001E36  4A20               	infsnz	___fldiv@new_exp,f,c
 14863  001E38  2A21               	incf	___fldiv@new_exp+1,f,c
 14864  001E3A                     i2l5386:
 14865  001E3A  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14866  001E3C  D010               	goto	i2l5390
 14867  001E3E  5021               	movf	___fldiv@new_exp+1,w,c
 14868  001E40  E103               	bnz	i2u522_40
 14869  001E42  2820               	incf	___fldiv@new_exp,w,c
 14870  001E44  A0D8               	btfss	status,0,c
 14871  001E46  D00B               	goto	i2l5390
 14872  001E48                     i2u522_40:
 14873  001E48  0E00               	movlw	0
 14874  001E4A  6E21               	movwf	___fldiv@new_exp+1,c
 14875  001E4C  6820               	setf	___fldiv@new_exp,c
 14876  001E4E  0E00               	movlw	0
 14877  001E50  6E0F               	movwf	___fldiv@b,c
 14878  001E52  0E00               	movlw	0
 14879  001E54  6E10               	movwf	___fldiv@b+1,c
 14880  001E56  0E00               	movlw	0
 14881  001E58  6E11               	movwf	___fldiv@b+2,c
 14882  001E5A  0E00               	movlw	0
 14883  001E5C  6E12               	movwf	___fldiv@b+3,c
 14884  001E5E                     i2l5390:
 14885  001E5E  BE21               	btfsc	___fldiv@new_exp+1,7,c
 14886  001E60  D005               	goto	i2u523_40
 14887  001E62  5021               	movf	___fldiv@new_exp+1,w,c
 14888  001E64  E111               	bnz	i2l5394
 14889  001E66  0420               	decf	___fldiv@new_exp,w,c
 14890  001E68  B0D8               	btfsc	status,0,c
 14891  001E6A  D00E               	goto	i2l5394
 14892  001E6C                     i2u523_40:
 14893  001E6C  0E00               	movlw	0
 14894  001E6E  6E21               	movwf	___fldiv@new_exp+1,c
 14895  001E70  0E00               	movlw	0
 14896  001E72  6E20               	movwf	___fldiv@new_exp,c
 14897  001E74  0E00               	movlw	0
 14898  001E76  6E0F               	movwf	___fldiv@b,c
 14899  001E78  0E00               	movlw	0
 14900  001E7A  6E10               	movwf	___fldiv@b+1,c
 14901  001E7C  0E00               	movlw	0
 14902  001E7E  6E11               	movwf	___fldiv@b+2,c
 14903  001E80  0E00               	movlw	0
 14904  001E82  6E12               	movwf	___fldiv@b+3,c
 14905  001E84  0E00               	movlw	0
 14906  001E86  6E1F               	movwf	___fldiv@sign,c
 14907  001E88                     i2l5394:
 14908  001E88  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 14909  001E8C  A026               	btfss	___fldiv@bexp,0,c
 14910  001E8E  D002               	goto	i2l5400
 14911  001E90  8E11               	bsf	___fldiv@b+2,7,c
 14912  001E92  D001               	goto	i2l5402
 14913  001E94                     i2l5400:
 14914  001E94  9E11               	bcf	___fldiv@b+2,7,c
 14915  001E96                     i2l5402:
 14916  001E96  90D8               	bcf	status,0,c
 14917  001E98  3026               	rrcf	___fldiv@bexp,w,c
 14918  001E9A  6E12               	movwf	___fldiv@b+3,c
 14919  001E9C  D70E               	goto	i2l5316
 14920  001E9E                     __end_of___fldiv:
 14921                           	opt callstack 0
 14922                           
 14923                           	psect	rparam
 14924  0000                     
 14925                           	psect	temp
 14926  00006E                     btemp:
 14927                           	opt callstack 0
 14928  00006E                     	ds	1
 14929  0000                     int$flags	set	btemp
 14930  0000                     wtemp8	set	btemp+1
 14931  0000                     ttemp5	set	btemp+1
 14932  0000                     ttemp6	set	btemp+4
 14933  0000                     ttemp7	set	btemp+8
 14934                           tosu	equ	0xFFF
 14935                           tosh	equ	0xFFE
 14936                           tosl	equ	0xFFD
 14937                           stkptr	equ	0xFFC
 14938                           pclatu	equ	0xFFB
 14939                           pclath	equ	0xFFA
 14940                           pcl	equ	0xFF9
 14941                           tblptru	equ	0xFF8
 14942                           tblptrh	equ	0xFF7
 14943                           tblptrl	equ	0xFF6
 14944                           tablat	equ	0xFF5
 14945                           prodh	equ	0xFF4
 14946                           prodl	equ	0xFF3
 14947                           indf0	equ	0xFEF
 14948                           postinc0	equ	0xFEE
 14949                           postdec0	equ	0xFED
 14950                           preinc0	equ	0xFEC
 14951                           plusw0	equ	0xFEB
 14952                           fsr0h	equ	0xFEA
 14953                           fsr0l	equ	0xFE9
 14954                           wreg	equ	0xFE8
 14955                           indf1	equ	0xFE7
 14956                           postinc1	equ	0xFE6
 14957                           postdec1	equ	0xFE5
 14958                           preinc1	equ	0xFE4
 14959                           plusw1	equ	0xFE3
 14960                           fsr1h	equ	0xFE2
 14961                           fsr1l	equ	0xFE1
 14962                           bsr	equ	0xFE0
 14963                           indf2	equ	0xFDF
 14964                           postinc2	equ	0xFDE
 14965                           postdec2	equ	0xFDD
 14966                           preinc2	equ	0xFDC
 14967                           plusw2	equ	0xFDB
 14968                           fsr2h	equ	0xFDA
 14969                           fsr2l	equ	0xFD9
 14970                           status	equ	0xFD8


Data Sizes:
    Strings     619
    Constant    23
    Data        5
    BSS         240
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55     109
    BANK0           128    127     128
    BANK1           256    217     247
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_65(CODE[10]), STR_64(CODE[11]), STR_63(CODE[11]), STR_62(CODE[12]), 
		 -> STR_61(CODE[16]), STR_60(CODE[16]), STR_59(CODE[14]), STR_58(CODE[17]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1761_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_65(CODE[10]), STR_64(CODE[11]), STR_63(CODE[11]), STR_62(CODE[12]), 
		 -> STR_61(CODE[16]), STR_60(CODE[16]), STR_59(CODE[14]), STR_58(CODE[17]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_65(CODE[10]), STR_64(CODE[11]), STR_63(CODE[11]), STR_62(CODE[12]), 
		 -> STR_61(CODE[16]), STR_60(CODE[16]), STR_59(CODE[14]), STR_58(CODE[17]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_65(CODE[10]), STR_64(CODE[11]), STR_63(CODE[11]), STR_62(CODE[12]), 
		 -> STR_61(CODE[16]), STR_60(CODE[16]), STR_59(CODE[14]), STR_58(CODE[17]), 
		 -> STR_57(CODE[12]), STR_56(CODE[10]), STR_55(CODE[10]), STR_54(CODE[13]), 
		 -> STR_53(CODE[8]), STR_52(CODE[3]), STR_51(CODE[17]), STR_50(CODE[15]), 
		 -> STR_49(CODE[15]), STR_48(CODE[12]), STR_47(CODE[17]), STR_46(CODE[12]), 
		 -> STR_45(CODE[15]), STR_44(CODE[18]), STR_43(CODE[17]), STR_42(CODE[12]), 
		 -> STR_41(CODE[15]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[14]), 
		 -> STR_37(CODE[14]), STR_36(CODE[17]), STR_35(CODE[3]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[3]), STR_31(CODE[9]), STR_30(CODE[17]), 
		 -> STR_29(CODE[15]), STR_28(CODE[15]), STR_27(CODE[12]), STR_26(CODE[10]), 
		 -> STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[12]), STR_20(CODE[11]), STR_19(CODE[13]), STR_18(CODE[8]), 
		 -> STR_17(CODE[10]), STR_16(CODE[17]), STR_15(CODE[10]), STR_14(CODE[16]), 
		 -> STR_13(CODE[10]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[17]), 
		 -> STR_9(CODE[5]), STR_8(CODE[10]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    min@array	PTR int  size(2) Largest target is 8
		 -> a(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_echo
    _echo->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_UI_main
    _ultrasonic_main->_print_echo
    _print_echo->_printf
    _start->_I2C_Master_Init
    _number_deploy->_printf
    _brake->_printf
    _backwards->_I2C_Master_Write
    _stepper2_back->_full_drive
    _stepper2->_full_drive
    _stepper->_full_drive
    _full_drive->_printf
    _servo->_servoRotate0
    _servo->_servoRotate180
    _UI_main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _abs->___aomod
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv
    _I2C_Master_RepeatedStart->_I2C_Master_Wait

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UI_main
    _actuators_main->_stepper

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               127   127      0  303766
                                             90 BANK1    127   127      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _UI_main
                             ___wmul
                     _actuators_main
                          _backwards
                              _brake
                            _initLCD
                            _lcdInst
                      _number_deploy
                             _printf
                              _start
                    _ultrasonic_main
 ---------------------------------------------------------------------------------
 (1) _ultrasonic_main                                     14    12      2   48161
                                            124 BANK0      2     0      2
                                              0 BANK1     12    12      0
                                _abs
                            _lcdInst
                                _min
                         _print_echo
                             _printf
                               _trig
 ---------------------------------------------------------------------------------
 (2) _trig                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _print_echo                                           1     1      0   23413
                                            123 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _min                                                 11     7      4     722
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0    2103
                    _I2C_Master_Init
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _number_deploy                                       12     6      6   25411
                                            123 BANK0      2     2      0
                                              0 BANK1     10     4      6
                            ___awdiv
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1245
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _brake                                                2     2      0   24859
                                            123 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _backwards                                            0     0      0    1381
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _actuators_main                                      10     4      6  146548
                                             18 BANK1     10     4      6
                            _initLCD
                            _lcdInst
                             _printf
                              _servo
                            _stepper
                           _stepper2
                      _stepper2_back
                        _system_init
 ---------------------------------------------------------------------------------
 (2) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stepper2_back                                        8     6      2   47834
                                              0 BANK1      8     6      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper2                                            14    12      2   48119
                                              0 BANK1     14    12      2
                         _full_drive
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _stepper                                             18    14      4   24839
                                              0 BANK1     18    14      4
                         _full_drive
 ---------------------------------------------------------------------------------
 (3) _full_drive                                           4     2      2   24164
                                            123 BANK0      4     2      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _servo                                                2     2      0    1134
                                              5 BANK0      2     2      0
                       _servoRotate0
                     _servoRotate180
 ---------------------------------------------------------------------------------
 (3) _servoRotate180                                       5     3      2     567
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _servoRotate0                                         5     3      2     567
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UI_main                                             94    90      4   27030
                                            123 BANK0      4     0      4
                                              0 BANK1     90    90      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___llmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   23255
                                            109 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   17312
                                            101 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   16767
                                             70 BANK0     31    25      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5847
                                             31 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6173
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3817
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1602
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1102
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     273
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1895
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     792
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (10) _send_byte                                           1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (11) _send_nibble                                         1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (12) _pulse_e                                             1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     412
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1381
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     722
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _ISR                                                 2     2      0    3522
                                             53 COMRAM     2     2      0
                               _echo
 ---------------------------------------------------------------------------------
 (16) _echo                                                4     4      0    3522
                                             49 COMRAM     4     4      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     508
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (17) ___fltol                                            10     6      4     533
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            25    17      8    1855
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _UI_main
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___llmod
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   ___wmul
   _actuators_main
     _initLCD
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _send_byte
         _send_nibble
           _pulse_e
       _send_nibble
         _pulse_e
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _servo
       _servoRotate0
       _servoRotate180
     _stepper
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
     _stepper2
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _stepper2_back
       _full_drive
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                   _fputs
                     _fputc
                       _putch
                         _send_byte
                           _send_nibble
                             _pulse_e
                   _strlen
                 _toupper
                   _islower
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _system_init
   _backwards
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _brake
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _number_deploy
     ___awdiv
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _start
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _ultrasonic_main
     _abs
       ___aomod (ARG)
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _min
     _print_echo
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
                 _fputs
                   _fputc
                     _putch
                       _send_byte
                         _send_nibble
                           _pulse_e
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
               _fputs
                 _fputc
                   _putch
                     _send_byte
                       _send_nibble
                         _pulse_e
               _strlen
             _toupper
               _islower
     _trig

 _ISR (ROOT)
   _echo
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D9      F7       7       96.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     284      34        0.0%
DATA                 0      0     284       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 07:39:44 2019

                     ___fldiv@aexp 0027                       ___fldiv@bexp 0026  
                                _a 0061                                  _b 005A  
                                _i 01EC                       ___fldiv@sign 001F  
                      __CFG_CPD$ON 000000                       ___awdiv@sign 0085  
              servoRotate180@servo 0080                ___wmul@multiplicand 0082  
                      __CFG_BORV$3 000000                    ??_number_deploy 00FB  
                stepper2@direction 010D                      servoRotate0@i 0083  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                __end_of_system_init 3DDC  
                              l122 33F6                                l140 33A6  
                              l125 344A                                l134 3304  
                  _ultrasonic_main 250A                                l128 3496  
                              l137 335C                                l519 0290  
                              l636 370C                                l468 2686  
                              l564 0BF6                                l647 1F12  
                              l672 2104                                l649 1F1A  
                              l674 210C                                l766 3900  
                              _GIE 007F97                       __CFG_CPB$OFF 000000  
                              _RB2 007C0A                                _RC1 007C11  
                              _RB3 007C0B                                _RC2 007C12  
                              _RD0 007C18                                _RB4 007C0C  
                              _RD1 007C19                                _RB5 007C0D  
                              _RB6 007C0E                                _RB7 007C0F  
                              _ISR 0008             __size_of_stepper2_back 00A0  
                              _abs 3D76                                _cnt 01F4  
                              _pad 36DC                                _min 2FE4  
                              _sum 0038                     stepper2_back@i 0106  
                              wreg 000FE8                       __CFG_LVP$OFF 000000  
                             ?_ISR 0001                       ___fltol@exp1 0031  
                     __CFG_WDT$OFF 000000                               ?_abs 0092  
                             l1414 3DA0                               l1159 3ACA  
                             l1512 3C7C                               l1445 2D74  
                             l7000 1582                               l7002 1584  
                             l7020 15A4                               l7012 159C  
                             l7004 1594                               l7110 3BCC  
                             ?_pad 0094                               l7040 167A  
                             l7024 15AE                               l7016 15A0  
                             l7008 1598                               l7042 1688  
                             l7026 15F0                               l7108 3BA4  
                             l7038 165C                               l8014 2646  
                             l7072 1850                               l7232 195E  
                             l8032 268C                               l8008 2608  
                             l7082 1898                               l7058 1782  
                             l8210 0270                               l8130 00BC  
                             l8018 2660                               l8026 2676  
                             l8220 02B0                               l8060 26F2  
                             ?_min 0080                               l7430 38B2  
                             l7078 188C                               l8302 06CC  
                             l7406 1C00                               l7326 1AE8  
                             l8070 275E                               l7432 38BE  
                             l6800 2F9C                               l7088 18B0  
                             l8160 015E                               l7248 19CA  
                             l7442 38F2                               l8330 0780  
                             l7522 29D0                               l7602 32A8  
                             l8074 2770                               l8066 272C  
                             l6804 2FC2                               l6644 3A20  
                             l8252 0378                               l8236 0310  
                             l8092 283C                               l7700 31AA  
                             l6750 2B80                               l6742 2B46  
                             l6654 3D10                               l6662 3E7C  
                             l8326 0778                               l7606 32C0  
                             l7630 3696                               l7710 31DE  
                             l6816 3CBE                               l6760 2BDC  
                             l6736 2B1E                               l6664 3E82  
                             l6840 1F34                               l6920 2204  
                             l8336 079A                               l7368 1B80  
                             l7288 1A5E                               l7552 2A6E  
                             l7536 2A0E                               l7528 29F6  
                             l8440 0902                               l8432 08A4  
                             l6658 3D28                               l6682 36F4  
                             l6826 1EF6                               l6906 2176  
                             l8346 0808                               l7722 2372  
                             l8610 0ECA                               l8602 0E6E  
                             l8506 0A76                               l6748 2B6C  
                             l6764 2BF2                               l6780 2EEC  
                             l6692 3730                               l6844 1F44  
                             l8348 0816                               l8276 051A  
                             l8188 01EA                               l7820 3844  
                             l8620 0F2A                               l8540 0B5C  
                             l8524 0B0A                               l6950 2C4E  
                             l6790 2F3E                               l6686 3704  
                             l6854 203E                               l7566 2AC4  
                             l7558 2A94                               l7582 3214  
                             l7822 384C                               l7814 382E  
                             l8614 0EDA                               l8606 0E7E  
                             l8470 09D8                               l6960 2C98  
                             l6952 2C52                               l6768 2C18  
                             l6784 2F10                               l6696 375C  
                             l6688 3716                               l6944 22F2  
                             l6928 227C                               l7592 325C  
                             l7840 3884                               l7832 386C  
                             l7808 381E                               l7760 2490  
                             l7752 245C                               l7744 2418  
                             l7736 23E4                               l7728 23A0  
                             l7680 3142                               l8624 0F30  
                             l8552 0BB8                               l8456 095C  
                             l7850 3A94                               l6970 2CB6  
                             l6874 20A4                               l8298 06A6  
                             l7586 322C                               l7690 3176  
                             l8546 0B82                               l6972 2CDE  
                             l6796 2F86                               l6788 2F2A  
                             l6892 2122                               l7836 3876  
                             l7668 3108                               l8548 0B96  
                             l8628 0F54                               l6966 2CA8  
                             l6878 20BC                               l7782 301A  
                             l8558 0BDE                               l8486 0A20  
                             l8478 09FC                               l7856 3ABC  
                             l7848 3A88                               l6976 2D14  
                             l6968 2CB0                               l7936 2974  
                             l7784 3024                               l7768 24D4  
                             l8648 0FEC                               l6898 2154  
                             l8498 0A4A                               l7796 30D2  
                             l7958 299C                               l7878 28B0  
                             l7798 30D6                               l7982 257E  
                             l7984 2586                               l7988 2596  
                             STR_1 FFD9                               STR_2 FF0A  
                             STR_3 FF74                               STR_4 FFD9  
                             STR_5 FFCF                               STR_6 FFF4  
                             STR_7 FEE2                               STR_8 FFD9  
                             STR_9 FFFA                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u7011 2B4C                               u7030 2B84  
                             _RBIE 007F93                               u7200 1F2E  
                             _RBIF 007F90                               u7130 3CBA  
                             u7210 204E                               u8010 2A66  
                             u7140 1EC8                               u7300 20F8  
                             u8020 2A94                               u8100 3106  
                             u7230 2070                               u7150 1ECA  
                             u8030 2ABC                               u7231 206E  
                             u7240 207E                               u7400 228E  
                             u7320 2172                               u8040 2AEA  
                             u8200 23B0                               u7090 2F42  
                             u7250 2082                               u7330 21A8  
                             u8210 23C0                               u9010 0888  
                             u7500 2D46                               u7180 1F08  
                             u7420 22B0                               u7340 21AA  
                             u8300 24E4                               u8220 23F4  
                             u7421 22AE                               u9005 086E  
                             u7270 208E                               u7430 22BE  
                             u8310 24F4                               u8230 2404  
                             u8150 31F4                               u9030 08C0  
                             u9031 08BE                               u9007 0870  
                             u6800 3A60                               u7440 22C2  
                             u7360 21E2                               u7600 16D0  
                             u8320 300A                               u8240 2428  
                             u8160 2344                               u9200 0BF2  
                             u9025 08AC                               u7370 21E4  
                             u8090 36BE                               u8250 2438  
                             u8170 2354                               u9027 08AE  
                             u6900 3E38                               u7620 1704  
                             u7700 3438                               u8420 3850  
                             u8260 246C                               u8180 2382  
                             u7470 2C94                               u6910 3E3A  
                             u6830 3E06                               u7390 2258  
                             u8270 247C                               u8190 2392  
                             u9150 0B12                               u6920 3D6E  
                             u6840 3E08                               u7640 17B6  
                             u7720 3484                               u7800 33E2  
                             u8600 2722                               u8360 3092  
                             u8280 24A0                               u8520 2600  
                             u9160 0B34                               u7490 2D44  
                             u6850 3D86                               u6930 3D70  
                             u8610 2754                               u8370 30B8  
                             u8290 24B0                               u8530 2618  
                             u9170 0B44                               u7395 2246  
                             u9307 0DEA                               u8460 3A98  
                             u6780 3A18                               u6940 3C64  
                             u7580 16C2                               u7740 34D0  
                             u8540 2628                               u9180 0B96  
                             u6765 3ECA                               u9317 0E26  
                             u7910 38C2                               u6766 3ECC  
                             u6950 3C66                               u7590 16C4  
                             u8550 2658                               u9190 0BA6  
                             u9407 269A                               u9327 0F3C  
                             u9247 091A                               u7760 334A  
                             u8640 284C                               u9417 26C6  
                             u9337 0F66                               u9257 0944  
                             u6970 3E6A                               u8570 268C  
                             u9507 232A                               u9427 311E  
                             u9347 0F8A                               u9267 0A58  
                             u6980 3E6C                               u8820 038A  
                             u8740 0200                               u7780 3394  
                             u9517 27E8                               u9437 3134  
                             u9357 0FAA                               u9277 0A8C  
                             u8830 039A                               u7935 3B06  
                             u8831 0398                               u9607 3270  
                             u9527 281C                               u9447 3152  
                             u9367 0FCE                               u9287 0ABE  
                             u7960 29C8                               u7945 3EEE  
                             u9617 1906                               u9537 35F4  
                             u9457 3168                               u9377 251C  
                             u9297 0C82                               u7946 3EF0  
                             u7970 29F6                               u9707 19C2  
                             u9627 191A                               u9547 3628  
                             u9467 3186                               u9387 2546  
                             u7980 2A06                               u9717 19EC  
                             u9637 192E                               u9557 2876  
                             u9477 319C                               u9397 25CE  
                             u8790 02AC                               u7990 2A34  
                             u9807 1ADE                               u9727 1A06  
                             u9647 1942                               u9567 28A2  
                             u9487 31BA                               u8880 081C  
                             u9817 1B18                               u9737 1A20  
                             u9657 1956                               u9577 290C  
                             u9497 31D0                               u9907 1BF8  
                             u9827 1B30                               u9747 1A3A  
                             u9667 1972                               u9587 2936  
                             u9917 37B0                               u9837 1B48  
                             u9757 1A54                               u9677 1986  
                             u9597 3658                               u9927 37D4  
                             u9847 1B60                               u9767 1A76  
                             u9687 199A                               u9937 330A  
                             u9857 1B78                               u9777 1A90  
                             u9697 19AE                               u9947 331A  
                             u9867 1B98                               u9787 1AAA  
                             u9957 332E                               u9877 1BB0  
                             u9797 1AC4                               u9967 3366  
                             u9887 1BC8                               u9977 3378  
                             u9897 1BE0                               u9987 33B0  
                             u9997 33C4                               _Pole 0200  
               main@poles_detected 01CF                        main@t_count 01C1  
                             abs@a 0092                               _data 005E  
                             _echo 0FF8                               _dbuf 0280  
 __end_of_I2C_Master_RepeatedStart 3FF6                               _disp 01EE  
                             _atoi 2C3A                               _main 0826  
                             _dtoa 1E9E                               _meas 0050  
                             _keys FD7D                               _send 006D  
                             _tick 0056                               _prec 004C  
                             _sens 0058                               _temp 00FF  
                             _time 01E1                               _nout 0048  
                             pad@i 009B                               pad@p 0098  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 009D                               fsr2l 000FD9  
                             _trig 30F4                               _sumf 0040  
                             btemp 006E                               min@i 0089  
                             _xtoa 20E6                               prodh 000FF4  
                             prodl 000FF3                               start 000E  
          __size_of_actuators_main 0150                      __CFG_IESO$OFF 000000  
                  ___fldiv@new_exp 0020                    __end_of_UI_main 0826  
                  servoRotate180@i 0083                      __CFG_MCLRE$ON 000000  
                     main@act_done 01B9                       ___param_bank 000000  
                            ??_ISR 0036                              ??_abs 0094  
                            ??_pad 009A                              ??_min 0084  
            actuators_main@act_cnt 011A              I2C_Master_Read@ackBit 0081  
                 ?_I2C_Master_Init 008D                   ?_I2C_Master_Read 0001  
                 ?_I2C_Master_Wait 0001                   ?_I2C_Master_Stop 0001  
                            ?_echo 0001                      ___fltol@sign1 0030  
                  __end_of___aodiv 2C3A                              ?_atoi 0087  
                            ?_main 0001                              ?_dtoa 009F  
                  __end_of___aomod 2FE4                    __end_of___fldiv 1E9E  
                  __end_of___awdiv 388E                              _EEADR 000FA9  
                            STR_10 FDC8                              STR_11 FF7F  
                            STR_20 FF5E                              STR_12 FE4D  
                            STR_13 FF89                              STR_21 FF23  
                            STR_14 FE5D                              STR_22 FE3D  
                            STR_30 FDA6                              STR_31 FFE3  
                            STR_23 FFC5                              STR_15 FF93  
                            STR_32 FE2A                              STR_24 FF47  
                            STR_16 FDD9                              STR_40 FD94  
                            STR_33 FDEB                              STR_17 FF9D  
                            STR_41 FE7C                              STR_25 FE6D  
                            STR_34 FFE3                              STR_26 FFC5  
                            STR_18 FFEC                              STR_42 FF3B  
                            STR_50 FEA9                              STR_51 FDA6  
                            STR_43 FDFB                              STR_35 FE2A  
                            STR_27 FF47                              STR_19 FEF0  
                            STR_28 FE6D                              STR_52 FE2A  
                            STR_44 FD94                              STR_60 FE1D  
                            STR_36 FDEA                              STR_45 FE7C  
                            STR_53 FF02                              STR_37 FED4  
                            STR_29 FE8B                              STR_61 FE2D  
                            STR_46 FF3B                              STR_62 FF2F  
                            STR_54 FEFD                              STR_38 FEC6  
                            STR_55 FFBB                              STR_63 FF53  
                            STR_39 FDFB                              STR_47 FDB7  
                            STR_56 FFA7                              STR_64 FF69  
                            STR_48 FF17                              STR_57 FF23  
                            STR_65 FFB1                              STR_49 FE9A  
                            STR_58 FE0C                              STR_59 FEB8  
                  __end_of___fltol 358C                              ?_trig 0001  
                  __end_of___lldiv 3912                              u10007 3402  
                            u10017 340E                              u10107 0228  
                            u10027 341C                              u10117 02C8  
                            u10037 3454                              u10207 3EB0  
                            u10127 0328                              u10047 3468  
                            u10217 3EBA                              u10137 03B4  
                            u10057 34A0                              u10147 0540  
                            u10067 34B2                              u10157 070E  
                            u10077 007A                              u10167 399E  
                            u10087 011E                              u10177 39B8  
                            u10097 0192                              u10187 39CA  
                  ___awdiv@divisor 0082                              u10197 39EE  
                            ?_xtoa 009F                              _T1CON 000FCD  
                  __end_of___llmod 3ADC                              i2l400 3CF8  
                            i2l427 153A                    ___awdiv@counter 0084  
                     vfpfcnvrt@fmt 00C8                       vfpfcnvrt@llu 00D8  
                            _TMR1H 000FCF                              _TMR1L 000FCE  
                            _PORTB 000F81                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                    __end_of_lcdInst 3FD4  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                  __end_of_initLCD 3A06                     __CFG_EBTRB$OFF 000000  
                            _brake 358C                              _flags 004E  
                            _dists 0069                              _fputc 3A06  
                  __end_of_isalpha 3D76                              _fputs 3D04  
                  __end_of_isdigit 3E72                              _servo 3778  
                            atoi@n 0094                              pad@fp 0094  
                            atoi@s 0087                              _width 004A  
                            _state 01F0                              _putch 3FB4  
                            _start 3BE8                              main@i 01B2  
                            main@k 01BF                              dtoa@d 00A1  
                            dtoa@i 00C1                              dtoa@n 00B9  
                            dtoa@p 00B3                              dtoa@s 00B7  
                            dtoa@w 00B5                    __end_of_islower 3E0E  
                  __end_of_isspace 3CC6                    __end_of_isupper 3E40  
                            tablat 000FF5                    send_nibble@data 0081  
                            plusw2 000FDB                    __end_of_pulse_e 3ECE  
                            ttemp5 006F                              ttemp6 0072  
                            ttemp7 0076                              status 000FD8  
      I2C_Master_Read@receivedByte 0082                    __end_of_stepper 2AF0  
                            wtemp8 006F                              xtoa@c 00C4  
                            xtoa@d 00A1                              xtoa@i 00C2  
                            xtoa@n 00BA                              xtoa@p 00B6  
                            xtoa@w 00B8                              xtoa@x 00A9  
                    _stepper2_back 363C                    __end_of_toupper 3C86  
                 ??_servoRotate180 0082                 __size_ofi2___awdiv 0084  
                   __CFG_PBADEN$ON 000000                       _toupper$1813 008C  
                  __initialization 3B3C                       __end_of_echo 153C  
                      _system_init 3DAA                       __end_of_atoi 2D7E  
                     __end_of_main 0FF8                       __end_of_dtoa 20E6  
                     __end_of_keys FD8E            __end_of_ultrasonic_main 26DE  
                     __end_of_trig 31F6                       __end_of_xtoa 231C  
                           ??_echo 0032                             ??_atoi 0089  
                           ??_main 015A                             ??_dtoa 00A9  
                           ??_trig 0080                             ??_xtoa 00AA  
                    __activetblptr 000002               number_deploy@t_count 0108  
                ?_I2C_Master_Start 0001                  ?_I2C_Master_Write 0081  
             number_deploy@tires_t 0106                 ??_I2C_Master_Start 0081  
                           ?_brake 0001                             _ADCON1 000FC1  
               ??_I2C_Master_Write 0083                       ?_send_nibble 0001  
                           ?_fputc 0084                   ___llmod@dividend 0080  
                           ?_fputs 008D                             _EEDATA 000FA8  
                           _EECON2 000FA7                   ___awdiv@dividend 0080  
                           ?_servo 0001                             ?_putch 0001  
                           ?_start 0001                             _INT1IE 007F83  
                           _INT1IF 007F80                 stepper2@steps2_adj 0100  
                           i2l1401 2E3A                             i2l1323 1D88  
                           i2l1334 1DF6                             i2l1335 1DF2  
                           i2l1394 2DBC                             i2l5400 1E94  
                           i2l5304 1C82                             i2l5402 1E96  
                           i2l5330 1CE8                             i2l5322 1CD0  
                           i2l5340 1D38                             i2l5316 1CBA  
                           i2l5308 1C86                             i2l5360 1D9E  
                           i2l5520 2DCC                             i2l5600 398C  
                           i2l5354 1D86                             i2l5530 2DFC  
                           i2l5348 1D60                             i2l5284 1C42  
                           i2l5460 34F0                             i2l5540 2E6C  
                           i2l5532 2E22                             i2l5390 1E5E  
                           i2l5366 1DBC                             i2l5526 2DEA  
                           i2l5288 1C46                             i2l5480 354A  
                           i2l5528 2DF0                             i2l5800 1372  
                           i2l6272 3CE6                             i2l5394 1E88  
                           i2l5386 1E3A                             i2l5538 2E60  
                           i2l5476 353A                             i2l5556 2EAC  
                           i2l5580 394C                             i2l5732 10D2  
                           i2l5716 1076                             i2l5740 1144  
                           i2l5494 357A                             i2l5486 3552  
                           i2l5582 3954                             i2l5574 3936  
                           i2l5806 13CE                             i2l5750 11C4  
                           i2l5488 355E                             i2l5592 3974  
                           i2l5568 3926                             i2l5840 1520  
                           i2l5808 13E8                             i2l5834 14C4  
                           i2l5818 1468                             i2l5738 112A  
                           i2l5596 397E                             i2l5772 127C  
                           i2l5766 1220                             i2l5774 1296  
                           i2l5784 1316                          ??_UI_main 0100  
                    vfpfcnvrt@done 00E1                             _TMR1ON 007E68  
                   ?_stepper2_back 0100                             _SSPADD 000FC8  
                           _SSPBUF 000FC9                   __end_of___xxtofl 2EBE  
      number_deploy@poles_detected 0102                     __CFG_XINST$OFF 000000  
         _I2C_Master_RepeatedStart 3FEE                       vfprintf@cfmt 00EB  
                        ??___aodiv 0090                          ??___aomod 0090  
                           ___wmul 3F20                          ??___fldiv 0017  
                        ??___awdiv 0084                          ??___fltol 002C  
                        ??___lldiv 0088                          ??___llmod 0088  
                           _opTime 01E8                             clear_0 3B62  
                           clear_1 3B6E                             clear_2 3B7E  
                 ___awdiv@quotient 0086                          ??_lcdInst 0083  
                           _printf 3EF8                             pad@buf 0096  
                           dtoa@fp 009F                             _strlen 3E72  
                   i2___awdiv@sign 0006                          ??_initLCD 0084  
                           fputc@c 0084                             fputs@c 0091  
                           fputs@i 0092                       __pdataCOMRAM 0069  
                           fputs@s 008D                          ??_isalpha 0082  
                        ??_isdigit 0082                  __end_ofi2___awdiv 3996  
                        ??_islower 0082                       __mediumconst FD7C  
                        ??_isspace 0082                             tblptrh 000FF7  
                        ??_isupper 0082                             tblptrl 000FF6  
                           tblptru 000FF8                   __end_of_vfprintf 3BE8  
                        ??_pulse_e 0080                   __end_of_stepper2 32F2  
   ultrasonic_main@min_us_dist_969 010A                          ??_stepper 0104  
                           xtoa@fp 009F                          ??_toupper 0088  
                     ___xxtofl@arg 000B              pulse_e@interruptState 0080  
                     ___xxtofl@exp 000A                       ___xxtofl@val 0001  
                       __accesstop 0080            __end_of__initialization 3B84  
                   _actuators_main 2856                      ___rparam_used 000001  
                       ___fltol@f1 0028                       stepper@i_480 010E  
                     stepper@i_481 0110                       stepper@i_479 010C  
               __size_of_backwards 0026                full_drive@direction 00FE  
                   __pcstackCOMRAM 0001                       stepper@t_dep 0102  
                     stepper@stack 0100                   ?_ultrasonic_main 00FC  
                    __end_of_brake 363C                      __end_of_fputc 3A74  
                    __end_of_fputs 3D40                      __end_of_servo 3808  
                servoRotate0@servo 0080                      __end_of_putch 3FC4  
                    __end_of_start 3C3A                    _key_was_pressed 01F6  
            number_deploy@avg_dist 0100                            ??_brake 00FB  
                          ??_fputc 0088                            ??_fputs 0091  
                          ??_servo 0085                            ??_putch 0083  
                          ??_start 0095                    ??_stepper2_back 0102  
                       __pbssBANK0 00FF                         __pbssBANK1 01D9  
                       __pbssBANK2 0200             __end_of_actuators_main 29A6  
                          ?___wmul 0080                 __size_of_send_byte 0018  
                          ?_printf 00ED             stepper2_back@direction 0103  
                          ?_strlen 0080              __end_of_number_deploy 2856  
                        ?___xxtofl 0001                  __end_of_backwards 3F6E  
               __size_of_vfpfcnvrt 03AA                         _dist_final 0250  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                          _SSPSTAT 000FC7                            _UI_main 0012  
             __size_of_send_nibble 001A                    ?_actuators_main 0112  
                          __Hparam 0000                            __Lparam 0000  
                     ?_system_init 0001                            ___aodiv 2AF0  
                          ___aomod 2EBE                            ___fldiv 1C16  
                          ___awdiv 3808                            ___fltol 34D2  
                          ___lldiv 388E                    __size_of___wmul 0028  
                          ___llmod 3A74                          ?_vfprintf 00E5  
                        ?_stepper2 0100                    __CFG_STVREN$OFF 000000  
                          __pcinit 3B3C                         _full_drive 18E6  
                          __ramtop 1000                            _lcdInst 3FC4  
                          __ptext0 0826                            __ptext1 250A  
                          __ptext2 30F4                            __ptext3 231C  
                          __ptext4 2FE4                            __ptext5 3BE8  
                          __ptext6 26DE                            __ptext7 3808  
                          __ptext8 358C                            __ptext9 3F48  
                  __size_of_printf 0028                    __size_of_strlen 002E  
                          _initLCD 3996                       __size_of_ISR 3CFC  
                          _counter 0060                       __size_of_abs 0034  
                     __size_of_pad 009C                            _isalpha 3D40  
                     __size_of_min 0110                            _isdigit 3E40  
                       ??___xxtofl 0005                            _islower 3DDC  
                          _isspace 3C86                            _isupper 3E0E  
         __size_of_I2C_Master_Init 0060           __size_of_I2C_Master_Read 002A  
         __size_of_I2C_Master_Wait 0014           __size_of_I2C_Master_Stop 0008  
                  _prev_dist_final 01D9                            _pressed 01EA  
                          atoi@neg 008D                            _pulse_e 3EA0  
                          _stepper 29A6                     __pintcode_body 3CC6  
                          _toupper 3C3A               end_of_initialization 3B84  
                          min@size 0082                main@arduino_stopped 01BA  
       ??_I2C_Master_RepeatedStart 0081              __end_of_LCD_SIZE_HORZ FD93  
                __end_of_send_byte 3FA0              __end_of_LCD_SIZE_VERT FD92  
                          fputc@fp 0086                      __Lmediumconst FD7C  
                          int_func 3CC6                            fputs@fp 008F  
        __size_of_I2C_Master_Start 0008          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0084                    ___lldiv@counter 008C  
                __end_of_vfpfcnvrt 18E6                      ?_servoRotate0 0080  
                   main@steps2_adj 01BD                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       ??_vfprintf 00EB                         ??_stepper2 0102  
                          strlen@a 0082                            strlen@s 0080  
                        _PORTAbits 000F80                         _print_echo 231C  
                    stepper2@i_489 0109                      ___xxtofl@sign 0009  
                        _TRISAbits 000F92                          _TRISBbits 000F93  
                        _TRISCbits 000F94                        ___fldiv@grs 0022  
                      ___fldiv@rem 001B                         main@i_1092 01C7  
                       main@i_1084 01B4                          i2___awdiv 3912  
      ultrasonic_main@step2_offset 0106                         main@data_g 01C3  
                    send_byte@data 0082                 i2___awdiv@dividend 0001  
            UI_main@poles_detected 00FD                     ??_servoRotate0 0082  
      number_deploy@tires_detected 0104                        vfpfcnvrt@ap 00CA  
                      vfpfcnvrt@fp 00C6                        vfpfcnvrt@ll 00D0  
                   __end_of___wmul 3F48                        ?_full_drive 00FB  
          __size_of_servoRotate180 00F2                      __pidataCOMRAM 3FF6  
                   __end_of_printf 3F20                     __end_of_strlen 3EA0  
              start_initialization 3B3C                         min@minimum 0087  
               i2___awdiv@quotient 0007                        __end_of_ISR 3D04  
                      __end_of_abs 3DAA                        __end_of_pad 3778  
                      __end_of_min 30F4              stepper2@count_stepper 010B  
                       ?i2___awdiv 0001                  ??_I2C_Master_Init 0091  
                ??_I2C_Master_Read 0081                  ??_I2C_Master_Wait 0080  
                ??_I2C_Master_Stop 0081                  main@prev_avg_dist 01CB  
                   _poles_detected 0052                    ___llmod@divisor 0084  
                  ___llmod@counter 0088                       UI_main@t_dep 00FB  
                      vfprintf@fmt 00E7                           ??___wmul 0084  
         I2C_Master_Init@clockFreq 008D                   __CFG_LPT1OSC$OFF 000000  
             __size_of_system_init 0032                           ??_printf 00F7  
                         ??_strlen 0082                        ?_print_echo 0001  
                        ___fldiv@a 0013                          ___fldiv@b 000F  
         __size_of_ultrasonic_main 01D4                        __pbssCOMRAM 0038  
                    __pcstackBANK0 0080                      __pcstackBANK1 0100  
                 ___aodiv@dividend 0080                   ??_actuators_main 0118  
                __size_of___xxtofl 0140                          _backwards 3F48  
                         ?_UI_main 00FB              __end_of_stepper2_back 36DC  
              __size_of_full_drive 0330                          _atoi$1721 008F  
                        _atoi$1722 0093                          _atoi$1723 0091  
                 _I2C_Master_Start 3FE6                   _I2C_Master_Write 3FD4  
                        _main$1073 01B6                          _main$1074 01B7  
                        _main$1075 01B8                          _dtoa$1237 00B1  
                __CFG_CCP2MX$PORTC 000000                          __pintcode 0008  
                    __pmediumconst FD7C                           ?___aodiv 0080  
                         ?___aomod 0080                           ?___fldiv 000F  
                         ?___awdiv 0080                   ___aodiv@quotient 0092  
                         ?___fltol 0028                           ?___lldiv 0080  
                         ?___llmod 0080                           ?_lcdInst 0001  
                __size_of_vfprintf 0056                  __size_of_stepper2 00FC  
             full_drive@stepper_no 00FB                           ?_initLCD 0001  
                         ?_isalpha 0080                           ?_isdigit 0080  
                         ?_islower 0080                           ?_isspace 0080  
                         ?_isupper 0080               __end_of_servoRotate0 34D2  
                    ??_send_nibble 0081                           ?_pulse_e 0001  
                   __size_of_brake 00B0                        ??i2___awdiv 0005  
                         ?_stepper 0100                     __size_of_fputc 006E  
                   __size_of_fputs 003C                           ?_toupper 0086  
                   __size_of_servo 0090                         ?_backwards 0001  
                   __size_of_putch 0010                     __size_of_start 0052  
                   ___wmul@product 0084                           _LATAbits 000F89  
                         _LATBbits 000F8A                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         UI_main@i 0159                   main@pole_cl_dist 0160  
                        _send_byte 3F88                __size_of_print_echo 01EE  
           __size_of_number_deploy 0178                     _LCD_LINE1_ADDR FD90  
                   _LCD_LINE2_ADDR FD93                     _LCD_LINE3_ADDR FD8F  
                   _LCD_LINE4_ADDR FD8E                           i2u522_40 1E48  
                         i2u523_40 1E6C                           i2u531_40 34DE  
                         i2u532_40 350E                           i2u532_45 3504  
                         i2u518_40 1DEC                           i2u536_40 3564  
                         i2u554_40 3958                           i2u547_40 2E76  
                         i2u563_40 1086                           i2u643_40 3CF0  
                         i2u564_40 1096                           i2u573_40 11D4  
                         i2u574_40 11E4                           i2u583_40 1326  
                         i2u584_40 1336                           i2u593_40 1478  
                         i2u594_40 1488                   __CFG_WDTPS$32768 000000  
       stepper2_back@count_stepper 0104                     _servoRotate180 32F2  
                        _vfpfcnvrt 153C                          _xtoa$1248 00B2  
                        _xtoa$1249 00B4                  ___wmul@multiplier 0080  
                        main@t_dep 01C5                          main@t_det 01C9  
                i2___awdiv@divisor 0003                          main@stack 01BB  
                i2___awdiv@counter 0005                       _isspace$1748 0086  
                       vfpfcnvrt@c 00E0                actuators_main@t_dep 0116  
              actuators_main@stack 0112                          copy_data0 3B50  
                ??_ultrasonic_main 0100                    UI_main@keypress 0154  
           __end_of_LCD_LINE1_ADDR FD91                   __size_of_UI_main 0814  
           __end_of_LCD_LINE2_ADDR FD94             __end_of_LCD_LINE3_ADDR FD90  
           __end_of_LCD_LINE4_ADDR FD8F                __end_of_send_nibble 3F88  
                       _EECON1bits 000FA6                         ?_send_byte 0001  
                      UI_main@Pole 0104                           __Hrparam 0000  
                      UI_main@tick 0155                         vfprintf@ap 00E9  
                         __Lrparam 0000                         vfprintf@fp 00E5  
               __CFG_BOREN$SBORDIS 000000             __end_of_servoRotate180 33E4  
                 __size_of___aodiv 014A  __size_of_I2C_Master_RepeatedStart 0008  
                 __size_of___aomod 0126                   __size_of___fldiv 0288  
                 __size_of___awdiv 0086          ?_I2C_Master_RepeatedStart 0001  
                 __size_of___fltol 00BA                   __size_of___lldiv 0084  
                 __size_of___llmod 0068                       ??_full_drive 00FD  
                       ?_vfpfcnvrt 00C6                    ___aodiv@divisor 0088  
                  ___aodiv@counter 0090                   __size_of_lcdInst 0010  
         actuators_main@steps2_adj 0114                      _number_deploy 26DE  
                  _I2C_Master_Init 3ADC                    _I2C_Master_Read 3ECE  
                 __size_of_initLCD 0070                           ___xxtofl 2D7E  
                  _I2C_Master_Wait 3FA0                    _I2C_Master_Stop 3FDE  
                 __size_of_isalpha 0036                   __size_of_isdigit 0032  
                 __size_of_islower 0032                   __size_of_isspace 0040  
                         __ptext10 2856                           __ptext11 3DAA  
                         __ptext20 3EF8                           __ptext12 363C  
                         __ptext21 3B92                           __ptext13 31F6  
                         __ptext30 3E72                           __ptext22 153C  
                         __ptext14 29A6                           __ptext31 3D04  
                         __ptext23 20E6                           __ptext15 18E6  
                         __ptext40 3F20                           __ptext32 3A06  
                         __ptext24 3C3A                           __ptext16 3778  
                         __ptext41 3996                           __ptext33 3FB4  
                         __ptext25 3DDC                           __ptext17 32F2  
                         __ptext50 3ECE                           __ptext42 3FC4  
                         __ptext34 3D76                           __ptext26 3E0E  
                         __ptext18 33E4                           __ptext51 3ADC  
                         __ptext43 3F88                           __ptext35 2EBE  
                         __ptext27 3D40                           __ptext19 0012  
                         __ptext60 1C16                           __ptext52 388E  
                         __ptext44 3F6E                           __ptext36 2AF0  
                         __ptext28 1E9E                           __ptext53 3FEE  
                         __ptext45 3EA0                           __ptext37 2C3A  
                         __ptext29 36DC                           __ptext54 3FA0  
                         __ptext46 3A74                           __ptext38 3C86  
                         __ptext47 3FD4                           __ptext39 3E40  
                         __ptext56 0FF8                           __ptext48 3FDE  
                         __ptext57 3912                           __ptext49 3FE6  
                         __ptext58 2D7E                           __ptext59 34D2  
                 __size_of_isupper 0032                           _avg_dist 0044  
                 __size_of_pulse_e 002E                        ??_backwards 0083  
                 __size_of_stepper 014A                   __size_of_toupper 004C  
                    __size_of_echo 0544                      __size_of_atoi 0144  
                    __size_of_main 07D2                      __size_of_dtoa 0248  
          stepper2_back@steps2_adj 0100                      __size_of_trig 0102  
                    __size_of_xtoa 0236                 __end_of_full_drive 1C16  
                         _keypress 005F                           _temp_int 01F2  
                  ?_servoRotate180 0080                           int$flags 006E  
                         _vfprintf 3B92                           main@Pole 0162  
                         _stepper2 31F6                           main@data 01D1  
                        printf@fmt 00ED        I2C_Master_Write@byteToWrite 0081  
                 ___aomod@dividend 0080              __size_of_servoRotate0 00EE  
                         min@array 0080                       ??_print_echo 00FB  
                   ?_number_deploy 0100                          putch@data 0083  
         __end_of_I2C_Master_Start 3FEE                     _vfpfcnvrt$1263 00E3  
         __end_of_I2C_Master_Write 3FDE                         _INTCONbits 000FF2  
            ultrasonic_main@sensed 0104                           isalpha@c 0080  
                         isdigit@c 0080                          stepper2@i 0107  
                      _send_nibble 3F6E                           intlevel2 0000  
                    _LCD_SIZE_HORZ FD92                           islower@c 0080  
                    _LCD_SIZE_VERT FD91                           isspace@c 0080  
                 ___lldiv@dividend 0080                        ??_send_byte 0082  
                         isupper@c 0080                     _tires_deployed 0054  
               __end_of_print_echo 250A                      ??_system_init 0080  
                     _servoRotate0 33E4                           printf@ap 00F9  
          __end_of_I2C_Master_Init 3B3C                    ___aomod@divisor 0088  
          __end_of_I2C_Master_Read 3EF8            __end_of_I2C_Master_Wait 3FB4  
          __end_of_I2C_Master_Stop 3FE6                        ??_vfpfcnvrt 00CC  
                      lcdInst@data 0083                    ___aomod@counter 0090  
                         stepper@i 010A          ultrasonic_main@steps2_adj 0108  
                 ___lldiv@quotient 0088                           toupper@c 0086  
                      _SSPCON1bits 000FC6                        _SSPCON2bits 000FC5  
                      _timer_count 005C                       ___aodiv@sign 0091  
                     ___aomod@sign 0091               stepper@count_stepper 0108  
